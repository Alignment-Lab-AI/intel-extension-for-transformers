:py:mod:`intel_extension_for_transformers.backends.neural_engine.compile.ops`
=============================================================================

.. py:module:: intel_extension_for_transformers.backends.neural_engine.compile.ops

.. autoapi-nested-parse::

   The module of the neural engine operators.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   all/index.rst
   assert/index.rst
   batch_matmul/index.rst
   batch_matmul_v2/index.rst
   bias_add/index.rst
   cast/index.rst
   concat/index.rst
   conv/index.rst
   empty_ops/index.rst
   expand_dims/index.rst
   fused_batch_matmul_v2/index.rst
   fused_batch_norm_v3/index.rst
   fused_gemm/index.rst
   fused_matmul/index.rst
   gather/index.rst
   gather_elements/index.rst
   gelu/index.rst
   gemm/index.rst
   iterator_get_next/index.rst
   iterator_v2/index.rst
   layer_normalization/index.rst
   map_and_batch_dataset/index.rst
   matmul/index.rst
   mean/index.rst
   mkl_layer_norm/index.rst
   model_dataset/index.rst
   one_hot/index.rst
   onnx_input/index.rst
   op/index.rst
   optimize_dataset/index.rst
   pack/index.rst
   placeholder/index.rst
   quantize_linear/index.rst
   quantize_v2/index.rst
   quantized_fused_matmul_and_dequantize/index.rst
   quantized_matmul_with_bias_and_dequantize/index.rst
   reduce_mean/index.rst
   reduce_sum/index.rst
   reshape/index.rst
   scatter_elements/index.rst
   softmax/index.rst
   split/index.rst
   squeeze/index.rst
   strided_slice/index.rst
   tensor/index.rst
   top_k/index.rst
   transpose/index.rst
   unpack/index.rst
   unsqueeze/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator



Functions
~~~~~~~~~

.. autoapisummary::

   intel_extension_for_transformers.backends.neural_engine.compile.ops.operator_registry



Attributes
~~~~~~~~~~

.. autoapisummary::

   intel_extension_for_transformers.backends.neural_engine.compile.ops.OPERATORS



.. py:class:: Operator

   Bases: :py:obj:`object`

   The class of neural engine operator.

   .. py:property:: name

      Get the operator name.

   .. py:property:: op_type

      Get op_type.

   .. py:property:: input_tensors

      Get input_tensors.

   .. py:property:: output_tensors

      Get output tensor.

   .. py:property:: attr

      Get attr.

   .. py:property:: config

      Get the op config in the graph.

   .. py:method:: set_attr(framework, node)

      Attr initialization.


   .. py:method:: extract(framework, node, model, nodes_dict)

      Extract the op from framework.


   .. py:method:: construct(name, op_type, input_tensors=[], output_tensors=[], attr=OrderedDict())

      Make the op by set the attributes.



.. py:function:: operator_registry(operator_type)

   The class decorator used to register all Algorithm subclasses.

   :param cls: The class of register.
   :type cls: class
   :param operator_type: The operator registration name(s)
   :type operator_type: str or str list

   :returns: The class of register.
   :rtype: cls


