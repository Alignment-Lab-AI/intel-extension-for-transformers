Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/prune_utils/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/scheduler/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_binary_op/index", "autoapi/test_conv_reshape/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_main/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_ops/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_position_embeddings/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_start_end_logits/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_c_engine", "docs/api_doc/api_engine", "docs/api_doc/api_kernel", "docs/api_doc/engine/compile", "docs/api_doc/engine/dispatcher", "docs/api_doc/kernel/api_c", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/optimization", "docs/api_doc/optimization/benchmark", "docs/api_doc/optimization/distillation", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/optimizer_tf", "docs/api_doc/optimization/pipeline", "docs/api_doc/optimization/trainer", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/xtransformers", "docs/data_augmentation", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Deploy and Integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "xtransformers"], "filenames": ["autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/prune_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/scheduler/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_c_engine.rst", "docs/api_doc/api_engine.rst", "docs/api_doc/api_kernel.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/dispatcher.rst", "docs/api_doc/kernel/api_c.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/optimization.rst", "docs/api_doc/optimization/benchmark.rst", "docs/api_doc/optimization/distillation.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/optimizer_tf.rst", "docs/api_doc/optimization/pipeline.rst", "docs/api_doc/optimization/trainer.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/xtransformers.rst", "docs/data_augmentation.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Deploy and Integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "xtransformers.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "Python APIs", "C++ APIs", "Python APIs", "C++ APIs", "Compile", "Class dispatcher", "Kernels C++ APIs", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Optimization APIs", "Benchmark", "Distillation", "Optimizer", "Optimizer_tf", "Pipeline", "Trainer", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "Intel\u00ae Extension for Transformers", "Data Augmentation", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Deploy and Integration", "Installation", "Add Customized Pattern", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "platform configuration", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "Intel\u00ae Extension for Transformers"], "terms": {"The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 118, 120, 121, 123, 124, 125, 126, 128, 132, 133, 134, 135, 136, 138, 140, 142, 143, 144, 146, 150, 188, 189, 190, 191, 192, 197, 198, 200, 208, 209, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 251, 252, 253], "neural": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 106, 111, 120, 123, 128, 132, 150, 188, 208, 211, 218, 225, 226, 227, 228, 229, 239, 246, 250, 253, 255], "engin": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 106, 111, 120, 121, 138, 150, 188, 192, 195, 208, 211, 225, 226, 228, 231, 236, 242, 246, 255], "start_pipelin": 1, "model": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 33, 43, 44, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 120, 121, 124, 125, 127, 128, 129, 132, 133, 134, 135, 136, 138, 146, 194, 208, 209, 217, 218, 219, 221, 224, 225, 227, 228, 232, 233, 236, 240, 241, 242, 245, 249, 250, 252, 253, 259, 260], "config": [1, 6, 7, 8, 9, 33, 44, 60, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 117, 120, 121, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 142, 143, 188, 209, 217, 218, 219, 221, 223, 226, 228, 231, 236, 247, 251, 252], "none": [1, 6, 7, 9, 13, 60, 115, 116, 117, 118, 120, 121, 124, 125, 127, 128, 129, 130, 133, 134, 138, 140, 142, 143, 144, 145, 146, 199, 208, 217, 218, 219, 220, 226, 249, 250, 252, 253], "pipelin": [1, 120, 121, 124, 125, 135, 188, 200], "interfac": [1, 9, 142, 143, 197, 220, 224, 234], "firstli": [1, 9], "us": [1, 8, 9, 13, 33, 44, 75, 94, 111, 115, 117, 120, 121, 123, 124, 125, 127, 128, 132, 134, 135, 136, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 209, 217, 218, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253], "loader": [1, 9, 112, 227, 229, 232], "get": [1, 6, 7, 8, 9, 12, 13, 33, 44, 60, 111, 115, 117, 118, 120, 124, 125, 127, 128, 132, 134, 136, 144, 146, 220, 225, 227, 228, 229, 231, 232, 236, 241, 243, 248, 251], "comput": [1, 8, 9, 111, 138, 142, 143, 212, 221, 232, 234, 235, 236, 237, 241, 242, 246, 251, 253, 256], "graph": [1, 2, 3, 4, 5, 8, 9, 10, 13, 33, 44, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 218, 225, 229, 232, 239, 241, 243], "correspond": [1, 4, 5, 8, 9, 132, 134, 208, 225, 228, 232, 234, 243, 246, 253], "framework": [1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 114, 115, 120, 121, 129, 138, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 212, 218, 219, 222, 223, 225, 229, 234, 251, 252, 253, 256], "contain": [1, 8, 9, 13, 111, 132, 133, 134, 135, 136, 138, 142, 143, 208, 212, 217, 218, 223, 225, 227, 228, 232, 234, 236, 246, 247, 248, 252, 253, 256], "node": [1, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 111, 146, 220, 232, 233, 245], "edg": [1, 9], "i": [1, 2, 4, 5, 8, 9, 13, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 120, 121, 128, 133, 134, 135, 138, 142, 143, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 200, 208, 209, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 256], "op": [1, 4, 5, 8, 9, 13, 111, 112, 138, 194, 199, 226, 231, 232, 236, 237, 247, 248, 253], "tensor": [1, 4, 5, 6, 7, 8, 9, 13, 33, 44, 111, 112, 132, 134, 136, 138, 142, 143, 194, 199, 223, 225, 226, 228, 229, 231, 241, 246, 247, 252, 253], "Then": [1, 8, 9, 218, 228, 229, 242, 243, 247, 252, 253], "extract": [1, 2, 3, 4, 5, 9, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 225, 227, 229], "pack": [1, 9, 33, 112, 243], "them": [1, 4, 5, 8, 9, 223, 225, 228, 236, 238, 242, 243, 253], "our": [1, 9, 209, 217, 220, 232, 236, 238, 241, 242, 243, 251], "form": [1, 8, 9, 138, 218, 226, 232, 235, 239, 242, 247], "next": [1, 6, 7, 9, 136, 142, 143, 208, 228, 229, 236, 239, 240, 241, 242, 243], "exploit": [1, 9, 232], "abov": [1, 8, 9, 142, 143, 224, 225, 227, 228, 232, 238, 240, 241, 246], "consist": [1, 9], "sub": [1, 8, 9, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 225, 227, 228, 236, 241, 242], "which": [1, 4, 5, 8, 9, 111, 117, 120, 121, 123, 132, 133, 134, 135, 136, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 217, 218, 223, 224, 225, 227, 228, 232, 235, 236, 237, 238, 239, 240, 242, 243, 246, 249, 252, 253], "can": [1, 8, 9, 120, 123, 132, 134, 135, 136, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 209, 217, 218, 220, 223, 225, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 250, 251, 252, 253], "see": [1, 8, 9, 142, 143, 187, 225, 226, 227, 228, 229, 232, 233, 235, 239, 242, 244, 245, 246, 247], "new": [1, 4, 5, 8, 9, 13, 132, 133, 136, 138, 149, 232, 236, 237, 248], "big": [1, 9, 227, 228], "like": [1, 4, 5, 8, 9, 111, 134, 188, 217, 218, 223, 225, 226, 227, 228, 229, 232, 236, 237, 238, 244, 249, 250, 252, 253], "layernorm": [1, 8, 9, 23, 36, 82, 225, 228, 232, 234, 247], "There": [1, 9, 218, 223, 225, 226, 240, 244, 247, 250, 252], "mai": [1, 8, 9, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 227, 232, 238, 239, 240, 241, 242, 243, 247, 253], "have": [1, 8, 9, 111, 132, 134, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 223, 225, 226, 227, 228, 229, 232, 237, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253], "differ": [1, 6, 7, 9, 10, 11, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 117, 120, 125, 126, 132, 208, 217, 218, 221, 223, 225, 227, 228, 229, 232, 235, 240, 243, 249, 250, 252, 253], "flow": [1, 8, 9, 225, 228], "one": [1, 4, 5, 8, 9, 132, 135, 136, 142, 199, 208, 218, 221, 224, 225, 226, 227, 228, 232, 236, 238, 242, 246, 247, 251], "subgraph": [1, 8, 9, 106, 227, 229], "final": [1, 9, 134, 227, 228, 229, 231, 232, 240, 242, 249], "convert": [1, 4, 5, 8, 9, 13, 111, 133, 220, 230, 242, 247, 253], "yaml": [1, 6, 7, 8, 9, 120, 124, 125, 126, 138, 226, 227, 229, 246], "file": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 94, 106, 118, 120, 121, 123, 124, 125, 126, 133, 135, 138, 150, 217, 223, 225, 226, 227, 229, 231, 236, 237, 246, 247, 248], "bin": [1, 6, 7, 9, 223, 226, 227, 229, 244, 246], "configur": [1, 9, 67, 115, 117, 120, 123, 124, 125, 126, 128, 130, 133, 135, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 199, 208, 217, 219, 220, 227, 235, 236, 239], "infer": [1, 6, 7, 9, 10, 11, 114, 120, 128, 138, 143, 188, 209, 219, 221, 224, 225, 226, 227, 228, 229, 238, 240, 242, 250, 253, 257], "base": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 129, 130, 132, 134, 136, 137, 138, 140, 142, 143, 144, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 197, 208, 209, 217, 220, 222, 229, 230, 231, 233, 239, 240, 241, 242, 244, 245, 251, 260], "thi": [2, 8, 132, 134, 135, 136, 138, 142, 143, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 199, 208, 217, 218, 220, 223, 225, 226, 227, 228, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 251, 253], "tensorflow": [2, 5, 14, 15, 16, 17, 18, 20, 24, 26, 31, 34, 35, 37, 38, 39, 41, 42, 45, 46, 47, 49, 51, 52, 54, 58, 59, 63, 111, 115, 120, 121, 128, 146, 221, 222, 223, 232, 253], "onnx": [2, 4, 13, 138, 209, 221, 225, 226, 227, 241, 251, 259], "pleas": [2, 4, 5, 132, 134, 135, 187, 188, 208, 209, 217, 218, 219, 221, 225, 228, 231, 234, 235, 236, 237, 242, 247, 252, 253], "refer": [2, 4, 5, 132, 134, 135, 188, 208, 217, 218, 221, 228, 231, 238, 242, 247, 252, 253], "onnx_extractor": [2, 3, 9, 112], "py": [2, 134, 217, 222, 225, 226, 230, 246], "tf_extractor": [2, 3, 9, 112], "more": [2, 4, 5, 8, 132, 187, 188, 209, 218, 221, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 245, 246, 247], "detail": [2, 8, 208, 209, 212, 214, 218, 219, 221, 224, 225, 226, 227, 228, 231, 232, 233, 234, 238, 244, 245, 247, 252, 253, 256, 258], "object": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 33, 44, 60, 75, 94, 106, 111, 114, 115, 116, 118, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 209, 218, 221, 225, 231, 252], "A": [2, 3, 8, 114, 117, 124, 125, 129, 132, 133, 134, 135, 136, 138, 142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 223, 225, 232, 233, 235, 238, 243, 245, 246, 247], "super": [2, 3, 225, 227], "an": [2, 3, 13, 111, 120, 125, 126, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 209, 217, 219, 220, 221, 223, 225, 226, 227, 228, 231, 232, 235, 236, 237, 240, 243, 248, 249, 251, 259], "oper": [2, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 111, 132, 194, 195, 198, 212, 219, 223, 224, 225, 227, 229, 234, 236, 237, 239, 240, 241, 242, 243, 247, 253, 256], "do": [2, 3, 118, 120, 127, 128, 135, 138, 220, 223, 225, 227, 228, 232, 236, 252, 253], "addit": [2, 3, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 219, 226, 240, 248], "attribut": [2, 3, 4, 5, 8, 44, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 196, 197, 208, 226, 228, 231, 237], "without": [2, 3, 120, 127, 134, 138, 218, 223, 225, 240, 243, 244, 247], "modifi": [2, 3, 6, 7, 8, 135, 143, 223, 226, 229], "topologi": [2, 3], "modul": [3, 7, 9, 10, 33, 75, 125, 131, 208, 229, 230], "all": [4, 5, 6, 7, 8, 9, 33, 44, 75, 94, 112, 132, 135, 138, 142, 143, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 208, 218, 223, 224, 225, 226, 228, 232, 233, 236, 237, 238, 242, 245, 246, 249, 252, 253], "input": [4, 5, 6, 7, 8, 13, 23, 111, 115, 120, 128, 129, 138, 142, 143, 188, 194, 199, 208, 209, 217, 218, 220, 221, 223, 226, 227, 228, 231, 239, 240, 241, 243, 247, 251], "python": [4, 5, 8, 142, 143, 217, 222, 223, 224, 225, 227, 229, 230, 246, 259, 260], "compos": [4, 5, 120, 121, 138, 208, 225, 229, 242], "order": [4, 5, 6, 7, 8, 120, 121, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 217, 225, 226, 232, 235, 240, 242, 243], "origin": [4, 5, 8, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 132, 133, 134, 135, 209, 217, 218, 225, 229, 240, 241, 253], "calcul": [4, 5, 118, 132, 134, 135, 208, 226, 232, 235, 237, 240, 243, 247, 253], "notic": [4, 5, 229, 236, 241, 242], "map": [4, 5, 8, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 132, 134, 138, 188, 194, 208, 218, 235, 253], "between": [4, 5, 142, 143, 199, 208, 218, 240, 243, 247, 253], "For": [4, 5, 8, 13, 132, 187, 188, 208, 209, 221, 225, 227, 228, 232, 233, 234, 236, 238, 241, 242, 243, 244, 245, 251], "relat": [4, 5, 132, 138, 214, 218, 225, 228, 232, 238, 242, 252, 253, 258], "deatil": [4, 5], "api": [4, 5, 6, 7, 135, 188, 209, 223, 227, 228, 229, 231, 232, 236, 237, 251, 256, 259, 260], "onnxextractor": 4, "decor": [4, 5, 13, 33, 44, 75, 94, 111, 132, 134, 136], "graph_def": [4, 5, 111], "ha": [4, 5, 8, 132, 134, 208, 217, 225, 227, 228, 230, 231, 232, 235, 237, 247, 253], "input_tensor": [4, 5, 8, 13, 33, 44, 111, 142, 143, 225, 228], "output_tensor": [4, 5, 8, 13, 33, 44, 111, 225, 228], "record": [4, 5, 208, 226, 227], "sourc": [4, 5, 8, 13, 111, 223, 236, 241, 247], "dest": [4, 5, 8, 13, 111], "name": [4, 5, 6, 7, 8, 13, 33, 44, 60, 75, 94, 111, 115, 116, 120, 123, 128, 129, 130, 132, 134, 136, 140, 144, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 194, 208, 209, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 237, 245, 246, 249, 250, 251, 252, 253], "list": [4, 5, 6, 7, 8, 13, 33, 44, 111, 115, 116, 120, 127, 130, 132, 135, 138, 142, 143, 218, 223, 224, 225, 228, 236, 237, 248, 253], "return": [4, 5, 8, 13, 33, 44, 75, 94, 111, 114, 117, 120, 121, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 136, 138, 142, 143, 208, 217, 225, 228, 232, 236, 237, 249], "paramet": [4, 5, 8, 13, 33, 44, 75, 94, 111, 115, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 142, 143, 146, 199, 208, 218, 226, 232, 249, 252], "onnxmodel": [4, 13], "type": [4, 5, 8, 13, 33, 44, 75, 94, 111, 117, 120, 123, 128, 129, 132, 134, 136, 138, 142, 146, 194, 195, 208, 209, 217, 218, 219, 220, 223, 226, 227, 229, 232, 234, 236, 237, 240, 246, 247, 249, 250, 253], "tensorflowextractor": 5, "tensorflowmodel": [5, 111], "defint": [6, 7], "properti": [6, 7, 33, 44, 60, 115, 120, 121, 124, 125, 127, 128, 138], "execution_opt": [6, 7, 227], "option": [6, 7, 8, 120, 123, 129, 132, 138, 142, 143, 208, 226, 232, 236, 243, 247], "execut": [6, 7, 124, 125, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 197, 208, 227, 231, 234, 236, 237, 240, 242, 244, 247, 253], "weight_data": [6, 7], "weight_byt": [6, 7], "net_config": [6, 7], "network": [6, 7, 134, 208, 218, 223, 225, 226, 228, 239, 252, 253], "dict": [6, 7, 8, 13, 60, 111, 115, 120, 124, 125, 129, 130, 132, 133, 134, 135, 136, 138, 142, 143, 217, 223, 225, 252], "insert_nod": [6, 7], "index": [6, 7, 142, 143, 146, 199, 228, 231, 232], "insert": [6, 7, 8, 229, 231, 232, 236, 237, 253], "ir": [6, 7, 223, 225, 226, 227, 244, 246, 259], "remove_nod": [6, 7], "node_nam": [6, 7, 8, 13, 111, 225, 228], "remov": [6, 7, 143, 237, 252], "from": [6, 7, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 111, 118, 120, 121, 123, 132, 133, 134, 135, 136, 138, 142, 143, 149, 208, 209, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 231, 232, 236, 237, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253], "get_node_id": [6, 7, 225], "id": [6, 7, 8, 120, 123, 143, 146, 237], "accord": [6, 7, 136, 225, 227, 243], "get_node_by_nam": [6, 7], "rename_nod": [6, 7], "old_nam": [6, 7], "new_nam": [6, 7], "change_node_input_tensor": [6, 7], "mode": [6, 7, 116, 120, 130, 137, 194, 208, 226, 230, 240, 242, 247, 248, 253], "change_node_output_tensor": [6, 7], "output": [6, 7, 8, 13, 23, 33, 44, 111, 115, 120, 128, 132, 138, 142, 143, 188, 194, 208, 217, 218, 223, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 243, 247, 251], "get_pre_node_nam": [6, 7], "previou": [6, 7, 120, 121, 138, 223], "get_next_node_nam": [6, 7], "get_tensor_idx": [6, 7], "tensor_nam": [6, 7, 13, 111], "from_output": [6, 7], "true": [6, 7, 115, 120, 132, 138, 140, 142, 143, 144, 188, 194, 208, 209, 220, 221, 224, 225, 226, 227, 236, 237, 241, 244, 247, 249, 250, 253], "modify_node_connect": [6, 7], "dump_tensor": [6, 7], "tensor_list": [6, 7], "dump": [6, 7, 253], "engine_init": [6, 7], "net_info": [6, 7], "b": [6, 7, 8, 13, 142, 199, 225, 232, 235, 238, 239, 242, 243, 246, 247], "pybind": [6, 7], "executor": [6, 7, 114, 194, 209, 223, 225, 226], "input_data": [6, 7, 8, 9, 75, 112, 223], "graph_init": [6, 7, 223, 227], "initi": [6, 7, 8, 13, 33, 44, 115, 120, 124, 125, 133, 134, 138, 142, 143, 199, 208, 236, 237, 251, 252], "exampl": [6, 7, 8, 142, 143, 188, 217, 218, 221, 223, 225, 227, 228, 230, 231, 232, 234, 236, 249, 252, 253, 255], "import": [6, 7, 8, 129, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 209, 217, 218, 221, 223, 225, 227, 229, 232, 236, 237, 249, 250, 251, 252, 253], "newgraph": [6, 7], "conf": [6, 7, 115, 120, 130, 194, 223, 226, 227, 231, 246], "out": [6, 7, 8, 132, 138, 223, 225, 228, 234, 241, 253], "input_0": [6, 7, 223, 227], "input_1": [6, 7, 223, 227], "input_2": [6, 7, 223, 227], "save": [6, 7, 118, 138, 217, 223, 225, 226, 229, 238, 241, 243, 253], "output_dir": [6, 7, 115, 120, 127, 138, 208, 217, 229, 230], "ymal": [6, 7], "graph_dispatch": [6, 7, 227], "tune": [6, 7, 138, 217, 218, 249, 250, 252], "inputs_shap": [6, 7, 227], "dispatch": [6, 7, 190], "get_sparse_nodes_nam": [6, 7], "threshold": [6, 7, 132], "0": [6, 7, 8, 111, 115, 116, 118, 120, 130, 132, 140, 142, 143, 145, 146, 188, 194, 196, 197, 199, 208, 209, 217, 218, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 237, 238, 239, 243, 244, 245, 246, 247, 249, 251, 252, 253], "7": [6, 7, 8, 199, 208, 219, 222, 224, 225, 228, 230, 232, 233, 238, 245, 247, 249, 253], "sparsiti": [6, 7, 115, 120, 132, 134, 135, 136, 233, 246, 247, 252], "spars": [6, 7, 134, 188, 199, 227, 234, 235, 242, 247, 257], "transpose_mode_int8": [6, 7], "node_name_list": [6, 7], "transpos": [6, 7, 9, 33, 112, 132, 142, 143, 226, 227, 234, 235, 238, 240, 243, 247, 257], "innerproduct": [6, 7, 23, 226, 227, 234], "reorder": [6, 7, 23, 240], "util": [8, 13, 111, 115, 117, 120, 133, 217, 225, 232, 235, 240, 243, 247], "names_from_input": 8, "static": [8, 144, 196, 199, 209, 226, 229, 236, 238, 251], "method": [8, 118, 120, 126, 130, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 208, 217, 219, 236, 238, 242, 244, 252, 253], "valid": [8, 120, 128, 133, 134, 138, 188, 217, 218, 232, 258], "string": [8, 13, 111, 118, 120, 124, 125, 126, 132, 133, 134, 135, 136, 146, 194, 198, 217, 218, 225, 227, 228, 231, 237, 249, 250, 252, 253], "defin": [8, 120, 124, 125, 126, 127, 132, 133, 134, 135, 136, 138, 149, 196, 208, 218, 223, 225, 231, 232, 243, 248, 249, 252, 253], "field": [8, 217, 236, 237, 253], "": [8, 13, 33, 44, 111, 132, 134, 135, 138, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 197, 208, 209, 218, 223, 225, 226, 228, 229, 231, 233, 240, 242, 245, 248, 251, 253], "tupl": [8, 117, 129, 142, 143], "In": [8, 120, 121, 132, 134, 138, 142, 208, 223, 225, 226, 227, 228, 229, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 253], "nodedef": [8, 111], "end": [8, 134, 135, 142, 143, 188, 226, 229, 231, 232, 237, 244], "If": [8, 117, 132, 133, 134, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 218, 220, 223, 225, 226, 227, 228, 229, 232, 236, 240, 247, 249, 252, 253], "also": [8, 223, 225, 226, 228, 229, 231, 232, 235, 236, 237, 242, 243, 244, 250, 253], "get_data_dtyp": 8, "data": [8, 60, 132, 188, 199, 208, 219, 223, 225, 227, 229, 230, 231, 235, 236, 237, 240, 243, 247, 253, 258], "const": [8, 13, 111, 194, 196, 197, 198, 199, 231, 234, 236, 237, 238], "dtype": [8, 13, 60, 111, 138, 220, 223, 226, 227, 231], "numpi": [8, 13, 223], "valu": [8, 13, 111, 120, 127, 132, 133, 135, 138, 142, 143, 199, 217, 218, 223, 225, 226, 227, 228, 236, 237, 238, 241, 242, 247, 249, 250, 252, 253], "dtypes_dict": 8, "quant_info_init": 8, "quant": [8, 253], "info": [8, 12, 13, 111, 132, 208, 223, 225, 244], "insert_quant_info": 8, "kei": [8, 13, 111, 133, 135, 138, 142, 143, 188, 226, 227, 228, 236, 237, 238], "get_quant_info": 8, "search_straight_pattern": [8, 232], "input_pattern": [8, 232], "search": [8, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 118, 120, 121, 124, 125, 138, 188, 208, 219, 228], "user": [8, 135, 142, 143, 188, 208, 209, 214, 220, 225, 226, 228, 230, 241, 244, 247, 250, 251, 258], "specifi": [8, 117, 120, 124, 125, 126, 128, 130, 137, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 228, 229, 237, 241, 247, 252, 253], "pattern": [8, 9, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 120, 131, 134, 188, 197, 229, 235, 246, 252], "intern": [8, 228], "grpah": [8, 13, 111], "structur": [8, 134, 219, 223, 225, 227, 239, 242, 246, 252], "attent": [8, 142, 143, 197, 208, 226, 232, 241], "chain": [8, 236, 237], "call": [8, 132, 134, 135, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 220, 225, 227, 228, 235, 236, 237, 242, 243, 253], "must": [8, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 222, 228, 232, 235, 236, 243], "straight": 8, "sequenc": [8, 117, 132, 142, 143, 221, 225, 228, 232, 239], "It": [8, 120, 123, 132, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 218, 225, 226, 227, 228, 231, 232, 239, 241, 242, 247], "mean": [8, 9, 33, 112, 132, 142, 143, 199, 217, 223, 225, 226, 227, 228, 232, 235, 236, 240, 243, 247, 249, 252, 253], "ani": [8, 120, 123, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 232, 251], "otherwis": [8, 225, 227, 247], "op_typ": [8, 13, 33, 44, 111, 225, 227, 228, 237], "element": [8, 132, 135, 138, 225, 232, 234, 239, 241, 243, 247, 257], "could": [8, 197, 223, 225, 226, 228, 229, 232, 238, 246, 252, 253], "mandatori": 8, "ar": [8, 117, 118, 132, 133, 134, 135, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 218, 222, 223, 224, 225, 226, 227, 228, 229, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 252, 253], "while": [8, 134, 223, 228, 232, 242, 247, 253], "stand": [8, 225], "mybe": 8, "mul": [8, 225, 228, 232, 236], "add": [8, 23, 118, 133, 135, 218, 223, 226, 227, 228, 232, 234, 236, 237, 242, 247, 248], "addv2": [8, 23, 232], "equal": [8, 138, 228, 235, 236], "below": [8, 188, 208, 217, 218, 223, 225, 227, 229, 232, 235, 239, 240, 241, 242, 243, 250], "gener": [8, 132, 135, 142, 143, 149, 209, 218, 225, 228, 232, 236, 237, 239, 242, 244, 246, 247, 249, 250, 253], "extractor": [8, 9, 112, 227, 229, 232], "length": [8, 115, 117, 120, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 209, 228, 232, 236, 253], "match": [8, 208, 218, 227, 228, 232, 239, 241], "result": [8, 120, 121, 128, 138, 188, 208, 209, 219, 225, 227, 228, 233, 236, 237, 240, 241, 242, 243, 245, 252, 253], "24": [8, 208, 232, 233, 238, 245], "layer": [8, 117, 132, 133, 135, 142, 143, 208, 226, 232, 236, 239, 241, 252, 257], "each": [8, 120, 121, 134, 138, 142, 143, 208, 217, 226, 227, 228, 235, 239, 240, 241, 242, 243, 246, 247, 248, 252], "still": [8, 135, 232, 253], "last": [8, 132, 138, 142, 143, 228, 232, 235, 239, 241, 253], "former": [8, 232], "mayb": [8, 227, 243], "search_pattern": [8, 232], "pattern_list": 8, "complet": [8, 225, 233, 242, 245], "represent": [8, 221, 225, 228, 229], "its": [8, 120, 121, 134, 138, 208, 218, 225, 228, 229, 232, 239, 240, 243, 246, 247], "op_idx": 8, "howev": [8, 135, 227, 228, 232, 235, 238, 240, 243], "due": [8, 142, 228, 232, 235, 253], "few": [8, 239], "complic": [8, 225, 232], "thei": [8, 120, 123, 218, 224, 232, 235, 236, 237, 238, 241, 247], "therefor": [8, 220, 235, 239, 241, 243, 253], "fist": 8, "repres": [8, 226, 228, 232, 235, 237, 253], "main": [8, 135, 138, 142, 143, 228, 240, 247], "top": [8, 188, 217, 239], "down": 8, "head": [8, 142, 143, 232, 237, 241, 242], "tail": [8, 232, 244], "left": [8, 142, 143, 238, 241, 243], "e": [8, 120, 121, 138, 188, 208, 218, 227, 236, 237, 240, 241, 247], "g": [8, 120, 121, 138, 208, 218, 236, 237, 240], "bert_large_squad": 8, "pb": [8, 221], "1": [8, 115, 116, 120, 130, 132, 134, 142, 143, 145, 188, 199, 208, 209, 217, 218, 219, 220, 222, 224, 225, 227, 228, 229, 232, 233, 235, 237, 238, 239, 240, 242, 243, 244, 245, 247, 249, 251, 252, 253], "squareddiffer": [8, 23, 232], "2": [8, 115, 117, 120, 134, 142, 188, 199, 208, 209, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 232, 233, 238, 239, 243, 244, 245, 247, 249, 251], "3": [8, 199, 208, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 243, 245, 247, 248, 249], "4": [8, 115, 120, 130, 142, 143, 199, 208, 217, 218, 219, 222, 225, 226, 227, 228, 231, 232, 233, 238, 239, 240, 243, 244, 252], "rsqrt": [8, 23, 232], "5": [8, 115, 116, 120, 199, 208, 217, 218, 225, 226, 228, 231, 232, 233, 238, 245, 247], "8": [8, 199, 208, 219, 220, 222, 225, 226, 228, 230, 232, 233, 237, 238, 243, 244, 245, 247, 253], "9": [8, 208, 217, 221, 222, 225, 232, 233, 238, 245, 247, 252], "6": [8, 199, 208, 218, 219, 224, 225, 228, 232, 233, 237, 238, 244, 245, 253], "same": [8, 143, 218, 220, 223, 225, 226, 228, 229, 232, 235, 240, 243, 246, 247, 248], "func": [8, 208, 227], "follow": [8, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 142, 143, 189, 190, 191, 192, 200, 217, 218, 222, 225, 226, 227, 228, 229, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 253], "frozen": [8, 223, 229], "you": [8, 134, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 209, 217, 218, 220, 223, 225, 227, 228, 229, 232, 236, 237, 238, 244, 246, 247, 249, 251, 252, 253], "had": [8, 225], "better": [8, 120, 121, 128, 138, 208, 225, 226, 227, 235, 240, 241, 242, 246, 249, 250, 253], "identifi": [8, 120, 123], "your": [8, 138, 217, 221, 223, 225, 226, 227, 228, 236, 237, 247, 251], "own": [8, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 228, 229, 236, 240, 250], "casual": 8, "tf": [8, 120, 128, 142, 208], "control": [8, 208, 225], "start": [8, 142, 143, 226, 232, 248], "mostli": [8, 232], "longest": [8, 232], "path": [8, 115, 120, 121, 123, 124, 125, 126, 133, 135, 138, 146, 217, 221, 223, 226, 227, 229, 244, 246, 247], "sometim": [8, 228, 253], "connect": [8, 134, 252], "But": [8, 223, 235, 251], "don": [8, 142, 143, 231, 236], "t": [8, 142, 143, 197, 199, 208, 217, 218, 231, 235, 236, 241, 242, 243, 247, 252], "need": [8, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 217, 218, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 240, 241, 242, 243, 247, 252, 253], "least": [8, 135, 240], "doesn": [8, 208, 236, 243, 247], "exist": [8, 120, 123, 208, 221, 225, 251], "relationship": 8, "sever": [8, 136, 217, 225, 229, 232, 235, 247, 253], "should": [8, 120, 123, 134, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 223, 225, 227, 228, 231, 232, 235, 236, 237, 240, 247, 248, 249, 250, 253], "split": [8, 9, 33, 112, 217, 227, 235, 238, 240], "representtaion": 8, "two": [8, 132, 136, 138, 218, 225, 227, 228, 230, 231, 236, 237, 238, 240, 241, 242, 243, 250, 251, 252, 253], "idx": [8, 199, 237], "some": [8, 133, 143, 223, 225, 226, 227, 228, 231, 232, 236, 237, 243, 253], "outsid": [8, 142, 143, 228, 232], "give": [8, 225, 228, 235], "just": [8, 143, 223, 225, 226, 227, 228, 229, 232, 237, 243, 246, 249], "empti": [8, 23, 228, 232, 237, 248], "algorithm": [8, 33, 44, 75, 94, 115, 120, 124, 125, 188, 199, 208, 217, 227, 228, 231, 232, 235, 236, 240, 247, 252, 253], "support": [8, 13, 94, 114, 118, 120, 124, 125, 129, 130, 132, 134, 137, 188, 199, 222, 223, 224, 225, 226, 227, 231, 232, 237, 240, 242, 244, 246, 247, 251, 252], "kind": [8, 67, 196, 198, 231, 240, 247], "beaus": 8, "make": [8, 33, 44, 132, 134, 136, 138, 223, 224, 225, 234, 235, 236, 237, 239, 240, 241, 244, 247], "sure": [8, 132, 134, 136, 225, 247], "whole": [8, 120, 121, 208, 219, 226, 227, 230, 239, 240, 242, 244], "so": [8, 120, 123, 134, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 218, 224, 225, 227, 228, 231, 232, 236, 238, 239, 240, 242, 243, 244, 249, 250, 252, 253], "check": [8, 13, 133, 138, 209, 214, 225, 227, 228, 232, 237, 258], "symmetr": [8, 232, 253], "consecut": [8, 238, 243], "y": [8, 237], "o": [8, 208, 217, 222, 233, 237, 240, 245], "shape": [8, 23, 60, 132, 142, 143, 199, 208, 223, 226, 227, 231, 235, 241, 247], "df": [8, 232], "duplic": 8, "would": [8, 225, 228, 229, 232, 244], "perform": [8, 115, 120, 121, 124, 125, 138, 142, 143, 144, 188, 208, 209, 212, 218, 220, 221, 223, 226, 227, 230, 233, 235, 238, 239, 240, 241, 242, 243, 247, 249, 250, 252, 253, 256], "befor": [8, 132, 134, 135, 136, 138, 142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 218, 220, 223, 225, 227, 228, 229, 232, 236, 237, 238, 240, 242, 247, 253], "splice": 8, "de": 8, "total": [8, 117, 134, 136, 142, 208, 217, 228, 232, 243, 244], "c": [8, 199, 222, 223, 224, 225, 227, 232, 233, 239, 245, 247, 256, 259], "d": [8, 208, 217, 218, 235, 241], "f": [8, 199, 218, 231, 244, 253], "c1": 8, "d1": [8, 247], "c2": 8, "d2": 8, "c3": [8, 244], "d3": [8, 244], "step": [8, 132, 134, 135, 136, 138, 224, 225, 226, 228, 229, 230, 231, 232, 236, 241, 242, 247], "now": [8, 209, 223, 224, 225, 227, 228, 229, 236, 237, 242, 247, 251], "set": [8, 33, 44, 116, 117, 120, 127, 128, 133, 138, 142, 143, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 217, 223, 227, 228, 229, 231, 232, 235, 236, 237, 239, 247], "part": [8, 132, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 228, 231, 232, 242, 243], "As": [8, 218, 225, 226, 228, 229, 238, 241, 243], "appli": [8, 132, 134, 219, 221, 236, 237, 240, 241, 243, 252, 253], "everi": [8, 132, 134, 135, 225, 235, 247], "right": [8, 142, 143, 209, 238, 241, 243, 251], "construct_nod": 8, "attr": [8, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 198, 223, 225, 236, 237], "ordereddict": [8, 33, 44, 225], "construct": [8, 33, 44, 142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 236, 237], "new_nod": 8, "insert_pattern": 8, "target_node_nam": 8, "replac": [8, 143, 188, 218, 221, 225, 228, 252, 253], "specif": [8, 120, 123, 124, 125, 195, 198, 208, 218, 222, 225, 227, 228, 235, 239, 240, 246, 247, 249, 250, 251, 253], "ccontain": 8, "insid": [8, 228, 231, 239, 240], "been": [8, 132, 134, 142, 143, 218, 237, 251], "pattern_map": [8, 225, 228], "pattern_nam": 8, "mapping_dict": 8, "custom": [8, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 120, 128, 138, 188, 208, 226, 228], "mapping_config": 8, "first": [8, 138, 217, 224, 225, 227, 228, 230, 232, 237, 238, 239, 240, 241, 242, 243, 244, 248, 253], "second": [8, 142, 143, 224, 228, 230, 231, 232, 238, 239, 241, 243, 244, 247, 253], "third": [8, 228, 239, 243], "requir": [8, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 221, 228, 230, 232, 233, 235, 238, 247, 253], "old": [8, 135], "reshap": [8, 9, 33, 112, 194, 223, 225, 226, 231], "paddingsequ": [8, 23, 93, 223], "search_mod": [8, 225, 228], "embed": [8, 142, 143, 223, 228, 232, 236], "m": [8, 132, 199, 218, 219, 226, 227, 233, 235, 238, 239, 240, 242, 243, 245, 247], "after": [8, 132, 134, 135, 136, 142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 220, 224, 226, 227, 228, 229, 231, 232, 235, 237, 240, 242, 243, 246, 248, 253], "fusion": [8, 67, 231, 232, 236, 237, 240], "about": [8, 225, 228, 231, 233, 237, 243, 245], "in_pattern": 8, "input_id": [8, 142, 143, 221, 223], "segment_id": [8, 221, 223], "input_mask": [8, 221, 223], "out_pattern": 8, "int": [8, 115, 120, 130, 142, 199, 225, 236, 237], "th": [8, 228], "berfor": 8, "n": [8, 118, 132, 142, 143, 199, 217, 218, 227, 228, 230, 233, 235, 238, 239, 242, 243, 245, 247], "match_result": 8, "_n": 8, "reshape_0": [8, 228], "where": [8, 23, 132, 142, 143, 208, 218, 228, 235, 237, 239, 241, 243, 247, 248], "go": [8, 209], "happen": [8, 226, 243], "sepcial": 8, "biasadd": [8, 18, 228, 232], "bia": [8, 13, 199, 226], "unfix": 8, "locat": [8, 60, 223, 225, 228, 232, 243, 247], "onli": [8, 115, 120, 132, 134, 138, 142, 143, 209, 222, 223, 227, 228, 229, 231, 234, 236, 237, 241, 242, 243, 247, 249, 251], "other": [8, 120, 123, 199, 217, 221, 223, 225, 226, 227, 228, 232, 233, 242, 243, 245, 247, 253], "write": [8, 217, 225, 232, 240, 242], "note": [8, 135, 219, 222, 223, 225, 226, 227, 228, 230, 231, 232, 236, 237, 241, 242, 243, 247, 253], "That": [8, 242, 243], "too": [8, 225, 235, 236], "decompos": [8, 225], "list2str": [8, 225], "src_perm": 8, "str": [8, 33, 44, 75, 94, 114, 115, 116, 120, 123, 127, 129, 130, 138, 140, 142, 143, 144, 217], "emit": [8, 228], "ret": [8, 232, 244], "str2list": 8, "src_str": 8, "pattern_mapping_conf_valid": 8, "conf_dict": 8, "lazyimport": 8, "module_nam": [8, 134, 136], "lazi": 8, "till": 8, "later": [8, 225, 232], "get_model_fwk_nam": 8, "detect": 8, "belong": [8, 225, 253], "avail": [8, 189, 190, 191, 192, 200, 239], "fwk": 8, "na": [8, 115, 120, 121, 138, 217, 234], "assert": [9, 33, 112, 142, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208], "batch_matmul": [9, 33, 112], "batch_matmul_v2": [9, 33, 112], "bias_add": [9, 13, 33, 112], "cast": [9, 33, 112], "concat": [9, 33, 112, 225], "conv": [9, 33, 112, 226, 227, 237], "empty_op": [9, 33, 112, 225], "expand_dim": [9, 33, 112], "fused_batch_matmul_v2": [9, 33, 112], "fused_batch_norm_v3": [9, 33, 112], "fused_gemm": [9, 33, 112], "fused_matmul": [9, 33, 112], "gather": [9, 33, 112, 132, 138, 142, 143, 197, 225, 236], "gather_el": [9, 33, 112, 225], "gelu": [9, 33, 75, 112, 225, 231, 234, 237, 247], "gemm": [9, 33, 112, 188, 220, 235, 242, 247, 257], "iterator_get_next": [9, 33, 112], "iterator_v2": [9, 33, 112, 225], "layer_norm": [9, 33, 75, 112, 225], "map_and_batch_dataset": [9, 33, 112, 225], "matmul": [9, 13, 23, 33, 112, 132, 220, 226, 228, 229, 232, 234, 242, 247, 257], "mkl_layer_norm": [9, 33, 112], "model_dataset": [9, 33, 112], "one_hot": [9, 33, 112], "onnx_input": [9, 33, 112], "optimize_dataset": [9, 33, 112, 225], "placehold": [9, 33, 112], "quantize_linear": [9, 33, 112, 225], "quantize_v2": [9, 33, 112], "quantized_fused_matmul_and_dequant": [9, 33, 112], "quantized_matmul_with_bias_and_dequant": [9, 33, 112], "reduce_mean": [9, 33, 112, 225], "reduce_sum": [9, 33, 112], "scatter_el": [9, 33, 112], "softmax": [9, 33, 112, 142, 197, 208, 218, 234, 241, 242], "squeez": [9, 33, 112], "strided_slic": [9, 33, 112], "top_k": [9, 33, 112], "unpack": [9, 33, 112, 138, 225], "unsqueez": [9, 33, 112, 225], "sub_graph": [9, 112, 225, 227], "add_cls_token": [9, 75, 112], "add_embed": [9, 75, 112], "attention_mask_length_adaptive_keep_indic": [9, 75, 112], "attention_output_layer_norm_length_adaptive_keep_indic": [9, 75, 112], "attention_reshap": [9, 75, 112], "collect_quant_info": [9, 75, 112], "conv_reshap": [9, 75, 112], "embeddingbag": [9, 23, 75, 112], "generate_sequ": [9, 75, 112], "input_fil": [9, 75, 112], "insert_bf16_nod": [9, 75, 112], "insert_quant_nod": [9, 75, 112], "interact_featur": [9, 75, 112], "last_layer_shap": [9, 75, 112], "layer_norm_with_reduce_mean": [9, 75, 112, 225], "matmul_with_bia": [9, 75, 112], "matmul_with_bias_add": [9, 75, 112], "matmul_with_bias_gelu": [9, 75, 112], "matmul_with_bias_relu": [9, 75, 112], "matmul_with_bias_sigmoid": [9, 75, 112], "matmul_with_bias_tanh": [9, 75, 112], "merged_embeddingbag": [9, 75, 112], "output_data": [9, 75, 112, 223], "padding_sequ": [9, 75, 112, 223], "position_embed": [9, 75, 112], "position_embeddings_v1": [9, 75, 112], "qkv_merg": [9, 75, 112], "qkv_reshap": [9, 75, 112], "quantize_fus": [9, 75, 112], "reshape_after_restore_hidden_st": [9, 75, 112], "reshape_before_and_after_attention_out_layer_norm_gather_el": [9, 75, 112], "reshape_before_restore_hidden_st": [9, 75, 112], "reshape_fus": [9, 75, 112], "restore_hidden_states_in_length_adaptive_update_indic": [9, 75, 112], "start_end_logit": [9, 75, 112], "subgraph_match": [9, 75, 112, 227], "token_type_embed": [9, 75, 112, 225], "token_type_embeddings_v1": [9, 75, 112, 225], "transpose_batch_matmul": [9, 75, 112, 225], "word_embed": [9, 75, 112, 223], "graph_util": [9, 112, 225, 228, 232], "logger": [9, 112, 244], "onnx_util": [9, 112], "tf_util": [9, 112], "load": [10, 11, 118, 120, 121, 128, 129, 138, 142, 143, 223, 225, 226, 227, 229, 235, 237, 238, 239, 243], "frontend": [10, 11, 239], "get_logg": 12, "log": [12, 223, 231], "level": [12, 143, 223, 227, 237, 239, 246], "msg": 12, "arg": [12, 114, 120, 123, 128, 132, 138, 197, 208, 226, 231], "kwarg": [12, 120, 123, 135, 138, 142, 143], "format": [12, 138, 208, 226, 241, 242, 245, 246, 253], "debug": 12, "error": [12, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 223, 231, 244], "fatal": 12, "warn": 12, "get_children": 13, "input_name_to_nod": 13, "get_node_children_nam": 13, "nodeproto": 13, "get_initializer_children_nam": 13, "graph_node_names_detail": [13, 111], "pars": [13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 111, 223, 231], "graph_nodes_dict": [13, 111], "Be": [13, 111], "class": [13, 111, 129, 190, 192, 195, 199, 209, 217, 218, 225, 231, 236, 237], "cerat": 13, "output_nam": [13, 115, 120, 128], "ouput": 13, "param": [13, 111, 138, 236, 237], "node_names_detail": [13, 111], "is_supported_onnx_graph": [13, 162], "is_supported_onnx_nod": 13, "change_num_nam": 13, "number": [13, 115, 117, 118, 120, 132, 143, 217, 227, 228, 232, 235, 242, 243, 248, 253], "bias_to_int32": 13, "bias_nod": 13, "a_scal": 13, "b_scale": 13, "int8": [13, 129, 138, 188, 209, 219, 226, 227, 229, 234, 237, 240, 241, 247, 253], "int32": [13, 223], "matric": [13, 241, 242], "scale": [13, 138, 199, 236, 242, 253], "arrai": [13, 223], "fp32_bia": 13, "int8_bia": 13, "int8_bias_zero_point": 13, "int8_bias_scal": 13, "int32_bia": 13, "onnx_extract_oper": 13, "nodes_dict": [13, 33, 43, 44, 111], "tf_dtype": [13, 111], "set_attr": [14, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 194, 225], "batchmatmul": 16, "batchmatmulv2": 17, "onnxruntim": [21, 22, 28, 30, 48, 53, 55, 57, 61, 62, 64, 220, 222, 225, 230], "regist": [23, 33, 44, 75, 94, 132, 134, 136, 235, 236, 237, 239, 240, 241, 243], "multiheadattenion": 23, "binaryadd": [23, 236], "constantofshap": 23, "dequantizelinear": [23, 229], "erf": [23, 231], "expand": [23, 142, 143], "fill": [23, 228, 241], "flatmapdataset": 23, "ident": [23, 132, 218], "makeiter": 23, "matmulwithbiasadd": [23, 85], "matmulwithbiasgelu": [23, 86], "matmulwithbiastanh": [23, 89], "matmulwithbia": [23, 84], "pow": [23, 225, 228], "qlinearmatmul": [23, 229], "qlinearadd": 23, "qlinearmul": 23, "realdiv": 23, "slice": 23, "sqrt": [23, 225, 228, 241], "squar": [23, 142, 143], "stopgradi": 23, "tanh": [23, 231, 237, 247], "tensorslicedataset": 23, "transposebatchmatmul": [23, 109, 225], "rang": [23, 115, 120, 138, 208, 225, 227, 247, 252, 253], "relu": [23, 237, 247], "matmulwithbiasrelu": [23, 87], "quantiz": [23, 115, 120, 123, 127, 128, 138, 220, 236, 237, 240, 242, 247, 249, 254], "cumsum": 23, "onehot": [23, 42], "tokentypeid": 23, "positionid": 23, "loop": [23, 138, 199, 208, 225, 236, 241], "sigmoid": 23, "matmulwithbiassigmoid": [23, 88], "flatten": 23, "mergedembeddingbag": [23, 90], "convolut": [23, 218, 227], "expandindic": 23, "tile": [23, 235, 238, 241, 242, 243, 247], "opani": 23, "expanddim": 24, "fusedbatchnormv3": 26, "fusedgemm": 27, "fusedmatmul": 28, "gatherv2": [29, 225], "gatherel": [30, 225], "operator_registri": [33, 44, 225], "operator_typ": [33, 44, 225], "subclass": [33, 44, 75, 94, 132, 134, 136, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 196, 197], "cl": [33, 44, 75, 94, 132, 134, 136, 208], "registr": [33, 44, 75, 94, 225], "iteratorgetnext": 34, "iteratorv2": [35, 225], "mapandbatchdataset": [37, 225], "modeldataset": 41, "onnxinput": 43, "optimizedataset": [45, 225], "quantizelinear": [48, 225, 229], "quantizev2": 49, "quantizedmatmulwithbiasanddequant": 51, "reducemean": [52, 225, 228], "reducesum": 53, "scatterel": 55, "stridedslic": 59, "source_op": 60, "dest_op": 60, "definit": [60, 237], "topk": 61, "addclstoken": [65, 67], "fuse": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 229, 236, 237], "acceler": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 212, 219, 220, 229, 236, 237, 241, 253, 256, 260], "strategi": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 115, 120, 128], "addembed": 66, "attentionmasklengthadaptiveexpandindic": 67, "attentionoutputlayernormlengthadaptiveexpandindic": 68, "attentionreshap": 69, "collectquantinfo": 70, "convreshap": 71, "generatesequ": 74, "bass": [75, 94], "pattern_registri": [75, 94, 225], "pattern_typ": [75, 94, 225], "subgraphmatch": [75, 106, 227], "inputdata": [76, 225], "inputfil": 77, "insertbf16nod": 78, "insertquantnod": 79, "interactfeatur": 80, "lastlayershap": 81, "layernormwithreducemean": [83, 225], "outputdata": [92, 225], "positionembed": 95, "positionembeddingsv1": 96, "qkvmerg": 97, "qkvreshap": 98, "qunatizefus": 99, "reshapeafterrestorehiddenst": 100, "reshapebeforeandafterattentionoutlayernormgatherel": 101, "reshapebeforerestorehiddenst": 102, "reshapefus": 103, "restorehiddenstatesinlengthadapt": 104, "startendlogit": 105, "matcher": [106, 208, 229], "tokentypeembed": [107, 225], "tokentypeembeddingsv1": [108, 225], "wordembed": 110, "create_tf_nod": 111, "creat": [111, 120, 121, 125, 126, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 230, 231, 239, 247, 249], "when": [111, 132, 133, 134, 138, 142, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 209, 219, 225, 227, 228, 231, 232, 235, 237, 239, 240, 242, 243, 247, 249, 250, 253], "tendorflow": 111, "get_tensor_dest_op": 111, "someth": 111, "store": [111, 118, 120, 121, 123, 132, 134, 208, 225, 228, 229, 232, 235, 236, 237, 238, 240, 241, 243], "dest_op_nam": 111, "tf_extract_oper": 111, "tf_dtype_id": 111, "deal": [111, 208, 226], "multipl": [111, 134, 142, 143, 219, 225, 226, 237, 239, 240, 241, 242, 243, 247, 249, 250], "indetermin": 111, "compil": [112, 188, 191, 221, 223, 224, 225, 227, 228, 230, 232, 259], "version": [113, 120, 123, 138, 222, 227, 233, 245], "provid": [114, 115, 118, 120, 123, 127, 128, 138, 142, 143, 188, 208, 219, 220, 221, 225, 234, 237, 240, 242, 249, 253], "pytorchbenchmark": 114, "executorbenchmark": 114, "run": [114, 120, 127, 133, 134, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 209, 217, 247, 248, 253], "self": [114, 134, 142, 143, 208, 217, 225, 226], "print": [114, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 232], "tabl": [114, 227, 237, 243], "header": 114, "pytorch": [114, 115, 118, 120, 121, 123, 127, 131, 132, 138, 142, 143, 145, 188, 209, 217, 220, 222, 246, 251, 252, 253], "transform": [114, 115, 120, 128, 129, 138, 142, 143, 208, 209, 212, 217, 218, 222, 224, 225, 236, 237, 240, 241, 242, 243, 250, 251, 252, 253, 256], "overwrit": 114, "_prepare_inference_func": 114, "executorbenchmarkargu": [114, 209], "pretrainedconfig": 114, "process": [115, 120, 121, 124, 125, 132, 134, 135, 136, 138, 208, 219, 223, 225, 227, 228, 232, 235, 236, 240, 243, 252, 253], "enum": [115, 116, 120, 130, 137, 149, 199, 236, 237], "function": [115, 120, 121, 123, 124, 125, 127, 128, 135, 138, 194, 196, 197, 198, 199, 208, 218, 225, 227, 228, 231, 232, 236, 237, 247, 249, 252, 253], "inc": [115, 120, 123, 127, 128, 138, 230], "nncf": [115, 120], "dynamiclengthconfig": [115, 120, 138, 221], "max_length": [115, 120, 138, 188], "length_config": [115, 120, 142, 143, 221], "const_rat": [115, 120], "float": [115, 116, 120, 128, 130, 132, 134, 135, 136, 138, 140, 144, 194, 199, 217, 218, 220, 225, 230, 236, 237, 249, 250, 252, 253], "num_sandwich": [115, 120], "length_drop_ratio_bound": [115, 117, 120], "layer_dropout_prob": [115, 117, 120], "layer_dropout_bound": [115, 117, 120], "dynamic_train": [115, 120], "bool": [115, 116, 120, 123, 132, 138, 140, 142, 143, 144, 194, 197, 198, 199, 218, 225, 236, 237, 249, 250], "fals": [115, 116, 118, 120, 123, 132, 138, 142, 143, 188, 194, 199, 208, 209, 218, 225, 227, 236, 237, 249], "load_store_fil": [115, 120], "evo_it": [115, 120], "30": [115, 120, 238], "population_s": [115, 120], "20": [115, 120, 222, 223, 230, 233, 238, 244, 245], "mutation_s": [115, 120], "mutation_prob": [115, 118, 120], "crossover_s": [115, 120], "num_cpu": [115, 120], "48": [115, 120, 233, 245], "distributed_world_s": [115, 120], "latency_constraint": [115, 120], "evo_eval_metr": [115, 120], "eval_f1": [115, 118, 120, 221, 249, 253], "dynam": [115, 120, 138, 231, 236, 239, 240], "adapt": [115, 120, 188], "quantizationconfig": [115, 120, 127, 128, 138, 188, 221], "approach": [115, 120, 124, 125, 126, 217, 218, 219, 221, 237], "posttrainingstat": [115, 120, 219, 220, 221, 253], "timeout": [115, 120, 253], "max_trial": [115, 120, 208, 253], "100": [115, 120, 138, 142, 143, 247, 253], "metric": [115, 120, 121, 124, 125, 128, 138, 139, 188, 208, 221], "config_fil": [115, 120], "sampling_s": [115, 120], "use_bf16": [115, 120], "input_nam": [115, 120, 128], "op_wis": [115, 120], "maximum": [115, 120, 132, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 233, 245, 253], "trial": [115, 120, 138], "performance_onli": [115, 120], "boolean": [115, 120], "whether": [115, 120, 123, 132, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 214, 225, 226, 232, 258], "random_se": [115, 120], "random": [115, 120, 142, 208, 240], "seed": [115, 120, 208], "tensorboard": [115, 120], "directori": [115, 120, 123, 229, 246], "resume_path": [115, 120], "resum": [115, 120, 123, 138], "sampl": [115, 117, 120, 138, 188, 208, 217, 233, 241, 253], "size": [115, 120, 132, 138, 142, 143, 208, 209, 221, 223, 227, 235, 239, 240, 241, 242, 253], "pruningconfig": [115, 120, 221], "epoch": [115, 120, 134, 135, 252], "epoch_rang": [115, 120, 130], "initial_sparsity_ratio": [115, 120, 130], "target_sparsity_ratio": [115, 120, 130, 132, 134, 221, 252], "97": [115, 120, 130, 245, 252], "pruner_config": [115, 120, 221, 252], "neural_compressor": [115, 120, 121, 124, 125, 127, 130, 138], "pruner": [115, 120, 130, 131, 132, 135, 138, 218, 252], "prune": [115, 120, 127, 128, 131, 132, 133, 134, 136, 138, 142, 143, 188, 254], "target": [115, 120, 133, 136, 138, 208, 226, 243, 252], "ratio": [115, 117, 118, 120, 132, 134, 135, 136, 218, 245, 247, 249, 250, 252], "init_prune_config": [115, 120], "init": [115, 120, 121, 127, 128, 145, 146, 208, 217, 222, 223, 224, 237], "distillationconfig": [115, 120, 138, 221], "criterion": [115, 116, 120, 128, 140, 221, 249, 253], "distil": [115, 120, 121, 127, 128, 138, 188, 200, 217, 230], "inc_config": [115, 120], "tfdistillationconfig": [115, 120, 208], "loss_typ": [115, 116, 120, 208, 218], "loss_weight": [115, 120, 208], "train_step": [115, 120, 208], "temperatur": [115, 116, 120, 208, 217, 218], "flashdistillationconfig": [115, 120], "block_nam": [115, 120, 208], "layer_mappings_for_knowledge_transf": [115, 120, 208], "add_origin_loss": [115, 116, 120, 208, 218], "flash": [115, 120, 121, 138], "autodistillationconfig": [115, 120, 208], "search_spac": [115, 120, 124, 125, 208], "search_algorithm": [115, 120, 208], "bo": [115, 120, 208], "knowledge_transf": [115, 120, 208], "regular_distil": [115, 120, 208], "auto": [115, 120, 121, 128, 217, 226, 231, 237], "disil": [115, 120], "knowledg": [115, 120, 138, 208, 217], "transfer": [115, 120, 138, 146, 218], "regular": [115, 120, 121, 133, 252], "space": [115, 120, 121, 124, 125, 138, 208, 227, 235], "max": [115, 117, 120, 138, 233, 236, 239, 243, 245, 253], "nasconfig": [115, 120, 124, 125, 126], "basic": [115, 120, 124, 125, 132, 143, 146, 222, 231], "parser": [115, 120], "procedur": [115, 120, 247], "knowledgeloss": [116, 218], "ce": [116, 208, 218], "loss_weight_ratio": [116, 218], "layer_map": [116, 218], "distillationcriterionmod": [116, 120], "drop": [117, 133, 219, 240, 243, 249], "restor": [117, 219], "sample_length_configur": 117, "max_seq_length": [117, 118], "num_hidden_lay": 117, "layer_config": [117, 142, 143], "length_drop_prob": 117, "length_drop_ratio": 117, "min_length": 117, "hidden": [117, 132, 142, 143, 208], "probabl": [117, 208, 240], "truncat": [117, 188], "less": [117, 218, 227, 243, 252], "than": [117, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 226, 227, 228, 236, 241, 246, 247, 253], "min": [117, 138, 253], "sample_layer_configur": 117, "layer_dropout": 117, "depend": [117, 124, 125, 222, 224], "paramat": 117, "dropout": 117, "how": [117, 132, 138, 187, 223, 225, 226, 229, 230, 232, 237, 238, 247, 249, 252], "mani": [117, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 226, 228, 236, 238, 240, 242, 247], "bound": 117, "kept": [117, 132], "evolust": 118, "evolustionari": 118, "approx_ratio": 118, "x": [118, 142, 143, 227, 237, 239, 241, 242, 247, 253], "12": [118, 217, 222, 224, 226, 233, 238, 241, 244, 245, 247], "l": [118, 208, 218], "384": [118, 208, 227, 233, 245], "approxim": [118, 242], "invers": [118, 242], "store2str": 118, "gene": 118, "mac": 118, "score": [118, 132, 134, 142, 143, 251], "parent": [118, 134, 136], "parmat": 118, "devic": [118, 217, 218, 223, 227, 251], "evalu": [118, 120, 121, 124, 125, 127, 128, 134, 135, 138, 208, 218, 226, 241, 249, 250, 252, 253], "lower_constraint": 118, "upper_constraint": 118, "eval_metr": 118, "evolutionari": [118, 138], "load_stor": 118, "store_fil": 118, "save_stor": 118, "get_stor": 118, "set_lower_constraint": 118, "constraint": [118, 253], "setter": [118, 142, 143], "lower": [118, 243, 250, 253], "set_upper_constraint": 118, "upper": [118, 237], "save_popul": 118, "population_fil": 118, "popul": 118, "convex_hul": 118, "pareto_fronti": 118, "add_gen": 118, "mutat": 118, "rai": 118, "crossov": 118, "packag": [119, 122, 217], "drop_and_restore_util": [119, 120], "evolut": [119, 120, 219], "mixtur": 120, "auto_distil": [120, 122, 208], "basic_na": [120, 125], "pytorch_prun": 120, "prune_util": [120, 131], "schedul": [120, 127, 131, 134, 138, 208, 212, 234, 256], "utility_tf": [120, 139], "benchmark": [120, 188, 189, 200, 227, 233, 234, 245, 248], "optimizer_tf": [120, 200], "trainer": [120, 127, 188, 200, 219, 220, 221], "autodistil": [120, 121, 128, 138], "model_build": [120, 121, 124, 125, 128, 138, 208], "conf_fname_or_obj": [120, 121, 124, 125, 126], "experiment": [120, 121, 124, 125, 127, 138, 237], "nasbas": [120, 121, 124, 125, 126], "design": [120, 121, 138, 225, 236, 237, 246], "handl": [120, 121, 138, 142, 143, 187, 197, 208, 231, 238, 239], "three": [120, 121, 130, 135, 137, 138, 208, 225, 228, 232, 241, 242, 252, 253], "major": [120, 121, 138, 208, 235, 240, 242, 243, 253], "stage": [120, 121, 138, 194, 208], "explor": [120, 121, 138, 208, 221], "compress": [120, 121, 138, 188, 208, 218, 221, 235, 238, 243, 246, 253], "architectur": [120, 121, 124, 125, 128, 138, 142, 143, 188, 208, 222, 235, 240, 242], "iter": [120, 121, 134, 136, 138, 208, 223, 227, 231, 236, 239, 241, 242, 247, 248], "train": [120, 121, 124, 125, 127, 128, 134, 135, 138, 188, 208, 209, 217, 218, 246, 252], "discov": [120, 121, 138, 208], "potenti": [120, 121, 138, 199, 208, 240], "measur": [120, 121, 138, 208, 218, 234, 249, 250, 252, 253], "predict": [120, 121, 138, 142, 143, 208, 217, 218], "accuraci": [120, 121, 138, 208, 218, 219, 221, 247, 249, 250, 252], "hardwar": [120, 121, 138, 208, 218, 244, 246], "etc": [120, 121, 138, 208, 218, 226], "select": [120, 121, 138, 142, 143, 208, 237], "best": [120, 121, 124, 125, 138, 208, 219], "teacher_model": [120, 121, 127, 128, 138, 208, 218, 221], "getter": [120, 121, 138, 142, 143], "teacher": [120, 121, 127, 128, 208, 218, 219], "student_model": [120, 121], "student": [120, 121, 208, 218, 219], "train_func": [120, 121, 124, 125, 127, 128, 138, 208], "eval_func": [120, 121, 124, 125, 127, 128, 138, 208], "res_save_path": [120, 121, 124, 125], "model_cl": [120, 121, 128, 138, 208], "found": [120, 121, 124, 125, 224, 225, 243], "estim": [120, 121, 124, 125, 226, 243], "load_search_result": [120, 121], "init_by_cfg": [120, 121, 124, 125], "instanc": [120, 121, 124, 125, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 223, 226, 233, 245, 248, 249, 250, 251], "create_distil": [120, 121], "optimizedmodel": [120, 123], "from_pretrain": [120, 123, 142, 143, 188, 209, 251], "classmethod": [120, 123, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "model_name_or_path": [120, 123, 217], "instanti": [120, 123, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "given": [120, 123, 142, 143, 217, 232, 237, 239, 241, 243, 252], "intel": [120, 123, 132, 187, 209, 217, 221, 222, 223, 224, 225, 233, 235, 244, 245, 250, 251, 252, 253], "compressor": [120, 123, 128, 132, 188, 250, 253], "repositori": [120, 123], "hug": [120, 123, 188, 229], "face": [120, 123, 188, 229], "hub": [120, 123, 251], "local": [120, 123, 132, 138, 225, 235], "host": [120, 123], "cache_dir": [120, 123], "download": [120, 123, 142, 143], "cach": [120, 123, 197, 231, 240, 241], "standard": [120, 123], "force_download": [120, 123], "default": [120, 123, 129, 133, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 217, 218, 225, 227, 233, 237, 243, 244, 245, 247, 249, 250, 252, 253], "forc": [120, 123], "re": [120, 123, 238], "overrid": [120, 123, 138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 196, 197, 231], "resume_download": [120, 123], "delet": [120, 123, 252], "incomplet": [120, 123], "receiv": [120, 123, 228, 232], "attempt": [120, 123], "revis": [120, 123], "branch": [120, 123, 247], "tag": [120, 123], "commit": [120, 123, 248], "sinc": [120, 123, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 218, 240, 242], "we": [120, 123, 124, 125, 143, 214, 217, 220, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 250, 251, 253, 258], "git": [120, 123, 217, 222, 223, 224], "system": [120, 123, 224], "artifact": [120, 123], "huggingfac": [120, 123, 249, 251], "co": [120, 123], "allow": [120, 123], "q_model": [120, 123], "obj": [120, 124, 125, 126, 133], "notraineroptim": [120, 127, 218, 252, 253], "saved_result": [120, 127], "calib_func": [120, 127], "calib": [120, 127], "calib_dataload": [120, 127, 138], "calibr": [120, 127, 138, 253], "dataload": [120, 127, 134, 138, 146], "init_quant": [120, 127, 128, 138, 236], "quant_config": [120, 127, 128, 138, 188, 221, 253], "callabl": [120, 127, 128, 138, 208], "prepar": [120, 127, 128, 135, 142, 143, 194, 217, 226, 228, 231, 236, 237, 243, 253], "invok": [120, 127, 128], "_inc_quant": [120, 127], "init_prun": [120, 127, 128, 138], "pruning_config": [120, 127, 128, 138, 221, 252], "init_distil": [120, 127, 128, 138], "distillation_config": [120, 127, 128, 138, 218, 221], "orchestrate_optim": [120, 127, 138], "compon": [120, 127, 138, 236], "aggreg": [120, 127], "orchestr": [120, 127, 138, 188], "fit": [120, 127], "tfoptim": [120, 128, 208, 218], "pretrainedmodel": [120, 128, 138, 142, 143, 208], "training_args_tf": [120, 128], "tftrainingargu": [120, 128], "train_dataset": [120, 128, 188, 208], "eval_dataset": [120, 128, 188, 208], "compute_metr": [120, 128, 208], "task_typ": [120, 128, 146], "task_id": [120, 128, 146], "entri": [120, 128, 138, 142, 143], "techniqu": [120, 128, 219, 221, 253], "dataset": [120, 128, 138, 146, 217, 219, 249, 253], "builtin_eval_func": [120, 128, 138], "saved_model": [120, 128], "quantized_model_path": [120, 128], "larger": [120, 128, 138], "model_builder_builtin": [120, 128, 138, 208], "arch_para": [120, 128, 138], "built": [120, 128, 208, 250], "builder": [120, 128, 208], "inform": [120, 128, 132, 134, 135, 136, 187, 189, 190, 191, 192, 200, 218, 223, 226, 233, 237, 239, 245, 246, 247, 252, 253], "autodistillation_config": [120, 128, 138, 208], "build": [120, 124, 125, 128, 138, 208, 224, 235, 240, 244, 250], "build_train_func": [120, 128], "prunerconfig": [120, 130, 221], "update_frequ": [120, 130], "prune_typ": [120, 130, 221, 252], "basicmagnitud": [120, 130, 219, 221, 252], "per_tensor": [120, 130], "pruningmod": [120, 130], "current": [120, 130, 132, 134, 135, 136, 137, 226, 236, 237, 239, 241, 246, 247], "quantizationmod": [120, 137], "both": [121, 138, 142, 143, 217, 221, 241, 246, 247, 248, 249, 253], "basicna": [124, 125], "conf_fnam": [124, 125], "dictionari": [124, 125, 138], "Not": [124, 125, 217, 239], "here": [124, 125, 138, 214, 224, 225, 227, 228, 229, 231, 232, 237, 243, 253, 258], "common": [126, 132, 253], "infer_framework_load_model": 129, "autoconfig": [129, 188, 209, 251], "model_class": 129, "task": [129, 143, 146, 208, 217, 218, 219, 230, 237, 241, 244, 251], "model_kwarg": [129, 142, 143, 251], "register_pattern": 132, "registri": [132, 134, 136], "includ": [132, 136, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 197, 198, 199, 219, 223, 226, 227, 234, 237, 243, 247, 253], "get_pattern": 132, "rais": [132, 133, 134, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "assertionerror": [132, 133, 134], "unit": [132, 234], "dure": [132, 136, 138, 223, 243, 248, 250, 252, 253], "is_glob": 132, "take": [132, 218, 226, 228, 231, 236, 242, 243], "global": 132, "criteria": [132, 134, 250], "contrast": 132, "individu": [132, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "get_mask": 132, "pre_mask": 132, "max_sparsity_ratio_per_lay": [132, 134], "mask": [132, 134, 136, 142, 143, 199, 219, 236, 237, 238, 242], "layer_nam": 132, "weight": [132, 134, 136, 142, 143, 199, 208, 218, 220, 226, 227, 229, 235, 238, 239, 242, 243, 247, 249, 250, 252, 253], "reach": [132, 136], "updat": [132, 134, 217, 222, 223, 224, 240, 252], "abstract": [132, 136, 142, 143], "get_masks_glob": 132, "To": [132, 136, 142, 143, 208, 225, 241, 243, 247, 248], "implement": [132, 136, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 212, 225, 227, 228, 232, 234, 235, 236, 239, 240, 241, 242, 244, 247, 256], "get_mask_singl": 132, "exact_sparsity_ratio": 132, "obtain": [132, 133, 136, 219, 226, 242], "get_block_size_dict": 132, "get_masks_loc": 132, "get_sparsity_ratio": [132, 135], "calul": 132, "zero": [132, 134, 135, 237, 239, 243, 252], "ration": 132, "get_pattern_lock_mask": 132, "lock": [132, 252], "patternnxm": 132, "deriv": [132, 134, 136, 149, 197, 240, 241], "nxm": [132, 235], "block": [132, 135, 142, 143, 219, 235, 238, 239, 240, 242, 243, 252], "block_siz": 132, "integ": [132, 134, 136, 217, 220, 227, 228, 243, 247, 252, 253], "height": 132, "width": [132, 235, 236, 239, 240, 253], "awar": [132, 188], "vertic": 132, "direct": [132, 199], "linear": [132, 208, 218, 237, 239, 241], "channel": [132, 236, 239, 243, 252], "becaus": [132, 225, 236, 238, 242, 253], "block_size_1": 132, "block_size_2": 132, "wise": [132, 234, 247, 257], "keep_pre_mask": 132, "togeth": 132, "keep": [132, 133, 228], "unchang": 132, "patternninm": 132, "continu": [132, 142, 235, 240, 241], "http": [132, 134, 142, 217, 222, 223, 224, 231], "github": [132, 217, 222, 223, 224, 231], "com": [132, 217, 222, 223, 224, 233, 245], "blob": 132, "master": 132, "doc": [132, 225, 228, 236, 243], "md": [132, 209, 226, 229], "check_config": 133, "prune_config": 133, "everyth": 133, "correct": [133, 228, 232, 241], "reset_non_value_to_default": 133, "up": [133, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 226, 228, 237, 247], "undefin": 133, "item": [133, 188], "process_and_check_config": 133, "val": 133, "copi": [133, 228, 241], "non": [133, 143, 239, 241, 243, 248], "directli": [133, 143, 236, 238, 240], "read": [133, 135, 223], "whose": [133, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 232], "obejct": 133, "process_config": 133, "parse_to_prun": 133, "parse_not_to_prun": 133, "register_prun": 134, "get_prun": 134, "cuurent": 134, "begin": [134, 135, 143, 208, 236, 237], "decid": [134, 239, 253], "current_sparsity_ratio": 134, "global_step": 134, "start_step": 134, "trigger": 134, "end_step": 134, "update_frequency_on_step": 134, "frequenc": [134, 233, 245, 252], "enabl": [134, 220, 221, 233, 235, 240, 244, 245], "on_epoch_begin": [134, 135], "mask_weight": 134, "formal": [134, 142], "on_step_begin": [134, 135], "local_step": [134, 135], "judg": 134, "Or": [134, 232], "simpli": 134, "on_step_end": [134, 135], "on_epoch_end": [134, 135], "on_before_optimizer_step": [134, 135], "on_after_optimizer_step": [134, 135], "on_train_begin": [134, 135], "on_train_end": [134, 135], "on_before_ev": [134, 135], "on_after_ev": [134, 135], "check_is_pruned_step": 134, "update_scor": 134, "magnitudeprun": 134, "inherit": [134, 136, 209, 218, 225, 231, 251, 252, 253], "snipprun": 134, "snip": 134, "singl": [134, 136, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 241], "shot": [134, 136], "sensit": 134, "arxiv": [134, 142], "org": [134, 142, 222], "ab": [134, 142, 253], "1810": 134, "02340": 134, "gradient": 134, "snipmomentumprun": 134, "moreoev": 134, "momentum": 134, "patternlockprun": 134, "fix": [134, 227, 238], "want": [134, 214, 223, 225, 226, 227, 229, 232, 235, 236, 237, 247, 249, 258], "chang": [134, 136, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 235, 236, 243], "code": [135, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 221, 222, 225, 227, 237, 238, 239, 244, 247], "config_file_path": 135, "pruner_info": 135, "update_items_for_all_prun": 135, "argument": [135, 138, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 218, 226, 248, 249, 250, 252, 253], "pass": [135, 142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 199, 236, 237, 251, 253], "analys": [135, 244], "align": [135, 235, 237, 243], "elementwise_over_matmul_gemm_conv": 135, "elementwise_over_al": 135, "blockwise_over_matmul_gemm_conv": 135, "ensur": 135, "register_schedul": 136, "get_schedul": 136, "mainli": [136, 227, 240], "dens": [136, 199, 226, 227, 232, 234, 243, 247, 252], "gradual": 136, "update_sparsity_ratio": 136, "aggressive_ratio": 136, "current_prune_step": 136, "total_prune_step": 136, "oneshotschedul": 136, "onc": [136, 188, 226, 242], "aggress": 136, "iterativeschedul": 136, "target_ratio": 136, "progress": 136, "easili": [138, 235, 236], "finetun": [138, 188, 209, 219, 251], "basetrain": 138, "resuming_checkpoint": 138, "checkpoint": [138, 142], "builtin_train_func": 138, "goal": [138, 252], "automativ": 138, "recip": [138, 217, 227, 250], "low": [138, 221, 235, 240, 242, 250, 253], "precis": [138, 220, 229, 250, 253], "achiev": [138, 250], "point": [138, 142, 143, 208, 228, 236, 237, 242, 253], "automat": [138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 217, 226, 227, 228, 236, 247], "pruningconf": 138, "torch": [138, 142, 143, 251], "nn": [138, 142, 143, 239], "smaller": [138, 218, 252], "config_list": 138, "optimizt": 138, "combin": [138, 208, 227, 232, 236, 237, 253], "create_optimizer_builtin": 138, "resume_from_checkpoint": 138, "optuna": 138, "ignore_keys_for_ev": 138, "tor": 138, "present": [138, 142, 242], "state": [138, 142, 143, 233, 245], "hyperparamet": [138, 208], "ignor": [138, 142, 143, 225], "keyword": 138, "hide": [138, 142, 143], "deprec": [138, 142, 143], "training_step": 138, "batch": [138, 188, 199, 209, 223, 239, 241, 248], "inject": [138, 237], "behavior": [138, 218, 235, 236, 252, 253], "union": [138, 199], "being": 138, "fed": 138, "most": [138, 228, 232, 236, 237, 241, 251], "expect": [138, 142, 143, 209, 243, 250], "under": [138, 223, 225, 226, 229, 240, 247], "label": [138, 142, 143, 217, 248, 251], "document": [138, 217, 218, 221, 241, 242, 243, 252, 253], "accept": [138, 251], "loss": [138, 142, 143, 208, 217, 218, 253], "training_step_length_adapt": 138, "compute_loss": 138, "return_output": 138, "By": [138, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 223], "nas_config": 138, "baseic": 138, "callabel": 138, "auto_distil_evaluation_loop": 138, "descript": [138, 217, 218, 226, 243, 249, 250, 252, 253], "prediction_loss_onli": 138, "ignore_kei": 138, "metric_key_prefix": 138, "eval": [138, 208, 249], "trainer_util": 138, "evalloopoutput": 138, "share": 138, "work": [138, 187, 237, 251], "doe": [138, 225, 236, 237, 238, 239, 241], "avoid": [138, 142, 143, 232, 235, 237, 241, 242, 247], "memori": [138, 209, 231, 236, 237, 238, 239, 240, 241, 242, 243, 250, 253], "huge": 138, "prefix": [138, 247], "export_to_onnx": [138, 209, 220], "tranfer": 138, "paramert": 138, "export_to_fp32_onnx": 138, "save_path": [138, 220], "opset_vers": [138, 220], "14": [138, 220, 233, 238, 244, 245], "do_constant_fold": [138, 220], "verbos": [138, 220], "fp32": [138, 209, 219, 223, 226, 227, 229, 231, 236, 237, 238, 239, 240, 242, 247, 251, 253], "export": [138, 188, 209, 223, 226, 229, 251], "constant": 138, "fold": [138, 247], "export_to_bf16_onnx": 138, "bf16": [138, 219, 229, 234, 237, 238, 242, 247], "export_to_int8_onnx": 138, "quant_format": [138, 220], "qdq": [138, 220, 229], "s8s8": [138, 220], "sample_s": 138, "calibrate_method": 138, "minmax": 138, "scale_map": 138, "export_to_jit": 138, "jit": [138, 212, 234, 236, 237, 239, 242, 256], "set_dynamic_config": [138, 221], "dynamic_config": [138, 221], "run_evolutionary_search": 138, "nlptrainer": [138, 188, 218, 221, 252, 253], "nlp": [138, 188, 217, 219, 221, 223, 230, 252, 253], "nlpseq2seqtrain": 138, "seq2seqtrain": 138, "seq2seq": [138, 142, 143], "lenght": 138, "num_beam": 138, "numbert": 138, "beam": 138, "greater_is_bett": [140, 144, 188, 208, 249, 250, 253], "is_rel": [140, 221, 249, 253], "01": [140, 209, 221, 245, 249, 253], "weight_ratio": [140, 144, 249, 250, 253], "modeling_bert_dynam": 141, "modeling_roberta_dynam": 141, "bert": [142, 208, 218, 219, 223, 226, 227, 230, 232, 233, 236, 240, 241, 242], "load_tf_weights_in_bert": 142, "tf_checkpoint_path": 142, "bertembed": [142, 143], "word": [142, 143, 219, 243], "posit": [142, 143, 188, 227, 232, 247, 251], "token_typ": 142, "forward": [142, 143, 194, 208, 226, 231, 253], "longtensor": [142, 143], "token_type_id": [142, 143], "position_id": [142, 143], "inputs_emb": [142, 143], "floattensor": [142, 143], "past_key_values_length": [142, 143], "bertselfattent": 142, "position_embedding_typ": [142, 143], "transpose_for_scor": [142, 143], "hidden_st": [142, 143], "attention_mask": [142, 143], "head_mask": [142, 143], "encoder_hidden_st": [142, 143], "encoder_attention_mask": [142, 143], "past_key_valu": [142, 143], "output_attent": [142, 143], "bertselfoutput": 142, "bertattent": 142, "prune_head": [142, 143], "bertintermedi": 142, "intermedi": [142, 208, 225, 229, 232, 243, 253], "bertoutput": 142, "bertlay": 142, "output_length": [142, 143], "always_keep_cls_token": [142, 143], "feed_forward_chunk": [142, 143], "attention_output": [142, 143], "feed": [142, 143, 218, 223], "chunk": 142, "bertencod": 142, "encod": [142, 143, 208, 226, 232], "use_cach": [142, 143], "output_hidden_st": [142, 143], "return_dict": [142, 143], "modeling_output": [142, 143], "basemodeloutputwithpastandcrossattent": [142, 143], "bertpool": 142, "pooler": [142, 143], "bertpredictionheadtransform": 142, "bertlmpredictionhead": 142, "languag": [142, 143, 188, 217, 219, 251], "bertonlymlmhead": 142, "sequence_output": 142, "bertonlynsphead": 142, "pooled_output": 142, "bertpretraininghead": 142, "pretrain": [142, 143, 225], "bertpretrainedmodel": 142, "modeling_util": [142, 143], "simpl": [142, 143, 222, 223, 236, 242, 251], "bertforpretrainingoutput": 142, "modeloutput": 142, "bertforpretrain": 142, "sum": [142, 218, 226, 240, 242, 243, 247], "classif": [142, 143, 208, 218, 219, 251], "prediction_logit": [142, 143], "batch_siz": [142, 143, 146, 209, 223, 226, 230, 241, 247], "sequence_length": [142, 143, 209], "vocab_s": [142, 143], "vocabulari": 142, "token": [142, 143, 188, 217, 219, 229, 251], "seq_relationship_logit": 142, "hidden_s": [142, 143, 208], "plu": 142, "num_head": [142, 143], "averag": [142, 226], "bertmodel": 142, "add_pooling_lay": [142, 143], "behav": [142, 143], "well": [142, 143, 220, 253], "decod": [142, 143, 244], "case": [142, 143, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 208, 218, 219, 226, 227, 235, 237, 238, 247, 248], "cross": [142, 143], "ad": [142, 143, 225, 228, 232, 236, 243, 247, 251], "describ": [142, 143, 198, 217, 239, 241, 247, 249, 250], "1706": [142, 233, 245], "03762": 142, "ashish": [142, 143], "vaswani": [142, 143], "noam": [142, 143], "shazeer": [142, 143], "niki": [142, 143], "parmar": [142, 143], "jakob": [142, 143], "uszkoreit": [142, 143], "llion": [142, 143], "jone": [142, 143], "aidan": [142, 143], "gomez": [142, 143], "lukasz": [142, 143], "kaiser": [142, 143], "illia": [142, 143], "polosukhin": [142, 143], "is_decod": [142, 143], "add_cross_attent": [142, 143], "get_input_embed": [142, 143], "set_input_embed": [142, 143], "set_length_config": [142, 143], "set_output_attent": [142, 143], "basemodeloutputwithpoolingandcrossattent": [142, 143], "pad": [142, 143, 188, 226, 243], "indic": [142, 143, 199, 232, 236, 237, 241, 243, 249], "n_layer": [142, 143], "embed_size_per_head": [142, 143], "precomput": [142, 143], "speed": [142, 143, 209, 225, 228], "decoder_input_id": [142, 143], "those": [142, 143, 241, 252, 253], "past": [142, 143], "instead": [142, 143], "get_output_embed": [142, 143], "set_output_embed": [142, 143], "new_embed": [142, 143], "next_sentence_label": 142, "docstr": [142, 143], "pair": [142, 223, 237, 243], "legaci": [142, 143], "berttoken": 142, "uncas": [142, 188, 208, 209, 219, 229, 251], "hello": [142, 143], "my": [142, 143], "dog": [142, 143], "cute": [142, 143], "return_tensor": [142, 143, 188], "pt": [142, 143, 188, 251], "bertlmheadmodel": 142, "causallmoutputwithcrossattent": [142, 143], "prepare_inputs_for_gener": [142, 143], "bertformaskedlm": 142, "maskedlmoutput": [142, 143], "bertfornextsentencepredict": 142, "sentenc": [142, 143, 188, 217], "nextsentencepredictoroutput": 142, "prompt": 142, "itali": 142, "pizza": 142, "serv": 142, "restaur": 142, "unslic": 142, "next_sent": 142, "sky": 142, "blue": 142, "shorter": 142, "wavelength": 142, "light": 142, "logit": [142, 143, 188, 208, 218, 223], "wa": 142, "bertforsequenceclassif": 142, "sequenceclassifieroutput": [142, 143], "regress": [142, 143, 217], "num_label": [142, 143, 188], "entropi": [142, 143, 208], "bertformultiplechoic": 142, "choic": [142, 143, 219], "multiplechoicemodeloutput": [142, 143], "num_choic": [142, 143], "dimens": [142, 143, 208, 218, 227, 239, 241, 243, 247], "bertfortokenclassif": 142, "tokenclassifieroutput": [142, 143], "bertforquestionansw": 142, "question": [142, 219, 238], "answer": [142, 143, 219], "start_posit": [142, 143], "end_posit": [142, 143], "questionansweringmodeloutput": [142, 143], "span": [142, 143], "clamp": [142, 143], "taken": [142, 143], "account": [142, 143], "expand_gath": [142, 143], "dim": [142, 143, 223, 231, 235, 243, 247], "roberta": [143, 219], "robertaembed": 143, "tini": [143, 219], "tweak": 143, "create_position_ids_from_inputs_emb": 143, "cannot": [143, 235, 243, 248], "sequenti": [143, 228, 236, 237, 239], "robertaselfattent": 143, "robertaselfoutput": 143, "robertaattent": 143, "attenion": 143, "robertaintermedi": 143, "intermidi": 143, "robertaoutput": 143, "robertalay": 143, "robertaencod": 143, "roberata": 143, "robertapool": 143, "robertapretrainedmodel": 143, "update_keys_to_ignor": 143, "del_keys_to_ignor": 143, "robertamodel": 143, "_": [143, 208, 209, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253], "robertaforcausallm": 143, "causal": [143, 217], "robertatoken": 143, "robertaconfig": 143, "robertaformaskedlm": 143, "robertalmhead": 143, "featur": [143, 188, 208, 216, 218, 229, 232, 235, 240, 244, 251, 260], "robertaforsequenceclassif": 143, "robertaformultiplechoic": 143, "robertafortokenclassif": 143, "robertaclassificationhead": 143, "robertaforquestionansw": 143, "quanstion": 143, "create_position_ids_from_input_id": 143, "padding_idx": 143, "symbol": 143, "fairseq": 143, "make_posit": 143, "models": [144, 219, 250], "distributed_init": [145, 146], "backend": [145, 209, 219, 221, 222, 224, 225, 227, 229, 232, 234, 247, 253], "gloo": 145, "world_siz": 145, "rank": 145, "init_method": 145, "master_addr": 145, "127": [145, 226, 244, 245, 253], "master_port": 145, "12345": 145, "distibut": 145, "environ": [145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 247], "tfdataload": 146, "worker_address": 146, "worker": 146, "distribut": [146, 208, 218, 240, 253], "address": [146, 188, 236, 240], "treat": [146, 225], "chief": 146, "get_filepath": 146, "base_dirpath": 146, "folder": [146, 223, 224, 225, 226, 227, 229], "keras2savedmodel": 146, "kera": 146, "save_model": 146, "augmentertyp": 149, "enumer": [149, 199], "testaddclstoken": 152, "methodnam": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "runtest": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "unittest": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "testcas": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "test": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 219, 222, 233, 245, 247, 248], "itself": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 244], "place": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 237, 240, 252], "fixtur": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "constructor": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 231], "author": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "deconstruct": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "setup": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 217, 222, 225], "teardown": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "respect": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 228, 229], "necessari": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 231, 243], "__init__": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225], "alwai": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 232, 248], "signatur": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "failureexcept": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "determin": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 227, 244], "except": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 227, 236], "fail": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "deem": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "rather": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 228, 236], "longmessag": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "long": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 232], "messag": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "repr": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "failur": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "explicit": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 196, 197, 231, 237], "maxdiff": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "diff": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "difflib": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "look": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 225, 226, 237], "setupclass": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "hook": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "teardownclass": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "testattentionreshap": [153, 154, 177, 180], "testbinaryop": 155, "testconvreshap": 156, "testembeddingbag": 157, "testexecutionopt": 158, "testgelu": 159, "testgraphdispatch": 160, "testinsertinputouputdata": 161, "testissupportedonnxgraph": 162, "testlastlayershap": 163, "testlayernormwithreducemean": [164, 179, 181], "testmain": 165, "testmatmulwithbiasrelu": 166, "testmatmulwithbiassigmoid": 167, "testmatmulwithbiastanh": 168, "testmergedembeddingbag": 169, "testonnxutil": 171, "testop": 172, "testpaddingsequ": 173, "testpatterndispatch": 174, "testpositionembed": 175, "testqkvmerg": 176, "testquantonnxexecut": 178, "teststartendlogit": 182, "testtfutil": 183, "testtokentypeembed": 184, "testtranspos": 185, "testtransposebatchmatmul": 186, "issu": [187, 208, 214, 240, 253, 258], "center": 187, "resolv": 187, "guidelin": 187, "innov": 188, "toolkit": [188, 219, 223], "particular": 188, "effect": [188, 217, 225, 247], "4th": 188, "xeon": [188, 219, 222, 235, 242, 245, 253], "scalabl": [188, 219, 222, 236], "processor": [188, 219, 222, 233, 245], "sapphir": [188, 222], "rapid": [188, 222], "codenam": 188, "seamless": 188, "experi": [188, 238, 242, 243], "extend": 188, "leverag": [188, 208, 218, 221], "advanc": [188, 208, 234, 244], "softwar": 188, "optim": [188, 208, 209, 218, 219, 220, 221, 222, 223, 228, 229, 230, 236, 237, 239, 249, 250, 251, 252, 253], "uniqu": 188, "runtim": [188, 199, 244, 247, 253], "releas": 188, "neurip": 188, "2022": [188, 233, 245], "paper": [188, 221], "fast": [188, 221], "distilbert": [188, 208, 209, 219, 221, 229, 251], "cpu": [188, 217, 221, 222, 223, 231, 233, 235, 237, 244, 245, 251], "quala": [188, 219, 221], "minilm": [188, 219, 221], "2021": 188, "pre": [188, 228, 246], "applic": 188, "stabl": [188, 222], "diffus": [188, 219], "gpt": [188, 217, 219], "j": [188, 219, 223, 224, 225, 234, 239, 243, 244, 247], "6b": [188, 219], "bloom": 188, "176b": 188, "t5": [188, 219], "setfit": 188, "ai": [188, 223], "pip": [188, 217, 222, 230], "page": 188, "load_dataset": [188, 217], "load_metr": 188, "automodelforsequenceclassif": 188, "autotoken": [188, 251], "raw_dataset": [188, 217], "glue": [188, 217], "sst2": [188, 217, 219, 226, 230], "sst": [188, 209, 217, 219, 251], "english": [188, 209, 219, 251], "lambda": 188, "128": [188, 208, 209, 226, 230, 233, 245, 247, 253], "intel_extension_for_transform": [188, 209, 218, 221, 222, 223, 225, 227, 229, 232, 234, 247, 249, 250, 251, 252, 253], "label2id": 188, "id2label": 188, "neg": 188, "q_config": [188, 221, 253], "eval_loss": [188, 208], "argmax": 188, "quick": [188, 225], "matrix": [188, 235, 238, 239, 240, 241, 242, 243, 247, 252], "overview": 188, "kernel": [188, 199, 211, 223, 226, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 255], "librari": [188, 212, 236, 237, 256], "deploy": [188, 217, 221, 227], "profil": [188, 214, 258], "augment": 188, "tutori": [188, 223], "AND": 188, "blog": 188, "publish": 188, "medium": [188, 217, 248], "mleffici": 188, "effici": [188, 221], "dec": 188, "nov": 188, "coher": [188, 240], "novemb": 188, "alibaba": 188, "deep": [188, 217, 229, 237, 250, 253], "learn": [188, 217, 229, 237, 250, 253], "purif": 188, "aug": [188, 217], "namespac": [194, 196, 197, 198, 199], "public": [194, 196, 197, 198, 199, 231, 236, 237], "typedef": [194, 199], "std": [194, 196, 197, 198, 199, 234, 236, 237], "unordered_map": [194, 198, 237], "shared_ptr": [194, 197, 231], "kernelhandl": 194, "operatorconfig": [194, 231], "executionopt": [194, 227], "e_ptr": 194, "m_ptr": 194, "inlin": [194, 196, 197, 198, 199, 236], "void": [194, 197, 198, 199, 231, 234, 236, 237], "vector": [194, 196, 197, 198, 199, 231, 234, 236, 237, 239, 241, 243], "adaptattr": 194, "adapttensor": 194, "resetopstatu": 194, "getexecutekernel": 194, "reshape_model": 194, "has_dispatch_table_fil": 194, "set_tuning_mod": 194, "do_tun": 194, "operator_conf": 194, "execute_kernel": 194, "no_tuning_spac": 194, "set_post_op": 194, "post_op": 194, "set_lat": 194, "latenc": [194, 208, 219, 226, 233, 253], "set_enable_spars": 194, "enable_spars": 194, "kernel_typ": [194, 247, 248], "weight_zero_ratio": 194, "set_weight_shap": 194, "int64_t": [194, 199], "weight_shap": 194, "set_table_id": 194, "table_id": 194, "set_perf_ratio_id": 194, "perf_ratio_id": 194, "set_it_shap": 194, "input_shap": [194, 226, 227, 247], "set_ot_shap": 194, "output_shap": [194, 226], "get_it_shap": 194, "get_ot_shap": 194, "set_reshape_tim": 194, "reshape_time_": 194, "get_reshape_tim": 194, "input_attr": 194, "get_attr": 194, "protect": [194, 196, 197], "size_t": [194, 197, 199, 227, 237], "gethash": 194, "name_": 194, "type_": 194, "operator_conf_": [194, 231], "isa": [194, 227, 234, 236, 242, 243, 244], "cpu_isa_": 194, "kernel_handler_": 194, "execute_kernel_": 194, "do_tuning_": 194, "no_tuning_space_": 194, "iter_cnt_": 194, "sparselib_available_": 194, "tune_dense_in_sparse_": 194, "monopoly_kernel_": 194, "dispatch_table_file_exists_": 194, "execution_options_ptr_": 194, "nullptr": [194, 197, 236], "adapt_action_": 194, "model_": 194, "operator_desc": [195, 196, 197, 234], "jd": [196, 197, 198, 199, 237], "cpu_engin": 196, "engine_kind": [196, 198, 237], "eng_kind": [196, 198, 234, 237], "virtual": [196, 197, 198, 231, 236, 237], "impl_list_item_t": [196, 197], "get_implementation_list": 196, "op_desc": [196, 197, 234, 237], "eng_kind_": [196, 198, 237], "cpu_inst": 196, "null_inst": 196, "empty_list": 196, "templat": [197, 199], "typenam": [197, 199], "arg_t": 197, "proxy_bas": 197, "hpp": [197, 198, 199, 227, 234, 247], "proxi": [197, 212, 234, 256], "anyth": 197, "similar": [197, 228, 236, 238, 239, 240, 241, 252], "onednn": [197, 231], "struct": [197, 199, 236, 237], "oneapi": [197, 231, 244], "dnnl": [197, 227, 231], "136": 197, "reset_sp": 197, "sp": 197, "get_sp": 197, "create_proxy_object": 197, "result_ref": 197, "privat": [197, 198, 223, 231, 235, 236, 237, 240], "member": [197, 198, 199, 231, 236, 237], "data_handle_": 197, "kernel_desc_proxi": 197, "kernel_desc_t": 197, "real": [197, 227, 240, 241, 244], "attention_desc": 197, "dyn_quantize_mha_desc": 197, "eltwiseop_desc": 197, "gather_desc": 197, "layernorm_ba_desc": [197, 236], "layernormalized_spmm_desc": 197, "logsoftmax_desc": 197, "softmax_desc": 197, "sparse_matmul_desc": [197, 234], "transpose_matmul_desc": 197, "transpose_mha_desc": 197, "kernel_kind": [197, 198, 237], "impl_list_": 197, "kernel_proxi": 197, "kernel_t": 197, "dyn_quantize_mha": 197, "eltwiseop": [197, 236, 237], "layernorm_ba": 197, "layernormalized_spmm": 197, "logsoftmax": 197, "sparse_matmul": [197, 244], "transpose_matmul": 197, "transpose_mha": 197, "kdp": 197, "rt_data": [197, 234], "get_workspace_s": 197, "kd": [197, 208, 218], "sparse_matmul_desc_t": 197, "sparse_matmul_t": 197, "descriptor": [198, 231, 247], "ker_kind": [198, 234, 237], "kernel_prop": [198, 237], "ker_prop": [198, 234, 237], "tensor_desc": [198, 237], "ts_desc": [198, 234, 237], "postop_attr": [198, 199, 237], "apply_postops_list": [198, 237], "rh": [198, 241], "set_binaryop_list": [198, 236], "binaryop_attr": [198, 199, 236], "binaryop_list": [198, 236], "uint64_t": 198, "impl_nthr": 198, "get_binaryop_list": [198, 236], "ker_kind_": [198, 237], "ker_prop_": [198, 237], "impl_nthr_": [198, 237], "ts_descs_": [198, 237], "attrs_": [198, 237], "apply_postops_list_": [198, 237], "binaryop_list_": [198, 236], "attention_io": 199, "merge_src": 199, "merge_dst": 199, "q_weight": 199, "k_weight": 199, "v_weight": 199, "q_bia": 199, "k_bia": 199, "v_bia": 199, "q_scale": 199, "k_scale": 199, "v_scale": 199, "reshape_input": 199, "q_k_src2": 199, "q_k_scale": 199, "qk_v_output_zero_point": 199, "qk_v_output_scal": 199, "ssd": [199, 237, 247], "eltwiseop_param_t": [199, 237], "element_num": [199, 237], "data_typ": [199, 231, 236, 237, 247], "in_dt": 199, "out_dt": 199, "element_num_each_th": 199, "remain_el": 199, "eltwiseop_data_t": 199, "src": [199, 223, 237, 243, 247], "dst": [199, 231, 236, 237, 238, 239, 242, 243, 247], "gather_param_t": 199, "dt": [199, 236, 237], "dt_size": 199, "remain": 199, "extend_mask": 199, "src_axis_s": 199, "dst_axis_s": 199, "src_size": 199, "idx_siz": 199, "outer_s": 199, "inner_s": 199, "binary_ts_s": 199, "gather_data_t": 199, "binaryop_addr": [199, 236], "16": [199, 219, 220, 223, 233, 238, 239, 240, 243, 244, 245, 253], "spec_translnorm_typ": 199, "normal": [199, 236, 242, 257], "layernorm_ba_param_t": 199, "input_dt": [199, 236, 247], "output_dt": [199, 247], "output2_dt": 199, "spec_typ": [199, 247], "row_num": 199, "col_num": 199, "process_col": [199, 236], "direct_process_row": 199, "process_batch_per_k": 199, "ker_per_batch": 199, "batch_num": 199, "thread_elt_offset": [199, 236], "split_output": 199, "layernorm_ba_data_t": 199, "alpha": [199, 240, 247], "beta": [199, 240, 247], "var": 199, "dst2": 199, "process_row": 199, "anonym": 199, "ep": 199, "1e": 199, "matmul_param_t": 199, "dim_t": 199, "k": [199, 217, 227, 236, 238, 239, 241, 242, 243, 245, 247], "m_tile": 199, "n_tile": 199, "matmul_data_t": 199, "src0": [199, 247], "src1": [199, 226, 236, 247], "src2": [199, 236, 247], "matmul_u8_data_t": 199, "uint8_t": [199, 236, 237], "int8_t": 199, "zp": [199, 236], "matmul_io": 199, "io": [199, 231], "dst0": 199, "scale0": 199, "zp0": 199, "matmul_io_max": 199, "mean_var_reduce_param_t": 199, "bm": 199, "bn": 199, "mean_var_reduce_data_t": 199, "mean_in": 199, "var_in": 199, "mean_out": 199, "var_out": 199, "spec_softmax_typ": 199, "lut": [199, 234, 236, 237, 247], "softmax_param_t": 199, "sepc_typ": 199, "scalar_num": 199, "vec_align_len": 199, "vec_tail_len": 199, "vec_num_per_thr": 199, "vec_num_tail_thr": 199, "get_lut_exp_attr": 199, "softmax_data_t": 199, "tmp": [199, 237, 238, 242], "process_vec_num": 199, "bfloat16_t": 199, "amx_params_t": 199, "amx_bf16_params_t": 199, "amx_int8_params_t": 199, "amx_inputs_t": 199, "amx_bf16f32_inputs_t": 199, "amx_bf16bf16_inputs_t": 199, "sparse_schem": 199, "scenario": [199, 217], "spmm_vnni": 199, "undef": [199, 236, 237], "sparse_x_dens": 199, "dense_x_spars": 199, "sparse_x_spars": 199, "subfunc_level": [199, 247], "non_kdim": 199, "kdim": 199, "subfunc_level_max": [199, 247], "variabl": [199, 228, 231, 247], "constexpr": 199, "wei": 199, "todo": 199, "yi": 199, "conflict": 199, "dst_m1": 199, "dst_m2": 199, "work_spac": 199, "vnni_param_t": 199, "spmm_type": 199, "primit": [199, 231], "jit_domain": 199, "has_bia": 199, "append_sum": 199, "output_typ": [199, 226], "tile_w": 199, "sub_func": 199, "im_start": 199, "blocksiz": 199, "indptr": 199, "welford": [199, 240], "dst_t": 199, "vnni_data_t": 199, "ptr_dens": 199, "int32_t": 199, "ptr_bia": 199, "ptr_dst": 199, "ptr_scale": 199, "ptr_dst_m1": 199, "ptr_dst_m2": 199, "num_tilem": 199, "tilem": 199, "tilen": 199, "blocks_per_group": 199, "64": [199, 208, 209, 222, 226, 233, 241, 242, 244, 245, 247], "sizeof": 199, "nnz_group": 199, "nrowptr": 199, "colidx": 199, "group_rowptr": 199, "same_src_dtyp": 199, "src_t": 199, "wgt_t": 199, "bia_t": 199, "avx512_fp32_params_t": 199, "bsc_data_t": 199, "sparse_ptr": 199, "im_end": 199, "in_start": 199, "in_end": 199, "avx512_data_t": 199, "transpose_copy_param": 199, "srcptr": 199, "dstptr": 199, "srcstride": 199, "dststride": 199, "seq_vnni_copy_param": 199, "transpose_mha_step1_param": 199, "mata": 199, "matb": 199, "matc": 199, "matd": 199, "expsum": 199, "cfg": 199, "batchk": [199, 242], "astep": 199, "cstep": 199, "sumstep": 199, "cbatchstep": 199, "scaleab": 199, "transpose_mha_step2_param": 199, "sumptr": 199, "transpose_mha_step3_param": 199, "scalec": 199, "zeropointc": 199, "transpose_mha_io": 199, "src_k": 199, "src_q": 199, "src_v": 199, "tmp2m": 199, "sl_pad": 199, "head_num": [199, 241, 247], "head_siz": [199, 241, 247], "seq_len": [199, 226, 230, 241, 247], "scale_q": 199, "scale_k": 199, "scale_v": 199, "scale_dst": 199, "zp_dst": 199, "transpose_mha_io_max": 199, "within": [208, 239], "arch": 208, "proposit": 208, "propos": [208, 218, 235], "promis": [208, 239], "assess": 208, "num": [208, 217, 226, 235, 237, 241], "advisor": 208, "bayesian": 208, "ever": 208, "find": [208, 225, 227, 231, 232, 239, 252], "minim": [208, 218, 243], "done": [208, 218, 227, 247, 253], "z": [208, 218], "distanc": [208, 218], "euclidean": [208, 218], "kullback": [208, 218], "leibler": [208, 218], "diverg": [208, 218], "term": [208, 218, 239, 241, 243, 249, 250, 253], "assign": 208, "cal": 208, "sloss": 208, "mismatch": 208, "512": [208, 226, 239, 240, 243, 245], "desir": [208, 226], "unmatch": 208, "def": [208, 225], "agent": 208, "train_func_builtin": 208, "flash_distil": 208, "eval_func_builtin": 208, "els": [208, 225, 231], "search_loop": 208, "model_arch_para": 208, "oob": 208, "246": 208, "intra_bottleneck_s": 208, "96": [208, 233, 245], "160": [208, 233, 244], "num_attention_head": 208, "intermediate_s": 208, "640": 208, "num_feedforward_network": 208, "mobilebert": [208, 218, 219], "kl": 208, "mse": 208, "best_model_arch": 208, "automodelforpretrain": 208, "higher_is_bett": 208, "10": [208, 217, 222, 226, 233, 238, 245, 247], "42": [208, 233, 245], "500": 208, "25000": 208, "mobilebert_distil": 208, "sgd": 208, "learning_r": 208, "001": 208, "mobilebert_na": 208, "5000": 208, "partial": 208, "pylint": 208, "disabl": [208, 233, 245], "e1101": 208, "makedir": 208, "exist_ok": 208, "120": [208, 244], "240": 208, "256": [208, 226, 245], "tfautomodelforsequenceclassif": 208, "help": [209, 217, 232, 236, 246], "improv": [209, 226, 236, 239, 243, 253], "reduct": [209, 221, 239, 241], "compar": [209, 219, 235, 247, 253], "pytorchbenchmarkargu": 209, "model_id_fp32": 209, "model_id_int8": 209, "benchmark_arg": 209, "32": [209, 220, 223, 233, 238, 239, 240, 241, 242, 243, 244, 245, 247], "multi_process": 209, "only_pretrain_model": 209, "seq": [209, 223, 241], "time": [209, 226, 235, 236, 238, 239, 240, 241, 242, 243, 245, 247, 248, 253], "finetu": 209, "017": 209, "021": [209, 233], "029": 209, "013": [209, 233], "mb": [209, 219], "255": [209, 233, 242, 253], "45": [209, 233, 245], "engl": 209, "65": [209, 245], "026": 209, "model_nam": [209, 251], "008": 209, "012": 209, "023": 209, "003": 209, "004": 209, "466": 209, "132": [209, 245], "53": [209, 244, 245], "formerli": [212, 222, 234, 256], "known": [212, 234, 256], "sparselib": [212, 227, 234, 256], "high": [212, 223, 234, 240, 243, 256], "assembli": [212, 234, 239, 243, 244, 256], "domain": [212, 234, 256], "introduc": [214, 235, 236, 237, 238, 241, 242, 243, 253, 258], "who": [214, 237, 258], "might": [214, 228, 258], "intruct": [214, 258], "met": [214, 258], "request": [214, 258], "extens": [217, 221, 222, 224, 225, 250, 251, 252], "tool": [217, 219, 226, 234, 247], "machin": [217, 247], "project": 217, "integr": 217, "nlpaug": 217, "lab": 217, "clone": [217, 222, 224, 225], "cd": [217, 222, 224, 225, 230, 234, 244, 247], "submodul": [217, 222, 223, 224], "recurs": [217, 222, 223, 224, 232], "preprocess": [217, 242], "data_augment": 217, "dataaugment": 217, "augmenter_typ": 217, "textgenerationaug": 217, "input_dataset": 217, "dev": 217, "csv": 217, "output_path": 217, "join": 217, "result_path": 217, "test1": 217, "cv": 217, "augmenter_argu": 217, "gpt2": 217, "data_aug": 217, "data_fil": 217, "delimit": [217, 247], "asserttru": 217, "len": [217, 223, 225, 232, 241], "json": 217, "column": [217, 235, 239, 240, 243, 252], "conduct": 217, "cuda": 217, "keyboardaug": 217, "ocraug": 217, "spellingaug": 217, "contextualwordembsforsentenceaug": 217, "condit": [217, 227, 228], "xl": 217, "xlnet": [217, 219], "ctrl": [217, 219], "enough": [217, 253], "rescu": 217, "natur": [217, 219, 240], "fine": [217, 252, 253], "eo": 217, "open": [217, 223, 229], "txt": [217, 222, 223, 227, 230, 244], "w": [217, 226, 227, 235, 242], "fw": 217, "clm": [217, 219], "train_fil": 217, "validation_fil": 217, "model_dir": 217, "python3": [217, 224], "run_clm": 217, "do_train": 217, "do_ev": 217, "overwrite_output_dir": 217, "secondli": 217, "training_set": 217, "line": [217, 225, 227, 235, 240, 241, 243, 248], "stop": [217, 253], "p": 217, "repetit": 217, "penalti": 217, "wide": [218, 237, 253], "larg": [218, 219, 232, 233, 235, 240, 241], "signific": 218, "expens": 218, "deploi": 218, "power": [218, 219], "mobil": 218, "shown": [218, 227, 239, 242, 243], "workflow": [218, 227, 229, 241], "produc": [218, 243], "instruct": [218, 228, 236, 238, 242, 243, 244, 247, 253], "besid": [218, 237], "often": 218, "guid": [218, 225, 237, 238], "patient": 218, "compact": 218, "agnost": 218, "resourc": 218, "limit": [218, 239, 242], "summar": [218, 219], "usual": [218, 228, 235, 243, 253], "1x1": [218, 227], "eval_accuraci": [218, 221, 252], "d_conf": [218, 221], "tune_metr": [218, 252], "metric_": 218, "classifi": 218, "distillation_conf": 218, "distilled_model": 218, "phase": [218, 252], "intermediatelayersloss": 218, "knowledgedistillationloss": 218, "meanwhil": [219, 235], "demonstr": [219, 221, 241, 243], "posttrainingdynam": [219, 220, 253], "wikitext": 219, "10004": [219, 220], "xsum": 219, "cnn": 219, "cnn_dailymail": 219, "dm": 219, "lambdalab": 219, "sd": 219, "pokemon": 219, "text": [219, 237, 244, 251], "imag": [219, 229, 232, 238, 243], "mlm": 219, "plm": 219, "eleutherai": 219, "neo": 219, "125m": 219, "sshleifer": 219, "wip": [219, 238], "star": 219, "ehdwns1516": 219, "uncased_swag": 219, "swag": 219, "squad": 219, "lvwerra": 219, "pegasu": 219, "samsum": 219, "textattack": [219, 229], "mrpc": [219, 229, 230], "echarlaix": 219, "acc91": 219, "d37": 219, "hybrid": 219, "elast": 219, "conll03": 219, "conll2003": 219, "small": [219, 227, 241], "translat": 219, "wmt16": 219, "helsinki": 219, "opu": 219, "mt": [219, 246], "en": 219, "ro": 219, "quantizationawaretrain": [219, 220], "No": 219, "maskinun": 219, "distilgpt2": 219, "rocketknight1": 219, "dslim": 219, "ner": 219, "datatyp": [219, 220], "f1": [219, 249], "gflop": [219, 245, 248], "speedup": 219, "415": [219, 233], "47": [219, 233, 245], "88": [219, 233, 244, 245], "58": [219, 245], "56": [219, 244, 245], "35": [219, 233, 245], "1x": 219, "la": 219, "minilmv2": 219, "115": 219, "04": [219, 222, 233, 245], "89": [219, 245], "28": [219, 233, 238, 245], "99": [219, 245], "76": [219, 244, 245], "33x": 219, "269": 219, "253": 219, "252": [219, 244], "202": 219, "104": 219, "34": [219, 245], "87": [219, 245], "11": [219, 222, 230, 238, 245], "44": [219, 226, 233, 244, 245], "49": [219, 232, 233, 245], "94x": 219, "84": [219, 245], "85": [219, 233, 245], "21x": 219, "315": 219, "251": [219, 245], "242": [219, 233, 245], "159": [219, 244], "142": [219, 245], "33": [219, 245], "86": [219, 245], "68": [219, 244, 245], "41": [219, 233, 245], "55": [219, 244, 245], "82x": 219, "amount": 219, "torchprofil": 219, "platinum": [219, 233, 245], "8280": 219, "unstructur": [219, 252], "group": [219, 225, 232, 241, 243, 252], "lasso": [219, 252], "nbsp": [219, 233, 245], "qnli": 219, "qqp": 219, "mnli": 219, "v1": 219, "tinybert_general_4l_312d": 219, "distilroberta": 219, "cola": 219, "krishna2020": 219, "googl": 219, "wikipedia": 219, "prajjwal1": 219, "approch": 219, "90": [219, 226, 233], "pruneofa": 219, "patternlock": [219, 252], "bhadresh": 219, "savani": 219, "emot": 219, "fac": 219, "mini": [219, 226, 230, 233], "gchhablani": 219, "philschmid": 219, "l6": 219, "h384": 219, "moshew": [219, 230], "squadv1": 219, "80": [219, 226, 233, 245], "1x4": [219, 243], "desigh": 220, "bit": [220, 221, 235, 236, 240, 243, 253], "bfloat": 220, "fetch": [220, 235], "flag": 220, "enable_bf16": 220, "bfloat16": 220, "qlinear": [220, 229], "u8s8": 220, "u8u8": 220, "highli": 220, "suggest": [220, 236], "enable_executor": 220, "p_conf": [221, 252], "further": [221, 227, 239], "enhanc": [221, 239], "accommod": 221, "budget": 221, "tradeoff": [221, 238], "dynamic_length_config": 221, "aim": [221, 225, 226, 228], "extrem": 221, "opportun": 221, "hw": 221, "sw": 221, "neural_engin": [221, 223, 224, 225, 226, 227, 229, 232, 234, 247], "satisfi": [222, 232], "success": 222, "r": [222, 230, 233, 245, 253], "recommend": [222, 225, 227, 230, 232, 240, 244], "protobuf": [222, 230], "nightli": 222, "conda": [222, 230], "visual": 222, "studio": 222, "compat": 222, "cascad": 222, "lake": 222, "icelak": 222, "futur": [222, 229, 236, 237, 244], "cento": 222, "ubuntu": [222, 233, 245], "ipex": [222, 253], "13": [222, 233, 238, 245], "multi": [223, 226, 227], "bert_model": 223, "30522": 223, "1024": [223, 226, 227, 245, 247], "125018112": 223, "dst_shape": [223, 225, 231], "slightli": 223, "activ": [223, 229, 230, 235, 238, 239, 242, 253], "throught": 223, "numactl": 223, "command": [223, 225, 229, 248], "bind": 223, "core": [223, 233, 235, 240, 245, 248], "omp_num_thread": 223, "session": 223, "close": 223, "glog_minloglevel": [223, 230], "again": [223, 240], "nerual": 223, "show": [223, 225, 228, 229, 232, 238, 241], "actual": [223, 225, 240], "cc": 223, "cmakelist": 223, "reus": 223, "mkdir": [223, 224, 234, 244, 247], "engine_integr": 223, "innersourc": 223, "xtransform": 223, "submoudl": 223, "cp": 223, "nlp_executor": 223, "neural_engine_exampl": 223, "ne": 223, "root": 223, "ne_root": 223, "project_source_dir": 223, "link": [223, 231, 252], "lib": 223, "add_execut": 223, "target_include_directori": 223, "boost_inc_dir": 223, "target_link_librari": 223, "cmake_thread_libs_init": 223, "gflag": 223, "cmake": [223, 224, 234, 244, 247], "window": 224, "linux": 224, "gcc": 224, "repo_path": 224, "dpython_execut": 224, "dne_with_sparselib": [224, 247], "neural_engine_bin": 224, "neural_engine_pi": [224, 227], "cpython": 224, "37m": 224, "x86_64": 224, "gnu": 224, "libkernellib": 224, "libneural_engin": 224, "pure": [224, 237], "certain": [225, 232], "simplifi": [225, 228], "attach": [225, 232], "distilbert_bas": 225, "assum": [225, 232], "repo": [225, 247], "instal": [225, 259], "These": [225, 228, 232, 242], "roughli": 225, "divid": [225, 232, 235, 239, 242, 248], "categori": [225, 226], "through": [225, 236, 238, 239, 244], "father": 225, "keep_dim": 225, "axi": [225, 226, 241, 242], "ax": [225, 241], "come": 225, "rewrit": 225, "_attr": 225, "successfulli": [225, 232], "forget": [225, 228, 231], "reinstal": 225, "enter": 225, "you_work_dir": 225, "noth": [225, 232], "wrong": [225, 232], "anoth": [225, 228, 244], "correctli": 225, "distil_bert_bas": 225, "pattern_mapping_config": 225, "div": [225, 228], "even": [225, 235], "delv": 225, "recogn": 225, "put": [225, 228], "collect": [225, 226, 253], "namedtupl": 225, "__call__": 225, "retriev": 225, "equival": [225, 243], "supported_pattern": 225, "appropri": [225, 236, 242], "influenc": [225, 228], "arbitrari": 225, "pattern_dict": 225, "new_node_nam": 225, "ret_old_nod": 225, "talk": 225, "epsilon": 225, "denomin": 225, "numer": [225, 253], "stabil": 225, "_set_attr": 225, "ln_node_idx": 225, "meet": [225, 238, 243], "finish": [225, 228, 230], "yourself": [225, 232], "analyz": 226, "let": [226, 231, 238], "readm": [226, 229], "run_executor": [226, 230], "input_model": [226, 229, 230], "model_and_token": [226, 229, 230], "Of": [226, 232], "cours": [226, 232], "proflil": 226, "trace": 226, "latanc": 226, "perf": [226, 243, 247, 248], "perfrom": 226, "chrome": 226, "view": [226, 235], "wai": [226, 227, 228, 232, 235, 237, 241, 244], "tell": [226, 228, 236, 237], "inst": 226, "And": [226, 227, 228, 229, 232, 236], "count": [226, 231], "pref": 226, "semi": 226, "4x1": [226, 235, 243], "70": [226, 233], "256x256": [226, 247], "settabl": 226, "256x1024": 226, "1024x256": 226, "post": [226, 247], "gelu_tanh": [226, 231], "add_37": 226, "116": [226, 245], "641": 226, "00": 226, "075": 226, "0375": 226, "comparison": [226, 243], "entir": [226, 235, 240, 252], "185": 226, "801": 226, "693": 226, "366": 226, "content": 226, "part1": [226, 231], "modif": 226, "xlsx": 226, "titl": 226, "model_infer": 226, "friendli": [226, 240], "000": 226, "wall": 226, "durat": 226, "17": [226, 233, 238, 245], "138": 226, "iteration4": 226, "726": 226, "per": [226, 233, 236, 238, 245, 248, 252], "phrase": 226, "0m": 226, "permut": [226, 238, 241, 247], "perm": [226, 241], "add_284": 226, "028": [226, 245], "044": 226, "reshape_tim": 226, "004m": 226, "forward_tim": 226, "044m": 226, "input_tensor_nam": 226, "matmul_357": 226, "matmul_358": 226, "matmul_346": 226, "input_typ": 226, "f32": [226, 231], "output_tensor_nam": 226, "append_op": 226, "src1_perm": 226, "try": [227, 253], "pictur": [227, 235, 246], "bring": [227, 239, 242, 243], "merg": [227, 232], "qkv": [227, 229], "off": 227, "model_path": 227, "easi": [227, 229], "mix": 227, "int8_model_path": 227, "shape_0": 227, "shape_1": 227, "shape_2": 227, "consid": [227, 235, 237, 238], "enlarg": 227, "subsequ": [227, 242], "remark": 227, "micro": [227, 235, 239, 243], "oc": [227, 247], "mk": 227, "kn": 227, "nhwc": 227, "nxhxw": 227, "h": 227, "nk": 227, "km": 227, "mmkmb": 227, "mmxmb": 227, "fulfil": 227, "along": [227, 239, 241, 243], "omp": 227, "higher": [227, 241, 243, 247, 253], "unrol": [227, 239], "know": [227, 238], "disk": [227, 229], "dp": 227, "enable_op_tun": 227, "engine_dispatch_t": 227, "workspac": 227, "row": [227, 238, 243, 252], "rest": [227, 228, 232, 241, 243], "hash": [227, 236], "kernel_config": [227, 247], "kernel_nam": [227, 247], "3025159985633461085": 227, "40": [227, 233], "14124194128933833351": 227, "thing": 227, "affect": [227, 242], "warmup": 227, "simul": [227, 243, 244], "warmup_it": 227, "num_iter": 227, "dispatch_table_file_root": 227, "file_root": 227, "script": [227, 229, 246], "prevent": 227, "imprecis": 227, "purpos": [228, 232, 236], "realiz": 228, "suppli": [228, 232], "recognit": [228, 232], "embeddings_reshap": 228, "said": 228, "thought": 228, "st": 228, "nd": 228, "greater": [228, 249, 250], "reason": [228, 231, 240], "sent": 228, "written": 228, "phenomenon": 228, "Its": 228, "situat": [228, 240], "nod": 228, "leav": [228, 241, 243], "old_node_index": 228, "_get_pattern_info": 228, "maintain": 228, "becom": [228, 243], "_create_out_pattern": 228, "_replace_pattern": 228, "emitt": 229, "netron": 229, "s8": [229, 236, 237, 247], "u8": [229, 231, 237, 242, 247], "bash": [229, 230], "prepare_model": [229, 230], "sh": [229, 230, 248], "task_nam": [229, 230], "ptq": 229, "much": 229, "ir_path": 229, "focu": [230, 241, 249], "nc_folder": 230, "deepengin": 230, "distilbert_base_uncased_mrpc": 230, "env": 230, "prepare_dataset": 230, "shell": 230, "tokenizer_dir": 230, "data_dir": 230, "develop": 231, "geluoper": 231, "destructor": 231, "html": 231, "algorithm_": 231, "eng_": 231, "eltwise_forward": 231, "gelu_p_": 231, "src_m_": 231, "dst_m_": 231, "attrs_map": 231, "adjust": [231, 253], "becuas": 231, "src_shape": 231, "dst_tensor_ptr": 231, "set_shap": 231, "stride": [231, 235], "src_stride": 231, "getstrid": 231, "dst_stride": 231, "desc": [231, 236, 237], "src_md": 231, "dst_md": 231, "part2": 231, "gelu_algorithm": 231, "gelu_erf": 231, "eltwise_gelu_erf": 231, "eltwise_gelu_tanh": 231, "gelu_d": 231, "prop_kind": 231, "forward_infer": [231, 237], "primitive_desc": 231, "gelu_pd": 231, "unrefernc": 231, "reduc": [231, 235, 236, 239, 240, 242, 243, 253], "manag": 231, "strictli": 231, "alia": 231, "src_data": 231, "dst_data": 231, "mutable_data": 231, "data_ptr": 231, "stream": 231, "set_data_handl": 231, "const_cast": 231, "reinterpret_cast": 231, "memory_args_": 231, "dnnl_arg_src": 231, "dnnl_arg_dst": 231, "unref": 231, "unref_tensor": 231, "especi": [231, 243], "int8_lut_optim": 231, "int8_lut_acc_test": 231, "set_dtyp": 231, "register_operator_class": 231, "rule": 232, "recruit": 232, "ln_pattern": 232, "grow": 232, "concis": 232, "intuit": 232, "choos": 232, "prefer": [232, 241], "longer": 232, "ones": 232, "op_type1": 232, "op_type2": 232, "type1": 232, "type2": 232, "separ": [232, 243], "elig": 232, "a_node_name_1": 232, "b_node_name_1": 232, "c_node_name_1": 232, "a_node_name_2": 232, "b_node_name_2": 232, "c_node_name_2": 232, "a_node_name_n": 232, "b_node_name_n": 232, "c_node_name_n": 232, "bert_large_model_path": 232, "layer_0": 232, "layer_1": 232, "layer_2": 232, "afterward": 232, "volatil": 232, "incorrect": 232, "outcom": 232, "exactli": 232, "screen": 232, "occur": [232, 235, 240], "alreadi": 232, "moment": 232, "varianc": [232, 240], "batchnorm": 232, "mul_1": 232, "mul_2": 232, "add_1": 232, "07": [233, 245], "8375c": [233, 245], "aw": [233, 245], "c6i": [233, 245], "12xlarg": [233, 245], "vari": [233, 245], "factor": [233, 245], "visit": [233, 245], "www": [233, 245], "sequencelength": 233, "throughput": 233, "sec": 233, "batchsiz": 233, "2652": 233, "36": [233, 245], "513": 233, "lt": [233, 245], "50m": 233, "2181": 233, "43": [233, 245], "628": 233, "1719": 233, "91": [233, 245], "75": [233, 245], "1487": [233, 245], "1220": 233, "39": [233, 245], "143": 233, "1304": 233, "46": [233, 245], "066": 233, "1102": [233, 245], "870": 233, "487": 233, "750": 233, "82": [233, 244, 245], "690": [233, 245], "188": 233, "910": [233, 245], "921": [233, 245], "729": 233, "71": [233, 244, 245], "619": 233, "38": [233, 244, 245], "821": [233, 245], "499": 233, "933": 233, "429": [233, 244], "936": [233, 245], "680": 233, "318": [233, 245], "557": 233, "262": 233, "467": 233, "589": 233, "405": 233, "339": 233, "473": 233, "119": [233, 245], "389": 233, "945": [233, 245], "360": 233, "274": 233, "843": 233, "259": [233, 244, 245], "442": 233, "241": 233, "364": 233, "016": [233, 245], "303": 233, "266": 233, "05": [233, 245], "221": 233, "973": 233, "112": [233, 245], "349": 233, "938": [233, 245], "275": [233, 244], "614": 233, "217": 233, "37": [233, 245], "039": 233, "301": 233, "166": 233, "033": 233, "320": 233, "769": 233, "263": 233, "724": [233, 245], "207": 233, "819": [233, 245], "181": 233, "979": [233, 245], "74": [233, 245], "235": 233, "63": [233, 245], "091": 233, "51": [233, 245], "914": [233, 245], "698": [233, 245], "905": [233, 245], "8972": 233, "076": [233, 245], "20m": 233, "7192": 233, "19": [233, 238, 245], "906": 233, "5482": 233, "509": 233, "4808": 233, "952": 233, "3678": 233, "409": 233, "4750": 233, "975": [233, 245], "3647": 233, "867": 233, "2921": 233, "587": [233, 245], "2576": 233, "18": [233, 238, 245], "768": [233, 245], "2131": [233, 245], "913": [233, 245], "2804": 233, "096": 233, "2263": 233, "037": 233, "1938": 233, "756": [233, 245], "1581": 233, "15": [233, 238, 239, 243, 245], "1409": 233, "015": 233, "2116": 233, "113": 233, "1777": 233, "972": [233, 245], "1474": 233, "392": 233, "1278": 233, "1137": 233, "752": 233, "1594": 233, "124": 233, "1347": [233, 245], "1126": 233, "993": [233, 245], "258": 233, "890": [233, 245], "877": [233, 245], "1319": 233, "1086": 233, "931": [233, 245], "545": 233, "833": 233, "332": [233, 245], "747": [233, 245], "141": 233, "1106": [233, 245], "31": [233, 238, 239, 245], "924": 233, "446": 233, "719": 233, "633": 233, "501": 233, "816": 233, "961": 233, "549": 233, "807": 233, "868": [233, 245], "701": [233, 245], "117": 233, "613": 233, "618": 233, "515": 233, "484": 233, "75384": 233, "989": 233, "1m": 233, "55628": 233, "917": 233, "49120": 233, "957": [233, 245], "41598": 233, "39218": 233, "31211": 233, "788": [233, 245], "28399": 233, "848": 233, "24910": 233, "966": 233, "20505": 233, "18575": 233, "865": 233, "25485": 233, "987": 233, "17468": 233, "16771": 233, "971": [233, 245], "16004": 233, "996": [233, 245], "13381": 233, "894": [233, 245], "13990": 233, "863": [233, 245], "13154": 233, "12535": 233, "12102": 233, "998": 233, "8426": [233, 245], "8736": 233, "8282": 233, "967": 233, "6659": 233, "898": [233, 245], "6477": 233, "6290": 233, "974": [233, 245], "8598": 233, "6449": 233, "935": [233, 245], "6263": [233, 245], "965": [233, 245], "6080": 233, "988": 233, "3684": 233, "817": [233, 245], "6246": 233, "978": 233, "6374": 233, "947": [233, 245], "6026": 233, "3300": [233, 245], "926": 233, "3226": 233, "6221": 233, "958": 233, "6322": 233, "6081": 233, "985": [233, 245], "3368": 233, "3264": 233, "distillbert": 233, "15460": 233, "296": 233, "10m": 233, "13129": 233, "363": 233, "11323": 233, "578": [233, 245], "10072": 233, "599": 233, "8689": 233, "7901": 233, "205": [233, 245], "6737": 233, "562": 233, "5440": 233, "904": [233, 245], "4920": 233, "786": [233, 245], "4460": 233, "053": 233, "5280": 233, "179": 233, "4339": 233, "244": [233, 244], "3634": [233, 245], "928": 233, "3255": 233, "211": [233, 245], "2928": 233, "197": [233, 245], "3681": 233, "527": [233, 245], "2965": [233, 245], "106": [233, 245], "2741": 233, "862": [233, 245], "2351": 233, "2150": 233, "282": 233, "2918": 233, "316": 233, "2505": [233, 245], "602": 233, "2010": [233, 245], "995": 233, "1872": 233, "609": [233, 245], "2409": 233, "983": 233, "1993": 233, "1671": [233, 245], "627": 233, "1484": 233, "131": 233, "1342": [233, 245], "1910": 233, "456": [233, 245], "1659": 233, "687": 233, "1293": 233, "245": [233, 245], "1230": 233, "798": 233, "1091": 233, "261": 233, "1627": 233, "908": 233, "1397": 233, "684": 233, "1130": 233, "1081": 233, "353": 233, "982": [233, 245], "187": [233, 244], "manufactur": [233, 245], "amazon": [233, 245], "ec2": [233, 245], "product": [233, 241, 245, 250, 253], "bio": [233, 245], "1021": [233, 245], "microcod": [233, 245], "0xd000331": [233, 245], "irq": [233, 245], "balanc": [233, 245], "xeonplatinum": 233, "90ghz": [233, 245], "9ghz": [233, 245], "5ghz": [233, 245], "thread": 233, "socket": [233, 245], "numa": [233, 245], "turbo": [233, 245], "frequencygovern": [233, 245], "workdir": 234, "dne_with_test": 234, "ON": [234, 247], "ut": [234, 237], "dne_with_sparselib_onli": [234, 247], "dne_with_sparselib_benchmark": [234, 247], "test_spmm_vnni_kernel": 234, "box": 234, "profl": [234, 244], "section": [234, 243, 244], "op_attr": [234, 236, 237, 241], "spmm_desc": 234, "spmm_kern": 234, "data0": 234, "data1": 234, "data2": 234, "data3": 234, "data4": 234, "vnni": [234, 235, 238, 241, 242, 245, 247, 253, 257], "amx": [234, 242, 247, 257], "residu": 234, "avx512": [234, 235, 238, 253], "mha": [234, 257], "avx512f": [234, 241, 247, 257], "spmm": [235, 241, 247], "deeplearn": 235, "multipli": [235, 243, 253], "adopt": [235, 239, 243], "modern": 235, "spatial": 235, "program": 235, "64byte": 235, "organ": 235, "associ": 235, "access": [235, 239], "b1": 235, "b2": 235, "simd": [235, 236, 239], "evenli": 235, "discontinu": 235, "fulli": [235, 242, 243], "worst": 235, "veri": [235, 237], "miss": [235, 243], "frequent": 235, "destin": [235, 239, 241], "l1": 235, "l2": 235, "perhap": 235, "mxk": [235, 247], "bxm": 235, "xk": 235, "bxkxm": 235, "2d": [235, 247], "respons": [235, 240, 242], "frac": [235, 241], "binaryop": 236, "dl": 236, "changeabl": 236, "operand": [236, 239], "seri": [236, 238, 247], "horizont": 236, "overhead": [236, 240, 241, 242, 243], "move": 236, "binaryop_injector": 236, "postop": [236, 237, 247], "quit": 236, "eltwise_injector": [236, 237], "escap": [236, 237], "compute_vector": 236, "expos": [236, 237], "arithmet": 236, "brows": 236, "vpaddb": 236, "vaddp": 236, "unlik": 236, "what": [236, 237, 241, 252], "ptr": [236, 237, 244], "static_addr": 236, "dequant": [236, 237, 247], "free": [236, 247], "addr": 236, "binaryop_alg": 236, "per_channel_qu": 236, "per_channel_dequ": 236, "op_alg": [236, 237], "op_dt": 236, "alg": 236, "set_scal": 236, "set_zp": 236, "binary_injector_init": 236, "set_mask": 236, "reg64": [236, 237], "zmm": [236, 237, 239, 240, 243], "get_addr": 236, "broadcast": [236, 239, 243, 244], "scalar": 236, "enable_mask": 236, "vector_comput": [236, 237], "bianryop": 236, "comput_vector": 236, "wrapper": 236, "jit_binary_injector": 236, "addr_typ": 236, "jit_gener": [236, 237], "opmask": [236, 237], "reg": [236, 237], "mov": [236, 244], "addr_ptr": 236, "zmm_src1": 236, "regexp": 236, "step1": [236, 237, 242], "binary_injector": 236, "step2": [236, 237, 242], "via": [236, 238, 244], "data_param": 236, "param_": [236, 237], "front": 236, "append_loop_len": 236, "zmm_byte_s": 236, "get_data_s": 236, "offset_exp": 236, "bianryop_attr_list": 236, "append_vec": 236, "binary_add": 236, "eltwis": 237, "tradit": 237, "obvious": [237, 240], "useless": 237, "idea": [237, 243, 252], "xbyak": 237, "exp": [237, 242, 247], "binari": [237, 242, 247, 257], "algo": 237, "aplha": 237, "sacl": 237, "postop_alg": 237, "int8_lut": 237, "postop_typ": 237, "mathemat": 237, "satur": 237, "round": [237, 253], "unus": 237, "\u03b1x": 237, "\u03b2": 237, "le": 237, "gt": 237, "omp_get_max_thread": 237, "omp_get_num_proc": 237, "eltwise_injector_init": 237, "chian": 237, "escape_reg": 237, "escape_eras": 237, "eras": 237, "prepare_t": 237, "zmm_src": 237, "postop_idx": 237, "reg_typ": 237, "reg_idx": 237, "step0": 237, "jit_eltwiseop_t": 237, "assign_reg": 237, "eltwiseop_kd_t": 237, "op_desc_": 237, "params_": 237, "remain_task_mask": 237, "scratch_": 237, "r10": 237, "reg_src": 237, "addr_src": 237, "r15": [237, 244], "addr_dst": 237, "r14": [237, 244], "reg_param": 237, "rdi": [237, 244], "remain_element_num": 237, "rsi": 237, "getidx": 237, "alloc": 237, "special": [237, 241], "rcx": 237, "rdx": 237, "rsp": 237, "step3": [237, 242], "preambl": 237, "load_param": 237, "vmovup": [237, 244], "postambl": 237, "fp32_gelu_attr": 237, "bf16_gelu_attr": 237, "gen": 237, "push_back": 237, "gen_cas": 237, "data0_desc": 237, "postop_list": 237, "fp32_gelu": [237, 247], "fp32_exp": 237, "mask_mock1": 237, "reg64_mock1": 237, "zmm_mock1": 237, "fp32_exp_attr": 237, "data1_desc": 237, "bf16_gelu": 237, "bf16_exp": [237, 247], "bf16_exp_attr": 237, "dt1op1": 237, "dt2op2": 237, "hase": 237, "get_true_data": 237, "rf_data": 237, "your_kernel_log": 237, "apply_postop_list": 237, "unit_test_util": 237, "tdpbf16p": 238, "16x32": 238, "32x16": 238, "FOR": [238, 239, 243], "TO": 238, "colsb": 238, "byte": [238, 243], "col": [238, 240, 242], "endfor": [238, 239, 243], "write_row_and_zero": 238, "zero_upper_row": 238, "zero_tileconfig_start": 238, "layout": [238, 240, 241, 242], "successor": 238, "1x16": [238, 243], "concaten": [238, 243, 247], "intrins": 238, "offlin": [238, 243, 253], "tileloadd": 238, "nonzero": 238, "good": 238, "vmovdqu32": 238, "consum": 238, "altern": [238, 243], "lot": 238, "disast": 238, "16x1": [238, 241], "greatli": [238, 242], "impact": 238, "fly": 238, "__m512i": 238, "_mm512_set_epi16": 238, "29": [238, 245], "27": [238, 245], "26": [238, 244, 245], "25": [238, 245, 247], "23": [238, 245], "22": [238, 245], "21": [238, 245], "__m256i": 238, "lo": 238, "_mm256_loadu_epi": 238, "li": 238, "vec": 238, "_mm512_inserti32x8": 238, "_mm512_castsi256_si512": 238, "_mm512_permutexvar_epi16": 238, "_mm512_storeu_epi32": 238, "vfmadd": 239, "vfmadd231p": [239, 244], "degre": 239, "parallel": [239, 240, 243, 247], "conting": 239, "act": 239, "bsc": 239, "variant": 239, "bsr": 239, "openmp": 239, "over": [239, 241], "thu": [239, 253], "relief": 239, "bottleneck": [239, 240], "microkernel": 239, "peripher": 239, "implicit": 239, "naiv": 240, "solut": [240, 243], "gap": 240, "layernrom": 240, "rate": 240, "3d": [240, 257], "significantli": [240, 242], "capabl": [240, 243], "poor": 240, "fewer": 240, "wast": 240, "inconsist": 240, "scene": 240, "quarter": 240, "back": [240, 241, 242], "figur": [240, 241, 243, 246], "depict": 240, "At": [240, 242], "protocol": 240, "offset": [240, 241], "bandwidth": [240, 242, 253], "gain": [240, 253], "brought": [240, 253], "solv": [240, 253], "majotr": 240, "layternorm": 240, "encapsul": 240, "ba": [240, 244, 247], "onlin": 240, "discret": 240, "buffer": [240, 242], "append": [240, 247, 248], "overal": 240, "p2031": [241, 247], "2013": 241, "noperm": [241, 247], "p1302": [241, 247], "p2013": [241, 247], "equat": [241, 253], "dot": [241, 253], "rm": 241, "q": [241, 242], "v": [241, 242], "qk": 241, "textunderscor": 241, "nativ": 241, "sparelib": 241, "physic": 241, "axis": 241, "conceptu": 241, "head_nun": 241, "perm2031": 241, "perm2013": 241, "perm1302": 241, "concept": [241, 243], "lh": 241, "float32": [241, 253], "illustr": 241, "inner": 241, "bodi": 241, "accumul": [241, 243], "16x16": 241, "drawn": 241, "lighter": 241, "cell": [241, 243], "uint8": [241, 253], "respectfulli": 241, "vnni_noperm_p2013_p1302": 241, "transpose_4b_8x8": 241, "legend": 241, "explan": 241, "contigu": 241, "ellipsi": 241, "thinner": 241, "border": 241, "bolder": 241, "color": [241, 243], "16x32x16": 241, "lead": [241, 243], "suboptim": 241, "temporari": 241, "piec": 241, "turn": 241, "abl": [241, 253], "boost": 241, "twofold": 241, "unifi": 241, "roll": 241, "workload": 241, "logic": [242, 244], "twice": 242, "worth": 242, "stack": 242, "clear": 242, "fact": [242, 253], "With": [242, 253], "spr": 242, "latter": 242, "2nd": 242, "clx": 242, "among": 242, "4x16": [242, 243], "launch": 242, "mxn": [242, 247], "prior": 242, "iteraion": 242, "polynomi": 242, "essenti": 242, "half": 242, "incom": 242, "facilit": 242, "far": 242, "four": 243, "adjac": 243, "unsign": [243, 247], "sign": [243, 253], "tmp1": 243, "zeroextend16": 243, "signextend16": 243, "tmp2": 243, "tmp3": 243, "tmp4": 243, "dword": [243, 244], "benefit": [243, 253], "transposit": 243, "discuss": 243, "typic": 243, "sai": 243, "4x4": 243, "pick": 243, "mxkxn": 243, "problem": 243, "densiti": 243, "fma": 243, "bubbl": 243, "16x4": 243, "highlight": 243, "4x": 243, "talent": 243, "smart": 243, "gui": [243, 244], "swizzl": 243, "workaround": 243, "investig": 243, "unfortun": 243, "difficulti": 243, "bad": 243, "cost": 243, "harm": 243, "2x1": 243, "conclus": 243, "against": 243, "brief": 244, "sparse_lib_verbos": 244, "sparselib_verbos": 244, "nthr": 244, "224": [244, 245], "exec": 244, "shape_256_256_128": 244, "4658": [244, 245], "56982": 244, "itt": 244, "dne_with_sparselib_vtun": 244, "opt": 244, "latest": 244, "manual": 244, "dcmake_vtune_hom": 244, "sparse_lib_vtun": 244, "ssh": 244, "verifi": 244, "sparse_lib_dump": 244, "xed64": 244, "click": 244, "xdi": 244, "push": 244, "rbx": 244, "rbp": 244, "4154": 244, "r12": 244, "4155": 244, "r13": 244, "4156": 244, "4157": 244, "dataxf": 244, "bd00040000": 244, "ebp": 244, "0x400": 244, "4c8b3f": 244, "qword": 244, "4c8b7708": 244, "0x8": 244, "4c8b6f10": 244, "0x10": 244, "1a": 244, "avx512evex": 244, "62f17d48efc0": 244, "vpxord": 244, "zmm0": 244, "62f15d48efe4": 244, "zmm4": 244, "62513d48efc0": 244, "zmm8": 244, "2c": 244, "62511d48efe4": 244, "zmm12": 244, "62f17548efc9": 244, "zmm1": 244, "62f15548efe": 244, "zmm5": 244, "3e": 244, "62513548efc9": 244, "zmm9": 244, "62511548efe": 244, "zmm13": 244, "4a": 244, "62f16d48efd2": 244, "zmm2": 244, "50": 244, "62f14d48eff6": 244, "zmm6": 244, "62512d48efd2": 244, "zmm10": 244, "5c": 244, "62510d48eff6": 244, "zmm14": 244, "62": [244, 245], "62c17c481006": 244, "zmm16": 244, "zmmword": 244, "62c17c48104e01": 244, "zmm17": 244, "0x40": 244, "6f": 244, "62c17c48105602": 244, "zmm18": 244, "0x80": 244, "62427d48183f": 244, "vbroadcastss": 244, "zmm31": 244, "7c": 244, "vfma": 244, "62927d40b8c7": 244, "62927540b8cf": 244, "62926d40b8d7": 244, "8e": 244, "62427d48187f04": 244, "95": [244, 245], "62927d40b8e7": 244, "9b": 244, "62927540b8ef": 244, "a1": 244, "62926d40b8f7": 244, "a7": 244, "62427d48187f08": 244, "0x20": 244, "ae": 244, "62127d40b8c7": 244, "b4": 244, "62127540b8cf": 244, "62126d40b8d7": 244, "c0": 244, "62427d48187f0c": 244, "0x30": 244, "c7": 244, "62127d40b8e7": 244, "62127540b8ef": 244, "62126d40b8f7": 244, "d9": 244, "62c17c48104603": 244, "0xc0": 244, "e0": 244, "62c17c48104e04": 244, "0x100": 244, "e7": 244, "62c17c48105605": 244, "0x140": 244, "ee": 244, "62427d48187f01": 244, "0x4": 244, "f5": 244, "fb": 244, "101": 244, "107": 244, "62427d48187f05": 244, "0x14": 244, "10e": 244, "114": 244, "11a": 244, "62427d48187f09": 244, "0x24": 244, "12d": 244, "133": 244, "139": 244, "62427d48187f0d": 244, "0x34": 244, "140": 244, "146": 244, "14c": 244, "152": 244, "62c17c48104606": 244, "0x180": 244, "62c17c48104e07": 244, "0x1c0": 244, "62c17c48105608": 244, "0x200": 244, "167": [244, 245], "62427d48187f02": 244, "16e": 244, "174": 244, "17a": 244, "180": 244, "62427d48187f06": 244, "0x18": 244, "18d": 244, "193": 244, "199": 244, "62427d48187f0a": 244, "0x28": 244, "1a0": 244, "1a6": 244, "1ac": 244, "1b2": 244, "62427d48187f0e": 244, "0x38": 244, "1b9": 244, "1bf": 244, "1c5": 244, "1cb": 244, "62c17c48104609": 244, "0x240": 244, "1d2": 244, "62c17c48104e0a": 244, "0x280": 244, "1d9": 244, "62c17c4810560b": 244, "0x2c0": 244, "1e0": 244, "62427d48187f03": 244, "0xc": 244, "1e7": 244, "1ed": 244, "1f3": 244, "1f9": 244, "62427d48187f07": 244, "0x1c": 244, "200": 244, "206": 244, "20c": 244, "212": 244, "62427d48187f0b": 244, "0x2c": 244, "219": [244, 245], "21f": 244, "225": 244, "22b": 244, "62427d48187f0f": 244, "0x3c": 244, "232": [244, 245], "238": 244, "23e": 244, "62d17c48114500": 244, "24b": 244, "62d17c48116503": 244, "62517c48114506": 244, "62517c48116509": 244, "260": 244, "62d17c48114d01": 244, "267": 244, "62d17c48116d04": 244, "26e": 244, "62517c48114d07": 244, "62517c48116d0a": 244, "27c": 244, "62d17c48115502": 244, "283": 244, "62d17c48117505": 244, "28a": 244, "62517c48115508": 244, "291": 244, "62517c4811750b": 244, "298": [244, 245], "pop": 244, "415f": 244, "29a": 244, "415e": 244, "29c": 244, "415d": 244, "29e": 244, "415c": 244, "2a0": 244, "5d": 244, "2a1": 244, "5b": 244, "2a2": 244, "avx": 244, "c5f877": 244, "vzeroupp": 244, "2a5": 244, "xed3": 244, "stat": 244, "cycl": 244, "29220": 244, "236418": 244, "118": 244, "2003": 244, "54": [244, 245], "00348609": 245, "601": 245, "00310676": 245, "675": 245, "00261406": 245, "802": 245, "00216633": 245, "968": 245, "068": 245, "00164658": 245, "1273": 245, "0112255": 245, "284": 245, "00947462": 245, "885": 245, "377": 245, "00764146": 245, "1097": 245, "78": 245, "0058452": 245, "1435": 245, "00407149": 245, "2060": 245, "0127448": 245, "658": 245, "198": 245, "0111132": 245, "754": 245, "835": 245, "00940157": 245, "892": 245, "00760217": 245, "1103": 245, "0054935": 245, "1527": 245, "044202": 245, "759": 245, "0364227": 245, "0292454": 245, "1147": 245, "0223472": 245, "1501": 245, "0149058": 245, "2251": 245, "4096": 245, "216338": 245, "620": 245, "408": 245, "179593": 245, "345": 245, "135054": 245, "806": 245, "0946983": 245, "1417": 245, "0609701": 245, "2201": 245, "190508": 245, "704": 245, "526": 245, "159566": 245, "841": 245, "130863": 245, "1025": 245, "103927": 245, "1291": 245, "0739962": 245, "1813": 245, "0250395": 245, "753": 245, "784": 245, "0210726": 245, "895": 245, "682": 245, "0170987": 245, "0130778": 245, "1443": 245, "00923343": 245, "2044": 245, "3072": 245, "112882": 245, "668": 245, "818": 245, "0879386": 245, "858": 245, "525": 245, "068835": 245, "1096": 245, "79": 245, "0487342": 245, "1549": 245, "0317559": 245, "2377": 245, "109308": 245, "679": 245, "0922471": 245, "805": 245, "638": 245, "0759107": 245, "0558945": 245, "1329": 245, "61": 245, "0358752": 245, "2071": 245, "57": 245, "00565044": 245, "742": 245, "297": 245, "00503604": 245, "832": 245, "00447544": 245, "937": 245, "182": 245, "00368479": 245, "1138": 245, "00270954": 245, "1547": 245, "98": 245, "0183481": 245, "386": 245, "0154121": 245, "1088": 245, "0125696": 245, "1334": 245, "00959948": 245, "1747": 245, "72": 245, "00677631": 245, "2475": 245, "0206321": 245, "813": 245, "162": 245, "0184267": 245, "483": 245, "0164699": 245, "1018": 245, "66": 245, "0135801": 245, "1235": 245, "010552": 245, "1589": 245, "0721208": 245, "930": 245, "506": 245, "059613": 245, "1125": 245, "0483781": 245, "1387": 245, "0366748": 245, "1829": 245, "83": 245, "0248571": 245, "2699": 245, "376539": 245, "712": 245, "902": 245, "31929": 245, "840": 245, "727": 245, "261265": 245, "1027": 245, "193579": 245, "1386": 245, "118429": 245, "2266": 245, "309195": 245, "177": 245, "256619": 245, "1046": 245, "213454": 245, "1257": 245, "165192": 245, "1624": 245, "118402": 245, "2267": 245, "0402931": 245, "855": 245, "0341169": 245, "0275282": 245, "1371": 245, "0211298": 245, "1786": 245, "0150693": 245, "218765": 245, "215": 245, "180921": 245, "834": 245, "592": 245, "142778": 245, "1057": 245, "097692": 245, "1545": 245, "0620034": 245, "2435": 245, "174101": 245, "853": 245, "73": 245, "148369": 245, "1001": 245, "123554": 245, "1203": 245, "0923655": 245, "1609": 245, "0591283": 245, "2513": 245, "0074474": 245, "844": 245, "00657187": 245, "00570175": 245, "00483104": 245, "1302": 245, "00367406": 245, "1712": 245, "0247063": 245, "0207462": 245, "1213": 245, "03": 245, "0169214": 245, "0129936": 245, "1936": 245, "0090376": 245, "2784": 245, "0275881": 245, "912": 245, "0240415": 245, "77": 245, "0207876": 245, "1210": 245, "0177873": 245, "1414": 245, "0140129": 245, "1795": 245, "0994565": 245, "1012": 245, "0819725": 245, "1228": 245, "0660571": 245, "1523": 245, "0497077": 245, "2025": 245, "0341912": 245, "2944": 245, "500698": 245, "804": 245, "184": 245, "420619": 245, "287": 245, "337529": 245, "1192": 245, "94": 245, "251221": 245, "1602": 245, "158668": 245, "2537": 245, "412912": 245, "155": 245, "346369": 245, "1162": 245, "2831": 245, "1422": 245, "220585": 245, "1825": 245, "156168": 245, "2578": 245, "0538395": 245, "1051": 245, "0455066": 245, "1244": 245, "036978": 245, "1531": 245, "028483": 245, "1987": 245, "0200457": 245, "2824": 245, "283445": 245, "799": 245, "069": 245, "236101": 245, "959": 245, "302": 245, "188745": 245, "1199": 245, "135532": 245, "0845544": 245, "2678": 245, "227976": 245, "977": 245, "19463": 245, "1145": 245, "161251": 245, "1382": 245, "123585": 245, "1804": 245, "0840322": 245, "2653": 245, "00940534": 245, "891": 245, "00821985": 245, "1020": 245, "00701343": 245, "1196": 245, "08": 245, "00579899": 245, "1446": 245, "00464705": 245, "1805": 245, "0336342": 245, "997": 245, "629": 245, "0276086": 245, "1215": 245, "0224431": 245, "1495": 245, "09": 245, "0170807": 245, "1964": 245, "0117535": 245, "2854": 245, "0358603": 245, "0310083": 245, "1082": 245, "0260486": 245, "1288": 245, "0215163": 245, "1559": 245, "0170105": 245, "1972": 245, "133295": 245, "1006": 245, "92": 245, "111186": 245, "1207": 245, "0881114": 245, "0665519": 245, "2016": 245, "0454416": 245, "2953": 245, "611718": 245, "645": 245, "533329": 245, "430288": 245, "1247": 245, "307141": 245, "198987": 245, "2698": 245, "02": [245, 249], "556249": 245, "163": 245, "462737": 245, "1160": 245, "37537": 245, "1430": 245, "28321": 245, "1895": 245, "203901": 245, "2633": 245, "0716356": 245, "1053": 245, "0603517": 245, "1250": 245, "0490096": 245, "1540": 245, "0375683": 245, "2009": 245, "0267483": 245, "2822": 245, "3572": 245, "845": 245, "437": 245, "299561": 245, "1008": 245, "228752": 245, "1320": 245, "165648": 245, "1823": 245, "105656": 245, "2858": 245, "298907": 245, "994": 245, "529": 245, "255598": 245, "1163": 245, "20824": 245, "1427": 245, "159911": 245, "1858": 245, "111211": 245, "2673": 245, "0152997": 245, "685": 245, "358": 245, "0131446": 245, "797": 245, "0109669": 245, "956": 245, "00921101": 245, "00755406": 245, "1388": 245, "0553082": 245, "758": 245, "351": 245, "0458481": 245, "826": 245, "0367258": 245, "1142": 245, "06": 245, "027535": 245, "018464": 245, "2271": 245, "0597882": 245, "0510217": 245, "822": 245, "062": 245, "0421644": 245, "0333436": 245, "0296385": 245, "1415": 245, "22241": 245, "337": 245, "18324": 245, "915": 245, "145322": 245, "1154": 245, "1083": 245, "0728843": 245, "2301": 245, "11793": 245, "600": 245, "929398": 245, "722": 245, "720963": 245, "823": 245, "510039": 245, "1315": 245, "336519": 245, "1994": 245, "909941": 245, "737": 245, "508": 245, "753487": 245, "644": 245, "606477": 245, "459915": 245, "1459": 245, "303455": 245, "2211": 245, "123429": 245, "764": 245, "586": 245, "103035": 245, "923": 245, "0825026": 245, "1143": 245, "0625579": 245, "1508": 245, "0426942": 245, "2210": 245, "60813": 245, "734": 245, "483053": 245, "781": 245, "462": 245, "357348": 245, "1056": 245, "256715": 245, "1470": 245, "169119": 245, "2232": 245, "503341": 245, "738": 245, "42134": 245, "881": 245, "342843": 245, "255199": 245, "1456": 245, "174091": 245, "2134": 245, "0142667": 245, "0123966": 245, "1015": 245, "0105865": 245, "1188": 245, "00860835": 245, "1461": 245, "00655363": 245, "1919": 245, "0532543": 245, "0447548": 245, "1124": 245, "0348388": 245, "1444": 245, "0266886": 245, "1885": 245, "0177431": 245, "2836": 245, "69": 245, "0549107": 245, "916": 245, "608": 245, "0475549": 245, "1058": 245, "0401657": 245, "1253": 245, "0326952": 245, "1539": 245, "025032": 245, "220947": 245, "911": 245, "178324": 245, "1128": 245, "137361": 245, "1465": 245, "103126": 245, "1952": 245, "0701429": 245, "2870": 245, "06648": 245, "755": 245, "893959": 245, "900": 245, "831": 245, "718893": 245, "1120": 245, "537405": 245, "1498": 245, "280686": 245, "2869": 245, "902588": 245, "730678": 245, "582871": 245, "1381": 245, "444133": 245, "298489": 245, "2697": 245, "581": 245, "0955952": 245, "1184": 245, "078109": 245, "1449": 245, "0596185": 245, "1899": 245, "0414047": 245, "2735": 245, "596568": 245, "497127": 245, "396634": 245, "286973": 245, "1578": 245, "167473": 245, "2704": 245, "472466": 245, "943": 245, "787": 245, "391055": 245, "1140": 245, "319865": 245, "1394": 245, "247491": 245, "1801": 245, "169874": 245, "2624": 245, "93": 245, "0213786": 245, "686": 245, "67": 245, "018228": 245, "0152068": 245, "0120525": 245, "1218": 245, "0103961": 245, "1412": 245, "0771592": 245, "761": 245, "0642402": 245, "074": 245, "0514668": 245, "0387886": 245, "1513": 245, "0256871": 245, "2285": 245, "0836219": 245, "702": 245, "0712915": 245, "664": 245, "0589148": 245, "697": 245, "0484067": 245, "0411331": 245, "311691": 245, "569": 245, "256635": 245, "204973": 245, "153086": 245, "1534": 245, "101206": 245, "2320": 245, "59625": 245, "588": 245, "583": 245, "33246": 245, "705": 245, "03849": 245, "703": 245, "738939": 245, "1271": 245, "480308": 245, "1956": 245, "26056": 245, "745": 245, "324": 245, "04874": 245, "842936": 245, "1114": 245, "59": 245, "635554": 245, "1478": 245, "42145": 245, "2229": 245, "174215": 245, "375": 245, "145836": 245, "116701": 245, "1132": 245, "0876727": 245, "1506": 245, "0595001": 245, "2220": 245, "883258": 245, "598": 245, "333": 245, "711146": 245, "743": 245, "543634": 245, "129": 245, "402406": 245, "1313": 245, "266945": 245, "1979": 245, "70404": 245, "592043": 245, "878": 245, "695": 245, "475444": 245, "1094": 245, "358932": 245, "240739": 245, "2160": 245, "0184384": 245, "909": 245, "907": 245, "0158714": 245, "013504": 245, "1242": 245, "0109927": 245, "1526": 245, "00826017": 245, "2031": 245, "061272": 245, "1095": 245, "0609618": 245, "1100": 245, "0467291": 245, "1436": 245, "0340362": 245, "1971": 245, "0231282": 245, "2901": 245, "0717247": 245, "0616923": 245, "1087": 245, "0521595": 245, "1286": 245, "0423267": 245, "1585": 245, "0321109": 245, "2089": 245, "286461": 245, "242512": 245, "181783": 245, "1476": 245, "139021": 245, "1930": 245, "0870121": 245, "3085": 245, "36322": 245, "652": 245, "08991": 245, "880185": 245, "1219": 245, "694533": 245, "366328": 245, "2931": 245, "15748": 245, "927": 245, "937824": 245, "1144": 245, "745357": 245, "1440": 245, "558061": 245, "1924": 245, "391387": 245, "2743": 245, "157349": 245, "616": 245, "129806": 245, "103083": 245, "1464": 245, "0784417": 245, "053639": 245, "2815": 245, "767569": 245, "874": 245, "641585": 245, "941": 245, "387": 245, "488558": 245, "1236": 245, "355651": 245, "1698": 245, "230945": 245, "2615": 245, "611059": 245, "514108": 245, "1156": 245, "416571": 245, "318094": 245, "1869": 245, "225023": 245, "2642": 245, "0375093": 245, "564": 245, "0317602": 245, "0261888": 245, "1281": 245, "0211151": 245, "0158951": 245, "2110": 245, "141333": 245, "949": 245, "133647": 245, "1004": 245, "0999998": 245, "0710327": 245, "1889": 245, "52": 245, "0429916": 245, "3121": 245, "147474": 245, "125344": 245, "1070": 245, "104294": 245, "0849766": 245, "1579": 245, "0624729": 245, "2148": 245, "701639": 245, "765": 245, "534615": 245, "359791": 245, "1492": 245, "2612": 245, "2055": 245, "183193": 245, "2930": 245, "92067": 245, "735": 245, "271": 245, "4402": 245, "880": 245, "046": 245, "69186": 245, "1269": 245, "17436": 245, "1828": 245, "880179": 245, "2439": 245, "62123": 245, "264": 245, "14905": 245, "999": 245, "64253": 245, "1307": 245, "1413": 245, "1881": 245, "771439": 245, "2783": 245, "369429": 245, "451": 245, "288236": 245, "1047": 245, "209526": 245, "1441": 245, "148115": 245, "2038": 245, "106089": 245, "2846": 245, "53204": 245, "465": 245, "28593": 245, "939": 245, "368": 245, "0852": 245, "1113": 245, "685382": 245, "1762": 245, "408357": 245, "2958": 245, "4521": 245, "13466": 245, "853916": 245, "1392": 245, "642672": 245, "1850": 245, "446442": 245, "2663": 245, "0574189": 245, "876": 245, "0460811": 245, "1092": 245, "0389357": 245, "1292": 245, "031279": 245, "0234498": 245, "2146": 245, "204966": 245, "17364": 245, "1159": 245, "141097": 245, "1426": 245, "105192": 245, "1913": 245, "0677766": 245, "2970": 245, "21269": 245, "946": 245, "573": 245, "191564": 245, "1050": 245, "156368": 245, "1287": 245, "1565": 245, "0933565": 245, "2156": 245, "84983": 245, "789777": 245, "1019": 245, "598168": 245, "1346": 245, "433492": 245, "1857": 245, "269504": 245, "2988": 245, "74845": 245, "859": 245, "348": 245, "96945": 245, "811": 245, "505": 245, "77082": 245, "76407": 245, "1826": 245, "09719": 245, "2935": 245, "73162": 245, "00241": 245, "1072": 245, "39024": 245, "77317": 245, "1816": 245, "19536": 245, "2694": 245, "517278": 245, "875": 245, "708": 245, "382208": 245, "1185": 245, "317837": 245, "1425": 245, "233231": 245, "1942": 245, "152925": 245, "2962": 245, "44309": 245, "741": 245, "62409": 245, "1115": 245, "64963": 245, "1098": 245, "03923": 245, "1743": 245, "625089": 245, "2898": 245, "07006": 245, "861": 245, "632": 245, "64247": 245, "1085": 245, "33386": 245, "1337": 245, "994935": 245, "1792": 245, "68383": 245, "2608": 245, "0713578": 245, "940": 245, "0612457": 245, "0516788": 245, "1298": 245, "0414834": 245, "1617": 245, "0309886": 245, "2165": 245, "282241": 245, "951": 245, "085": 245, "238855": 245, "1123": 245, "193713": 245, "1385": 245, "146781": 245, "81": 245, "0938959": 245, "286141": 245, "122": 245, "257138": 245, "1043": 245, "214208": 245, "167575": 245, "1601": 245, "124072": 245, "2163": 245, "21431": 245, "884": 245, "237": 245, "955251": 245, "775294": 245, "1384": 245, "63282": 245, "1696": 245, "37333": 245, "2876": 245, "87335": 245, "317": 245, "65059": 245, "1176": 245, "94733": 245, "1457": 245, "62241": 245, "1637": 245, "47752": 245, "2906": 245, "75786": 245, "83024": 245, "889": 245, "87429": 245, "1108": 245, "87685": 245, "75328": 245, "2449": 245, "718776": 245, "289": 245, "561317": 245, "1076": 245, "429166": 245, "1407": 245, "317204": 245, "1904": 245, "208555": 245, "2896": 245, "94057": 245, "30458": 245, "1048": 245, "6702": 245, "25799": 245, "1920": 245, "84121": 245, "2871": 245, "34423": 245, "711": 245, "77444": 245, "857": 245, "10049": 245, "52509": 245, "926038": 245, "2568": 245, "00203027": 245, "1032": 245, "00198061": 245, "00179382": 245, "1169": 245, "00163713": 245, "1280": 245, "00171023": 245, "1226": 245, "00395783": 245, "2119": 245, "00340452": 245, "2463": 245, "00308582": 245, "2718": 245, "00292684": 245, "2866": 245, "00217889": 245, "3849": 245, "00437142": 245, "1918": 245, "00418212": 245, "2005": 245, "00344785": 245, "2433": 245, "00291005": 245, "2882": 245, "00293671": 245, "2856": 245, "0120946": 245, "2774": 245, "0103377": 245, "3245": 245, "00850778": 245, "3943": 245, "00659512": 245, "5087": 245, "00484669": 245, "6923": 245, "0524509": 245, "2558": 245, "0428737": 245, "3130": 245, "0323642": 245, "4147": 245, "0231199": 245, "5805": 245, "0152199": 245, "8818": 245, "0451228": 245, "2974": 245, "0373823": 245, "3590": 245, "0302746": 245, "4433": 245, "023182": 245, "5789": 245, "0161696": 245, "8300": 245, "00731429": 245, "2580": 245, "00633179": 245, "2980": 245, "00535855": 245, "3522": 245, "00449335": 245, "4200": 245, "00341811": 245, "5521": 245, "0270028": 245, "2795": 245, "02197": 245, "3436": 245, "0177477": 245, "4253": 245, "0131335": 245, "5748": 245, "00897444": 245, "8412": 245, "0257188": 245, "2889": 245, "0218969": 245, "3393": 245, "0180933": 245, "4107": 245, "013742": 245, "5408": 245, "00992419": 245, "7488": 245, "00289114": 245, "1450": 245, "00245821": 245, "00252331": 245, "1662": 245, "00226557": 245, "1851": 245, "00180316": 245, "2326": 245, "00578904": 245, "00500361": 245, "3353": 245, "0042401": 245, "3956": 245, "00350486": 245, "4786": 245, "00297233": 245, "5644": 245, "00693265": 245, "2420": 245, "00593063": 245, "2828": 245, "00526697": 245, "3185": 245, "00480098": 245, "3494": 245, "00385131": 245, "4356": 245, "0193516": 245, "3467": 245, "0166254": 245, "4036": 245, "0132869": 245, "5050": 245, "0106293": 245, "6313": 245, "00759056": 245, "8841": 245, "0977256": 245, "2746": 245, "0813271": 245, "0656322": 245, "4090": 245, "0476463": 245, "5633": 245, "0295362": 245, "9088": 245, "0736189": 245, "3646": 245, "0603789": 245, "4445": 245, "0489938": 245, "5478": 245, "036992": 245, "7256": 245, "0258802": 245, "10372": 245, "0116589": 245, "3237": 245, "00979113": 245, "3855": 245, "00811779": 245, "4650": 245, "00667871": 245, "5652": 245, "00493861": 245, "7643": 245, "0537768": 245, "2807": 245, "0459135": 245, "3288": 245, "03588": 245, "4208": 245, "0252901": 245, "5970": 245, "0167419": 245, "9018": 245, "0407051": 245, "3651": 245, "0342908": 245, "4334": 245, "028568": 245, "5202": 245, "0218703": 245, "6796": 245, "016186": 245, "9183": 245, "0031551": 245, "0029515": 245, "00265488": 245, "2369": 245, "00243581": 245, "2582": 245, "00223598": 245, "2813": 245, "00745008": 245, "3377": 245, "00656544": 245, "3833": 245, "00542595": 245, "4638": 245, "00425647": 245, "5912": 245, "0034657": 245, "7261": 245, "00835933": 245, "3010": 245, "00741956": 245, "3391": 245, "0065352": 245, "3850": 245, "00555918": 245, "4526": 245, "00488058": 245, "5156": 245, "0257262": 245, "3912": 245, "0217468": 245, "4628": 245, "0176505": 245, "5703": 245, "0137122": 245, "7341": 245, "00980134": 245, "10270": 245, "124749": 245, "3227": 245, "103385": 245, "3894": 245, "0832193": 245, "4838": 245, "0626013": 245, "6432": 245, "0397992": 245, "10117": 245, "101071": 245, "3983": 245, "0825665": 245, "4876": 245, "0668515": 245, "6023": 245, "0487727": 245, "8255": 245, "0354192": 245, "11368": 245, "0147718": 245, "0127799": 245, "4430": 245, "0105324": 245, "5376": 245, "00869796": 245, "6509": 245, "00643591": 245, "8798": 245, "0698868": 245, "3240": 245, "0588583": 245, "3848": 245, "0473412": 245, "4784": 245, "0346142": 245, "6543": 245, "0222947": 245, "10159": 245, "0538146": 245, "4142": 245, "0454583": 245, "4904": 245, "0373579": 245, "5968": 245, "0291396": 245, "7651": 245, "0208901": 245, "10672": 245, "00393589": 245, "00332212": 245, "2525": 245, "00317296": 245, "2643": 245, "00269113": 245, "3117": 245, "00235812": 245, "3557": 245, "009382": 245, "3576": 245, "00828943": 245, "4047": 245, "00672351": 245, "4990": 245, "00514768": 245, "6518": 245, "0040612": 245, "8262": 245, "0107115": 245, "3132": 245, "00920252": 245, "00794258": 245, "4224": 245, "00698123": 245, "4806": 245, "00561026": 245, "5980": 245, "0345669": 245, "3882": 245, "0289719": 245, "4632": 245, "0232584": 245, "5770": 245, "0179766": 245, "7466": 245, "0128144": 245, "10474": 245, "158162": 245, "3394": 245, "132552": 245, "4050": 245, "101844": 245, "5271": 245, "080936": 245, "6633": 245, "0530097": 245, "10127": 245, "135839": 245, "3952": 245, "11116": 245, "4829": 245, "0899513": 245, "0633017": 245, "8481": 245, "0467462": 245, "11484": 245, "0192628": 245, "3919": 245, "0164591": 245, "4586": 245, "0135348": 245, "5578": 245, "0107712": 245, "7009": 245, "00761117": 245, "9919": 245, "0854876": 245, "3532": 245, "0747271": 245, "4041": 245, "0604759": 245, "4993": 245, "0417964": 245, "7225": 245, "0275467": 245, "10962": 245, "0713821": 245, "4164": 245, "0600772": 245, "4948": 245, "0496581": 245, "5986": 245, "0381385": 245, "7794": 245, "027025": 245, "10999": 245, "00502473": 245, "2086": 245, "00451855": 245, "00396819": 245, "00338962": 245, "3093": 245, "00315343": 245, "3325": 245, "0147951": 245, "2834": 245, "0126225": 245, "3322": 245, "010269": 245, "4084": 245, "00785878": 245, "5337": 245, "00570293": 245, "7354": 245, "0161691": 245, "2594": 245, "0144483": 245, "2902": 245, "011705": 245, "3583": 245, "0101487": 245, "4132": 245, "00879332": 245, "4769": 245, "0560297": 245, "2994": 245, "0467998": 245, "3584": 245, "0374397": 245, "4481": 245, "028166": 245, "5956": 245, "0192593": 245, "8711": 245, "277815": 245, "2415": 245, "229837": 245, "2919": 245, "1787": 245, "3755": 245, "126545": 245, "5303": 245, "0835321": 245, "8033": 245, "224925": 245, "2983": 245, "184256": 245, "3642": 245, "146452": 245, "4582": 245, "108899": 245, "6162": 245, "0740655": 245, "9060": 245, "0319455": 245, "2954": 245, "0268136": 245, "3519": 245, "0217062": 245, "4347": 245, "0166666": 245, "5662": 245, "0116466": 245, "8102": 245, "150549": 245, "2507": 245, "119951": 245, "3147": 245, "0893092": 245, "4226": 245, "0637226": 245, "5923": 245, "0427839": 245, "8823": 245, "122421": 245, "3035": 245, "102244": 245, "0822007": 245, "4520": 245, "0622484": 245, "5969": 245, "0429436": 245, "8652": 245, "00481074": 245, "00443796": 245, "2835": 245, "00389863": 245, "00343822": 245, "3659": 245, "00297784": 245, "4225": 245, "0145757": 245, "3453": 245, "012078": 245, "4167": 245, "00896329": 245, "5615": 245, "00727645": 245, "6917": 245, "00548478": 245, "9176": 245, "0150624": 245, "3341": 245, "0132428": 245, "3800": 245, "011443": 245, "4398": 245, "0092883": 245, "5418": 245, "00744553": 245, "6759": 245, "0543977": 245, "3701": 245, "0445693": 245, "4517": 245, "0363329": 245, "5541": 245, "0270492": 245, "7442": 245, "0187415": 245, "10742": 245, "267367": 245, "3011": 245, "223615": 245, "3601": 245, "1797": 245, "134716": 245, "5977": 245, "0692752": 245, "11624": 245, "222661": 245, "3616": 245, "179525": 245, "4485": 245, "139298": 245, "5781": 245, "0958787": 245, "8399": 245, "176292": 245, "4568": 245, "0700283": 245, "0258341": 245, "4383": 245, "0207504": 245, "5457": 245, "0161277": 245, "7021": 245, "0116008": 245, "9761": 245, "148512": 245, "3050": 245, "124238": 245, "0995304": 245, "4551": 245, "0714324": 245, "6341": 245, "044154": 245, "10259": 245, "113174": 245, "3940": 245, "0961662": 245, "4636": 245, "0765841": 245, "5822": 245, "0592912": 245, "7520": 245, "0416614": 245, "10703": 245, "00655654": 245, "2239": 245, "00584761": 245, "2510": 245, "00502113": 245, "2923": 245, "00466269": 245, "3148": 245, "00393276": 245, "3732": 245, "0203923": 245, "2879": 245, "0171018": 245, "3433": 245, "0137027": 245, "4285": 245, "0109527": 245, "5361": 245, "00749636": 245, "7833": 245, "0221319": 245, "0193761": 245, "3030": 245, "0158773": 245, "3698": 245, "0134367": 245, "4370": 245, "0116365": 245, "5046": 245, "0780751": 245, "3008": 245, "0651551": 245, "3604": 245, "0521945": 245, "4500": 245, "0394101": 245, "5959": 245, "0262706": 245, "8940": 245, "398509": 245, "2357": 245, "332153": 245, "259051": 245, "3626": 245, "184412": 245, "5094": 245, "119678": 245, "7850": 245, "313656": 245, "2995": 245, "257989": 245, "3641": 245, "206049": 245, "4559": 245, "152848": 245, "6146": 245, "103125": 245, "9110": 245, "0444861": 245, "2969": 245, "037334": 245, "3538": 245, "0302293": 245, "0231979": 245, "5695": 245, "0158702": 245, "8325": 245, "219777": 245, "2404": 245, "17764": 245, "2975": 245, "135864": 245, "3889": 245, "100424": 245, "5262": 245, "0677547": 245, "7799": 245, "172356": 245, "3018": 245, "144231": 245, "3606": 245, "116019": 245, "4483": 245, "0873881": 245, "5953": 245, "0596004": 245, "8728": 245, "00609695": 245, "2751": 245, "00517637": 245, "3241": 245, "00448956": 245, "3736": 245, "00394876": 245, "4248": 245, "00317463": 245, "5284": 245, "0204832": 245, "3276": 245, "0137691": 245, "4873": 245, "0114194": 245, "5876": 245, "00893304": 245, "7512": 245, "00653312": 245, "10272": 245, "0192409": 245, "3487": 245, "0168348": 245, "3986": 245, "0142343": 245, "4714": 245, "0119455": 245, "5617": 245, "00910648": 245, "7369": 245, "0781101": 245, "0614806": 245, "4366": 245, "046201": 245, "5810": 245, "0357023": 245, "7518": 245, "0222103": 245, "12086": 245, "326917": 245, "3284": 245, "273363": 245, "3927": 245, "220994": 245, "4858": 245, "166153": 245, "6462": 245, "0854403": 245, "12567": 245, "311348": 245, "3448": 245, "243012": 245, "4418": 245, "187933": 245, "5713": 245, "126819": 245, "8466": 245, "0855686": 245, "12548": 245, "0404778": 245, "3730": 245, "0329699": 245, "4579": 245, "0265272": 245, "5692": 245, "0207815": 245, "7265": 245, "0139037": 245, "10860": 245, "183003": 245, "161443": 245, "3741": 245, "129767": 245, "4654": 245, "0893345": 245, "6760": 245, "0610684": 245, "9890": 245, "15525": 245, "3829": 245, "125772": 245, "4727": 245, "101434": 245, "5861": 245, "0765083": 245, "7770": 245, "0537321": 245, "11064": 245, "0104209": 245, "3219": 245, "00908195": 245, "3694": 245, "00781277": 245, "4294": 245, "00651108": 245, "5153": 245, "0051719": 245, "6487": 245, "0321377": 245, "4176": 245, "0269904": 245, "4972": 245, "0220014": 245, "6100": 245, "016901": 245, "7941": 245, "0120042": 245, "11180": 245, "0373802": 245, "0314895": 245, "4262": 245, "0266731": 245, "5031": 245, "0217822": 245, "6161": 245, "0168219": 245, "7978": 245, "176031": 245, "3049": 245, "134442": 245, "3993": 245, "0843776": 245, "6362": 245, "0640577": 245, "8381": 245, "043787": 245, "12261": 245, "697876": 245, "3077": 245, "615338": 245, "3489": 245, "350147": 245, "6133": 245, "267289": 245, "8034": 245, "179695": 245, "11950": 245, "703207": 245, "3053": 245, "561805": 245, "3822": 245, "423052": 245, "5076": 245, "254835": 245, "171434": 245, "12526": 245, "0933483": 245, "3235": 245, "0725632": 245, "4161": 245, "0539197": 245, "5600": 245, "0376119": 245, "8029": 245, "0263137": 245, "11476": 245, "407388": 245, "340939": 245, "3543": 245, "261028": 245, "4627": 245, "151649": 245, "7965": 245, "103379": 245, "11684": 245, "358769": 245, "3314": 245, "283046": 245, "4201": 245, "212152": 245, "5604": 245, "158502": 245, "7502": 245, "107514": 245, "11059": 245, "0148329": 245, "0129116": 245, "3898": 245, "0110537": 245, "4553": 245, "00925277": 245, "5439": 245, "00716987": 245, "7019": 245, "0526609": 245, "3823": 245, "0447282": 245, "4501": 245, "0365834": 245, "5503": 245, "0274874": 245, "7324": 245, "0183895": 245, "10947": 245, "0556653": 245, "0465882": 245, "4321": 245, "039411": 245, "5108": 245, "0318745": 245, "6316": 245, "024706": 245, "8148": 245, "263316": 245, "3058": 245, "198303": 245, "4061": 245, "141966": 245, "5672": 245, "105849": 245, "7608": 245, "0687866": 245, "11707": 245, "793822": 245, "4057": 245, "996979": 245, "3230": 245, "54288": 245, "5933": 245, "412174": 245, "7815": 245, "274441": 245, "11737": 245, "03474": 245, "3113": 245, "832701": 245, "3868": 245, "564787": 245, "421781": 245, "7637": 245, "271587": 245, "11860": 245, "130834": 245, "3462": 245, "0943305": 245, "4802": 245, "0760123": 245, "0580473": 245, "7803": 245, "0395342": 245, "11458": 245, "635729": 245, "2850": 245, "379899": 245, "307908": 245, "5884": 245, "233057": 245, "7774": 245, "157518": 245, "11503": 245, "518276": 245, "3441": 245, "422517": 245, "4221": 245, "323476": 245, "5513": 245, "247251": 245, "7213": 245, "163369": 245, "10917": 245, "0192313": 245, "0168147": 245, "3991": 245, "0143274": 245, "4683": 245, "011932": 245, "5624": 245, "00914975": 245, "7334": 245, "0723144": 245, "3712": 245, "0613803": 245, "4373": 245, "050021": 245, "5366": 245, "0376949": 245, "7121": 245, "0249397": 245, "10763": 245, "0796627": 245, "3369": 245, "0616695": 245, "4352": 245, "0521326": 245, "5149": 245, "042188": 245, "0325741": 245, "8240": 245, "380582": 245, "2821": 245, "24038": 245, "4466": 245, "195271": 245, "5498": 245, "146935": 245, "7307": 245, "0948318": 245, "11322": 245, "08794": 245, "3947": 245, "913626": 245, "4701": 245, "737943": 245, "5820": 245, "558473": 245, "7690": 245, "369466": 245, "51009": 245, "2844": 245, "26974": 245, "3382": 245, "778244": 245, "5518": 245, "589803": 245, "7282": 245, "375284": 245, "11444": 245, "160705": 245, "3758": 245, "135495": 245, "4457": 245, "108718": 245, "5555": 245, "0811198": 245, "7445": 245, "0533513": 245, "11320": 245, "614109": 245, "3934": 245, "518614": 245, "418491": 245, "5772": 245, "31592": 245, "7647": 245, "211893": 245, "11401": 245, "836616": 245, "2842": 245, "699579": 245, "3399": 245, "544194": 245, "379699": 245, "228043": 245, "10428": 245, "un": 246, "u": 246, "platform": [246, 253, 260], "hotmap": 246, "jpg": 246, "x16": 247, "environment_vari": 247, "acc": [247, 248], "perfom": 247, "introduct": 247, "benchmark_it": 247, "benchmark_no_refresh": 247, "refresh": 247, "kxn": 247, "sparse_ratio": 247, "micro_b": 247, "output_fp32": 247, "has_append_sum": 247, "micro_oc": 247, "sub_func_level": 247, "3d_infer": 247, "automaticlli": 247, "dsparse_lib_use_amx": 247, "amx_bf16_x16": 247, "output_bf16": 247, "interv": 247, "lower_bound": 247, "upper_bound": 247, "invalid": 247, "fp32_relu": 247, "src_dt": 247, "dst_dt": 247, "tanspos": 247, "4d": 247, "distinguish": 247, "bs0": 247, "bs1": 247, "scr2": 247, "avx512f_p2031_p2013": 247, "has_binary_add": 247, "tile_m": 247, "tile_n": 247, "coeffici": 247, "vnni_noperm_p2031_p1302": 247, "suuport": 247, "d0xd1x": 247, "d0": 247, "dst_type": 247, "newli": 247, "subdir": 247, "benchmark_dir": 247, "bench_": 247, "cpp": 247, "test_": 247, "entranc": 247, "get_true_data_": 247, "check_result_": 247, "gen_case_": 247, "run_bench_": 247, "feel": 247, "calc_flop": 247, "get_refresh_data_idx": 247, "benchmark_util": 247, "whitespac": 248, "labl": 248, "skip": 248, "run_ci": 248, "discard": 248, "new_input_fil": 248, "medium_n": 248, "it_per_cor": 248, "repeat": 248, "ci": 248, "toler": 249, "usag": [249, 250], "rel": 249, "conjunct": 249, "absolut": [249, 252, 253], "proport": [249, 250], "statu": [250, 253], "vision": 251, "speech": 251, "multimod": 251, "text_classifi": 251, "great": 251, "9998425245285034": 251, "believ": 251, "beauti": 251, "evoc": 251, "ve": 251, "seen": 251, "9998886585235596": 251, "redund": 252, "bear": 252, "brain": 252, "damag": 252, "hypothesi": 252, "yann": 252, "lecun": 252, "salient": 252, "anywher": 252, "filter": 252, "magnitud": 252, "lowest": 252, "freez": 252, "grouplasso": 252, "hyper": 252, "didn": 252, "pruning_conf": 252, "full": 253, "littl": 253, "degrad": 253, "ex": 253, "articl": 253, "affin": 253, "convers": 253, "math": 253, "zeropoint": 253, "asymmetr": 253, "earli": 253, "overflow": 253, "fp16": 253, "unseen": 253, "peopl": 253, "emul": 253, "fake": 253, "backward": 253, "mimic": 253, "made": 253, "ultim": 253, "yield": 253, "either": 253, "pain": 253, "lossi": 253, "fx": 253, "eager": 253, "qat": 253, "exit": 253, "guarante": 253, "injector": 257}, "objects": {"": [[196, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [196, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [194, 1, 1, "_CPPv48executor", "executor"], [194, 2, 1, "_CPPv4N8executor10DispatcherE", "executor::Dispatcher"], [194, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::input"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::output"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::stage"], [194, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors"], [194, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::input"], [194, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::output"], [194, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::stage"], [194, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [194, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::conf"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [194, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::op"], [194, 3, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward"], [194, 4, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::input"], [194, 4, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::output"], [194, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel"], [194, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::has_dispatch_table_file"], [194, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::input"], [194, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::output"], [194, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::reshape_model"], [194, 3, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash"], [194, 4, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash::input"], [194, 1, 1, "_CPPv4N8executor10Dispatcher13KernelHandlerE", "executor::Dispatcher::KernelHandler"], [194, 3, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare"], [194, 4, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::input"], [194, 4, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::output"], [194, 3, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus"], [194, 4, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::input"], [194, 4, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::output"], [194, 3, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape"], [194, 4, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::input"], [194, 4, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::output"], [194, 5, 1, "_CPPv4N8executor10Dispatcher13adapt_action_E", "executor::Dispatcher::adapt_action_"], [194, 5, 1, "_CPPv4N8executor10Dispatcher8cpu_isa_E", "executor::Dispatcher::cpu_isa_"], [194, 5, 1, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E", "executor::Dispatcher::dispatch_table_file_exists_"], [194, 3, 1, "_CPPv4NK8executor10Dispatcher9do_tuningEv", "executor::Dispatcher::do_tuning"], [194, 5, 1, "_CPPv4N8executor10Dispatcher10do_tuning_E", "executor::Dispatcher::do_tuning_"], [194, 3, 1, "_CPPv4N8executor10Dispatcher13enable_sparseEv", "executor::Dispatcher::enable_sparse"], [194, 3, 1, "_CPPv4NK8executor10Dispatcher14execute_kernelEv", "executor::Dispatcher::execute_kernel"], [194, 5, 1, "_CPPv4N8executor10Dispatcher15execute_kernel_E", "executor::Dispatcher::execute_kernel_"], [194, 5, 1, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E", "executor::Dispatcher::execution_options_ptr_"], [194, 3, 1, "_CPPv4N8executor10Dispatcher9get_attrsEv", "executor::Dispatcher::get_attrs"], [194, 3, 1, "_CPPv4N8executor10Dispatcher12get_it_shapeEv", "executor::Dispatcher::get_it_shape"], [194, 3, 1, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv", "executor::Dispatcher::get_ot_shape"], [194, 3, 1, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv", "executor::Dispatcher::get_reshape_time"], [194, 5, 1, "_CPPv4N8executor10Dispatcher9iter_cnt_E", "executor::Dispatcher::iter_cnt_"], [194, 5, 1, "_CPPv4N8executor10Dispatcher15kernel_handler_E", "executor::Dispatcher::kernel_handler_"], [194, 3, 1, "_CPPv4N8executor10Dispatcher11kernel_typeEv", "executor::Dispatcher::kernel_type"], [194, 3, 1, "_CPPv4N8executor10Dispatcher7latencyEv", "executor::Dispatcher::latency"], [194, 5, 1, "_CPPv4N8executor10Dispatcher6model_E", "executor::Dispatcher::model_"], [194, 5, 1, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E", "executor::Dispatcher::monopoly_kernel_"], [194, 3, 1, "_CPPv4NK8executor10Dispatcher4nameEv", "executor::Dispatcher::name"], [194, 5, 1, "_CPPv4N8executor10Dispatcher5name_E", "executor::Dispatcher::name_"], [194, 3, 1, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv", "executor::Dispatcher::no_tuning_space"], [194, 5, 1, "_CPPv4N8executor10Dispatcher16no_tuning_space_E", "executor::Dispatcher::no_tuning_space_"], [194, 3, 1, "_CPPv4NK8executor10Dispatcher13operator_confEv", "executor::Dispatcher::operator_conf"], [194, 5, 1, "_CPPv4N8executor10Dispatcher14operator_conf_E", "executor::Dispatcher::operator_conf_"], [194, 3, 1, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv", "executor::Dispatcher::perf_ratio_id"], [194, 3, 1, "_CPPv4N8executor10Dispatcher7post_opEv", "executor::Dispatcher::post_op"], [194, 3, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs"], [194, 4, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs::input_attrs"], [194, 3, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse"], [194, 4, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse::enable_sparse"], [194, 3, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_it_shape"], [194, 4, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_it_shape::input_shape"], [194, 3, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency"], [194, 4, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency::latency"], [194, 3, 1, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_ot_shape"], [194, 4, 1, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_ot_shape::output_shape"], [194, 3, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id"], [194, 4, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id::perf_ratio_id"], [194, 3, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op"], [194, 4, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op::post_op"], [194, 3, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time"], [194, 4, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time::reshape_time_"], [194, 3, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id"], [194, 4, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id::table_id"], [194, 3, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode"], [194, 4, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode::mode"], [194, 3, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape"], [194, 4, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape::weight_shape"], [194, 5, 1, "_CPPv4N8executor10Dispatcher20sparselib_available_E", "executor::Dispatcher::sparselib_available_"], [194, 3, 1, "_CPPv4N8executor10Dispatcher8table_idEv", "executor::Dispatcher::table_id"], [194, 5, 1, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E", "executor::Dispatcher::tune_dense_in_sparse_"], [194, 3, 1, "_CPPv4NK8executor10Dispatcher4typeEv", "executor::Dispatcher::type"], [194, 5, 1, "_CPPv4N8executor10Dispatcher5type_E", "executor::Dispatcher::type_"], [194, 3, 1, "_CPPv4N8executor10Dispatcher12weight_shapeEv", "executor::Dispatcher::weight_shape"], [194, 3, 1, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv", "executor::Dispatcher::weight_zero_ratio"], [194, 3, 1, "_CPPv4N8executor10DispatcherD0Ev", "executor::Dispatcher::~Dispatcher"], [196, 1, 1, "_CPPv42jd", "jd"], [196, 1, 1, "_CPPv42jd", "jd"], [197, 1, 1, "_CPPv42jd", "jd"], [198, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 1, 1, "_CPPv42jd", "jd"], [199, 6, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [199, 6, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [199, 6, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [199, 6, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [199, 6, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [199, 6, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [199, 6, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [199, 6, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [199, 6, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [199, 6, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [199, 6, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [197, 2, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [197, 3, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [197, 3, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [197, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [197, 3, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [197, 2, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [197, 3, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [197, 3, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [197, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [199, 7, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [199, 6, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [199, 6, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [199, 6, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [199, 6, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [199, 6, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [199, 6, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [199, 6, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [199, 6, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [199, 6, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [199, 6, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [199, 6, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [199, 6, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [196, 2, 1, "_CPPv4N2jd10cpu_engineE", "jd::cpu_engine"], [196, 3, 1, "_CPPv4N2jd10cpu_engine10cpu_engineEv", "jd::cpu_engine::cpu_engine"], [196, 5, 1, "_CPPv4N2jd10cpu_engine10empty_listE", "jd::cpu_engine::empty_list"], [196, 3, 1, "_CPPv4NK2jd10cpu_engine23get_implementation_listERK13operator_desc", "jd::cpu_engine::get_implementation_list"], [196, 4, 1, "_CPPv4NK2jd10cpu_engine23get_implementation_listERK13operator_desc", "jd::cpu_engine::get_implementation_list::op_desc"], [196, 3, 1, "_CPPv4N2jd10cpu_engineD0Ev", "jd::cpu_engine::~cpu_engine"], [197, 2, 1, "_CPPv4N2jd16dyn_quantize_mhaE", "jd::dyn_quantize_mha"], [197, 3, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha"], [197, 3, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv", "jd::dyn_quantize_mha::dyn_quantize_mha"], [197, 4, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha::kdp"], [197, 3, 1, "_CPPv4N2jd16dyn_quantize_mhaD0Ev", "jd::dyn_quantize_mha::~dyn_quantize_mha"], [197, 2, 1, "_CPPv4N2jd21dyn_quantize_mha_descE", "jd::dyn_quantize_mha_desc"], [197, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [197, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [197, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev", "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc"], [197, 2, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [197, 3, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [197, 3, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [197, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [197, 3, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [197, 2, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [197, 3, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [197, 3, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [197, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [196, 2, 1, "_CPPv4N2jd6engineE", "jd::engine"], [196, 5, 1, "_CPPv4N2jd6engine9eng_kind_E", "jd::engine::eng_kind_"], [196, 3, 1, "_CPPv4N2jd6engine6engineERK11engine_kind", "jd::engine::engine"], [196, 4, 1, "_CPPv4N2jd6engine6engineERK11engine_kind", "jd::engine::engine::eng_kind"], [196, 3, 1, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc", "jd::engine::get_implementation_list"], [196, 4, 1, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc", "jd::engine::get_implementation_list::op_desc"], [196, 3, 1, "_CPPv4NK2jd6engine4kindEv", "jd::engine::kind"], [196, 3, 1, "_CPPv4N2jd6engineD0Ev", "jd::engine::~engine"], [197, 2, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [197, 3, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [197, 3, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [197, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [197, 3, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [197, 2, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [197, 3, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [197, 3, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [197, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [197, 2, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [197, 3, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [197, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [197, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [197, 5, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [197, 3, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [197, 3, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [197, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [197, 3, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [197, 3, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [197, 2, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [197, 3, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [197, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [197, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [197, 3, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [197, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [197, 3, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [197, 3, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [197, 3, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [197, 3, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [197, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [197, 3, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [197, 2, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [197, 3, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [197, 3, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [197, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [197, 3, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [197, 2, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [197, 3, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [197, 3, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [197, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [197, 2, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [197, 3, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [197, 3, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [197, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [197, 3, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [197, 2, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [197, 3, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [197, 3, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [197, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [197, 2, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [197, 3, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [197, 3, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [197, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [197, 3, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [197, 2, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [197, 3, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [197, 3, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [197, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [198, 2, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [198, 3, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [198, 5, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [198, 3, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [198, 5, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [198, 5, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [198, 5, 1, "_CPPv4N2jd13operator_desc9eng_kind_E", "jd::operator_desc::eng_kind_"], [198, 3, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [198, 3, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [198, 3, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [198, 5, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [198, 5, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [198, 5, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [198, 3, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [198, 3, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [198, 3, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [198, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [198, 3, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [198, 3, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [198, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [198, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [198, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [198, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [198, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [198, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [198, 3, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [198, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [198, 3, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [198, 5, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [198, 3, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [197, 2, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [197, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [197, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [197, 3, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [197, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [197, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [197, 5, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [197, 3, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [197, 3, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [197, 3, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [197, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [197, 3, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [197, 2, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [197, 3, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [197, 3, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [197, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [197, 3, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [197, 2, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [197, 3, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [197, 3, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [197, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [197, 2, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [197, 3, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [197, 3, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [197, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [197, 3, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [197, 2, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [197, 3, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [197, 3, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [197, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [199, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [199, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [199, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [199, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [199, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [199, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [199, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [199, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [199, 5, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [199, 5, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [199, 5, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [199, 5, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [199, 5, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [199, 5, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [199, 5, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [199, 5, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [199, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [199, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [199, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [199, 2, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [199, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [199, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [199, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [199, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [199, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [199, 2, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [199, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [199, 5, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [199, 2, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [199, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [199, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [199, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [199, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [199, 2, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [199, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [199, 2, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [199, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [199, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [199, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [199, 2, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [199, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [199, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [199, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [199, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [199, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [199, 2, 1, "_CPPv4N2jd3ssd13gather_data_tE", "jd::ssd::gather_data_t"], [199, 5, 1, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE", "jd::ssd::gather_data_t::binaryop_addrs"], [199, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3dstE", "jd::ssd::gather_data_t::dst"], [199, 3, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t"], [199, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::a"], [199, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::b"], [199, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::c"], [199, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3idxE", "jd::ssd::gather_data_t::idx"], [199, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3srcE", "jd::ssd::gather_data_t::src"], [199, 2, 1, "_CPPv4N2jd3ssd14gather_param_tE", "jd::ssd::gather_param_t"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE", "jd::ssd::gather_param_t::binary_ts_sizes"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE", "jd::ssd::gather_param_t::binaryop_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE", "jd::ssd::gather_param_t::dst_axis_size"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t2dtE", "jd::ssd::gather_param_t::dt"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE", "jd::ssd::gather_param_t::dt_size"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE", "jd::ssd::gather_param_t::extend_mask"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE", "jd::ssd::gather_param_t::idx_size"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE", "jd::ssd::gather_param_t::inner_size"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t5loopsE", "jd::ssd::gather_param_t::loops"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t4maskE", "jd::ssd::gather_param_t::mask"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE", "jd::ssd::gather_param_t::outer_size"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t6remainE", "jd::ssd::gather_param_t::remain"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE", "jd::ssd::gather_param_t::src_axis_size"], [199, 5, 1, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE", "jd::ssd::gather_param_t::src_size"], [199, 2, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [199, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [199, 2, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [199, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [199, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [199, 2, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [199, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [199, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [199, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [199, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [199, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [199, 7, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [199, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [199, 2, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [199, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [199, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [199, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [199, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [199, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [199, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [199, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [199, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [199, 2, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [199, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [199, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [199, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [199, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [199, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [199, 2, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [199, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [199, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [199, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [199, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [199, 2, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [199, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [199, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [199, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [199, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [199, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [199, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [199, 2, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [199, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [199, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [199, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [199, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [199, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [199, 2, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [199, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [199, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [199, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [199, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [199, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [199, 2, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [199, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [199, 7, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [199, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [199, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [199, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [199, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [199, 7, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [199, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [199, 7, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [199, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [199, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [199, 7, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [199, 6, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [199, 6, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [199, 6, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [199, 6, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [199, 2, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [199, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [199, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [199, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [199, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [199, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [199, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [199, 7, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [199, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [199, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [199, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [199, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [199, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [199, 2, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [199, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [199, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [199, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [199, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [199, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [199, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [199, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [199, 2, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [199, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [197, 2, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [197, 3, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [197, 3, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [197, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [197, 3, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [197, 2, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [197, 3, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [197, 3, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [197, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [197, 2, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [197, 3, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [197, 3, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [197, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [197, 3, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [197, 2, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [197, 3, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [197, 3, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [197, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [197, 3, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [113, 9, 0, "-", "intel_extension_for_transformers"], [151, 9, 0, "-", "sparsity_all"], [152, 9, 0, "-", "test_add_cls_token"], [153, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [154, 9, 0, "-", "test_attention_reshape"], [155, 9, 0, "-", "test_binary_op"], [156, 9, 0, "-", "test_conv_reshape"], [157, 9, 0, "-", "test_embeddingbag"], [158, 9, 0, "-", "test_execution_options"], [159, 9, 0, "-", "test_gelu"], [160, 9, 0, "-", "test_graph_dispatch"], [161, 9, 0, "-", "test_insert_input_output_data"], [162, 9, 0, "-", "test_is_supported_onnx_graph"], [163, 9, 0, "-", "test_last_layer_shape"], [164, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [165, 9, 0, "-", "test_main"], [166, 9, 0, "-", "test_matmul_with_bias_relu"], [167, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [168, 9, 0, "-", "test_matmul_with_bias_tanh"], [169, 9, 0, "-", "test_merged_embeddingbag"], [170, 9, 0, "-", "test_model"], [171, 9, 0, "-", "test_onnx_utils"], [172, 9, 0, "-", "test_ops"], [173, 9, 0, "-", "test_padding_sequence"], [174, 9, 0, "-", "test_pattern_dispatch"], [175, 9, 0, "-", "test_position_embeddings"], [176, 9, 0, "-", "test_qkv_merge"], [177, 9, 0, "-", "test_qkv_reshape"], [178, 9, 0, "-", "test_quant_onnx_execute"], [179, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [180, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [181, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [182, 9, 0, "-", "test_start_end_logits"], [183, 9, 0, "-", "test_tf_utils"], [184, 9, 0, "-", "test_token_type_embeddings"], [185, 9, 0, "-", "test_transpose"], [186, 9, 0, "-", "test_transpose_batch_matmul"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "backends"], [120, 9, 0, "-", "optimization"], [148, 9, 0, "-", "preprocessing"], [150, 9, 0, "-", "version"]], "intel_extension_for_transformers.backends": [[112, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[9, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, 10, 1, "", "compile"], [1, 9, 0, "-", "compile"], [3, 9, 0, "-", "extractors"], [7, 9, 0, "-", "graph"], [8, 9, 0, "-", "graph_utils"], [10, 9, 0, "-", "loaders"], [12, 9, 0, "-", "logger"], [13, 9, 0, "-", "onnx_utils"], [33, 9, 0, "-", "ops"], [75, 9, 0, "-", "sub_graph"], [111, 9, 0, "-", "tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, 10, 1, "", "compile"], [1, 10, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 11, 1, "", "Extractor"], [2, 9, 0, "-", "extractor"], [4, 9, 0, "-", "onnx_extractor"], [5, 9, 0, "-", "tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, 11, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, 11, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, 11, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, 11, 1, "", "Graph"], [6, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph": [[7, 12, 1, "", "change_node_input_tensors"], [7, 12, 1, "", "change_node_output_tensors"], [7, 12, 1, "", "dump_tensor"], [7, 12, 1, "", "engine_init"], [7, 13, 1, "", "execution_options"], [7, 12, 1, "", "get_next_node_names"], [7, 12, 1, "", "get_node_by_name"], [7, 12, 1, "", "get_node_id"], [7, 12, 1, "", "get_pre_node_names"], [7, 12, 1, "", "get_sparse_nodes_name"], [7, 12, 1, "", "get_tensor_idx"], [7, 12, 1, "", "graph_dispatch"], [7, 12, 1, "", "graph_init"], [7, 12, 1, "", "inference"], [7, 12, 1, "", "insert_nodes"], [7, 12, 1, "", "modify_node_connections"], [7, 13, 1, "", "net_config"], [7, 13, 1, "", "nodes"], [7, 12, 1, "", "remove_nodes"], [7, 12, 1, "", "rename_node"], [7, 12, 1, "", "save"], [7, 12, 1, "", "transpose_mode_int8"], [7, 13, 1, "", "weight_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, 11, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[6, 12, 1, "", "change_node_input_tensors"], [6, 12, 1, "", "change_node_output_tensors"], [6, 12, 1, "", "dump_tensor"], [6, 12, 1, "", "engine_init"], [6, 13, 1, "", "execution_options"], [6, 12, 1, "", "get_next_node_names"], [6, 12, 1, "", "get_node_by_name"], [6, 12, 1, "", "get_node_id"], [6, 12, 1, "", "get_pre_node_names"], [6, 12, 1, "", "get_sparse_nodes_name"], [6, 12, 1, "", "get_tensor_idx"], [6, 12, 1, "", "graph_dispatch"], [6, 12, 1, "", "graph_init"], [6, 12, 1, "", "inference"], [6, 12, 1, "", "insert_nodes"], [6, 12, 1, "", "modify_node_connections"], [6, 13, 1, "", "net_config"], [6, 13, 1, "", "nodes"], [6, 12, 1, "", "remove_nodes"], [6, 12, 1, "", "rename_node"], [6, 12, 1, "", "save"], [6, 12, 1, "", "transpose_mode_int8"], [6, 13, 1, "", "weight_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, 11, 1, "", "LazyImport"], [8, 10, 1, "", "construct_node"], [8, 10, 1, "", "get_data_dtype"], [8, 10, 1, "", "get_model_fwk_name"], [8, 10, 1, "", "get_quant_info"], [8, 10, 1, "", "insert_pattern"], [8, 10, 1, "", "insert_quant_info"], [8, 10, 1, "", "list2str"], [8, 10, 1, "", "names_from_input"], [8, 10, 1, "", "pattern_mapping"], [8, 10, 1, "", "pattern_mapping_conf_validation"], [8, 10, 1, "", "quant_info_init"], [8, 10, 1, "", "search_pattern"], [8, 10, 1, "", "search_straight_pattern"], [8, 10, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, 11, 1, "", "Loader"], [11, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, 11, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, 11, 1, "", "Logger"], [12, 10, 1, "", "debug"], [12, 10, 1, "", "error"], [12, 10, 1, "", "fatal"], [12, 10, 1, "", "info"], [12, 10, 1, "", "log"], [12, 10, 1, "", "warn"], [12, 10, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[12, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, 10, 1, "", "bias_to_int32"], [13, 10, 1, "", "change_num_name"], [13, 10, 1, "", "get_children"], [13, 10, 1, "", "get_initializer_children_names"], [13, 10, 1, "", "get_node_children_names"], [13, 10, 1, "", "graph_node_names_details"], [13, 10, 1, "", "is_supported_onnx_graph"], [13, 10, 1, "", "is_supported_onnx_node"], [13, 10, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[33, 11, 1, "", "Operator"], [14, 9, 0, "-", "all"], [15, 9, 0, "-", "assert"], [16, 9, 0, "-", "batch_matmul"], [17, 9, 0, "-", "batch_matmul_v2"], [18, 9, 0, "-", "bias_add"], [19, 9, 0, "-", "binary_op"], [20, 9, 0, "-", "cast"], [21, 9, 0, "-", "concat"], [22, 9, 0, "-", "conv"], [23, 9, 0, "-", "empty_ops"], [24, 9, 0, "-", "expand_dims"], [25, 9, 0, "-", "fused_batch_matmul_v2"], [26, 9, 0, "-", "fused_batch_norm_v3"], [27, 9, 0, "-", "fused_gemm"], [28, 9, 0, "-", "fused_matmul"], [29, 9, 0, "-", "gather"], [30, 9, 0, "-", "gather_elements"], [31, 9, 0, "-", "gelu"], [32, 9, 0, "-", "gemm"], [34, 9, 0, "-", "iterator_get_next"], [35, 9, 0, "-", "iterator_v2"], [36, 9, 0, "-", "layer_normalization"], [37, 9, 0, "-", "map_and_batch_dataset"], [38, 9, 0, "-", "matmul"], [39, 9, 0, "-", "mean"], [40, 9, 0, "-", "mkl_layer_norm"], [41, 9, 0, "-", "model_dataset"], [42, 9, 0, "-", "one_hot"], [43, 9, 0, "-", "onnx_input"], [44, 9, 0, "-", "op"], [33, 10, 1, "", "operator_registry"], [45, 9, 0, "-", "optimize_dataset"], [46, 9, 0, "-", "pack"], [47, 9, 0, "-", "placeholder"], [48, 9, 0, "-", "quantize_linear"], [49, 9, 0, "-", "quantize_v2"], [50, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [51, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [52, 9, 0, "-", "reduce_mean"], [53, 9, 0, "-", "reduce_sum"], [54, 9, 0, "-", "reshape"], [55, 9, 0, "-", "scatter_elements"], [56, 9, 0, "-", "softmax"], [57, 9, 0, "-", "split"], [58, 9, 0, "-", "squeeze"], [59, 9, 0, "-", "strided_slice"], [60, 9, 0, "-", "tensor"], [61, 9, 0, "-", "top_k"], [62, 9, 0, "-", "transpose"], [63, 9, 0, "-", "unpack"], [64, 9, 0, "-", "unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator": [[33, 13, 1, "", "attr"], [33, 13, 1, "", "config"], [33, 12, 1, "", "construct"], [33, 12, 1, "", "extract"], [33, 13, 1, "", "input_tensors"], [33, 13, 1, "", "name"], [33, 13, 1, "", "op_type"], [33, 13, 1, "", "output_tensors"], [33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, 11, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[14, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, 11, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[15, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, 11, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, 11, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, 11, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[20, 11, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[21, 11, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[21, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[22, 11, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[23, 11, 1, "", "Add"], [23, 11, 1, "", "AddV2"], [23, 11, 1, "", "BinaryAdd"], [23, 11, 1, "", "ConstantOfShape"], [23, 11, 1, "", "Convolution"], [23, 11, 1, "", "CumSum"], [23, 11, 1, "", "DequantizeLinear"], [23, 11, 1, "", "EmbeddingBag"], [23, 11, 1, "", "Erf"], [23, 11, 1, "", "Expand"], [23, 11, 1, "", "ExpandIndices"], [23, 11, 1, "", "Fill"], [23, 11, 1, "", "FlatMapDataset"], [23, 11, 1, "", "Flatten"], [23, 11, 1, "", "Identity"], [23, 11, 1, "", "InnerProduct"], [23, 11, 1, "", "Input"], [23, 11, 1, "", "LayerNorm"], [23, 11, 1, "", "Loop"], [23, 11, 1, "", "MakeIterator"], [23, 11, 1, "", "MatMulWithBias"], [23, 11, 1, "", "MatMulWithBiasAdd"], [23, 11, 1, "", "MatMulWithBiasGelu"], [23, 11, 1, "", "MatMulWithBiasRelu"], [23, 11, 1, "", "MatMulWithBiasSigmoid"], [23, 11, 1, "", "MatMulWithBiasTanh"], [23, 11, 1, "", "Matmul"], [23, 11, 1, "", "MergedEmbeddingbag"], [23, 11, 1, "", "MultiHeadAttenion"], [23, 11, 1, "", "Onehot"], [23, 11, 1, "", "OpAny"], [23, 11, 1, "", "Output"], [23, 11, 1, "", "PaddingSequence"], [23, 11, 1, "", "PositionIds"], [23, 11, 1, "", "Pow"], [23, 11, 1, "", "QLinearAdd"], [23, 11, 1, "", "QLinearMatMul"], [23, 11, 1, "", "QLinearMul"], [23, 11, 1, "", "Quantize"], [23, 11, 1, "", "Range"], [23, 11, 1, "", "RealDiv"], [23, 11, 1, "", "Relu"], [23, 11, 1, "", "Reorder"], [23, 11, 1, "", "Rsqrt"], [23, 11, 1, "", "Shape"], [23, 11, 1, "", "Sigmoid"], [23, 11, 1, "", "Slice"], [23, 11, 1, "", "Sqrt"], [23, 11, 1, "", "Square"], [23, 11, 1, "", "SquaredDifference"], [23, 11, 1, "", "StopGradient"], [23, 11, 1, "", "Tanh"], [23, 11, 1, "", "TensorSliceDataset"], [23, 11, 1, "", "Tile"], [23, 11, 1, "", "TokenTypeIds"], [23, 11, 1, "", "TransposeBatchMatMul"], [23, 11, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[24, 11, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[26, 11, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[26, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[27, 11, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[28, 11, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[28, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[29, 11, 1, "", "Gather"], [29, 11, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[30, 11, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[31, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[32, 11, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[34, 11, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[35, 11, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[36, 11, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[36, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[37, 11, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[38, 11, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[39, 11, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[41, 11, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[42, 11, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[43, 11, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[43, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[44, 11, 1, "", "Operator"], [44, 10, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[44, 13, 1, "", "attr"], [44, 13, 1, "", "config"], [44, 12, 1, "", "construct"], [44, 12, 1, "", "extract"], [44, 13, 1, "", "input_tensors"], [44, 13, 1, "", "name"], [44, 13, 1, "", "op_type"], [44, 13, 1, "", "output_tensors"], [44, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[45, 11, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[46, 11, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[47, 11, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[47, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[48, 11, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[49, 11, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[51, 11, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[52, 11, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[53, 11, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[54, 11, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[55, 11, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[56, 11, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[57, 11, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[57, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[58, 11, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[59, 11, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[60, 11, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor": [[60, 13, 1, "", "config"], [60, 13, 1, "", "data"], [60, 13, 1, "", "dest_op"], [60, 13, 1, "", "dtype"], [60, 13, 1, "", "location"], [60, 13, 1, "", "name"], [60, 13, 1, "", "shape"], [60, 13, 1, "", "source_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[61, 11, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[62, 11, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[63, 11, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[64, 11, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[75, 11, 1, "", "Pattern"], [75, 11, 1, "", "SubGraphMatcher"], [65, 9, 0, "-", "add_cls_token"], [66, 9, 0, "-", "add_embeddings"], [67, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [68, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [69, 9, 0, "-", "attention_reshape"], [70, 9, 0, "-", "collect_quant_info"], [71, 9, 0, "-", "conv_reshape"], [72, 9, 0, "-", "embeddingbag"], [73, 9, 0, "-", "gelu"], [74, 9, 0, "-", "generate_sequence"], [76, 9, 0, "-", "input_data"], [77, 9, 0, "-", "input_file"], [78, 9, 0, "-", "insert_bf16_node"], [79, 9, 0, "-", "insert_quant_node"], [80, 9, 0, "-", "interact_features"], [81, 9, 0, "-", "last_layer_shape"], [82, 9, 0, "-", "layer_norm"], [83, 9, 0, "-", "layer_norm_with_reduce_mean"], [84, 9, 0, "-", "matmul_with_bias"], [85, 9, 0, "-", "matmul_with_bias_add"], [86, 9, 0, "-", "matmul_with_bias_gelu"], [87, 9, 0, "-", "matmul_with_bias_relu"], [88, 9, 0, "-", "matmul_with_bias_sigmoid"], [89, 9, 0, "-", "matmul_with_bias_tanh"], [90, 9, 0, "-", "merged_embeddingbag"], [91, 9, 0, "-", "multi_head_attention"], [92, 9, 0, "-", "output_data"], [93, 9, 0, "-", "padding_sequence"], [94, 9, 0, "-", "pattern"], [75, 10, 1, "", "pattern_registry"], [95, 9, 0, "-", "position_embeddings"], [96, 9, 0, "-", "position_embeddings_v1"], [97, 9, 0, "-", "qkv_merge"], [98, 9, 0, "-", "qkv_reshape"], [99, 9, 0, "-", "quantize_fusion"], [100, 9, 0, "-", "reshape_after_restore_hidden_states"], [101, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [102, 9, 0, "-", "reshape_before_restore_hidden_states"], [103, 9, 0, "-", "reshape_fusion"], [104, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [105, 9, 0, "-", "start_end_logits"], [106, 9, 0, "-", "subgraph_matcher"], [107, 9, 0, "-", "token_type_embeddings"], [108, 9, 0, "-", "token_type_embeddings_v1"], [109, 9, 0, "-", "transpose_batch_matmul"], [110, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[65, 11, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[66, 11, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[67, 11, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[68, 11, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[69, 11, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[70, 11, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[71, 11, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[72, 11, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[73, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[74, 11, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[76, 11, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[77, 11, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[78, 11, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[79, 11, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[80, 11, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[81, 11, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[82, 11, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[83, 11, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[84, 11, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[85, 11, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[86, 11, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[87, 11, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[88, 11, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[89, 11, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[90, 11, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[92, 11, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[93, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[94, 11, 1, "", "Pattern"], [94, 10, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[95, 11, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[96, 11, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[97, 11, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[98, 11, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[99, 11, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[100, 11, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[101, 11, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[102, 11, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[103, 11, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[104, 11, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[105, 11, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[106, 11, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[107, 11, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[108, 11, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[109, 11, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[110, 11, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[111, 14, 1, "", "TF_DTYPE_ID"], [111, 10, 1, "", "create_tf_node"], [111, 10, 1, "", "get_tensor_dest_op"], [111, 10, 1, "", "graph_node_names_details"], [111, 10, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.optimization": [[120, 11, 1, "", "AutoDistillation"], [120, 11, 1, "", "AutoDistillationConfig"], [120, 11, 1, "", "DistillationConfig"], [120, 11, 1, "", "DistillationCriterionMode"], [120, 11, 1, "", "DynamicLengthConfig"], [120, 11, 1, "", "FlashDistillationConfig"], [120, 11, 1, "", "NAS"], [120, 11, 1, "", "NASConfig"], [120, 11, 1, "", "NoTrainerOptimizer"], [120, 11, 1, "", "OptimizedModel"], [120, 11, 1, "", "Orchestrate_optimizer"], [120, 11, 1, "", "Provider"], [120, 11, 1, "", "PrunerConfig"], [120, 11, 1, "", "PruningConfig"], [120, 11, 1, "", "PruningMode"], [120, 11, 1, "", "QuantizationConfig"], [120, 11, 1, "", "QuantizationMode"], [120, 11, 1, "", "TFDistillationConfig"], [120, 11, 1, "", "TFOptimization"], [114, 9, 0, "-", "benchmark"], [115, 9, 0, "-", "config"], [116, 9, 0, "-", "distillation"], [119, 9, 0, "-", "dynamic"], [122, 9, 0, "-", "mixture"], [123, 9, 0, "-", "model"], [125, 9, 0, "-", "nas"], [127, 9, 0, "-", "optimizer"], [128, 9, 0, "-", "optimizer_tf"], [129, 9, 0, "-", "pipeline"], [130, 9, 0, "-", "pruning"], [131, 9, 0, "-", "pytorch_pruner"], [137, 9, 0, "-", "quantization"], [138, 9, 0, "-", "trainer"], [139, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.AutoDistillation": [[120, 12, 1, "", "create_distillers"], [120, 12, 1, "", "estimate"], [120, 13, 1, "", "eval_func"], [120, 12, 1, "", "init_by_cfg"], [120, 12, 1, "", "load_search_results"], [120, 12, 1, "", "search"], [120, 13, 1, "", "student_model"], [120, 13, 1, "", "teacher_model"], [120, 13, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.AutoDistillationConfig": [[120, 13, 1, "", "framework"], [120, 13, 1, "", "knowledge_transfer"], [120, 13, 1, "", "max_trials"], [120, 13, 1, "", "metrics"], [120, 13, 1, "", "regular_distillation"], [120, 13, 1, "", "search_algorithm"], [120, 13, 1, "", "search_space"], [120, 13, 1, "", "seed"]], "intel_extension_for_transformers.optimization.DistillationConfig": [[120, 13, 1, "", "criterion"], [120, 13, 1, "", "framework"], [120, 13, 1, "", "metrics"]], "intel_extension_for_transformers.optimization.NASConfig": [[120, 13, 1, "", "framework"], [120, 13, 1, "", "max_trials"], [120, 13, 1, "", "metrics"], [120, 13, 1, "", "search_algorithm"], [120, 13, 1, "", "search_space"], [120, 13, 1, "", "seed"]], "intel_extension_for_transformers.optimization.NoTrainerOptimizer": [[120, 13, 1, "", "calib_dataloader"], [120, 13, 1, "", "calib_func"], [120, 12, 1, "", "distill"], [120, 13, 1, "", "eval_func"], [120, 12, 1, "", "init_distiller"], [120, 12, 1, "", "init_pruner"], [120, 12, 1, "", "init_quantizer"], [120, 13, 1, "", "provider"], [120, 12, 1, "", "prune"], [120, 12, 1, "", "quantize"], [120, 13, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.OptimizedModel": [[120, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.Orchestrate_optimizer": [[120, 12, 1, "", "fit"]], "intel_extension_for_transformers.optimization.PruningConfig": [[120, 13, 1, "", "epoch_range"], [120, 13, 1, "", "epochs"], [120, 13, 1, "", "framework"], [120, 12, 1, "", "init_prune_config"], [120, 13, 1, "", "initial_sparsity_ratio"], [120, 13, 1, "", "metrics"], [120, 13, 1, "", "pruner_config"], [120, 13, 1, "", "target_sparsity_ratio"]], "intel_extension_for_transformers.optimization.QuantizationConfig": [[120, 13, 1, "", "approach"], [120, 13, 1, "", "framework"], [120, 13, 1, "", "input_names"], [120, 13, 1, "", "max_trials"], [120, 13, 1, "", "metrics"], [120, 13, 1, "", "objectives"], [120, 13, 1, "", "op_wise"], [120, 13, 1, "", "output_dir"], [120, 13, 1, "", "output_names"], [120, 13, 1, "", "performance_only"], [120, 13, 1, "", "random_seed"], [120, 13, 1, "", "resume_path"], [120, 13, 1, "", "sampling_size"], [120, 13, 1, "", "strategy"], [120, 13, 1, "", "tensorboard"], [120, 13, 1, "", "timeout"]], "intel_extension_for_transformers.optimization.TFOptimization": [[120, 12, 1, "", "autodistill"], [120, 12, 1, "", "build_train_func"], [120, 12, 1, "", "builtin_eval_func"], [120, 12, 1, "", "distill"], [120, 13, 1, "", "eval_dataset"], [120, 13, 1, "", "eval_func"], [120, 12, 1, "", "init_distiller"], [120, 12, 1, "", "init_pruner"], [120, 12, 1, "", "init_quantizer"], [120, 13, 1, "", "input_names"], [120, 13, 1, "", "inputs"], [120, 12, 1, "", "model_builder_builtin"], [120, 13, 1, "", "output_names"], [120, 12, 1, "", "prune"], [120, 12, 1, "", "quantize"], [120, 13, 1, "", "train_dataset"], [120, 13, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.benchmark": [[114, 11, 1, "", "ExecutorBenchmark"], [114, 10, 1, "", "run"]], "intel_extension_for_transformers.optimization.config": [[115, 11, 1, "", "AutoDistillationConfig"], [115, 11, 1, "", "DistillationConfig"], [115, 11, 1, "", "DynamicLengthConfig"], [115, 11, 1, "", "FlashDistillationConfig"], [115, 11, 1, "", "NASConfig"], [115, 11, 1, "", "Provider"], [115, 11, 1, "", "PruningConfig"], [115, 11, 1, "", "QuantizationConfig"], [115, 11, 1, "", "TFDistillationConfig"]], "intel_extension_for_transformers.optimization.config.AutoDistillationConfig": [[115, 13, 1, "", "framework"], [115, 13, 1, "", "knowledge_transfer"], [115, 13, 1, "", "max_trials"], [115, 13, 1, "", "metrics"], [115, 13, 1, "", "regular_distillation"], [115, 13, 1, "", "search_algorithm"], [115, 13, 1, "", "search_space"], [115, 13, 1, "", "seed"]], "intel_extension_for_transformers.optimization.config.DistillationConfig": [[115, 13, 1, "", "criterion"], [115, 13, 1, "", "framework"], [115, 13, 1, "", "metrics"]], "intel_extension_for_transformers.optimization.config.NASConfig": [[115, 13, 1, "", "framework"], [115, 13, 1, "", "max_trials"], [115, 13, 1, "", "metrics"], [115, 13, 1, "", "search_algorithm"], [115, 13, 1, "", "search_space"], [115, 13, 1, "", "seed"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[115, 13, 1, "", "epoch_range"], [115, 13, 1, "", "epochs"], [115, 13, 1, "", "framework"], [115, 12, 1, "", "init_prune_config"], [115, 13, 1, "", "initial_sparsity_ratio"], [115, 13, 1, "", "metrics"], [115, 13, 1, "", "pruner_config"], [115, 13, 1, "", "target_sparsity_ratio"]], "intel_extension_for_transformers.optimization.config.QuantizationConfig": [[115, 13, 1, "", "approach"], [115, 13, 1, "", "framework"], [115, 13, 1, "", "input_names"], [115, 13, 1, "", "max_trials"], [115, 13, 1, "", "metrics"], [115, 13, 1, "", "objectives"], [115, 13, 1, "", "op_wise"], [115, 13, 1, "", "output_dir"], [115, 13, 1, "", "output_names"], [115, 13, 1, "", "performance_only"], [115, 13, 1, "", "random_seed"], [115, 13, 1, "", "resume_path"], [115, 13, 1, "", "sampling_size"], [115, 13, 1, "", "strategy"], [115, 13, 1, "", "tensorboard"], [115, 13, 1, "", "timeout"]], "intel_extension_for_transformers.optimization.distillation": [[116, 11, 1, "", "Criterion"], [116, 11, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[117, 9, 0, "-", "drop_and_restore_utils"], [118, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[117, 10, 1, "", "sample_layer_configuration"], [117, 10, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[118, 11, 1, "", "Evolution"], [118, 10, 1, "", "approx_ratio"], [118, 10, 1, "", "inverse"], [118, 10, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[118, 12, 1, "", "add_gene"], [118, 12, 1, "", "convex_hull"], [118, 12, 1, "", "crossover"], [118, 12, 1, "", "get_store"], [118, 12, 1, "", "load_store"], [118, 12, 1, "", "mutate"], [118, 12, 1, "", "pareto_frontier"], [118, 12, 1, "", "save_population"], [118, 12, 1, "", "save_store"], [118, 12, 1, "", "set_lower_constraint"], [118, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[121, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[121, 11, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[121, 12, 1, "", "create_distillers"], [121, 12, 1, "", "estimate"], [121, 13, 1, "", "eval_func"], [121, 12, 1, "", "init_by_cfg"], [121, 12, 1, "", "load_search_results"], [121, 12, 1, "", "search"], [121, 13, 1, "", "student_model"], [121, 13, 1, "", "teacher_model"], [121, 13, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.model": [[123, 11, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[123, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[125, 11, 1, "", "BasicNAS"], [125, 11, 1, "", "NAS"], [124, 9, 0, "-", "basic_nas"], [126, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.BasicNAS": [[125, 12, 1, "", "estimate"], [125, 13, 1, "", "eval_func"], [125, 12, 1, "", "execute"], [125, 12, 1, "", "init_by_cfg"], [125, 13, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[124, 11, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[124, 12, 1, "", "estimate"], [124, 13, 1, "", "eval_func"], [124, 12, 1, "", "execute"], [124, 12, 1, "", "init_by_cfg"], [124, 13, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.nas.nas": [[126, 11, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[127, 11, 1, "", "NoTrainerOptimizer"], [127, 11, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[127, 13, 1, "", "calib_dataloader"], [127, 13, 1, "", "calib_func"], [127, 12, 1, "", "distill"], [127, 13, 1, "", "eval_func"], [127, 12, 1, "", "init_distiller"], [127, 12, 1, "", "init_pruner"], [127, 12, 1, "", "init_quantizer"], [127, 13, 1, "", "provider"], [127, 12, 1, "", "prune"], [127, 12, 1, "", "quantize"], [127, 13, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[127, 12, 1, "", "fit"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[128, 11, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[128, 12, 1, "", "autodistill"], [128, 12, 1, "", "build_train_func"], [128, 12, 1, "", "builtin_eval_func"], [128, 12, 1, "", "distill"], [128, 13, 1, "", "eval_dataset"], [128, 13, 1, "", "eval_func"], [128, 12, 1, "", "init_distiller"], [128, 12, 1, "", "init_pruner"], [128, 12, 1, "", "init_quantizer"], [128, 13, 1, "", "input_names"], [128, 13, 1, "", "inputs"], [128, 12, 1, "", "model_builder_builtin"], [128, 13, 1, "", "output_names"], [128, 12, 1, "", "prune"], [128, 12, 1, "", "quantize"], [128, 13, 1, "", "train_dataset"], [128, 13, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.pipeline": [[129, 10, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[130, 11, 1, "", "PrunerConfig"], [130, 11, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[132, 9, 0, "-", "patterns"], [133, 9, 0, "-", "prune_utils"], [134, 9, 0, "-", "pruner"], [135, 9, 0, "-", "pruning"], [136, 9, 0, "-", "scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[132, 11, 1, "", "Pattern"], [132, 11, 1, "", "PatternNInM"], [132, 11, 1, "", "PatternNxM"], [132, 10, 1, "", "get_pattern"], [132, 10, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern": [[132, 12, 1, "", "get_block_size_dict"], [132, 12, 1, "", "get_mask_single"], [132, 12, 1, "", "get_masks"], [132, 12, 1, "", "get_masks_global"], [132, 12, 1, "", "get_masks_local"], [132, 12, 1, "", "get_pattern_lock_masks"], [132, 12, 1, "", "get_sparsity_ratio"], [132, 15, 1, "", "is_global"], [132, 15, 1, "", "pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM": [[132, 15, 1, "", "M"], [132, 15, 1, "", "N"], [132, 12, 1, "", "get_masks_global"], [132, 12, 1, "", "get_pattern_lock_masks"], [132, 12, 1, "", "get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM": [[132, 15, 1, "", "block_size"], [132, 12, 1, "", "get_block_size_dict"], [132, 12, 1, "", "get_masks_global"], [132, 12, 1, "", "get_pattern_lock_masks"], [132, 12, 1, "", "get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[133, 10, 1, "", "check_config"], [133, 10, 1, "", "parse_not_to_prune"], [133, 10, 1, "", "parse_to_prune"], [133, 10, 1, "", "process_and_check_config"], [133, 10, 1, "", "process_config"], [133, 10, 1, "", "reset_non_value_to_default"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[134, 11, 1, "", "MagnitudePruner"], [134, 11, 1, "", "PatternLockPruner"], [134, 11, 1, "", "Pruner"], [134, 11, 1, "", "SnipMomentumPruner"], [134, 11, 1, "", "SnipPruner"], [134, 10, 1, "", "get_pruner"], [134, 10, 1, "", "register_pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.MagnitudePruner": [[134, 12, 1, "", "update_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.PatternLockPruner": [[134, 12, 1, "", "on_after_optimizer_step"], [134, 12, 1, "", "on_step_begin"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner": [[134, 12, 1, "", "check_is_pruned_step"], [134, 15, 1, "", "config"], [134, 15, 1, "", "current_sparsity_ratio"], [134, 15, 1, "", "end_step"], [134, 15, 1, "", "global_step"], [134, 12, 1, "", "mask_weights"], [134, 15, 1, "", "masks"], [134, 15, 1, "", "max_sparsity_ratio_per_layer"], [134, 15, 1, "", "modules"], [134, 12, 1, "", "on_after_eval"], [134, 12, 1, "", "on_after_optimizer_step"], [134, 12, 1, "", "on_before_eval"], [134, 12, 1, "", "on_before_optimizer_step"], [134, 12, 1, "", "on_epoch_begin"], [134, 12, 1, "", "on_epoch_end"], [134, 12, 1, "", "on_step_begin"], [134, 12, 1, "", "on_step_end"], [134, 12, 1, "", "on_train_begin"], [134, 12, 1, "", "on_train_end"], [134, 15, 1, "", "pattern"], [134, 15, 1, "", "scheduler"], [134, 15, 1, "", "scores"], [134, 15, 1, "", "start_step"], [134, 15, 1, "", "target_sparsity_ratio"], [134, 15, 1, "", "update_frequency_on_step"], [134, 12, 1, "", "update_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipMomentumPruner": [[134, 12, 1, "", "on_after_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipPruner": [[134, 12, 1, "", "on_after_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[135, 11, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning": [[135, 15, 1, "", "config_file_path"], [135, 12, 1, "", "get_sparsity_ratio"], [135, 15, 1, "", "model"], [135, 12, 1, "", "on_after_eval"], [135, 12, 1, "", "on_after_optimizer_step"], [135, 12, 1, "", "on_before_eval"], [135, 12, 1, "", "on_before_optimizer_step"], [135, 12, 1, "", "on_epoch_begin"], [135, 12, 1, "", "on_epoch_end"], [135, 12, 1, "", "on_step_begin"], [135, 12, 1, "", "on_step_end"], [135, 12, 1, "", "on_train_begin"], [135, 12, 1, "", "on_train_end"], [135, 12, 1, "", "prepare"], [135, 15, 1, "", "pruner_info"], [135, 15, 1, "", "pruners"], [135, 12, 1, "", "update_items_for_all_pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[136, 11, 1, "", "IterativeScheduler"], [136, 11, 1, "", "OneshotScheduler"], [136, 11, 1, "", "Scheduler"], [136, 10, 1, "", "get_scheduler"], [136, 10, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.IterativeScheduler": [[136, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.OneshotScheduler": [[136, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.Scheduler": [[136, 15, 1, "", "config"], [136, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.quantization": [[137, 11, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[138, 11, 1, "", "BaseTrainer"], [138, 11, 1, "", "NLPSeq2SeqTrainer"], [138, 11, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[138, 12, 1, "", "auto_distil_evaluation_loop"], [138, 12, 1, "", "autodistillation"], [138, 12, 1, "", "builtin_eval_func"], [138, 12, 1, "", "builtin_train_func"], [138, 13, 1, "", "calib_dataloader"], [138, 12, 1, "", "compute_loss"], [138, 12, 1, "", "create_optimizer_builtin"], [138, 12, 1, "", "distill"], [138, 13, 1, "", "eval_func"], [138, 12, 1, "", "export_to_bf16_onnx"], [138, 12, 1, "", "export_to_fp32_onnx"], [138, 12, 1, "", "export_to_int8_onnx"], [138, 12, 1, "", "export_to_jit"], [138, 12, 1, "", "export_to_onnx"], [138, 12, 1, "", "init_distiller"], [138, 12, 1, "", "init_pruner"], [138, 12, 1, "", "init_quantizer"], [138, 12, 1, "", "model_builder_builtin"], [138, 12, 1, "", "nas"], [138, 12, 1, "", "orchestrate_optimizations"], [138, 13, 1, "", "provider"], [138, 12, 1, "", "prune"], [138, 12, 1, "", "quantize"], [138, 13, 1, "", "resuming_checkpoint"], [138, 12, 1, "", "run_evolutionary_search"], [138, 12, 1, "", "set_dynamic_config"], [138, 12, 1, "", "train"], [138, 13, 1, "", "train_func"], [138, 12, 1, "", "training_step"], [138, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[138, 12, 1, "", "builtin_eval_func"], [138, 13, 1, "", "max_length"], [138, 13, 1, "", "num_beams"]], "intel_extension_for_transformers.optimization.utils": [[140, 9, 0, "-", "metrics"], [141, 9, 0, "-", "models"], [144, 9, 0, "-", "objectives"], [145, 9, 0, "-", "utility"], [146, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[140, 11, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[142, 9, 0, "-", "modeling_bert_dynamic"], [143, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[142, 11, 1, "", "BertAttention"], [142, 11, 1, "", "BertEmbeddings"], [142, 11, 1, "", "BertEncoder"], [142, 11, 1, "", "BertForMaskedLM"], [142, 11, 1, "", "BertForMultipleChoice"], [142, 11, 1, "", "BertForNextSentencePrediction"], [142, 11, 1, "", "BertForPreTraining"], [142, 11, 1, "", "BertForPreTrainingOutput"], [142, 11, 1, "", "BertForQuestionAnswering"], [142, 11, 1, "", "BertForSequenceClassification"], [142, 11, 1, "", "BertForTokenClassification"], [142, 11, 1, "", "BertIntermediate"], [142, 11, 1, "", "BertLMHeadModel"], [142, 11, 1, "", "BertLMPredictionHead"], [142, 11, 1, "", "BertLayer"], [142, 11, 1, "", "BertModel"], [142, 11, 1, "", "BertOnlyMLMHead"], [142, 11, 1, "", "BertOnlyNSPHead"], [142, 11, 1, "", "BertOutput"], [142, 11, 1, "", "BertPooler"], [142, 11, 1, "", "BertPreTrainedModel"], [142, 11, 1, "", "BertPreTrainingHeads"], [142, 11, 1, "", "BertPredictionHeadTransform"], [142, 11, 1, "", "BertSelfAttention"], [142, 11, 1, "", "BertSelfOutput"], [142, 10, 1, "", "expand_gather"], [142, 10, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[142, 12, 1, "", "forward"], [142, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[142, 12, 1, "", "forward"], [142, 12, 1, "", "get_output_embeddings"], [142, 12, 1, "", "prepare_inputs_for_generation"], [142, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[142, 12, 1, "", "forward"], [142, 12, 1, "", "get_output_embeddings"], [142, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[142, 12, 1, "", "forward"], [142, 12, 1, "", "get_output_embeddings"], [142, 12, 1, "", "prepare_inputs_for_generation"], [142, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[142, 12, 1, "", "feed_forward_chunk"], [142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[142, 12, 1, "", "forward"], [142, 12, 1, "", "get_input_embeddings"], [142, 12, 1, "", "set_input_embeddings"], [142, 12, 1, "", "set_length_config"], [142, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[142, 12, 1, "", "forward"], [142, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[142, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[143, 11, 1, "", "RobertaAttention"], [143, 11, 1, "", "RobertaClassificationHead"], [143, 11, 1, "", "RobertaEmbeddings"], [143, 11, 1, "", "RobertaEncoder"], [143, 11, 1, "", "RobertaForCausalLM"], [143, 11, 1, "", "RobertaForMaskedLM"], [143, 11, 1, "", "RobertaForMultipleChoice"], [143, 11, 1, "", "RobertaForQuestionAnswering"], [143, 11, 1, "", "RobertaForSequenceClassification"], [143, 11, 1, "", "RobertaForTokenClassification"], [143, 11, 1, "", "RobertaIntermediate"], [143, 11, 1, "", "RobertaLMHead"], [143, 11, 1, "", "RobertaLayer"], [143, 11, 1, "", "RobertaModel"], [143, 11, 1, "", "RobertaOutput"], [143, 11, 1, "", "RobertaPooler"], [143, 11, 1, "", "RobertaPreTrainedModel"], [143, 11, 1, "", "RobertaSelfAttention"], [143, 11, 1, "", "RobertaSelfOutput"], [143, 10, 1, "", "create_position_ids_from_input_ids"], [143, 10, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[143, 12, 1, "", "forward"], [143, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[143, 12, 1, "", "create_position_ids_from_inputs_embeds"], [143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[143, 12, 1, "", "forward"], [143, 12, 1, "", "get_output_embeddings"], [143, 12, 1, "", "prepare_inputs_for_generation"], [143, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[143, 12, 1, "", "forward"], [143, 12, 1, "", "get_output_embeddings"], [143, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[143, 12, 1, "", "feed_forward_chunk"], [143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[143, 12, 1, "", "forward"], [143, 12, 1, "", "get_input_embeddings"], [143, 12, 1, "", "set_input_embeddings"], [143, 12, 1, "", "set_length_config"], [143, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[143, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[143, 12, 1, "", "forward"], [143, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[143, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[144, 11, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[144, 12, 1, "", "modelsize"], [144, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[145, 10, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[146, 11, 1, "", "TFDataloader"], [146, 10, 1, "", "distributed_init"], [146, 10, 1, "", "get_filepath"], [146, 10, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[147, 9, 0, "-", "data_augmentation"], [149, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.utils": [[149, 11, 1, "", "AugmenterType"]], "test_add_cls_token": [[152, 11, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[152, 12, 1, "", "setUpClass"], [152, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[153, 11, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[153, 12, 1, "", "setUpClass"], [153, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[154, 11, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[154, 12, 1, "", "setUpClass"], [154, 12, 1, "", "tearDownClass"]], "test_binary_op": [[155, 11, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[155, 12, 1, "", "setUpClass"], [155, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[156, 11, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[156, 12, 1, "", "setUpClass"], [156, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[157, 11, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[157, 12, 1, "", "setUpClass"], [157, 12, 1, "", "tearDownClass"]], "test_execution_options": [[158, 11, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[158, 12, 1, "", "setUpClass"], [158, 12, 1, "", "tearDownClass"]], "test_gelu": [[159, 11, 1, "", "TestGelu"]], "test_gelu.TestGelu": [[159, 12, 1, "", "setUpClass"], [159, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[160, 11, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[160, 12, 1, "", "setUpClass"], [160, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[161, 11, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[161, 12, 1, "", "setUpClass"], [161, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[162, 11, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[162, 12, 1, "", "setUpClass"], [162, 12, 1, "", "tearDownClass"], [162, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[163, 11, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[163, 12, 1, "", "setUpClass"], [163, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[164, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[164, 12, 1, "", "setUpClass"], [164, 12, 1, "", "tearDownClass"]], "test_main": [[165, 11, 1, "", "TestMain"]], "test_main.TestMain": [[165, 12, 1, "", "setUpClass"], [165, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[166, 11, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[166, 12, 1, "", "setUpClass"], [166, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[167, 11, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[167, 12, 1, "", "setUpClass"], [167, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[168, 11, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[168, 12, 1, "", "setUpClass"], [168, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[169, 11, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[169, 12, 1, "", "setUpClass"], [169, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[171, 11, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[171, 12, 1, "", "setUpClass"], [171, 12, 1, "", "tearDownClass"]], "test_ops": [[172, 11, 1, "", "TestOps"]], "test_ops.TestOps": [[172, 12, 1, "", "setUpClass"], [172, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[173, 11, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[173, 12, 1, "", "setUpClass"], [173, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[174, 11, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[174, 12, 1, "", "setUpClass"], [174, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[175, 11, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[175, 12, 1, "", "setUpClass"], [175, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[176, 11, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[176, 12, 1, "", "setUpClass"], [176, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[177, 11, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[177, 12, 1, "", "setUpClass"], [177, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[178, 11, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[178, 12, 1, "", "setUpClass"], [178, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[179, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[179, 12, 1, "", "setUpClass"], [179, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[180, 11, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[180, 12, 1, "", "setUpClass"], [180, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[181, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[181, 12, 1, "", "setUpClass"], [181, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[182, 11, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[182, 12, 1, "", "setUpClass"], [182, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[183, 11, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[183, 12, 1, "", "setUpClass"], [183, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[184, 11, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[184, 12, 1, "", "setUpClass"], [184, 12, 1, "", "tearDownClass"]], "test_transpose": [[185, 11, 1, "", "TestTranspose"]], "test_transpose.TestTranspose": [[185, 12, 1, "", "setUpClass"], [185, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[186, 11, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[186, 12, 1, "", "setUpClass"], [186, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:class", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:member", "6": "cpp:enumerator", "7": "cpp:enum", "8": "cpp:templateParam", "9": "py:module", "10": "py:function", "11": "py:class", "12": "py:method", "13": "py:property", "14": "py:data", "15": "py:attribute"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "class", "C++ class"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "member", "C++ member"], "6": ["cpp", "enumerator", "C++ enumerator"], "7": ["cpp", "enum", "C++ enum"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "function", "Python function"], "11": ["py", "class", "Python class"], "12": ["py", "method", "Python method"], "13": ["py", "property", "Python property"], "14": ["py", "data", "Python data"], "15": ["py", "attribute", "Python attribute"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 217, 224], "backend": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 220, 223, 251], "neural_engin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "compil": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 193, 229], "modul": [1, 2, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 254], "function": [1, 8, 9, 12, 13, 33, 44, 75, 94, 111, 114, 117, 118, 129, 132, 133, 134, 136, 142, 143, 145, 146], "extractor": [2, 3, 4, 5], "class": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 118, 120, 121, 123, 124, 125, 126, 127, 128, 130, 132, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 194, 196, 197, 198, 208, 249], "submodul": [3, 7, 9, 10, 33, 75, 113, 119, 120, 122, 125, 131, 139, 141], "packag": [3, 7, 9, 10, 33, 75, 120, 125], "onnx_extractor": 4, "tf_extractor": 5, "graph": [6, 7, 223, 227, 228], "graph_util": 8, "subpackag": [9, 112, 120], "loader": [10, 11], "logger": 12, "onnx_util": 13, "op": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 225, 227], "all": 14, "assert": 15, "batch_matmul": 16, "batch_matmul_v2": 17, "bias_add": 18, "binary_op": 19, "cast": 20, "concat": 21, "conv": 22, "empty_op": 23, "expand_dim": 24, "fused_batch_matmul_v2": 25, "fused_batch_norm_v3": 26, "fused_gemm": 27, "fused_matmul": 28, "gather": 29, "gather_el": 30, "gelu": [31, 73], "gemm": [32, 238, 239, 240, 243], "attribut": [33, 75, 111, 225], "iterator_get_next": 34, "iterator_v2": 35, "layer_norm": [36, 82], "map_and_batch_dataset": 37, "matmul": [38, 240, 241], "mean": [39, 237], "mkl_layer_norm": 40, "model_dataset": 41, "one_hot": 42, "onnx_input": 43, "optimize_dataset": 45, "pack": 46, "placehold": 47, "quantize_linear": 48, "quantize_v2": 49, "quantized_fused_matmul_and_dequant": 50, "quantized_matmul_with_bias_and_dequant": 51, "reduce_mean": 52, "reduce_sum": 53, "reshap": 54, "scatter_el": 55, "softmax": [56, 247], "split": 57, "squeez": 58, "strided_slic": 59, "tensor": 60, "top_k": 61, "transpos": [62, 241, 242], "unpack": 63, "unsqueez": 64, "sub_graph": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "add_cls_token": 65, "add_embed": 66, "attention_mask_length_adaptive_keep_indic": 67, "attention_output_layer_norm_length_adaptive_keep_indic": 68, "attention_reshap": 69, "collect_quant_info": 70, "conv_reshap": 71, "embeddingbag": 72, "generate_sequ": 74, "input_data": 76, "input_fil": 77, "insert_bf16_nod": 78, "insert_quant_nod": 79, "interact_featur": 80, "last_layer_shap": 81, "layer_norm_with_reduce_mean": 83, "matmul_with_bia": 84, "matmul_with_bias_add": 85, "matmul_with_bias_gelu": 86, "matmul_with_bias_relu": 87, "matmul_with_bias_sigmoid": 88, "matmul_with_bias_tanh": 89, "merged_embeddingbag": 90, "multi_head_attent": 91, "output_data": 92, "padding_sequ": 93, "pattern": [94, 132, 225, 227, 228, 232, 238, 239, 243], "position_embed": 95, "position_embeddings_v1": 96, "qkv_merg": 97, "qkv_reshap": 98, "quantize_fus": 99, "reshape_after_restore_hidden_st": 100, "reshape_before_and_after_attention_out_layer_norm_gather_el": 101, "reshape_before_restore_hidden_st": 102, "reshape_fus": 103, "restore_hidden_states_in_length_adaptive_update_indic": 104, "start_end_logit": 105, "subgraph_match": 106, "token_type_embed": 107, "token_type_embeddings_v1": 108, "transpose_batch_matmul": 109, "word_embed": 110, "tf_util": 111, "optim": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 200, 203], "benchmark": [114, 201, 209, 230, 247], "config": [115, 208, 225, 227], "distil": [116, 202, 208, 218, 219, 221], "dynam": [117, 118, 119, 253], "drop_and_restore_util": 117, "evolut": 118, "mixtur": [121, 122], "auto_distil": 121, "model": [123, 141, 142, 143, 188, 220, 223, 226, 229, 230, 246, 251], "na": [124, 125, 126, 219], "basic_na": 124, "optimizer_tf": [128, 204, 208], "pipelin": [129, 205, 208, 251], "prune": [130, 135, 219, 221, 252], "pytorch_prun": [131, 132, 133, 134, 135, 136], "prune_util": 133, "pruner": 134, "schedul": 136, "quantiz": [137, 188, 219, 221, 230, 253], "trainer": [138, 206, 208, 218, 252, 253], "util": [139, 140, 141, 142, 143, 144, 145, 146, 149], "metric": [140, 218, 249, 252, 253], "modeling_bert_dynam": 142, "modeling_roberta_dynam": 143, "object": [144, 250, 253], "utility_tf": 146, "preprocess": [147, 148, 149], "data_augment": 147, "version": [150, 224], "sparsity_al": 151, "test_add_cls_token": 152, "test_attention_output_layer_norm_length_adaptive_keep_indic": 153, "test_attention_reshap": 154, "test_binary_op": 155, "test_conv_reshap": 156, "test_embeddingbag": 157, "test_execution_opt": 158, "test_gelu": 159, "test_graph_dispatch": 160, "test_insert_input_output_data": 161, "test_is_supported_onnx_graph": 162, "test_last_layer_shap": 163, "test_layer_norm_with_reduce_mean": 164, "test_main": 165, "test_matmul_with_bias_relu": 166, "test_matmul_with_bias_sigmoid": 167, "test_matmul_with_bias_tanh": 168, "test_merged_embeddingbag": 169, "test_model": 170, "test_onnx_util": 171, "test_op": 172, "test_padding_sequ": 173, "test_pattern_dispatch": 174, "test_position_embed": 175, "test_qkv_merg": 176, "test_qkv_reshap": 177, "test_quant_onnx_execut": 178, "test_reshape_after_restore_hidden_st": 179, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 180, "test_reshape_before_restore_hidden_st": 181, "test_start_end_logit": 182, "test_tf_util": 183, "test_token_type_embed": 184, "test_transpos": 185, "test_transpose_batch_matmul": 186, "secur": 187, "polici": 187, "report": 187, "vulner": 187, "intel": [188, 207, 211, 216, 219, 255, 260], "extens": [188, 207, 211, 216, 219, 255, 260], "transform": [188, 207, 211, 216, 219, 221, 234, 255, 260], "acceler": [188, 221, 234], "base": [188, 219], "platform": [188, 233, 245], "instal": [188, 217, 222, 224, 230, 234], "from": [188, 222, 224], "pypi": [188, 222], "get": [188, 217, 221, 226, 230, 249, 253], "start": [188, 217, 221, 249, 253], "sentiment": 188, "analysi": [188, 246], "prepar": [188, 229, 230, 246], "dataset": [188, 230], "document": [188, 211, 255], "select": 188, "public": 188, "event": 188, "python": [189, 191, 226], "api": [189, 190, 191, 192, 195, 200, 208, 220, 226, 234], "c": [190, 192, 195, 226], "dispatch": [194, 227], "kernel": [195, 197, 212, 227, 234, 247, 256], "engin": [196, 215, 219, 221, 223, 224, 227, 229, 230, 259], "operator_desc": [198, 236, 237], "oper": [199, 226, 231], "specif": 199, "type": [199, 225, 252], "architectur": [207, 223], "autodistil": 208, "design": [208, 230], "framework": [208, 236, 237], "criterion": [208, 218], "knowledgedistillationloss": 208, "intermediatelayersknowledgedistillationloss": 208, "usag": [208, 218, 220, 236, 237, 247, 252], "pytorch": [208, 218, 219], "flash": 208, "exampl": [208, 219, 220, 226, 229, 247, 250, 251], "regular": 208, "tensorflow": [208, 218, 219], "introduct": [209, 217, 218, 220, 225, 226, 227, 228, 229, 232, 234, 236, 237, 238, 241, 246, 249, 250, 251, 252, 253], "pytorchbenchmark": 209, "executorbenchmark": 209, "featur": [210, 236, 237, 253, 254], "welcom": [211, 255], "section": [211, 255], "implement": [213, 257], "detail": [213, 242, 257], "perform": [214, 234, 244, 245, 258], "neural": [215, 219, 221, 223, 224, 259], "data": [217, 239, 245], "augment": 217, "depend": 217, "script": [217, 218, 252, 253], "paramet": 217, "support": [217, 220, 229, 234, 249, 250, 253], "text": 217, "gener": [217, 223], "argument": 217, "knowledg": [218, 219], "intermedi": 218, "layer": [218, 240], "creat": [218, 228, 252, 253], "an": [218, 229, 252, 253], "instanc": [218, 252, 253], "option": [218, 227, 252, 253], "distillationconfig": 218, "stock": 219, "ipex": 219, "length": [219, 221], "adapt": [219, 221], "auto": 219, "orchestr": 219, "refer": [219, 234], "deploy": 219, "dens": 219, "spars": [219, 226, 238, 239, 240, 243, 246], "export": 220, "onnx": [220, 223, 229, 230], "matrix": [220, 234, 250, 253], "fp32": 220, "bf16": 220, "int8": [220, 230, 251], "For": [220, 247], "executor": [220, 231, 251], "linux": 222, "prerequisit": [222, 224, 230], "sourc": 222, "window": 222, "system": 222, "requir": 222, "valid": [222, 245], "hardwar": 222, "environ": [222, 230], "softwar": 222, "deploi": [223, 224], "integr": 223, "1": [223, 226, 230, 231, 246], "2": [223, 230, 231, 246], "tf": 223, "us": 223, "infer": [223, 235, 251], "through": 223, "run": [223, 226, 230, 246], "3": [223, 246], "manual": 223, "custom": [223, 225, 231], "yaml": 223, "weight": [223, 246], "binari": [223, 224, 236], "build": [223, 234, 247], "4": [223, 245], "stabl": 224, "pip": 224, "bare": 224, "metal": 224, "add": [225, 231], "regist": [225, 231], "node": [225, 228], "set": [225, 226], "map": [225, 228], "fuse": 225, "new": [225, 228], "after": 225, "fusion": [225, 228], "profil": [226, 244], "profl": 226, "you": 226, "can": 226, "onli": 226, "engine_profil": 226, "befor": 226, "part": 226, "csv": 226, "ratio": 226, "total": 226, "level": 226, "json": 226, "iter": 226, "tune": [227, 230, 253], "best": 227, "relat": 227, "runtim": 227, "how": [227, 246], "turn": 227, "mechan": 227, "more": 227, "dict": 228, "obtain": 228, "necessari": 228, "inform": 228, "construct": 228, "establish": 228, "connect": 228, "remov": [228, 232], "old": 228, "insert": 228, "ir": [229, 230], "format": [229, 239, 248], "low": 230, "precis": 230, "To": 230, "its": 230, "accuraci": [230, 253], "h": 231, "includ": 231, "cpp": 231, "src": 231, "recogn": 232, "represent": 232, "pars": 232, "list": [232, 252], "search": 232, "each": 232, "straight": 232, "chain": 232, "splice": 232, "sub": 232, "main": 232, "duplic": 232, "result": [232, 246], "configur": [233, 245], "librari": 234, "test": 234, "user": [234, 236, 237], "sparse_matmul": [234, 247], "3d": 235, "memori": 235, "layout": 235, "spmm_vnni": [235, 247], "cach": 235, "issu": 235, "injector": [236, 237], "param_typ": [236, 237], "hpp": [236, 237], "jit_binaryop_injector": 236, "develop": [236, 237, 247], "": [236, 237], "perspect": [236, 237], "element": 237, "wise": 237, "alpha": 237, "beta": 237, "scale": 237, "jit_eltwise_injector": 237, "amx": 238, "brief": 238, "isa": 238, "reorder": [238, 241, 242, 243], "avx512f": 239, "kei": 239, "instruct": 239, "loop": 239, "normal": 240, "problem": [240, 241, 242], "descript": [240, 242], "layernorm": 240, "pre": 240, "comput": 240, "spmm": 240, "direct": 240, "layernorm_ba": [240, 247], "statement": 241, "matmul_p2031_2013": 241, "matmul_avx512f_p2031_p2013": [241, 247], "matmul_noperm_p2031_p1302": 241, "matmul_vnni_noperm_p2013_p1302": 241, "beforehand": 241, "mha": 242, "calcul": 242, "vnni": 243, "On": 243, "fly": 243, "activ": 243, "candid": 243, "verbos": 244, "vtune": 244, "sde": 244, "singl": 245, "thread": 245, "multi": 245, "visual": 246, "distribut": 246, "setup": 246, "below": 246, "command": 246, "spmm_avx512f": 247, "spmm_amx_bf16_x16": 247, "eltwiseop": 247, "transpose_matmul": 247, "matmul_vnni_noperm_p2031_p1302": 247, "attent": 247, "input": 248, "summari": 249, "prunerconfig": 252, "pruningconfig": 252, "fundament": 253, "approach": 253, "post": 253, "train": 253, "static": 253, "awar": 253, "quantizationconfig": 253}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.backends": [[0, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [121, "module-contents"], [123, "module-contents"], [124, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [140, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [149, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"]], "Functions": [[1, "functions"], [8, "functions"], [9, "functions"], [12, "functions"], [13, "functions"], [33, "functions"], [44, "functions"], [75, "functions"], [94, "functions"], [111, "functions"], [114, "functions"], [117, "functions"], [118, "functions"], [129, "functions"], [132, "functions"], [133, "functions"], [134, "functions"], [136, "functions"], [142, "functions"], [143, "functions"], [145, "functions"], [146, "functions"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [118, "classes"], [120, "classes"], [121, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [130, "classes"], [132, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [140, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [146, "classes"], [149, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[3, "submodules"], [7, "submodules"], [9, "submodules"], [10, "submodules"], [33, "submodules"], [75, "submodules"], [113, "submodules"], [119, "submodules"], [120, "submodules"], [122, "submodules"], [125, "submodules"], [131, "submodules"], [139, "submodules"], [141, "submodules"]], "Package Contents": [[3, "package-contents"], [7, "package-contents"], [9, "package-contents"], [10, "package-contents"], [33, "package-contents"], [75, "package-contents"], [120, "package-contents"], [125, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[9, "subpackages"], [112, "subpackages"], [120, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Attributes": [[33, "attributes"], [75, "attributes"], [111, "attributes"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[112, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[113, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[114, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[115, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[116, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[117, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[118, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[119, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[120, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[121, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[122, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[123, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[124, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[125, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[126, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[127, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[128, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[129, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[130, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[131, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[135, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[136, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"]], "intel_extension_for_transformers.optimization.quantization": [[137, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[138, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils": [[139, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[140, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[141, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[142, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[143, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[144, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[145, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[146, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[147, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[148, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[149, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[150, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[151, "module-sparsity_all"]], "test_add_cls_token": [[152, "module-test_add_cls_token"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[153, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[154, "module-test_attention_reshape"]], "test_binary_op": [[155, "module-test_binary_op"]], "test_conv_reshape": [[156, "module-test_conv_reshape"]], "test_embeddingbag": [[157, "module-test_embeddingbag"]], "test_execution_options": [[158, "module-test_execution_options"]], "test_gelu": [[159, "module-test_gelu"]], "test_graph_dispatch": [[160, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[161, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[162, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[163, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[164, "module-test_layer_norm_with_reduce_mean"]], "test_main": [[165, "module-test_main"]], "test_matmul_with_bias_relu": [[166, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[167, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[168, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[169, "module-test_merged_embeddingbag"]], "test_model": [[170, "module-test_model"]], "test_onnx_utils": [[171, "module-test_onnx_utils"]], "test_ops": [[172, "module-test_ops"]], "test_padding_sequence": [[173, "module-test_padding_sequence"]], "test_pattern_dispatch": [[174, "module-test_pattern_dispatch"]], "test_position_embeddings": [[175, "module-test_position_embeddings"]], "test_qkv_merge": [[176, "module-test_qkv_merge"]], "test_qkv_reshape": [[177, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[178, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[179, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[180, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[181, "module-test_reshape_before_restore_hidden_states"]], "test_start_end_logits": [[182, "module-test_start_end_logits"]], "test_tf_utils": [[183, "module-test_tf_utils"]], "test_token_type_embeddings": [[184, "module-test_token_type_embeddings"]], "test_transpose": [[185, "module-test_transpose"]], "test_transpose_batch_matmul": [[186, "module-test_transpose_batch_matmul"]], "Security Policy": [[187, "security-policy"]], "Report a Vulnerability": [[187, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[188, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Installation": [[188, "installation"], [222, "installation"], [224, "installation"], [234, "installation"]], "Install from Pypi": [[188, "install-from-pypi"], [222, "install-from-pypi"], [222, "id2"]], "Getting Started": [[188, "getting-started"], [217, "getting-started"], [221, "getting-started"]], "Sentiment Analysis with Quantization": [[188, "sentiment-analysis-with-quantization"]], "Prepare Dataset": [[188, "prepare-dataset"], [230, "prepare-dataset"]], "Quantization": [[188, "quantization"], [219, "quantization"], [221, "quantization"], [253, "quantization"]], "Documentation": [[188, "documentation"]], "Selected Publications/Events": [[188, "selected-publications-events"]], "Python APIs": [[189, "python-apis"], [191, "python-apis"]], "C++ APIs": [[190, "c-apis"], [192, "c-apis"]], "Compile": [[193, "compile"]], "Class dispatcher": [[194, "class-dispatcher"]], "Kernels C++ APIs": [[195, "kernels-c-apis"]], "Class engine": [[196, "class-engine"]], "Class Kernel": [[197, "class-kernel"]], "Class operator_desc": [[198, "class-operator-desc"]], "Operator Specific Types": [[199, "operator-specific-types"]], "Optimization APIs": [[200, "optimization-apis"]], "Benchmark": [[201, "benchmark"], [209, "benchmark"]], "Distillation": [[202, "distillation"], [218, "distillation"], [218, "id1"], [219, "distillation"], [221, "distillation"]], "Optimizer": [[203, "optimizer"]], "Optimizer_tf": [[204, "optimizer-tf"]], "Pipeline": [[205, "pipeline"], [251, "pipeline"]], "Trainer": [[206, "trainer"]], "Architecture of Intel\u00ae Extension for Transformers": [[207, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[208, "autodistillation-design"]], "AutoDistillation Pipeline": [[208, "autodistillation-pipeline"]], "Framework Class Design": [[208, "framework-class-design"]], "Criterion Class Design": [[208, "criterion-class-design"]], "KnowledgeDistillationLoss": [[208, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[208, "intermediatelayersknowledgedistillationloss"]], "Usage": [[208, "usage"], [236, "usage"], [237, "usage"], [247, "usage"], [252, "usage"]], "Pytorch": [[208, "pytorch"]], "AutoDistillation API in Trainer": [[208, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[208, "flash-distillation-config-example"]], "Regular distillation config example": [[208, "regular-distillation-config-example"]], "AutoDistillation config example": [[208, "autodistillation-config-example"], [208, "id1"]], "Tensorflow": [[208, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[208, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[208, "distillation-config-example"]], "Introduction": [[209, "introduction"], [217, "introduction"], [218, "introduction"], [220, "introduction"], [225, "introduction"], [226, "introduction"], [227, "introduction"], [228, "introduction"], [229, "introduction"], [232, "introduction"], [234, "introduction"], [236, "introduction"], [237, "introduction"], [241, "introduction"], [246, "introduction"], [249, "introduction"], [250, "introduction"], [251, "introduction"], [252, "introduction"], [253, "introduction"]], "PyTorchBenchmark": [[209, "pytorchbenchmark"]], "ExecutorBenchmark": [[209, "executorbenchmark"]], "Features": [[210, "features"], [254, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[211, "welcome-to-intel-extension-for-transformers-documentation"], [255, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[211, "sections"], [255, "sections"]], "Kernels": [[212, "kernels"], [256, "kernels"]], "Implementation Details": [[213, "implementation-details"], [257, "implementation-details"]], "Performance": [[214, "performance"], [234, "performance"], [258, "performance"]], "Neural Engine": [[215, "neural-engine"], [259, "neural-engine"]], "Intel\u00ae Extension for Transformers": [[216, "intel-extension-for-transformers"], [260, "intel-extension-for-transformers"]], "Data Augmentation": [[217, "data-augmentation"], [217, "id1"]], "Install Dependency": [[217, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[217, "install-intel-extension-for-transformers"]], "Script": [[217, "script"]], "Parameters of Data Augmentation": [[217, "parameters-of-data-augmentation"]], "Supported Augmenter": [[217, "supported-augmenter"]], "Text Generation Augmenter": [[217, "text-generation-augmenter"]], "Augmenter Arguments:": [[217, "augmenter-arguments"]], "Knowledge Distillation": [[218, "knowledge-distillation"], [219, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[218, "intermediate-layer-knowledge-distillation"]], "usage": [[218, "usage"]], "Pytorch Script:": [[218, "pytorch-script"]], "Tensorflow Script:": [[218, "tensorflow-script"]], "Create an Instance of Metric": [[218, "create-an-instance-of-metric"], [253, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[218, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[218, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[218, "distill-with-trainer"]], "Examples": [[219, "examples"], [220, "examples"], [247, "examples"], [247, "id1"], [247, "id2"], [247, "id3"], [247, "id4"], [247, "id5"], [247, "id6"], [247, "id7"], [247, "id8"], [251, "examples"]], "Stock PyTorch Examples": [[219, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[219, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[219, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[219, "length-adaptive-transformers"]], "Pruning": [[219, "pruning"], [221, "pruning"], [252, "pruning"]], "Auto Distillation (NAS Based)": [[219, "auto-distillation-nas-based"]], "Orchestrate": [[219, "orchestrate"]], "Reference Deployment on Neural Engine": [[219, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[219, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[219, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[220, "export-to-onnx"]], "Supported Model Export Matrix": [[220, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[220, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[220, "export-to-bf16-onnx-model"]], "API usage": [[220, "api-usage"]], "Export to INT8 ONNX Model": [[220, "export-to-int8-onnx-model"]], "For executor backend": [[220, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[221, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[221, "transformers-accelerated-neural-engine"]], "Linux Installation": [[222, "linux-installation"]], "Prerequisites": [[222, "prerequisites"], [222, "id1"], [224, "prerequisites"]], "Install from Source": [[222, "install-from-source"], [222, "id3"]], "Windows Installation": [[222, "windows-installation"]], "System Requirements": [[222, "system-requirements"]], "Validated Hardware Environment": [[222, "validated-hardware-environment"]], "Validated Software Environment": [[222, "validated-software-environment"]], "Deploy and Integration": [[223, "deploy-and-integration"]], "1. Architecture": [[223, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[223, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[223, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[223, "run-the-inference-by-engine"], [223, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[223, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[223, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[223, "integrate-neural-engine-as-backend"]], "Install": [[224, "install"]], "Install stable version intel_extension_for_transformers from pip": [[224, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[224, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[225, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[225, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[225, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[225, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Profiling": [[226, "profiling"]], "Profling API": [[226, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[226, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[226, "profiling-examples"]], "Parts of CSV Profiling": [[226, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[226, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[226, "operator-profiling-part"]], "Total Profiling Part": [[226, "total-profiling-part"]], "Levels of JSON Profiling": [[226, "levels-of-json-profiling"]], "Model Level": [[226, "model-level"]], "Iteration Level": [[226, "iteration-level"]], "Operator Level": [[226, "operator-level"]], "Engine Tuning": [[227, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[227, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[227, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[227, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[227, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[227, "more-tuning-options"]], "Graph Fusion": [[228, "graph-fusion"]], "Pattern Mapping Dict": [[228, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[228, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[228, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[228, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[229, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[229, "supported-onnx-format"]], "Compile Examples": [[229, "compile-examples"]], "Prepare ONNX Model": [[229, "prepare-onnx-model"]], "Compile to IR": [[229, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[230, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[230, "design"]], "Prerequisite": [[230, "prerequisite"]], "Install environment": [[230, "install-environment"]], "Prepare ONNX model": [[230, "prepare-onnx-model"]], "Run tuning and benchmark": [[230, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[230, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[230, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[231, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[231, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[231, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[232, "pattern-recognize"]], "Pattern Representation": [[232, "pattern-representation"]], "Parse Pattern Representation List": [[232, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[232, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[232, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "platform configuration": [[233, "platform-configuration"]], "Transformers-Accelerated Libraries": [[234, "transformers-accelerated-libraries"]], "Build": [[234, "build"], [247, "build"]], "Test": [[234, "test"]], "API reference for users": [[234, "api-reference-for-users"]], "sparse_matmul kernel:": [[234, "sparse-matmul-kernel"]], "Supported Matrix": [[234, "supported-matrix"]], "3D Inference": [[235, "d-inference"]], "Memory Layout in SPMM_VNNI": [[235, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[235, "cache-issues"]], "SPMM_VNNI 3D Inference": [[235, "spmm-vnni-3d-inference"]], "Binary Injectors": [[236, "binary-injectors"]], "Framework Features": [[236, "framework-features"], [237, "framework-features"]], "param_type.hpp": [[236, "param-type-hpp"]], "operator_desc.hpp": [[236, "operator-desc-hpp"], [237, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[236, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[236, "developer-s-perspective"]], "User\u2019s Perspective": [[236, "user-s-perspective"], [237, "user-s-perspective"]], "Element-wise Injector": [[237, "element-wise-injector"]], "param_types.hpp": [[237, "param-types-hpp"]], "alpha,beta,scale meaning": [[237, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[237, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[237, "developer-s-perspective"]], "Sparse GEMM AMX": [[238, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[238, "brief-introduction-for-isas"]], "Pattern": [[238, "pattern"]], "Reorder": [[238, "reorder"]], "Sparse GEMM AVX512F": [[239, "sparse-gemm-avx512f"]], "Key Instruction": [[239, "key-instruction"]], "Sparse Pattern & Data Format": [[239, "sparse-pattern-data-format"]], "Loops": [[239, "loops"]], "Sparse GEMM with Layer-Normalize": [[240, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[240, "problem-description"]], "layernormalized sparse matmul": [[240, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[240, "pre-compute-spmm"]], "Direct Layernorm_ba": [[240, "direct-layernorm-ba"]], "Transposed MatMul": [[241, "transposed-matmul"]], "Problem Statements": [[241, "problem-statements"]], "Matmul_p2031_2013": [[241, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[241, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[241, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[241, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[241, "reorder-beforehand"]], "Transposed MHA": [[242, "transposed-mha"]], "Problem description": [[242, "problem-description"]], "Details": [[242, "details"]], "Reordering": [[242, "reordering"]], "Calculation": [[242, "calculation"]], "Sparse GEMM VNNI": [[243, "sparse-gemm-vnni"]], "On the fly activation reordering": [[243, "on-the-fly-activation-reordering"]], "Candidate patterns": [[243, "candidate-patterns"]], "Performance and Profiling": [[244, "performance-and-profiling"]], "Verbose": [[244, "verbose"]], "VTune": [[244, "vtune"]], "SDE": [[244, "sde"]], "Validated Performance Data": [[245, "validated-performance-data"]], "Single Thread": [[245, "single-thread"]], "Multi Thread (Thread = 4)": [[245, "multi-thread-thread-4"]], "Platform Configuration": [[245, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[246, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[246, "setups"]], "1. Prepare the sparse model": [[246, "prepare-the-sparse-model"]], "2. Run below commands": [[246, "run-below-commands"]], "3. Analysis results": [[246, "analysis-results"]], "Benchmark for Kernels": [[247, "benchmark-for-kernels"]], "sparse_matmul": [[247, "sparse-matmul"]], "spmm_avx512f": [[247, "spmm-avx512f"]], "spmm_vnni": [[247, "spmm-vnni"]], "spmm_amx_bf16_x16": [[247, "spmm-amx-bf16-x16"]], "eltwiseop": [[247, "eltwiseop"]], "layernorm_ba": [[247, "layernorm-ba"]], "transpose_matmul": [[247, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[247, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[247, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[247, "softmax"]], "attention": [[247, "attention"]], "For developers": [[247, "for-developers"]], "Inputs format": [[248, "inputs-format"]], "Metrics": [[249, "metrics"]], "Supported Metric": [[249, "supported-metric"]], "Metric Class Summary": [[249, "metric-class-summary"]], "Get Start with Metrics": [[249, "get-start-with-metrics"]], "Objective": [[250, "objective"]], "Supported Objectives Matrix:": [[250, "supported-objectives-matrix"]], "Examples:": [[250, "examples"]], "Pipeline Inference for INT8 Model": [[251, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[251, "pipeline-inference-for-executor-backend"]], "Pruning types": [[252, "pruning-types"]], "Script:": [[252, "script"], [253, "script"]], "Create an instance of Metric": [[252, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[252, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[252, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[252, "prune-with-trainer"]], "Quantization Fundamentals": [[253, "quantization-fundamentals"]], "Quantization Approach": [[253, "quantization-approach"]], "Post Training Dynamic Quantization": [[253, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[253, "post-training-static-quantization"]], "Quantization Aware Training": [[253, "quantization-aware-training"]], "Accuracy Aware Tuning": [[253, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[253, "supported-feature-matrix"]], "Get Started": [[253, "get-started"]], "Create an Instance of Objective(Optional)": [[253, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[253, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[253, "quantization-with-trainer"]], "Contents:": [[254, null]]}, "indexentries": {"intel_extension_for_transformers.backends": [[0, "module-intel_extension_for_transformers.backends"]], "module": [[0, "module-intel_extension_for_transformers.backends"], [1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [112, "module-intel_extension_for_transformers.backends.neural_engine"], [113, "module-intel_extension_for_transformers"], [114, "module-intel_extension_for_transformers.optimization.benchmark"], [115, "module-intel_extension_for_transformers.optimization.config"], [116, "module-intel_extension_for_transformers.optimization.distillation"], [117, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [118, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [119, "module-intel_extension_for_transformers.optimization.dynamic"], [120, "module-intel_extension_for_transformers.optimization"], [121, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [122, "module-intel_extension_for_transformers.optimization.mixture"], [123, "module-intel_extension_for_transformers.optimization.model"], [124, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [125, "module-intel_extension_for_transformers.optimization.nas"], [126, "module-intel_extension_for_transformers.optimization.nas.nas"], [127, "module-intel_extension_for_transformers.optimization.optimizer"], [128, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [129, "module-intel_extension_for_transformers.optimization.pipeline"], [130, "module-intel_extension_for_transformers.optimization.pruning"], [131, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"], [134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"], [135, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [136, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"], [137, "module-intel_extension_for_transformers.optimization.quantization"], [138, "module-intel_extension_for_transformers.optimization.trainer"], [139, "module-intel_extension_for_transformers.optimization.utils"], [140, "module-intel_extension_for_transformers.optimization.utils.metrics"], [141, "module-intel_extension_for_transformers.optimization.utils.models"], [142, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [143, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [144, "module-intel_extension_for_transformers.optimization.utils.objectives"], [145, "module-intel_extension_for_transformers.optimization.utils.utility"], [146, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [147, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [148, "module-intel_extension_for_transformers.preprocessing"], [149, "module-intel_extension_for_transformers.preprocessing.utils"], [150, "module-intel_extension_for_transformers.version"], [151, "module-sparsity_all"], [152, "module-test_add_cls_token"], [153, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [154, "module-test_attention_reshape"], [155, "module-test_binary_op"], [156, "module-test_conv_reshape"], [157, "module-test_embeddingbag"], [158, "module-test_execution_options"], [159, "module-test_gelu"], [160, "module-test_graph_dispatch"], [161, "module-test_insert_input_output_data"], [162, "module-test_is_supported_onnx_graph"], [163, "module-test_last_layer_shape"], [164, "module-test_layer_norm_with_reduce_mean"], [165, "module-test_main"], [166, "module-test_matmul_with_bias_relu"], [167, "module-test_matmul_with_bias_sigmoid"], [168, "module-test_matmul_with_bias_tanh"], [169, "module-test_merged_embeddingbag"], [170, "module-test_model"], [171, "module-test_onnx_utils"], [172, "module-test_ops"], [173, "module-test_padding_sequence"], [174, "module-test_pattern_dispatch"], [175, "module-test_position_embeddings"], [176, "module-test_qkv_merge"], [177, "module-test_qkv_reshape"], [178, "module-test_quant_onnx_execute"], [179, "module-test_reshape_after_restore_hidden_states"], [180, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [181, "module-test_reshape_before_restore_hidden_states"], [182, "module-test_start_end_logits"], [183, "module-test_tf_utils"], [184, "module-test_token_type_embeddings"], [185, "module-test_transpose"], [186, "module-test_transpose_batch_matmul"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[1, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[1, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[4, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "execution_options (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.execution_options"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "net_config (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.net_config"]], "nodes (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.nodes"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "weight_data (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.weight_data"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.engine_init"]], "execution_options (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.execution_options"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.inference"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.modify_node_connections"]], "net_config (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.net_config"]], "nodes (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.nodes"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.transpose_mode_int8"]], "weight_data (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.weight_data"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile)": [[9, "intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[11, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LayerNorm"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PaddingSequence"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Pow"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Quantize"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reorder"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Shape"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Slice"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator"]], "attr (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.attr"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.config"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.extract"]], "input_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.input_tensors"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.name"]], "op_type (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.op_type"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.operator_registry"]], "output_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.output_tensors"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.set_attr"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "attr (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.attr"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.config"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "input_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.input_tensors"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.name"]], "op_type (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.op_type"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "output_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.output_tensors"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.config"]], "data (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.data"]], "dest_op (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.dest_op"]], "dtype (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.dtype"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "location (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.location"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.name"]], "shape (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.shape"]], "source_op (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.source_op"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.Pattern"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern_registry"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[112, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[113, "module-intel_extension_for_transformers"]], "executorbenchmark (class in intel_extension_for_transformers.optimization.benchmark)": [[114, "intel_extension_for_transformers.optimization.benchmark.ExecutorBenchmark"]], "intel_extension_for_transformers.optimization.benchmark": [[114, "module-intel_extension_for_transformers.optimization.benchmark"]], "run() (in module intel_extension_for_transformers.optimization.benchmark)": [[114, "intel_extension_for_transformers.optimization.benchmark.run"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.Provider"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[115, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "approach (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.approach"]], "criterion (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.DistillationConfig.criterion"]], "epoch_range (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig.epoch_range"]], "epochs (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig.epochs"]], "framework (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.DistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.nasconfig property)": [[115, "intel_extension_for_transformers.optimization.config.NASConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.framework"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "initial_sparsity_ratio (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig.initial_sparsity_ratio"]], "input_names (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.input_names"]], "intel_extension_for_transformers.optimization.config": [[115, "module-intel_extension_for_transformers.optimization.config"]], "knowledge_transfer (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.knowledge_transfer"]], "max_trials (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.config.nasconfig property)": [[115, "intel_extension_for_transformers.optimization.config.NASConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.max_trials"]], "metrics (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.DistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.nasconfig property)": [[115, "intel_extension_for_transformers.optimization.config.NASConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.metrics"]], "objectives (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.objectives"]], "op_wise (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.op_wise"]], "output_dir (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.output_dir"]], "output_names (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.output_names"]], "performance_only (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.performance_only"]], "pruner_config (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig.pruner_config"]], "random_seed (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.random_seed"]], "regular_distillation (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.regular_distillation"]], "resume_path (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.resume_path"]], "sampling_size (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.sampling_size"]], "search_algorithm (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.search_algorithm"]], "search_algorithm (intel_extension_for_transformers.optimization.config.nasconfig property)": [[115, "intel_extension_for_transformers.optimization.config.NASConfig.search_algorithm"]], "search_space (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.search_space"]], "search_space (intel_extension_for_transformers.optimization.config.nasconfig property)": [[115, "intel_extension_for_transformers.optimization.config.NASConfig.search_space"]], "seed (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.seed"]], "seed (intel_extension_for_transformers.optimization.config.nasconfig property)": [[115, "intel_extension_for_transformers.optimization.config.NASConfig.seed"]], "strategy (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.strategy"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[115, "intel_extension_for_transformers.optimization.config.PruningConfig.target_sparsity_ratio"]], "tensorboard (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.tensorboard"]], "timeout (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[115, "intel_extension_for_transformers.optimization.config.QuantizationConfig.timeout"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[116, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[116, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[116, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[117, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[117, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[117, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[118, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[118, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[119, "module-intel_extension_for_transformers.optimization.dynamic"]], "autodistillation (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.DistillationConfig"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.DistillationCriterionMode"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.FlashDistillationConfig"]], "nas (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.NAS"]], "nasconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.NASConfig"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer"]], "optimizedmodel (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.OptimizedModel"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.Orchestrate_optimizer"]], "provider (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.Provider"]], "prunerconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.PrunerConfig"]], "pruningconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.PruningConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.PruningMode"]], "quantizationconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig"]], "quantizationmode (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.QuantizationMode"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.TFDistillationConfig"]], "tfoptimization (class in intel_extension_for_transformers.optimization)": [[120, "intel_extension_for_transformers.optimization.TFOptimization"]], "approach (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.approach"]], "autodistill() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.builtin_eval_func"]], "calib_dataloader (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.calib_dataloader"]], "calib_func (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.calib_func"]], "create_distillers() (intel_extension_for_transformers.optimization.autodistillation method)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.create_distillers"]], "criterion (intel_extension_for_transformers.optimization.distillationconfig property)": [[120, "intel_extension_for_transformers.optimization.DistillationConfig.criterion"]], "distill() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.distill"]], "distill() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.distill"]], "epoch_range (intel_extension_for_transformers.optimization.pruningconfig property)": [[120, "intel_extension_for_transformers.optimization.PruningConfig.epoch_range"]], "epochs (intel_extension_for_transformers.optimization.pruningconfig property)": [[120, "intel_extension_for_transformers.optimization.PruningConfig.epochs"]], "estimate() (intel_extension_for_transformers.optimization.autodistillation method)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.estimate"]], "eval_dataset (intel_extension_for_transformers.optimization.tfoptimization property)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.eval_dataset"]], "eval_func (intel_extension_for_transformers.optimization.autodistillation property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.eval_func"]], "eval_func (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.eval_func"]], "eval_func (intel_extension_for_transformers.optimization.tfoptimization property)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.eval_func"]], "fit() (intel_extension_for_transformers.optimization.orchestrate_optimizer method)": [[120, "intel_extension_for_transformers.optimization.Orchestrate_optimizer.fit"]], "framework (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.distillationconfig property)": [[120, "intel_extension_for_transformers.optimization.DistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.nasconfig property)": [[120, "intel_extension_for_transformers.optimization.NASConfig.framework"]], "framework (intel_extension_for_transformers.optimization.pruningconfig property)": [[120, "intel_extension_for_transformers.optimization.PruningConfig.framework"]], "framework (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.framework"]], "from_pretrained() (intel_extension_for_transformers.optimization.optimizedmodel class method)": [[120, "intel_extension_for_transformers.optimization.OptimizedModel.from_pretrained"]], "init_by_cfg() (intel_extension_for_transformers.optimization.autodistillation method)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.init_by_cfg"]], "init_distiller() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.init_distiller"]], "init_distiller() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.init_distiller"]], "init_prune_config() (intel_extension_for_transformers.optimization.pruningconfig method)": [[120, "intel_extension_for_transformers.optimization.PruningConfig.init_prune_config"]], "init_pruner() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.init_pruner"]], "init_pruner() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.init_quantizer"]], "init_quantizer() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.init_quantizer"]], "initial_sparsity_ratio (intel_extension_for_transformers.optimization.pruningconfig property)": [[120, "intel_extension_for_transformers.optimization.PruningConfig.initial_sparsity_ratio"]], "input_names (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.input_names"]], "input_names (intel_extension_for_transformers.optimization.tfoptimization property)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.input_names"]], "inputs (intel_extension_for_transformers.optimization.tfoptimization property)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.inputs"]], "intel_extension_for_transformers.optimization": [[120, "module-intel_extension_for_transformers.optimization"]], "knowledge_transfer (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig.knowledge_transfer"]], "load_search_results() (intel_extension_for_transformers.optimization.autodistillation method)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.load_search_results"]], "max_trials (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.nasconfig property)": [[120, "intel_extension_for_transformers.optimization.NASConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.max_trials"]], "metrics (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.distillationconfig property)": [[120, "intel_extension_for_transformers.optimization.DistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.nasconfig property)": [[120, "intel_extension_for_transformers.optimization.NASConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.pruningconfig property)": [[120, "intel_extension_for_transformers.optimization.PruningConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.metrics"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.model_builder_builtin"]], "objectives (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.objectives"]], "op_wise (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.op_wise"]], "output_dir (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.output_dir"]], "output_names (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.output_names"]], "output_names (intel_extension_for_transformers.optimization.tfoptimization property)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.output_names"]], "performance_only (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.performance_only"]], "provider (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.provider"]], "prune() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.prune"]], "prune() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.prune"]], "pruner_config (intel_extension_for_transformers.optimization.pruningconfig property)": [[120, "intel_extension_for_transformers.optimization.PruningConfig.pruner_config"]], "quantize() (intel_extension_for_transformers.optimization.notraineroptimizer method)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.quantize"]], "quantize() (intel_extension_for_transformers.optimization.tfoptimization method)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.quantize"]], "random_seed (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.random_seed"]], "regular_distillation (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig.regular_distillation"]], "resume_path (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.resume_path"]], "sampling_size (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.sampling_size"]], "search() (intel_extension_for_transformers.optimization.autodistillation method)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.search"]], "search_algorithm (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig.search_algorithm"]], "search_algorithm (intel_extension_for_transformers.optimization.nasconfig property)": [[120, "intel_extension_for_transformers.optimization.NASConfig.search_algorithm"]], "search_space (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig.search_space"]], "search_space (intel_extension_for_transformers.optimization.nasconfig property)": [[120, "intel_extension_for_transformers.optimization.NASConfig.search_space"]], "seed (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillationConfig.seed"]], "seed (intel_extension_for_transformers.optimization.nasconfig property)": [[120, "intel_extension_for_transformers.optimization.NASConfig.seed"]], "strategy (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.strategy"]], "student_model (intel_extension_for_transformers.optimization.autodistillation property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.student_model"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pruningconfig property)": [[120, "intel_extension_for_transformers.optimization.PruningConfig.target_sparsity_ratio"]], "teacher_model (intel_extension_for_transformers.optimization.autodistillation property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.teacher_model"]], "tensorboard (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.tensorboard"]], "timeout (intel_extension_for_transformers.optimization.quantizationconfig property)": [[120, "intel_extension_for_transformers.optimization.QuantizationConfig.timeout"]], "train_dataset (intel_extension_for_transformers.optimization.tfoptimization property)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.train_dataset"]], "train_func (intel_extension_for_transformers.optimization.autodistillation property)": [[120, "intel_extension_for_transformers.optimization.AutoDistillation.train_func"]], "train_func (intel_extension_for_transformers.optimization.notraineroptimizer property)": [[120, "intel_extension_for_transformers.optimization.NoTrainerOptimizer.train_func"]], "train_func (intel_extension_for_transformers.optimization.tfoptimization property)": [[120, "intel_extension_for_transformers.optimization.TFOptimization.train_func"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "eval_func (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.eval_func"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[121, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "student_model (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.student_model"]], "teacher_model (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.teacher_model"]], "train_func (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[121, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.train_func"]], "intel_extension_for_transformers.optimization.mixture": [[122, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[123, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[123, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[123, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[124, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[124, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "eval_func (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas property)": [[124, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.eval_func"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[124, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[124, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[124, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "train_func (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas property)": [[124, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.train_func"]], "basicnas (class in intel_extension_for_transformers.optimization.nas)": [[125, "intel_extension_for_transformers.optimization.nas.BasicNAS"]], "nas (class in intel_extension_for_transformers.optimization.nas)": [[125, "intel_extension_for_transformers.optimization.nas.NAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[125, "intel_extension_for_transformers.optimization.nas.BasicNAS.estimate"]], "eval_func (intel_extension_for_transformers.optimization.nas.basicnas property)": [[125, "intel_extension_for_transformers.optimization.nas.BasicNAS.eval_func"]], "execute() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[125, "intel_extension_for_transformers.optimization.nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[125, "intel_extension_for_transformers.optimization.nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas": [[125, "module-intel_extension_for_transformers.optimization.nas"]], "train_func (intel_extension_for_transformers.optimization.nas.basicnas property)": [[125, "intel_extension_for_transformers.optimization.nas.BasicNAS.train_func"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[126, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[126, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[127, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "calib_dataloader (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.calib_dataloader"]], "calib_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.calib_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "eval_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.eval_func"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[127, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[127, "module-intel_extension_for_transformers.optimization.optimizer"]], "provider (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.provider"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "train_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[127, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.train_func"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "eval_dataset (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.eval_dataset"]], "eval_func (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.eval_func"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "input_names (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.input_names"]], "inputs (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.inputs"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[128, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "output_names (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.output_names"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "train_dataset (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.train_dataset"]], "train_func (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[128, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.train_func"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[129, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[129, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[130, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[130, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[130, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[131, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "m (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.M"]], "n (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.N"]], "pattern (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern"]], "patternninm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM"]], "patternnxm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM"]], "block_size (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm attribute)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.block_size"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.get_block_size_dict"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_block_size_dict"]], "get_mask_single() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.get_mask_single"]], "get_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.get_masks"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_masks_global"]], "get_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.get_masks_local"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_pattern_lock_masks"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "is_global (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern attribute)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.is_global"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.pattern attribute)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.Pattern.pattern"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[133, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.check_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"]], "parse_not_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[133, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.parse_not_to_prune"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[133, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[133, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[133, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.process_config"]], "reset_non_value_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[133, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.reset_non_value_to_default"]], "magnitudepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.MagnitudePruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.PatternLockPruner"]], "pruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner"]], "snipmomentumpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipMomentumPruner"]], "snippruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipPruner"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.check_is_pruned_step"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.config"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.mask_weights"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.masks"]], "max_sparsity_ratio_per_layer (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.max_sparsity_ratio_per_layer"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.patternlockpruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.snipmomentumpruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipMomentumPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.snippruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipPruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.patternlockpruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.PatternLockPruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_train_end"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.pattern"]], "register_pruners() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.register_pruners"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.scores"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.target_sparsity_ratio"]], "update_frequency_on_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.update_frequency_on_step"]], "update_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.magnitudepruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.MagnitudePruner.update_scores"]], "update_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.update_scores"]], "pruning (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruning)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[135, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_end"]], "prepare() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.prepare"]], "pruner_info (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruners"]], "update_items_for_all_pruners() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[135, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.update_items_for_all_pruners"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.OneshotScheduler"]], "scheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.Scheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.scheduler attribute)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.Scheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[136, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.iterativescheduler method)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.oneshotscheduler method)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.scheduler method)": [[136, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.Scheduler.update_sparsity_ratio"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[137, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[137, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[138, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[138, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "calib_dataloader (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.calib_dataloader"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "eval_func (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.eval_func"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[138, "module-intel_extension_for_transformers.optimization.trainer"]], "max_length (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer property)": [[138, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.max_length"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "num_beams (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer property)": [[138, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.num_beams"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "provider (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.provider"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "resuming_checkpoint (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.resuming_checkpoint"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "train_func (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train_func"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[138, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils": [[139, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[140, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[140, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[141, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[142, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[142, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[143, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[143, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[144, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[144, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[144, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[144, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[145, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[145, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[146, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[146, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[146, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[146, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[146, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[147, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[148, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[149, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "intel_extension_for_transformers.preprocessing.utils": [[149, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[150, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[151, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[152, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[152, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[152, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[152, "module-test_add_cls_token"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[153, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[153, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[153, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[153, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[154, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[154, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[154, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[154, "module-test_attention_reshape"]], "testbinaryop (class in test_binary_op)": [[155, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[155, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[155, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[155, "module-test_binary_op"]], "testconvreshape (class in test_conv_reshape)": [[156, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[156, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[156, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[156, "module-test_conv_reshape"]], "testembeddingbag (class in test_embeddingbag)": [[157, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[157, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[157, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[157, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[158, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[158, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[158, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[158, "module-test_execution_options"]], "testgelu (class in test_gelu)": [[159, "test_gelu.TestGelu"]], "setupclass() (test_gelu.testgelu class method)": [[159, "test_gelu.TestGelu.setUpClass"]], "teardownclass() (test_gelu.testgelu class method)": [[159, "test_gelu.TestGelu.tearDownClass"]], "test_gelu": [[159, "module-test_gelu"]], "testgraphdispatch (class in test_graph_dispatch)": [[160, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[160, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[160, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[160, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[161, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[161, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[161, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[161, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[162, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[162, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[162, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[162, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[162, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[163, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[163, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[163, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[163, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[164, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[164, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[164, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[164, "module-test_layer_norm_with_reduce_mean"]], "testmain (class in test_main)": [[165, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[165, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[165, "test_main.TestMain.tearDownClass"]], "test_main": [[165, "module-test_main"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[166, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[166, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[166, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[166, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[167, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[167, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[167, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[167, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[168, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[168, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[168, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[168, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[169, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[169, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[169, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[169, "module-test_merged_embeddingbag"]], "test_model": [[170, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[171, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[171, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[171, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[171, "module-test_onnx_utils"]], "testops (class in test_ops)": [[172, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[172, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[172, "test_ops.TestOps.tearDownClass"]], "test_ops": [[172, "module-test_ops"]], "testpaddingsequence (class in test_padding_sequence)": [[173, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[173, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[173, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[173, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[174, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[174, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[174, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[174, "module-test_pattern_dispatch"]], "testpositionembeddings (class in test_position_embeddings)": [[175, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[175, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[175, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[175, "module-test_position_embeddings"]], "testqkvmerge (class in test_qkv_merge)": [[176, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[176, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[176, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[176, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[177, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[177, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[177, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[177, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[178, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[178, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[178, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[178, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[179, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[179, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[179, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[179, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[180, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[180, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[180, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[180, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[181, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[181, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[181, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[181, "module-test_reshape_before_restore_hidden_states"]], "teststartendlogits (class in test_start_end_logits)": [[182, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[182, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[182, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[182, "module-test_start_end_logits"]], "testtfutils (class in test_tf_utils)": [[183, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[183, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[183, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[183, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[184, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[184, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[184, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[184, "module-test_token_type_embeddings"]], "testtranspose (class in test_transpose)": [[185, "test_transpose.TestTranspose"]], "setupclass() (test_transpose.testtranspose class method)": [[185, "test_transpose.TestTranspose.setUpClass"]], "teardownclass() (test_transpose.testtranspose class method)": [[185, "test_transpose.TestTranspose.tearDownClass"]], "test_transpose": [[185, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[186, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[186, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[186, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[186, "module-test_transpose_batch_matmul"]], "executor (c++ type)": [[194, "_CPPv48executor"]], "executor::dispatcher (c++ class)": [[194, "_CPPv4N8executor10DispatcherE"]], "executor::dispatcher::adaptattrs (c++ function)": [[194, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::adapttensors (c++ function)": [[194, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::dispatcher (c++ function)": [[194, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model"], [194, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model"]], "executor::dispatcher::forward (c++ function)": [[194, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::getexecutekernel (c++ function)": [[194, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb"]], "executor::dispatcher::gethash (c++ function)": [[194, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE"]], "executor::dispatcher::kernelhandler (c++ type)": [[194, "_CPPv4N8executor10Dispatcher13KernelHandlerE"]], "executor::dispatcher::prepare (c++ function)": [[194, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::resetopstatus (c++ function)": [[194, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::reshape (c++ function)": [[194, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::adapt_action_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher13adapt_action_E"]], "executor::dispatcher::cpu_isa_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher8cpu_isa_E"]], "executor::dispatcher::dispatch_table_file_exists_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E"]], "executor::dispatcher::do_tuning (c++ function)": [[194, "_CPPv4NK8executor10Dispatcher9do_tuningEv"]], "executor::dispatcher::do_tuning_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher10do_tuning_E"]], "executor::dispatcher::enable_sparse (c++ function)": [[194, "_CPPv4N8executor10Dispatcher13enable_sparseEv"]], "executor::dispatcher::execute_kernel (c++ function)": [[194, "_CPPv4NK8executor10Dispatcher14execute_kernelEv"]], "executor::dispatcher::execute_kernel_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher15execute_kernel_E"]], "executor::dispatcher::execution_options_ptr_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E"]], "executor::dispatcher::get_attrs (c++ function)": [[194, "_CPPv4N8executor10Dispatcher9get_attrsEv"]], "executor::dispatcher::get_it_shape (c++ function)": [[194, "_CPPv4N8executor10Dispatcher12get_it_shapeEv"]], "executor::dispatcher::get_ot_shape (c++ function)": [[194, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv"]], "executor::dispatcher::get_reshape_time (c++ function)": [[194, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv"]], "executor::dispatcher::iter_cnt_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher9iter_cnt_E"]], "executor::dispatcher::kernel_handler_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher15kernel_handler_E"]], "executor::dispatcher::kernel_type (c++ function)": [[194, "_CPPv4N8executor10Dispatcher11kernel_typeEv"]], "executor::dispatcher::latency (c++ function)": [[194, "_CPPv4N8executor10Dispatcher7latencyEv"]], "executor::dispatcher::model_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher6model_E"]], "executor::dispatcher::monopoly_kernel_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E"]], "executor::dispatcher::name (c++ function)": [[194, "_CPPv4NK8executor10Dispatcher4nameEv"]], "executor::dispatcher::name_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher5name_E"]], "executor::dispatcher::no_tuning_space (c++ function)": [[194, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv"]], "executor::dispatcher::no_tuning_space_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher16no_tuning_space_E"]], "executor::dispatcher::operator_conf (c++ function)": [[194, "_CPPv4NK8executor10Dispatcher13operator_confEv"]], "executor::dispatcher::operator_conf_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher14operator_conf_E"]], "executor::dispatcher::perf_ratio_id (c++ function)": [[194, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv"]], "executor::dispatcher::post_op (c++ function)": [[194, "_CPPv4N8executor10Dispatcher7post_opEv"]], "executor::dispatcher::set_attrs (c++ function)": [[194, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE"]], "executor::dispatcher::set_enable_sparse (c++ function)": [[194, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb"]], "executor::dispatcher::set_it_shape (c++ function)": [[194, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::set_latency (c++ function)": [[194, "_CPPv4N8executor10Dispatcher11set_latencyEKf"]], "executor::dispatcher::set_ot_shape (c++ function)": [[194, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::set_perf_ratio_id (c++ function)": [[194, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string"]], "executor::dispatcher::set_post_op (c++ function)": [[194, "_CPPv4N8executor10Dispatcher11set_post_opERK6string"]], "executor::dispatcher::set_reshape_time (c++ function)": [[194, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf"]], "executor::dispatcher::set_table_id (c++ function)": [[194, "_CPPv4N8executor10Dispatcher12set_table_idE6string"]], "executor::dispatcher::set_tuning_mode (c++ function)": [[194, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb"]], "executor::dispatcher::set_weight_shape (c++ function)": [[194, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE"]], "executor::dispatcher::sparselib_available_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher20sparselib_available_E"]], "executor::dispatcher::table_id (c++ function)": [[194, "_CPPv4N8executor10Dispatcher8table_idEv"]], "executor::dispatcher::tune_dense_in_sparse_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E"]], "executor::dispatcher::type (c++ function)": [[194, "_CPPv4NK8executor10Dispatcher4typeEv"]], "executor::dispatcher::type_ (c++ member)": [[194, "_CPPv4N8executor10Dispatcher5type_E"]], "executor::dispatcher::weight_shape (c++ function)": [[194, "_CPPv4N8executor10Dispatcher12weight_shapeEv"]], "executor::dispatcher::weight_zero_ratio (c++ function)": [[194, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv"]], "executor::dispatcher::~dispatcher (c++ function)": [[194, "_CPPv4N8executor10DispatcherD0Ev"]], "cpu_instance (c macro)": [[196, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[196, "c.NULL_INSTANCE"]], "jd (c++ type)": [[196, "_CPPv42jd"], [197, "_CPPv42jd"], [198, "_CPPv42jd"], [199, "_CPPv42jd"]], "jd::cpu_engine (c++ class)": [[196, "_CPPv4N2jd10cpu_engineE"]], "jd::cpu_engine::cpu_engine (c++ function)": [[196, "_CPPv4N2jd10cpu_engine10cpu_engineEv"]], "jd::cpu_engine::empty_list (c++ member)": [[196, "_CPPv4N2jd10cpu_engine10empty_listE"]], "jd::cpu_engine::get_implementation_list (c++ function)": [[196, "_CPPv4NK2jd10cpu_engine23get_implementation_listERK13operator_desc"]], "jd::cpu_engine::~cpu_engine (c++ function)": [[196, "_CPPv4N2jd10cpu_engineD0Ev"]], "jd::engine (c++ class)": [[196, "_CPPv4N2jd6engineE"]], "jd::engine::eng_kind_ (c++ member)": [[196, "_CPPv4N2jd6engine9eng_kind_E"]], "jd::engine::engine (c++ function)": [[196, "_CPPv4N2jd6engine6engineERK11engine_kind"]], "jd::engine::get_implementation_list (c++ function)": [[196, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc"]], "jd::engine::kind (c++ function)": [[196, "_CPPv4NK2jd6engine4kindEv"]], "jd::engine::~engine (c++ function)": [[196, "_CPPv4N2jd6engineD0Ev"]], "jd::attention (c++ class)": [[197, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[197, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [197, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[197, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[197, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[197, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [197, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[197, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dyn_quantize_mha (c++ class)": [[197, "_CPPv4N2jd16dyn_quantize_mhaE"]], "jd::dyn_quantize_mha::dyn_quantize_mha (c++ function)": [[197, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy"], [197, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv"]], "jd::dyn_quantize_mha::~dyn_quantize_mha (c++ function)": [[197, "_CPPv4N2jd16dyn_quantize_mhaD0Ev"]], "jd::dyn_quantize_mha_desc (c++ class)": [[197, "_CPPv4N2jd21dyn_quantize_mha_descE"]], "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc (c++ function)": [[197, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc"], [197, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv"]], "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc (c++ function)": [[197, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev"]], "jd::eltwiseop (c++ class)": [[197, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[197, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [197, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[197, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[197, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[197, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [197, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[197, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[197, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[197, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [197, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[197, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[197, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[197, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [197, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[197, "_CPPv4N2jd11gather_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[197, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[197, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[197, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[197, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [197, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[197, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[197, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[197, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[197, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[197, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[197, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[197, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[197, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [197, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[197, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[197, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[197, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [197, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[197, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[197, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[197, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [197, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[197, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[197, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[197, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [197, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[197, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[197, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[197, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [197, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[197, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[197, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[197, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [197, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[197, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[197, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[197, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [197, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[197, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::proxy_base (c++ class)": [[197, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[197, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[197, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[197, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[197, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[197, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[197, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::softmax (c++ class)": [[197, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[197, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [197, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[197, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[197, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[197, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [197, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[197, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[197, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[197, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [197, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[197, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[197, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[197, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [197, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[197, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[197, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[197, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [197, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[197, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[197, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[197, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [197, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[197, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[197, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[197, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [197, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[197, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[197, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[197, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [197, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[197, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[198, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[198, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[198, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[198, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[198, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[198, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::eng_kind_ (c++ member)": [[198, "_CPPv4N2jd13operator_desc9eng_kind_E"]], "jd::operator_desc::engine_kind (c++ function)": [[198, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[198, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[198, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[198, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[198, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[198, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[198, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[198, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[198, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[198, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [198, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[198, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[198, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[198, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[198, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[199, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[199, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[199, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[199, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[199, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[199, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[199, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[199, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[199, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[199, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[199, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[199, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[199, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[199, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[199, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[199, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[199, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[199, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[199, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[199, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[199, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[199, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[199, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[199, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[199, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[199, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[199, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[199, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[199, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[199, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[199, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[199, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[199, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[199, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::gather_data_t (c++ struct)": [[199, "_CPPv4N2jd3ssd13gather_data_tE"]], "jd::ssd::gather_data_t::binaryop_addrs (c++ member)": [[199, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE"]], "jd::ssd::gather_data_t::dst (c++ member)": [[199, "_CPPv4N2jd3ssd13gather_data_t3dstE"]], "jd::ssd::gather_data_t::gather_data_t (c++ function)": [[199, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv"]], "jd::ssd::gather_data_t::idx (c++ member)": [[199, "_CPPv4N2jd3ssd13gather_data_t3idxE"]], "jd::ssd::gather_data_t::src (c++ member)": [[199, "_CPPv4N2jd3ssd13gather_data_t3srcE"]], "jd::ssd::gather_param_t (c++ struct)": [[199, "_CPPv4N2jd3ssd14gather_param_tE"]], "jd::ssd::gather_param_t::binary_ts_sizes (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE"]], "jd::ssd::gather_param_t::binaryop_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE"]], "jd::ssd::gather_param_t::dst_axis_size (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE"]], "jd::ssd::gather_param_t::dt (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t2dtE"]], "jd::ssd::gather_param_t::dt_size (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE"]], "jd::ssd::gather_param_t::extend_mask (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE"]], "jd::ssd::gather_param_t::idx_size (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE"]], "jd::ssd::gather_param_t::inner_size (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE"]], "jd::ssd::gather_param_t::loops (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t5loopsE"]], "jd::ssd::gather_param_t::mask (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t4maskE"]], "jd::ssd::gather_param_t::outer_size (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE"]], "jd::ssd::gather_param_t::remain (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t6remainE"]], "jd::ssd::gather_param_t::src_axis_size (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE"]], "jd::ssd::gather_param_t::src_size (c++ member)": [[199, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[199, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[199, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[199, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[199, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[199, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[199, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[199, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_io (c++ type)": [[199, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[199, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[199, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[199, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[199, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[199, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[199, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[199, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[199, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[199, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[199, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[199, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[199, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[199, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[199, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[199, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[199, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[199, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[199, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[199, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[199, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[199, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[199, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[199, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[199, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[199, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[199, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[199, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[199, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[199, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[199, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[199, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[199, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[199, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[199, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[199, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[199, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[199, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[199, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[199, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[199, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[199, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[199, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[199, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[199, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[199, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[199, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[199, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[199, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[199, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[199, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[199, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[199, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[199, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[199, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[199, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[199, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[199, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[199, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[199, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[199, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[199, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[199, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[199, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[199, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[199, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[199, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[199, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[199, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[199, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[199, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[199, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[199, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[199, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[199, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[199, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[199, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[199, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[199, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[199, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[199, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[199, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})