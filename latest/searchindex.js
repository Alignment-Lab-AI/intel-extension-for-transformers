Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/api_doc_example/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_electra/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_fwk/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_graph_optimizer/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_example", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/intel_extension_for_transformers/api_doc_example/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_electra/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_fwk/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_graph_optimizer/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_example.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.api_doc_example</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.resize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_electra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_fwk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "API Document Example", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Neural Engine Support Matrix", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"thi": [0, 3, 10, 169, 195, 219, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 323, 324, 333, 343, 344, 345, 346, 347, 349, 353, 354, 355, 356, 357, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 380, 381, 383, 385], "i": [0, 2, 3, 5, 6, 7, 10, 15, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 200, 203, 209, 216, 219, 222, 227, 228, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 320, 321, 322, 323, 324, 325, 331, 333, 334, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 391], "onli": [0, 10, 195, 200, 203, 222, 227, 228, 232, 314, 334, 351, 354, 356, 357, 358, 360, 363, 365, 366, 367, 370, 372, 373, 374, 378, 381, 383], "us": [0, 2, 10, 15, 48, 138, 169, 191, 195, 200, 202, 203, 205, 209, 211, 212, 215, 216, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 343, 344, 345, 346, 347, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385], "refer": [0, 3, 5, 6, 200, 219, 232, 234, 333, 345, 346, 347, 350, 357, 360, 368, 370, 373, 378, 380, 384, 385], "convert": [0, 2, 5, 6, 10, 15, 191, 202, 203, 349, 359, 373, 378, 385], "python": [0, 5, 6, 10, 227, 228, 320, 331, 344, 345, 346, 351, 352, 353, 354, 356, 358, 359, 377], "docstr": [0, 227, 228], "api": [0, 5, 6, 8, 232, 314, 344, 346, 354, 356, 357, 358, 360, 361, 365, 366, 383, 390], "document": [0, 197, 222, 314, 315, 344, 345, 346, 347, 350, 370, 372, 373, 374, 384, 385], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 200, 203, 205, 206, 209, 211, 212, 214, 216, 219, 222, 225, 227, 228, 229, 231, 232, 234, 235, 314, 317, 320, 322, 323, 325, 331, 333, 334, 343, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 378, 381, 383, 384, 385], "creat": [0, 191, 200, 203, 209, 214, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 343, 353, 359, 360, 369, 378, 381], "doc": [0, 103, 104, 197, 232, 353, 357, 365, 374], "usag": [0, 346, 381, 382], "py": [0, 3, 345, 346, 351, 353, 355, 359, 377], "exampl": [0, 8, 10, 135, 195, 203, 227, 228, 232, 314, 315, 337, 343, 345, 346, 347, 350, 353, 354, 356, 357, 359, 360, 361, 363, 365, 367, 381, 384, 385, 390], "def": [0, 203, 333, 334, 346, 353], "fun": 0, "return": [0, 5, 6, 7, 10, 15, 48, 138, 191, 192, 195, 202, 205, 209, 211, 212, 214, 216, 217, 219, 222, 227, 228, 333, 334, 345, 346, 353, 357, 361, 365, 366, 381], "1": [0, 10, 197, 202, 203, 204, 220, 222, 227, 228, 230, 232, 324, 333, 334, 343, 345, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 361, 362, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 381, 383, 384, 385], "x": [0, 103, 104, 206, 227, 228, 356, 366, 369, 370, 372, 373, 378, 385], "2": [0, 10, 200, 203, 205, 227, 324, 333, 334, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 361, 362, 367, 368, 369, 374, 375, 376, 378, 380, 381, 383], "print": [0, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 353, 361], "attribute1": 0, "sourc": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 200, 202, 203, 204, 205, 206, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 354, 365, 372, 378, 380], "level": [0, 14, 228, 314, 343, 346, 354, 356, 366, 369, 377], "pleas": [0, 3, 5, 6, 219, 232, 234, 313, 333, 334, 345, 347, 348, 350, 353, 357, 360, 363, 364, 365, 366, 370, 373, 378, 384, 385], "set": [0, 10, 48, 195, 197, 204, 205, 215, 216, 222, 227, 228, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 343, 345, 346, 354, 356, 357, 358, 360, 361, 364, 365, 366, 369, 378], "100": [0, 203, 222, 227, 228, 346, 378, 385], "integ": [0, 345, 349, 356, 357, 374, 378, 384, 385], "type": [0, 5, 6, 7, 10, 15, 48, 138, 191, 192, 195, 202, 203, 205, 211, 216, 217, 222, 227, 231, 232, 234, 325, 333, 344, 345, 346, 347, 348, 349, 354, 355, 356, 358, 361, 363, 365, 366, 371, 377, 378, 381, 382, 385], "int": [0, 10, 195, 197, 202, 203, 220, 222, 227, 324, 334, 353, 365, 366, 367, 370], "module_debug_level1": 0, "debug": [0, 14], "function1": 0, "param1": 0, "param2": 0, "paramet": [0, 5, 6, 7, 10, 15, 48, 138, 191, 192, 195, 202, 203, 205, 209, 211, 212, 214, 215, 216, 217, 220, 222, 227, 228, 231, 232, 314, 324, 333, 334, 346, 347, 355, 361, 381, 384], "str": [0, 10, 48, 138, 195, 197, 202, 203, 204, 211, 215, 217, 220, 222, 225, 227, 228, 229, 232, 234, 334, 345], "parameter1": 0, "float": [0, 203, 204, 216, 219, 220, 222, 225, 229, 324, 345, 347, 349, 353, 359, 365, 366, 367, 381, 382, 384, 385], "parameter2": 0, "import": [0, 8, 10, 217, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 345, 346, 347, 350, 353, 354, 356, 358, 361, 365, 366, 370, 381, 382, 383, 384, 385], "o": [0, 10, 232, 333, 345, 346, 351, 362, 366, 371, 376], "rang": [0, 26, 203, 222, 333, 346, 353, 356, 378, 384, 385], "3": [0, 10, 324, 333, 334, 345, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 366, 368, 369, 374, 376, 378, 379, 381], "0": [0, 8, 10, 191, 195, 203, 204, 206, 220, 225, 227, 228, 230, 231, 232, 321, 322, 324, 333, 334, 345, 346, 347, 350, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385], "valu": [0, 10, 15, 191, 192, 202, 203, 215, 219, 222, 227, 228, 324, 345, 346, 347, 353, 354, 355, 356, 357, 365, 366, 367, 368, 370, 372, 373, 378, 381, 382, 384, 385], "true": [0, 8, 195, 203, 222, 225, 227, 228, 229, 333, 346, 349, 350, 352, 353, 355, 356, 365, 366, 372, 375, 378, 381, 382, 385], "fals": [0, 8, 195, 197, 203, 204, 206, 211, 222, 227, 228, 324, 333, 334, 347, 350, 353, 356, 365, 366, 378, 381], "bool": [0, 195, 197, 203, 204, 211, 222, 225, 227, 228, 229, 321, 322, 323, 324, 334, 347, 353, 365, 366, 381, 382], "function2": 0, "pep": 0, "484": [0, 362], "annot": 0, "style": [0, 344], "from": [0, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 191, 192, 202, 206, 209, 211, 219, 222, 227, 228, 232, 333, 334, 343, 345, 347, 348, 350, 353, 354, 355, 356, 357, 358, 360, 361, 365, 366, 369, 370, 371, 372, 373, 374, 381, 382, 383, 384, 385], "neural_compressor": [0, 203, 215, 222], "config": [0, 2, 8, 10, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 202, 205, 208, 209, 215, 216, 217, 219, 222, 227, 228, 331, 334, 345, 346, 347, 348, 350, 354, 355, 357, 360, 365, 378, 383, 384], "mixedprecisionconfig": 0, "eval_func": [0, 215, 216, 222, 333], "model": [0, 2, 5, 6, 7, 8, 10, 13, 15, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 173, 174, 175, 177, 178, 189, 190, 192, 195, 200, 202, 203, 206, 208, 209, 212, 215, 216, 217, 219, 222, 231, 232, 331, 333, 345, 347, 348, 350, 352, 353, 356, 357, 361, 362, 365, 370, 371, 372, 373, 376, 380, 381, 382, 384, 385, 394], "accuraci": [0, 203, 209, 222, 333, 347, 348, 350, 370, 378, 381, 382, 384], "conf": [0, 8, 203, 354, 355, 356, 360, 377], "output_model": 0, "mix_precis": 0, "fit": [0, 215, 367], "function3": 0, "none": [0, 2, 8, 10, 15, 47, 48, 75, 81, 191, 192, 195, 197, 202, 203, 204, 205, 206, 209, 212, 215, 216, 217, 220, 222, 225, 227, 228, 229, 230, 231, 324, 333, 345, 347, 348, 349, 355, 381, 382, 384, 385], "arg": [0, 14, 81, 211, 216, 219, 222, 232, 322, 333, 355, 360], "kwarg": [0, 14, 81, 203, 211, 219, 222, 227, 228], "an": [0, 3, 10, 15, 191, 214, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 343, 345, 346, 348, 349, 350, 353, 354, 355, 356, 357, 360, 361, 364, 365, 366, 370, 371, 374, 379, 381, 383, 394], "If": [0, 10, 205, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 344, 347, 349, 353, 354, 355, 356, 357, 358, 361, 365, 371, 378, 380, 381, 384, 385], "ar": [0, 10, 103, 104, 200, 205, 206, 219, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 333, 343, 344, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 384, 385], "accept": [0, 222, 343, 383], "thei": [0, 10, 200, 211, 343, 347, 352, 361, 364, 365, 366, 368, 372, 378], "should": [0, 10, 211, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 353, 354, 356, 357, 360, 361, 364, 365, 366, 371, 378, 379, 381, 382, 385], "list": [0, 5, 6, 7, 8, 10, 15, 48, 191, 192, 195, 203, 204, 215, 219, 220, 222, 227, 228, 346, 347, 352, 353, 354, 357, 365, 366, 379, 385], "option": [0, 10, 195, 202, 203, 211, 215, 217, 222, 227, 228, 333, 334, 355, 361, 365, 374, 378], "argument": [0, 195, 203, 219, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 347, 355, 379, 381, 382, 384, 385], "kei": [0, 8, 10, 15, 191, 219, 222, 227, 228, 314, 346, 355, 356, 357, 365, 366, 368], "dict": [0, 10, 15, 191, 192, 195, 203, 212, 217, 219, 220, 222, 227, 228, 232, 345, 353, 354, 384], "section": [0, 346, 363, 374, 375], "support": [0, 10, 15, 138, 197, 203, 206, 217, 220, 221, 232, 324, 350, 351, 352, 353, 354, 355, 356, 360, 361, 366, 370, 371, 373, 375, 377, 378, 383, 384, 388], "ani": [0, 10, 211, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343, 344, 353, 361, 383], "restructuredtext": 0, "format": [0, 14, 81, 222, 333, 355, 372, 373, 376, 377, 385], "includ": [0, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 322, 323, 324, 343, 344, 346, 348, 354, 355, 356, 363, 366, 374, 378, 380, 385], "liter": 0, "block": [0, 219, 227, 228, 348, 364, 367, 368, 369, 370, 371, 373, 374, 384], "rais": [0, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314], "attributeerror": 0, "except": [0, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 356, 365], "valueerror": 0, "equal": [0, 10, 222, 357, 364, 365], "generator1": 0, "n": [0, 10, 206, 227, 228, 324, 345, 347, 356, 357, 359, 362, 364, 367, 368, 369, 370, 373, 374, 376, 378], "gener": [0, 10, 103, 104, 202, 203, 219, 222, 227, 228, 232, 334, 346, 347, 353, 357, 361, 365, 366, 369, 370, 373, 375, 377, 378, 381, 382, 385], "have": [0, 2, 10, 191, 195, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343, 344, 346, 353, 354, 355, 356, 357, 358, 361, 366, 370, 371, 372, 373, 377, 378, 380, 381, 382, 383, 384, 385], "yield": [0, 385], "next": [0, 2, 8, 227, 228, 333, 357, 358, 365, 367, 369, 371, 372, 373, 374], "number": [0, 15, 195, 203, 205, 206, 228, 232, 334, 345, 356, 357, 361, 364, 367, 370, 373, 374, 378, 379, 385], "example_gener": 0, "4": [0, 10, 203, 220, 222, 227, 228, 324, 333, 334, 343, 345, 347, 348, 351, 353, 355, 356, 357, 360, 361, 362, 368, 369, 370, 371, 374, 375, 378, 384], "exampleclass": 0, "param3": 0, "ha": [0, 5, 6, 7, 10, 232, 333, 344, 345, 346, 353, 356, 357, 359, 360, 361, 364, 366, 370, 378, 385], "public": [0, 321, 322, 323, 324, 343, 360, 365, 366], "mai": [0, 2, 10, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 323, 324, 343, 344, 346, 353, 356, 361, 367, 368, 369, 371, 372, 373, 374, 378, 380, 385], "here": [0, 10, 212, 222, 340, 346, 352, 353, 356, 357, 358, 360, 361, 366, 374, 385, 386, 393], "attr1": 0, "descript": [0, 195, 222, 344, 345, 347, 355, 374, 381, 382, 384, 385], "attr2": 0, "attr5": 0, "after": [0, 10, 100, 135, 169, 219, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 349, 352, 355, 356, 357, 358, 360, 361, 364, 366, 371, 373, 374, 377, 378, 379, 385], "specifi": [0, 10, 197, 203, 205, 212, 214, 216, 220, 221, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 357, 358, 366, 370, 372, 378, 384, 385], "method1": 0, "execut": [0, 212, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 322, 333, 346, 356, 360, 363, 365, 366, 370, 371, 373, 375, 378, 379, 385], "It": [0, 10, 100, 211, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 347, 353, 355, 356, 357, 360, 361, 369, 370, 372, 373, 378], "": [0, 10, 15, 48, 100, 191, 203, 222, 228, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 322, 333, 343, 346, 347, 353, 354, 355, 357, 358, 360, 362, 367, 371, 373, 376, 378, 379, 383, 385], "neural": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 135, 164, 191, 192, 211, 216, 235, 314, 333, 334, 342, 346, 347, 353, 355, 356, 357, 358, 369, 377, 382, 385, 388, 395], "engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 135, 164, 191, 192, 209, 222, 235, 315, 325, 333, 342, 346, 353, 355, 357, 360, 365, 370, 373, 377, 388, 395], "start_pipelin": 2, "pipelin": [2, 208, 209, 212, 389], "graph": [2, 3, 5, 6, 7, 10, 11, 12, 15, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 317, 346, 347, 353, 358, 361, 369, 372, 374, 394], "interfac": [2, 203, 227, 228, 322, 349, 352, 363], "firstli": 2, "loader": [2, 11, 193, 356, 358, 361], "get": [2, 8, 10, 14, 15, 191, 192, 205, 206, 222, 229, 231, 234, 349, 353, 356, 357, 358, 360, 361, 365, 372, 374, 379, 383, 390], "comput": [2, 10, 191, 200, 222, 227, 228, 338, 346, 350, 361, 363, 364, 365, 366, 367, 370, 372, 373, 377, 383, 385, 391], "correspond": [2, 5, 6, 10, 333, 353, 357, 361, 363, 370, 374, 377, 385], "framework": [2, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 135, 203, 209, 217, 222, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 338, 347, 348, 351, 353, 354, 358, 363, 383, 384, 385, 391], "contain": [2, 10, 15, 103, 104, 191, 192, 219, 222, 227, 228, 232, 333, 338, 345, 347, 353, 354, 356, 357, 361, 363, 365, 377, 378, 379, 384, 385, 391], "node": [2, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 169, 191, 192, 231, 349, 361, 362, 376], "edg": 2, "op": [2, 5, 6, 7, 10, 11, 15, 113, 135, 146, 191, 192, 193, 203, 222, 324, 355, 360, 361, 365, 366, 378, 379, 385], "tensor": [2, 5, 6, 7, 8, 10, 11, 15, 36, 64, 135, 191, 192, 193, 202, 222, 227, 228, 324, 353, 354, 355, 357, 358, 360, 372, 377, 378, 384, 385], "Then": [2, 10, 347, 357, 358, 373, 374, 378, 384, 385], "extract": [2, 3, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 353, 356, 358], "pack": [2, 11, 36, 193, 374], "them": [2, 5, 6, 10, 353, 354, 357, 365, 368, 370, 373, 374, 385], "our": [2, 345, 349, 361, 365, 367, 368, 370, 372, 373, 374, 383], "form": [2, 10, 195, 222, 347, 355, 361, 364, 369, 373, 378], "exploit": [2, 361], "abov": [2, 10, 227, 228, 352, 353, 356, 357, 361, 367, 368, 370, 371, 372, 377], "consist": [2, 344], "sub": [2, 10, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 353, 356, 357, 365, 372, 373], "which": [2, 5, 6, 7, 10, 191, 203, 205, 209, 211, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343, 345, 347, 352, 353, 354, 356, 357, 361, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 381, 384, 385], "can": [2, 10, 103, 104, 113, 135, 197, 211, 219, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 345, 346, 347, 349, 353, 354, 356, 357, 358, 359, 360, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 378, 382, 383, 384, 385], "see": [2, 10, 103, 104, 195, 200, 227, 228, 313, 343, 346, 353, 355, 356, 357, 358, 361, 362, 364, 369, 373, 375, 376, 377, 378, 380], "new": [2, 5, 6, 7, 10, 15, 222, 344, 361, 365, 366, 379, 386], "big": [2, 356, 357], "like": [2, 5, 6, 7, 10, 103, 104, 191, 232, 345, 346, 347, 350, 353, 354, 355, 356, 357, 358, 361, 365, 366, 368, 375, 381, 382, 384, 385], "layernorm": [2, 10, 39, 116, 353, 357, 361, 363, 378], "There": [2, 347, 353, 354, 355, 371, 375, 378, 382, 384], "differ": [2, 8, 13, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 173, 174, 175, 177, 178, 189, 190, 205, 214, 333, 343, 345, 346, 347, 350, 353, 354, 356, 357, 358, 361, 364, 371, 374, 381, 382, 384, 385], "flow": [2, 10, 353, 357], "one": [2, 5, 6, 10, 219, 227, 324, 333, 346, 347, 350, 352, 353, 355, 356, 357, 361, 365, 367, 368, 373, 377, 378, 383], "subgraph": [2, 10, 164, 356, 358], "final": [2, 356, 357, 358, 360, 361, 367, 370, 371, 373, 381], "yaml": [2, 8, 10, 212, 214, 222, 355, 356, 358, 377], "file": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 138, 164, 203, 206, 209, 211, 212, 214, 219, 222, 223, 232, 235, 321, 322, 323, 324, 345, 346, 353, 354, 355, 356, 358, 360, 365, 366, 377, 378, 379, 380], "bin": [2, 8, 215, 354, 355, 356, 358, 375, 377], "configur": [2, 91, 203, 205, 211, 212, 214, 216, 219, 220, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 333, 345, 348, 349, 356, 364, 365, 369, 386], "infer": [2, 8, 13, 202, 216, 222, 228, 314, 348, 350, 352, 353, 355, 356, 357, 358, 368, 370, 371, 373, 382, 385, 392], "base": [3, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 211, 217, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 322, 333, 345, 346, 349, 350, 351, 358, 360, 362, 367, 369, 370, 371, 372, 373, 375, 376, 383], "tensorflow": [3, 6, 16, 17, 18, 19, 20, 22, 27, 29, 34, 37, 38, 41, 42, 43, 45, 46, 49, 50, 52, 53, 56, 58, 59, 62, 73, 74, 78, 191, 203, 209, 216, 231, 331, 350, 351, 354, 361, 385], "onnx": [3, 5, 15, 192, 203, 222, 346, 350, 353, 355, 356, 372, 383, 389, 394], "onnx_extractor": [3, 4, 11, 193], "tf_extractor": [3, 4, 11, 193], "more": [3, 5, 6, 10, 103, 104, 313, 347, 350, 352, 353, 355, 357, 358, 360, 361, 362, 363, 364, 365, 368, 370, 371, 372, 374, 376, 377, 378], "detail": [3, 10, 333, 338, 340, 343, 344, 346, 347, 348, 350, 352, 353, 355, 356, 357, 360, 361, 362, 363, 368, 375, 376, 378, 384, 385, 391, 393], "A": [3, 10, 205, 212, 217, 219, 222, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 353, 354, 361, 362, 364, 367, 368, 374, 376, 377, 378], "super": [3, 353, 356], "oper": [3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 135, 191, 192, 323, 325, 338, 348, 352, 353, 354, 356, 358, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 378, 385, 391, 394], "do": [3, 203, 206, 215, 216, 219, 222, 343, 349, 353, 354, 356, 357, 361, 365, 367, 384, 385], "addit": [3, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 346, 348, 355, 367, 371, 379, 386], "attribut": [3, 5, 6, 7, 10, 48, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 333, 355, 357, 360, 366], "without": [3, 215, 222, 343, 347, 353, 354, 371, 374, 375, 378], "modifi": [3, 8, 10, 113, 135, 200, 219, 228, 354, 355, 358], "topologi": 3, "modul": [4, 9, 11, 12, 36, 105, 213, 333, 358, 359], "torch_extractor": [4, 11, 193], "all": [5, 6, 7, 8, 10, 11, 36, 48, 135, 138, 193, 219, 222, 227, 228, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 333, 343, 346, 347, 352, 353, 354, 355, 357, 361, 362, 365, 366, 367, 368, 370, 373, 376, 377, 381, 384, 385], "input": [5, 6, 8, 10, 15, 26, 103, 104, 135, 191, 192, 202, 216, 217, 222, 227, 228, 324, 333, 334, 345, 346, 347, 349, 350, 354, 355, 356, 357, 360, 369, 371, 372, 374, 378, 383], "compos": [5, 6, 7, 209, 222, 333, 353, 358, 373], "order": [5, 6, 8, 10, 209, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 345, 353, 355, 361, 364, 370, 371, 373, 374], "origin": [5, 6, 10, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 200, 202, 219, 232, 345, 347, 353, 358, 371, 372, 385], "calcul": [5, 6, 103, 104, 206, 219, 333, 355, 361, 364, 366, 367, 370, 371, 374, 378, 385], "notic": [5, 6, 358, 365, 372, 373, 380], "map": [5, 6, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 222, 333, 346, 347, 364, 385], "between": [5, 6, 227, 228, 324, 333, 347, 371, 374, 378, 385], "For": [5, 6, 10, 15, 135, 313, 333, 343, 346, 350, 353, 356, 357, 361, 362, 363, 365, 368, 372, 373, 374, 375, 376, 383], "relat": [5, 6, 222, 340, 347, 353, 357, 361, 368, 373, 384, 385, 393], "deatil": [5, 6], "onnxextractor": 5, "decor": [5, 6, 7, 15, 48, 138, 191, 192], "graph_def": [5, 6, 7, 191], "input_tensor": [5, 6, 7, 10, 15, 48, 191, 192, 227, 228, 353, 357], "output_tensor": [5, 6, 7, 10, 15, 48, 191, 192, 353, 357], "record": [5, 6, 7, 200, 333, 355, 356], "dest": [5, 6, 7, 10, 15, 191], "name": [5, 6, 7, 8, 10, 15, 48, 75, 138, 191, 195, 203, 204, 211, 217, 220, 225, 229, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 359, 361, 362, 366, 376, 377, 380, 381, 382, 383, 384, 385], "object": [5, 6, 7, 191, 195, 203, 208, 212, 214, 215, 216, 217, 219, 222, 224, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 346, 347, 350, 353, 360, 384, 389], "onnxmodel": [5, 15], "tensorflowextractor": 6, "tensorflowmodel": [6, 191], "torch": [7, 103, 104, 192, 197, 202, 203, 222, 227, 228, 334, 346, 383], "torchextractor": 7, "torchscript": [7, 68, 192, 202, 203, 222, 334], "defint": [8, 81], "add_config_item": 8, "val": [8, 10], "add": [8, 10, 26, 203, 206, 219, 347, 354, 355, 356, 357, 361, 363, 365, 366, 373, 378, 379, 394], "pair": [8, 203, 227, 354, 366, 374], "framework_modeling_config": 8, "inquire_config_item": 8, "insert_nod": 8, "index": [8, 227, 228, 231, 324, 357, 360, 361], "insert": [8, 10, 358, 360, 361, 365, 366, 385], "ir": [8, 353, 354, 355, 356, 375, 377, 394], "remove_nod": 8, "node_nam": [8, 10, 15, 191, 353, 357], "remov": [8, 10, 146, 228, 343, 344, 366, 384], "get_node_id": [8, 353], "id": [8, 10, 211, 228, 231, 366, 367], "accord": [8, 353, 356, 374], "get_node_by_nam": 8, "rename_nod": 8, "old_nam": 8, "new_nam": 8, "change_node_input_tensor": 8, "mode": [8, 202, 204, 220, 221, 333, 355, 359, 371, 373, 378, 379, 385], "change_node_output_tensor": 8, "output": [8, 10, 15, 26, 191, 192, 203, 215, 222, 227, 228, 333, 345, 347, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 369, 370, 371, 372, 374, 378, 383], "get_pre_node_nam": 8, "previou": [8, 209, 222, 346, 354, 386], "get_next_node_nam": 8, "get_tensor_idx": 8, "tensor_nam": [8, 15, 191], "from_output": 8, "modify_node_connect": 8, "dump_tensor": 8, "tensor_list": 8, "dump": [8, 385], "engine_init": 8, "net_info": 8, "weight_data": 8, "b": [8, 10, 15, 227, 353, 361, 364, 367, 368, 369, 373, 374, 377, 378], "pybind": 8, "executor": [8, 353, 354, 355], "input_data": [8, 10, 11, 105, 193, 354], "graph_init": [8, 354, 356], "load_weight": 8, "initi": [8, 10, 15, 48, 203, 212, 222, 227, 228, 324, 333, 365, 366, 370, 383, 384], "newgraph": 8, "out": [8, 10, 222, 344, 346, 353, 354, 357, 363, 372, 385], "input_0": [8, 354, 356], "input_1": [8, 354, 356], "input_2": [8, 354, 356], "save": [8, 195, 206, 215, 222, 345, 346, 353, 354, 355, 358, 368, 372, 374, 385], "output_dir": [8, 195, 215, 222, 333, 345, 358, 359], "ymal": 8, "graph_dispatch": [8, 356], "tune": [8, 203, 222, 314, 345, 346, 347, 380, 381, 382, 384, 394], "inputs_shap": [8, 356], "dispatch": 8, "get_sparse_nodes_nam": 8, "threshold": [8, 378], "7": [8, 10, 324, 333, 346, 348, 351, 352, 353, 357, 359, 361, 362, 368, 376, 378, 381, 385], "sparsiti": [8, 203, 219, 362, 377, 378, 384], "spars": [8, 314, 324, 346, 356, 363, 364, 373, 378, 392], "transpose_mode_int8": 8, "node_name_list": 8, "transpos": [8, 11, 36, 61, 193, 227, 228, 355, 356, 363, 364, 368, 370, 371, 374, 378, 392], "innerproduct": [8, 26, 113, 355, 356, 363], "reorder": [8, 11, 36, 193, 370, 371], "util": [10, 15, 191, 192, 203, 205, 208, 233, 345, 353, 361, 364, 370, 371, 374, 378], "names_from_input": 10, "static": [10, 229, 321, 324, 355, 358, 365, 368, 370, 383], "method": [10, 206, 214, 220, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 345, 348, 365, 368, 370, 373, 375, 384, 385], "valid": [10, 203, 216, 222, 334, 344, 345, 347, 350, 361, 380, 386, 393], "string": [10, 15, 191, 192, 195, 206, 212, 214, 219, 231, 232, 323, 345, 347, 353, 356, 357, 360, 366, 381, 382, 384, 385], "defin": [10, 195, 203, 212, 214, 215, 219, 222, 321, 333, 343, 346, 347, 353, 354, 360, 361, 374, 379, 381, 384, 385], "field": [10, 203, 345, 365, 366, 385], "tupl": [10, 205, 217, 227, 228], "In": [10, 209, 222, 227, 333, 343, 346, 353, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 381, 382, 385], "nodedef": [10, 191], "end": [10, 219, 227, 228, 232, 314, 346, 355, 358, 360, 361, 366, 375], "also": [10, 344, 346, 353, 354, 355, 357, 358, 360, 361, 364, 365, 366, 367, 370, 373, 374, 375, 382, 385], "get_data_dtyp": 10, "data": [10, 75, 202, 232, 234, 324, 333, 346, 348, 353, 354, 356, 358, 359, 360, 364, 365, 366, 367, 370, 371, 374, 378, 385, 389, 393], "const": [10, 15, 191, 321, 322, 323, 324, 360, 363, 365, 366, 367, 368], "dtype": [10, 15, 75, 191, 192, 197, 222, 346, 349, 354, 355, 356, 360], "numpi": [10, 15, 346, 354], "dtypes_dict": 10, "autocast_init": 10, "quant": [10, 113, 203, 363, 378, 385, 392], "info": [10, 14, 15, 103, 104, 191, 192, 333, 346, 353, 354, 375], "set_autocast": 10, "get_autocast_info": 10, "quant_info_init": 10, "insert_quant_info": 10, "get_quant_info": 10, "environ_info_init": 10, "environ": [10, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343, 378, 379], "insert_environ_info": 10, "remove_environ_info_item": 10, "item": [10, 334, 346, 350], "get_environ_info": 10, "search_straight_pattern": [10, 361], "input_pattern": [10, 361], "search": [10, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 203, 206, 209, 212, 222, 333, 348, 357], "user": [10, 195, 219, 227, 228, 232, 314, 315, 333, 334, 337, 340, 346, 349, 353, 355, 357, 359, 370, 372, 375, 378, 382, 383, 390, 393], "pattern": [10, 11, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 203, 322, 358, 364, 367, 377, 384, 394], "intern": [10, 357, 370], "grpah": [10, 15, 191], "structur": [10, 348, 353, 354, 356, 369, 373, 377, 384], "attent": [10, 227, 228, 322, 333, 343, 355, 361, 372], "chain": [10, 365, 366], "call": [10, 100, 132, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 349, 353, 356, 357, 364, 365, 366, 370, 373, 374, 385], "must": [10, 200, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 351, 357, 361, 364, 365, 367, 374], "straight": 10, "sequenc": [10, 197, 205, 227, 228, 346, 350, 353, 357, 361, 369, 378], "mean": [10, 11, 36, 193, 200, 203, 227, 228, 232, 324, 345, 353, 354, 355, 356, 357, 361, 364, 365, 367, 371, 374, 378, 381, 384, 385], "otherwis": [10, 195, 343, 353, 356, 370, 378], "op_typ": [10, 15, 48, 191, 192, 353, 356, 357, 366], "element": [10, 219, 222, 353, 361, 363, 367, 369, 372, 374, 378, 392], "could": [10, 219, 322, 343, 353, 354, 355, 357, 358, 361, 368, 377, 378, 384, 385], "mandatori": 10, "while": [10, 354, 357, 361, 367, 370, 373, 378, 385], "stand": [10, 353], "mybe": 10, "mul": [10, 353, 357, 361, 365], "addv2": [10, 26, 361], "below": [10, 203, 314, 333, 344, 345, 346, 347, 353, 354, 356, 358, 361, 364, 369, 371, 372, 373, 374, 382], "extractor": [10, 11, 193, 356, 358, 361], "length": [10, 203, 205, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 346, 357, 361, 365, 378, 385], "match": [10, 333, 347, 356, 357, 361, 369, 372], "result": [10, 195, 209, 216, 222, 314, 333, 334, 343, 346, 348, 353, 356, 357, 362, 365, 366, 367, 370, 371, 372, 373, 374, 376, 380, 384, 385], "24": [10, 333, 361, 362, 368, 376], "layer": [10, 203, 205, 219, 227, 228, 333, 355, 361, 365, 369, 372, 384, 392], "each": [10, 103, 104, 195, 203, 209, 222, 227, 228, 232, 333, 345, 355, 356, 357, 364, 367, 369, 370, 371, 372, 373, 374, 377, 378, 379, 384], "still": [10, 219, 314, 361, 367, 385], "last": [10, 200, 203, 222, 227, 228, 357, 361, 364, 369, 370, 372, 385], "former": [10, 361], "search_pattern": [10, 361], "pattern_list": 10, "complet": [10, 353, 362, 367, 370, 373, 376], "represent": [10, 343, 350, 353, 357, 358], "its": [10, 135, 209, 222, 333, 343, 347, 353, 357, 358, 361, 369, 370, 371, 374, 377, 378, 380], "op_idx": 10, "howev": [10, 219, 356, 357, 361, 364, 368, 371, 374], "due": [10, 227, 357, 361, 364, 385], "few": [10, 195, 369], "complic": [10, 353, 361], "therefor": [10, 349, 364, 369, 372, 374, 385], "fist": 10, "repres": [10, 219, 343, 355, 357, 361, 364, 366, 367, 370, 385], "main": [10, 197, 219, 222, 227, 228, 232, 357, 371, 378], "top": [10, 314, 345, 346, 369], "down": 10, "head": [10, 227, 228, 361, 366, 372, 373], "tail": [10, 361, 375], "left": [10, 227, 228, 368, 372, 374], "bert_large_squad": 10, "pb": [10, 350], "squareddiffer": [10, 26, 361], "rsqrt": [10, 26, 361], "5": [10, 86, 87, 88, 89, 165, 166, 167, 170, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 203, 204, 324, 333, 334, 345, 347, 353, 354, 355, 357, 360, 361, 362, 368, 376, 378], "8": [10, 222, 324, 333, 346, 348, 349, 351, 353, 355, 357, 359, 361, 362, 366, 367, 368, 374, 375, 376, 378, 385], "9": [10, 203, 232, 333, 345, 346, 350, 351, 353, 361, 362, 368, 376, 378, 384], "6": [10, 324, 333, 347, 348, 352, 353, 357, 361, 362, 366, 368, 375, 376, 385], "same": [10, 228, 347, 349, 353, 354, 355, 357, 358, 361, 364, 367, 370, 371, 374, 377, 378, 379], "func": [10, 333, 356], "follow": [10, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 227, 228, 317, 320, 325, 331, 334, 343, 344, 345, 346, 347, 351, 353, 355, 356, 357, 358, 360, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 380, 385], "frozen": [10, 354, 358], "you": [10, 197, 203, 215, 227, 228, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 344, 345, 346, 347, 349, 353, 354, 356, 357, 358, 361, 365, 366, 368, 375, 377, 378, 380, 381, 383, 384, 385, 386], "had": [10, 353], "better": [10, 100, 209, 216, 222, 333, 353, 354, 355, 356, 364, 370, 371, 372, 373, 377, 381, 382, 385], "identifi": [10, 211, 367], "your": [10, 222, 232, 234, 314, 344, 345, 346, 350, 353, 354, 355, 356, 357, 365, 366, 378, 380, 383], "own": [10, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 353, 357, 358, 365, 371, 382], "casual": 10, "tf": [10, 216, 227, 333], "control": [10, 202, 203, 333, 353], "start": [10, 227, 228, 355, 361, 379, 390], "mostli": [10, 361], "longest": [10, 361], "path": [10, 195, 203, 209, 211, 212, 214, 215, 219, 222, 231, 232, 345, 346, 350, 354, 355, 356, 358, 375, 377, 378], "sometim": [10, 357, 385], "connect": [10, 384], "But": [10, 354, 364, 383], "don": [10, 203, 227, 228, 360, 365], "t": [10, 203, 227, 228, 322, 324, 333, 345, 347, 360, 364, 365, 367, 372, 373, 374, 378, 384], "need": [10, 113, 203, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 345, 346, 347, 353, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 378, 384, 385, 386], "least": [10, 219, 371], "doesn": [10, 333, 365, 374, 378], "exist": [10, 211, 232, 333, 350, 353, 383], "relationship": 10, "sever": [10, 345, 353, 358, 361, 364, 378, 385], "split": [10, 11, 36, 193, 334, 345, 356, 364, 368, 371], "representtaion": 10, "two": [10, 222, 347, 353, 356, 357, 359, 360, 365, 366, 368, 370, 371, 372, 373, 374, 382, 383, 384, 385], "idx": [10, 366], "some": [10, 135, 228, 346, 353, 354, 355, 356, 357, 360, 361, 365, 366, 370, 374, 385], "outsid": [10, 227, 228, 357, 361], "give": [10, 353, 357, 364], "just": [10, 228, 346, 353, 354, 355, 356, 357, 358, 361, 366, 374, 377, 381], "empti": [10, 26, 357, 361, 366, 379], "algorithm": [10, 48, 138, 203, 212, 324, 333, 345, 356, 357, 360, 361, 364, 365, 371, 378, 384, 385], "kind": [10, 91, 323, 360, 371, 378], "beaus": 10, "make": [10, 48, 135, 222, 334, 343, 344, 352, 353, 354, 363, 364, 365, 366, 367, 369, 370, 371, 372, 375, 378], "sure": [10, 135, 334, 353, 367, 378], "whole": [10, 200, 209, 333, 348, 355, 356, 369, 370, 371, 373, 375], "so": [10, 211, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 347, 352, 353, 356, 357, 360, 361, 365, 367, 368, 369, 370, 371, 373, 374, 375, 378, 381, 382, 384, 385], "check": [10, 15, 113, 203, 222, 340, 344, 346, 353, 356, 357, 361, 366, 393], "symmetr": [10, 361, 370, 378, 385], "consecut": [10, 368, 374], "y": [10, 103, 104, 366], "shape": [10, 11, 36, 75, 193, 227, 228, 324, 333, 346, 354, 355, 356, 360, 364, 370, 372, 378], "df": [10, 361], "duplic": 10, "would": [10, 353, 357, 358, 361, 375], "perform": [10, 203, 209, 212, 222, 227, 228, 229, 333, 334, 338, 346, 347, 349, 350, 354, 355, 356, 359, 364, 367, 368, 369, 370, 371, 372, 373, 374, 378, 381, 382, 384, 385, 391], "befor": [10, 203, 219, 222, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 344, 347, 349, 353, 354, 356, 357, 358, 361, 365, 366, 367, 368, 370, 371, 373, 378, 385], "splice": 10, "de": 10, "total": [10, 203, 205, 227, 333, 334, 345, 357, 361, 367, 374, 375], "step": [10, 203, 219, 222, 352, 353, 355, 357, 358, 359, 360, 361, 365, 370, 372, 373, 378], "c": [10, 325, 346, 351, 352, 353, 354, 356, 361, 362, 367, 369, 376, 378], "d": [10, 333, 345, 347, 364, 372], "e": [10, 103, 104, 195, 203, 209, 222, 333, 343, 346, 347, 356, 365, 366, 370, 371, 372, 378, 379], "f": [10, 324, 347, 360, 375, 385], "c1": 10, "d1": [10, 378], "c2": 10, "d2": 10, "c3": [10, 375], "d3": [10, 375], "now": [10, 232, 352, 353, 354, 356, 357, 358, 365, 366, 373, 378, 383], "part": [10, 195, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 357, 360, 361, 373, 374], "As": [10, 347, 353, 355, 357, 358, 368, 372, 374], "appli": [10, 203, 343, 348, 350, 365, 366, 370, 371, 372, 374, 378, 384, 385], "everi": [10, 219, 353, 364, 378], "right": [10, 227, 228, 343, 368, 372, 374, 383], "construct_nod": 10, "attr": [10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 323, 353, 354, 365, 366], "construct": [10, 48, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343, 365, 366], "new_nod": 10, "insert_pattern": 10, "target_node_nam": 10, "replac": [10, 228, 346, 347, 350, 353, 357, 384, 385], "specif": [10, 211, 212, 323, 325, 333, 343, 347, 351, 353, 356, 357, 364, 369, 370, 371, 377, 378, 381, 382, 383, 385], "ccontain": 10, "insid": [10, 357, 360, 369, 371], "been": [10, 227, 228, 344, 347, 366, 370, 383], "pattern_map": [10, 353, 357], "pattern_nam": 10, "mapping_dict": 10, "custom": [10, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 216, 222, 232, 314, 333, 346, 355, 357, 394], "mapping_config": 10, "first": [10, 132, 203, 222, 345, 352, 353, 356, 357, 359, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 379, 385], "second": [10, 203, 227, 228, 334, 352, 357, 359, 360, 361, 368, 369, 372, 374, 375, 378, 385], "third": [10, 357, 369, 374, 380], "requir": [10, 135, 200, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 350, 357, 359, 361, 362, 364, 367, 368, 370, 378, 385], "old": 10, "reshap": [10, 11, 36, 53, 169, 193, 353, 354, 355, 360], "paddingsequ": [10, 51, 137, 354], "search_mod": [10, 353, 357], "embed": [10, 227, 228, 354, 357, 361, 365], "m": [10, 324, 346, 347, 348, 355, 356, 362, 364, 367, 368, 369, 370, 371, 373, 374, 376, 378], "fusion": [10, 91, 135, 360, 361, 365, 366, 371, 394], "about": [10, 343, 346, 353, 357, 360, 362, 366, 374, 376], "in_pattern": 10, "input_id": [10, 227, 228, 350, 354], "segment_id": [10, 350, 354], "input_mask": [10, 350, 354], "out_pattern": 10, "th": [10, 357], "berfor": 10, "match_result": 10, "_n": 10, "reshape_0": [10, 357], "where": [10, 26, 227, 228, 333, 347, 357, 364, 366, 369, 370, 372, 374, 378, 379], "go": [10, 367], "mayb": [10, 356, 374], "happen": [10, 355, 374], "sepcial": 10, "biasadd": [10, 20, 357, 361], "bia": [10, 15, 203, 324, 355, 378], "unfix": 10, "locat": [10, 75, 353, 354, 357, 361, 374, 378, 386], "other": [10, 64, 113, 211, 324, 343, 344, 345, 346, 353, 354, 355, 356, 357, 361, 362, 370, 373, 374, 376, 378, 380, 385], "write": [10, 345, 353, 361, 370, 371, 373], "note": [10, 219, 334, 348, 351, 353, 354, 355, 356, 357, 359, 360, 361, 365, 366, 372, 373, 374, 378, 385], "That": [10, 373, 374], "too": [10, 353, 364, 365, 370], "decompos": [10, 353], "list2str": [10, 353], "src_perm": 10, "emit": [10, 357], "ret": [10, 361, 375], "str2list": 10, "src_str": 10, "pattern_mapping_conf_valid": 10, "conf_dict": 10, "lazyimport": 10, "module_nam": 10, "lazi": 10, "till": 10, "later": [10, 353, 361], "get_model_fwk_nam": 10, "detect": 10, "belong": [10, 353, 385], "avail": [10, 317, 320, 325, 331, 346, 369], "fwk": 10, "na": [10, 203, 208, 222, 345, 363], "set_environ_var": 10, "env": [10, 359], "var": [10, 103, 104, 324], "kv": 10, "del_environ_var": 10, "delet": [10, 211, 384], "assert": [11, 36, 193, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333], "batch_matmul": [11, 36, 193], "batch_matmul_v2": [11, 36, 193], "bias_add": [11, 15, 36, 193], "cast": [11, 36, 193], "concat": [11, 36, 193, 353], "conv": [11, 36, 193, 203, 355, 356, 366], "co": [11, 36, 193, 197, 211, 346], "empty_op": [11, 36, 193, 353], "expand_dim": [11, 36, 193], "fused_batch_matmul_v2": [11, 36, 193], "fused_batch_norm_v3": [11, 36, 193], "fused_gemm": [11, 36, 193], "fused_matmul": [11, 36, 193], "gather": [11, 36, 193, 222, 227, 228, 322, 353, 365], "gather_el": [11, 36, 193, 353], "gelu": [11, 36, 105, 193, 353, 360, 363, 366, 378], "gemm": [11, 36, 193, 203, 349, 364, 367, 373, 378, 392], "iterator_get_next": [11, 36, 193], "iterator_v2": [11, 36, 193, 353], "layer_norm": [11, 36, 105, 193, 353], "log_softmax": [11, 36, 193], "map_and_batch_dataset": [11, 36, 193, 353], "matmul": [11, 15, 26, 36, 113, 193, 203, 349, 355, 357, 358, 361, 363, 373, 378, 392], "mkl_layer_norm": [11, 36, 193], "model_dataset": [11, 36, 193], "one_hot": [11, 36, 193], "onnx_input": [11, 36, 193], "optimize_dataset": [11, 36, 193, 353], "padding_sequ": [11, 36, 105, 193, 354], "placehold": [11, 36, 193], "pos_emb": [11, 36, 193], "pow": [11, 36, 193, 353, 357], "quantize_linear": [11, 36, 193, 353], "quantize_v2": [11, 36, 193], "quantized_fused_matmul_and_dequant": [11, 36, 193], "quantized_matmul_with_bias_and_dequant": [11, 36, 193], "reduce_mean": [11, 36, 193, 353], "reduce_sum": [11, 36, 193], "resiz": [11, 36, 193], "rsub": [11, 36, 193], "scatter_el": [11, 36, 193], "sin": [11, 36, 193], "size": [11, 36, 193, 195, 202, 203, 222, 227, 228, 333, 343, 346, 350, 354, 356, 364, 367, 369, 371, 372, 373, 378, 385], "slice_position_id": [11, 36, 193], "softmax": [11, 36, 193, 227, 322, 333, 347, 363, 372, 373], "squeez": [11, 36, 193], "strided_slic": [11, 36, 193], "top_k": [11, 36, 193, 232], "unpack": [11, 36, 193, 222, 353], "unsqueez": [11, 36, 193, 353], "view": [11, 36, 193, 344, 355, 364, 386], "sub_graph": [11, 193, 353, 356], "innerproductreshapefus": [11, 98, 105, 193], "add_cls_token": [11, 105, 193], "add_embed": [11, 105, 193], "arangewithreciproc": [11, 105, 193], "attentionblock_attentionmaskaddreshap": [11, 105, 193], "attentionblock_constantofshapewithmul": [11, 105, 193], "attentionblock_qkvprereshap": [11, 105, 193], "attentionblock_qkvreshap": [11, 105, 193], "attentionblock_weightreshapeto4d": [11, 105, 193], "attention_mask_length_adaptive_keep_indic": [11, 105, 193], "attention_output_layer_norm_length_adaptive_keep_indic": [11, 105, 193], "attention_reshap": [11, 105, 193], "cast_to": [11, 105, 193], "collect_quant_info": [11, 105, 193], "conv_reshap": [11, 105, 193], "decoder_attn_reshap": [11, 105, 193], "einsumwitharang": [11, 105, 193], "embeddingbag": [11, 26, 105, 193], "embeddings_to_2d_before_inner_product": [11, 105, 193], "generate_sequ": [11, 105, 193], "innerproductwithbiasgelu": [11, 105, 193], "innerproductwithslic": [11, 105, 193], "innerproductwithswish": [11, 105, 193], "input_fil": [11, 105, 193], "insert_bf16_nod": [11, 105, 193], "insert_quant_nod": [11, 105, 193], "int8_bf16_mixed_precision_check": [11, 105, 193], "interact_featur": [11, 105, 193], "last_layer_shap": [11, 105, 193], "layer_norm_with_reduce_mean": [11, 105, 193, 353], "layer_norm_with_transpos": [11, 105, 193], "llama_embed": [11, 105, 193], "llama_matmulwithtranspos": [11, 105, 193], "llama_postprocess": [11, 105, 193], "llama_rotary_pos_emb": [11, 105, 193], "lower_all_tupl": [11, 105, 193], "matmul_with_bia": [11, 105, 193], "matmul_with_bias_add": [11, 105, 193], "matmul_with_bias_gelu": [11, 105, 193], "matmul_with_bias_relu": [11, 105, 193], "matmul_with_bias_sigmoid": [11, 105, 193], "matmul_with_bias_tanh": [11, 105, 193], "matmul_with_bias_unsqueez": [11, 105, 193], "matmul_with_transpos": [11, 105, 193], "matmul_with_transpose_scale_add": [11, 105, 193], "merged_embeddingbag": [11, 105, 193], "operator_adaptor": [11, 105, 193], "output_data": [11, 105, 193, 354], "position_embed": [11, 105, 193], "position_embeddings_v1": [11, 105, 193], "qkv_merg": [11, 105, 193], "qkv_reshap": [11, 105, 193], "quant_gather_to_bf16": [11, 105, 193], "quantize_fus": [11, 105, 193], "quantized_graph_dtype_refactor": [11, 105, 193], "remove_constant_op": [11, 105, 193], "remove_last_view": [11, 105, 193], "remove_rang": [11, 105, 193], "removeslic": [11, 105, 193], "reshape_after_restore_hidden_st": [11, 105, 193], "reshape_before_and_after_attention_out_layer_norm_gather_el": [11, 105, 193], "reshape_before_restore_hidden_st": [11, 105, 193], "reshape_fus": [11, 105, 193], "restore_hidden_states_in_length_adaptive_update_indic": [11, 105, 193], "rms_norm": [11, 105, 193], "rotary_pos_emb": [11, 105, 193], "slicemask": [11, 105, 193], "stablediffusion_explicitnhwctranspos": [11, 105, 193], "stablediffusion_mhareshap": [11, 105, 193], "stablediffusion_reshapefus": [11, 105, 193], "stablediffusion_bf16convert": [11, 105, 193], "start_end_logit": [11, 105, 193], "subgraph_match": [11, 105, 193, 356], "textencdoer_word_embed": [11, 105, 193], "textencoder_attentionmaskaddreshap": [11, 105, 193], "textencoder_attentionreshap": [11, 105, 193], "textencoder_kvreshap": [11, 105, 193], "textencoder_mulreshap": [11, 105, 193], "textencoder_qreshap": [11, 105, 193], "textencoder_softmaxreshap": [11, 105, 193], "textencoder_causal_attention_mask": [11, 105, 193], "token_type_embed": [11, 105, 193, 353], "token_type_embeddings_v1": [11, 105, 193, 353], "torch_embed": [11, 105, 193], "torch_ip_insert_bia": [11, 105, 193], "torchinsertbf16nod": [11, 105, 143, 193], "torchpaddingsqu": [11, 105, 193], "transformer2dmodel_attentionmaskaddreshap": [11, 105, 193], "transformer2dmodel_constantofshapewithmul": [11, 105, 193], "transformer2dmodel_ffnslic": [11, 105, 193], "transformer2dmodel_ffnslice_1": [11, 105, 193], "transformer2dmodel_qkvprereshap": [11, 105, 193], "transformer2dmodel_qkvreshap": [11, 105, 193], "transformer2dmodel_qkvreshape4d": [11, 105, 193], "transformer2dmodel_encoderhiddenstatesreshap": [11, 105, 193], "transformer2dmodel_getsamplebatch": [11, 105, 193], "transformer2dmodel_sampleslic": [11, 105, 193], "transpose_batch_matmul": [11, 105, 193, 353], "word_embed": [11, 105, 193, 354], "graph_util": [11, 193, 353, 357, 361], "logger": [11, 193, 375], "onnx_util": [11, 193], "optim": [11, 193, 314, 331, 333, 334, 346, 347, 348, 349, 350, 351, 354, 357, 358, 359, 365, 366, 367, 369, 381, 382, 383, 384, 385], "tf_util": [11, 193], "torch_util": [11, 193], "load": [13, 206, 209, 216, 217, 222, 227, 228, 346, 353, 354, 355, 356, 358, 364, 366, 367, 368, 369, 374], "frontend": [13, 369], "get_logg": 14, "log": [14, 346, 354, 360], "msg": 14, "error": [14, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 354, 360, 375], "fatal": 14, "warn": 14, "get_children": 15, "input_name_to_nod": 15, "get_node_children_nam": 15, "nodeproto": [15, 192], "get_initializer_children_nam": 15, "graph_node_names_detail": [15, 191, 192], "pars": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 191, 354, 360], "graph_nodes_dict": [15, 191], "Be": [15, 191], "class": [15, 191, 195, 217, 324, 325, 334, 345, 347, 353, 360, 365, 366], "cerat": 15, "output_nam": [15, 354], "ouput": 15, "param": [15, 191, 222, 365, 366], "node_names_detail": [15, 191], "is_supported_onnx_graph": [15, 261], "is_supported_onnx_nod": 15, "change_num_nam": 15, "bias_to_int32": 15, "bias_nod": 15, "a_scal": 15, "b_scale": 15, "int8": [15, 203, 217, 222, 346, 348, 355, 356, 358, 363, 366, 371, 372, 378, 385, 394], "int32": [15, 346, 354], "matric": [15, 367, 372, 373], "scale": [15, 222, 324, 365, 370, 373, 385], "arrai": [15, 354], "fp32_bia": 15, "int8_bia": 15, "int8_bias_zero_point": 15, "int8_bias_scal": 15, "int32_bia": 15, "onnx_extract_oper": 15, "framework_model": [15, 47, 48, 191], "nodes_dict": [15, 47, 48, 191, 192], "engine_graph": [15, 47, 48, 191, 192], "tf_dtype": [15, 191, 192], "set_attr": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 353], "batchmatmul": 18, "batchmatmulv2": 19, "onnxruntim": [23, 24, 25, 31, 33, 54, 55, 60, 61, 63, 64, 65, 67, 72, 76, 77, 79, 80, 346, 349, 351, 353, 359], "regist": [26, 39, 48, 51, 54, 55, 64, 66, 70, 80, 138, 364, 365, 366, 367, 369, 370, 371, 372, 374, 394], "multiheadattenion": 26, "binaryadd": [26, 365], "constantofshap": 26, "dequantizelinear": [26, 358], "dequant": [26, 365, 366, 370, 378], "erf": [26, 360], "expand": [26, 227, 228], "fill": [26, 357, 372], "flatmapdataset": 26, "ident": [26, 343, 347], "makeiter": 26, "matmulwithbiasadd": [26, 125], "matmulwithbiasgelu": [26, 126], "matmulwithbiastanh": [26, 129], "matmulwithbia": [26, 124], "qlinearmatmul": [26, 358], "qlinearadd": 26, "qlinearmul": 26, "realdiv": 26, "sqrt": [26, 353, 357, 372], "squar": [26, 227, 228], "stopgradi": 26, "tanh": [26, 360, 366, 378], "tensorslicedataset": 26, "transposebatchmatmul": [26, 189, 353], "relu": [26, 366, 378], "matmulwithbiasrelu": [26, 127], "cumsum": 26, "onehot": [26, 46], "tokentypeid": 26, "positionid": 26, "loop": [26, 222, 333, 353, 365, 367, 372], "sigmoid": 26, "matmulwithbiassigmoid": [26, 128], "flatten": 26, "mergedembeddingbag": [26, 133], "convolut": [26, 347, 356], "expandindic": 26, "tile": [26, 64, 364, 368, 370, 372, 373, 374, 378], "opani": 26, "sequencelength": [26, 362], "arang": 26, "reciproc": 26, "einsum": 26, "repeat": [26, 367, 379], "stack": [26, 373], "constant": [26, 146, 222], "listconstruct": 26, "latrang": 26, "masked_fil": 26, "floor_divid": 26, "max": [26, 203, 205, 222, 346, 362, 365, 367, 369, 374, 376, 385], "listunpack": 26, "silu": 26, "expanddim": 27, "fusedbatchnormv3": 29, "fusedgemm": 30, "fusedmatmul": 31, "gatherv2": [32, 353], "gatherel": [33, 353], "iteratorgetnext": 37, "iteratorv2": [38, 353], "logsoftmax": [40, 322], "mapandbatchdataset": [41, 353], "modeldataset": 45, "onnxinput": 47, "operator_registri": [48, 353], "operator_typ": [48, 353], "subclass": [48, 138, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322], "cl": [48, 138, 333], "registr": [48, 138, 353], "ordereddict": [48, 353], "optimizedataset": [49, 353], "packagepositionembed": 53, "quantizelinear": [55, 353, 358], "quantiz": [55, 203, 208, 211, 215, 216, 222, 314, 346, 349, 365, 366, 370, 371, 373, 378, 381, 389, 394], "quantizev2": 56, "quantizedmatmulwithbiasanddequant": 58, "reducemean": [59, 353, 357], "reducesum": 60, "aten": 64, "self": [64, 203, 227, 228, 232, 333, 345, 353, 355], "scalar": [64, 365], "alpha": [64, 324, 371, 378], "scatterel": 65, "primconst": 68, "slicepositionid": 70, "stridedslic": 74, "source_op": 75, "dest_op": 75, "definit": [75, 366], "topk": 76, "input_shap": [81, 355, 356, 378], "weight_optim": 81, "weight": [81, 203, 227, 228, 324, 333, 347, 349, 355, 356, 358, 364, 367, 368, 369, 373, 374, 378, 381, 382, 384, 385], "fuse": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 358, 365, 366], "acceler": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 338, 346, 348, 349, 358, 365, 366, 370, 372, 385, 391], "strategi": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 203, 216, 367], "addclstoken": [83, 91], "addembed": 84, "stabl": [86, 87, 88, 89, 103, 104, 165, 166, 167, 170, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 314, 346, 351, 370], "diffusionv1": [86, 87, 88, 89, 166, 167, 170, 171, 172, 179, 180, 183, 184, 185], "attentionmasklengthadaptiveexpandindic": 91, "attentionoutputlayernormlengthadaptiveexpandindic": 92, "attentionreshap": 93, "castto": 94, "collectquantinfo": 95, "convreshap": 96, "decoderattnreshap": 97, "gatherwithadd": 100, "embeddingsto2dbeforeinnerproduct": 100, "operatoradaptor": [100, 135], "quantgathertobf16": [100, 143], "generatesequ": 102, "channel": [103, 104, 365, 369, 370, 374, 378, 384], "separ": [103, 104, 343, 361, 374, 380], "num_group": [103, 104], "group": [103, 104, 348, 353, 361, 367, 372, 374, 384], "num_channel": [103, 104], "epsilon": [103, 104, 353], "gamma": [103, 104], "beta": [103, 104, 324, 371, 378], "http": [103, 104, 197, 200, 227, 232, 234, 345, 346, 351, 352, 354, 360, 380, 386], "pytorch": [103, 104, 195, 203, 206, 209, 211, 215, 222, 227, 228, 230, 331, 345, 346, 349, 351, 359, 377, 383, 384, 385], "org": [103, 104, 200, 227, 351], "nn": [103, 104, 202, 222, 369], "html": [103, 104, 360], "groupnorm": [104, 322], "inputdata": [109, 353], "inputfil": 110, "insertbf16nod": 111, "insertquantnod": 112, "quantizedgraphdtyperefactor": [113, 145], "int8bf16mixedprecisioncheck": 113, "inferenc": 113, "under": [113, 222, 346, 353, 354, 355, 358, 370, 371, 378, 380], "in8": 113, "bf16": [113, 203, 222, 346, 348, 358, 363, 366, 368, 370, 373, 378], "mix": [113, 356], "precis": [113, 222, 349, 358, 382, 385, 394], "And": [113, 355, 356, 357, 358, 361, 365], "u8": [113, 358, 360, 366, 373, 378], "s8": [113, 358, 365, 366, 370, 378], "fp32": [113, 203, 222, 346, 348, 354, 355, 356, 358, 360, 365, 366, 368, 369, 371, 373, 378, 383, 385], "interactfeatur": 114, "lastlayershap": 115, "layernormwithreducemean": [117, 353], "layernormwithtranspos": 118, "llamaembed": 119, "llamamatmulwithtranspos": 120, "llamapostprocess": 121, "roraryposemb": [122, 156], "llamaroraryposemb": 122, "loweralltupl": 123, "matmulwithbiasunsqueez": 130, "matmulwithtranspos": [131, 132], "matmulwithtransposescaleadd": 132, "multiheadattent": 134, "bass": [134, 138, 159], "sweep": 135, "receiv": [135, 211, 357, 361], "outputdata": [136, 353], "pattern_registri": [138, 353], "pattern_typ": [138, 353], "positionembed": 139, "positionembeddingsv1": 140, "qkvmerg": 141, "qkvreshap": 142, "qunatizefus": 144, "quantizedgraphdtypecheck": 145, "removeconstantop": 146, "removelastview": 147, "removerang": 148, "reshapeafterrestorehiddenst": 150, "reshapebeforeandafterattentionoutlayernormgatherel": 151, "reshapebeforerestorehiddenst": 152, "reshapefus": 153, "restorehiddenstatesinlengthadapt": 154, "rmsnorm": 155, "explicitnhwctransposeforconv": 158, "startendlogit": 163, "matcher": [164, 333, 358], "subgraphmatch": [164, 356], "textencoder_wordembed": 165, "textencoderv1": [165, 181, 182, 186, 187, 188], "qkv": [169, 356, 358], "textencoder_casualattentionmask": 172, "tokentypeembed": [173, 353], "tokentypeembeddingsv1": [174, 353], "torchembed": 175, "torchinnerproductinsertbia": 176, "torchpaddingsequ": 178, "transformer2dmodel_ffninputslic": 181, "transformer2dmodel_ffninputslice_1": 182, "transformer2dmodel_qkvreshapeto4d": 185, "wordembed": 190, "create_tf_nod": 191, "when": [191, 203, 222, 227, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 343, 348, 353, 354, 356, 357, 360, 361, 364, 366, 367, 369, 370, 371, 373, 374, 378, 381, 382, 385], "tendorflow": 191, "get_tensor_dest_op": 191, "someth": 191, "store": [191, 203, 206, 209, 211, 333, 353, 357, 358, 361, 364, 365, 366, 367, 368, 371, 372, 374], "dest_op_nam": 191, "tf_extract_oper": 191, "tf_dtype_id": 191, "deal": [191, 333, 355], "multipl": [191, 223, 227, 228, 232, 334, 348, 353, 355, 366, 367, 369, 370, 371, 372, 373, 374, 378, 381, 382], "indetermin": 191, "torch_extract_oper": 192, "compil": [193, 317, 350, 352, 353, 354, 356, 357, 359, 361, 394], "model_arg": 195, "task": [195, 217, 228, 231, 333, 345, 346, 347, 348, 359, 366, 372, 375, 383], "new_fewshot": 195, "batch_siz": [195, 197, 202, 203, 222, 227, 228, 231, 334, 346, 354, 355, 359, 372, 378], "devic": [195, 197, 206, 345, 347, 354, 356, 383], "cpu": [195, 203, 314, 323, 334, 345, 346, 350, 351, 354, 360, 362, 364, 366, 375, 376, 383], "no_cach": 195, "limit": [195, 203, 347, 369, 373], "bootstrap_it": 195, "100000": 195, "description_dict": 195, "check_integr": 195, "decontamination_ngrams_path": 195, "seed": [195, 203, 333], "1234": 195, "user_model": 195, "instanti": [195, 211, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "union": [195, 222, 324], "lm": 195, "get_model": 195, "create_from_arg_str": 195, "ignor": [195, 222, 227, 228, 353], "taken": [195, 227, 228], "eval_harness_nam": 195, "__name__": 195, "num_fewshot": 195, "shot": 195, "context": [195, 200], "batch": [195, 202, 222, 324, 346, 354, 369, 370, 372, 379], "g": [195, 203, 209, 222, 333, 347, 365, 366, 370, 371, 379], "cuda": [195, 197, 345], "run": [195, 215, 222, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 345, 378, 379, 385], "whether": [195, 203, 211, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 340, 353, 355, 361, 378, 393], "cach": [195, 211, 322, 360, 367, 370, 371, 372, 378], "per": [195, 355, 362, 365, 368, 370, 376, 378, 379, 384], "test": [195, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 344, 346, 348, 351, 362, 376, 378, 379], "iter": [195, 203, 209, 222, 333, 334, 346, 354, 356, 360, 365, 369, 372, 373, 378, 379], "bootstrap": 195, "statist": 195, "dictionari": [195, 212, 222], "task_nam": [195, 358, 359], "relev": [195, 346], "suit": 195, "provid": [195, 202, 203, 206, 211, 215, 216, 222, 227, 228, 232, 234, 314, 333, 334, 346, 348, 349, 350, 353, 363, 366, 370, 371, 373, 381, 385], "autocausallm": 197, "pretrain": [197, 227, 228, 353], "token": [197, 215, 227, 228, 232, 334, 345, 346, 348, 350, 358, 383], "subfold": 197, "revis": [197, 211], "max_gen_tok": 197, "256": [197, 333, 355, 376, 378], "max_length": [197, 203, 334, 346], "add_special_token": 197, "use_acceler": 197, "device_map_opt": 197, "auto": [197, 203, 209, 216, 345, 355, 360, 366], "max_memory_per_gpu": 197, "max_cpu_memori": 197, "offload_fold": 197, "offload": 197, "init_empty_weight": 197, "causal": [197, 228, 345], "languag": [197, 227, 228, 314, 343, 345, 346, 348, 383], "find": [197, 324, 333, 353, 356, 360, 361, 369, 384], "hf": 197, "transform": [197, 203, 216, 217, 222, 227, 228, 232, 333, 334, 338, 344, 345, 347, 351, 352, 353, 354, 365, 366, 371, 372, 373, 374, 380, 382, 383, 384, 385, 386, 391], "model_doc": 197, "automodelforcausallm": 197, "autoseq2seqlm": 197, "seq2seq": [197, 222, 227, 228], "automodelforseq2seqlm": 197, "multitokeneoscriteria": 197, "pretrainedtoken": 197, "initial_decoder_input_length": 197, "criteria": [197, 382], "stop": [197, 203, 232, 345, 385], "multi": [197, 354, 355, 356], "lambada": [199, 334], "dataset": [200, 216, 222, 231, 232, 334, 345, 348, 381, 385], "word": [200, 227, 228, 348, 374], "predict": [200, 209, 222, 227, 228, 333, 345, 346, 347], "broad": 200, "discours": 200, "arxiv": [200, 227], "pdf": 200, "1606": 200, "06031": 200, "capabl": [200, 334, 371, 374], "text": [200, 232, 314, 334, 346, 348, 359, 366, 375, 380, 383], "understand": [200, 367, 370], "collect": [200, 203, 334, 353, 355, 385], "narr": 200, "passag": 200, "share": [200, 222, 367], "characterist": [200, 343], "human": 200, "subject": [200, 380], "abl": [200, 372, 385], "guess": 200, "expos": [200, 365, 366], "sentenc": [200, 227, 228, 232, 334, 345, 346], "preced": 200, "target": [200, 202, 203, 222, 333, 355, 374, 384], "To": [200, 227, 228, 333, 344, 353, 367, 370, 372, 374, 378, 379], "succe": 200, "cannot": [200, 228, 324, 364, 370, 374, 379], "simpli": 200, "reli": 200, "local": [200, 211, 222, 353, 364, 367, 370], "keep": [200, 357], "track": 200, "inform": [200, 216, 219, 313, 317, 320, 325, 331, 343, 344, 346, 347, 354, 355, 362, 366, 369, 376, 377, 378, 384, 385, 386, 390], "broader": 200, "homepag": 200, "zenodo": 200, "2630551": 200, "x4xzn5nkjui": 200, "lambadastandard": 200, "standard": [200, 211], "lambadaopenai": 200, "openai": 200, "version": [200, 201, 211, 222, 343, 346, 351, 356, 362, 376, 380], "gpt": [200, 314, 345, 346, 348], "github": [200, 232, 234, 344, 345, 346, 351, 352, 354, 360, 380, 386], "com": [200, 232, 234, 345, 346, 351, 352, 354, 362, 376, 380, 386], "issu": [200, 313, 333, 340, 343, 344, 346, 371, 385, 393], "131": [200, 362], "issuecom": 200, "497136199": 200, "api_doc_exampl": 201, "pytorchbenchmark": 202, "executorbenchmark": 202, "refactor_batch_s": 202, "old_batch_s": 202, "default": [202, 203, 211, 215, 217, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 345, 346, 347, 353, 356, 362, 366, 370, 374, 375, 376, 378, 381, 382, 384, 385], "batched_valu": 202, "get_example_input": [202, 334], "dataload": [202, 215, 222, 231, 334, 346], "batched_data": 202, "preprocess_model": 202, "example_input": [202, 334], "additional_cmd": 202, "jit": [202, 203, 222, 321, 322, 323, 324, 334, 338, 363, 365, 366, 369, 373, 378, 391], "trace": [202, 203, 334, 355], "benchmarkconfig": [202, 203, 334], "process": [202, 203, 209, 212, 219, 222, 232, 333, 346, 348, 353, 354, 356, 357, 361, 364, 365, 367, 370, 371, 374, 384, 385], "raw_cmd": 202, "preprocess": [202, 203, 345, 346, 373], "scriptmodul": 202, "model_name_or_path": [202, 211, 222, 232, 334, 345], "build": [202, 212, 216, 222, 333, 346, 352, 364, 370, 371, 375, 382], "inc": [203, 211, 215, 216, 222, 359], "nncf": 203, "check_valu": 203, "src": [203, 324, 354, 366, 374, 378], "supported_typ": 203, "supported_valu": 203, "given": [203, 211, 227, 228, 345, 361, 366, 369, 372, 374, 384], "datatyp": [203, 348, 349], "uint8": [203, 372, 385], "_datatyp": 203, "dynamiclengthconfig": [203, 222, 350], "length_config": [203, 227, 228, 350], "const_rat": 203, "num_sandwich": 203, "length_drop_ratio_bound": [203, 205], "layer_dropout_prob": [203, 205], "layer_dropout_bound": [203, 205], "dynamic_train": 203, "load_store_fil": 203, "evo_it": 203, "30": [203, 368], "population_s": 203, "20": [203, 334, 346, 351, 354, 359, 362, 368, 375, 376], "mutation_s": 203, "mutation_prob": [203, 206], "crossover_s": 203, "num_cpu": 203, "48": [203, 362, 376], "distributed_world_s": 203, "latency_constraint": 203, "evo_eval_metr": 203, "eval_f1": [203, 206, 350, 381, 385], "dynam": [203, 208, 222, 360, 363, 365, 369, 371, 378, 392], "adapt": [203, 314, 343, 346], "maximum": [203, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 362, 376, 385], "drop": [203, 205, 348, 371, 374, 381], "ratio": [203, 205, 206, 219, 347, 376, 378, 381, 382, 384], "sandwich": 203, "num": [203, 333, 345, 355, 364, 366, 372], "train": [203, 209, 212, 215, 216, 219, 222, 314, 333, 345, 346, 347, 350, 377, 384], "dropout": [203, 205], "probabl": [203, 205, 333, 371], "evolut": [203, 207, 208, 348], "popul": [203, 206], "mutat": [203, 206], "crossov": [203, 206], "distribut": [203, 231, 333, 347, 371, 385, 386], "world": 203, "latenc": [203, 333, 334, 346, 348, 355, 362, 367, 385], "constraint": [203, 206, 385], "metric": [203, 208, 209, 212, 216, 222, 224, 333, 346, 350, 389], "quantizationconfig": [203, 215, 216, 222, 346, 350], "approach": [203, 212, 214, 345, 347, 348, 350, 366, 367], "posttrainingstat": [203, 348, 349, 350, 385], "basic": [203, 212, 228, 231, 346, 351, 360, 370], "timeout": [203, 385], "max_trial": [203, 333, 385], "config_fil": 203, "sampling_s": 203, "use_bf16": 203, "recip": [203, 222, 345, 356, 382], "earli": [203, 385], "combin": [203, 222, 333, 356, 361, 365, 366, 385], "decid": [203, 369, 385], "exit": [203, 385], "time": [203, 355, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 376, 378, 379, 385], "evalu": [203, 206, 209, 212, 215, 216, 219, 222, 333, 347, 355, 372, 381, 382, 384, 385], "notraineroptim": [203, 215, 347, 384, 385], "guarante": [203, 385], "how": [203, 205, 222, 313, 344, 353, 354, 355, 358, 359, 361, 366, 367, 368, 378, 381, 384], "mani": [203, 205, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 353, 355, 357, 365, 367, 368, 371, 373, 378], "sampl": [203, 205, 222, 232, 333, 334, 345, 346, 350, 362, 372, 385], "smooth_quant": 203, "smooth": 203, "smooth_quant_arg": 203, "fast_bias_correct": 203, "fast": [203, 314, 346, 350], "correct": [203, 343, 357, 361, 372], "weight_correct": 203, "gemm_to_matmul": 203, "graph_optimization_level": 203, "disable_al": 203, "enable_bas": 203, "enable_extend": 203, "enable_al": 203, "first_conv_or_matmul_quant": 203, "last_conv_or_matmul_quant": 203, "pre_post_process_quant": 203, "postprocess": 203, "add_qdq_pair_to_weight": 203, "qdq": [203, 222, 349, 358], "vaild": 203, "onnxrt_trt_ep": 203, "optypes_to_exclude_output_qu": 203, "optyp": 203, "dedicated_qdq_pair": 203, "dedic": 203, "pruningconfig": [203, 350], "epoch": [203, 219, 384], "epoch_rang": [203, 220], "initial_sparsity_ratio": [203, 220], "target_sparsity_ratio": [203, 220, 350, 384], "97": [203, 220, 376, 384], "pruner_config": [203, 350, 384], "pruner": [203, 208, 220, 222, 347, 384], "prune": [203, 208, 215, 216, 218, 222, 227, 228, 314, 346, 389], "goal": [203, 222, 384], "behavior": [203, 222, 343, 344, 347, 364, 365, 370, 384, 385], "nlp": [203, 222, 232, 234, 314, 345, 346, 348, 350, 354, 384, 385], "wil": 203, "basicmagnitud": [203, 220, 348, 350, 384], "typel": 203, "init_prune_config": 203, "init": [203, 209, 215, 216, 218, 230, 231, 333, 345, 346, 351, 352, 354, 366], "distillationconfig": [203, 222, 350], "criterion": [203, 204, 216, 225, 350, 381, 385], "distil": [203, 208, 209, 215, 216, 222, 345, 346, 359, 389], "inc_config": 203, "knowledgeloss": [203, 204, 347], "tfdistillationconfig": [203, 333], "loss_typ": [203, 204, 333, 347], "loss_weight": [203, 333], "train_step": [203, 333], "temperatur": [203, 204, 232, 333, 345, 347], "loss": [203, 222, 227, 228, 333, 345, 347, 385], "knowledgedistillationloss": [203, 347], "flashdistillationconfig": 203, "block_nam": [203, 333], "layer_mappings_for_knowledge_transf": [203, 333], "add_origin_loss": [203, 204, 333, 347], "flash": [203, 209, 222], "autodistillationconfig": [203, 333], "search_spac": [203, 212, 333], "search_algorithm": [203, 333], "bo": [203, 333, 380], "knowledge_transf": [203, 333], "regular_distil": [203, 333], "disil": 203, "space": [203, 209, 212, 222, 333, 343, 344, 356, 364, 367], "bayesian": [203, 333], "architectur": [203, 209, 212, 216, 222, 227, 228, 333, 346, 351, 364, 371, 373], "candid": 203, "trial": [203, 222], "random": [203, 227, 333, 371], "knowledg": [203, 222, 314, 333, 345, 346], "transfer": [203, 222, 231, 347], "stage": [203, 209, 222, 333], "autodistil": [203, 209, 216, 222, 389], "regular": [203, 209, 384], "nasconfig": [203, 212, 214], "parser": 203, "procedur": [203, 378], "backend": [203, 222, 230, 334, 346, 348, 350, 351, 352, 353, 356, 358, 361, 363, 378, 385], "warmup": [203, 334, 356], "cores_per_inst": [203, 222, 334], "num_of_inst": [203, 222, 334], "benchmark": [203, 208, 222, 223, 346, 356, 362, 363, 376, 379, 389], "skip": [203, 334, 367, 379], "core": [203, 334, 354, 362, 364, 370, 371, 376, 379, 380], "instanc": [203, 209, 212, 222, 223, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 334, 343, 354, 355, 362, 376, 379, 381, 382, 383], "enabl": [203, 334, 349, 350, 362, 364, 370, 371, 375, 376], "want": [203, 215, 334, 340, 353, 354, 355, 356, 358, 361, 364, 365, 366, 378, 381, 393], "prunerv2": 203, "target_spars": 203, "pruning_typ": 203, "op_nam": 203, "excluded_op_nam": 203, "start_step": 203, "end_step": 203, "pruning_scop": 203, "pruning_frequ": 203, "min_sparsity_ratio_per_op": 203, "max_sparsity_ratio_per_op": 203, "sparsity_decay_typ": 203, "pruning_op_typ": 203, "reg_typ": [203, 366], "criterion_reduce_typ": 203, "resume_from_pruned_checkpoint": 203, "similiar": 203, "weightpruningconfig": 203, "pruning_config": [203, 215, 216, 222, 350, 384], "snip_momentum": 203, "4x1": [203, 355, 364, 374], "global": 203, "98": [203, 376], "exp": [203, 366, 373, 378], "linear": [203, 333, 347, 366, 369, 372], "ce": [204, 333, 347], "loss_weight_ratio": [204, 347], "layer_map": [204, 347], "distillationcriterionmod": 204, "restor": [205, 348], "sample_length_configur": 205, "max_seq_length": [205, 206], "num_hidden_lay": 205, "layer_config": [205, 227, 228], "length_drop_prob": 205, "length_drop_ratio": 205, "min_length": 205, "hidden": [205, 227, 228, 333, 367], "truncat": [205, 346], "less": [205, 334, 347, 356, 370, 374, 384], "than": [205, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 355, 356, 357, 365, 370, 372, 377, 378, 385], "min": [205, 222, 385], "sample_layer_configur": 205, "layer_dropout": 205, "depend": [205, 212, 344, 346, 351, 352], "paramat": 205, "bound": 205, "kept": 205, "evolust": 206, "evolustionari": 206, "approx_ratio": 206, "12": [206, 345, 351, 352, 355, 362, 368, 372, 375, 376, 378], "l": [206, 333, 347], "384": [206, 333, 356, 362, 376], "approxim": [206, 373], "invers": [206, 373], "store2str": 206, "gene": 206, "mac": 206, "score": [206, 227, 228, 383], "parent": 206, "parmat": 206, "lower_constraint": 206, "upper_constraint": 206, "eval_metr": 206, "evolutionari": [206, 222], "load_stor": 206, "store_fil": 206, "save_stor": 206, "get_stor": 206, "set_lower_constraint": 206, "setter": [206, 227, 228], "lower": [206, 232, 374, 382, 385], "set_upper_constraint": 206, "upper": [206, 366], "save_popul": 206, "population_fil": 206, "convex_hul": 206, "pareto_fronti": 206, "add_gen": 206, "rai": 206, "packag": [207, 210, 314, 345, 346], "drop_and_restore_util": [207, 208], "mixtur": 208, "auto_distil": [208, 210, 333], "basic_na": [208, 213], "get_throughput": [208, 224], "utility_tf": [208, 224], "optimizer_tf": 208, "trainer": [208, 215, 331, 346, 348, 349, 350], "handl": [209, 222, 227, 228, 313, 322, 333, 360, 368, 369], "both": [209, 222, 227, 228, 343, 345, 350, 370, 372, 377, 378, 379, 381, 385], "model_build": [209, 212, 216, 222, 333], "conf_fname_or_obj": [209, 212, 214], "design": [209, 222, 353, 365, 366, 377, 389], "three": [209, 219, 220, 221, 222, 333, 346, 353, 357, 361, 372, 373, 384, 385], "major": [209, 222, 333, 364, 370, 371, 373, 374, 385], "explor": [209, 222, 333, 350], "compress": [209, 222, 314, 333, 347, 350, 364, 368, 370, 374, 377, 385], "discov": [209, 222, 333], "potenti": [209, 222, 324, 333, 344, 371], "measur": [209, 222, 333, 334, 347, 363, 381, 382, 384, 385], "hardwar": [209, 222, 333, 344, 347, 375, 377], "etc": [209, 222, 333, 347, 355], "select": [209, 222, 227, 228, 333, 366, 378], "best": [209, 212, 222, 333, 343, 348], "res_save_path": [209, 212], "model_cl": [209, 216, 222, 333], "found": [209, 212, 346, 352, 353, 374], "estim": [209, 212, 355, 374], "load_search_result": 209, "init_by_cfg": [209, 212], "create_distil": 209, "optimizedmodel": 211, "from_pretrain": [211, 227, 228, 334, 346, 350, 383], "function": [211, 212, 215, 216, 219, 222, 321, 322, 323, 333, 347, 353, 356, 357, 360, 361, 365, 366, 378, 381, 384, 385], "classmethod": [211, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "intel": [211, 232, 313, 334, 344, 345, 350, 351, 352, 353, 354, 362, 364, 375, 376, 380, 382, 383, 384, 385, 386], "compressor": [211, 216, 314, 334, 346, 382, 385], "repositori": [211, 346], "hug": [211, 314, 346, 358], "face": [211, 314, 315, 343, 346, 358], "hub": [211, 383], "directori": [211, 215, 358, 377], "host": 211, "cache_dir": 211, "download": [211, 227, 228, 386], "force_download": 211, "forc": 211, "re": [211, 368], "overrid": [211, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 360], "resume_download": 211, "incomplet": 211, "attempt": 211, "resum": [211, 222], "branch": [211, 378], "tag": 211, "commit": [211, 343, 379], "sinc": [211, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 347, 370, 371, 373], "we": [211, 212, 228, 340, 343, 345, 346, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 381, 382, 383, 385, 393], "git": [211, 345, 346, 351, 352, 354], "system": [211, 346, 352], "artifact": 211, "huggingfac": [211, 232, 346, 359, 381, 383], "allow": [211, 334], "q_model": 211, "basicna": 212, "conf_fnam": 212, "obj": [212, 214], "common": [214, 343, 346, 385], "nasbas": 214, "orchestr": [215, 222], "orchestrate_optim": [215, 222], "compon": [215, 222, 365, 380], "experiment": [215, 222, 366], "callabl": [215, 216, 222, 333], "train_func": [215, 216, 222, 333], "saved_result": [215, 346], "aggreg": 215, "schedul": [215, 222, 333, 338, 363, 391], "save_model": [215, 231, 346], "json": [215, 232, 345], "pytorch_model": 215, "init_quant": [215, 216, 222, 365], "quant_config": [215, 216, 222, 346, 350, 385], "calib_func": 215, "calib_dataload": [215, 222], "prepar": [215, 216, 227, 228, 345, 355, 357, 360, 365, 366, 374, 385], "invok": [215, 216], "_inc_quant": 215, "calibr": [215, 222, 385], "init_prun": [215, 216, 222], "init_distil": [215, 216, 222], "distillation_config": [215, 216, 222, 347, 350], "teacher_model": [215, 216, 222, 333, 347, 350], "teacher": [215, 216, 333, 347, 348], "tfoptim": [216, 333, 347], "pretrainedmodel": [216, 222, 333], "training_args_tf": 216, "tftrainingargu": 216, "train_dataset": [216, 333, 346, 350], "eval_dataset": [216, 333, 346, 350], "compute_metr": [216, 333, 346], "task_typ": [216, 231], "task_id": [216, 231], "entri": [216, 222, 227, 228, 380], "techniqu": [216, 346, 348, 350, 385], "builtin_eval_func": [216, 222], "saved_model": 216, "quantized_model_path": 216, "larger": [216, 222], "model_builder_builtin": [216, 222, 333], "arch_para": [216, 222], "built": [216, 333, 382], "builder": [216, 333], "autodistillation_config": [216, 222, 333], "build_train_func": 216, "infer_framework_load_model": 217, "autoconfig": [217, 346, 350, 383], "model_class": 217, "model_kwarg": [217, 227, 228, 383], "config_file_path": 219, "pruner_info": 219, "update_config": 219, "read": [219, 346, 354], "pass": [219, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 365, 366, 383, 385], "current": [219, 220, 221, 355, 365, 366, 367, 369, 370, 372, 377, 378], "get_sparsity_ratio": 219, "elementwise_over_matmul_gemm_conv": 219, "zero": [219, 366, 367, 369, 370, 374, 384], "elementwise_over_al": 219, "blockwise_over_matmul_gemm_conv": 219, "on_train_begin": 219, "implement": [219, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 338, 346, 353, 356, 357, 361, 363, 364, 365, 367, 369, 370, 371, 372, 373, 375, 378, 391], "begin": [219, 228, 333, 365, 366], "ensur": [219, 370], "on_epoch_begin": 219, "on_step_begin": 219, "local_step": 219, "on_before_optimizer_step": 219, "on_step_end": 219, "on_epoch_end": 219, "on_train_end": 219, "phase": [219, 347, 384], "on_before_ev": 219, "on_after_ev": 219, "on_after_optimizer_step": 219, "pruningmod": 220, "prunerconfig": [220, 350], "update_frequ": 220, "prune_typ": [220, 350, 384], "per_tensor": 220, "quantizationmod": 221, "easili": [222, 364, 365], "finetun": [222, 346, 348, 350, 383], "basetrain": 222, "builtin_train_func": 222, "automativ": 222, "low": [222, 346, 350, 364, 371, 373, 382, 385, 394], "achiev": [222, 346, 367, 382], "point": [222, 227, 228, 333, 357, 365, 366, 370, 373, 385], "automat": [222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 345, 355, 356, 357, 365, 378], "pruningconf": 222, "smaller": [222, 347, 370, 384], "config_list": 222, "optimizt": 222, "create_optimizer_builtin": 222, "resume_from_checkpoint": 222, "optuna": 222, "ignore_keys_for_ev": 222, "tor": 222, "checkpoint": [222, 227], "present": [222, 227, 373], "state": [222, 227, 228, 346, 362, 376], "hyperparamet": [222, 333], "dure": [222, 354, 370, 374, 379, 382, 384, 385], "keyword": 222, "hide": [222, 227, 228], "deprec": [222, 227, 228], "training_step": 222, "inject": [222, 366], "being": [222, 370], "fed": 222, "most": [222, 346, 357, 361, 365, 366, 367, 372, 383], "expect": [222, 227, 228, 343, 344, 374, 382], "label": [222, 227, 228, 232, 345, 379, 383], "training_step_length_adapt": 222, "compute_loss": 222, "return_output": 222, "By": [222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 354], "nas_config": 222, "baseic": 222, "callabel": 222, "auto_distil_evaluation_loop": 222, "prediction_loss_onli": 222, "ignore_kei": 222, "metric_key_prefix": 222, "eval": [222, 333, 381], "trainer_util": 222, "evalloopoutput": 222, "work": [222, 313, 366, 383], "doe": [222, 353, 365, 366, 367, 368, 369, 372, 378], "avoid": [222, 227, 228, 361, 364, 366, 370, 372, 373, 378], "memori": [222, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 382, 385], "huge": 222, "prefix": [222, 378], "export_to_onnx": [222, 346, 349], "tranfer": 222, "paramert": 222, "export_to_fp32_onnx": 222, "save_path": [222, 349], "opset_vers": [222, 349], "14": [222, 349, 362, 368, 375, 376], "do_constant_fold": [222, 349], "verbos": [222, 349], "export": [222, 346, 354, 355, 358, 383, 389], "fold": [222, 378], "export_to_bf16_onnx": 222, "export_to_int8_onnx": 222, "quant_format": [222, 349], "s8s8": [222, 349, 370], "sample_s": 222, "calibrate_method": 222, "minmax": 222, "scale_map": [222, 346], "export_to_jit": 222, "set_dynamic_config": [222, 350], "dynamic_config": [222, 350], "run_evolutionary_search": 222, "nlptrainer": [222, 346, 347, 350, 384, 385], "nlpseq2seqtrain": 222, "special": [223, 366, 372], "trigger": [223, 344], "greater_is_bett": [225, 229, 333, 350, 381, 382, 385], "is_rel": [225, 350, 381, 385], "01": [225, 350, 376, 381, 385], "weight_ratio": [225, 229, 381, 382, 385], "modeling_bert_dynam": 226, "modeling_roberta_dynam": 226, "bert": [227, 333, 346, 347, 348, 354, 355, 356, 359, 361, 362, 365, 370, 371, 372, 373], "load_tf_weights_in_bert": 227, "tf_checkpoint_path": 227, "bertembed": [227, 228], "posit": [227, 228, 343, 346, 350, 356, 361, 378, 383], "token_typ": 227, "forward": [227, 228, 333, 355, 360, 385], "longtensor": [227, 228], "token_type_id": [227, 228], "position_id": [227, 228], "inputs_emb": [227, 228], "floattensor": [227, 228], "past_key_values_length": [227, 228], "bertselfattent": 227, "position_embedding_typ": [227, 228], "transpose_for_scor": [227, 228], "hidden_st": [227, 228], "attention_mask": [227, 228], "head_mask": [227, 228], "encoder_hidden_st": [227, 228], "encoder_attention_mask": [227, 228], "past_key_valu": [227, 228], "output_attent": [227, 228], "bertselfoutput": 227, "bertattent": 227, "prune_head": [227, 228], "bertintermedi": 227, "intermedi": [227, 333, 353, 358, 361, 374, 385], "bertoutput": 227, "bertlay": 227, "output_length": [227, 228], "always_keep_cls_token": [227, 228], "feed_forward_chunk": [227, 228], "attention_output": [227, 228], "feed": [227, 228, 347, 354], "chunk": 227, "bertencod": 227, "encod": [227, 228, 333, 355, 361], "use_cach": [227, 228], "output_hidden_st": [227, 228], "return_dict": [227, 228], "modeling_output": [227, 228], "basemodeloutputwithpastandcrossattent": [227, 228], "bertpool": 227, "pooler": [227, 228], "bertpredictionheadtransform": 227, "bertlmpredictionhead": 227, "bertonlymlmhead": 227, "mask": [227, 228, 324, 348, 365, 366, 368, 370, 373], "sequence_output": 227, "bertonlynsphead": 227, "pooled_output": 227, "bertpretraininghead": 227, "bertpretrainedmodel": 227, "abstract": [227, 228], "simpl": [227, 228, 346, 351, 354, 365, 373, 383], "bertforpretrainingoutput": 227, "bertforpretrain": 227, "sum": [227, 334, 347, 355, 371, 373, 374, 378], "classif": [227, 228, 314, 333, 346, 347, 348, 359, 383], "prediction_logit": [227, 228], "sequence_length": [227, 228], "vocab_s": [227, 228], "vocabulari": 227, "seq_relationship_logit": 227, "continu": [227, 364, 367, 371, 372], "hidden_s": [227, 228, 333], "plu": 227, "num_head": [227, 228], "averag": [227, 334, 346, 355], "bertmodel": 227, "add_pooling_lay": [227, 228], "behav": [227, 228], "well": [227, 228, 349, 385, 386], "decod": [227, 228, 375], "case": [227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 347, 348, 355, 356, 364, 366, 367, 368, 378, 379], "cross": [227, 228], "ad": [227, 228, 353, 357, 361, 365, 374, 378, 383], "describ": [227, 228, 323, 345, 367, 369, 372, 378, 381, 382], "ab": [227, 385], "1706": [227, 362, 376], "03762": 227, "ashish": [227, 228], "vaswani": [227, 228], "noam": [227, 228], "shazeer": [227, 228], "niki": [227, 228], "parmar": [227, 228], "jakob": [227, 228], "uszkoreit": [227, 228], "llion": [227, 228], "jone": [227, 228], "aidan": [227, 228], "gomez": [227, 228], "lukasz": [227, 228], "kaiser": [227, 228], "illia": [227, 228], "polosukhin": [227, 228], "is_decod": [227, 228], "add_cross_attent": [227, 228], "get_input_embed": [227, 228], "getter": [227, 228], "set_input_embed": [227, 228], "set_length_config": [227, 228], "set_output_attent": [227, 228], "basemodeloutputwithpoolingandcrossattent": [227, 228], "pad": [227, 228, 334, 346, 355, 370, 374, 378], "indic": [227, 228, 324, 361, 365, 366, 372, 374, 378, 381], "n_layer": [227, 228], "embed_size_per_head": [227, 228], "precomput": [227, 228], "speed": [227, 228, 353, 357], "up": [227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 353, 355, 357, 366, 378], "decoder_input_id": [227, 228], "those": [227, 228, 372, 384, 385], "past": [227, 228], "instead": [227, 228, 367], "get_output_embed": [227, 228], "set_output_embed": [227, 228], "new_embed": [227, 228], "next_sentence_label": 227, "legaci": [227, 228], "berttoken": 227, "uncas": [227, 333, 346, 348, 350, 358, 383], "hello": [227, 228], "my": [227, 228], "dog": [227, 228], "cute": [227, 228], "return_tensor": [227, 228, 334, 346, 350], "pt": [227, 228, 334, 346, 350, 383], "bertlmheadmodel": 227, "causallmoutputwithcrossattent": [227, 228], "prepare_inputs_for_gener": [227, 228], "bertformaskedlm": 227, "maskedlmoutput": [227, 228], "bertfornextsentencepredict": 227, "nextsentencepredictoroutput": 227, "prompt": 227, "itali": 227, "pizza": 227, "serv": 227, "formal": 227, "restaur": 227, "unslic": 227, "next_sent": 227, "sky": 227, "blue": 227, "shorter": 227, "wavelength": 227, "light": 227, "logit": [227, 228, 333, 346, 347, 350, 354], "wa": 227, "bertforsequenceclassif": 227, "sequenceclassifieroutput": [227, 228], "regress": [227, 228, 345], "num_label": [227, 228, 346, 350], "entropi": [227, 228, 333], "bertformultiplechoic": 227, "choic": [227, 228, 348], "multiplechoicemodeloutput": [227, 228], "num_choic": [227, 228], "dimens": [227, 228, 333, 347, 356, 369, 370, 372, 374, 378], "bertfortokenclassif": 227, "tokenclassifieroutput": [227, 228], "bertforquestionansw": 227, "question": [227, 343, 344, 346, 348, 368], "answer": [227, 228, 343, 348], "start_posit": [227, 228], "end_posit": [227, 228], "questionansweringmodeloutput": [227, 228], "span": [227, 228], "clamp": [227, 228], "account": [227, 228, 343], "expand_gath": [227, 228], "dim": [227, 228, 354, 360, 364, 370, 374, 378], "roberta": [228, 348], "robertaembed": 228, "tini": [228, 348], "tweak": 228, "create_position_ids_from_inputs_emb": 228, "directli": [228, 365, 368, 370, 371], "sequenti": [228, 357, 365, 366, 369], "robertaselfattent": 228, "robertaselfoutput": 228, "robertaattent": 228, "attenion": 228, "robertaintermedi": 228, "intermidi": 228, "robertaoutput": 228, "robertalay": 228, "robertaencod": 228, "roberata": 228, "robertapool": 228, "robertapretrainedmodel": 228, "update_keys_to_ignor": 228, "del_keys_to_ignor": 228, "robertamodel": 228, "_": [228, 333, 345, 347, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 365, 366, 370, 371, 372, 373, 377, 378, 381, 382, 383, 384, 385], "robertaforcausallm": 228, "robertatoken": 228, "robertaconfig": 228, "robertaformaskedlm": 228, "robertalmhead": 228, "featur": [228, 314, 333, 342, 344, 346, 347, 358, 361, 364, 371, 375, 383, 386, 395], "robertaforsequenceclassif": 228, "robertaformultiplechoic": 228, "robertafortokenclassif": 228, "robertaclassificationhead": 228, "robertaforquestionansw": 228, "quanstion": 228, "create_position_ids_from_input_id": 228, "padding_idx": 228, "non": [228, 369, 372, 374, 378, 379], "symbol": 228, "fairseq": 228, "make_posit": 228, "models": [229, 348, 382], "distributed_init": [230, 231], "gloo": 230, "world_siz": 230, "rank": 230, "init_method": 230, "master_addr": 230, "127": [230, 355, 375, 376, 385], "master_port": 230, "12345": 230, "distibut": 230, "tfdataload": 231, "worker_address": 231, "worker": 231, "address": [231, 314, 343, 365, 371], "treat": [231, 353], "chief": 231, "get_filepath": 231, "base_dirpath": 231, "folder": [231, 352, 353, 354, 355, 356, 358], "keras2savedmodel": 231, "kera": 231, "augment": [232, 234, 389], "extens": [232, 344, 345, 350, 351, 352, 353, 354, 380, 382, 383, 384, 386], "blob": 232, "md": [232, 355, 358], "dataaugment": [232, 345], "augmenter_typ": [232, 345], "wai": [232, 346, 355, 356, 357, 361, 364, 366, 370, 372, 375], "enhanc": [232, 350, 369], "textgenerationaug": [232, 345], "keyboardaug": [232, 345], "aug": [232, 314, 345], "input_dataset": [232, 345], "origin_data": 232, "output_path": [232, 345], "join": [232, 345], "result_path": [232, 345], "test1": [232, 345], "cv": [232, 345], "augmenter_argu": [232, 345], "gpt2": [232, 345], "medium": [232, 314, 345, 346, 379], "data_aug": [232, 345], "text_generation_augment": 232, "raw_dataset": [232, 345, 346, 350], "No": [232, 348], "glue": [232, 345, 346], "sst2": [232, 334, 345, 346, 348, 355, 359], "eo": [232, 345], "k": [232, 324, 345, 356, 365, 367, 368, 369, 370, 372, 373, 374, 376, 378], "p": [232, 345, 346], "top_p": 232, "effect": [232, 314, 345, 346, 353, 378], "tend": 232, "toward": [232, 343], "greedi": 232, "repetition_penalti": 232, "primarili": 232, "ctrl": [232, 345, 348], "num_return_sent": 232, "entir": [232, 355, 364, 370, 371, 384], "num_sampl": 232, "condit": [232, 345, 356, 357, 380], "stop_token": 232, "mit_data_augment": 232, "nlpaug": [232, 234, 345], "librari": [232, 234, 338, 344, 365, 366, 370, 391], "help": [232, 234, 345, 346, 361, 365, 377], "machin": [232, 234, 345, 378], "learn": [232, 234, 314, 345, 358, 366, 382, 385], "project": [232, 234, 343, 344, 345], "makcedward": [232, 234], "suffix": 232, "csv": [232, 345], "column_nam": 232, "sentence1": 232, "sentence2": 232, "data_augment": [233, 345], "augmentertyp": 234, "enumer": [234, 324], "get_augmenter_from_typ": 234, "aug_typ": 234, "augment_typ": 234, "testaddclstoken": 237, "methodnam": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "runtest": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "whose": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 333, 361], "singl": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 367, 372], "code": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 323, 324, 346, 350, 351, 353, 356, 366, 367, 368, 369, 370, 375, 378, 380], "itself": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 375], "place": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 366, 371, 384], "fixtur": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "testcas": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "constructor": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 360], "author": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 380], "deconstruct": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "setup": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 345, 346, 351, 353], "teardown": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "respect": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343, 357, 358], "necessari": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343, 360, 374, 378], "__init__": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 353], "alwai": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 361, 370, 379], "chang": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 344, 353, 364, 365, 374, 379, 380], "signatur": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "failureexcept": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "determin": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343, 356, 375], "fail": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "deem": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343], "rather": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 357, 365], "longmessag": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "long": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 361], "messag": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "repr": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "failur": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "explicit": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 322, 343, 360, 366], "maxdiff": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "diff": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "difflib": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "look": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 353, 355, 366, 367], "individu": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 343], "setupclass": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "hook": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "teardownclass": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "testaddembed": 238, "testattentionreshap": [239, 240, 289, 292], "testtorchmodel": [241, 257], "testbinaryop": 242, "testtorchop": [243, 245, 252, 256, 265, 266, 268, 270, 271, 280, 283, 285, 294, 295, 297, 302, 306], "testcastto": 244, "testconvreshap": 246, "testdecoderattnreshap": 247, "testdispatchertuningacc": 248, "testdispatchertuningthroughput": 249, "testdynamicquant": 250, "testelectra": 251, "testembeddingbag": 253, "testexecutionopt": [254, 259], "testfwk": 255, "testgraphdispatch": 258, "testinsertinputouputdata": 260, "testissupportedonnxgraph": 261, "testlastlayershap": 262, "testlayernormwithreducemean": [263, 291, 293], "testlayernormwithtranspos": 264, "testtorchlinear": 267, "testmain": 269, "testmatmulwithbiasrelu": 272, "testmatmulwithbiassigmoid": 273, "testmatmulwithbiastanh": 274, "testmergedembeddingbag": 275, "testonnxutil": 277, "testoperatoradaptor": 278, "testop": 279, "testpaddingsequ": 281, "testpatterndispatch": 282, "testpositionembed": 284, "testprimitivecacheacc": 286, "testprimitivecachethroughput": 287, "testqkvmerg": 288, "testquantonnxexecut": 290, "teststartendlogit": 296, "testtextencod": 298, "testtextencoderbf16": 299, "testtfutil": 300, "testtokentypeembed": 301, "testtransposebatchmatmul": 303, "testunet": 304, "testunetbf16": 305, "testvaedecod": 307, "testvaedecoderbf16": 308, "testweightsharingacc": 309, "testweightsharingdispatchertuningacc": 310, "testweightsharingdispatchertuningthroughput": 311, "testweightsharingthroughput": 312, "center": 313, "resolv": 313, "guidelin": 313, "innov": [314, 346], "toolkit": [314, 346, 348], "particular": 314, "4th": [314, 346], "xeon": [314, 346, 348, 351, 364, 373, 376, 380, 385], "scalabl": [314, 346, 348, 351, 365], "processor": [314, 346, 348, 351, 362, 376], "sapphir": [314, 346, 351], "rapid": [314, 346, 351], "codenam": 314, "seamless": [314, 346], "experi": [314, 343, 346, 368, 373, 374], "extend": [314, 346, 367], "leverag": [314, 333, 346, 347, 350], "advanc": [314, 333, 343, 346, 363, 375], "softwar": [314, 346, 380], "uniqu": [314, 346], "awar": [314, 346], "runtim": [314, 324, 346, 375, 378, 385], "releas": [314, 346, 390], "neurip": [314, 346], "2022": [314, 346, 362, 376], "paper": [314, 346, 350], "distilbert": [314, 333, 346, 348, 350, 358, 383], "quala": [314, 346, 348, 350], "minilm": [314, 346, 348, 350], "2021": [314, 346], "onc": [314, 346, 355, 373], "pre": [314, 346, 357, 367, 377], "diffus": [314, 346, 348, 370], "j": [314, 346, 348, 352, 353, 354, 363, 369, 374, 375, 378], "6b": [314, 346, 348], "neox": [314, 346], "bloom": [314, 346], "176b": [314, 346], "t5": [314, 346, 348], "flan": [314, 346], "workflow": [314, 346, 347, 356, 358, 372], "setfit": [314, 346], "sentiment": [314, 346], "analysi": [314, 346], "dlsa": [314, 346], "neuralchat": [314, 346], "chatbot": [314, 346], "through": [314, 334, 346, 353, 365, 368, 369, 370, 375], "effici": [314, 346, 350], "fine": [314, 345, 346, 384, 385], "peft": [314, 346], "domain": [314, 338, 346, 363, 391], "blog": [314, 346], "publish": [314, 343, 346, 380], "april": 314, "2023": [314, 380], "tech": 314, "artifici": 314, "intellig": 314, "ai": [314, 346], "With": [314, 373, 385], "mlperf": 314, "bar": 314, "5x": 314, "commun": [314, 343], "mleffici": [314, 346], "dec": [314, 346], "nov": [314, 346], "coher": [314, 371], "novemb": 314, "alibaba": 314, "deep": [314, 345, 346, 358, 366, 382, 385], "purif": 314, "kernel": [315, 324, 342, 354, 355, 360, 362, 364, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 395], "namespac": [321, 322, 323, 324], "jd": [321, 322, 323, 324, 366, 378], "meet": [321, 322, 323, 324, 353, 368, 370, 374], "convent": [321, 322, 323, 324], "refactor": [321, 322, 323, 324], "engine_t": 321, "cpu_engine_t": 321, "gpu_ocl_engine_t": 321, "inlin": [321, 322, 323, 365], "engine_kind": [321, 323, 366], "runtime_kind": [321, 323], "virtual": [321, 322, 323, 360, 365, 366], "get_engine_kind": 321, "get_runtime_kind": 321, "std": [321, 322, 323, 324, 363, 365, 366], "vector": [321, 322, 323, 324, 360, 363, 365, 366, 367, 369, 372, 374], "impl_list_item_t": [321, 322], "get_implementation_list": 321, "operator_desc": [321, 322, 325, 363], "op_desc": [321, 322, 363, 366], "create_kernel": 321, "shared_ptr": [321, 322, 360], "kernel_t": [321, 322], "stream_t": 321, "create_stream": 321, "create_memory_storag": 321, "memory_storage_t": 321, "protect": [321, 322], "engine_kind_": [321, 323], "runtime_kind_": [321, 323], "cpu_inst": 321, "null_inst": 321, "storag": 321, "empty_list": 321, "templat": [322, 324], "typenam": [322, 324], "arg_t": 322, "void": [322, 323, 324, 360, 363, 365, 366, 367], "proxy_bas": 322, "hpp": [322, 323, 324, 356, 363, 378], "proxi": [322, 338, 363, 370, 391], "anyth": 322, "similar": [322, 357, 365, 368, 369, 371, 372, 384], "onednn": [322, 360], "struct": [322, 324, 365, 366], "oneapi": [322, 360, 375], "dnnl": [322, 356, 360], "136": 322, "reset_sp": 322, "sp": 322, "get_sp": 322, "create_proxy_object": 322, "result_ref": 322, "privat": [322, 323, 343, 354, 360, 364, 365, 366, 371], "member": [322, 323, 324, 343, 360, 365, 366], "data_handle_": 322, "kernel_desc_proxi": 322, "kernel_desc_t": 322, "real": [322, 356, 371, 372, 375], "attention_desc": 322, "dynamic_quant_desc": 322, "dynamic_quant_matmul_desc": 322, "eltwiseop_desc": 322, "gather_desc": 322, "groupnorm_desc": 322, "layernorm_ba_desc": [322, 365], "layernormalized_spmm_desc": 322, "logsoftmax_desc": 322, "mha_dense_desc": 322, "slice_desc": 322, "softmax_desc": 322, "sparse_matmul_desc": [322, 363], "transpose_matmul_desc": 322, "transpose_mha_desc": 322, "kernel_kind": [322, 323, 366], "impl_list_": 322, "nullptr": [322, 324, 365], "kernel_proxi": 322, "dynamic_qu": 322, "dynamic_quant_matmul": 322, "eltwiseop": [322, 365, 366], "layernorm_ba": 322, "layernormalized_spmm": 322, "mha_dens": [322, 378], "slice": [322, 370], "sparse_matmul": [322, 375], "transpose_matmul": 322, "transpose_mha": 322, "kdp": 322, "rt_data": [322, 363], "size_t": [322, 324, 356, 366], "get_workspace_s": 322, "kd": [322, 333, 347], "deriv": [322, 371, 372], "sparse_matmul_desc_t": 322, "sparse_matmul_t": 322, "descriptor": [323, 360, 378], "ker_kind": [323, 363, 366], "kernel_prop": [323, 366], "ker_prop": [323, 363, 366], "eng_kind": [323, 363, 366], "tensor_desc": [323, 366], "ts_desc": [323, 363, 366], "unordered_map": [323, 366], "postop_attr": [323, 324, 366], "apply_postops_list": [323, 366], "rh": [323, 372], "set_binaryop_list": [323, 365], "binaryop_attr": [323, 324, 365], "binaryop_list": [323, 365], "uint64_t": 323, "impl_nthr": 323, "get_binaryop_list": [323, 365], "dim_t": [323, 324], "tensor_shap": 323, "data_typ": [323, 324, 360, 365, 366, 378], "tensor_dtyp": 323, "format_typ": 323, "tensor_ftyp": 323, "ker_kind_": [323, 366], "ker_prop_": [323, 366], "forward_infer": [323, 360, 366], "undef": [323, 324, 365, 366], "impl_nthr_": [323, 366], "ts_descs_": [323, 366], "attrs_": [323, 366], "apply_postops_list_": [323, 366], "binaryop_list_": [323, 365], "enum": [324, 365, 366], "attention_io": 324, "merge_src": 324, "merge_dst": 324, "q_weight": 324, "k_weight": 324, "v_weight": 324, "q_bia": 324, "k_bia": 324, "v_bia": 324, "q_scale": 324, "k_scale": 324, "v_scale": 324, "reshape_input": 324, "q_k_src2": 324, "q_k_scale": 324, "qk_v_output_zero_point": 324, "qk_v_output_scal": 324, "ssd": [324, 366, 378], "eltwiseop_param_t": [324, 366], "element_num": [324, 366], "in_dt": 324, "out_dt": 324, "element_num_each_th": 324, "remain_el": 324, "eltwiseop_data_t": 324, "dst": [324, 360, 365, 366, 368, 369, 370, 373, 374, 378], "doxygenfil": 324, "gather_typ": 324, "spec_translnorm_typ": 324, "normal": [324, 365, 373, 392], "direct": 324, "layernorm_ba_param_t": 324, "input_dt": [324, 365, 378], "output_dt": [324, 378], "output2_dt": 324, "spec_typ": [324, 378], "row_num": 324, "col_num": 324, "process_col": [324, 365], "direct_process_row": 324, "process_batch_per_k": 324, "ker_per_batch": 324, "batch_num": 324, "thread_elt_offset": [324, 365], "split_output": 324, "layernorm_ba_data_t": 324, "dst2": 324, "process_row": 324, "anonym": 324, "ep": 324, "1e": 324, "matmul_param_t": 324, "m_tile": 324, "n_tile": 324, "matmul_fp8_param_t": 324, "bfloat16_t": 324, "weight_bf16": 324, "int8_t": 324, "weight_int8": 324, "float8_e4m3_t": 324, "weight_f8_e4m3": 324, "float8_e5m2_t": 324, "weight_f8_e5m2": 324, "uint8_t": [324, 365, 366], "weight_8bit": 324, "weight_typ": 324, "has_scale0": 324, "has_append_sum": [324, 378], "thread_num": 324, "matmul_data_t": 324, "src0": [324, 378], "src1": [324, 355, 365, 378], "src2": [324, 365, 378], "matmul_u8_data_t": 324, "zp": [324, 365], "matmul_fp8_data_t": 324, "mata": 324, "matb": 324, "matc": 324, "matd": 324, "mate": 324, "astep": 324, "bstep": 324, "cstep": 324, "dstep": 324, "kpo": 324, "matmul_io": 324, "io": [324, 360], "dst0": 324, "scale0": 324, "zp0": 324, "append_sum": 324, "matmul_io_max": 324, "mean_var_reduce_param_t": 324, "bm": 324, "bn": 324, "mean_var_reduce_data_t": 324, "mean_in": 324, "var_in": 324, "mean_out": 324, "var_out": 324, "spec_softmax_typ": 324, "lut": [324, 363, 365, 366, 378], "softmax_param_t": 324, "sepc_typ": 324, "scalar_num": 324, "vec_align_len": 324, "vec_tail_len": 324, "vec_num_per_thr": 324, "vec_num_tail_thr": 324, "get_lut_exp_attr": 324, "softmax_data_t": 324, "tmp": [324, 366, 368, 370, 373], "process_vec_num": 324, "typedef": 324, "amx_params_t": 324, "amx_bf16_params_t": 324, "amx_int8_params_t": 324, "amx_inputs_t": 324, "amx_bf16f32_inputs_t": 324, "amx_bf16bf16_inputs_t": 324, "sparse_schem": 324, "scenario": [324, 345, 370], "spmm_vnni": 324, "sparse_x_dens": 324, "dense_x_spars": 324, "sparse_x_spars": 324, "subfunc_level": [324, 378], "non_kdim": 324, "kdim": 324, "subfunc_level_max": [324, 378], "variabl": [324, 357, 360, 378, 379], "constexpr": 324, "wei": [324, 370, 378], "todo": [324, 387], "yi": 324, "conflict": 324, "dst_m1": 324, "dst_m2": 324, "work_spac": 324, "vnni_param_t": 324, "spmm_type": 324, "primit": [324, 360], "jit_domain": 324, "has_bia": 324, "output_typ": [324, 355], "tile_w": 324, "sub_func": 324, "im_start": 324, "blocksiz": 324, "indptr": 324, "welford": [324, 371], "dst_t": 324, "vnni_data_t": 324, "ptr_dens": 324, "int32_t": 324, "ptr_bia": 324, "ptr_dst": 324, "ptr_scale": 324, "ptr_dst_m1": 324, "ptr_dst_m2": 324, "num_tilem": 324, "tilem": 324, "tilen": 324, "16": [324, 334, 348, 349, 354, 362, 368, 369, 370, 371, 374, 375, 376, 378, 385], "blocks_per_group": 324, "64": [324, 333, 351, 355, 362, 370, 372, 373, 375, 376, 378], "sizeof": 324, "nnz_group": 324, "nrowptr": 324, "colidx": 324, "group_rowptr": 324, "same_src_dtyp": 324, "src_t": 324, "wgt_t": 324, "bia_t": 324, "avx512_fp32_params_t": 324, "int64_t": 324, "bsc_data_t": 324, "sparse_ptr": 324, "im_end": 324, "in_start": 324, "in_end": 324, "avx512_data_t": 324, "dens": [324, 355, 356, 361, 363, 374, 378, 384], "transpose_copy_param": 324, "srcptr": 324, "dstptr": 324, "srcstride": 324, "dststride": 324, "seq_vnni_copy_param": 324, "transpose_mha_step1_param": 324, "expsum": 324, "cfg": 324, "batchk": [324, 373], "sumstep": 324, "cbatchstep": 324, "scaleab": 324, "transpose_mha_step2_param": 324, "sumptr": 324, "transpose_mha_step3_param": 324, "scalec": 324, "zeropointc": 324, "transpose_mha_io": 324, "src_k": 324, "src_q": 324, "src_v": 324, "tmp2m": 324, "sl_pad": 324, "head_num": [324, 372, 378], "head_siz": [324, 372, 378], "seq_len": [324, 346, 354, 355, 359, 372, 378], "scale_q": 324, "scale_k": 324, "scale_v": 324, "scale_dst": 324, "zp_dst": 324, "transpose_mha_io_max": 324, "within": [333, 343, 369], "arch": 333, "proposit": 333, "propos": [333, 347, 364], "promis": [333, 369], "assess": 333, "128": [333, 346, 354, 355, 359, 362, 376, 378, 385], "advisor": 333, "ever": 333, "network": [333, 347, 353, 354, 355, 357, 369, 384, 385], "student": [333, 347, 348], "minim": [333, 347, 374], "done": [333, 347, 356, 370, 378, 385], "z": [333, 347], "distanc": [333, 347], "euclidean": [333, 347], "kullback": [333, 347], "leibler": [333, 347], "diverg": [333, 347], "term": [333, 347, 369, 372, 374, 380, 381, 382, 385], "assign": 333, "cal": 333, "sloss": 333, "mismatch": 333, "512": [333, 355, 369, 371, 374, 376, 378], "desir": [333, 355], "unmatch": 333, "agent": 333, "train_func_builtin": 333, "flash_distil": 333, "eval_func_builtin": 333, "els": [333, 334, 353, 360], "search_loop": 333, "model_arch_para": 333, "oob": 333, "246": 333, "intra_bottleneck_s": 333, "96": [333, 362, 376], "160": [333, 362, 375], "num_attention_head": 333, "intermediate_s": 333, "640": 333, "num_feedforward_network": 333, "mobilebert": [333, 347, 348], "kl": 333, "mse": 333, "best_model_arch": 333, "automodelforpretrain": 333, "higher_is_bett": 333, "10": [333, 345, 346, 351, 354, 355, 362, 368, 376, 378], "42": [333, 362, 376], "500": 333, "25000": 333, "mobilebert_distil": 333, "sgd": 333, "learning_r": 333, "001": 333, "mobilebert_na": 333, "5000": 333, "partial": 333, "pylint": [333, 344], "disabl": [333, 343, 362, 376, 378], "e1101": 333, "makedir": 333, "exist_ok": 333, "120": [333, 375], "240": 333, "eval_loss": [333, 350], "tfautomodelforsequenceclassif": 333, "inherit": [334, 347, 353, 360, 383, 384, 385], "adjust": [334, 360, 385], "physic": [334, 343, 372], "model_nam": [334, 383], "dataset_nam": 334, "autotoken": [334, 346, 383], "load_dataset": [334, 345, 346], "195": 334, "intel_extension_for_transform": [334, 346, 347, 350, 351, 353, 354, 356, 358, 361, 363, 378, 381, 382, 383, 384, 385], "summari": 334, "003": 334, "throughput": [334, 346, 362, 370], "5071": 334, "933": [334, 362], "guid": [337, 346, 347, 353, 366, 368, 390], "formerli": [338, 346, 351, 363, 391], "known": [338, 346, 363, 391], "sparselib": [338, 356, 363, 391], "high": [338, 346, 354, 363, 370, 371, 374, 391], "assembli": [338, 363, 367, 369, 374, 375, 391], "introduc": [340, 344, 364, 365, 366, 367, 368, 370, 372, 373, 374, 385, 393], "who": [340, 343, 366, 393], "might": [340, 357, 393], "profil": [340, 393, 394], "intruct": [340, 393], "met": [340, 393], "request": [340, 346, 393], "interest": 343, "foster": 343, "open": [343, 345, 354, 358], "welcom": [343, 344], "maintain": [343, 344, 346, 357, 386], "particip": [343, 367], "harass": 343, "free": [343, 365, 378], "everyon": 343, "regardless": 343, "ag": 343, "bodi": [343, 372], "ethnic": 343, "sex": 343, "gender": 343, "express": 343, "educ": 343, "socio": 343, "econom": 343, "statu": [343, 382, 385], "nation": 343, "person": 343, "appear": 343, "race": 343, "religion": 343, "sexual": 343, "orient": 343, "contribut": 343, "inclus": 343, "Being": 343, "viewpoint": 343, "gracefulli": 343, "critic": 343, "focus": 343, "what": [343, 365, 366, 372, 384], "show": [343, 346, 353, 354, 357, 358, 361, 368, 370, 372], "empathi": 343, "unaccept": 343, "imageri": 343, "unwelcom": 343, "troll": 343, "insult": 343, "derogatori": 343, "comment": 343, "polit": 343, "attack": 343, "electron": 343, "permiss": 343, "reason": [343, 357, 360, 371], "consid": [343, 356, 364, 366, 368, 379], "inappropri": 343, "profession": 343, "clarifi": 343, "take": [343, 347, 355, 357, 360, 365, 373, 374], "appropri": [343, 353, 365, 373], "fair": 343, "action": 343, "edit": 343, "reject": 343, "wiki": 343, "align": [343, 364, 366, 374], "ban": 343, "temporarili": 343, "perman": 343, "threaten": 343, "offens": 343, "harm": [343, 374], "offici": 343, "mail": 343, "post": [343, 355, 378], "via": [343, 365, 368, 375], "social": 343, "media": 343, "act": [343, 369], "appoint": 343, "onlin": [343, 346, 371], "offlin": [343, 368, 374, 385], "event": 343, "further": [343, 350, 356, 369], "abus": 343, "report": [343, 344, 346], "contact": [343, 386], "complaint": 343, "review": [343, 344], "investig": [343, 374], "circumst": 343, "team": 343, "oblig": 343, "confidenti": 343, "regard": 343, "incid": 343, "polici": [343, 390], "good": [343, 367, 368], "faith": 343, "temporari": [343, 372], "repercuss": 343, "leadership": 343, "faq": 343, "page": [343, 344, 346, 350], "improv": [344, 346, 355, 365, 367, 369, 370, 374, 385], "send": 344, "flake8": 344, "autopep8": 344, "clean": 344, "bug": [344, 346], "fix": [344, 356, 368], "jira": 344, "ticket": 344, "xxx": [344, 346], "risk": 344, "pr": [344, 378], "reproduc": 344, "submit": [344, 346], "reach": [344, 346], "intend": 344, "safe": 344, "collabor": 344, "adher": 344, "tool": [345, 346, 348, 355, 363, 378], "integr": [345, 394], "lab": 345, "pip": [345, 346, 351, 359], "clone": [345, 346, 351, 352, 353], "cd": [345, 346, 351, 352, 353, 354, 359, 363, 375, 378], "submodul": [345, 346, 351, 352, 354], "updat": [345, 346, 351, 352, 354, 371, 384], "recurs": [345, 346, 351, 352, 354, 361], "dev": 345, "data_fil": 345, "delimit": [345, 378], "asserttru": 345, "len": [345, 353, 354, 361, 372], "column": [345, 364, 369, 371, 374, 384], "conduct": 345, "deploy": [345, 346, 350, 356, 359], "ocraug": 345, "spellingaug": 345, "contextualwordembsforsentenceaug": 345, "xl": 345, "xlnet": [345, 348], "Not": [345, 369], "enough": [345, 370, 385], "rescu": 345, "natur": [345, 346, 348, 371], "sst": [345, 346, 348, 350, 383], "txt": [345, 346, 351, 354, 356, 359, 375], "w": [345, 354, 355, 356, 364, 367, 373], "fw": 345, "clm": [345, 348], "train_fil": 345, "validation_fil": 345, "model_dir": 345, "python3": [345, 352], "run_clm": 345, "do_train": 345, "do_ev": 345, "overwrite_output_dir": 345, "secondli": 345, "training_set": 345, "line": [345, 353, 356, 364, 371, 372, 374, 379], "repetit": 345, "penalti": 345, "platform": [346, 377, 385], "particularli": 346, "gen": [346, 366], "imag": [346, 348, 358, 361, 368, 374], "becom": [346, 357, 374], "wide": [346, 347, 366, 367, 385], "art": 346, "popular": 346, "visit": [346, 362, 376], "skylak": 346, "cascad": [346, 351], "lake": [346, 351], "ic": 346, "cooper": [346, 370], "seri": [346, 365, 368, 378], "hbm": 346, "develop": [346, 360], "product": [346, 362, 372, 376, 382, 385], "easi": [346, 356, 358], "rich": 346, "demonstr": [346, 348, 350, 372, 374], "extrem": [346, 350], "togeth": 346, "significantli": [346, 371, 373], "cento": [346, 351], "ubuntu": [346, 351, 362, 376], "04": [346, 348, 351, 362, 376], "window": [346, 352], "r": [346, 351, 359, 362, 376, 385], "succeed": 346, "grep": 346, "matrix": [346, 350, 364, 367, 368, 369, 371, 372, 373, 374, 378, 384, 388], "23": [346, 368, 376], "load_metr": 346, "np": 346, "automodelforsequenceclassif": [346, 350], "evalpredict": 346, "english": [346, 348, 350, 383], "lambda": 346, "label2id": [346, 350], "id2label": [346, 350], "neg": [346, 350, 378], "pred": 346, "argmax": [346, 350], "axi": [346, 353, 355, 372, 373], "label_id": 346, "q_config": [346, 350, 385], "eval_accuraci": [346, 347, 350, 384], "tmp_trainer": 346, "enable_executor": [346, 349], "neural_engin": [346, 350, 352, 353, 354, 355, 356, 358, 361, 363, 378], "set_log_fil": 346, "load_graph": 346, "dummydataload": 346, "compute_perform": 346, "reduc": [346, 360, 364, 365, 367, 369, 370, 371, 373, 374, 385], "glog_minloglevel": [346, 354, 359], "obtain": [346, 348, 355, 373], "input_model": [346, 355, 358, 359], "warm_up": 346, "p50": 346, "50": [346, 375], "p90": 346, "90": [346, 348, 355, 362], "p99": 346, "99": [346, 348, 376], "sec": [346, 362], "tutori": [346, 354], "resourc": [346, 347, 367], "catalog": 346, "brand": [346, 380], "claim": [346, 380], "properti": [346, 354, 380], "trademark": 346, "larg": [347, 348, 361, 362, 364, 367, 370, 371, 372, 378], "signific": 347, "expens": 347, "deploi": [347, 394], "power": [347, 348], "mobil": 347, "shown": [347, 356, 369, 373, 374], "produc": [347, 374], "instruct": [347, 357, 365, 368, 370, 373, 374, 375, 378, 385], "besid": [347, 366], "often": 347, "patient": 347, "compact": 347, "agnost": 347, "summar": [347, 348], "usual": [347, 357, 364, 374, 385], "1x1": [347, 356], "d_conf": [347, 350], "tune_metr": [347, 384], "metric_": 347, "classifi": 347, "distillation_conf": 347, "distilled_model": 347, "intermediatelayersloss": 347, "meanwhil": [348, 364], "posttrainingdynam": [348, 349, 385], "wikitext": 348, "10004": [348, 349], "xsum": 348, "cnn": 348, "cnn_dailymail": 348, "dm": 348, "lambdalab": 348, "sd": 348, "pokemon": 348, "mlm": 348, "plm": 348, "eleutherai": 348, "neo": 348, "125m": 348, "sshleifer": 348, "wip": [348, 368], "star": 348, "ehdwns1516": 348, "uncased_swag": 348, "swag": 348, "squad": 348, "valhalla": 348, "longform": 348, "4096": [348, 376], "squadv1": 348, "lvwerra": 348, "pegasu": 348, "samsum": 348, "textattack": [348, 358], "mrpc": [348, 358, 359], "echarlaix": 348, "acc91": 348, "d37": 348, "hybrid": 348, "elast": 348, "conll03": 348, "conll2003": 348, "small": [348, 356, 370, 372], "translat": 348, "wmt16": 348, "helsinki": 348, "opu": 348, "mt": [348, 377], "en": 348, "ro": 348, "quantizationawaretrain": [348, 349], "maskinun": 348, "distilgpt2": 348, "rocketknight1": 348, "dslim": 348, "ner": 348, "mb": 348, "f1": [348, 381], "gflop": [348, 376, 379], "speedup": 348, "compar": [348, 364, 367, 378, 385], "415": [348, 362], "47": [348, 362, 376], "88": [348, 362, 375, 376], "58": [348, 376], "56": [348, 375, 376], "35": [348, 362, 376], "1x": 348, "la": [348, 367], "minilmv2": 348, "115": 348, "89": [348, 376], "28": [348, 362, 368, 376], "76": [348, 375, 376], "33x": 348, "269": 348, "253": 348, "252": [348, 375], "202": 348, "104": 348, "34": [348, 376], "87": [348, 376], "11": [348, 351, 359, 368, 376], "44": [348, 355, 362, 375, 376], "49": [348, 361, 362, 376], "94x": 348, "84": [348, 376], "85": [348, 362, 376], "21x": 348, "315": 348, "251": [348, 376], "242": [348, 362, 376], "159": [348, 375], "142": [348, 376], "33": [348, 376], "86": [348, 376], "68": [348, 375, 376], "41": [348, 362, 376], "55": [348, 375, 376], "82x": 348, "amount": [348, 367], "torchprofil": 348, "platinum": [348, 362, 376], "8280": 348, "unstructur": [348, 384], "lasso": [348, 384], "nbsp": [348, 362, 376], "qnli": 348, "qqp": 348, "mnli": 348, "v1": 348, "tinybert_general_4l_312d": 348, "distilroberta": 348, "cola": 348, "krishna2020": 348, "googl": 348, "wikipedia": 348, "prajjwal1": 348, "approch": 348, "pruneofa": 348, "patternlock": [348, 384], "bhadresh": 348, "savani": 348, "emot": 348, "fac": 348, "mini": [348, 355, 359, 362], "gchhablani": 348, "philschmid": 348, "l6": 348, "h384": 348, "moshew": [348, 359], "80": [348, 355, 362, 376], "1x4": [348, 374], "desigh": 349, "32": [349, 354, 362, 368, 369, 371, 372, 373, 374, 375, 376, 378], "bit": [349, 350, 364, 365, 371, 374, 385], "bfloat": 349, "fetch": [349, 364, 367], "flag": 349, "enable_bf16": 349, "bfloat16": 349, "qlinear": [349, 358], "u8s8": 349, "u8u8": 349, "highli": 349, "suggest": [349, 365], "quick": [350, 353], "p_conf": [350, 384], "reduct": [350, 369, 372], "accommod": 350, "budget": 350, "tradeoff": [350, 368], "dynamic_length_config": 350, "aim": [350, 353, 355, 357], "opportun": 350, "hw": 350, "sw": 350, "satisfi": [351, 361, 370], "success": 351, "recommend": [351, 353, 356, 359, 361, 371, 375], "protobuf": [351, 359], "nightli": 351, "conda": [351, 359], "visual": 351, "studio": 351, "compat": 351, "icelak": 351, "futur": [351, 358, 365, 366, 375], "ipex": [351, 385], "13": [351, 362, 368, 376], "linux": 352, "gcc": 352, "cmake": [352, 354, 363, 375, 378], "repo_path": 352, "mkdir": [352, 354, 363, 375, 378], "dpython_execut": 352, "dne_with_sparselib": [352, 378], "neural_engine_bin": 352, "neural_engine_pi": [352, 356], "cpython": 352, "37m": 352, "x86_64": 352, "gnu": 352, "libkernellib": 352, "libneural_engin": 352, "pure": [352, 366], "certain": [353, 361], "simplifi": [353, 357], "attach": [353, 361], "distilbert_bas": 353, "assum": [353, 361, 367], "command": [353, 354, 358, 379], "repo": [353, 378], "instal": [353, 390], "These": [353, 357, 361, 367, 373], "roughli": [353, 370], "divid": [353, 361, 364, 369, 370, 373, 379], "categori": [353, 355], "dst_shape": [353, 354, 360], "father": 353, "keep_dim": 353, "ax": [353, 372], "come": 353, "rewrit": 353, "_attr": 353, "successfulli": [353, 361], "forget": [353, 357, 360], "reinstal": 353, "enter": 353, "you_work_dir": 353, "noth": [353, 361], "wrong": [353, 361], "anoth": [353, 357, 375], "correctli": 353, "distil_bert_bas": 353, "pattern_mapping_config": 353, "div": [353, 357], "becaus": [353, 365, 368, 373, 385], "even": [353, 364], "delv": 353, "recogn": [353, 394], "put": [353, 354, 357], "namedtupl": 353, "__call__": 353, "retriev": 353, "actual": [353, 354, 371], "equival": [353, 374], "supported_pattern": 353, "influenc": [353, 357], "arbitrari": 353, "pattern_dict": 353, "new_node_nam": 353, "ret_old_nod": 353, "talk": 353, "denomin": 353, "numer": [353, 385], "stabil": 353, "_set_attr": 353, "ln_node_idx": 353, "finish": [353, 357, 359], "yourself": [353, 361], "seq": [354, 372], "bert_model": 354, "30522": 354, "1024": [354, 355, 356, 376, 378], "125018112": 354, "slightli": 354, "activ": [354, 358, 359, 364, 368, 369, 370, 373, 378, 385], "throught": 354, "numactl": 354, "bind": 354, "omp_num_thread": 354, "session": 354, "close": 354, "again": [354, 371], "nerual": 354, "cc": 354, "cmakelist": 354, "reus": [354, 370], "engine_integr": 354, "itrex": 354, "cp": 354, "nlp_executor": 354, "neural_engine_exampl": 354, "ne": 354, "root": 354, "ne_root": 354, "project_source_dir": 354, "link": [354, 360, 384], "lib": 354, "runtime_output_directori": 354, "add_execut": 354, "target_include_directori": 354, "boost_inc_dir": 354, "target_link_librari": 354, "cmake_thread_libs_init": 354, "gflag": 354, "dir": 354, "set_target_properti": 354, "analyz": 355, "let": [355, 360, 367, 368], "readm": [355, 358], "run_executor": [355, 359], "model_and_token": [355, 358, 359], "Of": [355, 361, 367], "cours": [355, 361, 367], "proflil": 355, "latanc": 355, "perf": [355, 374, 378, 379], "perfrom": 355, "chrome": 355, "tell": [355, 357, 365, 366], "inst": 355, "count": [355, 360], "pref": 355, "semi": 355, "70": [355, 362], "256x256": [355, 378], "settabl": 355, "256x1024": 355, "1024x256": 355, "gelu_tanh": [355, 360], "add_37": 355, "116": [355, 376], "641": 355, "00": 355, "075": 355, "0375": 355, "comparison": [355, 374], "185": 355, "801": 355, "693": 355, "366": 355, "content": 355, "part1": [355, 360], "modif": 355, "xlsx": 355, "titl": [355, 380], "model_infer": 355, "friendli": [355, 370, 371], "000": 355, "wall": 355, "durat": 355, "17": [355, 362, 368, 376], "138": 355, "iteration4": 355, "726": 355, "phrase": 355, "0m": 355, "permut": [355, 368, 372, 378], "perm": [355, 372], "add_284": 355, "028": [355, 376], "044": 355, "reshape_tim": 355, "004m": 355, "forward_tim": 355, "044m": 355, "input_tensor_nam": 355, "matmul_357": 355, "matmul_358": 355, "matmul_346": 355, "input_typ": 355, "f32": [355, 360], "output_tensor_nam": 355, "output_shap": 355, "append_op": 355, "src1_perm": 355, "try": [356, 385], "pictur": [356, 364, 377], "bring": [356, 369, 373, 374], "mainli": [356, 370, 371], "merg": [356, 361], "off": 356, "model_path": 356, "isa": [356, 363, 365, 370, 373, 374, 375], "int8_model_path": 356, "shape_0": 356, "shape_1": 356, "shape_2": 356, "enlarg": 356, "subsequ": [356, 370, 373], "remark": 356, "micro": [356, 364, 369, 374], "oc": [356, 378], "mk": 356, "kn": 356, "nhwc": 356, "nxhxw": 356, "h": 356, "nk": 356, "km": 356, "mmkmb": 356, "mmxmb": 356, "fulfil": 356, "along": [356, 369, 372, 374], "omp": 356, "higher": [356, 372, 374, 378, 385], "unrol": [356, 367, 369], "know": [356, 368], "disk": [356, 358], "dp": 356, "executionopt": 356, "enable_op_tun": 356, "execution_opt": 356, "engine_dispatch_t": 356, "workspac": 356, "tabl": [356, 366, 374], "row": [356, 367, 368, 370, 374, 384], "rest": [356, 357, 361, 372, 374], "hash": [356, 365], "kernel_config": [356, 378], "kernel_nam": [356, 378], "3025159985633461085": 356, "40": [356, 362], "14124194128933833351": 356, "thing": 356, "affect": [356, 370, 373, 379], "simul": [356, 374, 375], "warmup_it": 356, "num_iter": 356, "dispatch_table_file_root": 356, "file_root": 356, "script": [356, 358, 377], "prevent": 356, "imprecis": 356, "purpos": [357, 361, 365, 370], "realiz": 357, "suppli": [357, 361], "recognit": [357, 361], "embeddings_reshap": 357, "said": 357, "thought": 357, "st": 357, "nd": 357, "copi": [357, 372], "greater": [357, 381, 382], "sent": 357, "written": 357, "phenomenon": 357, "Its": 357, "situat": [357, 371], "nod": 357, "leav": [357, 372, 374, 378], "old_node_index": 357, "_get_pattern_info": 357, "_create_out_pattern": 357, "_replace_pattern": 357, "emitt": 358, "netron": 358, "bash": [358, 359], "prepare_model": [358, 359], "sh": [358, 359, 379], "ptq": 358, "much": [358, 367], "ir_path": 358, "focu": [359, 372, 381], "home": 359, "distilbert_base_uncas": 359, "prepare_dataset": 359, "shell": 359, "tokenizer_dir": 359, "data_dir": 359, "geluoper": 360, "destructor": 360, "operatorconfig": 360, "algorithm_": 360, "eng_": 360, "eltwise_forward": 360, "gelu_p_": 360, "src_m_": 360, "dst_m_": 360, "attrs_map": 360, "operator_conf_": 360, "becuas": 360, "src_shape": 360, "dst_tensor_ptr": 360, "set_shap": 360, "stride": [360, 364], "src_stride": 360, "getstrid": 360, "dst_stride": 360, "desc": [360, 365, 366], "src_md": 360, "dst_md": 360, "part2": 360, "gelu_algorithm": 360, "gelu_erf": 360, "eltwise_gelu_erf": 360, "eltwise_gelu_tanh": 360, "gelu_d": 360, "prop_kind": 360, "primitive_desc": 360, "gelu_pd": 360, "unrefernc": 360, "manag": 360, "strictli": 360, "alia": 360, "src_data": 360, "dst_data": 360, "mutable_data": 360, "data_ptr": 360, "stream": 360, "set_data_handl": 360, "const_cast": 360, "reinterpret_cast": 360, "memory_args_": 360, "dnnl_arg_src": 360, "dnnl_arg_dst": 360, "unref": 360, "unref_tensor": 360, "especi": [360, 374], "int8_lut_optim": 360, "int8_lut_acc_test": 360, "set_dtyp": 360, "register_operator_class": 360, "rule": 361, "recruit": 361, "ln_pattern": 361, "grow": 361, "concis": 361, "intuit": [361, 370], "choos": 361, "prefer": [361, 372], "longer": 361, "ones": 361, "op_type1": 361, "op_type2": 361, "type1": 361, "type2": 361, "elig": 361, "a_node_name_1": 361, "b_node_name_1": 361, "c_node_name_1": 361, "a_node_name_2": 361, "b_node_name_2": 361, "c_node_name_2": 361, "a_node_name_n": 361, "b_node_name_n": 361, "c_node_name_n": 361, "bert_large_model_path": 361, "layer_0": 361, "layer_1": 361, "layer_2": 361, "afterward": 361, "volatil": 361, "incorrect": 361, "outcom": 361, "Or": 361, "exactli": 361, "screen": 361, "occur": [361, 364, 371], "alreadi": 361, "moment": 361, "varianc": [361, 371], "batchnorm": 361, "mul_1": 361, "mul_2": 361, "add_1": 361, "07": [362, 376], "8375c": [362, 376], "aw": [362, 376], "c6i": [362, 376], "12xlarg": [362, 376], "vari": [362, 376], "factor": [362, 376], "www": [362, 376], "batchsiz": 362, "2652": 362, "36": [362, 376], "513": 362, "lt": [362, 376], "50m": 362, "2181": 362, "43": [362, 376], "628": 362, "1719": 362, "91": [362, 376], "75": [362, 376], "1487": [362, 376], "255": [362, 373, 385], "1220": 362, "39": [362, 376], "143": 362, "1304": 362, "46": [362, 376], "066": 362, "1102": [362, 376], "870": 362, "487": 362, "750": 362, "82": [362, 375, 376], "690": [362, 376], "188": 362, "910": [362, 376], "921": [362, 376], "729": 362, "71": [362, 375, 376], "619": 362, "38": [362, 375, 376], "821": [362, 376], "499": 362, "429": [362, 375], "936": [362, 376], "680": 362, "318": [362, 376], "557": 362, "262": 362, "467": 362, "589": 362, "405": 362, "339": 362, "473": 362, "119": [362, 376], "389": 362, "945": [362, 376], "360": 362, "274": 362, "843": 362, "259": [362, 375, 376], "442": 362, "241": 362, "364": 362, "016": [362, 376], "303": 362, "266": 362, "45": [362, 376], "05": [362, 376], "221": 362, "973": 362, "112": [362, 376], "349": 362, "938": [362, 376], "275": [362, 375], "614": 362, "217": 362, "37": [362, 376], "039": 362, "301": 362, "166": 362, "033": 362, "320": 362, "769": 362, "263": 362, "724": [362, 376], "207": 362, "819": [362, 376], "181": 362, "021": 362, "979": [362, 376], "74": [362, 376], "235": 362, "63": [362, 376], "091": 362, "51": [362, 376], "914": [362, 376], "698": [362, 376], "905": [362, 376], "8972": 362, "076": [362, 376], "20m": 362, "7192": 362, "19": [362, 368, 376], "906": 362, "5482": 362, "509": 362, "4808": 362, "952": 362, "3678": 362, "409": 362, "4750": 362, "975": [362, 376], "3647": 362, "867": 362, "2921": 362, "587": [362, 376], "2576": 362, "18": [362, 368, 376], "768": [362, 376], "2131": [362, 376], "913": [362, 376], "2804": 362, "096": 362, "2263": 362, "037": 362, "1938": 362, "756": [362, 376], "1581": 362, "15": [362, 368, 369, 374, 376], "1409": 362, "015": 362, "2116": 362, "113": 362, "1777": 362, "972": [362, 376], "1474": 362, "392": 362, "1278": 362, "1137": 362, "752": 362, "1594": 362, "124": 362, "1347": [362, 376], "1126": 362, "993": [362, 376], "258": 362, "890": [362, 376], "877": [362, 376], "1319": 362, "1086": 362, "931": [362, 376], "545": 362, "833": 362, "332": [362, 376], "747": [362, 376], "141": 362, "1106": [362, 376], "31": [362, 368, 369, 376], "924": 362, "446": 362, "719": 362, "633": 362, "501": 362, "816": 362, "961": 362, "549": 362, "807": 362, "868": [362, 376], "701": [362, 376], "117": 362, "613": 362, "618": 362, "515": 362, "75384": 362, "989": 362, "1m": 362, "55628": 362, "917": 362, "49120": 362, "957": [362, 376], "41598": 362, "39218": 362, "31211": 362, "788": [362, 376], "28399": 362, "848": 362, "24910": 362, "966": 362, "20505": 362, "18575": 362, "865": 362, "25485": 362, "987": 362, "17468": 362, "16771": 362, "971": [362, 376], "16004": 362, "996": [362, 376], "13381": 362, "894": [362, 376], "13990": 362, "863": [362, 376], "13154": 362, "12535": 362, "12102": 362, "998": 362, "8426": [362, 376], "8736": 362, "8282": 362, "967": 362, "6659": 362, "898": [362, 376], "6477": 362, "6290": 362, "974": [362, 376], "8598": 362, "6449": 362, "935": [362, 376], "6263": [362, 376], "965": [362, 376], "6080": 362, "988": 362, "3684": 362, "817": [362, 376], "6246": 362, "978": 362, "6374": 362, "947": [362, 376], "6026": 362, "3300": [362, 376], "926": 362, "3226": 362, "6221": 362, "958": 362, "6322": 362, "6081": 362, "985": [362, 376], "3368": 362, "3264": 362, "distillbert": 362, "15460": 362, "296": 362, "10m": 362, "13129": 362, "363": 362, "11323": 362, "578": [362, 376], "10072": 362, "599": 362, "8689": 362, "7901": 362, "205": [362, 376], "6737": 362, "562": 362, "5440": 362, "904": [362, 376], "4920": 362, "786": [362, 376], "4460": 362, "053": 362, "5280": 362, "179": 362, "4339": 362, "244": [362, 375], "3634": [362, 376], "928": 362, "3255": 362, "211": [362, 376], "2928": 362, "197": [362, 376], "3681": 362, "527": [362, 376], "2965": [362, 376], "106": [362, 376], "2741": 362, "862": [362, 376], "2351": 362, "2150": 362, "282": 362, "2918": 362, "316": 362, "2505": [362, 376], "602": 362, "2010": [362, 376], "995": 362, "1872": 362, "609": [362, 376], "2409": 362, "983": 362, "1993": 362, "013": 362, "1671": [362, 376], "627": 362, "1484": 362, "1342": [362, 376], "1910": 362, "456": [362, 376], "1659": 362, "687": 362, "1293": 362, "245": [362, 376], "1230": 362, "798": 362, "1091": 362, "261": 362, "1627": 362, "908": 362, "1397": 362, "684": 362, "1130": 362, "1081": 362, "353": 362, "982": [362, 376], "187": [362, 375], "manufactur": [362, 376], "amazon": [362, 376], "ec2": [362, 376], "bio": [362, 376], "1021": [362, 376], "microcod": [362, 376], "0xd000331": [362, 376], "irq": [362, 376], "balanc": [362, 376], "xeonplatinum": 362, "90ghz": [362, 376], "frequenc": [362, 376, 384], "9ghz": [362, 376], "5ghz": [362, 376], "thread": 362, "socket": [362, 376], "numa": [362, 376], "turbo": [362, 376], "frequencygovern": [362, 376], "workdir": 363, "dne_with_test": 363, "ON": [363, 378], "ut": [363, 366], "dne_with_sparselib_onli": [363, 378], "dne_with_sparselib_benchmark": [363, 378], "test_spmm_vnni_kernel": 363, "box": 363, "profl": [363, 375], "op_attr": [363, 365, 366, 372], "spmm_desc": 363, "spmm_kern": 363, "data0": 363, "data1": 363, "data2": 363, "data3": 363, "data4": 363, "unit": [363, 370], "vnni": [363, 364, 368, 372, 373, 376, 378, 385, 392], "amx": [363, 370, 373, 378, 392], "wise": [363, 378, 392], "residu": 363, "avx512": [363, 364, 368, 385], "mha": [363, 392], "avx512f": [363, 372, 378, 392], "spmm": [364, 372, 378], "deeplearn": 364, "multipli": [364, 370, 374, 385], "adopt": [364, 369, 374], "modern": 364, "spatial": [364, 370], "program": [364, 380], "64byte": 364, "organ": 364, "associ": 364, "access": [364, 369, 370], "b1": 364, "b2": 364, "simd": [364, 365, 369], "width": [364, 365, 369, 371, 385], "evenli": 364, "discontinu": 364, "fulli": [364, 373, 374], "worst": 364, "veri": [364, 366, 367, 370], "miss": [364, 374], "frequent": 364, "destin": [364, 369, 372, 378], "l1": 364, "l2": [364, 370, 378], "perhap": 364, "mxk": [364, 378], "bxm": 364, "xk": 364, "bxkxm": 364, "nxm": 364, "2d": [364, 378], "respons": [364, 370, 371, 373], "frac": [364, 372], "binaryop": 365, "dl": 365, "changeabl": 365, "operand": [365, 369], "horizont": 365, "overhead": [365, 371, 372, 373, 374], "move": 365, "binaryop_injector": 365, "postop": [365, 366, 378], "quit": 365, "eltwise_injector": [365, 366], "escap": [365, 366], "compute_vector": 365, "arithmet": 365, "brows": 365, "dt": [365, 366], "vpaddb": 365, "vaddp": 365, "unlik": 365, "ptr": [365, 366, 375], "static_addr": 365, "addr": 365, "binaryop_alg": 365, "per_channel_qu": 365, "per_channel_dequ": 365, "op_alg": [365, 366], "op_dt": 365, "alg": 365, "set_scal": 365, "set_zp": 365, "binary_injector_init": 365, "set_mask": 365, "reg64": [365, 366], "zmm": [365, 366, 369, 371, 374], "get_addr": 365, "broadcast": [365, 369, 374, 375, 378], "enable_mask": 365, "vector_comput": [365, 366], "bianryop": 365, "comput_vector": 365, "wrapper": 365, "jit_binary_injector": 365, "addr_typ": 365, "jit_gener": [365, 366], "opmask": [365, 366], "reg": [365, 366], "mov": [365, 375], "addr_ptr": 365, "zmm_src1": 365, "regexp": 365, "step1": [365, 366, 373], "binary_injector": 365, "step2": [365, 366, 373], "data_param": 365, "binaryop_addr": 365, "param_": [365, 366], "front": 365, "append_loop_len": 365, "zmm_byte_s": 365, "get_data_s": 365, "offset_exp": 365, "bianryop_attr_list": 365, "append_vec": 365, "binary_add": 365, "eltwis": 366, "tradit": 366, "obvious": [366, 367, 371], "useless": 366, "idea": [366, 374, 384], "xbyak": 366, "binari": [366, 373, 378, 392], "algo": 366, "aplha": 366, "sacl": 366, "postop_alg": 366, "int8_lut": 366, "postop_typ": 366, "mathemat": 366, "satur": 366, "round": [366, 385], "unus": 366, "\u03b1x": 366, "\u03b2": 366, "le": 366, "gt": 366, "eng_kind_": 366, "omp_get_max_thread": 366, "omp_get_num_proc": 366, "eltwise_injector_init": 366, "chian": 366, "escape_reg": 366, "escape_eras": 366, "eras": 366, "prepare_t": 366, "zmm_src": 366, "postop_idx": 366, "reg_idx": 366, "step0": 366, "jit_eltwiseop_t": 366, "assign_reg": 366, "eltwiseop_kd_t": 366, "op_desc_": 366, "params_": 366, "remain_task_mask": 366, "scratch_": 366, "r10": 366, "reg_src": 366, "addr_src": 366, "r15": [366, 375], "addr_dst": 366, "r14": [366, 375], "reg_param": 366, "rdi": [366, 375], "remain_element_num": 366, "rsi": 366, "getidx": 366, "alloc": [366, 367, 370], "rcx": 366, "rdx": 366, "rsp": 366, "step3": [366, 373], "preambl": 366, "load_param": 366, "vmovup": [366, 375], "postambl": 366, "fp32_gelu_attr": 366, "bf16_gelu_attr": 366, "push_back": 366, "gen_cas": 366, "data0_desc": 366, "postop_list": 366, "fp32_gelu": [366, 378], "fp32_exp": 366, "mask_mock1": 366, "reg64_mock1": 366, "zmm_mock1": 366, "fp32_exp_attr": 366, "data1_desc": 366, "bf16_gelu": 366, "bf16_exp": [366, 378], "bf16_exp_attr": 366, "dt1op1": 366, "dt2op2": 366, "hase": 366, "get_true_data": 366, "rf_data": 366, "your_kernel_log": 366, "apply_postop_list": 366, "unit_test_util": 366, "articl": [367, 385], "gpu": 367, "opencl": 367, "snippet": 367, "unintellig": 367, "__kernel": 367, "naive_gemm": 367, "__global": 367, "globalrow": 367, "get_global_id": 367, "globalcol": 367, "col": [367, 368, 371, 373], "over": [367, 369, 372], "acc": [367, 378, 379], "0f": 367, "mxn": [367, 373, 378], "2xk": 367, "redund": [367, 384], "asub": 367, "bsub": 367, "tile_gemm": 367, "get_local_id": 367, "get_group_id": 367, "__local": 367, "initialis": 367, "accumul": [367, 372, 374], "numtil": 367, "tiledrow": 367, "tiledcol": 367, "synchronis": 367, "barrier": 367, "clk_local_mem_f": 367, "full": [367, 380, 385], "white": 367, "figur": [367, 370, 371, 372, 374, 377], "half": [367, 373], "correspondingli": 367, "increas": 367, "workload": [367, 372], "localmemori": 367, "tight": 367, "ll": 367, "twice": [367, 373], "ping": 367, "pong": 367, "tidm": 367, "tidn": 367, "offsetm": 367, "offset": [367, 371, 372], "offsetn": 367, "areg": 367, "breg": 367, "wm": 367, "wn": 367, "lpta": 367, "tid": 367, "mod2": 367, "div2": 367, "tiledindex": 367, "indexa": 367, "indexb": 367, "veca": 367, "vecb": 367, "tt": 367, "pragma": 367, "tdpbf16p": 368, "16x32": 368, "32x16": 368, "FOR": [368, 369, 374], "TO": 368, "colsb": 368, "byte": [368, 374], "endfor": [368, 369, 374], "write_row_and_zero": 368, "zero_upper_row": 368, "zero_tileconfig_start": 368, "layout": [368, 371, 372, 373], "successor": 368, "1x16": [368, 374], "concaten": [368, 374, 378], "intrins": 368, "tileloadd": 368, "nonzero": 368, "vmovdqu32": 368, "consum": 368, "altern": [368, 374], "lot": 368, "disast": 368, "16x1": [368, 372], "greatli": [368, 373], "impact": 368, "fly": 368, "__m512i": 368, "_mm512_set_epi16": 368, "29": [368, 376], "27": [368, 376], "26": [368, 375, 376], "25": [368, 376, 378], "22": [368, 376], "21": [368, 376], "__m256i": 368, "lo": 368, "_mm256_loadu_epi": 368, "li": 368, "vec": 368, "_mm512_inserti32x8": 368, "_mm512_castsi256_si512": 368, "_mm512_permutexvar_epi16": 368, "_mm512_storeu_epi32": 368, "vfmadd": 369, "vfmadd231p": [369, 375], "degre": 369, "parallel": [369, 370, 371, 374, 378], "conting": 369, "bsc": 369, "variant": 369, "bsr": 369, "openmp": 369, "thu": [369, 385], "relief": 369, "bottleneck": [369, 371], "microkernel": 369, "peripher": 369, "implicit": 369, "technologi": 370, "among": [370, 373], "satisfactori": 370, "inevit": 370, "solv": [370, 371, 385], "facilit": [370, 373], "At": [370, 371, 373], "flexibl": 370, "divis": 370, "tdpbssd": 370, "tile_k": 370, "formula": 370, "max_tile_k": 370, "back": [370, 371, 372, 373], "extra": 370, "hope": 370, "large_wei_threshold": 370, "16xpad_n": 370, "buffer": [370, 371, 373], "tilestor": 370, "pseudo": 370, "tile_m": [370, 378], "16xn": 370, "dp_tile_n": 370, "k_dim_dp": 370, "write_tile_to_tmp_buf": 370, "dequantize_tile_on_tmp_buf": 370, "calculate_scale_on_tmp_buf": 370, "write_back_scal": 370, "quant_tile_n": 370, "quantize_on_tmp_buf": 370, "write_tile_to_dst": 370, "per_channel_dynamic_quant": 370, "desid": 370, "du": 370, "principl": 370, "possibl": 370, "premis": 370, "rate": [370, 371], "therebi": 370, "feel": [370, 378], "benefit": [370, 374, 385], "suitabl": 370, "chart": 370, "naiv": 371, "solut": [371, 374], "gap": 371, "layernrom": 371, "3d": [371, 392], "poor": 371, "fewer": 371, "wast": 371, "inconsist": 371, "scene": 371, "quarter": 371, "depict": 371, "protocol": 371, "bandwidth": [371, 373, 385], "gain": [371, 385], "brought": [371, 385], "majotr": 371, "layternorm": 371, "encapsul": 371, "ba": [371, 375, 378], "discret": 371, "append": [371, 378, 379], "overal": 371, "p2031": [372, 378], "2013": 372, "noperm": [372, 378], "p1302": [372, 378], "p2013": [372, 378], "equat": [372, 385], "dot": [372, 385], "rm": 372, "q": [372, 373], "v": [372, 373], "qk": 372, "textunderscor": 372, "nativ": 372, "sparelib": 372, "axis": 372, "conceptu": 372, "head_nun": 372, "perm2031": 372, "perm2013": 372, "perm1302": 372, "concept": [372, 374], "lh": 372, "float32": [372, 385], "illustr": 372, "inner": 372, "16x16": 372, "drawn": 372, "lighter": 372, "cell": [372, 374], "respectfulli": 372, "vnni_noperm_p2013_p1302": 372, "transpose_4b_8x8": 372, "legend": 372, "explan": 372, "contigu": 372, "ellipsi": 372, "thinner": 372, "border": 372, "bolder": 372, "color": [372, 374], "16x32x16": 372, "lead": [372, 374], "suboptim": 372, "piec": 372, "turn": 372, "boost": 372, "twofold": 372, "unifi": 372, "roll": 372, "logic": [373, 375], "worth": 373, "clear": 373, "fact": [373, 385], "spr": 373, "latter": 373, "2nd": 373, "clx": 373, "4x16": [373, 374], "launch": 373, "prior": 373, "iteraion": 373, "polynomi": 373, "essenti": 373, "incom": 373, "far": 373, "four": 374, "adjac": 374, "unsign": [374, 378], "sign": [374, 385], "tmp1": 374, "zeroextend16": 374, "signextend16": 374, "tmp2": 374, "tmp3": 374, "tmp4": 374, "dword": [374, 375], "transposit": 374, "discuss": 374, "typic": 374, "sai": 374, "4x4": 374, "pick": 374, "mxkxn": 374, "problem": [374, 378], "densiti": 374, "fma": 374, "bubbl": 374, "16x4": 374, "highlight": 374, "4x": 374, "talent": 374, "smart": 374, "gui": [374, 375], "swizzl": 374, "workaround": 374, "unfortun": 374, "difficulti": 374, "bad": 374, "cost": 374, "2x1": 374, "conclus": 374, "against": 374, "brief": 375, "sparse_lib_verbos": 375, "sparselib_verbos": 375, "nthr": 375, "224": [375, 376], "exec": 375, "shape_256_256_128": 375, "4658": [375, 376], "56982": 375, "itt": 375, "dne_with_sparselib_vtun": 375, "opt": 375, "latest": [375, 386], "manual": 375, "dcmake_vtune_hom": 375, "sparse_lib_vtun": 375, "ssh": 375, "analys": 375, "verifi": 375, "sparse_lib_dump": 375, "xed64": 375, "click": 375, "xdi": 375, "push": 375, "53": [375, 376], "rbx": 375, "rbp": 375, "4154": 375, "r12": 375, "4155": 375, "r13": 375, "4156": 375, "4157": 375, "dataxf": 375, "bd00040000": 375, "ebp": 375, "0x400": 375, "4c8b3f": 375, "qword": 375, "4c8b7708": 375, "0x8": 375, "4c8b6f10": 375, "0x10": 375, "1a": 375, "avx512evex": 375, "62f17d48efc0": 375, "vpxord": 375, "zmm0": 375, "62f15d48efe4": 375, "zmm4": 375, "62513d48efc0": 375, "zmm8": 375, "2c": 375, "62511d48efe4": 375, "zmm12": 375, "62f17548efc9": 375, "zmm1": 375, "62f15548efe": 375, "zmm5": 375, "3e": 375, "62513548efc9": 375, "zmm9": 375, "62511548efe": 375, "zmm13": 375, "4a": 375, "62f16d48efd2": 375, "zmm2": 375, "62f14d48eff6": 375, "zmm6": 375, "62512d48efd2": 375, "zmm10": 375, "5c": 375, "62510d48eff6": 375, "zmm14": 375, "62": [375, 376], "62c17c481006": 375, "zmm16": 375, "zmmword": 375, "62c17c48104e01": 375, "zmm17": 375, "0x40": 375, "6f": 375, "62c17c48105602": 375, "zmm18": 375, "0x80": 375, "62427d48183f": 375, "vbroadcastss": 375, "zmm31": 375, "7c": 375, "vfma": 375, "62927d40b8c7": 375, "62927540b8cf": 375, "62926d40b8d7": 375, "8e": 375, "62427d48187f04": 375, "95": [375, 376], "62927d40b8e7": 375, "9b": 375, "62927540b8ef": 375, "a1": 375, "62926d40b8f7": 375, "a7": 375, "62427d48187f08": 375, "0x20": 375, "ae": 375, "62127d40b8c7": 375, "b4": 375, "62127540b8cf": 375, "62126d40b8d7": 375, "c0": 375, "62427d48187f0c": 375, "0x30": 375, "c7": 375, "62127d40b8e7": 375, "62127540b8ef": 375, "62126d40b8f7": 375, "d9": 375, "62c17c48104603": 375, "0xc0": 375, "e0": 375, "62c17c48104e04": 375, "0x100": 375, "e7": 375, "62c17c48105605": 375, "0x140": 375, "ee": 375, "62427d48187f01": 375, "0x4": 375, "f5": 375, "fb": 375, "101": 375, "107": 375, "62427d48187f05": 375, "0x14": 375, "10e": 375, "114": 375, "11a": 375, "62427d48187f09": 375, "0x24": 375, "12d": 375, "133": 375, "139": 375, "62427d48187f0d": 375, "0x34": 375, "140": 375, "146": 375, "14c": 375, "152": 375, "62c17c48104606": 375, "0x180": 375, "62c17c48104e07": 375, "0x1c0": 375, "62c17c48105608": 375, "0x200": 375, "167": [375, 376], "62427d48187f02": 375, "16e": 375, "174": 375, "17a": 375, "180": 375, "62427d48187f06": 375, "0x18": 375, "18d": 375, "193": 375, "199": 375, "62427d48187f0a": 375, "0x28": 375, "1a0": 375, "1a6": 375, "1ac": 375, "1b2": 375, "62427d48187f0e": 375, "0x38": 375, "1b9": 375, "1bf": 375, "1c5": 375, "1cb": 375, "62c17c48104609": 375, "0x240": 375, "1d2": 375, "62c17c48104e0a": 375, "0x280": 375, "1d9": 375, "62c17c4810560b": 375, "0x2c0": 375, "1e0": 375, "62427d48187f03": 375, "0xc": 375, "1e7": 375, "1ed": 375, "1f3": 375, "1f9": 375, "62427d48187f07": 375, "0x1c": 375, "200": 375, "206": 375, "20c": 375, "212": 375, "62427d48187f0b": 375, "0x2c": 375, "219": [375, 376], "21f": 375, "225": 375, "22b": 375, "62427d48187f0f": 375, "0x3c": 375, "232": [375, 376], "238": 375, "23e": 375, "62d17c48114500": 375, "24b": 375, "62d17c48116503": 375, "62517c48114506": 375, "62517c48116509": 375, "260": 375, "62d17c48114d01": 375, "267": 375, "62d17c48116d04": 375, "26e": 375, "62517c48114d07": 375, "62517c48116d0a": 375, "27c": 375, "62d17c48115502": 375, "283": 375, "62d17c48117505": 375, "28a": 375, "62517c48115508": 375, "291": 375, "62517c4811750b": 375, "298": [375, 376], "pop": 375, "415f": 375, "29a": 375, "415e": 375, "29c": 375, "415d": 375, "29e": 375, "415c": 375, "2a0": 375, "5d": 375, "2a1": 375, "5b": 375, "2a2": 375, "avx": 375, "c5f877": 375, "vzeroupp": 375, "2a5": 375, "xed3": 375, "stat": 375, "cycl": 375, "29220": 375, "236418": 375, "118": 375, "2003": 375, "54": [375, 376], "00348609": 376, "601": 376, "00310676": 376, "675": 376, "00261406": 376, "802": 376, "00216633": 376, "968": 376, "068": 376, "00164658": 376, "1273": 376, "0112255": 376, "284": 376, "00947462": 376, "885": 376, "377": 376, "00764146": 376, "1097": 376, "78": 376, "0058452": 376, "1435": 376, "00407149": 376, "2060": 376, "0127448": 376, "658": 376, "198": 376, "0111132": 376, "754": 376, "835": 376, "00940157": 376, "892": 376, "00760217": 376, "1103": 376, "0054935": 376, "1527": 376, "044202": 376, "759": 376, "0364227": 376, "0292454": 376, "1147": 376, "0223472": 376, "1501": 376, "0149058": 376, "2251": 376, "216338": 376, "620": 376, "408": 376, "179593": 376, "345": 376, "135054": 376, "806": 376, "0946983": 376, "1417": 376, "0609701": 376, "2201": 376, "190508": 376, "704": 376, "526": 376, "159566": 376, "841": 376, "130863": 376, "1025": 376, "103927": 376, "1291": 376, "0739962": 376, "1813": 376, "0250395": 376, "753": 376, "784": 376, "0210726": 376, "895": 376, "682": 376, "0170987": 376, "0130778": 376, "1443": 376, "00923343": 376, "2044": 376, "3072": 376, "112882": 376, "668": 376, "818": 376, "0879386": 376, "858": 376, "525": 376, "068835": 376, "1096": 376, "79": 376, "0487342": 376, "1549": 376, "0317559": 376, "2377": 376, "109308": 376, "679": 376, "0922471": 376, "805": 376, "638": 376, "0759107": 376, "0558945": 376, "1329": 376, "61": 376, "0358752": 376, "2071": 376, "57": 376, "00565044": 376, "742": 376, "297": 376, "00503604": 376, "832": 376, "00447544": 376, "937": 376, "182": 376, "00368479": 376, "1138": 376, "00270954": 376, "1547": 376, "0183481": 376, "386": 376, "0154121": 376, "1088": 376, "0125696": 376, "1334": 376, "00959948": 376, "1747": 376, "72": 376, "00677631": 376, "2475": 376, "0206321": 376, "813": 376, "162": 376, "0184267": 376, "483": 376, "0164699": 376, "1018": 376, "66": 376, "0135801": 376, "1235": 376, "010552": 376, "1589": 376, "0721208": 376, "930": 376, "506": 376, "059613": 376, "1125": 376, "0483781": 376, "1387": 376, "0366748": 376, "1829": 376, "83": 376, "0248571": 376, "2699": 376, "376539": 376, "712": 376, "902": 376, "31929": 376, "840": 376, "727": 376, "261265": 376, "1027": 376, "193579": 376, "1386": 376, "118429": 376, "2266": 376, "309195": 376, "177": 376, "256619": 376, "1046": 376, "213454": 376, "1257": 376, "165192": 376, "1624": 376, "118402": 376, "2267": 376, "0402931": 376, "855": 376, "0341169": 376, "0275282": 376, "1371": 376, "0211298": 376, "1786": 376, "0150693": 376, "218765": 376, "215": 376, "180921": 376, "834": 376, "592": 376, "142778": 376, "1057": 376, "097692": 376, "1545": 376, "0620034": 376, "2435": 376, "174101": 376, "853": 376, "73": 376, "148369": 376, "1001": 376, "123554": 376, "1203": 376, "0923655": 376, "1609": 376, "0591283": 376, "2513": 376, "0074474": 376, "844": 376, "00657187": 376, "00570175": 376, "00483104": 376, "1302": 376, "00367406": 376, "1712": 376, "0247063": 376, "0207462": 376, "1213": 376, "03": 376, "0169214": 376, "0129936": 376, "1936": 376, "0090376": 376, "2784": 376, "0275881": 376, "912": 376, "0240415": 376, "77": 376, "0207876": 376, "1210": 376, "0177873": 376, "1414": 376, "0140129": 376, "1795": 376, "0994565": 376, "1012": 376, "0819725": 376, "1228": 376, "0660571": 376, "1523": 376, "0497077": 376, "2025": 376, "0341912": 376, "2944": 376, "500698": 376, "804": 376, "184": 376, "420619": 376, "287": 376, "337529": 376, "1192": 376, "94": 376, "251221": 376, "1602": 376, "158668": 376, "2537": 376, "412912": 376, "155": 376, "346369": 376, "1162": 376, "2831": 376, "1422": 376, "220585": 376, "1825": 376, "156168": 376, "2578": 376, "0538395": 376, "1051": 376, "0455066": 376, "1244": 376, "036978": 376, "1531": 376, "028483": 376, "1987": 376, "0200457": 376, "2824": 376, "283445": 376, "799": 376, "069": 376, "236101": 376, "959": 376, "302": 376, "188745": 376, "1199": 376, "135532": 376, "0845544": 376, "2678": 376, "227976": 376, "977": 376, "19463": 376, "1145": 376, "161251": 376, "1382": 376, "65": 376, "123585": 376, "1804": 376, "0840322": 376, "2653": 376, "00940534": 376, "891": 376, "00821985": 376, "1020": 376, "00701343": 376, "1196": 376, "08": 376, "00579899": 376, "1446": 376, "00464705": 376, "1805": 376, "0336342": 376, "997": 376, "629": 376, "0276086": 376, "1215": 376, "0224431": 376, "1495": 376, "09": 376, "0170807": 376, "1964": 376, "0117535": 376, "2854": 376, "0358603": 376, "0310083": 376, "1082": 376, "0260486": 376, "1288": 376, "0215163": 376, "1559": 376, "0170105": 376, "1972": 376, "133295": 376, "1006": 376, "92": 376, "111186": 376, "1207": 376, "0881114": 376, "0665519": 376, "2016": 376, "0454416": 376, "2953": 376, "611718": 376, "645": 376, "533329": 376, "430288": 376, "1247": 376, "307141": 376, "198987": 376, "2698": 376, "02": [376, 381], "556249": 376, "163": 376, "462737": 376, "1160": 376, "37537": 376, "1430": 376, "28321": 376, "1895": 376, "203901": 376, "2633": 376, "0716356": 376, "1053": 376, "0603517": 376, "1250": 376, "0490096": 376, "1540": 376, "0375683": 376, "2009": 376, "0267483": 376, "2822": 376, "3572": 376, "845": 376, "437": 376, "299561": 376, "1008": 376, "228752": 376, "1320": 376, "165648": 376, "1823": 376, "105656": 376, "2858": 376, "298907": 376, "994": 376, "529": 376, "255598": 376, "1163": 376, "20824": 376, "1427": 376, "159911": 376, "1858": 376, "111211": 376, "2673": 376, "0152997": 376, "685": 376, "358": 376, "0131446": 376, "797": 376, "0109669": 376, "956": 376, "132": 376, "00921101": 376, "00755406": 376, "1388": 376, "0553082": 376, "758": 376, "351": 376, "0458481": 376, "826": 376, "0367258": 376, "1142": 376, "06": 376, "027535": 376, "018464": 376, "2271": 376, "0597882": 376, "0510217": 376, "822": 376, "062": 376, "0421644": 376, "0333436": 376, "0296385": 376, "1415": 376, "22241": 376, "337": 376, "18324": 376, "915": 376, "145322": 376, "1154": 376, "1083": 376, "0728843": 376, "2301": 376, "11793": 376, "600": 376, "929398": 376, "722": 376, "720963": 376, "823": 376, "510039": 376, "1315": 376, "336519": 376, "1994": 376, "909941": 376, "737": 376, "508": 376, "753487": 376, "644": 376, "606477": 376, "459915": 376, "1459": 376, "303455": 376, "2211": 376, "123429": 376, "764": 376, "586": 376, "103035": 376, "923": 376, "0825026": 376, "1143": 376, "0625579": 376, "1508": 376, "0426942": 376, "2210": 376, "60813": 376, "734": 376, "483053": 376, "781": 376, "462": 376, "357348": 376, "1056": 376, "256715": 376, "1470": 376, "169119": 376, "2232": 376, "503341": 376, "738": 376, "42134": 376, "881": 376, "342843": 376, "255199": 376, "1456": 376, "174091": 376, "2134": 376, "0142667": 376, "0123966": 376, "1015": 376, "0105865": 376, "1188": 376, "00860835": 376, "1461": 376, "00655363": 376, "1919": 376, "0532543": 376, "0447548": 376, "1124": 376, "0348388": 376, "1444": 376, "0266886": 376, "1885": 376, "0177431": 376, "2836": 376, "69": 376, "0549107": 376, "916": 376, "608": 376, "0475549": 376, "1058": 376, "0401657": 376, "1253": 376, "0326952": 376, "1539": 376, "025032": 376, "220947": 376, "911": 376, "178324": 376, "1128": 376, "137361": 376, "1465": 376, "103126": 376, "1952": 376, "0701429": 376, "2870": 376, "06648": 376, "755": 376, "893959": 376, "900": 376, "831": 376, "718893": 376, "1120": 376, "537405": 376, "1498": 376, "280686": 376, "2869": 376, "902588": 376, "730678": 376, "582871": 376, "1381": 376, "444133": 376, "298489": 376, "2697": 376, "581": 376, "0955952": 376, "1184": 376, "078109": 376, "1449": 376, "0596185": 376, "1899": 376, "0414047": 376, "2735": 376, "596568": 376, "497127": 376, "396634": 376, "286973": 376, "1578": 376, "167473": 376, "2704": 376, "472466": 376, "943": 376, "787": 376, "391055": 376, "1140": 376, "319865": 376, "1394": 376, "247491": 376, "1801": 376, "169874": 376, "2624": 376, "93": 376, "0213786": 376, "686": 376, "67": 376, "018228": 376, "0152068": 376, "0120525": 376, "1218": 376, "0103961": 376, "1412": 376, "0771592": 376, "761": 376, "0642402": 376, "074": 376, "0514668": 376, "0387886": 376, "1513": 376, "0256871": 376, "2285": 376, "0836219": 376, "702": 376, "0712915": 376, "664": 376, "0589148": 376, "697": 376, "0484067": 376, "0411331": 376, "311691": 376, "569": 376, "256635": 376, "204973": 376, "153086": 376, "1534": 376, "101206": 376, "2320": 376, "59625": 376, "588": 376, "583": 376, "33246": 376, "705": 376, "03849": 376, "703": 376, "738939": 376, "1271": 376, "480308": 376, "1956": 376, "26056": 376, "745": 376, "324": 376, "04874": 376, "842936": 376, "1114": 376, "59": 376, "635554": 376, "1478": 376, "42145": 376, "2229": 376, "174215": 376, "375": 376, "145836": 376, "116701": 376, "1132": 376, "0876727": 376, "1506": 376, "0595001": 376, "2220": 376, "883258": 376, "598": 376, "333": 376, "711146": 376, "743": 376, "543634": 376, "129": 376, "402406": 376, "1313": 376, "266945": 376, "1979": 376, "70404": 376, "592043": 376, "878": 376, "695": 376, "475444": 376, "1094": 376, "358932": 376, "240739": 376, "2160": 376, "0184384": 376, "909": 376, "907": 376, "0158714": 376, "013504": 376, "1242": 376, "0109927": 376, "1526": 376, "00826017": 376, "2031": 376, "061272": 376, "1095": 376, "0609618": 376, "1100": 376, "0467291": 376, "1436": 376, "0340362": 376, "1971": 376, "0231282": 376, "2901": 376, "0717247": 376, "0616923": 376, "1087": 376, "0521595": 376, "1286": 376, "0423267": 376, "1585": 376, "0321109": 376, "2089": 376, "286461": 376, "242512": 376, "181783": 376, "1476": 376, "139021": 376, "1930": 376, "0870121": 376, "3085": 376, "36322": 376, "652": 376, "08991": 376, "880185": 376, "1219": 376, "694533": 376, "366328": 376, "2931": 376, "15748": 376, "927": 376, "937824": 376, "1144": 376, "745357": 376, "1440": 376, "558061": 376, "1924": 376, "391387": 376, "2743": 376, "157349": 376, "616": 376, "129806": 376, "103083": 376, "1464": 376, "0784417": 376, "053639": 376, "2815": 376, "767569": 376, "874": 376, "641585": 376, "941": 376, "387": 376, "488558": 376, "1236": 376, "355651": 376, "1698": 376, "230945": 376, "2615": 376, "611059": 376, "514108": 376, "1156": 376, "416571": 376, "318094": 376, "1869": 376, "225023": 376, "2642": 376, "0375093": 376, "564": 376, "0317602": 376, "0261888": 376, "1281": 376, "0211151": 376, "0158951": 376, "2110": 376, "141333": 376, "949": 376, "133647": 376, "1004": 376, "0999998": 376, "0710327": 376, "1889": 376, "52": 376, "0429916": 376, "3121": 376, "147474": 376, "125344": 376, "1070": 376, "104294": 376, "0849766": 376, "1579": 376, "0624729": 376, "2148": 376, "701639": 376, "765": 376, "534615": 376, "359791": 376, "1492": 376, "2612": 376, "2055": 376, "183193": 376, "2930": 376, "92067": 376, "735": 376, "271": 376, "4402": 376, "880": 376, "046": 376, "69186": 376, "1269": 376, "17436": 376, "1828": 376, "880179": 376, "2439": 376, "62123": 376, "264": 376, "14905": 376, "999": 376, "64253": 376, "1307": 376, "1413": 376, "1881": 376, "771439": 376, "2783": 376, "369429": 376, "451": 376, "288236": 376, "1047": 376, "209526": 376, "1441": 376, "148115": 376, "2038": 376, "106089": 376, "2846": 376, "53204": 376, "465": 376, "28593": 376, "939": 376, "368": 376, "0852": 376, "1113": 376, "685382": 376, "1762": 376, "408357": 376, "2958": 376, "4521": 376, "13466": 376, "853916": 376, "1392": 376, "642672": 376, "1850": 376, "446442": 376, "2663": 376, "0574189": 376, "876": 376, "0460811": 376, "1092": 376, "0389357": 376, "1292": 376, "031279": 376, "0234498": 376, "2146": 376, "204966": 376, "17364": 376, "1159": 376, "141097": 376, "1426": 376, "105192": 376, "1913": 376, "0677766": 376, "2970": 376, "21269": 376, "946": 376, "573": 376, "191564": 376, "1050": 376, "156368": 376, "1287": 376, "1565": 376, "0933565": 376, "2156": 376, "84983": 376, "789777": 376, "1019": 376, "598168": 376, "1346": 376, "433492": 376, "1857": 376, "269504": 376, "2988": 376, "74845": 376, "859": 376, "348": 376, "96945": 376, "811": 376, "505": 376, "77082": 376, "76407": 376, "1826": 376, "09719": 376, "2935": 376, "73162": 376, "00241": 376, "1072": 376, "39024": 376, "77317": 376, "1816": 376, "19536": 376, "2694": 376, "517278": 376, "875": 376, "708": 376, "382208": 376, "1185": 376, "317837": 376, "1425": 376, "233231": 376, "1942": 376, "152925": 376, "2962": 376, "44309": 376, "741": 376, "62409": 376, "1115": 376, "64963": 376, "1098": 376, "03923": 376, "1743": 376, "625089": 376, "2898": 376, "07006": 376, "861": 376, "632": 376, "64247": 376, "1085": 376, "33386": 376, "1337": 376, "994935": 376, "1792": 376, "68383": 376, "2608": 376, "0713578": 376, "940": 376, "0612457": 376, "0516788": 376, "1298": 376, "0414834": 376, "1617": 376, "0309886": 376, "2165": 376, "282241": 376, "951": 376, "085": 376, "238855": 376, "1123": 376, "193713": 376, "1385": 376, "146781": 376, "81": 376, "0938959": 376, "286141": 376, "122": 376, "257138": 376, "1043": 376, "214208": 376, "167575": 376, "1601": 376, "124072": 376, "2163": 376, "21431": 376, "884": 376, "237": 376, "955251": 376, "775294": 376, "1384": 376, "63282": 376, "1696": 376, "37333": 376, "2876": 376, "87335": 376, "317": 376, "65059": 376, "1176": 376, "94733": 376, "1457": 376, "62241": 376, "1637": 376, "47752": 376, "2906": 376, "75786": 376, "83024": 376, "889": 376, "87429": 376, "1108": 376, "87685": 376, "75328": 376, "2449": 376, "718776": 376, "289": 376, "561317": 376, "1076": 376, "429166": 376, "1407": 376, "317204": 376, "1904": 376, "208555": 376, "2896": 376, "94057": 376, "30458": 376, "1048": 376, "6702": 376, "25799": 376, "1920": 376, "84121": 376, "2871": 376, "34423": 376, "711": 376, "77444": 376, "857": 376, "10049": 376, "52509": 376, "926038": 376, "2568": 376, "00203027": 376, "1032": 376, "00198061": 376, "00179382": 376, "1169": 376, "00163713": 376, "1280": [376, 378], "00171023": 376, "1226": 376, "00395783": 376, "2119": 376, "00340452": 376, "2463": 376, "00308582": 376, "2718": 376, "00292684": 376, "2866": 376, "00217889": 376, "3849": 376, "00437142": 376, "1918": 376, "00418212": 376, "2005": 376, "00344785": 376, "2433": 376, "00291005": 376, "2882": 376, "00293671": 376, "2856": 376, "0120946": 376, "2774": 376, "0103377": 376, "3245": 376, "00850778": 376, "3943": 376, "00659512": 376, "5087": 376, "00484669": 376, "6923": 376, "0524509": 376, "2558": 376, "0428737": 376, "3130": 376, "0323642": 376, "4147": 376, "0231199": 376, "5805": 376, "0152199": 376, "8818": 376, "0451228": 376, "2974": 376, "0373823": 376, "3590": 376, "0302746": 376, "4433": 376, "023182": 376, "5789": 376, "0161696": 376, "8300": 376, "00731429": 376, "2580": 376, "00633179": 376, "2980": 376, "00535855": 376, "3522": 376, "00449335": 376, "4200": 376, "00341811": 376, "5521": 376, "0270028": 376, "2795": 376, "02197": 376, "3436": 376, "0177477": 376, "4253": 376, "0131335": 376, "5748": 376, "00897444": 376, "8412": 376, "0257188": 376, "2889": 376, "0218969": 376, "3393": 376, "0180933": 376, "4107": 376, "013742": 376, "5408": 376, "00992419": 376, "7488": 376, "00289114": 376, "1450": 376, "00245821": 376, "00252331": 376, "1662": 376, "00226557": 376, "1851": 376, "00180316": 376, "2326": 376, "00578904": 376, "00500361": 376, "3353": 376, "0042401": 376, "3956": 376, "00350486": 376, "4786": 376, "00297233": 376, "5644": 376, "00693265": 376, "2420": 376, "00593063": 376, "2828": 376, "00526697": 376, "3185": 376, "00480098": 376, "3494": 376, "00385131": 376, "4356": 376, "0193516": 376, "3467": 376, "0166254": 376, "4036": 376, "0132869": 376, "5050": 376, "0106293": 376, "6313": 376, "00759056": 376, "8841": 376, "0977256": 376, "2746": 376, "0813271": 376, "0656322": 376, "4090": 376, "0476463": 376, "5633": 376, "0295362": 376, "9088": 376, "0736189": 376, "3646": 376, "0603789": 376, "4445": 376, "0489938": 376, "5478": 376, "036992": 376, "7256": 376, "0258802": 376, "10372": 376, "0116589": 376, "3237": 376, "00979113": 376, "3855": 376, "00811779": 376, "4650": 376, "00667871": 376, "5652": 376, "00493861": 376, "7643": 376, "0537768": 376, "2807": 376, "0459135": 376, "3288": 376, "03588": 376, "4208": 376, "0252901": 376, "5970": 376, "0167419": 376, "9018": 376, "0407051": 376, "3651": 376, "0342908": 376, "4334": 376, "028568": 376, "5202": 376, "0218703": 376, "6796": 376, "016186": 376, "9183": 376, "0031551": 376, "0029515": 376, "00265488": 376, "2369": 376, "00243581": 376, "2582": 376, "00223598": 376, "2813": 376, "00745008": 376, "3377": 376, "00656544": 376, "3833": 376, "00542595": 376, "4638": 376, "00425647": 376, "5912": 376, "0034657": 376, "7261": 376, "00835933": 376, "3010": 376, "00741956": 376, "3391": 376, "0065352": 376, "3850": 376, "00555918": 376, "4526": 376, "00488058": 376, "5156": 376, "0257262": 376, "3912": 376, "0217468": 376, "4628": 376, "0176505": 376, "5703": 376, "0137122": 376, "7341": 376, "00980134": 376, "10270": 376, "124749": 376, "3227": 376, "103385": 376, "3894": 376, "0832193": 376, "4838": 376, "0626013": 376, "6432": 376, "0397992": 376, "10117": 376, "101071": 376, "3983": 376, "0825665": 376, "4876": 376, "0668515": 376, "6023": 376, "0487727": 376, "8255": 376, "0354192": 376, "11368": 376, "0147718": 376, "0127799": 376, "4430": 376, "0105324": 376, "5376": 376, "00869796": 376, "6509": 376, "00643591": 376, "8798": 376, "0698868": 376, "3240": 376, "0588583": 376, "3848": 376, "0473412": 376, "4784": 376, "0346142": 376, "6543": 376, "0222947": 376, "10159": 376, "0538146": 376, "4142": 376, "0454583": 376, "4904": 376, "0373579": 376, "5968": 376, "0291396": 376, "7651": 376, "0208901": 376, "10672": 376, "00393589": 376, "00332212": 376, "2525": 376, "00317296": 376, "2643": 376, "00269113": 376, "3117": 376, "00235812": 376, "3557": 376, "009382": 376, "3576": 376, "00828943": 376, "4047": 376, "00672351": 376, "4990": 376, "00514768": 376, "6518": 376, "0040612": 376, "8262": 376, "0107115": 376, "3132": 376, "00920252": 376, "00794258": 376, "4224": 376, "00698123": 376, "4806": 376, "00561026": 376, "5980": 376, "0345669": 376, "3882": 376, "0289719": 376, "4632": 376, "0232584": 376, "5770": 376, "0179766": 376, "7466": 376, "0128144": 376, "10474": 376, "158162": 376, "3394": 376, "132552": 376, "4050": 376, "101844": 376, "5271": 376, "080936": 376, "6633": 376, "0530097": 376, "10127": 376, "135839": 376, "3952": 376, "11116": 376, "4829": 376, "0899513": 376, "0633017": 376, "8481": 376, "0467462": 376, "11484": 376, "0192628": 376, "3919": 376, "0164591": 376, "4586": 376, "0135348": 376, "5578": 376, "0107712": 376, "7009": 376, "00761117": 376, "9919": 376, "0854876": 376, "3532": 376, "0747271": 376, "4041": 376, "0604759": 376, "4993": 376, "0417964": 376, "7225": 376, "0275467": 376, "10962": 376, "0713821": 376, "4164": 376, "0600772": 376, "4948": 376, "0496581": 376, "5986": 376, "0381385": 376, "7794": 376, "027025": 376, "10999": 376, "00502473": 376, "2086": 376, "00451855": 376, "00396819": 376, "00338962": 376, "3093": 376, "00315343": 376, "3325": 376, "0147951": 376, "2834": 376, "0126225": 376, "3322": 376, "010269": 376, "4084": 376, "00785878": 376, "5337": 376, "00570293": 376, "7354": 376, "0161691": 376, "2594": 376, "0144483": 376, "2902": 376, "011705": 376, "3583": 376, "0101487": 376, "4132": 376, "00879332": 376, "4769": 376, "0560297": 376, "2994": 376, "0467998": 376, "3584": 376, "0374397": 376, "4481": 376, "028166": 376, "5956": 376, "0192593": 376, "8711": 376, "277815": 376, "2415": 376, "229837": 376, "2919": 376, "1787": 376, "3755": 376, "126545": 376, "5303": 376, "0835321": 376, "8033": 376, "224925": 376, "2983": 376, "184256": 376, "3642": 376, "146452": 376, "4582": 376, "108899": 376, "6162": 376, "0740655": 376, "9060": 376, "0319455": 376, "2954": 376, "0268136": 376, "3519": 376, "0217062": 376, "4347": 376, "0166666": 376, "5662": 376, "0116466": 376, "8102": 376, "150549": 376, "2507": 376, "119951": 376, "3147": 376, "0893092": 376, "4226": 376, "0637226": 376, "5923": 376, "0427839": 376, "8823": 376, "122421": 376, "3035": 376, "102244": 376, "0822007": 376, "4520": 376, "0622484": 376, "5969": 376, "0429436": 376, "8652": 376, "00481074": 376, "00443796": 376, "2835": 376, "00389863": 376, "00343822": 376, "3659": 376, "00297784": 376, "4225": 376, "0145757": 376, "3453": 376, "012078": 376, "4167": 376, "00896329": 376, "5615": 376, "00727645": 376, "6917": 376, "00548478": 376, "9176": 376, "0150624": 376, "3341": 376, "0132428": 376, "3800": 376, "011443": 376, "4398": 376, "0092883": 376, "5418": 376, "00744553": 376, "6759": 376, "0543977": 376, "3701": 376, "0445693": 376, "4517": 376, "0363329": 376, "5541": 376, "0270492": 376, "7442": 376, "0187415": 376, "10742": 376, "267367": 376, "3011": 376, "223615": 376, "3601": 376, "1797": 376, "134716": 376, "5977": 376, "0692752": 376, "11624": 376, "222661": 376, "3616": 376, "179525": 376, "4485": 376, "139298": 376, "5781": 376, "0958787": 376, "8399": 376, "176292": 376, "4568": 376, "0700283": 376, "0258341": 376, "4383": 376, "0207504": 376, "5457": 376, "0161277": 376, "7021": 376, "0116008": 376, "9761": 376, "148512": 376, "3050": 376, "124238": 376, "0995304": 376, "4551": 376, "0714324": 376, "6341": 376, "044154": 376, "10259": 376, "113174": 376, "3940": 376, "0961662": 376, "4636": 376, "0765841": 376, "5822": 376, "0592912": 376, "7520": 376, "0416614": 376, "10703": 376, "00655654": 376, "2239": 376, "00584761": 376, "2510": 376, "00502113": 376, "2923": 376, "00466269": 376, "3148": 376, "00393276": 376, "3732": 376, "0203923": 376, "2879": 376, "0171018": 376, "3433": 376, "0137027": 376, "4285": 376, "0109527": 376, "5361": 376, "00749636": 376, "7833": 376, "0221319": 376, "0193761": 376, "3030": 376, "0158773": 376, "3698": 376, "0134367": 376, "4370": 376, "0116365": 376, "5046": 376, "0780751": 376, "3008": 376, "0651551": 376, "3604": 376, "0521945": 376, "4500": 376, "0394101": 376, "5959": 376, "0262706": 376, "8940": 376, "398509": 376, "2357": 376, "332153": 376, "259051": 376, "3626": 376, "184412": 376, "5094": 376, "119678": 376, "7850": 376, "313656": 376, "2995": 376, "257989": 376, "3641": 376, "206049": 376, "4559": 376, "152848": 376, "6146": 376, "103125": 376, "9110": 376, "0444861": 376, "2969": 376, "037334": 376, "3538": 376, "0302293": 376, "0231979": 376, "5695": 376, "0158702": 376, "8325": 376, "219777": 376, "2404": 376, "17764": 376, "2975": 376, "135864": 376, "3889": 376, "100424": 376, "5262": 376, "0677547": 376, "7799": 376, "172356": 376, "3018": 376, "144231": 376, "3606": 376, "116019": 376, "4483": 376, "0873881": 376, "5953": 376, "0596004": 376, "8728": 376, "00609695": 376, "2751": 376, "00517637": 376, "3241": 376, "00448956": 376, "3736": 376, "00394876": 376, "4248": 376, "00317463": 376, "5284": 376, "0204832": 376, "3276": 376, "0137691": 376, "4873": 376, "0114194": 376, "5876": 376, "00893304": 376, "7512": 376, "00653312": 376, "10272": 376, "0192409": 376, "3487": 376, "0168348": 376, "3986": 376, "0142343": 376, "4714": 376, "0119455": 376, "5617": 376, "00910648": 376, "7369": 376, "0781101": 376, "0614806": 376, "4366": 376, "046201": 376, "5810": 376, "0357023": 376, "7518": 376, "0222103": 376, "12086": 376, "326917": 376, "3284": 376, "273363": 376, "3927": 376, "220994": 376, "4858": 376, "166153": 376, "6462": 376, "0854403": 376, "12567": 376, "311348": 376, "3448": 376, "243012": 376, "4418": 376, "187933": 376, "5713": 376, "126819": 376, "8466": 376, "0855686": 376, "12548": 376, "0404778": 376, "3730": 376, "0329699": 376, "4579": 376, "0265272": 376, "5692": 376, "0207815": 376, "7265": 376, "0139037": 376, "10860": 376, "183003": 376, "161443": 376, "3741": 376, "129767": 376, "4654": 376, "0893345": 376, "6760": 376, "0610684": 376, "9890": 376, "15525": 376, "3829": 376, "125772": 376, "4727": 376, "101434": 376, "5861": 376, "0765083": 376, "7770": 376, "0537321": 376, "11064": 376, "0104209": 376, "3219": 376, "00908195": 376, "3694": 376, "00781277": 376, "4294": 376, "00651108": 376, "5153": 376, "0051719": 376, "6487": 376, "0321377": 376, "4176": 376, "0269904": 376, "4972": 376, "0220014": 376, "6100": 376, "016901": 376, "7941": 376, "0120042": 376, "11180": 376, "0373802": 376, "0314895": 376, "4262": 376, "0266731": 376, "5031": 376, "0217822": 376, "6161": 376, "0168219": 376, "7978": 376, "176031": 376, "3049": 376, "134442": 376, "3993": 376, "0843776": 376, "6362": 376, "0640577": 376, "8381": 376, "043787": 376, "12261": 376, "697876": 376, "3077": 376, "615338": 376, "3489": 376, "350147": 376, "6133": 376, "267289": 376, "8034": 376, "179695": 376, "11950": 376, "703207": 376, "3053": 376, "561805": 376, "3822": 376, "423052": 376, "5076": 376, "254835": 376, "171434": 376, "12526": 376, "0933483": 376, "3235": 376, "0725632": 376, "4161": 376, "0539197": 376, "5600": 376, "0376119": 376, "8029": 376, "0263137": 376, "11476": 376, "407388": 376, "340939": 376, "3543": 376, "261028": 376, "4627": 376, "151649": 376, "7965": 376, "103379": 376, "11684": 376, "358769": 376, "3314": 376, "283046": 376, "4201": 376, "212152": 376, "5604": 376, "158502": 376, "7502": 376, "107514": 376, "11059": 376, "0148329": 376, "0129116": 376, "3898": 376, "0110537": 376, "4553": 376, "00925277": 376, "5439": 376, "00716987": 376, "7019": 376, "0526609": 376, "3823": 376, "0447282": 376, "4501": 376, "0365834": 376, "5503": 376, "0274874": 376, "7324": 376, "0183895": 376, "10947": 376, "0556653": 376, "0465882": 376, "4321": 376, "039411": 376, "5108": 376, "0318745": 376, "6316": 376, "024706": 376, "8148": 376, "263316": 376, "3058": 376, "198303": 376, "4061": 376, "141966": 376, "5672": 376, "105849": 376, "7608": 376, "0687866": 376, "11707": 376, "793822": 376, "4057": 376, "996979": 376, "3230": 376, "54288": 376, "5933": 376, "412174": 376, "7815": 376, "274441": 376, "11737": 376, "03474": 376, "3113": 376, "832701": 376, "3868": 376, "564787": 376, "421781": 376, "7637": 376, "271587": 376, "11860": 376, "130834": 376, "3462": 376, "0943305": 376, "4802": 376, "0760123": 376, "0580473": 376, "7803": 376, "0395342": 376, "11458": 376, "635729": 376, "2850": 376, "379899": 376, "307908": 376, "5884": 376, "233057": 376, "7774": 376, "157518": 376, "11503": 376, "518276": 376, "3441": 376, "422517": 376, "4221": 376, "323476": 376, "5513": 376, "247251": 376, "7213": 376, "163369": 376, "10917": 376, "0192313": 376, "0168147": 376, "3991": 376, "0143274": 376, "4683": 376, "011932": 376, "5624": 376, "00914975": 376, "7334": 376, "0723144": 376, "3712": 376, "0613803": 376, "4373": 376, "050021": 376, "5366": 376, "0376949": 376, "7121": 376, "0249397": 376, "10763": 376, "0796627": 376, "3369": 376, "0616695": 376, "4352": 376, "0521326": 376, "5149": 376, "042188": 376, "0325741": 376, "8240": 376, "380582": 376, "2821": 376, "24038": 376, "4466": 376, "195271": 376, "5498": 376, "146935": 376, "7307": 376, "0948318": 376, "11322": 376, "08794": 376, "3947": 376, "913626": 376, "4701": 376, "737943": 376, "5820": 376, "558473": 376, "7690": 376, "369466": 376, "51009": 376, "2844": 376, "26974": 376, "3382": 376, "778244": 376, "5518": 376, "589803": 376, "7282": 376, "375284": 376, "11444": 376, "160705": 376, "3758": 376, "135495": 376, "4457": 376, "108718": 376, "5555": 376, "0811198": 376, "7445": 376, "0533513": 376, "11320": 376, "614109": 376, "3934": 376, "518614": 376, "418491": 376, "5772": 376, "31592": 376, "7647": 376, "211893": 376, "11401": 376, "836616": 376, "2842": 376, "699579": 376, "3399": 376, "544194": 376, "379699": 376, "228043": 376, "10428": 376, "un": 377, "u": 377, "hotmap": 377, "jpg": 377, "x16": 378, "environment_vari": 378, "kernel_typ": [378, 379], "perfom": 378, "introduct": 378, "benchmark_it": 378, "benchmark_no_refresh": 378, "refresh": 378, "kxn": 378, "sparse_ratio": 378, "micro_b": 378, "output_fp32": 378, "micro_oc": 378, "sub_func_level": 378, "3d_infer": 378, "automaticlli": 378, "dsparse_lib_use_amx": 378, "amx_bf16_x16": 378, "output_bf16": 378, "interv": 378, "lower_bound": 378, "upper_bound": 378, "invalid": 378, "fp32_relu": 378, "src_dt": 378, "dst_dt": 378, "tanspos": 378, "4d": 378, "distinguish": 378, "bs0": 378, "bs1": 378, "scr2": 378, "avx512f_p2031_p2013": 378, "has_binary_add": 378, "tile_n": 378, "coeffici": 378, "vnni_noperm_p2031_p1302": 378, "suuport": 378, "d0xd1x": 378, "d0": 378, "dst_type": 378, "padding_mask": 378, "badd_dim": 378, "blank": 378, "2048": 378, "large_weight_threshold": 378, "add_bia": 378, "channel_num": 378, "quantize_dim_elt_num": 378, "src_data_typ": 378, "newli": 378, "subdir": 378, "benchmark_dir": 378, "bench_": 378, "cpp": 378, "test_": 378, "entranc": 378, "get_true_data_": 378, "check_result_": 378, "gen_case_": 378, "run_bench_": 378, "calc_flop": 378, "get_refresh_data_idx": 378, "benchmark_util": 378, "whitespac": 379, "labl": 379, "run_ci": 379, "overwrit": 379, "it_per_cor": 379, "discard": 379, "new_input_fil": 379, "medium_n": 379, "ci": 379, "apach": 380, "copyright": 380, "parti": 380, "accompani": 380, "research": 380, "wish": 380, "bibtex": 380, "misc": 380, "hanwen": 380, "haihao": 380, "shen": 380, "dong": 380, "hengyu": 380, "meng": 380, "wenxin": 380, "zhang": 380, "howpublish": 380, "url": 380, "year": 380, "logo": 380, "atom": 380, "phi": 380, "pentium": 380, "vtune": 380, "corpor": 380, "subsidiari": 380, "toler": 381, "rel": 381, "conjunct": 381, "absolut": [381, 384, 385], "proport": [381, 382], "vision": 383, "speech": 383, "multimod": 383, "text_classifi": 383, "great": 383, "9998425245285034": 383, "believ": 383, "beauti": 383, "evoc": 383, "ve": 383, "seen": 383, "9998886585235596": 383, "bear": 384, "brain": 384, "damag": 384, "hypothesi": 384, "yann": 384, "lecun": 384, "salient": 384, "anywher": 384, "filter": 384, "magnitud": 384, "lowest": 384, "lock": 384, "freez": 384, "grouplasso": 384, "hyper": 384, "didn": 384, "pruning_conf": 384, "littl": 385, "degrad": 385, "ex": 385, "affin": 385, "convers": 385, "math": 385, "zeropoint": 385, "asymmetr": 385, "overflow": 385, "fp16": 385, "unseen": 385, "peopl": 385, "emul": 385, "fake": 385, "backward": 385, "mimic": 385, "made": 385, "ultim": 385, "either": 385, "pain": 385, "lossi": 385, "fx": 385, "eager": 385, "qat": 385, "site": 386, "assist": 386, "secur": 390, "legal": 390, "injector": 392}, "objects": {"": [[321, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [321, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [322, 1, 1, "_CPPv42jd", "jd"], [323, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [324, 1, 1, "_CPPv42jd", "jd"], [324, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [324, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [324, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [324, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [324, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [324, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [324, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [324, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [324, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [324, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [324, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [322, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [322, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [322, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [322, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [322, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [322, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [322, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [322, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [322, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [324, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [324, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [324, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [324, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [324, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [324, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [324, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [324, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [324, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [324, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [324, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [324, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [324, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [321, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [321, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [321, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::cpu_engine_t::create_kernel"], [321, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [321, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [321, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t", "jd::cpu_engine_t::create_stream"], [321, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [321, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [321, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [321, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [322, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [322, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [322, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [322, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [322, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [322, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [322, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [322, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [322, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [322, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [322, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [322, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [322, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [322, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [322, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [322, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [322, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [322, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [322, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [322, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [322, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [322, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [322, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [322, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [322, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [322, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [322, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [321, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [321, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [321, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [321, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [321, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [321, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [321, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [321, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [321, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [321, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [321, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [321, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [321, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [321, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [322, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [322, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [322, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [322, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [322, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [322, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [322, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [322, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [322, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [322, 3, 1, "_CPPv4N2jd9groupnormE", "jd::groupnorm"], [322, 4, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm"], [322, 4, 1, "_CPPv4N2jd9groupnorm9groupnormEv", "jd::groupnorm::groupnorm"], [322, 5, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm::kdp"], [322, 4, 1, "_CPPv4N2jd9groupnormD0Ev", "jd::groupnorm::~groupnorm"], [322, 3, 1, "_CPPv4N2jd14groupnorm_descE", "jd::groupnorm_desc"], [322, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc"], [322, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv", "jd::groupnorm_desc::groupnorm_desc"], [322, 5, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd14groupnorm_descD0Ev", "jd::groupnorm_desc::~groupnorm_desc"], [322, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [322, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [322, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [322, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [322, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [322, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [322, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [322, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [322, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [322, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [322, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [322, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [322, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [322, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [322, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [322, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [322, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [322, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [322, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [322, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [322, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [322, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [322, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [322, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [322, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [322, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [322, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [322, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [322, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [322, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [322, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [322, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [322, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [322, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [322, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [322, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [322, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [322, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [322, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [322, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [322, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [322, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [322, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [322, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [322, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [322, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [322, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [322, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [322, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [322, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [322, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [322, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [322, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [322, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [322, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [322, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [322, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [322, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [323, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [323, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [323, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [323, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [323, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [323, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [323, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [323, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [323, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [323, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [323, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [323, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [323, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [323, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [323, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [323, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [323, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [323, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [323, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [323, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [323, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [323, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [323, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [323, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [323, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [323, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [323, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv", "jd::operator_desc::tensor_dtypes"], [323, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv", "jd::operator_desc::tensor_ftypes"], [323, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_shapesEv", "jd::operator_desc::tensor_shapes"], [323, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [323, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [322, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [322, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [322, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [322, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [322, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [322, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [322, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [322, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [322, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [322, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [322, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [322, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [322, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [322, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [322, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [322, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [322, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [322, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [322, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [322, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [322, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [322, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [322, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [322, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [322, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [322, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [322, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [322, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [322, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [322, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [322, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [322, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [322, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [322, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [322, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [322, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [322, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [322, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [322, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [324, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [324, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [324, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [324, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [324, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [324, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [324, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [324, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [324, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [324, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [324, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [324, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [324, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [324, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [324, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [324, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [324, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [324, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [324, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [324, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [324, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [324, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [324, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [324, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [324, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [324, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [324, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [324, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [324, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [324, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [324, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [324, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [324, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [324, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [324, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [324, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [324, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [324, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [324, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [324, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [324, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [324, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [324, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [324, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [324, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [324, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [324, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [324, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [324, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [324, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [324, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [324, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [324, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [324, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [324, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE", "jd::ssd::matmul_fp8_data_t::matE"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [324, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE", "jd::ssd::matmul_fp8_data_t::scale"], [324, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE", "jd::ssd::matmul_fp8_param_t::has_append_sum"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E", "jd::ssd::matmul_fp8_param_t::has_scale0"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE", "jd::ssd::matmul_fp8_param_t::weight_8bit"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E", "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E", "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [324, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [324, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::APPEND_SUM"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [324, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::io::APPEND_SUM"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [324, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [324, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [324, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [324, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [324, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [324, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [324, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [324, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [324, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [324, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [324, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [324, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [324, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [324, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [324, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [324, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [324, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [324, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [324, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [324, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [324, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [324, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [324, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [324, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [324, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [324, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [324, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [324, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [324, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [324, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [324, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [324, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [324, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [324, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [324, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [324, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [324, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [324, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [324, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [324, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [324, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [324, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [324, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [324, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [324, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [324, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [324, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [324, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [324, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [324, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [324, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [324, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [324, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [324, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [324, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [324, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [324, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [324, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [324, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [324, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [324, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [324, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [324, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [324, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [324, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [324, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [324, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [324, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [324, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [324, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [324, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [324, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [324, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [324, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [324, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [324, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [324, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [324, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [324, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [324, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [322, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [322, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [322, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [322, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [322, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [322, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [322, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [322, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [322, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [322, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [322, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [322, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [322, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [322, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [322, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [322, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [322, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [322, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [322, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [201, 9, 0, "-", "intel_extension_for_transformers"], [236, 9, 0, "-", "sparsity_all"], [237, 9, 0, "-", "test_add_cls_token"], [238, 9, 0, "-", "test_add_embeddings"], [239, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [240, 9, 0, "-", "test_attention_reshape"], [241, 9, 0, "-", "test_bert_mini_fp32"], [242, 9, 0, "-", "test_binary_op"], [243, 9, 0, "-", "test_binaryop"], [244, 9, 0, "-", "test_cast_to"], [245, 9, 0, "-", "test_concat"], [246, 9, 0, "-", "test_conv_reshape"], [247, 9, 0, "-", "test_decoder_attn_reshape"], [248, 9, 0, "-", "test_dispatcher_tuning_acc"], [249, 9, 0, "-", "test_dispatcher_tuning_throughput"], [250, 9, 0, "-", "test_dynamic_quantization"], [251, 9, 0, "-", "test_electra"], [252, 9, 0, "-", "test_embedding"], [253, 9, 0, "-", "test_embeddingbag"], [254, 9, 0, "-", "test_execution_options"], [255, 9, 0, "-", "test_fwk"], [256, 9, 0, "-", "test_gelu"], [257, 9, 0, "-", "test_gpt_int8"], [258, 9, 0, "-", "test_graph_dispatch"], [259, 9, 0, "-", "test_graph_optimizer"], [260, 9, 0, "-", "test_insert_input_output_data"], [261, 9, 0, "-", "test_is_supported_onnx_graph"], [262, 9, 0, "-", "test_last_layer_shape"], [263, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [264, 9, 0, "-", "test_layer_norm_with_transpose"], [265, 9, 0, "-", "test_layernorm"], [266, 9, 0, "-", "test_linear"], [267, 9, 0, "-", "test_linear_int8"], [268, 9, 0, "-", "test_llama_pattern"], [269, 9, 0, "-", "test_main"], [270, 9, 0, "-", "test_matmul"], [271, 9, 0, "-", "test_matmul_int8"], [272, 9, 0, "-", "test_matmul_with_bias_relu"], [273, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [274, 9, 0, "-", "test_matmul_with_bias_tanh"], [275, 9, 0, "-", "test_merged_embeddingbag"], [276, 9, 0, "-", "test_model"], [277, 9, 0, "-", "test_onnx_utils"], [278, 9, 0, "-", "test_operator_adaptor"], [279, 9, 0, "-", "test_ops"], [280, 9, 0, "-", "test_padding_seq"], [281, 9, 0, "-", "test_padding_sequence"], [282, 9, 0, "-", "test_pattern_dispatch"], [283, 9, 0, "-", "test_permute"], [284, 9, 0, "-", "test_position_embeddings"], [285, 9, 0, "-", "test_pow"], [286, 9, 0, "-", "test_primitive_cache_acc"], [287, 9, 0, "-", "test_primitive_cache_throughput"], [288, 9, 0, "-", "test_qkv_merge"], [289, 9, 0, "-", "test_qkv_reshape"], [290, 9, 0, "-", "test_quant_onnx_execute"], [291, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [292, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [293, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [294, 9, 0, "-", "test_size"], [295, 9, 0, "-", "test_softmax"], [296, 9, 0, "-", "test_start_end_logits"], [297, 9, 0, "-", "test_tanh"], [298, 9, 0, "-", "test_text_encoder"], [299, 9, 0, "-", "test_text_encoder_bf16"], [300, 9, 0, "-", "test_tf_utils"], [301, 9, 0, "-", "test_token_type_embeddings"], [302, 9, 0, "-", "test_transpose"], [303, 9, 0, "-", "test_transpose_batch_matmul"], [304, 9, 0, "-", "test_unet"], [305, 9, 0, "-", "test_unet_bf16"], [306, 9, 0, "-", "test_unsqueeze"], [307, 9, 0, "-", "test_vae_decoder"], [308, 9, 0, "-", "test_vae_decoder_bf16"], [309, 9, 0, "-", "test_weight_sharing_acc"], [310, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [311, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [312, 9, 0, "-", "test_weight_sharing_throughput"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "api_doc_example"], [1, 9, 0, "-", "backends"], [194, 9, 0, "-", "evaluation"], [208, 9, 0, "-", "optimization"], [233, 9, 0, "-", "preprocessing"], [235, 9, 0, "-", "version"]], "intel_extension_for_transformers.api_doc_example": [[0, 10, 1, "", "ExampleClass"], [0, 11, 1, "", "attribute1"], [0, 13, 1, "", "function1"], [0, 13, 1, "", "function2"], [0, 13, 1, "", "function3"], [0, 13, 1, "", "generator1"], [0, 14, 1, "", "module_debug_level1"]], "intel_extension_for_transformers.api_doc_example.ExampleClass": [[0, 11, 1, "", "attr1"], [0, 11, 1, "", "attr2"], [0, 11, 1, "", "attr5"], [0, 12, 1, "", "method1"]], "intel_extension_for_transformers.backends": [[193, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[11, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[2, 9, 0, "-", "compile"], [4, 9, 0, "-", "extractors"], [9, 9, 0, "-", "graph"], [10, 9, 0, "-", "graph_utils"], [12, 9, 0, "-", "loaders"], [14, 9, 0, "-", "logger"], [15, 9, 0, "-", "onnx_utils"], [36, 9, 0, "-", "ops"], [81, 9, 0, "-", "optimizer"], [105, 9, 0, "-", "sub_graph"], [191, 9, 0, "-", "tf_utils"], [192, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, 13, 1, "", "compile"], [2, 13, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 9, 0, "-", "extractor"], [5, 9, 0, "-", "onnx_extractor"], [6, 9, 0, "-", "tf_extractor"], [7, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, 10, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, 10, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, 10, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, 10, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[8, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, 10, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[8, 12, 1, "", "add_config_item"], [8, 12, 1, "", "change_node_input_tensors"], [8, 12, 1, "", "change_node_output_tensors"], [8, 12, 1, "", "dump_tensor"], [8, 12, 1, "", "engine_init"], [8, 12, 1, "", "get_next_node_names"], [8, 12, 1, "", "get_node_by_name"], [8, 12, 1, "", "get_node_id"], [8, 12, 1, "", "get_pre_node_names"], [8, 12, 1, "", "get_sparse_nodes_name"], [8, 12, 1, "", "get_tensor_idx"], [8, 12, 1, "", "graph_dispatch"], [8, 12, 1, "", "graph_init"], [8, 12, 1, "", "inference"], [8, 12, 1, "", "inquire_config_item"], [8, 12, 1, "", "insert_nodes"], [8, 12, 1, "", "modify_node_connections"], [8, 12, 1, "", "remove_nodes"], [8, 12, 1, "", "rename_node"], [8, 12, 1, "", "save"], [8, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, 10, 1, "", "LazyImport"], [10, 13, 1, "", "autocast_init"], [10, 13, 1, "", "construct_node"], [10, 13, 1, "", "del_environ_var"], [10, 13, 1, "", "del_environ_vars"], [10, 13, 1, "", "environ_info_init"], [10, 13, 1, "", "get_autocast_info"], [10, 13, 1, "", "get_data_dtype"], [10, 13, 1, "", "get_environ_info"], [10, 13, 1, "", "get_model_fwk_name"], [10, 13, 1, "", "get_quant_info"], [10, 13, 1, "", "insert_environ_info"], [10, 13, 1, "", "insert_pattern"], [10, 13, 1, "", "insert_quant_info"], [10, 13, 1, "", "list2str"], [10, 13, 1, "", "names_from_input"], [10, 13, 1, "", "pattern_mapping"], [10, 13, 1, "", "pattern_mapping_conf_validation"], [10, 13, 1, "", "quant_info_init"], [10, 13, 1, "", "remove_environ_info_item"], [10, 13, 1, "", "remove_environ_info_items"], [10, 13, 1, "", "search_pattern"], [10, 13, 1, "", "search_straight_pattern"], [10, 13, 1, "", "set_autocast"], [10, 13, 1, "", "set_environ_var"], [10, 13, 1, "", "set_environ_vars"], [10, 13, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[13, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, 10, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, 10, 1, "", "Logger"], [14, 13, 1, "", "debug"], [14, 13, 1, "", "error"], [14, 13, 1, "", "fatal"], [14, 13, 1, "", "info"], [14, 13, 1, "", "log"], [14, 13, 1, "", "warn"], [14, 13, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[14, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, 13, 1, "", "bias_to_int32"], [15, 13, 1, "", "change_num_name"], [15, 13, 1, "", "get_children"], [15, 13, 1, "", "get_initializer_children_names"], [15, 13, 1, "", "get_node_children_names"], [15, 13, 1, "", "graph_node_names_details"], [15, 13, 1, "", "is_supported_onnx_graph"], [15, 13, 1, "", "is_supported_onnx_node"], [15, 13, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[16, 9, 0, "-", "all"], [17, 9, 0, "-", "assert"], [18, 9, 0, "-", "batch_matmul"], [19, 9, 0, "-", "batch_matmul_v2"], [20, 9, 0, "-", "bias_add"], [21, 9, 0, "-", "binary_op"], [22, 9, 0, "-", "cast"], [23, 9, 0, "-", "concat"], [24, 9, 0, "-", "conv"], [25, 9, 0, "-", "cos"], [26, 9, 0, "-", "empty_ops"], [27, 9, 0, "-", "expand_dims"], [28, 9, 0, "-", "fused_batch_matmul_v2"], [29, 9, 0, "-", "fused_batch_norm_v3"], [30, 9, 0, "-", "fused_gemm"], [31, 9, 0, "-", "fused_matmul"], [32, 9, 0, "-", "gather"], [33, 9, 0, "-", "gather_elements"], [34, 9, 0, "-", "gelu"], [35, 9, 0, "-", "gemm"], [37, 9, 0, "-", "iterator_get_next"], [38, 9, 0, "-", "iterator_v2"], [39, 9, 0, "-", "layer_normalization"], [40, 9, 0, "-", "log_softmax"], [41, 9, 0, "-", "map_and_batch_dataset"], [42, 9, 0, "-", "matmul"], [43, 9, 0, "-", "mean"], [44, 9, 0, "-", "mkl_layer_norm"], [45, 9, 0, "-", "model_dataset"], [46, 9, 0, "-", "one_hot"], [47, 9, 0, "-", "onnx_input"], [48, 9, 0, "-", "op"], [49, 9, 0, "-", "optimize_dataset"], [50, 9, 0, "-", "pack"], [51, 9, 0, "-", "padding_sequence"], [52, 9, 0, "-", "placeholder"], [53, 9, 0, "-", "pos_embed"], [54, 9, 0, "-", "pow"], [55, 9, 0, "-", "quantize_linear"], [56, 9, 0, "-", "quantize_v2"], [57, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [58, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [59, 9, 0, "-", "reduce_mean"], [60, 9, 0, "-", "reduce_sum"], [61, 9, 0, "-", "reorder"], [62, 9, 0, "-", "reshape"], [63, 9, 0, "-", "resize"], [64, 9, 0, "-", "rsub"], [65, 9, 0, "-", "scatter_elements"], [66, 9, 0, "-", "shape"], [67, 9, 0, "-", "sin"], [68, 9, 0, "-", "size"], [69, 9, 0, "-", "slice"], [70, 9, 0, "-", "slice_position_ids"], [71, 9, 0, "-", "softmax"], [72, 9, 0, "-", "split"], [73, 9, 0, "-", "squeeze"], [74, 9, 0, "-", "strided_slice"], [75, 9, 0, "-", "tensor"], [76, 9, 0, "-", "top_k"], [77, 9, 0, "-", "transpose"], [78, 9, 0, "-", "unpack"], [79, 9, 0, "-", "unsqueeze"], [80, 9, 0, "-", "view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, 10, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, 10, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, 10, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, 10, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[19, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, 10, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, 10, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, 10, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, 10, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, 10, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, 10, 1, "", "Add"], [26, 10, 1, "", "AddV2"], [26, 10, 1, "", "Arange"], [26, 10, 1, "", "BinaryAdd"], [26, 10, 1, "", "Constant"], [26, 10, 1, "", "ConstantOfShape"], [26, 10, 1, "", "Convolution"], [26, 10, 1, "", "CumSum"], [26, 10, 1, "", "Dequantize"], [26, 10, 1, "", "DequantizeLinear"], [26, 10, 1, "", "Einsum"], [26, 10, 1, "", "EmbeddingBag"], [26, 10, 1, "", "Erf"], [26, 10, 1, "", "Expand"], [26, 10, 1, "", "ExpandIndices"], [26, 10, 1, "", "Fill"], [26, 10, 1, "", "FlatMapDataset"], [26, 10, 1, "", "Flatten"], [26, 10, 1, "", "Floor_divide"], [26, 10, 1, "", "Identity"], [26, 10, 1, "", "InnerProduct"], [26, 10, 1, "", "Input"], [26, 10, 1, "", "LatRange"], [26, 10, 1, "", "ListConstruct"], [26, 10, 1, "", "ListUnpack"], [26, 10, 1, "", "Loop"], [26, 10, 1, "", "MakeIterator"], [26, 10, 1, "", "Masked_fill"], [26, 10, 1, "", "MatMulWithBias"], [26, 10, 1, "", "MatMulWithBiasAdd"], [26, 10, 1, "", "MatMulWithBiasGelu"], [26, 10, 1, "", "MatMulWithBiasRelu"], [26, 10, 1, "", "MatMulWithBiasSigmoid"], [26, 10, 1, "", "MatMulWithBiasTanh"], [26, 10, 1, "", "Matmul"], [26, 10, 1, "", "Max"], [26, 10, 1, "", "MergedEmbeddingbag"], [26, 10, 1, "", "MultiHeadAttenion"], [26, 10, 1, "", "Onehot"], [26, 10, 1, "", "OpAny"], [26, 10, 1, "", "Output"], [26, 10, 1, "", "PositionIds"], [26, 10, 1, "", "QLinearAdd"], [26, 10, 1, "", "QLinearMatMul"], [26, 10, 1, "", "QLinearMul"], [26, 10, 1, "", "Range"], [26, 10, 1, "", "RealDiv"], [26, 10, 1, "", "Reciprocal"], [26, 10, 1, "", "Relu"], [26, 10, 1, "", "Repeat"], [26, 10, 1, "", "Rsqrt"], [26, 10, 1, "", "SequenceLength"], [26, 10, 1, "", "Sigmoid"], [26, 10, 1, "", "Silu"], [26, 10, 1, "", "Sqrt"], [26, 10, 1, "", "Square"], [26, 10, 1, "", "SquaredDifference"], [26, 10, 1, "", "Stack"], [26, 10, 1, "", "StopGradient"], [26, 10, 1, "", "Tanh"], [26, 10, 1, "", "TensorSliceDataset"], [26, 10, 1, "", "Tile"], [26, 10, 1, "", "TokenTypeIds"], [26, 10, 1, "", "TransposeBatchMatMul"], [26, 10, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, 10, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, 10, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, 10, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, 10, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, 10, 1, "", "Gather"], [32, 10, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, 10, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, 10, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, 10, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, 10, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, 10, 1, "", "LayerNorm"], [39, 10, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, 10, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, 10, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, 10, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, 10, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, 10, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, 10, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, 10, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[47, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, 10, 1, "", "Operator"], [48, 13, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[48, 12, 1, "", "construct"], [48, 12, 1, "", "extract"], [48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, 10, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, 10, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, 10, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, 10, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, 10, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, 10, 1, "", "Quantize"], [55, 10, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, 10, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, 10, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, 10, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, 10, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, 10, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, 10, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[63, 10, 1, "", "Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[64, 10, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[65, 10, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[66, 10, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[67, 10, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[68, 10, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[68, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[70, 10, 1, "", "SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[71, 10, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[72, 10, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[73, 10, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[73, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[74, 10, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[75, 10, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[76, 10, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[77, 10, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[78, 10, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[79, 10, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[79, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[80, 10, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[80, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[81, 10, 1, "", "Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer": [[81, 12, 1, "", "optimize"], [81, 12, 1, "", "weight_optimization"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[82, 9, 0, "-", "InnerproductReshapeFusion"], [83, 9, 0, "-", "add_cls_token"], [84, 9, 0, "-", "add_embeddings"], [85, 9, 0, "-", "arangewithreciprocal"], [86, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [87, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [88, 9, 0, "-", "attentionBlock_QKVPreReshape"], [89, 9, 0, "-", "attentionBlock_QKVReshape"], [90, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [91, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [92, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [93, 9, 0, "-", "attention_reshape"], [94, 9, 0, "-", "cast_to"], [95, 9, 0, "-", "collect_quant_info"], [96, 9, 0, "-", "conv_reshape"], [97, 9, 0, "-", "decoder_attn_reshape"], [98, 9, 0, "-", "einsumwitharange"], [99, 9, 0, "-", "embeddingbag"], [100, 9, 0, "-", "embeddings_to_2d_before_inner_product"], [101, 9, 0, "-", "gelu"], [102, 9, 0, "-", "generate_sequence"], [103, 9, 0, "-", "groupNorm"], [104, 9, 0, "-", "groupNormSwish"], [106, 9, 0, "-", "innerproductwithbiasgelu"], [107, 9, 0, "-", "innerproductwithslice"], [108, 9, 0, "-", "innerproductwithswish"], [109, 9, 0, "-", "input_data"], [110, 9, 0, "-", "input_file"], [111, 9, 0, "-", "insert_bf16_node"], [112, 9, 0, "-", "insert_quant_node"], [113, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [114, 9, 0, "-", "interact_features"], [115, 9, 0, "-", "last_layer_shape"], [116, 9, 0, "-", "layer_norm"], [117, 9, 0, "-", "layer_norm_with_reduce_mean"], [118, 9, 0, "-", "layer_norm_with_transpose"], [119, 9, 0, "-", "llama_embeding"], [120, 9, 0, "-", "llama_matmulwithtranspose"], [121, 9, 0, "-", "llama_postprocess"], [122, 9, 0, "-", "llama_rotary_pos_emb"], [123, 9, 0, "-", "lower_all_tuples"], [124, 9, 0, "-", "matmul_with_bias"], [125, 9, 0, "-", "matmul_with_bias_add"], [126, 9, 0, "-", "matmul_with_bias_gelu"], [127, 9, 0, "-", "matmul_with_bias_relu"], [128, 9, 0, "-", "matmul_with_bias_sigmoid"], [129, 9, 0, "-", "matmul_with_bias_tanh"], [130, 9, 0, "-", "matmul_with_bias_unsqueeze"], [131, 9, 0, "-", "matmul_with_transpose"], [132, 9, 0, "-", "matmul_with_transpose_scale_add"], [133, 9, 0, "-", "merged_embeddingbag"], [134, 9, 0, "-", "multi_head_attention"], [135, 9, 0, "-", "operator_adaptor"], [136, 9, 0, "-", "output_data"], [137, 9, 0, "-", "padding_sequence"], [138, 9, 0, "-", "pattern"], [139, 9, 0, "-", "position_embeddings"], [140, 9, 0, "-", "position_embeddings_v1"], [141, 9, 0, "-", "qkv_merge"], [142, 9, 0, "-", "qkv_reshape"], [143, 9, 0, "-", "quant_gather_to_bf16"], [144, 9, 0, "-", "quantize_fusion"], [145, 9, 0, "-", "quantized_graph_dtype_refactor"], [146, 9, 0, "-", "remove_constant_op"], [147, 9, 0, "-", "remove_last_view"], [148, 9, 0, "-", "remove_range"], [149, 9, 0, "-", "removeslice"], [150, 9, 0, "-", "reshape_after_restore_hidden_states"], [151, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [152, 9, 0, "-", "reshape_before_restore_hidden_states"], [153, 9, 0, "-", "reshape_fusion"], [154, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [155, 9, 0, "-", "rms_norm"], [156, 9, 0, "-", "rotary_pos_emb"], [157, 9, 0, "-", "slicemask"], [158, 9, 0, "-", "stableDiffusion_ExplicitNHWCTranspose"], [159, 9, 0, "-", "stableDiffusion_MHA"], [160, 9, 0, "-", "stableDiffusion_MHAReshape"], [161, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [162, 9, 0, "-", "stableDiffusion_bf16Convert"], [163, 9, 0, "-", "start_end_logits"], [164, 9, 0, "-", "subgraph_matcher"], [165, 9, 0, "-", "textEncdoer_word_embedding"], [166, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [167, 9, 0, "-", "textEncoder_AttentionReshape"], [168, 9, 0, "-", "textEncoder_KVReshape"], [169, 9, 0, "-", "textEncoder_MulReshape"], [170, 9, 0, "-", "textEncoder_QReshape"], [171, 9, 0, "-", "textEncoder_SoftmaxReshape"], [172, 9, 0, "-", "textEncoder_causal_attention_mask"], [173, 9, 0, "-", "token_type_embeddings"], [174, 9, 0, "-", "token_type_embeddings_v1"], [175, 9, 0, "-", "torch_embedding"], [176, 9, 0, "-", "torch_ip_insert_bias"], [177, 9, 0, "-", "torchinsertbf16node"], [178, 9, 0, "-", "torchpaddingsquence"], [179, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [180, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [181, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [182, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [183, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [184, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [185, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [186, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [187, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [188, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [189, 9, 0, "-", "transpose_batch_matmul"], [190, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[82, 10, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[83, 10, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[84, 10, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[85, 10, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[86, 10, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[87, 10, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[88, 10, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[89, 10, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[90, 10, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[91, 10, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[92, 10, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[93, 10, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[94, 10, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[95, 10, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[96, 10, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[97, 10, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[98, 10, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[99, 10, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[100, 10, 1, "", "EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[101, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[102, 10, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[103, 10, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[104, 10, 1, "", "GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[106, 10, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[107, 10, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[108, 10, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[109, 10, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[110, 10, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[111, 10, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[112, 10, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[113, 10, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[114, 10, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[115, 10, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[116, 10, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[117, 10, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[118, 10, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[119, 10, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[120, 10, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[121, 10, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[122, 10, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[123, 10, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[124, 10, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[125, 10, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[126, 10, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[127, 10, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[128, 10, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[129, 10, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[130, 10, 1, "", "MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[131, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[132, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[133, 10, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[134, 10, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[135, 10, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[136, 10, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[137, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[138, 10, 1, "", "Pattern"], [138, 13, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[139, 10, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[140, 10, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[141, 10, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[142, 10, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[143, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[144, 10, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[145, 10, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[146, 10, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[147, 10, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[148, 10, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[149, 10, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[150, 10, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[151, 10, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[152, 10, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[153, 10, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[154, 10, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[155, 10, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[156, 10, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[157, 10, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[158, 10, 1, "", "ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[159, 10, 1, "", "StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[160, 10, 1, "", "StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[161, 10, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[162, 10, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[163, 10, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[164, 10, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[165, 10, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[166, 10, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[167, 10, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[168, 10, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[169, 10, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[170, 10, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[171, 10, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[172, 10, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[173, 10, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[174, 10, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[175, 10, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[176, 10, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[177, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[178, 10, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[179, 10, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[180, 10, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[181, 10, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[182, 10, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[183, 10, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[184, 10, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[185, 10, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[186, 10, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[187, 10, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[188, 10, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[189, 10, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[190, 10, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[191, 14, 1, "", "TF_DTYPE_ID"], [191, 13, 1, "", "create_tf_node"], [191, 13, 1, "", "get_tensor_dest_op"], [191, 13, 1, "", "graph_node_names_details"], [191, 13, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[192, 13, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[196, 9, 0, "-", "lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval": [[195, 9, 0, "-", "evaluator"], [198, 9, 0, "-", "models"], [199, 9, 0, "-", "tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[195, 13, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[197, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[197, 10, 1, "", "AutoCausalLM"], [197, 10, 1, "", "AutoSeq2SeqLM"], [197, 10, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[200, 9, 0, "-", "lambada"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[200, 10, 1, "", "LambadaOpenAI"], [200, 10, 1, "", "LambadaStandard"]], "intel_extension_for_transformers.optimization": [[202, 9, 0, "-", "benchmark"], [203, 9, 0, "-", "config"], [204, 9, 0, "-", "distillation"], [207, 9, 0, "-", "dynamic"], [210, 9, 0, "-", "mixture"], [211, 9, 0, "-", "model"], [213, 9, 0, "-", "nas"], [215, 9, 0, "-", "optimizer"], [216, 9, 0, "-", "optimizer_tf"], [217, 9, 0, "-", "pipeline"], [218, 9, 0, "-", "pruner"], [220, 9, 0, "-", "pruning"], [221, 9, 0, "-", "quantization"], [222, 9, 0, "-", "trainer"], [224, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[202, 13, 1, "", "benchmark"], [202, 13, 1, "", "get_example_inputs"], [202, 13, 1, "", "preprocess_model"], [202, 13, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[203, 10, 1, "", "AutoDistillationConfig"], [203, 10, 1, "", "BenchmarkConfig"], [203, 10, 1, "", "DistillationConfig"], [203, 10, 1, "", "DynamicLengthConfig"], [203, 10, 1, "", "FlashDistillationConfig"], [203, 10, 1, "", "NASConfig"], [203, 10, 1, "", "Provider"], [203, 10, 1, "", "PrunerV2"], [203, 10, 1, "", "PruningConfig"], [203, 10, 1, "", "QuantizationConfig"], [203, 10, 1, "", "TFDistillationConfig"], [203, 10, 1, "", "WeightPruningConfig"], [203, 13, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[203, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[204, 10, 1, "", "Criterion"], [204, 10, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[205, 9, 0, "-", "drop_and_restore_utils"], [206, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[205, 13, 1, "", "sample_layer_configuration"], [205, 13, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[206, 10, 1, "", "Evolution"], [206, 13, 1, "", "approx_ratio"], [206, 13, 1, "", "inverse"], [206, 13, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[206, 12, 1, "", "add_gene"], [206, 12, 1, "", "convex_hull"], [206, 12, 1, "", "crossover"], [206, 12, 1, "", "get_store"], [206, 12, 1, "", "load_store"], [206, 12, 1, "", "mutate"], [206, 12, 1, "", "pareto_frontier"], [206, 12, 1, "", "save_population"], [206, 12, 1, "", "save_store"], [206, 12, 1, "", "set_lower_constraint"], [206, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[209, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[209, 10, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[209, 12, 1, "", "create_distillers"], [209, 12, 1, "", "estimate"], [209, 12, 1, "", "init_by_cfg"], [209, 12, 1, "", "load_search_results"], [209, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[211, 10, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[211, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[212, 9, 0, "-", "basic_nas"], [214, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[212, 10, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[212, 12, 1, "", "estimate"], [212, 12, 1, "", "execute"], [212, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[214, 10, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[215, 10, 1, "", "NoTrainerOptimizer"], [215, 10, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[215, 12, 1, "", "distill"], [215, 12, 1, "", "init_distiller"], [215, 12, 1, "", "init_pruner"], [215, 12, 1, "", "init_quantizer"], [215, 12, 1, "", "prune"], [215, 12, 1, "", "quantize"], [215, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[215, 12, 1, "", "fit"], [215, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[216, 10, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[216, 12, 1, "", "autodistill"], [216, 12, 1, "", "build_train_func"], [216, 12, 1, "", "builtin_eval_func"], [216, 12, 1, "", "distill"], [216, 12, 1, "", "init_distiller"], [216, 12, 1, "", "init_pruner"], [216, 12, 1, "", "init_quantizer"], [216, 12, 1, "", "model_builder_builtin"], [216, 12, 1, "", "prune"], [216, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[217, 13, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruner": [[219, 9, 0, "-", "pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[219, 10, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning.Pruning": [[219, 11, 1, "", "config_file_path"], [219, 12, 1, "", "get_sparsity_ratio"], [219, 11, 1, "", "model"], [219, 12, 1, "", "on_after_eval"], [219, 12, 1, "", "on_after_optimizer_step"], [219, 12, 1, "", "on_before_eval"], [219, 12, 1, "", "on_before_optimizer_step"], [219, 12, 1, "", "on_epoch_begin"], [219, 12, 1, "", "on_epoch_end"], [219, 12, 1, "", "on_step_begin"], [219, 12, 1, "", "on_step_end"], [219, 12, 1, "", "on_train_begin"], [219, 12, 1, "", "on_train_end"], [219, 11, 1, "", "pruner_info"], [219, 11, 1, "", "pruners"], [219, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pruning": [[220, 10, 1, "", "PrunerConfig"], [220, 10, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.quantization": [[221, 10, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[222, 10, 1, "", "BaseTrainer"], [222, 10, 1, "", "NLPSeq2SeqTrainer"], [222, 10, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[222, 12, 1, "", "auto_distil_evaluation_loop"], [222, 12, 1, "", "autodistillation"], [222, 12, 1, "", "benchmark"], [222, 12, 1, "", "builtin_eval_func"], [222, 12, 1, "", "builtin_train_func"], [222, 12, 1, "", "compute_loss"], [222, 12, 1, "", "create_optimizer_builtin"], [222, 12, 1, "", "distill"], [222, 12, 1, "", "export_to_bf16_onnx"], [222, 12, 1, "", "export_to_fp32_onnx"], [222, 12, 1, "", "export_to_int8_onnx"], [222, 12, 1, "", "export_to_jit"], [222, 12, 1, "", "export_to_onnx"], [222, 12, 1, "", "init_distiller"], [222, 12, 1, "", "init_pruner"], [222, 12, 1, "", "init_quantizer"], [222, 12, 1, "", "model_builder_builtin"], [222, 12, 1, "", "nas"], [222, 12, 1, "", "orchestrate_optimizations"], [222, 12, 1, "", "prune"], [222, 12, 1, "", "quantize"], [222, 12, 1, "", "run_evolutionary_search"], [222, 12, 1, "", "set_dynamic_config"], [222, 12, 1, "", "train"], [222, 12, 1, "", "training_step"], [222, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[222, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[223, 9, 0, "-", "get_throughput"], [225, 9, 0, "-", "metrics"], [226, 9, 0, "-", "models"], [229, 9, 0, "-", "objectives"], [230, 9, 0, "-", "utility"], [231, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[225, 10, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[227, 9, 0, "-", "modeling_bert_dynamic"], [228, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[227, 10, 1, "", "BertAttention"], [227, 10, 1, "", "BertEmbeddings"], [227, 10, 1, "", "BertEncoder"], [227, 10, 1, "", "BertForMaskedLM"], [227, 10, 1, "", "BertForMultipleChoice"], [227, 10, 1, "", "BertForNextSentencePrediction"], [227, 10, 1, "", "BertForPreTraining"], [227, 10, 1, "", "BertForPreTrainingOutput"], [227, 10, 1, "", "BertForQuestionAnswering"], [227, 10, 1, "", "BertForSequenceClassification"], [227, 10, 1, "", "BertForTokenClassification"], [227, 10, 1, "", "BertIntermediate"], [227, 10, 1, "", "BertLMHeadModel"], [227, 10, 1, "", "BertLMPredictionHead"], [227, 10, 1, "", "BertLayer"], [227, 10, 1, "", "BertModel"], [227, 10, 1, "", "BertOnlyMLMHead"], [227, 10, 1, "", "BertOnlyNSPHead"], [227, 10, 1, "", "BertOutput"], [227, 10, 1, "", "BertPooler"], [227, 10, 1, "", "BertPreTrainedModel"], [227, 10, 1, "", "BertPreTrainingHeads"], [227, 10, 1, "", "BertPredictionHeadTransform"], [227, 10, 1, "", "BertSelfAttention"], [227, 10, 1, "", "BertSelfOutput"], [227, 13, 1, "", "expand_gather"], [227, 13, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "get_output_embeddings"], [227, 12, 1, "", "prepare_inputs_for_generation"], [227, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "get_output_embeddings"], [227, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "get_output_embeddings"], [227, 12, 1, "", "prepare_inputs_for_generation"], [227, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[227, 12, 1, "", "feed_forward_chunk"], [227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "get_input_embeddings"], [227, 12, 1, "", "set_input_embeddings"], [227, 12, 1, "", "set_length_config"], [227, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[228, 10, 1, "", "RobertaAttention"], [228, 10, 1, "", "RobertaClassificationHead"], [228, 10, 1, "", "RobertaEmbeddings"], [228, 10, 1, "", "RobertaEncoder"], [228, 10, 1, "", "RobertaForCausalLM"], [228, 10, 1, "", "RobertaForMaskedLM"], [228, 10, 1, "", "RobertaForMultipleChoice"], [228, 10, 1, "", "RobertaForQuestionAnswering"], [228, 10, 1, "", "RobertaForSequenceClassification"], [228, 10, 1, "", "RobertaForTokenClassification"], [228, 10, 1, "", "RobertaIntermediate"], [228, 10, 1, "", "RobertaLMHead"], [228, 10, 1, "", "RobertaLayer"], [228, 10, 1, "", "RobertaModel"], [228, 10, 1, "", "RobertaOutput"], [228, 10, 1, "", "RobertaPooler"], [228, 10, 1, "", "RobertaPreTrainedModel"], [228, 10, 1, "", "RobertaSelfAttention"], [228, 10, 1, "", "RobertaSelfOutput"], [228, 13, 1, "", "create_position_ids_from_input_ids"], [228, 13, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[228, 12, 1, "", "create_position_ids_from_inputs_embeds"], [228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "get_output_embeddings"], [228, 12, 1, "", "prepare_inputs_for_generation"], [228, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "get_output_embeddings"], [228, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[228, 12, 1, "", "feed_forward_chunk"], [228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "get_input_embeddings"], [228, 12, 1, "", "set_input_embeddings"], [228, 12, 1, "", "set_length_config"], [228, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[228, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[229, 10, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[229, 12, 1, "", "modelsize"], [229, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[230, 13, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[231, 10, 1, "", "TFDataloader"], [231, 13, 1, "", "distributed_init"], [231, 13, 1, "", "get_filepath"], [231, 13, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[232, 9, 0, "-", "data_augmentation"], [234, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[232, 10, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[232, 12, 1, "", "data_augment"], [232, 12, 1, "", "mit_data_augmentation"], [232, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[234, 10, 1, "", "AugmenterType"], [234, 13, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[237, 10, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[237, 12, 1, "", "setUpClass"], [237, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[238, 10, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[238, 12, 1, "", "setUpClass"], [238, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[239, 10, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[239, 12, 1, "", "setUpClass"], [239, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[240, 10, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[240, 12, 1, "", "setUpClass"], [240, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[241, 10, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[241, 12, 1, "", "setUpClass"], [241, 12, 1, "", "tearDownClass"]], "test_binary_op": [[242, 10, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[242, 12, 1, "", "setUpClass"], [242, 12, 1, "", "tearDownClass"]], "test_binaryop": [[243, 10, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[243, 12, 1, "", "setUpClass"], [243, 12, 1, "", "tearDownClass"]], "test_cast_to": [[244, 10, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[244, 12, 1, "", "setUpClass"], [244, 12, 1, "", "tearDownClass"]], "test_concat": [[245, 10, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[245, 12, 1, "", "setUpClass"], [245, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[246, 10, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[246, 12, 1, "", "setUpClass"], [246, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[247, 10, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[247, 12, 1, "", "setUpClass"], [247, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[248, 10, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[248, 12, 1, "", "setUpClass"], [248, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[249, 10, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[249, 12, 1, "", "setUpClass"], [249, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[250, 10, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[250, 12, 1, "", "setUpClass"], [250, 12, 1, "", "tearDownClass"]], "test_electra": [[251, 10, 1, "", "TestElectra"]], "test_electra.TestElectra": [[251, 12, 1, "", "setUpClass"], [251, 12, 1, "", "tearDownClass"]], "test_embedding": [[252, 10, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[252, 12, 1, "", "setUpClass"], [252, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[253, 10, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[253, 12, 1, "", "setUpClass"], [253, 12, 1, "", "tearDownClass"]], "test_execution_options": [[254, 10, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[254, 12, 1, "", "setUpClass"], [254, 12, 1, "", "tearDownClass"]], "test_fwk": [[255, 10, 1, "", "TestFWK"]], "test_fwk.TestFWK": [[255, 12, 1, "", "setUpClass"], [255, 12, 1, "", "tearDownClass"]], "test_gelu": [[256, 10, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[256, 12, 1, "", "setUpClass"], [256, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[257, 10, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[258, 10, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_graph_optimizer": [[259, 10, 1, "", "TestExecutionOptions"]], "test_graph_optimizer.TestExecutionOptions": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[260, 10, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[261, 10, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"], [261, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[262, 10, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[263, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[264, 10, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_layernorm": [[265, 10, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_linear": [[266, 10, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[267, 10, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[268, 10, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_main": [[269, 10, 1, "", "TestMain"]], "test_main.TestMain": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_matmul": [[270, 10, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[271, 10, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[272, 10, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[273, 10, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[274, 10, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[275, 10, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[277, 10, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[278, 10, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_ops": [[279, 10, 1, "", "TestOps"]], "test_ops.TestOps": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[280, 10, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[281, 10, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[282, 10, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_permute": [[283, 10, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[284, 10, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_pow": [[285, 10, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[286, 10, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[287, 10, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[288, 10, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[289, 10, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[290, 10, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[291, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[292, 10, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[293, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_size": [[294, 10, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_softmax": [[295, 10, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[296, 10, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_tanh": [[297, 10, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[298, 10, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[299, 10, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[300, 10, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[301, 10, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_transpose": [[302, 10, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[303, 10, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[303, 12, 1, "", "setUpClass"], [303, 12, 1, "", "tearDownClass"]], "test_unet": [[304, 10, 1, "", "TestUnet"]], "test_unet.TestUnet": [[304, 12, 1, "", "setUpClass"], [304, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[305, 10, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[305, 12, 1, "", "setUpClass"], [305, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[306, 10, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[307, 10, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[308, 10, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[309, 10, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[310, 10, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[310, 12, 1, "", "setUpClass"], [310, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[311, 10, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[311, 12, 1, "", "setUpClass"], [311, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[312, 10, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[312, 12, 1, "", "setUpClass"], [312, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:method", "13": "py:function", "14": "py:data"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "method", "Python method"], "13": ["py", "function", "Python function"], "14": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 345, 352], "api_doc_exampl": 0, "modul": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 200, 202, 203, 204, 205, 206, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "content": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 200, 202, 203, 204, 205, 206, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 389, 394], "class": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 200, 203, 204, 206, 209, 211, 212, 214, 215, 216, 219, 220, 221, 222, 225, 227, 228, 229, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 323, 333, 381], "function": [0, 2, 10, 14, 15, 36, 48, 105, 138, 191, 192, 195, 202, 203, 205, 206, 217, 227, 228, 230, 231, 234], "attribut": [0, 36, 105, 191, 343, 353], "backend": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 349, 354, 383], "neural_engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "compil": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 318, 358], "extractor": [3, 4, 5, 6, 7], "submodul": [4, 9, 11, 12, 36, 105, 199, 201, 207, 208, 210, 213, 218, 224, 226, 233], "onnx_extractor": 5, "tf_extractor": 6, "torch_extractor": 7, "graph": [8, 9, 319, 354, 356, 357], "graph_util": 10, "subpackag": [11, 193, 208], "loader": [12, 13], "logger": 14, "onnx_util": 15, "op": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 353, 356], "all": 16, "assert": 17, "batch_matmul": 18, "batch_matmul_v2": 19, "bias_add": 20, "binary_op": 21, "cast": 22, "concat": 23, "conv": 24, "co": 25, "empty_op": 26, "expand_dim": 27, "fused_batch_matmul_v2": 28, "fused_batch_norm_v3": 29, "fused_gemm": 30, "fused_matmul": 31, "gather": 32, "gather_el": 33, "gelu": [34, 101], "gemm": [35, 368, 369, 371, 374], "packag": [36, 105], "iterator_get_next": 37, "iterator_v2": 38, "layer_norm": [39, 116], "log_softmax": 40, "map_and_batch_dataset": 41, "matmul": [42, 370, 371, 372], "mean": [43, 366], "mkl_layer_norm": 44, "model_dataset": 45, "one_hot": 46, "onnx_input": 47, "optimize_dataset": 49, "pack": 50, "padding_sequ": [51, 137], "placehold": 52, "pos_emb": 53, "pow": 54, "quantize_linear": 55, "quantize_v2": 56, "quantized_fused_matmul_and_dequant": 57, "quantized_matmul_with_bias_and_dequant": 58, "reduce_mean": 59, "reduce_sum": 60, "reorder": [61, 368, 372, 373, 374], "reshap": 62, "resiz": 63, "rsub": 64, "scatter_el": 65, "shape": 66, "sin": 67, "size": [68, 370], "slice": 69, "slice_position_id": 70, "softmax": [71, 378], "split": 72, "squeez": 73, "strided_slic": 74, "tensor": 75, "top_k": 76, "transpos": [77, 372, 373], "unpack": 78, "unsqueez": 79, "view": 80, "optim": [81, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 328, 329], "sub_graph": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "innerproductreshapefus": 82, "add_cls_token": 83, "add_embed": 84, "arangewithreciproc": 85, "attentionblock_attentionmaskaddreshap": 86, "attentionblock_constantofshapewithmul": 87, "attentionblock_qkvprereshap": 88, "attentionblock_qkvreshap": 89, "attentionblock_weightreshapeto4d": 90, "attention_mask_length_adaptive_keep_indic": 91, "attention_output_layer_norm_length_adaptive_keep_indic": 92, "attention_reshap": 93, "cast_to": 94, "collect_quant_info": 95, "conv_reshap": 96, "decoder_attn_reshap": 97, "einsumwitharang": 98, "embeddingbag": 99, "embeddings_to_2d_before_inner_product": 100, "generate_sequ": 102, "groupnorm": 103, "groupnormswish": 104, "innerproductwithbiasgelu": 106, "innerproductwithslic": 107, "innerproductwithswish": 108, "input_data": 109, "input_fil": 110, "insert_bf16_nod": 111, "insert_quant_nod": 112, "int8_bf16_mixed_precision_check": 113, "interact_featur": 114, "last_layer_shap": 115, "layer_norm_with_reduce_mean": 117, "layer_norm_with_transpos": 118, "llama_embed": 119, "llama_matmulwithtranspos": 120, "llama_postprocess": 121, "llama_rotary_pos_emb": 122, "lower_all_tupl": 123, "matmul_with_bia": 124, "matmul_with_bias_add": 125, "matmul_with_bias_gelu": 126, "matmul_with_bias_relu": 127, "matmul_with_bias_sigmoid": 128, "matmul_with_bias_tanh": 129, "matmul_with_bias_unsqueez": 130, "matmul_with_transpos": 131, "matmul_with_transpose_scale_add": 132, "merged_embeddingbag": 133, "multi_head_attent": 134, "operator_adaptor": 135, "output_data": 136, "pattern": [138, 353, 356, 357, 361, 368, 369, 374], "position_embed": 139, "position_embeddings_v1": 140, "qkv_merg": 141, "qkv_reshap": 142, "quant_gather_to_bf16": 143, "quantize_fus": 144, "quantized_graph_dtype_refactor": 145, "remove_constant_op": 146, "remove_last_view": 147, "remove_rang": 148, "removeslic": 149, "reshape_after_restore_hidden_st": 150, "reshape_before_and_after_attention_out_layer_norm_gather_el": 151, "reshape_before_restore_hidden_st": 152, "reshape_fus": 153, "restore_hidden_states_in_length_adaptive_update_indic": 154, "rms_norm": 155, "rotary_pos_emb": 156, "slicemask": 157, "stablediffusion_explicitnhwctranspos": 158, "stablediffusion_mha": 159, "stablediffusion_mhareshap": 160, "stablediffusion_reshapefus": 161, "stablediffusion_bf16convert": 162, "start_end_logit": 163, "subgraph_match": 164, "textencdoer_word_embed": 165, "textencoder_attentionmaskaddreshap": 166, "textencoder_attentionreshap": 167, "textencoder_kvreshap": 168, "textencoder_mulreshap": 169, "textencoder_qreshap": 170, "textencoder_softmaxreshap": 171, "textencoder_causal_attention_mask": 172, "token_type_embed": 173, "token_type_embeddings_v1": 174, "torch_embed": 175, "torch_ip_insert_bia": 176, "torchinsertbf16nod": 177, "torchpaddingsqu": 178, "transformer2dmodel_attentionmaskaddreshap": 179, "transformer2dmodel_constantofshapewithmul": 180, "transformer2dmodel_ffnslic": 181, "transformer2dmodel_ffnslice_1": 182, "transformer2dmodel_qkvprereshap": 183, "transformer2dmodel_qkvreshap": 184, "transformer2dmodel_qkvreshape4d": 185, "transformer2dmodel_encoderhiddenstatesreshap": 186, "transformer2dmodel_getsamplebatch": 187, "transformer2dmodel_sampleslic": 188, "transpose_batch_matmul": 189, "word_embed": 190, "tf_util": 191, "torch_util": 192, "evalu": [194, 195, 196, 197, 198, 199, 200], "lm_eval": [195, 196, 197, 198, 199, 200], "model": [197, 198, 211, 226, 227, 228, 314, 327, 334, 346, 349, 354, 355, 358, 359, 377, 383], "huggingfac": 197, "task": [199, 200], "lambada": 200, "benchmark": [202, 334, 359, 378], "config": [203, 326, 333, 353, 356], "distil": [204, 333, 347, 348, 350], "dynam": [205, 206, 207, 370, 385], "drop_and_restore_util": 205, "evolut": 206, "mixtur": [209, 210], "auto_distil": 209, "na": [212, 213, 214, 348], "basic_na": 212, "optimizer_tf": [216, 333], "pipelin": [217, 333, 383], "pruner": [218, 219], "prune": [219, 220, 348, 350, 384], "quantiz": [221, 348, 350, 359, 385], "trainer": [222, 330, 333, 347, 384, 385], "util": [223, 224, 225, 226, 227, 228, 229, 230, 231, 234], "get_throughput": 223, "metric": [225, 347, 381, 384, 385], "modeling_bert_dynam": 227, "modeling_roberta_dynam": 228, "object": [229, 382, 385], "utility_tf": 231, "preprocess": [232, 233, 234, 370], "data_augment": 232, "version": [235, 352], "sparsity_al": 236, "test_add_cls_token": 237, "test_add_embed": 238, "test_attention_output_layer_norm_length_adaptive_keep_indic": 239, "test_attention_reshap": 240, "test_bert_mini_fp32": 241, "test_binary_op": 242, "test_binaryop": 243, "test_cast_to": 244, "test_concat": 245, "test_conv_reshap": 246, "test_decoder_attn_reshap": 247, "test_dispatcher_tuning_acc": 248, "test_dispatcher_tuning_throughput": 249, "test_dynamic_quant": 250, "test_electra": 251, "test_embed": 252, "test_embeddingbag": 253, "test_execution_opt": 254, "test_fwk": 255, "test_gelu": 256, "test_gpt_int8": 257, "test_graph_dispatch": 258, "test_graph_optim": 259, "test_insert_input_output_data": 260, "test_is_supported_onnx_graph": 261, "test_last_layer_shap": 262, "test_layer_norm_with_reduce_mean": 263, "test_layer_norm_with_transpos": 264, "test_layernorm": 265, "test_linear": 266, "test_linear_int8": 267, "test_llama_pattern": 268, "test_main": 269, "test_matmul": 270, "test_matmul_int8": 271, "test_matmul_with_bias_relu": 272, "test_matmul_with_bias_sigmoid": 273, "test_matmul_with_bias_tanh": 274, "test_merged_embeddingbag": 275, "test_model": 276, "test_onnx_util": 277, "test_operator_adaptor": 278, "test_op": 279, "test_padding_seq": 280, "test_padding_sequ": 281, "test_pattern_dispatch": 282, "test_permut": 283, "test_position_embed": 284, "test_pow": 285, "test_primitive_cache_acc": 286, "test_primitive_cache_throughput": 287, "test_qkv_merg": 288, "test_qkv_reshap": 289, "test_quant_onnx_execut": 290, "test_reshape_after_restore_hidden_st": 291, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 292, "test_reshape_before_restore_hidden_st": 293, "test_siz": 294, "test_softmax": 295, "test_start_end_logit": 296, "test_tanh": 297, "test_text_encod": 298, "test_text_encoder_bf16": 299, "test_tf_util": 300, "test_token_type_embed": 301, "test_transpos": 302, "test_transpose_batch_matmul": 303, "test_unet": 304, "test_unet_bf16": 305, "test_unsqueez": 306, "test_vae_decod": 307, "test_vae_decoder_bf16": 308, "test_weight_sharing_acc": 309, "test_weight_sharing_dispatcher_tuning_acc": 310, "test_weight_sharing_dispatcher_tuning_throughtput": 311, "test_weight_sharing_throughput": 312, "secur": 313, "polici": 313, "report": 313, "vulner": 313, "intel": [314, 332, 337, 346, 348, 390], "extens": [314, 332, 337, 346, 348, 390], "transform": [314, 332, 337, 346, 348, 350, 363, 390], "acceler": [314, 350, 363, 367], "base": [314, 348], "platform": [314, 362, 376], "select": 314, "public": 314, "event": 314, "api": [315, 316, 317, 320, 325, 331, 333, 334, 349, 355, 363], "document": [316, 337, 390], "exampl": [316, 333, 334, 335, 348, 349, 355, 358, 378, 382, 383, 388], "python": [317, 355], "engin": [320, 321, 341, 348, 350, 352, 354, 356, 358, 359, 362, 394], "kernel": [322, 325, 338, 356, 363, 367, 370, 378, 391], "operator_desc": [323, 365, 366], "oper": [324, 355, 360], "specif": 324, "type": [324, 353, 384], "pytorch": [328, 333, 334, 347, 348], "tensorflow": [329, 333, 347, 348], "user": [331, 342, 363, 365, 366, 387, 395], "face": 331, "architectur": [332, 354], "autodistil": 333, "design": [333, 359], "framework": [333, 365, 366], "criterion": [333, 347], "knowledgedistillationloss": 333, "intermediatelayersknowledgedistillationloss": 333, "usag": [333, 347, 349, 365, 366, 378, 384], "flash": 333, "regular": 333, "introduct": [334, 345, 347, 349, 353, 355, 356, 357, 358, 361, 363, 365, 366, 367, 368, 372, 377, 381, 382, 383, 384, 385], "get": [334, 345, 346, 350, 355, 359, 381, 385], "start": [334, 345, 346, 350, 381, 385], "stock": [334, 348], "ipex": [334, 348], "output": [334, 346], "featur": [336, 365, 366, 385, 389], "welcom": [337, 390], "section": [337, 390], "implement": [339, 392], "detail": [339, 370, 373, 392], "perform": [340, 362, 363, 375, 376, 393], "neural": [341, 348, 350, 352, 354, 362, 394], "guid": [342, 387, 395], "contributor": [343, 344], "coven": [343, 344], "code": [343, 344], "conduct": [343, 344], "our": 343, "pledg": 343, "standard": 343, "respons": 343, "scope": 343, "enforc": 343, "contribut": 344, "guidelin": 344, "pull": 344, "request": 344, "checklist": 344, "templat": 344, "support": [344, 345, 346, 349, 358, 362, 363, 381, 382, 385], "data": [345, 369, 376], "augment": 345, "instal": [345, 346, 351, 352, 359, 363], "depend": 345, "script": [345, 347, 384, 385], "paramet": 345, "text": 345, "gener": [345, 354], "argument": 345, "overview": 346, "recommend": 346, "hardwar": [346, 351], "valid": [346, 351, 376], "environ": [346, 351, 359], "how": [346, 356, 377], "work": [346, 367], "1": [346, 354, 355, 359, 360, 377], "prerequisit": [346, 351, 352, 359, 370], "2": [346, 354, 359, 360, 377], "from": [346, 351, 352], "pypi": [346, 351], "conda": 346, "3": [346, 354, 377], "sourc": [346, 351], "To": [346, 359], "run": [346, 354, 355, 359, 377], "requir": [346, 351], "prepar": [346, 358, 359, 377], "dataset": [346, 359], "compress": 346, "4": [346, 354, 376], "infer": [346, 354, 364, 383], "expect": 346, "summari": [346, 381], "next": 346, "step": 346, "learn": 346, "more": [346, 356, 367], "knowledg": [347, 348], "intermedi": 347, "layer": [347, 371], "creat": [347, 357, 384, 385], "an": [347, 358, 384, 385], "instanc": [347, 384, 385], "option": [347, 356, 384, 385], "distillationconfig": 347, "length": [348, 350], "adapt": [348, 350], "auto": 348, "orchestr": 348, "refer": [348, 363], "deploy": 348, "dens": [348, 367], "spars": [348, 355, 367, 368, 369, 371, 374, 377], "export": 349, "onnx": [349, 354, 358, 359], "matrix": [349, 362, 363, 370, 382, 385], "fp32": 349, "bf16": 349, "int8": [349, 359, 383], "For": [349, 378], "executor": [349, 360, 383], "linux": 351, "window": 351, "system": 351, "softwar": 351, "stabl": 352, "pip": 352, "binari": [352, 354, 365], "deploi": [352, 354], "bare": 352, "metal": 352, "add": [353, 360], "custom": [353, 354, 360], "regist": [353, 360], "node": [353, 357], "set": [353, 355], "map": [353, 357], "fuse": 353, "new": [353, 357], "after": 353, "fusion": [353, 357], "integr": 354, "tf": 354, "us": [354, 370], "through": 354, "manual": 354, "yaml": 354, "weight": [354, 370, 377], "build": [354, 363, 378], "profil": [355, 375], "profl": 355, "you": 355, "can": 355, "onli": 355, "engine_profil": 355, "befor": 355, "c": 355, "part": 355, "csv": 355, "ratio": 355, "total": 355, "level": 355, "json": 355, "iter": 355, "tune": [356, 359, 385], "dispatch": 356, "best": 356, "relat": 356, "runtim": 356, "turn": 356, "mechan": 356, "dict": 357, "obtain": 357, "necessari": 357, "inform": [357, 380], "construct": 357, "establish": 357, "connect": 357, "remov": [357, 361], "old": 357, "insert": 357, "ir": [358, 359], "format": [358, 369, 379], "low": 359, "precis": 359, "its": 359, "accuraci": [359, 385], "h": 360, "includ": 360, "cpp": 360, "src": 360, "recogn": 361, "represent": 361, "pars": 361, "list": [361, 384], "search": 361, "each": 361, "straight": 361, "chain": 361, "splice": 361, "sub": 361, "main": 361, "duplic": 361, "result": [361, 377], "configur": [362, 376], "librari": 363, "test": 363, "sparse_matmul": [363, 378], "3d": 364, "memori": 364, "layout": 364, "spmm_vnni": [364, 378], "cach": 364, "issu": 364, "injector": [365, 366], "param_typ": [365, 366], "hpp": [365, 366], "jit_binaryop_injector": 365, "develop": [365, 366, 378], "": [365, 366], "perspect": [365, 366], "element": 366, "wise": 366, "alpha": 366, "beta": 366, "scale": 366, "jit_eltwise_injector": 366, "naiv": 367, "tile": 367, "effici": 367, "per": 367, "thread": [367, 376], "prefetch": 367, "amx": 368, "brief": 368, "isa": 368, "avx512f": 369, "kei": 369, "instruct": 369, "loop": 369, "quant": 370, "problem": [370, 371, 372, 373], "descript": [370, 371, 373], "differ": 370, "jit": 370, "path": 370, "small_wei": 370, "large_wei": 370, "normal": 371, "layernorm": 371, "pre": 371, "comput": 371, "spmm": 371, "direct": 371, "layernorm_ba": [371, 378], "statement": 372, "matmul_p2031_2013": 372, "matmul_avx512f_p2031_p2013": [372, 378], "matmul_noperm_p2031_p1302": 372, "matmul_vnni_noperm_p2013_p1302": 372, "beforehand": 372, "mha": [373, 378], "calcul": 373, "vnni": 374, "On": 374, "fly": 374, "activ": 374, "candid": 374, "verbos": 375, "vtune": 375, "sde": 375, "singl": 376, "multi": 376, "visual": 377, "distribut": 377, "setup": 377, "below": 377, "command": 377, "analysi": 377, "spmm_avx512f": 378, "spmm_amx_bf16_x16": 378, "eltwiseop": 378, "transpose_matmul": 378, "matmul_vnni_noperm_p2031_p1302": 378, "attent": 378, "static": [378, 385], "dynamic_quant_matmul": 378, "dynamic_qu": 378, "input": 379, "legal": 380, "licens": 380, "citat": 380, "trademark": 380, "prunerconfig": 384, "pruningconfig": 384, "fundament": 385, "approach": 385, "post": 385, "train": 385, "awar": 385, "quantizationconfig": 385, "releas": 386, "note": 386}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [189, "module-contents"], [190, "module-contents"], [191, "module-contents"], [192, "module-contents"], [195, "module-contents"], [197, "module-contents"], [200, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [209, "module-contents"], [211, "module-contents"], [212, "module-contents"], [214, "module-contents"], [215, "module-contents"], [216, "module-contents"], [217, "module-contents"], [219, "module-contents"], [220, "module-contents"], [221, "module-contents"], [222, "module-contents"], [225, "module-contents"], [227, "module-contents"], [228, "module-contents"], [229, "module-contents"], [230, "module-contents"], [231, "module-contents"], [232, "module-contents"], [234, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [241, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [247, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [302, "module-contents"], [303, "module-contents"], [304, "module-contents"], [305, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"], [310, "module-contents"], [311, "module-contents"], [312, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"], [187, "classes"], [188, "classes"], [189, "classes"], [190, "classes"], [197, "classes"], [200, "classes"], [203, "classes"], [204, "classes"], [206, "classes"], [209, "classes"], [211, "classes"], [212, "classes"], [214, "classes"], [215, "classes"], [216, "classes"], [219, "classes"], [220, "classes"], [221, "classes"], [222, "classes"], [225, "classes"], [227, "classes"], [228, "classes"], [229, "classes"], [231, "classes"], [232, "classes"], [234, "classes"], [237, "classes"], [238, "classes"], [239, "classes"], [240, "classes"], [241, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [247, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [254, "classes"], [255, "classes"], [256, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"], [303, "classes"], [304, "classes"], [305, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"], [310, "classes"], [311, "classes"], [312, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [10, "functions"], [14, "functions"], [15, "functions"], [36, "functions"], [48, "functions"], [105, "functions"], [138, "functions"], [191, "functions"], [192, "functions"], [195, "functions"], [202, "functions"], [203, "functions"], [205, "functions"], [206, "functions"], [217, "functions"], [227, "functions"], [228, "functions"], [230, "functions"], [231, "functions"], [234, "functions"]], "Attributes": [[0, "attributes"], [36, "attributes"], [105, "attributes"], [191, "attributes"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [36, "submodules"], [105, "submodules"], [199, "submodules"], [201, "submodules"], [207, "submodules"], [208, "submodules"], [210, "submodules"], [213, "submodules"], [218, "submodules"], [224, "submodules"], [226, "submodules"], [233, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[11, "subpackages"], [193, "subpackages"], [208, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[36, "package-contents"], [105, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[193, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[194, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[195, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[196, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[197, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[198, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[199, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[200, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[201, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[202, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[203, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[204, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[205, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[206, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[207, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[208, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[209, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[210, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[211, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[212, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[213, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[214, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[215, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[216, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[217, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[218, "module-intel_extension_for_transformers.optimization.pruner"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[219, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "intel_extension_for_transformers.optimization.pruning": [[220, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.quantization": [[221, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[222, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[223, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[224, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[225, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[226, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[227, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[228, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[229, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[230, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[231, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[232, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[233, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[234, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[235, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[236, "module-sparsity_all"]], "test_add_cls_token": [[237, "module-test_add_cls_token"]], "test_add_embeddings": [[238, "module-test_add_embeddings"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[239, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[240, "module-test_attention_reshape"]], "test_bert_mini_fp32": [[241, "module-test_bert_mini_fp32"]], "test_binary_op": [[242, "module-test_binary_op"]], "test_binaryop": [[243, "module-test_binaryop"]], "test_cast_to": [[244, "module-test_cast_to"]], "test_concat": [[245, "module-test_concat"]], "test_conv_reshape": [[246, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[247, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[248, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[249, "module-test_dispatcher_tuning_throughput"]], "test_dynamic_quantization": [[250, "module-test_dynamic_quantization"]], "test_electra": [[251, "module-test_electra"]], "test_embedding": [[252, "module-test_embedding"]], "test_embeddingbag": [[253, "module-test_embeddingbag"]], "test_execution_options": [[254, "module-test_execution_options"]], "test_fwk": [[255, "module-test_fwk"]], "test_gelu": [[256, "module-test_gelu"]], "test_gpt_int8": [[257, "module-test_gpt_int8"]], "test_graph_dispatch": [[258, "module-test_graph_dispatch"]], "test_graph_optimizer": [[259, "module-test_graph_optimizer"]], "test_insert_input_output_data": [[260, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[261, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[262, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[263, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[264, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[265, "module-test_layernorm"]], "test_linear": [[266, "module-test_linear"]], "test_linear_int8": [[267, "module-test_linear_int8"]], "test_llama_pattern": [[268, "module-test_llama_pattern"]], "test_main": [[269, "module-test_main"]], "test_matmul": [[270, "module-test_matmul"]], "test_matmul_int8": [[271, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[272, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[273, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[274, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[275, "module-test_merged_embeddingbag"]], "test_model": [[276, "module-test_model"]], "test_onnx_utils": [[277, "module-test_onnx_utils"]], "test_operator_adaptor": [[278, "module-test_operator_adaptor"]], "test_ops": [[279, "module-test_ops"]], "test_padding_seq": [[280, "module-test_padding_seq"]], "test_padding_sequence": [[281, "module-test_padding_sequence"]], "test_pattern_dispatch": [[282, "module-test_pattern_dispatch"]], "test_permute": [[283, "module-test_permute"]], "test_position_embeddings": [[284, "module-test_position_embeddings"]], "test_pow": [[285, "module-test_pow"]], "test_primitive_cache_acc": [[286, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[287, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[288, "module-test_qkv_merge"]], "test_qkv_reshape": [[289, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[290, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[291, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[292, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[293, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[294, "module-test_size"]], "test_softmax": [[295, "module-test_softmax"]], "test_start_end_logits": [[296, "module-test_start_end_logits"]], "test_tanh": [[297, "module-test_tanh"]], "test_text_encoder": [[298, "module-test_text_encoder"]], "test_text_encoder_bf16": [[299, "module-test_text_encoder_bf16"]], "test_tf_utils": [[300, "module-test_tf_utils"]], "test_token_type_embeddings": [[301, "module-test_token_type_embeddings"]], "test_transpose": [[302, "module-test_transpose"]], "test_transpose_batch_matmul": [[303, "module-test_transpose_batch_matmul"]], "test_unet": [[304, "module-test_unet"]], "test_unet_bf16": [[305, "module-test_unet_bf16"]], "test_unsqueeze": [[306, "module-test_unsqueeze"]], "test_vae_decoder": [[307, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[308, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[309, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[310, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[311, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[312, "module-test_weight_sharing_throughput"]], "Security Policy": [[313, "security-policy"]], "Report a Vulnerability": [[313, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[314, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[314, "selected-publications-events"]], "API": [[315, "api"]], "API Document Example": [[316, "api-document-example"]], "Python APIs": [[317, "python-apis"]], "Compile": [[318, "compile"]], "Graph": [[319, "graph"]], "Engine API": [[320, "engine-api"]], "Class engine": [[321, "class-engine"]], "Class Kernel": [[322, "class-kernel"]], "Class operator_desc": [[323, "class-operator-desc"]], "Operator Specific Types": [[324, "operator-specific-types"]], "Kernel APIs": [[325, "kernel-apis"]], "Config": [[326, "config"]], "Model": [[327, "model"]], "PyTorch Optimizer": [[328, "pytorch-optimizer"]], "TensorFlow Optimizer": [[329, "tensorflow-optimizer"]], "Trainer": [[330, "trainer"]], "User-facing API": [[331, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[332, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[333, "autodistillation-design"]], "AutoDistillation Pipeline": [[333, "autodistillation-pipeline"]], "Framework Class Design": [[333, "framework-class-design"]], "Criterion Class Design": [[333, "criterion-class-design"]], "KnowledgeDistillationLoss": [[333, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[333, "intermediatelayersknowledgedistillationloss"]], "Usage": [[333, "usage"], [365, "usage"], [366, "usage"], [378, "usage"], [384, "usage"]], "Pytorch": [[333, "pytorch"]], "AutoDistillation API in Trainer": [[333, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[333, "flash-distillation-config-example"]], "Regular distillation config example": [[333, "regular-distillation-config-example"]], "AutoDistillation config example": [[333, "autodistillation-config-example"], [333, "id1"]], "Tensorflow": [[333, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[333, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[333, "distillation-config-example"]], "Benchmark": [[334, "benchmark"]], "Introduction": [[334, "introduction"], [345, "introduction"], [347, "introduction"], [349, "introduction"], [353, "introduction"], [355, "introduction"], [356, "introduction"], [357, "introduction"], [358, "introduction"], [361, "introduction"], [363, "introduction"], [365, "introduction"], [366, "introduction"], [367, "introduction"], [372, "introduction"], [377, "introduction"], [381, "introduction"], [382, "introduction"], [383, "introduction"], [384, "introduction"], [385, "introduction"]], "Get Started with Benchmark API": [[334, "get-started-with-benchmark-api"]], "Examples": [[334, "examples"], [348, "examples"], [349, "examples"], [378, "examples"], [378, "id1"], [378, "id2"], [378, "id3"], [378, "id4"], [378, "id5"], [378, "id6"], [378, "id7"], [378, "id8"], [378, "id9"], [378, "id10"], [378, "id11"], [383, "examples"]], "Stock Pytorch Model": [[334, "stock-pytorch-model"]], "IPEX Model": [[334, "ipex-model"]], "Benchmark Output": [[334, "benchmark-output"]], "Example": [[335, "example"], [388, "example"]], "Features": [[336, "features"], [389, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[337, "welcome-to-intel-extension-for-transformers-documentation"], [390, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[337, "sections"], [390, "sections"]], "Kernels": [[338, "kernels"], [391, "kernels"]], "Implementation Details": [[339, "implementation-details"], [392, "implementation-details"]], "Performance": [[340, "performance"], [362, "performance"], [363, "performance"], [393, "performance"]], "Neural Engine": [[341, "neural-engine"], [394, "neural-engine"]], "User Guide": [[342, "user-guide"], [387, "user-guide"], [395, "user-guide"]], "Contributor Covenant Code of Conduct": [[343, "contributor-covenant-code-of-conduct"], [344, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[343, "our-pledge"]], "Our Standards": [[343, "our-standards"]], "Our Responsibilities": [[343, "our-responsibilities"]], "Scope": [[343, "scope"]], "Enforcement": [[343, "enforcement"]], "Attribution": [[343, "attribution"]], "Contribution Guidelines": [[344, "contribution-guidelines"]], "Pull Request Checklist": [[344, "pull-request-checklist"]], "Pull Request Template": [[344, "pull-request-template"]], "Support": [[344, "support"], [346, "support"]], "Data Augmentation": [[345, "data-augmentation"], [345, "id1"]], "Getting Started": [[345, "getting-started"], [350, "getting-started"]], "Install Dependency": [[345, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[345, "install-intel-extension-for-transformers"]], "Script": [[345, "script"]], "Parameters of Data Augmentation": [[345, "parameters-of-data-augmentation"]], "Supported Augmenter": [[345, "supported-augmenter"]], "Text Generation Augmenter": [[345, "text-generation-augmenter"]], "Augmenter Arguments:": [[345, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[346, "intel-extension-for-transformers"]], "Overview": [[346, "overview"]], "Recommended Hardware": [[346, "recommended-hardware"]], "Validated Hardware Environment": [[346, "validated-hardware-environment"], [351, "validated-hardware-environment"]], "How it Works": [[346, "how-it-works"]], "Get Started": [[346, "get-started"], [385, "get-started"]], "1. Prerequisites": [[346, "prerequisites"]], "2. Installation": [[346, "installation"]], "2.1 Install from PyPi": [[346, "install-from-pypi"]], "2.2 Install from Conda": [[346, "install-from-conda"]], "2.3 Install from Source": [[346, "install-from-source"]], "3. How To Run": [[346, "how-to-run"]], "3.1 Install Requirements": [[346, "install-requirements"]], "3.2 Prepare Datasets": [[346, "prepare-datasets"]], "3.3 Model Compression": [[346, "model-compression"]], "3.4 Model Inference": [[346, "model-inference"]], "Expected Output": [[346, "expected-output"]], "Summary and Next Steps": [[346, "summary-and-next-steps"]], "Learn More": [[346, "learn-more"]], "Distillation": [[347, "distillation"], [347, "id1"], [348, "distillation"], [350, "distillation"]], "Knowledge Distillation": [[347, "knowledge-distillation"], [348, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[347, "intermediate-layer-knowledge-distillation"]], "usage": [[347, "usage"]], "Pytorch Script:": [[347, "pytorch-script"]], "Tensorflow Script:": [[347, "tensorflow-script"]], "Create an Instance of Metric": [[347, "create-an-instance-of-metric"], [385, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[347, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[347, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[347, "distill-with-trainer"]], "Quantization": [[348, "quantization"], [350, "quantization"], [385, "quantization"]], "Stock PyTorch Examples": [[348, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[348, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[348, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[348, "length-adaptive-transformers"]], "Pruning": [[348, "pruning"], [350, "pruning"], [384, "pruning"]], "Auto Distillation (NAS Based)": [[348, "auto-distillation-nas-based"]], "Orchestrate": [[348, "orchestrate"]], "Reference Deployment on Neural Engine": [[348, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[348, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[348, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[349, "export-to-onnx"]], "Supported Model Export Matrix": [[349, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[349, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[349, "export-to-bf16-onnx-model"]], "API usage": [[349, "api-usage"]], "Export to INT8 ONNX Model": [[349, "export-to-int8-onnx-model"]], "For executor backend": [[349, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[350, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[350, "transformers-accelerated-neural-engine"]], "Installation": [[351, "installation"], [352, "installation"], [363, "installation"]], "Linux Installation": [[351, "linux-installation"]], "Prerequisites": [[351, "prerequisites"], [351, "id1"], [352, "prerequisites"]], "Install from Pypi": [[351, "install-from-pypi"], [351, "id2"]], "Install from Source": [[351, "install-from-source"], [351, "id3"]], "Windows Installation": [[351, "windows-installation"]], "System Requirements": [[351, "system-requirements"]], "Validated Software Environment": [[351, "validated-software-environment"]], "Install": [[352, "install"]], "Install stable version intel_extension_for_transformers from pip": [[352, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[352, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[353, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[353, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[353, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[353, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[354, "deploy-and-integration"]], "1. Architecture": [[354, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[354, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[354, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[354, "run-the-inference-by-engine"], [354, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[354, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[354, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[354, "integrate-neural-engine-as-backend"]], "Profiling": [[355, "profiling"]], "Profling API": [[355, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[355, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[355, "profiling-examples"]], "Parts of CSV Profiling": [[355, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[355, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[355, "operator-profiling-part"]], "Total Profiling Part": [[355, "total-profiling-part"]], "Levels of JSON Profiling": [[355, "levels-of-json-profiling"]], "Model Level": [[355, "model-level"]], "Iteration Level": [[355, "iteration-level"]], "Operator Level": [[355, "operator-level"]], "Engine Tuning": [[356, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[356, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[356, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[356, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[356, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[356, "more-tuning-options"]], "Graph Fusion": [[357, "graph-fusion"]], "Pattern Mapping Dict": [[357, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[357, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[357, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[357, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[358, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[358, "supported-onnx-format"]], "Compile Examples": [[358, "compile-examples"]], "Prepare ONNX Model": [[358, "prepare-onnx-model"]], "Compile to IR": [[358, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[359, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[359, "design"]], "Prerequisite": [[359, "prerequisite"]], "Install environment": [[359, "install-environment"]], "Prepare Dataset": [[359, "prepare-dataset"]], "Prepare ONNX model": [[359, "prepare-onnx-model"]], "Run tuning and benchmark": [[359, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[359, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[359, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[360, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[360, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[360, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[361, "pattern-recognize"]], "Pattern Representation": [[361, "pattern-representation"]], "Parse Pattern Representation List": [[361, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[361, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[361, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Neural Engine Support Matrix": [[362, "neural-engine-support-matrix"]], "platform configuration": [[362, "platform-configuration"]], "Transformers-Accelerated Libraries": [[363, "transformers-accelerated-libraries"]], "Build": [[363, "build"], [378, "build"]], "Test": [[363, "test"]], "API reference for users": [[363, "api-reference-for-users"]], "sparse_matmul kernel:": [[363, "sparse-matmul-kernel"]], "Supported Matrix": [[363, "supported-matrix"]], "3D Inference": [[364, "d-inference"]], "Memory Layout in SPMM_VNNI": [[364, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[364, "cache-issues"]], "SPMM_VNNI 3D Inference": [[364, "spmm-vnni-3d-inference"]], "Binary Injectors": [[365, "binary-injectors"]], "Framework Features": [[365, "framework-features"], [366, "framework-features"]], "param_type.hpp": [[365, "param-type-hpp"]], "operator_desc.hpp": [[365, "operator-desc-hpp"], [366, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[365, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[365, "developer-s-perspective"]], "User\u2019s Perspective": [[365, "user-s-perspective"], [366, "user-s-perspective"]], "Element-wise Injector": [[366, "element-wise-injector"]], "param_types.hpp": [[366, "param-types-hpp"]], "alpha,beta,scale meaning": [[366, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[366, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[366, "developer-s-perspective"]], "Dense and Sparse": [[367, "dense-and-sparse"]], "Naive": [[367, "naive"]], "Tile": [[367, "tile"]], "Efficient kernel": [[367, "efficient-kernel"]], "More work per thread": [[367, "more-work-per-thread"]], "Prefetch": [[367, "prefetch"]], "Sparse acceleration": [[367, "sparse-acceleration"]], "Sparse GEMM AMX": [[368, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[368, "brief-introduction-for-isas"]], "Pattern": [[368, "pattern"]], "Reorder": [[368, "reorder"]], "Sparse GEMM AVX512F": [[369, "sparse-gemm-avx512f"]], "Key Instruction": [[369, "key-instruction"]], "Sparse Pattern & Data Format": [[369, "sparse-pattern-data-format"]], "Loops": [[369, "loops"]], "Dynamic Quant Matmul": [[370, "dynamic-quant-matmul"]], "problem description": [[370, "problem-description"]], "Kernel details": [[370, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[370, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[370, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[370, "different-jit-paths-for-different-weight-size"]], "small_wei jit-path": [[370, "small-wei-jit-path"]], "large_wei jit-path": [[370, "large-wei-jit-path"]], "Sparse GEMM with Layer-Normalize": [[371, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[371, "problem-description"]], "layernormalized sparse matmul": [[371, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[371, "pre-compute-spmm"]], "Direct Layernorm_ba": [[371, "direct-layernorm-ba"]], "Transposed MatMul": [[372, "transposed-matmul"]], "Problem Statements": [[372, "problem-statements"]], "Matmul_p2031_2013": [[372, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[372, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[372, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[372, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[372, "reorder-beforehand"]], "Transposed MHA": [[373, "transposed-mha"]], "Problem description": [[373, "problem-description"]], "Details": [[373, "details"]], "Reordering": [[373, "reordering"]], "Calculation": [[373, "calculation"]], "Sparse GEMM VNNI": [[374, "sparse-gemm-vnni"]], "On the fly activation reordering": [[374, "on-the-fly-activation-reordering"]], "Candidate patterns": [[374, "candidate-patterns"]], "Performance and Profiling": [[375, "performance-and-profiling"]], "Verbose": [[375, "verbose"]], "VTune": [[375, "vtune"]], "SDE": [[375, "sde"]], "Validated Performance Data": [[376, "validated-performance-data"]], "Single Thread": [[376, "single-thread"]], "Multi Thread (Thread = 4)": [[376, "multi-thread-thread-4"]], "Platform Configuration": [[376, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[377, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[377, "setups"]], "1. Prepare the sparse model": [[377, "prepare-the-sparse-model"]], "2. Run below commands": [[377, "run-below-commands"]], "3. Analysis results": [[377, "analysis-results"]], "Benchmark for Kernels": [[378, "benchmark-for-kernels"]], "sparse_matmul": [[378, "sparse-matmul"]], "spmm_avx512f": [[378, "spmm-avx512f"]], "spmm_vnni": [[378, "spmm-vnni"]], "spmm_amx_bf16_x16": [[378, "spmm-amx-bf16-x16"]], "eltwiseop": [[378, "eltwiseop"]], "layernorm_ba": [[378, "layernorm-ba"]], "transpose_matmul": [[378, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[378, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[378, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[378, "softmax"]], "attention": [[378, "attention"]], "Static MHA": [[378, "static-mha"]], "dynamic_quant_matmul": [[378, "dynamic-quant-matmul"]], "dynamic_quant": [[378, "dynamic-quant"]], "For developers": [[378, "for-developers"]], "Inputs format": [[379, "inputs-format"]], "Legal Information": [[380, "legal-information"]], "License": [[380, "license"]], "Citation": [[380, "citation"]], "Trademarks": [[380, "trademarks"]], "Metrics": [[381, "metrics"]], "Supported Metric": [[381, "supported-metric"]], "Metric Class Summary": [[381, "metric-class-summary"]], "Get Start with Metrics": [[381, "get-start-with-metrics"]], "Objective": [[382, "objective"]], "Supported Objectives Matrix:": [[382, "supported-objectives-matrix"]], "Examples:": [[382, "examples"]], "Pipeline": [[383, "pipeline"]], "Pipeline Inference for INT8 Model": [[383, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[383, "pipeline-inference-for-executor-backend"]], "Pruning types": [[384, "pruning-types"]], "Script:": [[384, "script"], [385, "script"]], "Create an instance of Metric": [[384, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[384, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[384, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[384, "prune-with-trainer"]], "Quantization Fundamentals": [[385, "quantization-fundamentals"]], "Quantization Approach": [[385, "quantization-approach"]], "Post Training Dynamic Quantization": [[385, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[385, "post-training-static-quantization"]], "Quantization Aware Training": [[385, "quantization-aware-training"]], "Accuracy Aware Tuning": [[385, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[385, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[385, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[385, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[385, "quantization-with-trainer"]], "Release": [[386, "release"]], "Release Notes": [[386, "release-notes"]], "Contents:": [[389, null], [394, null]]}, "indexentries": {"exampleclass (class in intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass"]], "attr1 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr1"]], "attr2 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr2"]], "attr5 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr5"]], "attribute1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.attribute1"]], "function1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function1"]], "function2() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function2"]], "function3() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function3"]], "generator1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.generator1"]], "intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "method1() (intel_extension_for_transformers.api_doc_example.exampleclass method)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.method1"]], "module": [[0, "module-intel_extension_for_transformers.api_doc_example"], [1, "module-intel_extension_for_transformers.backends"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [191, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [192, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [193, "module-intel_extension_for_transformers.backends.neural_engine"], [194, "module-intel_extension_for_transformers.evaluation"], [195, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"], [196, "module-intel_extension_for_transformers.evaluation.lm_eval"], [197, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"], [198, "module-intel_extension_for_transformers.evaluation.lm_eval.models"], [199, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"], [200, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"], [201, "module-intel_extension_for_transformers"], [202, "module-intel_extension_for_transformers.optimization.benchmark"], [203, "module-intel_extension_for_transformers.optimization.config"], [204, "module-intel_extension_for_transformers.optimization.distillation"], [205, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [206, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [207, "module-intel_extension_for_transformers.optimization.dynamic"], [208, "module-intel_extension_for_transformers.optimization"], [209, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [210, "module-intel_extension_for_transformers.optimization.mixture"], [211, "module-intel_extension_for_transformers.optimization.model"], [212, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [213, "module-intel_extension_for_transformers.optimization.nas"], [214, "module-intel_extension_for_transformers.optimization.nas.nas"], [215, "module-intel_extension_for_transformers.optimization.optimizer"], [216, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [217, "module-intel_extension_for_transformers.optimization.pipeline"], [218, "module-intel_extension_for_transformers.optimization.pruner"], [219, "module-intel_extension_for_transformers.optimization.pruner.pruning"], [220, "module-intel_extension_for_transformers.optimization.pruning"], [221, "module-intel_extension_for_transformers.optimization.quantization"], [222, "module-intel_extension_for_transformers.optimization.trainer"], [223, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [224, "module-intel_extension_for_transformers.optimization.utils"], [225, "module-intel_extension_for_transformers.optimization.utils.metrics"], [226, "module-intel_extension_for_transformers.optimization.utils.models"], [227, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [228, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [229, "module-intel_extension_for_transformers.optimization.utils.objectives"], [230, "module-intel_extension_for_transformers.optimization.utils.utility"], [231, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [232, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [233, "module-intel_extension_for_transformers.preprocessing"], [234, "module-intel_extension_for_transformers.preprocessing.utils"], [235, "module-intel_extension_for_transformers.version"], [236, "module-sparsity_all"], [237, "module-test_add_cls_token"], [238, "module-test_add_embeddings"], [239, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [240, "module-test_attention_reshape"], [241, "module-test_bert_mini_fp32"], [242, "module-test_binary_op"], [243, "module-test_binaryop"], [244, "module-test_cast_to"], [245, "module-test_concat"], [246, "module-test_conv_reshape"], [247, "module-test_decoder_attn_reshape"], [248, "module-test_dispatcher_tuning_acc"], [249, "module-test_dispatcher_tuning_throughput"], [250, "module-test_dynamic_quantization"], [251, "module-test_electra"], [252, "module-test_embedding"], [253, "module-test_embeddingbag"], [254, "module-test_execution_options"], [255, "module-test_fwk"], [256, "module-test_gelu"], [257, "module-test_gpt_int8"], [258, "module-test_graph_dispatch"], [259, "module-test_graph_optimizer"], [260, "module-test_insert_input_output_data"], [261, "module-test_is_supported_onnx_graph"], [262, "module-test_last_layer_shape"], [263, "module-test_layer_norm_with_reduce_mean"], [264, "module-test_layer_norm_with_transpose"], [265, "module-test_layernorm"], [266, "module-test_linear"], [267, "module-test_linear_int8"], [268, "module-test_llama_pattern"], [269, "module-test_main"], [270, "module-test_matmul"], [271, "module-test_matmul_int8"], [272, "module-test_matmul_with_bias_relu"], [273, "module-test_matmul_with_bias_sigmoid"], [274, "module-test_matmul_with_bias_tanh"], [275, "module-test_merged_embeddingbag"], [276, "module-test_model"], [277, "module-test_onnx_utils"], [278, "module-test_operator_adaptor"], [279, "module-test_ops"], [280, "module-test_padding_seq"], [281, "module-test_padding_sequence"], [282, "module-test_pattern_dispatch"], [283, "module-test_permute"], [284, "module-test_position_embeddings"], [285, "module-test_pow"], [286, "module-test_primitive_cache_acc"], [287, "module-test_primitive_cache_throughput"], [288, "module-test_qkv_merge"], [289, "module-test_qkv_reshape"], [290, "module-test_quant_onnx_execute"], [291, "module-test_reshape_after_restore_hidden_states"], [292, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [293, "module-test_reshape_before_restore_hidden_states"], [294, "module-test_size"], [295, "module-test_softmax"], [296, "module-test_start_end_logits"], [297, "module-test_tanh"], [298, "module-test_text_encoder"], [299, "module-test_text_encoder_bf16"], [300, "module-test_tf_utils"], [301, "module-test_token_type_embeddings"], [302, "module-test_transpose"], [303, "module-test_transpose_batch_matmul"], [304, "module-test_unet"], [305, "module-test_unet_bf16"], [306, "module-test_unsqueeze"], [307, "module-test_vae_decoder"], [308, "module-test_vae_decoder_bf16"], [309, "module-test_weight_sharing_acc"], [310, "module-test_weight_sharing_dispatcher_tuning_acc"], [311, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [312, "module-test_weight_sharing_throughput"]], "module_debug_level1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.module_debug_level1"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "del_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_var"]], "del_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_vars"]], "environ_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.environ_info_init"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_environ_info"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_environ_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "remove_environ_info_item() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_item"]], "remove_environ_info_items() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_items"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "set_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_var"]], "set_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_vars"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "resize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.resize)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.resize method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "slicepositionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.slicepositionids method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "optimizer (class in intel_extension_for_transformers.backends.neural_engine.compile.optimizer)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "optimize() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.optimize"]], "weight_optimization() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.weight_optimization"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "embeddingsto2dbeforeinnerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product.EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "groupnormswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish.GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithbiasunsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze.MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "explicitnhwctransposeforconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose.ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "stablediffusion_mha (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA.StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "stablediffusion_mhareshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape.StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[188, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[190, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[192, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[193, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[194, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_eval.evaluator)": [[195, "intel_extension_for_transformers.evaluation.lm_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[195, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[196, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[197, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[197, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[197, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[197, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[198, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[199, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "lambadaopenai (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[200, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaOpenAI"]], "lambadastandard (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[200, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaStandard"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[200, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[201, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[202, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[202, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[202, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[202, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[202, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[203, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[203, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[203, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[204, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[204, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[204, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[205, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[205, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[205, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[206, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[206, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[207, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[208, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[209, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[209, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[210, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[211, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[211, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[211, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[212, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[212, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[212, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[212, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[212, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[213, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[214, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[214, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[215, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[215, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[215, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[216, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[216, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[217, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[217, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[218, "module-intel_extension_for_transformers.optimization.pruner"]], "pruning (class in intel_extension_for_transformers.optimization.pruner.pruning)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[219, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[219, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.update_config"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[220, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[220, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[220, "module-intel_extension_for_transformers.optimization.pruning"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[221, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[221, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[222, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[222, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[222, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[223, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[224, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[225, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[225, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[226, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[227, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[228, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[229, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[229, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[229, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[229, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[230, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[230, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[231, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[231, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[231, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[231, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[231, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[232, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[232, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[232, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[232, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[232, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[233, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[234, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[234, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[234, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[235, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[236, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[237, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[237, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[237, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[237, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[238, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[238, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[238, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[238, "module-test_add_embeddings"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[239, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[239, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[239, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[239, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[240, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[240, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[240, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[240, "module-test_attention_reshape"]], "testtorchmodel (class in test_bert_mini_fp32)": [[241, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[241, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[241, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[241, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[242, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[242, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[242, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[242, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[243, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[243, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[243, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[243, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[244, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[244, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[244, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[244, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[245, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[245, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[245, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[245, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[246, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[246, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[246, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[246, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[247, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[247, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[247, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[247, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[248, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[248, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[248, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[248, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[249, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[249, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[249, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[249, "module-test_dispatcher_tuning_throughput"]], "testdynamicquantization (class in test_dynamic_quantization)": [[250, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[250, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[250, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[250, "module-test_dynamic_quantization"]], "testelectra (class in test_electra)": [[251, "test_electra.TestElectra"]], "setupclass() (test_electra.testelectra class method)": [[251, "test_electra.TestElectra.setUpClass"]], "teardownclass() (test_electra.testelectra class method)": [[251, "test_electra.TestElectra.tearDownClass"]], "test_electra": [[251, "module-test_electra"]], "testtorchop (class in test_embedding)": [[252, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[252, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[252, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[252, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[253, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[253, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[253, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[253, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[254, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[254, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[254, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[254, "module-test_execution_options"]], "testfwk (class in test_fwk)": [[255, "test_fwk.TestFWK"]], "setupclass() (test_fwk.testfwk class method)": [[255, "test_fwk.TestFWK.setUpClass"]], "teardownclass() (test_fwk.testfwk class method)": [[255, "test_fwk.TestFWK.tearDownClass"]], "test_fwk": [[255, "module-test_fwk"]], "testtorchop (class in test_gelu)": [[256, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[256, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[256, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[256, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[257, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[257, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[257, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[257, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[258, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[258, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[258, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[258, "module-test_graph_dispatch"]], "testexecutionoptions (class in test_graph_optimizer)": [[259, "test_graph_optimizer.TestExecutionOptions"]], "setupclass() (test_graph_optimizer.testexecutionoptions class method)": [[259, "test_graph_optimizer.TestExecutionOptions.setUpClass"]], "teardownclass() (test_graph_optimizer.testexecutionoptions class method)": [[259, "test_graph_optimizer.TestExecutionOptions.tearDownClass"]], "test_graph_optimizer": [[259, "module-test_graph_optimizer"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[260, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[260, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[260, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[260, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[261, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[261, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[261, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[261, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[261, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[262, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[262, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[262, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[262, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[263, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[263, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[263, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[263, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[264, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[264, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[264, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[264, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[265, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[265, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[265, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[265, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[266, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[266, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[266, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[266, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[267, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[267, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[267, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[267, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[268, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[268, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[268, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[268, "module-test_llama_pattern"]], "testmain (class in test_main)": [[269, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[269, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[269, "test_main.TestMain.tearDownClass"]], "test_main": [[269, "module-test_main"]], "testtorchop (class in test_matmul)": [[270, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[270, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[270, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[270, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[271, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[271, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[271, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[271, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[272, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[272, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[272, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[272, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[273, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[273, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[273, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[273, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[274, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[274, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[274, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[274, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[275, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[275, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[275, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[275, "module-test_merged_embeddingbag"]], "test_model": [[276, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[277, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[277, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[277, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[277, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[278, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[278, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[278, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[278, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[279, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[279, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[279, "test_ops.TestOps.tearDownClass"]], "test_ops": [[279, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[280, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[280, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[280, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[280, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[281, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[281, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[281, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[281, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[282, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[282, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[282, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[282, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[283, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[283, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[283, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[283, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[284, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[284, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[284, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[284, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[285, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[285, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[285, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[285, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[286, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[286, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[286, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[286, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[287, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[287, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[287, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[287, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[288, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[288, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[288, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[288, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[289, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[289, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[289, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[289, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[290, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[290, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[290, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[290, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[291, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[291, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[291, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[291, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[292, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[292, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[292, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[292, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[293, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[293, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[293, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[293, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[294, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[294, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[294, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[294, "module-test_size"]], "testtorchop (class in test_softmax)": [[295, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[295, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[295, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[295, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[296, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[296, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[296, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[296, "module-test_start_end_logits"]], "testtorchop (class in test_tanh)": [[297, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[297, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[297, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[297, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[298, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[298, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[298, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[298, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[299, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[299, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[299, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[299, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[300, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[300, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[300, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[300, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[301, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[301, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[301, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[301, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[302, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[302, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[302, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[302, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[303, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[303, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[303, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[303, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[304, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[304, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[304, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[304, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[305, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[305, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[305, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[305, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[306, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[306, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[306, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[306, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[307, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[307, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[307, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[307, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[308, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[308, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[308, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[308, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[309, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[309, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[309, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[309, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[310, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[310, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[310, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[310, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[311, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[311, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[311, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[311, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[312, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[312, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[312, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[312, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[321, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[321, "c.NULL_INSTANCE"]], "jd (c++ type)": [[321, "_CPPv42jd"], [322, "_CPPv42jd"], [323, "_CPPv42jd"], [324, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[321, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[321, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_kernel (c++ function)": [[321, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[321, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::create_stream (c++ function)": [[321, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[321, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[321, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[321, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[321, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[321, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[321, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[321, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[321, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[321, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[321, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[321, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[321, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[321, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[321, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[322, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[322, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [322, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[322, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[322, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[322, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [322, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[322, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[322, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[322, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [322, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[322, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[322, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[322, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [322, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[322, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[322, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[322, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [322, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[322, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[322, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[322, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [322, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[322, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[322, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[322, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [322, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[322, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[322, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[322, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [322, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[322, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[322, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[322, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [322, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[322, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[322, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[322, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [322, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[322, "_CPPv4N2jd11gather_descD0Ev"]], "jd::groupnorm (c++ class)": [[322, "_CPPv4N2jd9groupnormE"]], "jd::groupnorm::groupnorm (c++ function)": [[322, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy"], [322, "_CPPv4N2jd9groupnorm9groupnormEv"]], "jd::groupnorm::~groupnorm (c++ function)": [[322, "_CPPv4N2jd9groupnormD0Ev"]], "jd::groupnorm_desc (c++ class)": [[322, "_CPPv4N2jd14groupnorm_descE"]], "jd::groupnorm_desc::groupnorm_desc (c++ function)": [[322, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc"], [322, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv"]], "jd::groupnorm_desc::~groupnorm_desc (c++ function)": [[322, "_CPPv4N2jd14groupnorm_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[322, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[322, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[322, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[322, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [322, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[322, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[322, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[322, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[322, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[322, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[322, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[322, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[322, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [322, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[322, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[322, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[322, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [322, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[322, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[322, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[322, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [322, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[322, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[322, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[322, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [322, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[322, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[322, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[322, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [322, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[322, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[322, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[322, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [322, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[322, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[322, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[322, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [322, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[322, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[322, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[322, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [322, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[322, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[322, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[322, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [322, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[322, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[322, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[322, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[322, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[322, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[322, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[322, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[322, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[322, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[322, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [322, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[322, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[322, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[322, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [322, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[322, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[322, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[322, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [322, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[322, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[322, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[322, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [322, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[322, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[322, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[322, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [322, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[322, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[322, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[322, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [322, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[322, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[322, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[322, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [322, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[322, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[322, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[322, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [322, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[322, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[322, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[322, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [322, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[322, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[322, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[322, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [322, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[322, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[323, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[323, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[323, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[323, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[323, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[323, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[323, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[323, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[323, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[323, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [323, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [323, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[323, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[323, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[323, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::tensor_dtypes (c++ function)": [[323, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv"]], "jd::operator_desc::tensor_ftypes (c++ function)": [[323, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv"]], "jd::operator_desc::tensor_shapes (c++ function)": [[323, "_CPPv4NK2jd13operator_desc13tensor_shapesEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[323, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[323, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[324, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[324, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[324, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[324, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[324, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[324, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[324, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[324, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[324, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[324, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[324, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[324, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[324, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[324, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[324, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[324, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[324, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[324, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[324, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[324, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[324, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[324, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[324, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[324, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[324, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[324, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[324, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[324, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[324, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[324, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[324, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[324, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[324, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[324, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[324, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[324, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[324, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[324, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[324, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[324, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[324, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::mate (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_data_t::scale (c++ member)": [[324, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_append_sum (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE"]], "jd::ssd::matmul_fp8_param_t::has_scale0 (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_8bit (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3 (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2 (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[324, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_io (c++ type)": [[324, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[324, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::append_sum (c++ enumerator)": [[324, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[324, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[324, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[324, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[324, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[324, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[324, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[324, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[324, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[324, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[324, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[324, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[324, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[324, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[324, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[324, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[324, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[324, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[324, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[324, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[324, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[324, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[324, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[324, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[324, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[324, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[324, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[324, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[324, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[324, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[324, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[324, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[324, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[324, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[324, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[324, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[324, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[324, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[324, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[324, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[324, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[324, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[324, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[324, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[324, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[324, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[324, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[324, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[324, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[324, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[324, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[324, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[324, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[324, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[324, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[324, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[324, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[324, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[324, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[324, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[324, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[324, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[324, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[324, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[324, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[324, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[324, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[324, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[324, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[324, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[324, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[324, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[324, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[324, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[324, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[324, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[324, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[324, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[324, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[324, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[324, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})