Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/api_doc_example/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_list_construct/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/prune_utils/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/scheduler/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_c_engine", "docs/api_doc/api_engine", "docs/api_doc/api_example", "docs/api_doc/api_kernel", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/dispatcher", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/api_c", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization", "docs/api_doc/optimization/benchmark", "docs/api_doc/optimization/config", "docs/api_doc/optimization/distillation", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/optimizer_tf", "docs/api_doc/optimization/pipeline", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/intel_extension_for_transformers/api_doc_example/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_list_construct/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/prune_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/scheduler/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_c_engine.rst", "docs/api_doc/api_engine.rst", "docs/api_doc/api_example.rst", "docs/api_doc/api_kernel.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/dispatcher.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/api_c.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization.rst", "docs/api_doc/optimization/benchmark.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/distillation.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/optimizer_tf.rst", "docs/api_doc/optimization/pipeline.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.api_doc_example</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.criteria</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruners</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.regs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "C++ APIs", "Python APIs", "API Document Example", "C++ APIs", "Python APIs", "Compile", "Class dispatcher", "Graph", "Engine API", "Kernels C++ APIs", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Optimization APIs", "Benchmark", "Config", "Distillation", "Model", "PyTorch Optimizer", "Optimizer_tf", "Pipeline", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Neural Engine Support Matrix", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"thi": [0, 3, 10, 142, 155, 174, 175, 204, 206, 207, 208, 209, 210, 211, 214, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 317, 331, 341, 342, 343, 344, 345, 347, 351, 352, 353, 354, 355, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 378, 379, 381, 383], "i": [0, 2, 3, 5, 6, 7, 10, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 191, 198, 201, 204, 205, 206, 207, 208, 209, 212, 214, 219, 220, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 307, 308, 312, 318, 319, 329, 331, 332, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 389], "onli": [0, 10, 185, 204, 206, 207, 214, 219, 220, 224, 332, 349, 352, 354, 355, 356, 358, 361, 363, 364, 365, 368, 370, 371, 372, 376, 379, 381], "us": [0, 2, 10, 15, 48, 125, 142, 155, 174, 175, 180, 184, 185, 187, 191, 193, 194, 197, 198, 201, 204, 206, 207, 210, 211, 214, 219, 220, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 332, 341, 342, 343, 344, 345, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383], "refer": [0, 3, 5, 6, 201, 204, 206, 208, 224, 226, 331, 343, 344, 345, 348, 355, 358, 366, 368, 371, 376, 378, 382, 383], "convert": [0, 2, 5, 6, 10, 15, 180, 184, 185, 205, 347, 357, 371, 376, 383], "python": [0, 5, 6, 10, 219, 220, 312, 329, 342, 343, 344, 349, 350, 351, 352, 354, 356, 357, 375], "docstr": [0, 219, 220], "api": [0, 5, 6, 8, 224, 302, 342, 344, 352, 354, 355, 356, 358, 359, 363, 364, 381, 388], "document": [0, 214, 303, 342, 343, 344, 345, 348, 368, 370, 371, 372, 382, 383], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 188, 191, 193, 194, 196, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 219, 220, 221, 223, 224, 226, 227, 302, 304, 305, 307, 308, 312, 315, 316, 318, 319, 329, 331, 332, 341, 343, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 376, 379, 381, 382, 383], "creat": [0, 180, 185, 191, 196, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 351, 357, 358, 367, 376, 379], "doc": [0, 143, 204, 224, 351, 355, 363, 372], "usag": [0, 344, 379, 380], "py": [0, 3, 206, 207, 343, 344, 349, 351, 353, 357, 375], "exampl": [0, 8, 10, 122, 185, 208, 219, 220, 224, 302, 303, 335, 341, 343, 344, 345, 348, 351, 352, 354, 355, 357, 358, 359, 361, 363, 365, 379, 382, 383, 388], "def": [0, 185, 331, 332, 344, 351], "fun": 0, "return": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 187, 191, 193, 194, 196, 198, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 219, 220, 331, 332, 343, 344, 351, 355, 359, 363, 364, 379], "1": [0, 10, 184, 185, 186, 200, 204, 206, 207, 214, 219, 220, 222, 224, 317, 331, 332, 341, 343, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 359, 360, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 376, 379, 381, 382, 383], "x": [0, 143, 188, 219, 220, 354, 364, 367, 368, 370, 371, 376, 383], "2": [0, 10, 185, 187, 204, 206, 207, 219, 317, 331, 332, 343, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 359, 360, 365, 366, 367, 372, 373, 374, 376, 378, 379, 381], "print": [0, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 351, 359], "attribute1": 0, "sourc": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 352, 363, 370, 376, 378], "level": [0, 14, 220, 341, 352, 354, 364, 367, 375], "pleas": [0, 3, 5, 6, 201, 204, 206, 208, 224, 226, 301, 331, 332, 343, 345, 346, 348, 351, 355, 358, 361, 362, 363, 364, 368, 371, 376, 382, 383], "set": [0, 10, 48, 186, 187, 197, 198, 204, 205, 207, 212, 214, 219, 220, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 332, 341, 343, 344, 352, 354, 355, 356, 358, 359, 362, 363, 364, 367, 376], "100": [0, 185, 214, 219, 220, 344, 376, 383], "integ": [0, 204, 206, 207, 210, 211, 343, 347, 354, 355, 372, 376, 382, 383], "type": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 185, 187, 193, 198, 199, 204, 206, 207, 209, 210, 211, 212, 214, 219, 223, 224, 226, 310, 313, 318, 331, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 359, 361, 363, 364, 369, 375, 376, 379, 380, 383], "int": [0, 10, 184, 185, 200, 204, 214, 219, 310, 317, 332, 351, 363, 364, 365, 368], "module_debug_level1": 0, "debug": [0, 14], "function1": 0, "param1": 0, "param2": 0, "paramet": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 185, 187, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 219, 220, 223, 224, 317, 331, 332, 345, 353, 359, 379, 382], "str": [0, 10, 48, 125, 184, 185, 186, 193, 197, 199, 200, 204, 214, 217, 219, 220, 221, 224, 226, 332, 343], "parameter1": 0, "float": [0, 185, 186, 198, 200, 204, 206, 207, 208, 209, 210, 211, 214, 217, 221, 310, 317, 343, 345, 347, 351, 357, 363, 364, 365, 379, 380, 382, 383], "parameter2": 0, "import": [0, 8, 10, 199, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 332, 343, 344, 345, 348, 351, 352, 354, 356, 359, 363, 364, 368, 379, 380, 381, 382, 383], "o": [0, 10, 224, 331, 343, 344, 349, 360, 364, 369, 374], "rang": [0, 26, 185, 214, 331, 344, 351, 354, 376, 382, 383], "3": [0, 10, 317, 331, 332, 343, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 364, 366, 367, 372, 374, 376, 377, 379], "0": [0, 8, 10, 180, 185, 186, 188, 200, 204, 211, 217, 219, 220, 222, 223, 224, 310, 314, 315, 317, 331, 332, 343, 344, 345, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 364, 365, 366, 367, 368, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383], "valu": [0, 10, 15, 180, 181, 184, 185, 197, 201, 204, 205, 208, 212, 214, 219, 220, 317, 343, 344, 345, 351, 352, 353, 354, 355, 363, 364, 365, 366, 368, 370, 371, 376, 379, 380, 382, 383], "true": [0, 8, 185, 204, 214, 217, 219, 220, 221, 310, 331, 344, 347, 348, 350, 351, 353, 354, 363, 364, 370, 373, 376, 379, 380, 383], "fals": [0, 185, 186, 188, 193, 204, 214, 219, 220, 310, 317, 331, 332, 345, 348, 351, 354, 363, 364, 376, 379], "bool": [0, 185, 186, 193, 204, 214, 217, 219, 220, 221, 310, 314, 315, 316, 317, 332, 345, 351, 363, 364, 379, 380], "function2": 0, "pep": 0, "484": [0, 360], "annot": 0, "style": [0, 342], "from": [0, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 180, 181, 184, 188, 191, 193, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 219, 220, 224, 331, 332, 341, 343, 345, 346, 348, 351, 352, 353, 354, 355, 356, 358, 359, 363, 364, 367, 368, 369, 370, 371, 372, 379, 380, 381, 382, 383], "neural_compressor": [0, 185, 197, 214], "config": [0, 2, 8, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 184, 187, 190, 191, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 219, 220, 329, 332, 343, 344, 345, 346, 348, 352, 353, 355, 358, 363, 376, 381, 382], "mixedprecisionconfig": 0, "eval_func": [0, 197, 198, 214, 331], "model": [0, 2, 5, 6, 7, 8, 10, 13, 15, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 159, 160, 161, 163, 164, 178, 179, 181, 184, 185, 188, 190, 191, 194, 197, 198, 199, 204, 205, 206, 207, 208, 210, 211, 212, 214, 223, 224, 310, 329, 331, 343, 345, 346, 348, 350, 351, 354, 355, 359, 360, 363, 368, 369, 370, 371, 374, 378, 379, 380, 382, 383, 392], "accuraci": [0, 185, 191, 214, 331, 345, 346, 348, 368, 376, 379, 380, 382], "conf": [0, 8, 185, 310, 352, 353, 354, 358, 375], "output_model": 0, "mix_precis": 0, "fit": [0, 197, 204, 365], "function3": 0, "none": [0, 2, 8, 15, 47, 48, 73, 180, 181, 184, 185, 186, 187, 188, 191, 194, 197, 198, 199, 200, 205, 206, 212, 214, 217, 219, 220, 221, 222, 223, 317, 331, 343, 345, 346, 347, 353, 379, 380, 382, 383], "arg": [0, 14, 193, 198, 208, 214, 224, 315, 331, 353, 358], "kwarg": [0, 14, 185, 193, 208, 214, 219, 220], "an": [0, 3, 15, 180, 196, 204, 207, 211, 214, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 341, 343, 344, 346, 347, 348, 351, 352, 353, 354, 355, 358, 359, 362, 363, 364, 368, 369, 372, 377, 379, 381, 392], "If": [0, 10, 187, 205, 206, 214, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 342, 345, 347, 351, 352, 353, 354, 355, 356, 359, 363, 369, 376, 378, 379, 382, 383], "ar": [0, 10, 143, 187, 188, 204, 205, 206, 207, 208, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 341, 342, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 377, 378, 379, 380, 382, 383], "accept": [0, 214, 341, 381], "thei": [0, 10, 193, 204, 341, 345, 350, 359, 362, 363, 364, 366, 370, 376], "should": [0, 10, 193, 204, 206, 207, 214, 219, 220, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 351, 352, 354, 355, 358, 359, 362, 363, 364, 369, 376, 377, 379, 380, 383], "list": [0, 5, 6, 7, 8, 10, 15, 48, 180, 181, 185, 186, 197, 200, 204, 208, 214, 219, 220, 344, 345, 350, 351, 352, 355, 363, 364, 377, 383], "option": [0, 10, 184, 185, 193, 197, 199, 204, 214, 219, 220, 331, 332, 353, 359, 363, 372, 376], "argument": [0, 185, 208, 214, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 345, 353, 377, 379, 380, 382, 383], "kei": [0, 8, 10, 15, 180, 204, 205, 208, 212, 214, 219, 220, 302, 344, 353, 354, 355, 363, 364, 366], "dict": [0, 10, 15, 180, 181, 185, 194, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 219, 220, 224, 343, 351, 352, 382], "section": [0, 344, 361, 372, 373], "support": [0, 10, 15, 125, 185, 188, 199, 200, 204, 206, 207, 213, 224, 317, 348, 349, 350, 351, 352, 353, 354, 358, 359, 364, 368, 369, 371, 373, 375, 376, 381, 382, 386], "ani": [0, 10, 193, 214, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 342, 351, 359, 381], "restructuredtext": 0, "format": [0, 14, 214, 331, 353, 370, 371, 374, 375, 383], "includ": [0, 201, 204, 209, 210, 211, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 315, 316, 317, 341, 342, 344, 346, 352, 353, 354, 361, 364, 372, 376, 378, 383], "liter": 0, "block": [0, 204, 208, 219, 220, 346, 362, 365, 366, 367, 368, 369, 371, 372, 382], "rais": [0, 204, 205, 206, 207, 212, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "attributeerror": 0, "except": [0, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 354, 363], "valueerror": 0, "equal": [0, 10, 214, 355, 362, 363], "generator1": 0, "n": [0, 10, 188, 204, 219, 220, 317, 343, 345, 354, 355, 357, 360, 362, 365, 366, 367, 368, 371, 372, 374, 376], "gener": [0, 10, 143, 184, 185, 204, 208, 214, 219, 220, 224, 332, 344, 345, 351, 355, 359, 363, 364, 367, 368, 371, 373, 375, 376, 379, 380, 383], "have": [0, 2, 10, 180, 204, 206, 207, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 342, 344, 351, 352, 353, 354, 355, 356, 359, 364, 368, 369, 370, 371, 375, 376, 378, 379, 380, 381, 382, 383], "yield": [0, 383], "next": [0, 2, 8, 210, 211, 219, 220, 331, 355, 356, 363, 365, 367, 369, 370, 371, 372], "number": [0, 15, 185, 187, 188, 204, 207, 211, 220, 224, 332, 343, 354, 355, 359, 362, 365, 368, 371, 372, 376, 377, 383], "example_gener": 0, "4": [0, 10, 185, 200, 204, 214, 219, 220, 317, 331, 332, 341, 343, 345, 346, 349, 351, 353, 354, 355, 358, 359, 360, 366, 367, 368, 369, 372, 373, 376, 382], "exampleclass": 0, "param3": 0, "ha": [0, 5, 6, 7, 10, 204, 206, 207, 224, 331, 342, 343, 344, 351, 354, 355, 357, 358, 359, 362, 364, 368, 376, 383], "public": [0, 310, 314, 315, 316, 317, 341, 358, 363, 364], "mai": [0, 2, 10, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 342, 344, 351, 354, 359, 365, 366, 367, 369, 370, 371, 372, 376, 378, 383], "here": [0, 10, 194, 214, 338, 344, 350, 351, 354, 355, 356, 358, 359, 364, 372, 383, 384, 391], "attr1": 0, "descript": [0, 214, 342, 343, 345, 353, 372, 379, 380, 382, 383], "attr2": 0, "attr5": 0, "after": [0, 10, 122, 142, 155, 174, 175, 201, 204, 206, 207, 208, 209, 210, 211, 219, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 347, 350, 353, 354, 355, 356, 358, 359, 362, 364, 369, 371, 372, 375, 376, 377, 383], "specifi": [0, 10, 185, 187, 194, 196, 198, 200, 213, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 355, 356, 364, 368, 370, 376, 382, 383], "method1": 0, "execut": [0, 194, 206, 207, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 315, 331, 344, 354, 358, 361, 363, 364, 368, 369, 371, 373, 376, 377, 383], "It": [0, 10, 193, 204, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 332, 345, 351, 353, 354, 355, 358, 359, 367, 368, 370, 371, 376], "": [0, 10, 15, 48, 180, 185, 204, 206, 207, 214, 220, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 315, 331, 341, 344, 345, 351, 352, 353, 355, 356, 358, 360, 365, 369, 371, 374, 376, 377, 381, 383], "neural": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 122, 150, 180, 181, 193, 198, 204, 208, 227, 302, 331, 332, 340, 344, 345, 351, 353, 354, 355, 356, 367, 375, 380, 383, 386, 393], "engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 122, 150, 180, 181, 191, 214, 227, 303, 307, 313, 318, 331, 340, 344, 351, 353, 355, 358, 363, 368, 371, 375, 386, 393], "start_pipelin": 2, "pipelin": [2, 190, 191, 194, 319, 387], "graph": [2, 3, 5, 6, 7, 10, 11, 12, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 308, 344, 345, 351, 356, 359, 367, 370, 372, 392], "interfac": [2, 185, 219, 220, 315, 347, 350, 361], "firstli": 2, "loader": [2, 11, 182, 354, 356, 359], "get": [2, 8, 10, 14, 15, 180, 181, 187, 188, 201, 204, 206, 207, 209, 210, 211, 214, 221, 223, 226, 347, 351, 354, 355, 356, 358, 359, 363, 370, 372, 377, 381, 388], "comput": [2, 10, 180, 214, 219, 220, 336, 344, 348, 359, 361, 362, 363, 364, 365, 368, 370, 371, 375, 381, 383, 389], "correspond": [2, 5, 6, 10, 206, 207, 331, 351, 355, 359, 361, 368, 372, 375, 383], "framework": [2, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 122, 185, 191, 199, 214, 222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 336, 345, 346, 349, 351, 352, 356, 361, 381, 382, 383, 389], "contain": [2, 10, 15, 143, 180, 181, 204, 205, 206, 207, 208, 210, 211, 212, 214, 219, 220, 224, 331, 336, 343, 345, 351, 352, 354, 355, 359, 361, 363, 375, 376, 377, 382, 383, 389], "node": [2, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 142, 155, 174, 175, 180, 181, 223, 347, 359, 360, 374], "edg": 2, "op": [2, 5, 6, 7, 10, 11, 15, 107, 122, 132, 180, 181, 182, 185, 214, 310, 317, 353, 358, 359, 363, 364, 376, 377, 383], "tensor": [2, 5, 6, 7, 8, 10, 11, 15, 36, 63, 122, 180, 181, 182, 184, 201, 204, 206, 207, 209, 210, 211, 214, 219, 220, 310, 317, 351, 352, 353, 355, 356, 358, 370, 375, 376, 382, 383], "Then": [2, 10, 345, 355, 356, 371, 372, 376, 382, 383], "extract": [2, 3, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 351, 354, 356], "pack": [2, 11, 36, 182, 372], "them": [2, 5, 6, 10, 351, 352, 355, 363, 366, 368, 371, 372, 383], "our": [2, 343, 347, 359, 363, 365, 366, 368, 370, 371, 372, 381], "form": [2, 10, 214, 345, 353, 359, 362, 367, 371, 376], "exploit": [2, 359], "abov": [2, 10, 219, 220, 350, 351, 354, 355, 359, 365, 366, 368, 369, 370, 375], "consist": [2, 342], "sub": [2, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 351, 354, 355, 363, 370, 371], "which": [2, 5, 6, 7, 10, 180, 185, 187, 191, 193, 201, 204, 205, 206, 207, 210, 211, 214, 219, 220, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 343, 345, 350, 351, 352, 354, 355, 359, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 375, 376, 379, 382, 383], "can": [2, 10, 107, 122, 143, 193, 204, 206, 207, 208, 210, 211, 214, 219, 220, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 343, 344, 345, 347, 351, 352, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 380, 381, 382, 383], "see": [2, 10, 143, 219, 220, 301, 341, 344, 351, 353, 354, 355, 356, 359, 360, 362, 367, 371, 373, 374, 375, 376, 378], "new": [2, 5, 6, 7, 10, 15, 204, 205, 210, 211, 214, 342, 359, 363, 364, 377, 384], "big": [2, 354, 355], "like": [2, 5, 6, 7, 10, 143, 180, 204, 206, 224, 343, 344, 345, 348, 351, 352, 353, 354, 355, 356, 359, 363, 364, 366, 373, 379, 380, 382, 383], "layernorm": [2, 10, 39, 110, 351, 355, 359, 361, 376], "There": [2, 345, 351, 352, 353, 369, 373, 376, 380, 382], "differ": [2, 8, 13, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 159, 160, 161, 163, 164, 178, 179, 187, 196, 204, 331, 341, 343, 344, 345, 348, 351, 352, 354, 355, 356, 359, 362, 369, 372, 379, 380, 382, 383], "flow": [2, 10, 351, 355], "one": [2, 5, 6, 10, 204, 208, 210, 211, 219, 317, 331, 344, 345, 348, 350, 351, 353, 354, 355, 359, 363, 365, 366, 371, 375, 376, 381], "subgraph": [2, 10, 150, 354, 356], "final": [2, 204, 206, 207, 354, 355, 356, 358, 359, 365, 368, 369, 371, 379], "yaml": [2, 8, 10, 194, 196, 212, 214, 353, 354, 356, 375], "file": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 125, 150, 185, 188, 191, 193, 194, 196, 205, 208, 212, 214, 215, 224, 227, 343, 344, 351, 352, 353, 354, 356, 358, 363, 364, 375, 376, 377, 378], "bin": [2, 8, 197, 352, 353, 354, 356, 373, 375], "configur": [2, 89, 185, 187, 193, 194, 196, 198, 200, 204, 205, 208, 212, 214, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 317, 331, 343, 346, 347, 354, 362, 363, 367, 384], "infer": [2, 8, 13, 184, 198, 214, 220, 302, 346, 348, 350, 351, 353, 354, 355, 356, 366, 368, 369, 371, 380, 383, 390], "base": [3, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 193, 199, 201, 204, 206, 214, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 315, 331, 343, 344, 347, 348, 349, 356, 357, 358, 360, 365, 367, 368, 369, 370, 371, 373, 374, 381], "tensorflow": [3, 6, 16, 17, 18, 19, 20, 22, 27, 29, 34, 37, 38, 41, 42, 43, 45, 46, 49, 50, 52, 53, 56, 58, 59, 62, 71, 72, 76, 180, 185, 191, 198, 223, 329, 348, 349, 352, 359, 383], "onnx": [3, 5, 15, 181, 185, 214, 344, 348, 351, 353, 354, 370, 381, 387, 392], "onnx_extractor": [3, 4, 11, 182], "tf_extractor": [3, 4, 11, 182], "more": [3, 5, 6, 10, 143, 204, 301, 345, 348, 350, 351, 353, 355, 356, 358, 359, 360, 361, 362, 363, 366, 368, 369, 370, 372, 374, 375, 376], "detail": [3, 10, 331, 336, 338, 341, 342, 344, 345, 346, 348, 350, 351, 353, 354, 355, 358, 359, 360, 361, 366, 373, 374, 376, 382, 383, 389, 391], "A": [3, 10, 187, 194, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 219, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 351, 352, 359, 360, 362, 365, 366, 372, 374, 375, 376], "super": [3, 351, 354], "oper": [3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 122, 180, 181, 204, 310, 313, 316, 318, 336, 346, 350, 351, 352, 354, 356, 361, 363, 364, 365, 367, 368, 369, 370, 371, 372, 376, 383, 389, 392], "do": [3, 185, 188, 197, 198, 208, 214, 341, 347, 351, 352, 354, 355, 359, 363, 365, 382, 383], "addit": [3, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 344, 346, 353, 365, 369, 377, 384], "attribut": [3, 5, 6, 7, 10, 48, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 310, 314, 315, 331, 353, 355, 358, 364], "without": [3, 197, 206, 207, 214, 341, 345, 351, 352, 369, 372, 373, 376], "modifi": [3, 8, 10, 107, 122, 208, 220, 352, 353, 356], "topologi": 3, "modul": [4, 9, 11, 12, 36, 100, 195, 203, 331, 356, 357], "torch_extractor": [4, 11, 182], "all": [5, 6, 7, 8, 10, 11, 36, 48, 122, 125, 182, 204, 207, 208, 214, 219, 220, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 331, 341, 344, 345, 350, 351, 352, 353, 355, 359, 360, 363, 364, 365, 366, 368, 371, 374, 375, 379, 382, 383], "input": [5, 6, 8, 10, 15, 26, 122, 143, 180, 181, 184, 198, 199, 204, 207, 214, 219, 220, 310, 317, 331, 332, 343, 344, 345, 347, 348, 352, 353, 354, 355, 358, 367, 369, 370, 372, 376, 381], "compos": [5, 6, 7, 191, 214, 331, 351, 356, 371], "order": [5, 6, 8, 10, 191, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 343, 351, 353, 359, 362, 368, 369, 371, 372], "origin": [5, 6, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 204, 205, 206, 207, 208, 212, 224, 343, 345, 351, 356, 369, 370, 383], "calcul": [5, 6, 143, 188, 201, 204, 206, 208, 209, 331, 353, 359, 362, 364, 365, 368, 369, 372, 376, 383], "notic": [5, 6, 356, 363, 370, 371, 378], "map": [5, 6, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 204, 206, 209, 214, 310, 331, 344, 345, 362, 383], "between": [5, 6, 207, 219, 220, 317, 331, 345, 369, 372, 376, 383], "For": [5, 6, 10, 15, 122, 204, 208, 301, 331, 341, 344, 348, 351, 354, 355, 359, 360, 361, 363, 366, 370, 371, 372, 373, 374, 381], "relat": [5, 6, 209, 214, 338, 345, 351, 355, 359, 366, 371, 382, 383, 391], "deatil": [5, 6], "onnxextractor": 5, "decor": [5, 6, 7, 15, 48, 125, 180, 181, 204, 206, 207, 210, 211], "graph_def": [5, 6, 7, 180], "input_tensor": [5, 6, 7, 10, 15, 48, 180, 181, 219, 220, 351, 355], "output_tensor": [5, 6, 7, 10, 15, 48, 180, 181, 351, 355], "record": [5, 6, 7, 331, 353, 354], "dest": [5, 6, 7, 10, 15, 180], "name": [5, 6, 7, 8, 10, 15, 48, 73, 125, 180, 185, 186, 193, 199, 200, 201, 204, 206, 207, 209, 210, 211, 217, 221, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 310, 331, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 357, 359, 360, 364, 374, 375, 378, 379, 380, 381, 382, 383], "object": [5, 6, 7, 180, 185, 190, 194, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 332, 344, 345, 348, 351, 358, 382, 387], "onnxmodel": [5, 15], "tensorflowextractor": 6, "tensorflowmodel": [6, 180], "torch": [7, 143, 181, 184, 185, 204, 214, 219, 220, 332, 344, 381], "torchextractor": 7, "torchscript": [7, 67, 181, 184, 185, 214, 332], "defint": 8, "add_config_item": 8, "val": [8, 205, 212], "add": [8, 10, 26, 185, 188, 205, 208, 212, 345, 352, 353, 354, 355, 359, 361, 363, 364, 371, 376, 377, 392], "pair": [8, 185, 219, 352, 364, 372], "framework_modeling_config": 8, "inquire_config_item": 8, "insert_nod": 8, "index": [8, 219, 220, 223, 310, 317, 355, 358, 359], "insert": [8, 10, 356, 358, 359, 363, 364, 383], "ir": [8, 351, 352, 353, 354, 373, 375, 392], "remove_nod": 8, "node_nam": [8, 10, 15, 180, 351, 355], "remov": [8, 132, 220, 341, 342, 364, 382], "get_node_id": [8, 351], "id": [8, 10, 193, 220, 223, 364, 365], "accord": [8, 204, 210, 211, 351, 354, 372], "get_node_by_nam": 8, "rename_nod": 8, "old_nam": 8, "new_nam": 8, "change_node_input_tensor": 8, "mode": [8, 184, 186, 200, 207, 213, 310, 331, 353, 357, 369, 371, 376, 377, 383], "change_node_output_tensor": 8, "output": [8, 10, 15, 26, 180, 181, 185, 197, 204, 207, 214, 219, 220, 310, 331, 343, 345, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 367, 368, 369, 370, 372, 376, 381], "get_pre_node_nam": 8, "previou": [8, 191, 204, 214, 344, 352, 384], "get_next_node_nam": 8, "get_tensor_idx": 8, "tensor_nam": [8, 15, 180], "from_output": 8, "modify_node_connect": 8, "dump_tensor": 8, "tensor_list": 8, "dump": [8, 383], "engine_init": 8, "net_info": 8, "weight_data": 8, "b": [8, 10, 15, 219, 317, 351, 359, 362, 365, 366, 367, 371, 372, 375, 376], "pybind": 8, "executor": [8, 310, 351, 352, 353], "input_data": [8, 10, 11, 100, 182, 352], "graph_init": [8, 352, 354], "initi": [8, 10, 15, 21, 39, 48, 185, 194, 205, 206, 207, 214, 219, 220, 317, 331, 363, 364, 368, 381, 382], "newgraph": 8, "out": [8, 10, 204, 214, 342, 344, 351, 352, 355, 361, 370, 383], "input_0": [8, 352, 354], "input_1": [8, 352, 354], "input_2": [8, 352, 354], "save": [8, 188, 197, 214, 343, 344, 351, 352, 353, 356, 366, 370, 372, 383], "output_dir": [8, 197, 214, 331, 343, 356, 357], "ymal": 8, "graph_dispatch": [8, 354], "tune": [8, 185, 214, 343, 345, 378, 379, 380, 382, 392], "inputs_shap": [8, 354], "dispatch": [8, 304], "get_sparse_nodes_nam": 8, "threshold": [8, 204, 376], "7": [8, 10, 317, 331, 344, 346, 349, 350, 351, 355, 357, 359, 360, 366, 374, 376, 379, 383], "sparsiti": [8, 185, 204, 206, 207, 208, 210, 211, 360, 375, 376, 382], "spars": [8, 206, 207, 302, 317, 344, 354, 361, 362, 371, 376, 390], "transpose_mode_int8": 8, "node_name_list": 8, "transpos": [8, 11, 36, 61, 182, 204, 219, 220, 353, 354, 361, 362, 366, 368, 369, 372, 376, 390], "innerproduct": [8, 26, 107, 353, 354, 361], "reorder": [8, 11, 36, 182, 368, 369], "util": [10, 15, 180, 181, 185, 187, 190, 202, 205, 225, 343, 351, 359, 362, 368, 369, 372, 376], "names_from_input": 10, "static": [10, 221, 314, 317, 353, 356, 363, 366, 368, 381], "method": [10, 188, 196, 200, 209, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 343, 346, 363, 366, 368, 371, 373, 382, 383], "valid": [10, 185, 198, 204, 205, 206, 207, 212, 214, 332, 342, 343, 345, 348, 359, 378, 384, 391], "string": [10, 15, 180, 181, 188, 194, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 223, 224, 310, 316, 343, 345, 351, 354, 355, 358, 364, 379, 380, 382, 383], "defin": [10, 185, 194, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 214, 314, 331, 341, 344, 345, 351, 352, 358, 359, 372, 377, 379, 382, 383], "field": [10, 185, 343, 363, 364, 383], "tupl": [10, 187, 199, 204, 219, 220], "In": [10, 191, 204, 206, 207, 209, 214, 219, 331, 341, 344, 351, 352, 353, 354, 355, 356, 359, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 379, 380, 383], "nodedef": [10, 180], "end": [10, 206, 207, 208, 219, 220, 224, 302, 344, 353, 356, 358, 359, 364, 373], "also": [10, 204, 342, 344, 351, 352, 353, 355, 356, 358, 359, 362, 363, 364, 365, 368, 371, 372, 373, 380, 383], "get_data_dtyp": 10, "data": [10, 73, 184, 204, 224, 226, 317, 331, 344, 346, 351, 352, 354, 356, 357, 358, 362, 363, 364, 365, 368, 369, 372, 376, 383, 387, 391], "const": [10, 15, 180, 310, 314, 315, 316, 317, 358, 361, 363, 364, 365, 366], "dtype": [10, 15, 73, 180, 181, 214, 344, 347, 352, 353, 354, 358], "numpi": [10, 15, 344, 352], "dtypes_dict": 10, "autocast_init": 10, "quant": [10, 107, 185, 361, 376, 383, 390], "info": [10, 14, 15, 143, 180, 181, 204, 212, 331, 344, 351, 352, 373], "set_autocast": 10, "get_autocast_info": 10, "quant_info_init": 10, "insert_quant_info": 10, "get_quant_info": 10, "search_straight_pattern": [10, 359], "input_pattern": [10, 359], "search": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 185, 188, 191, 194, 214, 331, 346, 355], "user": [10, 207, 208, 212, 219, 220, 224, 302, 303, 331, 332, 335, 338, 344, 347, 351, 353, 355, 357, 368, 370, 373, 376, 380, 381, 388, 391], "pattern": [10, 11, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 190, 202, 206, 207, 209, 315, 356, 362, 365, 375, 382, 392], "intern": [10, 355, 368], "grpah": [10, 15, 180], "structur": [10, 206, 207, 346, 351, 352, 354, 367, 371, 375, 382], "attent": [10, 219, 220, 315, 331, 341, 353, 359, 370], "chain": [10, 363, 364], "call": [10, 206, 207, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 347, 351, 354, 355, 362, 363, 364, 368, 371, 372, 383], "must": [10, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 332, 349, 355, 359, 362, 363, 365, 372], "straight": 10, "sequenc": [10, 187, 204, 219, 220, 344, 348, 351, 355, 359, 367, 376], "mean": [10, 11, 36, 182, 185, 204, 219, 220, 224, 317, 343, 351, 352, 353, 354, 355, 359, 362, 363, 365, 369, 372, 376, 379, 382, 383], "otherwis": [10, 341, 351, 354, 368, 376], "op_typ": [10, 15, 48, 180, 181, 351, 354, 355, 364], "element": [10, 204, 208, 214, 351, 359, 361, 365, 367, 370, 372, 376, 390], "could": [10, 204, 208, 315, 341, 351, 352, 353, 355, 356, 359, 366, 375, 376, 382, 383], "mandatori": 10, "while": [10, 206, 207, 352, 355, 359, 365, 368, 371, 376, 383], "stand": [10, 351], "mybe": 10, "mul": [10, 351, 355, 359, 363], "addv2": [10, 26, 359], "below": [10, 185, 302, 331, 342, 343, 344, 345, 351, 352, 354, 356, 359, 362, 367, 369, 370, 371, 372, 380], "extractor": [10, 11, 182, 354, 356, 359], "length": [10, 185, 187, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 344, 355, 359, 363, 376, 383], "match": [10, 331, 345, 354, 355, 359, 367, 370], "result": [10, 191, 198, 214, 331, 332, 341, 344, 346, 351, 354, 355, 360, 363, 364, 365, 368, 369, 370, 371, 372, 374, 378, 382, 383], "24": [10, 331, 359, 360, 366, 374], "layer": [10, 185, 187, 204, 205, 208, 212, 219, 220, 331, 353, 359, 363, 367, 370, 382, 390], "each": [10, 143, 185, 191, 204, 206, 207, 214, 219, 220, 224, 331, 343, 353, 354, 355, 362, 365, 367, 368, 369, 370, 371, 372, 375, 376, 377, 382], "still": [10, 208, 359, 365, 383], "last": [10, 185, 201, 204, 214, 219, 220, 355, 359, 362, 367, 368, 370, 383], "former": [10, 359], "search_pattern": [10, 359], "pattern_list": 10, "complet": [10, 351, 360, 365, 368, 371, 374], "represent": [10, 341, 348, 351, 355, 356], "its": [10, 122, 191, 204, 206, 207, 214, 331, 341, 345, 351, 355, 356, 359, 367, 368, 369, 372, 375, 376, 378], "op_idx": 10, "howev": [10, 208, 354, 355, 359, 362, 366, 369, 372], "due": [10, 219, 355, 359, 362, 383], "few": [10, 367], "complic": [10, 351, 359], "therefor": [10, 347, 362, 367, 370, 372, 383], "fist": 10, "repres": [10, 204, 207, 208, 209, 211, 212, 341, 353, 355, 359, 362, 364, 365, 368, 383], "main": [10, 208, 214, 219, 220, 224, 355, 369, 376], "top": [10, 302, 343, 344, 367], "down": 10, "head": [10, 219, 220, 359, 364, 370, 371], "tail": [10, 359, 373], "left": [10, 204, 219, 220, 366, 370, 372], "bert_large_squad": 10, "pb": [10, 348], "squareddiffer": [10, 26, 359], "rsqrt": [10, 26, 359], "5": [10, 83, 84, 85, 86, 87, 151, 152, 153, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 185, 186, 317, 331, 332, 343, 345, 351, 353, 355, 358, 359, 360, 366, 374, 376], "8": [10, 317, 331, 344, 346, 347, 349, 351, 353, 355, 357, 359, 360, 364, 365, 366, 372, 373, 374, 376, 383], "9": [10, 185, 224, 331, 343, 344, 348, 349, 351, 359, 360, 366, 374, 376, 382], "6": [10, 317, 331, 345, 346, 350, 351, 355, 359, 360, 364, 366, 373, 374, 383], "same": [10, 204, 220, 345, 347, 351, 352, 353, 355, 356, 359, 362, 365, 368, 369, 372, 375, 376, 377], "func": [10, 331, 354], "follow": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 219, 220, 304, 305, 307, 308, 312, 318, 319, 329, 332, 341, 342, 343, 344, 345, 349, 351, 353, 354, 355, 356, 358, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 376, 377, 378, 383], "frozen": [10, 352, 356], "you": [10, 185, 197, 206, 219, 220, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 332, 342, 343, 344, 345, 347, 351, 352, 354, 355, 356, 359, 363, 364, 366, 373, 375, 376, 378, 379, 381, 382, 383, 384], "had": [10, 351], "better": [10, 191, 198, 214, 331, 351, 353, 354, 362, 368, 369, 370, 371, 375, 379, 380, 383], "identifi": [10, 193, 365], "your": [10, 214, 224, 226, 342, 343, 344, 348, 351, 352, 353, 354, 355, 363, 364, 376, 378, 381], "own": [10, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 351, 355, 356, 363, 369, 380], "casual": 10, "tf": [10, 198, 219, 331], "control": [10, 184, 185, 331, 351], "start": [10, 207, 219, 220, 353, 359, 377, 388], "mostli": [10, 359], "longest": [10, 359], "path": [10, 185, 191, 193, 194, 196, 197, 205, 208, 212, 214, 223, 224, 343, 344, 348, 352, 353, 354, 356, 373, 375, 376], "sometim": [10, 355, 383], "connect": [10, 201, 206, 382], "But": [10, 352, 362, 381], "don": [10, 185, 204, 219, 220, 358, 363], "t": [10, 185, 204, 219, 220, 315, 317, 331, 343, 345, 358, 362, 363, 365, 370, 371, 372, 376, 382], "need": [10, 107, 185, 204, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 343, 344, 345, 351, 353, 354, 355, 356, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 376, 382, 383, 384], "least": [10, 204, 208, 369], "doesn": [10, 331, 363, 372, 376], "exist": [10, 193, 224, 331, 348, 351, 381], "relationship": 10, "sever": [10, 210, 211, 343, 351, 356, 359, 362, 376, 383], "split": [10, 11, 36, 182, 332, 343, 354, 362, 366, 369], "representtaion": 10, "two": [10, 204, 207, 210, 211, 214, 345, 351, 354, 355, 357, 358, 363, 364, 366, 368, 369, 370, 371, 372, 380, 381, 382, 383], "idx": [10, 317, 364], "some": [10, 122, 205, 220, 344, 351, 352, 353, 354, 355, 358, 359, 363, 364, 368, 372, 383], "outsid": [10, 219, 220, 355, 359], "give": [10, 351, 355, 362], "just": [10, 220, 344, 351, 352, 353, 354, 355, 356, 359, 364, 372, 375, 379], "empti": [10, 26, 355, 359, 364, 377], "algorithm": [10, 48, 125, 185, 194, 317, 331, 343, 354, 355, 358, 359, 362, 363, 369, 376, 382, 383], "kind": [10, 89, 316, 358, 369, 376], "beaus": 10, "make": [10, 48, 122, 204, 206, 207, 210, 211, 214, 332, 341, 342, 350, 351, 352, 361, 362, 363, 364, 365, 367, 368, 369, 370, 373, 376], "sure": [10, 122, 204, 206, 207, 210, 211, 332, 351, 365, 376], "whole": [10, 191, 331, 346, 353, 354, 357, 367, 368, 369, 371, 373], "so": [10, 193, 206, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 345, 350, 351, 354, 355, 358, 359, 363, 365, 366, 367, 368, 369, 371, 372, 373, 376, 379, 380, 382, 383], "check": [10, 15, 107, 185, 204, 205, 207, 212, 214, 338, 342, 344, 351, 354, 355, 359, 364, 391], "symmetr": [10, 359, 368, 376, 383], "consecut": [10, 366, 372], "y": [10, 143, 364], "shape": [10, 11, 36, 73, 182, 204, 219, 220, 317, 331, 344, 352, 353, 354, 358, 362, 368, 370, 376], "df": [10, 359], "duplic": 10, "would": [10, 204, 351, 355, 356, 359, 373], "perform": [10, 185, 191, 194, 207, 209, 214, 219, 220, 221, 331, 332, 336, 344, 345, 347, 348, 352, 353, 354, 357, 362, 365, 366, 367, 368, 369, 370, 371, 372, 376, 379, 380, 382, 383, 389], "befor": [10, 185, 201, 204, 206, 207, 208, 209, 210, 211, 214, 219, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 332, 342, 345, 347, 351, 352, 354, 355, 356, 359, 363, 364, 365, 366, 368, 369, 371, 376, 383], "splice": 10, "de": 10, "total": [10, 185, 187, 204, 206, 207, 210, 211, 219, 331, 332, 343, 355, 359, 365, 372, 373], "step": [10, 185, 201, 204, 206, 207, 208, 209, 210, 211, 214, 350, 351, 353, 355, 356, 357, 358, 359, 363, 368, 370, 371, 376], "c": [10, 317, 318, 344, 349, 350, 351, 352, 354, 359, 360, 365, 367, 374, 376], "d": [10, 331, 343, 345, 362, 370], "e": [10, 143, 185, 191, 204, 214, 331, 341, 344, 345, 354, 363, 364, 368, 369, 370, 376, 377], "f": [10, 317, 345, 358, 373, 383], "c1": 10, "d1": [10, 376], "c2": 10, "d2": 10, "c3": [10, 373], "d3": [10, 373], "now": [10, 224, 350, 351, 352, 354, 355, 356, 363, 364, 371, 376, 381], "part": [10, 206, 207, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 355, 358, 359, 371, 372], "As": [10, 345, 351, 353, 355, 356, 366, 370, 372], "appli": [10, 185, 204, 206, 207, 341, 346, 348, 363, 364, 368, 369, 370, 372, 376, 382, 383], "everi": [10, 204, 206, 207, 208, 351, 362, 376], "right": [10, 219, 220, 341, 366, 370, 372, 381], "construct_nod": 10, "attr": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 316, 351, 352, 363, 364], "ordereddict": [10, 48, 351], "construct": [10, 48, 219, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 363, 364], "new_nod": 10, "insert_pattern": 10, "target_node_nam": 10, "replac": [10, 220, 344, 345, 348, 351, 355, 382, 383], "specif": [10, 193, 194, 212, 313, 316, 318, 331, 341, 345, 349, 351, 354, 355, 362, 367, 368, 369, 375, 376, 379, 380, 381, 383], "ccontain": 10, "insid": [10, 355, 358, 367, 369], "been": [10, 204, 206, 207, 219, 220, 342, 345, 364, 368, 381], "pattern_map": [10, 351, 355], "pattern_nam": 10, "mapping_dict": 10, "custom": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 198, 214, 224, 331, 353, 355, 392], "mapping_config": 10, "first": [10, 185, 214, 343, 350, 351, 354, 355, 357, 359, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 383], "second": [10, 185, 219, 220, 332, 350, 355, 357, 358, 359, 366, 367, 370, 372, 373, 376, 383], "third": [10, 355, 367, 372, 378], "requir": [10, 122, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 332, 348, 355, 357, 359, 360, 362, 365, 366, 368, 376, 383], "old": 10, "reshap": [10, 11, 36, 53, 142, 155, 174, 175, 182, 204, 310, 351, 352, 353, 358], "paddingsequ": [10, 51, 124, 352], "search_mod": [10, 351, 355], "embed": [10, 219, 220, 352, 355, 359, 363], "m": [10, 204, 317, 344, 345, 346, 353, 354, 360, 362, 365, 366, 367, 368, 369, 371, 372, 374, 376], "fusion": [10, 89, 122, 358, 359, 363, 364, 369, 392], "about": [10, 201, 341, 344, 351, 355, 358, 360, 364, 372, 374], "in_pattern": 10, "input_id": [10, 219, 220, 348, 352], "segment_id": [10, 348, 352], "input_mask": [10, 207, 348, 352], "out_pattern": 10, "th": [10, 355], "berfor": 10, "match_result": 10, "_n": 10, "reshape_0": [10, 355], "where": [10, 26, 204, 219, 220, 331, 345, 355, 362, 364, 367, 368, 370, 372, 376, 377], "go": [10, 365], "mayb": [10, 354, 372], "happen": [10, 353, 372], "sepcial": 10, "biasadd": [10, 20, 355, 359], "bia": [10, 15, 185, 317, 353, 376], "unfix": 10, "locat": [10, 73, 351, 352, 355, 359, 372, 376, 384], "other": [10, 63, 107, 193, 317, 341, 342, 343, 344, 351, 352, 353, 354, 355, 359, 360, 368, 371, 372, 374, 376, 378, 383], "write": [10, 343, 351, 359, 368, 369, 371], "note": [10, 204, 208, 332, 346, 349, 351, 352, 353, 354, 355, 357, 358, 359, 363, 364, 370, 371, 372, 376, 383], "That": [10, 371, 372], "too": [10, 351, 362, 363, 368], "decompos": [10, 351], "list2str": [10, 351], "src_perm": 10, "emit": [10, 355], "ret": [10, 359, 373], "str2list": 10, "src_str": 10, "pattern_mapping_conf_valid": 10, "conf_dict": 10, "lazyimport": 10, "module_nam": [10, 201, 206, 207, 209, 210, 211], "lazi": 10, "till": 10, "later": [10, 351, 359], "get_model_fwk_nam": 10, "detect": 10, "belong": [10, 351, 383], "avail": [10, 304, 305, 307, 308, 312, 318, 319, 329, 344, 367], "fwk": 10, "na": [10, 185, 190, 214, 343, 361], "assert": [11, 36, 182, 219, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331], "batch_matmul": [11, 36, 182], "batch_matmul_v2": [11, 36, 182], "bias_add": [11, 15, 36, 182], "cast": [11, 36, 182], "concat": [11, 36, 182, 351], "conv": [11, 36, 182, 185, 204, 353, 354, 364], "co": [11, 36, 182, 193, 344], "empty_op": [11, 36, 182, 351], "expand_dim": [11, 36, 182], "fused_batch_matmul_v2": [11, 36, 182], "fused_batch_norm_v3": [11, 36, 182], "fused_gemm": [11, 36, 182], "fused_matmul": [11, 36, 182], "gather": [11, 36, 182, 204, 214, 219, 220, 315, 351, 363], "gather_el": [11, 36, 182, 351], "gelu": [11, 36, 100, 182, 351, 358, 361, 364, 376], "gemm": [11, 36, 182, 185, 347, 362, 365, 371, 376, 390], "iterator_get_next": [11, 36, 182], "iterator_v2": [11, 36, 182, 351], "layer_norm": [11, 36, 100, 182, 351], "log_softmax": [11, 36, 182], "map_and_batch_dataset": [11, 36, 182, 351], "matmul": [11, 15, 26, 36, 107, 182, 185, 204, 347, 353, 355, 356, 359, 361, 371, 376, 390], "mkl_layer_norm": [11, 36, 182], "model_dataset": [11, 36, 182], "one_hot": [11, 36, 182], "onnx_input": [11, 36, 182], "optimize_dataset": [11, 36, 182, 351], "padding_sequ": [11, 36, 100, 182, 352], "placehold": [11, 36, 182], "pos_emb": [11, 36, 182], "pow": [11, 36, 182, 351, 355], "quantize_linear": [11, 36, 182, 351], "quantize_v2": [11, 36, 182], "quantized_fused_matmul_and_dequant": [11, 36, 182], "quantized_matmul_with_bias_and_dequant": [11, 36, 182], "reduce_mean": [11, 36, 182, 351], "reduce_sum": [11, 36, 182], "rsub": [11, 36, 182], "scatter_el": [11, 36, 182], "sin": [11, 36, 182], "size": [11, 36, 182, 184, 185, 204, 214, 219, 220, 331, 341, 344, 348, 352, 354, 362, 365, 367, 369, 370, 371, 376, 383], "softmax": [11, 36, 182, 219, 315, 331, 345, 361, 370, 371], "squeez": [11, 36, 182], "strided_slic": [11, 36, 182], "top_k": [11, 36, 182, 224], "unpack": [11, 36, 182, 214, 351], "unsqueez": [11, 36, 182, 351], "view": [11, 36, 182, 342, 353, 362, 384], "sub_graph": [11, 182, 351, 354], "innerproductreshapefus": [11, 96, 100, 182], "add_cls_token": [11, 100, 182], "add_embed": [11, 100, 182], "arangewithreciproc": [11, 100, 182], "attentionblock_attentionmaskaddreshap": [11, 100, 182], "attentionblock_constantofshapewithmul": [11, 100, 182], "attentionblock_qkvprereshap": [11, 100, 182], "attentionblock_qkvreshap": [11, 100, 182], "attentionblock_resize2gath": [11, 100, 182], "attentionblock_weightreshapeto4d": [11, 100, 182], "attention_mask_length_adaptive_keep_indic": [11, 100, 182], "attention_output_layer_norm_length_adaptive_keep_indic": [11, 100, 182], "attention_reshap": [11, 100, 182], "cast_to": [11, 100, 182], "collect_quant_info": [11, 100, 182], "conv_reshap": [11, 100, 182], "decoder_attn_reshap": [11, 100, 182], "einsumwitharang": [11, 100, 182], "embeddingbag": [11, 26, 100, 182], "generate_sequ": [11, 100, 182], "innerproductwithbiasgelu": [11, 100, 182], "innerproductwithslic": [11, 100, 182], "input_fil": [11, 100, 182], "insert_bf16_nod": [11, 100, 182], "insert_quant_nod": [11, 100, 182], "int8_bf16_mixed_precision_check": [11, 100, 182], "interact_featur": [11, 100, 182], "last_layer_shap": [11, 100, 182], "layer_norm_with_reduce_mean": [11, 100, 182, 351], "layer_norm_with_transpos": [11, 100, 182], "matmul_with_bia": [11, 100, 182], "matmul_with_bias_add": [11, 100, 182], "matmul_with_bias_gelu": [11, 100, 182], "matmul_with_bias_relu": [11, 100, 182], "matmul_with_bias_sigmoid": [11, 100, 182], "matmul_with_bias_tanh": [11, 100, 182], "matmul_with_transpos": [11, 100, 182], "merged_embeddingbag": [11, 100, 182], "operator_adaptor": [11, 100, 182], "output_data": [11, 100, 182, 352], "position_embed": [11, 100, 182], "position_embeddings_v1": [11, 100, 182], "qkv_merg": [11, 100, 182], "qkv_reshap": [11, 100, 182], "quantize_fus": [11, 100, 182], "quantized_graph_dtype_refactor": [11, 100, 182], "remove_constant_op": [11, 100, 182], "remove_last_view": [11, 100, 182], "remove_list_construct": [11, 100, 182], "remove_rang": [11, 100, 182], "removeslic": [11, 100, 182], "reshape_after_restore_hidden_st": [11, 100, 182], "reshape_before_and_after_attention_out_layer_norm_gather_el": [11, 100, 182], "reshape_before_restore_hidden_st": [11, 100, 182], "reshape_fus": [11, 100, 182], "resnetblock_instancenormreshapefromconv": [11, 100, 182], "resnetblock_instancenormreshapefromdiv": [11, 100, 182], "restore_hidden_states_in_length_adaptive_update_indic": [11, 100, 182], "rotary_pos_emb": [11, 100, 182], "slicemask": [11, 100, 182], "stablediffusion_reshapefus": [11, 100, 182], "stablediffusion_bf16convert": [11, 100, 182], "start_end_logit": [11, 100, 182], "subgraph_match": [11, 100, 182, 354], "textencdoer_word_embed": [11, 100, 182], "textencoder_attentionmaskaddreshap": [11, 100, 182], "textencoder_attentionreshap": [11, 100, 182], "textencoder_kvreshap": [11, 100, 182], "textencoder_mulreshap": [11, 100, 182], "textencoder_qreshap": [11, 100, 182], "textencoder_softmaxreshap": [11, 100, 182], "textencoder_causal_attention_mask": [11, 100, 182], "token_type_embed": [11, 100, 182, 351], "token_type_embeddings_v1": [11, 100, 182, 351], "torch_embed": [11, 100, 182], "torch_ip_insert_bia": [11, 100, 182], "torchinsertbf16nod": [11, 100, 182], "torchpaddingsqu": [11, 100, 182], "transformer2dmodel_attentionmaskaddreshap": [11, 100, 182], "transformer2dmodel_constantofshapewithmul": [11, 100, 182], "transformer2dmodel_ffnslic": [11, 100, 182], "transformer2dmodel_ffnslice_1": [11, 100, 182], "transformer2dmodel_qkvprereshap": [11, 100, 182], "transformer2dmodel_qkvreshap": [11, 100, 182], "transformer2dmodel_qkvreshape4d": [11, 100, 182], "transformer2dmodel_encoderhiddenstatesreshap": [11, 100, 182], "transformer2dmodel_getsamplebatch": [11, 100, 182], "transformer2dmodel_instancenormreshapefromadd": [11, 100, 182], "transformer2dmodel_instancenormreshapefromconcat": [11, 100, 182], "transformer2dmodel_sampleslic": [11, 100, 182], "transformer2dmodel_upblockres": [11, 100, 182], "transpose_batch_matmul": [11, 100, 182, 351], "word_embed": [11, 100, 182, 352], "graph_util": [11, 182, 351, 355, 359], "logger": [11, 182, 190, 202, 373], "onnx_util": [11, 182], "tf_util": [11, 182], "torch_util": [11, 182], "load": [13, 188, 191, 198, 199, 214, 219, 220, 344, 351, 352, 353, 354, 356, 362, 364, 365, 366, 367, 372], "frontend": [13, 367], "get_logg": 14, "log": [14, 344, 352, 358], "msg": 14, "error": [14, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 352, 358, 373], "fatal": 14, "warn": 14, "get_children": 15, "input_name_to_nod": 15, "get_node_children_nam": 15, "nodeproto": [15, 181], "get_initializer_children_nam": 15, "graph_node_names_detail": [15, 180, 181], "pars": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 180, 352, 358], "graph_nodes_dict": [15, 180], "Be": [15, 180], "class": [15, 180, 199, 304, 307, 313, 317, 318, 332, 343, 345, 351, 358, 363, 364], "cerat": 15, "output_nam": 15, "ouput": 15, "param": [15, 180, 214, 363, 364], "node_names_detail": [15, 180], "is_supported_onnx_graph": [15, 250], "is_supported_onnx_nod": 15, "change_num_nam": 15, "bias_to_int32": 15, "bias_nod": 15, "a_scal": 15, "b_scale": 15, "int8": [15, 185, 199, 214, 344, 346, 353, 354, 356, 361, 364, 369, 370, 376, 383, 392], "int32": [15, 344, 352], "matric": [15, 365, 370, 371], "scale": [15, 214, 317, 363, 368, 371, 383], "arrai": [15, 352], "fp32_bia": 15, "int8_bia": 15, "int8_bias_zero_point": 15, "int8_bias_scal": 15, "int32_bia": 15, "onnx_extract_oper": 15, "framework_model": [15, 47, 48, 180], "nodes_dict": [15, 47, 48, 180, 181], "engine_graph": [15, 47, 48, 180, 181], "tf_dtype": [15, 180, 181], "set_attr": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 310, 351], "batchmatmul": 18, "batchmatmulv2": 19, "binaryop": [21, 363], "onnxruntim": [23, 24, 25, 31, 33, 54, 55, 60, 61, 63, 64, 66, 70, 74, 75, 77, 78, 344, 347, 349, 351, 357], "regist": [26, 39, 48, 51, 54, 55, 63, 65, 78, 125, 201, 204, 206, 207, 209, 210, 211, 362, 363, 364, 365, 367, 368, 369, 370, 372, 392], "binaryadd": [26, 363], "constantofshap": 26, "dequantizelinear": [26, 356], "dequant": [26, 363, 364, 368, 376], "erf": [26, 358], "expand": [26, 219, 220], "fill": [26, 355, 370], "flatmapdataset": 26, "ident": [26, 204, 341, 345], "makeiter": 26, "matmulwithbiasadd": [26, 114], "matmulwithbiasgelu": [26, 115], "matmulwithbiastanh": [26, 118], "matmulwithbia": [26, 113], "qlinearmatmul": [26, 356], "qlinearadd": 26, "qlinearmul": 26, "realdiv": 26, "sqrt": [26, 351, 355, 370], "squar": [26, 219, 220], "stopgradi": 26, "tanh": [26, 358, 364, 376], "tensorslicedataset": 26, "transposebatchmatmul": [26, 178, 351], "relu": [26, 364, 376], "matmulwithbiasrelu": [26, 116], "cumsum": 26, "onehot": [26, 46], "tokentypeid": 26, "positionid": 26, "loop": [26, 214, 317, 331, 351, 363, 365, 370], "sigmoid": 26, "matmulwithbiassigmoid": [26, 117], "flatten": 26, "mergedembeddingbag": [26, 120], "convolut": [26, 345, 354], "expandindic": 26, "tile": [26, 63, 362, 366, 368, 370, 371, 372, 376], "opani": 26, "sequencelength": [26, 360], "arang": 26, "reciproc": 26, "einsum": 26, "repeat": [26, 365, 377], "stack": [26, 371], "constant": [26, 132, 214], "listconstruct": 26, "latrang": 26, "expanddim": 27, "fusedbatchnormv3": 29, "fusedgemm": 30, "fusedmatmul": 31, "gatherv2": [32, 351], "gatherel": [33, 351], "iteratorgetnext": 37, "iteratorv2": [38, 351], "logsoftmax": [40, 315], "mapandbatchdataset": [41, 351], "modeldataset": 45, "onnxinput": 47, "operator_registri": [48, 351], "operator_typ": [48, 351], "subclass": [48, 125, 204, 206, 207, 210, 211, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 314, 315], "cl": [48, 125, 204, 206, 207, 209, 210, 211, 331], "registr": [48, 125, 351], "optimizedataset": [49, 351], "packagepositionembed": 53, "quantizelinear": [55, 351, 356], "quantiz": [55, 185, 190, 193, 197, 198, 214, 302, 344, 347, 363, 364, 368, 369, 371, 376, 379, 387, 392], "quantizev2": 56, "quantizedmatmulwithbiasanddequant": 58, "reducemean": [59, 351, 355], "reducesum": 60, "aten": 63, "self": [63, 185, 206, 219, 220, 224, 331, 343, 351, 353], "scalar": [63, 363], "alpha": [63, 201, 209, 317, 369, 376], "scatterel": 64, "primconst": 67, "stridedslic": 72, "source_op": 73, "dest_op": 73, "definit": [73, 364], "topk": 74, "fuse": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 356, 363, 364], "acceler": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 336, 344, 346, 347, 356, 363, 364, 368, 370, 383, 389], "strategi": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 198, 365], "addclstoken": [80, 89], "addembed": 81, "stabl": [83, 84, 85, 86, 87, 143, 151, 152, 153, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 302, 344, 349, 368], "diffusionv1": [83, 84, 85, 86, 87, 152, 153, 156, 157, 158, 165, 166, 169, 170, 171, 177], "attentionmasklengthadaptiveexpandindic": 89, "attentionoutputlayernormlengthadaptiveexpandindic": 90, "attentionreshap": 91, "castto": 92, "collectquantinfo": 93, "convreshap": 94, "decoderattnreshap": 95, "generatesequ": 99, "inputdata": [103, 351], "inputfil": 104, "insertbf16nod": 105, "insertquantnod": 106, "quantizedgraphdtyperefactor": [107, 131], "int8bf16mixedprecisioncheck": 107, "inferenc": 107, "under": [107, 214, 344, 351, 352, 353, 356, 368, 369, 376, 378], "in8": 107, "bf16": [107, 185, 214, 344, 346, 356, 361, 364, 366, 368, 371, 376], "mix": [107, 354], "precis": [107, 214, 347, 356, 380, 383, 392], "And": [107, 353, 354, 355, 356, 359, 363], "u8": [107, 356, 358, 364, 371, 376], "s8": [107, 356, 363, 364, 368, 376], "fp32": [107, 185, 214, 344, 346, 352, 353, 354, 356, 358, 363, 364, 366, 367, 369, 371, 376, 381, 383], "interactfeatur": 108, "lastlayershap": 109, "layernormwithreducemean": [111, 351], "layernormwithtranspos": 112, "matmulwithtranspos": 119, "multiheadattent": 121, "bass": [121, 125], "operatoradaptor": 122, "sweep": 122, "receiv": [122, 193, 355, 359], "outputdata": [123, 351], "pattern_registri": [125, 351], "pattern_typ": [125, 351], "positionembed": 126, "positionembeddingsv1": 127, "qkvmerg": 128, "qkvreshap": 129, "qunatizefus": 130, "quantizedgraphdtypecheck": 131, "removeconstantop": 132, "removelastview": 133, "removelistconstruct": 134, "removerang": 135, "reshapeafterrestorehiddenst": 137, "reshapebeforeandafterattentionoutlayernormgatherel": 138, "reshapebeforerestorehiddenst": 139, "reshapefus": 140, "qkv": [142, 155, 174, 175, 354, 356], "groupnorm": 143, "channel": [143, 204, 363, 367, 368, 372, 376, 382], "separ": [143, 341, 359, 372, 378], "num_group": 143, "group": [143, 209, 346, 351, 359, 365, 370, 372, 382], "num_channel": 143, "var": [143, 317], "epsilon": [143, 351], "gamma": 143, "beta": [143, 201, 317, 369, 376], "http": [143, 201, 204, 206, 208, 219, 224, 226, 343, 344, 349, 350, 352, 358, 378, 384], "pytorch": [143, 185, 188, 191, 193, 197, 204, 208, 214, 219, 220, 222, 319, 329, 343, 344, 347, 349, 375, 381, 382, 383], "org": [143, 201, 206, 219, 349], "nn": [143, 184, 214, 367], "html": [143, 358], "restorehiddenstatesinlengthadapt": 144, "roraryposemb": 145, "startendlogit": 149, "matcher": [150, 331, 356], "subgraphmatch": [150, 354], "textencoder_wordembed": 151, "textencoderv1": [151, 167, 168, 172, 173, 176], "textencoder_casualattentionmask": 158, "tokentypeembed": [159, 351], "tokentypeembeddingsv1": [160, 351], "torchembed": 161, "torchinnerproductinsertbia": 162, "torchpaddingsequ": 164, "transformer2dmodel_ffninputslic": 167, "transformer2dmodel_ffninputslice_1": 168, "transformer2dmodel_qkvreshapeto4d": 171, "wordembed": 179, "create_tf_nod": 180, "when": [180, 185, 204, 205, 206, 207, 212, 214, 219, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 332, 341, 346, 351, 354, 355, 358, 359, 362, 364, 365, 367, 368, 369, 371, 372, 376, 379, 380, 383], "tendorflow": 180, "get_tensor_dest_op": 180, "someth": 180, "store": [180, 185, 188, 191, 193, 201, 204, 206, 207, 209, 211, 331, 351, 355, 356, 359, 362, 363, 364, 365, 366, 369, 370, 372], "dest_op_nam": 180, "tf_extract_oper": 180, "tf_dtype_id": 180, "deal": [180, 331, 353], "multipl": [180, 206, 207, 215, 219, 220, 224, 332, 346, 351, 353, 364, 365, 367, 368, 369, 370, 371, 372, 376, 379, 380], "indetermin": 180, "torch_extract_oper": 181, "compil": [182, 305, 308, 348, 350, 351, 352, 354, 355, 357, 359, 392], "api_doc_exampl": 183, "version": [183, 193, 214, 341, 344, 349, 354, 360, 374, 378], "provid": [184, 185, 188, 193, 197, 198, 214, 219, 220, 224, 226, 302, 331, 332, 344, 346, 347, 348, 351, 361, 364, 368, 369, 371, 379, 383], "pytorchbenchmark": 184, "executorbenchmark": 184, "refactor_batch_s": 184, "batch_siz": [184, 185, 219, 220, 223, 332, 344, 352, 353, 357, 370, 376], "old_batch_s": 184, "batch": [184, 214, 317, 344, 352, 367, 368, 370, 377], "target": [184, 185, 204, 205, 210, 211, 212, 214, 331, 353, 372, 382], "default": [184, 185, 193, 197, 199, 205, 212, 214, 219, 220, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 332, 343, 344, 345, 351, 354, 360, 364, 368, 372, 373, 374, 376, 379, 380, 382, 383], "batched_valu": 184, "get_example_input": [184, 332], "dataload": [184, 197, 206, 214, 223, 332, 344], "batched_data": 184, "preprocess_model": 184, "example_input": [184, 332], "additional_cmd": 184, "jit": [184, 185, 214, 332, 336, 361, 363, 364, 367, 371, 376, 389], "trace": [184, 185, 332, 353], "benchmarkconfig": [184, 185, 332], "process": [184, 185, 191, 194, 204, 206, 207, 208, 210, 211, 212, 214, 224, 331, 344, 346, 351, 352, 354, 355, 359, 362, 363, 365, 368, 369, 372, 382, 383], "raw_cmd": 184, "preprocess": [184, 185, 343, 344, 371], "scriptmodul": 184, "model_name_or_path": [184, 193, 214, 224, 332, 343], "build": [184, 194, 198, 214, 331, 344, 350, 362, 368, 369, 373, 380], "inc": [185, 193, 197, 198, 214, 357], "nncf": 185, "check_valu": 185, "src": [185, 317, 352, 364, 372, 376], "supported_typ": 185, "supported_valu": 185, "given": [185, 193, 204, 207, 219, 220, 343, 359, 364, 367, 370, 372, 382], "datatyp": [185, 346, 347], "uint8": [185, 370, 383], "_datatyp": 185, "dynamiclengthconfig": [185, 214, 348], "max_length": [185, 332, 344], "length_config": [185, 219, 220, 348], "const_rat": 185, "num_sandwich": 185, "length_drop_ratio_bound": [185, 187], "layer_dropout_prob": [185, 187], "layer_dropout_bound": [185, 187], "dynamic_train": 185, "load_store_fil": 185, "evo_it": 185, "30": [185, 366], "population_s": 185, "20": [185, 332, 344, 349, 352, 357, 360, 366, 373, 374], "mutation_s": 185, "mutation_prob": [185, 188], "crossover_s": 185, "num_cpu": 185, "48": [185, 360, 374], "distributed_world_s": 185, "latency_constraint": 185, "evo_eval_metr": 185, "eval_f1": [185, 188, 348, 379, 383], "dynam": [185, 190, 214, 358, 361, 363, 367, 369, 376, 390], "adapt": [185, 302, 341, 344], "transform": [185, 198, 199, 214, 219, 220, 224, 331, 332, 336, 342, 343, 345, 349, 350, 351, 363, 364, 369, 370, 371, 372, 378, 380, 381, 382, 383, 384, 389], "limit": [185, 345, 367, 371], "maximum": [185, 204, 206, 207, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 360, 374, 383], "drop": [185, 187, 205, 346, 369, 372, 379], "ratio": [185, 187, 188, 204, 206, 207, 208, 210, 211, 345, 374, 376, 379, 380, 382], "sandwich": 185, "num": [185, 331, 343, 353, 362, 364, 370], "train": [185, 191, 194, 197, 198, 206, 207, 208, 214, 302, 331, 343, 344, 345, 348, 375, 382], "dropout": [185, 187], "probabl": [185, 187, 331, 369], "whether": [185, 193, 204, 206, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 338, 351, 353, 359, 376, 391], "iter": [185, 191, 206, 207, 210, 211, 214, 331, 332, 344, 352, 354, 358, 363, 367, 370, 371, 376, 377], "evolut": [185, 189, 190, 346], "popul": [185, 188], "mutat": [185, 188], "crossov": [185, 188], "cpu": [185, 302, 316, 332, 343, 344, 348, 349, 352, 358, 360, 362, 364, 373, 374, 381], "distribut": [185, 223, 331, 345, 369, 383, 384], "world": 185, "latenc": [185, 310, 331, 332, 344, 346, 353, 360, 365, 383], "constraint": [185, 188, 383], "metric": [185, 190, 191, 194, 198, 214, 216, 331, 344, 348, 387], "quantizationconfig": [185, 197, 198, 214, 344, 348], "approach": [185, 194, 196, 343, 345, 346, 348, 364, 365], "posttrainingstat": [185, 346, 347, 348, 383], "timeout": [185, 383], "max_trial": [185, 331, 383], "config_fil": 185, "sampling_s": 185, "use_bf16": 185, "recip": [185, 214, 343, 354, 380], "earli": [185, 383], "stop": [185, 224, 343, 383], "combin": [185, 214, 331, 354, 359, 363, 364, 383], "decid": [185, 206, 367, 383], "exit": [185, 383], "max": [185, 187, 214, 344, 360, 363, 365, 367, 372, 374, 383], "time": [185, 353, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377, 383], "evalu": [185, 188, 191, 194, 197, 198, 204, 206, 207, 208, 214, 331, 345, 353, 370, 379, 380, 382, 383], "notraineroptim": [185, 197, 345, 382, 383], "guarante": [185, 383], "how": [185, 187, 201, 204, 207, 214, 301, 342, 351, 352, 353, 356, 357, 359, 364, 365, 366, 376, 379, 382], "mani": [185, 187, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 351, 353, 355, 363, 365, 366, 369, 371, 376], "sampl": [185, 187, 214, 224, 331, 332, 343, 344, 348, 360, 370, 383], "smooth_quant": 185, "smooth": 185, "smooth_quant_arg": 185, "fast_bias_correct": 185, "fast": [185, 302, 344, 348], "correct": [185, 205, 212, 341, 355, 359, 370], "weight_correct": 185, "weight": [185, 201, 204, 206, 207, 209, 210, 211, 219, 220, 317, 331, 345, 347, 353, 354, 356, 362, 365, 366, 367, 371, 372, 376, 379, 380, 382, 383], "gemm_to_matmul": 185, "graph_optimization_level": 185, "disable_al": 185, "enable_bas": 185, "enable_extend": 185, "enable_al": 185, "first_conv_or_matmul_quant": 185, "last_conv_or_matmul_quant": 185, "pre_post_process_quant": 185, "postprocess": 185, "add_qdq_pair_to_weight": 185, "qdq": [185, 214, 347, 356], "vaild": 185, "onnxrt_trt_ep": 185, "optypes_to_exclude_output_qu": 185, "optyp": 185, "dedicated_qdq_pair": 185, "dedic": 185, "pruningconfig": [185, 348], "epoch": [185, 206, 207, 208, 382], "epoch_rang": [185, 200], "initial_sparsity_ratio": [185, 200], "target_sparsity_ratio": [185, 200, 204, 206, 207, 348, 382], "97": [185, 200, 374, 382], "pruner_config": [185, 348, 382], "pruner": [185, 190, 200, 201, 202, 208, 214, 345, 382], "prune": [185, 190, 197, 198, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 214, 219, 220, 302, 344, 387], "goal": [185, 214, 382], "behavior": [185, 214, 341, 342, 345, 362, 363, 368, 382, 383], "nlp": [185, 208, 214, 224, 226, 302, 343, 344, 346, 348, 352, 357, 382, 383], "wil": 185, "basicmagnitud": [185, 200, 346, 348, 382], "typel": 185, "init_prune_config": 185, "init": [185, 191, 197, 198, 202, 222, 223, 331, 343, 344, 349, 350, 352, 364], "distillationconfig": [185, 214, 348], "criterion": [185, 186, 198, 201, 204, 207, 217, 348, 379, 383], "distil": [185, 190, 191, 197, 198, 214, 319, 343, 344, 357, 387], "inc_config": 185, "knowledgeloss": [185, 186, 345], "tfdistillationconfig": [185, 331], "loss_typ": [185, 186, 331, 345], "loss_weight": [185, 331], "train_step": [185, 331], "temperatur": [185, 186, 224, 331, 343, 345], "loss": [185, 214, 219, 220, 331, 343, 345, 383], "knowledgedistillationloss": [185, 345], "flashdistillationconfig": 185, "block_nam": [185, 331], "layer_mappings_for_knowledge_transf": [185, 331], "add_origin_loss": [185, 186, 331, 345], "flash": [185, 191, 214], "autodistillationconfig": [185, 331], "search_spac": [185, 194, 331], "search_algorithm": [185, 331], "bo": [185, 331, 378], "seed": [185, 331], "knowledge_transf": [185, 331], "regular_distil": [185, 331], "auto": [185, 191, 198, 343, 353, 358, 364], "disil": 185, "space": [185, 191, 194, 207, 214, 331, 341, 342, 354, 362, 365], "g": [185, 191, 204, 214, 331, 345, 363, 364, 368, 369, 377], "bayesian": [185, 331], "architectur": [185, 191, 194, 198, 214, 219, 220, 331, 344, 349, 362, 369, 371], "candid": 185, "trial": [185, 214], "random": [185, 219, 331, 369], "knowledg": [185, 214, 331, 343], "transfer": [185, 214, 223, 345], "stage": [185, 191, 214, 310, 331], "autodistil": [185, 191, 198, 214, 387], "regular": [185, 191, 205, 209, 382], "nasconfig": [185, 194, 196], "basic": [185, 194, 204, 220, 223, 344, 349, 358, 368], "parser": 185, "procedur": [185, 204, 376], "backend": [185, 214, 222, 332, 344, 346, 348, 349, 350, 351, 354, 356, 359, 361, 376, 383], "warmup": [185, 332, 354], "cores_per_inst": [185, 214, 332], "num_of_inst": [185, 214, 332], "benchmark": [185, 190, 214, 215, 319, 344, 354, 360, 361, 374, 377, 387], "skip": [185, 332, 365, 377], "collect": [185, 332, 351, 353, 383], "core": [185, 332, 352, 360, 362, 368, 369, 374, 377, 378], "instanc": [185, 191, 194, 214, 215, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 332, 341, 352, 353, 360, 374, 377, 379, 380, 381], "enabl": [185, 206, 207, 332, 347, 348, 360, 362, 368, 369, 373, 374], "want": [185, 197, 206, 332, 338, 351, 352, 353, 354, 356, 359, 362, 363, 364, 376, 379, 391], "prunerv2": 185, "target_spars": [185, 204], "pruning_typ": 185, "op_nam": 185, "excluded_op_nam": 185, "start_step": [185, 206, 207], "end_step": [185, 206, 207], "pruning_scop": 185, "pruning_frequ": [185, 207], "min_sparsity_ratio_per_op": [185, 204], "max_sparsity_ratio_per_op": [185, 204, 207], "sparsity_decay_typ": 185, "pruning_op_typ": 185, "reg_typ": [185, 364], "criterion_reduce_typ": 185, "resume_from_pruned_checkpoint": 185, "similiar": 185, "weightpruningconfig": 185, "pruning_config": [185, 197, 198, 214, 348, 382], "snip_momentum": [185, 201], "4x1": [185, 204, 353, 362, 372], "global": [185, 204, 207], "98": [185, 374], "exp": [185, 364, 371, 376], "linear": [185, 204, 331, 345, 364, 367, 370], "ce": [186, 331, 345], "loss_weight_ratio": [186, 345], "layer_map": [186, 345], "distillationcriterionmod": 186, "restor": [187, 346], "sample_length_configur": 187, "max_seq_length": [187, 188], "num_hidden_lay": 187, "layer_config": [187, 219, 220], "length_drop_prob": 187, "length_drop_ratio": 187, "min_length": 187, "hidden": [187, 204, 219, 220, 331, 365], "truncat": [187, 344], "less": [187, 332, 345, 354, 368, 372, 382], "than": [187, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 332, 353, 354, 355, 363, 368, 370, 375, 376, 383], "min": [187, 214, 383], "sample_layer_configur": 187, "layer_dropout": 187, "depend": [187, 194, 342, 344, 349, 350], "paramat": 187, "bound": 187, "kept": [187, 204], "evolust": 188, "evolustionari": 188, "approx_ratio": 188, "12": [188, 343, 349, 350, 353, 360, 366, 370, 373, 374, 376], "l": [188, 331, 345], "384": [188, 331, 354, 360, 374], "approxim": [188, 371], "invers": [188, 371], "store2str": 188, "gene": 188, "mac": 188, "score": [188, 201, 204, 206, 207, 209, 219, 220, 381], "parent": [188, 206, 207, 210, 211], "parmat": 188, "devic": [188, 343, 345, 352, 354, 381], "lower_constraint": 188, "upper_constraint": 188, "eval_metr": 188, "evolutionari": [188, 214], "load_stor": 188, "store_fil": 188, "save_stor": 188, "get_stor": 188, "set_lower_constraint": 188, "setter": [188, 219, 220], "lower": [188, 224, 372, 380, 383], "set_upper_constraint": 188, "upper": [188, 364], "save_popul": 188, "population_fil": 188, "convex_hul": 188, "pareto_fronti": 188, "add_gen": 188, "rai": 188, "packag": [189, 192, 343, 344], "drop_and_restore_util": [189, 190], "mixtur": 190, "auto_distil": [190, 192, 331], "basic_na": [190, 195], "pytorch_prun": 190, "criteria": [190, 202, 206, 380], "prune_util": [190, 202], "reg": [190, 202, 207, 363, 364], "schedul": [190, 197, 202, 206, 207, 209, 214, 331, 336, 361, 389], "get_throughput": [190, 216], "utility_tf": [190, 216], "optimizer_tf": [190, 319], "trainer": [190, 197, 319, 329, 344, 346, 347, 348], "handl": [191, 214, 219, 220, 301, 315, 331, 358, 366, 367], "both": [191, 214, 219, 220, 341, 343, 348, 368, 370, 375, 376, 377, 379, 383], "model_build": [191, 194, 198, 214, 331], "conf_fname_or_obj": [191, 194, 196], "design": [191, 214, 351, 363, 364, 375, 387], "three": [191, 200, 208, 213, 214, 331, 344, 351, 355, 359, 370, 371, 382, 383], "major": [191, 214, 331, 362, 368, 369, 371, 372, 383], "explor": [191, 214, 331, 348], "compress": [191, 214, 302, 331, 345, 348, 362, 366, 368, 372, 375, 383], "discov": [191, 214, 331], "potenti": [191, 214, 317, 331, 342, 369], "measur": [191, 214, 331, 332, 345, 361, 379, 380, 382, 383], "predict": [191, 214, 219, 220, 331, 343, 344, 345], "hardwar": [191, 214, 331, 342, 345, 373, 375], "etc": [191, 214, 331, 345, 353], "select": [191, 209, 214, 219, 220, 331, 364, 376], "best": [191, 194, 214, 331, 341, 346], "res_save_path": [191, 194], "model_cl": [191, 198, 214, 331], "found": [191, 194, 344, 350, 351, 372], "estim": [191, 194, 353, 372], "load_search_result": 191, "init_by_cfg": [191, 194], "create_distil": 191, "optimizedmodel": 193, "from_pretrain": [193, 219, 220, 332, 344, 348, 381], "function": [193, 194, 197, 198, 208, 214, 310, 314, 315, 316, 317, 331, 345, 351, 354, 355, 358, 359, 363, 364, 376, 379, 382, 383], "classmethod": [193, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "instanti": [193, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "intel": [193, 204, 208, 224, 301, 332, 342, 343, 348, 349, 350, 351, 352, 360, 362, 373, 374, 378, 380, 381, 382, 383, 384], "compressor": [193, 198, 204, 208, 302, 332, 344, 380, 383], "repositori": [193, 344], "hug": [193, 302, 344, 356], "face": [193, 302, 303, 341, 344, 356], "hub": [193, 381], "local": [193, 204, 207, 214, 351, 362, 365, 368], "directori": [193, 197, 356, 375], "host": 193, "cache_dir": 193, "download": [193, 219, 220, 384], "cach": [193, 315, 358, 365, 368, 369, 370, 376], "standard": 193, "force_download": 193, "forc": 193, "re": [193, 366], "overrid": [193, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 314, 315, 358], "resume_download": 193, "delet": [193, 382], "incomplet": 193, "attempt": 193, "resum": [193, 214], "revis": 193, "branch": [193, 376], "tag": 193, "commit": [193, 341, 377], "sinc": [193, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 345, 368, 369, 371], "we": [193, 194, 220, 338, 341, 343, 344, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 376, 379, 380, 381, 383, 391], "git": [193, 343, 344, 349, 350, 352], "system": [193, 344, 350], "artifact": 193, "huggingfac": [193, 224, 344, 379, 381], "allow": [193, 332], "q_model": 193, "basicna": 194, "conf_fnam": 194, "obj": [194, 196, 205, 212], "dictionari": [194, 214], "common": [196, 204, 341, 344, 383], "nasbas": 196, "orchestr": [197, 214], "orchestrate_optim": [197, 214], "compon": [197, 214, 363, 378], "experiment": [197, 214, 364], "callabl": [197, 198, 214, 331], "train_func": [197, 198, 214, 331], "saved_result": [197, 344], "aggreg": 197, "run": [197, 205, 206, 207, 212, 214, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 332, 343, 376, 377, 383], "save_model": [197, 223, 344], "token": [197, 219, 220, 224, 332, 343, 344, 346, 348, 356, 381], "json": [197, 224, 343], "pytorch_model": 197, "init_quant": [197, 198, 214, 363], "quant_config": [197, 198, 214, 344, 348, 383], "calib_func": 197, "calib_dataload": [197, 214], "prepar": [197, 198, 219, 220, 310, 343, 353, 355, 358, 363, 364, 372, 383], "invok": [197, 198], "_inc_quant": 197, "calibr": [197, 214, 383], "init_prun": [197, 198, 214], "init_distil": [197, 198, 214], "distillation_config": [197, 198, 214, 345, 348], "teacher_model": [197, 198, 214, 331, 345, 348], "teacher": [197, 198, 331, 345, 346], "tfoptim": [198, 331, 345], "pretrainedmodel": [198, 214, 331], "training_args_tf": 198, "tftrainingargu": 198, "train_dataset": [198, 331, 344, 348], "eval_dataset": [198, 331, 344, 348], "compute_metr": [198, 331, 344], "task_typ": [198, 223], "task_id": [198, 223], "entri": [198, 214, 219, 220, 378], "techniqu": [198, 344, 346, 348, 383], "builtin_eval_func": [198, 214], "dataset": [198, 214, 223, 224, 332, 343, 346, 379, 383], "saved_model": 198, "quantized_model_path": 198, "larger": [198, 204, 214], "model_builder_builtin": [198, 214, 331], "arch_para": [198, 214], "built": [198, 331, 380], "builder": [198, 331], "inform": [198, 201, 204, 206, 207, 208, 209, 210, 211, 301, 304, 305, 307, 308, 312, 318, 319, 329, 341, 342, 344, 345, 352, 353, 360, 364, 367, 374, 375, 376, 382, 383, 384, 388], "autodistillation_config": [198, 214, 331], "build_train_func": 198, "infer_framework_load_model": 199, "autoconfig": [199, 344, 348, 381], "model_class": 199, "task": [199, 220, 223, 331, 343, 344, 345, 346, 357, 364, 370, 373, 381], "model_kwarg": [199, 219, 220, 381], "pruningmod": 200, "current": [200, 201, 204, 206, 207, 208, 210, 211, 213, 353, 363, 364, 365, 367, 368, 370, 375, 376], "prunerconfig": [200, 348], "update_frequ": 200, "prune_typ": [200, 348, 382], "per_tensor": 200, "register_criterion": 201, "registri": [201, 204, 206, 207, 209, 210, 211], "get_criterion": 201, "pruningcriterion": 201, "on_step_begin": [201, 206, 207, 208], "begin": [201, 206, 207, 208, 220, 331, 363, 364], "on_before_optimizer_step": [201, 206, 207, 208, 209], "on_after_optimizer_step": [201, 206, 207, 208, 209], "magnitudecriterion": 201, "magnitud": [201, 382], "criterion_class": 201, "deriv": [201, 204, 206, 207, 209, 210, 211, 315, 369, 370], "determin": [201, 204, 207, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 354, 373], "magtinud": 201, "gradientcriterion": 201, "gradient": [201, 206], "absolut": [201, 379, 382, 383], "snipcriterion": 201, "snip": [201, 206], "product": [201, 344, 360, 370, 374, 380, 383], "singl": [201, 206, 210, 211, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 365, 370], "shot": [201, 206, 210, 211], "network": [201, 204, 206, 331, 345, 351, 352, 353, 355, 367, 382, 383], "sensit": [201, 206], "arxiv": [201, 206, 219], "ab": [201, 206, 219, 383], "1810": [201, 206], "02340": [201, 206], "snipmomentumcriterion": 201, "momentum": [201, 206], "mechan": 201, "much": [201, 356, 365], "preserv": 201, "updat": [201, 204, 206, 207, 211, 212, 343, 344, 349, 350, 352, 369, 382], "register_pattern": 204, "get_pattern": 204, "assertionerror": [204, 205, 206, 207, 212], "basepattern": [204, 209], "unit": [204, 361, 368], "dure": [204, 210, 211, 214, 352, 368, 372, 377, 380, 382, 383], "is_glob": 204, "take": [204, 341, 345, 353, 355, 358, 363, 371, 372], "contrast": 204, "individu": [204, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341], "keep_mask_lay": 204, "whose": [204, 205, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 359], "mask": [204, 206, 207, 210, 211, 219, 220, 317, 346, 363, 364, 366, 368, 371], "invalid_lay": 204, "reach": [204, 210, 211, 342, 344], "minimum": 204, "reduce_tensor": 204, "dim": [204, 219, 220, 352, 358, 362, 368, 372, 376], "reduc": [204, 344, 358, 362, 363, 365, 367, 368, 369, 371, 372, 383], "along": [204, 354, 367, 370, 372], "dimens": [204, 219, 220, 331, 345, 354, 367, 368, 370, 372, 376], "axi": [204, 344, 351, 353, 370, 371], "get_mask": 204, "pre_mask": 204, "layer_nam": 204, "unprun": 204, "abstract": [204, 210, 211, 219, 220], "get_masks_glob": 204, "get_masks_loc": 204, "get_single_mask_per_target_ratio": 204, "exact_sparsity_ratio": 204, "get_block_size_dict": 204, "mainli": [204, 210, 211, 354, 368, 369], "per": [204, 353, 360, 363, 366, 368, 374, 376, 377, 382], "To": [204, 210, 211, 219, 220, 331, 342, 351, 365, 368, 370, 372, 376, 377], "implement": [204, 207, 208, 209, 210, 211, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 336, 344, 351, 354, 355, 359, 361, 362, 363, 365, 367, 368, 369, 370, 371, 373, 376, 389], "get_sparsity_ratio": [204, 208], "return_dict": [204, 219, 220], "zero": [204, 206, 207, 208, 364, 365, 367, 368, 372, 382], "zero_cnt": 204, "total_cnt": 204, "get_pattern_lock_mask": 204, "obtain": [204, 205, 209, 210, 211, 212, 344, 346, 353, 371], "posit": [204, 219, 220, 341, 344, 348, 354, 359, 376, 381], "lock": [204, 382], "check_layer_valid": 204, "block_siz": 204, "get_reduced_masks_from_data": 204, "update_residual_cnt": 204, "yet": 204, "get_sparsity_ratio_each_lay": 204, "sparsity_ratio": 204, "zero_point": 204, "cnt": 204, "sparsityinfo": 204, "adjust_ratio": 204, "key_new_spars": 204, "max_sparsity_ratio": 204, "min_sparsity_ratio": 204, "final_target_sparsity_ratio": 204, "adjust": [204, 332, 358, 383], "examin": 204, "propos": [204, 331, 345, 362], "indic": [204, 219, 220, 317, 359, 363, 364, 370, 372, 376, 379], "adjust_sparsity_ratio": 204, "patternnxm": 204, "nxm": [204, 207, 362], "height": 204, "width": [204, 362, 363, 367, 369, 383], "vertic": 204, "direct": [204, 317], "becaus": [204, 351, 363, 366, 371, 383], "calul": 204, "ration": 204, "block_size_1": 204, "block_size_2": 204, "wise": [204, 361, 376, 390], "block_wis": 204, "get_sparsity_ratio_progress": 204, "reshape_orig_to_pattern": 204, "s1": 204, "s2": 204, "reshape_reduced_to_orig": 204, "orig_shap": 204, "permut": [204, 353, 366, 370, 376], "reduce_scor": 204, "recalcul": 204, "get_mask_per_threshold": 204, "cur_target_sparsity_ratio": 204, "keep_exact_sparsity_ratio": 204, "togeth": [204, 344], "keep_pre_mask": 204, "remain": [204, 317], "unchang": 204, "count_new_masked_cnt": 204, "new_added_mask": 204, "count": [204, 353, 358], "ad": [204, 207, 219, 220, 351, 355, 359, 363, 372, 376, 381], "update_new_added_mask": 204, "cur_mask": 204, "bacaus": 204, "update_progressive_mask": 204, "progressive_step": 204, "progressive_config": 204, "progress": [204, 207, 210, 211], "update_progressive_masks_linear": 204, "update_progressive_masks_scor": 204, "update_progressive_masks_loc": 204, "domain": [204, 336, 361, 389], "update_progressive_masks_glob": 204, "patternninm": 204, "continu": [204, 219, 362, 365, 369, 370], "github": [204, 208, 224, 226, 342, 343, 344, 349, 350, 352, 358, 378, 384], "com": [204, 208, 224, 226, 343, 344, 349, 350, 352, 360, 374, 378, 384], "blob": [204, 224], "master": [204, 208], "md": [204, 224, 353, 356], "get_least_ninm_mask_from_data": 204, "elementwis": 204, "sparisti": 204, "get_ele_mask_per_threshold": 204, "least_ninm_mask": 204, "least_m_in_m_mask": 204, "check_config": [205, 212], "prune_config": [205, 212], "everyth": [205, 212], "reset_non_value_to_default": 205, "up": [205, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 351, 353, 355, 364, 376], "undefin": [205, 212], "item": [205, 212, 332, 344, 348], "process_and_check_config": [205, 212], "copi": [205, 355, 370], "non": [205, 220, 367, 370, 372, 376, 377], "directli": [205, 220, 363, 366, 368, 369], "read": [205, 208, 344, 352], "obejct": 205, "process_config": [205, 212], "parse_to_prun": [205, 212], "keep": [205, 212, 355], "parse_not_to_prun": 205, "register_prun": [206, 207], "get_prun": [206, 207], "cuurent": [206, 207], "current_sparsity_ratio": [206, 207], "global_step": [206, 207], "trigger": [206, 207, 215, 342], "update_frequency_on_step": 206, "frequenc": [206, 207, 360, 374, 382], "max_sparsity_ratio_per_lay": 206, "on_epoch_begin": [206, 207, 208], "mask_weight": [206, 207], "formal": [206, 207, 219], "local_step": [206, 207, 208], "judg": 206, "Or": [206, 359], "simpli": 206, "on_step_end": [206, 207, 208], "on_epoch_end": [206, 207, 208], "on_train_begin": [206, 207, 208], "on_train_end": [206, 207, 208], "on_before_ev": [206, 207, 208], "on_after_ev": [206, 207, 208], "check_is_pruned_step": [206, 207], "update_scor": 206, "magnitudeprun": 206, "inherit": [206, 207, 210, 211, 332, 345, 351, 358, 381, 382, 383], "snipprun": 206, "snipmomentumprun": 206, "moreoev": 206, "patternlockprun": [206, 207], "fix": [206, 207, 342, 354, 366], "chang": [206, 207, 210, 211, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 342, 351, 362, 363, 372, 377, 378], "parse_valid_pruner_typ": 207, "baseprun": 207, "what": [207, 341, 363, 364, 370, 382], "show": [207, 341, 344, 351, 352, 355, 356, 359, 366, 368, 370], "mask_weights_gener": 207, "update_mask": 207, "phase": [207, 208, 345, 382], "boolean": 207, "basicprun": 207, "arrang": 207, "within": [207, 331, 341, 367], "proce": 207, "regul": 207, "term": [207, 209, 331, 345, 367, 370, 372, 378, 379, 380, 383], "set_global_step": 207, "progressiveprun": 207, "interpol": 207, "fine": [207, 343, 382, 383], "grain": 207, "improv": [207, 342, 344, 353, 363, 365, 367, 368, 372, 383], "interv": [207, 376], "check_progressive_valid": 207, "check_is_pruned_progressive_step": 207, "update_masks_progress": 207, "print_progressive_spars": 207, "templat": [208, 315, 317], "tree": 208, "huggingface_model": 208, "text": [208, 224, 332, 344, 346, 364, 373, 378, 381], "classif": [208, 219, 220, 331, 345, 346, 381], "eager": [208, 383], "config_file_path": 208, "pruner_info": 208, "update_config": 208, "pass": [208, 219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 317, 363, 364, 381, 383], "elementwise_over_matmul_gemm_conv": 208, "elementwise_over_al": 208, "blockwise_over_matmul_gemm_conv": 208, "ensur": [208, 368], "register_reg": 209, "regulariz": 209, "get_reg_typ": 209, "get_reg": 209, "basereg": 209, "grouplasso": [209, 382], "coeff": 209, "lasso": [209, 346, 382], "variabl": [209, 317, 355, 358, 376, 377], "reg_term": 209, "coeffient": 209, "register_schedul": [210, 211], "get_schedul": [210, 211], "dens": [210, 211, 317, 353, 354, 359, 361, 372, 376, 382], "gradual": [210, 211], "update_sparsity_ratio": [210, 211], "aggressive_ratio": 210, "current_prune_step": [210, 211], "total_prune_step": [210, 211], "oneshotschedul": [210, 211], "onc": [210, 211, 302, 344, 353, 371], "aggress": 210, "iterativeschedul": [210, 211], "target_ratio": [210, 211], "pruningschedul": 211, "init_ratio": 211, "init_sparsity_ratio": 211, "reset_none_to_default": 212, "update_param": 212, "process_weight_config": 212, "global_config": 212, "local_config": 212, "default_config": 212, "pruners_info": 212, "process_yaml_config": 212, "check_key_valid": 212, "template_config": 212, "user_config": 212, "quantizationmod": 213, "easili": [214, 362, 363], "finetun": [214, 344, 346, 348, 381], "basetrain": 214, "builtin_train_func": 214, "automativ": 214, "low": [214, 344, 348, 362, 369, 371, 380, 383, 392], "achiev": [214, 344, 365, 380], "point": [214, 219, 220, 331, 355, 363, 364, 368, 371, 383], "automat": [214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 332, 343, 353, 354, 355, 363, 376], "pruningconf": 214, "smaller": [214, 345, 368, 382], "config_list": 214, "optimizt": 214, "create_optimizer_builtin": 214, "resume_from_checkpoint": 214, "optuna": 214, "ignore_keys_for_ev": 214, "tor": 214, "checkpoint": [214, 219], "present": [214, 219, 371], "state": [214, 219, 220, 344, 360, 374], "hyperparamet": [214, 331], "ignor": [214, 219, 220, 351], "keyword": 214, "hide": [214, 219, 220], "deprec": [214, 219, 220], "training_step": 214, "inject": [214, 364], "union": [214, 317], "being": [214, 368], "fed": 214, "most": [214, 344, 355, 359, 363, 364, 365, 370, 381], "expect": [214, 219, 220, 341, 342, 372, 380], "label": [214, 219, 220, 224, 343, 377, 381], "training_step_length_adapt": 214, "compute_loss": 214, "return_output": 214, "By": [214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 352], "nas_config": 214, "baseic": 214, "callabel": 214, "auto_distil_evaluation_loop": 214, "prediction_loss_onli": 214, "ignore_kei": 214, "metric_key_prefix": 214, "eval": [214, 331, 379], "trainer_util": 214, "evalloopoutput": 214, "share": [214, 365], "work": [214, 301, 364, 381], "doe": [214, 351, 363, 364, 365, 366, 367, 370, 376], "avoid": [214, 219, 220, 359, 362, 364, 368, 370, 371, 376], "memori": [214, 358, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 380, 383], "huge": 214, "prefix": [214, 376], "export_to_onnx": [214, 344, 347], "tranfer": 214, "paramert": 214, "export_to_fp32_onnx": 214, "save_path": [214, 347], "opset_vers": [214, 347], "14": [214, 347, 360, 366, 373, 374], "do_constant_fold": [214, 347], "verbos": [214, 347], "export": [214, 344, 352, 353, 356, 381, 387], "fold": [214, 376], "export_to_bf16_onnx": 214, "export_to_int8_onnx": 214, "quant_format": [214, 347], "s8s8": [214, 347], "sample_s": 214, "calibrate_method": 214, "minmax": 214, "scale_map": [214, 344], "export_to_jit": 214, "set_dynamic_config": [214, 348], "dynamic_config": [214, 348], "run_evolutionary_search": 214, "nlptrainer": [214, 344, 345, 348, 382, 383], "nlpseq2seqtrain": 214, "seq2seq": [214, 219, 220], "special": [215, 364, 370], "greater_is_bett": [217, 221, 331, 348, 379, 380, 383], "is_rel": [217, 348, 379, 383], "01": [217, 348, 374, 379, 383], "weight_ratio": [217, 221, 379, 380, 383], "modeling_bert_dynam": 218, "modeling_roberta_dynam": 218, "bert": [219, 331, 344, 345, 346, 352, 353, 354, 357, 359, 360, 363, 368, 369, 370, 371], "load_tf_weights_in_bert": 219, "tf_checkpoint_path": 219, "bertembed": [219, 220], "word": [219, 220, 346, 372], "token_typ": 219, "forward": [219, 220, 310, 331, 353, 358, 383], "longtensor": [219, 220], "token_type_id": [219, 220], "position_id": [219, 220], "inputs_emb": [219, 220], "floattensor": [219, 220], "past_key_values_length": [219, 220], "bertselfattent": 219, "position_embedding_typ": [219, 220], "transpose_for_scor": [219, 220], "hidden_st": [219, 220], "attention_mask": [219, 220], "head_mask": [219, 220], "encoder_hidden_st": [219, 220], "encoder_attention_mask": [219, 220], "past_key_valu": [219, 220], "output_attent": [219, 220], "bertselfoutput": 219, "bertattent": 219, "prune_head": [219, 220], "bertintermedi": 219, "intermedi": [219, 331, 351, 356, 359, 372, 383], "bertoutput": 219, "bertlay": 219, "output_length": [219, 220], "always_keep_cls_token": [219, 220], "feed_forward_chunk": [219, 220], "attention_output": [219, 220], "feed": [219, 220, 345, 352], "chunk": 219, "bertencod": 219, "encod": [219, 220, 331, 353, 359], "use_cach": [219, 220], "output_hidden_st": [219, 220], "modeling_output": [219, 220], "basemodeloutputwithpastandcrossattent": [219, 220], "bertpool": 219, "pooler": [219, 220], "bertpredictionheadtransform": 219, "bertlmpredictionhead": 219, "languag": [219, 220, 302, 341, 343, 344, 346, 381], "bertonlymlmhead": 219, "sequence_output": 219, "bertonlynsphead": 219, "pooled_output": 219, "bertpretraininghead": 219, "pretrain": [219, 220, 351], "bertpretrainedmodel": 219, "simpl": [219, 220, 344, 349, 352, 363, 371, 381], "bertforpretrainingoutput": 219, "bertforpretrain": 219, "sum": [219, 332, 345, 353, 369, 371, 372, 376], "prediction_logit": [219, 220], "sequence_length": [219, 220], "vocab_s": [219, 220], "vocabulari": 219, "seq_relationship_logit": 219, "hidden_s": [219, 220, 331], "plu": 219, "num_head": [219, 220], "averag": [219, 332, 344, 353], "bertmodel": 219, "add_pooling_lay": [219, 220], "behav": [219, 220], "well": [219, 220, 347, 383, 384], "decod": [219, 220, 373], "case": [219, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 331, 345, 346, 353, 354, 362, 364, 365, 366, 376, 377], "cross": [219, 220], "describ": [219, 220, 316, 343, 365, 367, 370, 376, 379, 380], "1706": [219, 360, 374], "03762": 219, "ashish": [219, 220], "vaswani": [219, 220], "noam": [219, 220], "shazeer": [219, 220], "niki": [219, 220], "parmar": [219, 220], "jakob": [219, 220], "uszkoreit": [219, 220], "llion": [219, 220], "jone": [219, 220], "aidan": [219, 220], "gomez": [219, 220], "lukasz": [219, 220], "kaiser": [219, 220], "illia": [219, 220], "polosukhin": [219, 220], "is_decod": [219, 220], "add_cross_attent": [219, 220], "get_input_embed": [219, 220], "getter": [219, 220], "set_input_embed": [219, 220], "set_length_config": [219, 220], "set_output_attent": [219, 220], "basemodeloutputwithpoolingandcrossattent": [219, 220], "pad": [219, 220, 332, 344, 353, 368, 372, 376], "n_layer": [219, 220], "embed_size_per_head": [219, 220], "precomput": [219, 220], "speed": [219, 220, 351, 355], "decoder_input_id": [219, 220], "those": [219, 220, 370, 382, 383], "past": [219, 220], "instead": [219, 220, 365], "get_output_embed": [219, 220], "set_output_embed": [219, 220], "new_embed": [219, 220], "next_sentence_label": 219, "legaci": [219, 220], "berttoken": 219, "uncas": [219, 331, 344, 346, 348, 356, 381], "hello": [219, 220], "my": [219, 220], "dog": [219, 220], "cute": [219, 220], "return_tensor": [219, 220, 332, 344, 348], "pt": [219, 220, 332, 344, 348, 381], "bertlmheadmodel": 219, "causallmoutputwithcrossattent": [219, 220], "prepare_inputs_for_gener": [219, 220], "bertformaskedlm": 219, "maskedlmoutput": [219, 220], "bertfornextsentencepredict": 219, "sentenc": [219, 220, 224, 332, 343, 344], "nextsentencepredictoroutput": 219, "prompt": 219, "itali": 219, "pizza": 219, "serv": 219, "restaur": 219, "unslic": 219, "next_sent": 219, "sky": 219, "blue": 219, "shorter": 219, "wavelength": 219, "light": 219, "logit": [219, 220, 331, 344, 345, 348, 352], "wa": 219, "bertforsequenceclassif": 219, "sequenceclassifieroutput": [219, 220], "regress": [219, 220, 343], "num_label": [219, 220, 344, 348], "entropi": [219, 220, 331], "bertformultiplechoic": 219, "choic": [219, 220, 346], "multiplechoicemodeloutput": [219, 220], "num_choic": [219, 220], "bertfortokenclassif": 219, "tokenclassifieroutput": [219, 220], "bertforquestionansw": 219, "question": [219, 341, 342, 344, 346, 366], "answer": [219, 220, 341, 346], "start_posit": [219, 220], "end_posit": [219, 220], "questionansweringmodeloutput": [219, 220], "span": [219, 220], "clamp": [219, 220], "taken": [219, 220], "account": [219, 220, 341], "expand_gath": [219, 220], "roberta": [220, 346], "robertaembed": 220, "tini": [220, 346], "tweak": 220, "create_position_ids_from_inputs_emb": 220, "cannot": [220, 362, 368, 372, 377], "sequenti": [220, 355, 363, 364, 367], "robertaselfattent": 220, "robertaselfoutput": 220, "robertaattent": 220, "attenion": 220, "robertaintermedi": 220, "intermidi": 220, "robertaoutput": 220, "robertalay": 220, "robertaencod": 220, "roberata": 220, "robertapool": 220, "robertapretrainedmodel": 220, "update_keys_to_ignor": 220, "del_keys_to_ignor": 220, "robertamodel": 220, "_": [220, 331, 343, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 368, 369, 370, 371, 375, 376, 379, 380, 381, 382, 383], "robertaforcausallm": 220, "causal": [220, 343], "robertatoken": 220, "robertaconfig": 220, "robertaformaskedlm": 220, "robertalmhead": 220, "featur": [220, 302, 331, 340, 342, 344, 345, 356, 359, 362, 369, 373, 381, 384, 393], "robertaforsequenceclassif": 220, "robertaformultiplechoic": 220, "robertafortokenclassif": 220, "robertaclassificationhead": 220, "robertaforquestionansw": 220, "quanstion": 220, "create_position_ids_from_input_id": 220, "padding_idx": 220, "symbol": 220, "fairseq": 220, "make_posit": 220, "models": [221, 346, 380], "distributed_init": [222, 223], "gloo": 222, "world_siz": 222, "rank": 222, "init_method": 222, "master_addr": 222, "127": [222, 353, 373, 374, 383], "master_port": 222, "12345": 222, "distibut": 222, "environ": [222, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 376, 377], "tfdataload": 223, "worker_address": 223, "worker": 223, "address": [223, 302, 341, 363, 369], "treat": [223, 351], "chief": 223, "get_filepath": 223, "base_dirpath": 223, "folder": [223, 350, 351, 352, 353, 354, 356], "keras2savedmodel": 223, "kera": 223, "augment": [224, 226, 387], "extens": [224, 342, 343, 348, 349, 350, 351, 378, 380, 381, 382, 384], "dataaugment": [224, 343], "augmenter_typ": [224, 343], "wai": [224, 344, 353, 354, 355, 359, 362, 364, 368, 370, 373], "enhanc": [224, 348, 367], "textgenerationaug": [224, 343], "keyboardaug": [224, 343], "aug": [224, 302, 343], "input_dataset": [224, 343], "origin_data": 224, "output_path": [224, 343], "join": [224, 343], "result_path": [224, 343], "test1": [224, 343], "cv": [224, 343], "augmenter_argu": [224, 343], "gpt2": [224, 343], "medium": [224, 302, 343, 344, 377], "data_aug": [224, 343], "text_generation_augment": 224, "raw_dataset": [224, 343, 344, 348], "No": [224, 346], "glue": [224, 343, 344], "sst2": [224, 332, 343, 344, 346, 353, 357], "eo": [224, 343], "k": [224, 317, 343, 354, 363, 365, 366, 367, 368, 370, 371, 372, 374, 376], "p": [224, 343, 344], "top_p": 224, "effect": [224, 302, 343, 344, 351, 376], "tend": 224, "toward": [224, 341], "greedi": 224, "repetition_penalti": 224, "primarili": 224, "ctrl": [224, 343, 346], "num_return_sent": 224, "entir": [224, 353, 362, 368, 369, 382], "num_sampl": 224, "condit": [224, 343, 354, 355, 378], "stop_token": 224, "mit_data_augment": 224, "nlpaug": [224, 226, 343], "librari": [224, 226, 336, 342, 363, 364, 368, 389], "help": [224, 226, 343, 344, 359, 363, 375], "machin": [224, 226, 343, 376], "learn": [224, 226, 302, 343, 356, 364, 380, 383], "project": [224, 226, 341, 342, 343], "makcedward": [224, 226], "suffix": 224, "csv": [224, 343], "column_nam": 224, "sentence1": 224, "sentence2": 224, "data_augment": [225, 343], "augmentertyp": 226, "enumer": [226, 317], "get_augmenter_from_typ": 226, "aug_typ": 226, "augment_typ": 226, "testaddclstoken": 229, "methodnam": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "runtest": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "test": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 342, 344, 346, 349, 360, 374, 376, 377], "code": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 344, 348, 349, 351, 354, 364, 365, 366, 367, 368, 373, 376, 378], "itself": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 373], "place": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 364, 369, 382], "fixtur": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "testcas": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "constructor": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 358], "author": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 378], "deconstruct": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "setup": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 343, 344, 349, 351], "teardown": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "respect": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 355, 356], "necessari": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341, 358, 372, 376], "__init__": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 351], "alwai": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 359, 368, 377], "signatur": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "failureexcept": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "fail": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "deem": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 341], "rather": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 355, 363], "longmessag": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "long": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 359], "messag": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "repr": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "failur": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "explicit": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 310, 315, 341, 358, 364], "maxdiff": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "diff": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "difflib": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "look": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 351, 353, 364, 365], "setupclass": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "hook": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "teardownclass": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "testaddembed": 230, "testattentionreshap": [231, 232, 277, 280], "testtorchmodel": [233, 247], "testbinaryop": 234, "testtorchop": [235, 237, 243, 246, 254, 255, 258, 259, 268, 271, 273, 282, 283, 285, 290, 294], "testcastto": 236, "testconvreshap": 238, "testdecoderattnreshap": 239, "testdispatchertuningacc": 240, "testdispatchertuningthroughput": 241, "testdynamicquant": 242, "testembeddingbag": 244, "testexecutionopt": 245, "testgraphdispatch": 248, "testinsertinputouputdata": 249, "testissupportedonnxgraph": 250, "testlastlayershap": 251, "testlayernormwithreducemean": [252, 279, 281], "testlayernormwithtranspos": 253, "testtorchlinear": 256, "testmain": 257, "testmatmulwithbiasrelu": 260, "testmatmulwithbiassigmoid": 261, "testmatmulwithbiastanh": 262, "testmergedembeddingbag": 263, "testonnxutil": 265, "testoperatoradaptor": 266, "testop": 267, "testpaddingsequ": 269, "testpatterndispatch": 270, "testpositionembed": 272, "testprimitivecacheacc": 274, "testprimitivecachethroughput": 275, "testqkvmerg": 276, "testquantonnxexecut": 278, "teststartendlogit": 284, "testtextencod": 286, "testtextencoderbf16": 287, "testtfutil": 288, "testtokentypeembed": 289, "testtransposebatchmatmul": 291, "testunet": 292, "testunetbf16": 293, "testvaedecod": 295, "testvaedecoderbf16": 296, "testweightsharingacc": 297, "testweightsharingdispatchertuningacc": 298, "testweightsharingdispatchertuningthroughput": 299, "testweightsharingthroughput": 300, "issu": [301, 331, 338, 341, 342, 344, 369, 383, 391], "center": 301, "resolv": 301, "guidelin": 301, "innov": [302, 344], "toolkit": [302, 344, 346, 352], "particular": 302, "4th": [302, 344], "xeon": [302, 344, 346, 349, 362, 371, 374, 378, 383], "scalabl": [302, 344, 346, 349, 363], "processor": [302, 344, 346, 349, 360, 374], "sapphir": [302, 344, 349], "rapid": [302, 344, 349], "codenam": 302, "seamless": [302, 344], "experi": [302, 341, 344, 366, 371, 372], "extend": [302, 344, 365], "leverag": [302, 331, 344, 345, 348], "advanc": [302, 331, 341, 344, 361, 373], "softwar": [302, 344, 378], "optim": [302, 329, 331, 332, 344, 345, 346, 347, 348, 349, 352, 355, 356, 357, 363, 364, 365, 367, 379, 380, 381, 382, 383], "uniqu": [302, 344], "awar": [302, 344], "runtim": [302, 317, 344, 373, 376, 383], "releas": [302, 344, 388], "neurip": [302, 344], "2022": [302, 344, 360, 374], "paper": [302, 344, 348], "distilbert": [302, 331, 344, 346, 348, 356, 381], "quala": [302, 344, 346, 348], "minilm": [302, 344, 346, 348], "2021": [302, 344], "pre": [302, 344, 355, 365, 375], "applic": [302, 344], "diffus": [302, 344, 346, 368], "gpt": [302, 343, 344, 346], "j": [302, 344, 346, 350, 351, 352, 361, 367, 372, 373, 376], "6b": [302, 344, 346], "bloom": [302, 344], "176b": [302, 344], "t5": [302, 344, 346], "setfit": [302, 344], "blog": [302, 344], "publish": [302, 341, 344, 378], "mleffici": [302, 344], "effici": [302, 344, 348], "dec": [302, 344], "nov": [302, 344], "coher": [302, 369], "novemb": 302, "alibaba": 302, "deep": [302, 343, 344, 356, 364, 380, 383], "purif": 302, "kernel": [303, 317, 340, 352, 353, 358, 360, 362, 363, 364, 366, 367, 369, 370, 371, 372, 373, 374, 375, 393], "namespac": [310, 314, 315, 316, 317], "typedef": [310, 317], "std": [310, 314, 315, 316, 317, 361, 363, 364], "unordered_map": [310, 316, 364], "shared_ptr": [310, 314, 315, 358], "kernelhandl": 310, "operatorconfig": [310, 358], "executionopt": [310, 354], "e_ptr": 310, "m_ptr": 310, "inlin": [310, 314, 315, 316, 317, 363], "void": [310, 315, 316, 317, 358, 361, 363, 364, 365], "vector": [310, 314, 315, 316, 317, 358, 361, 363, 364, 365, 367, 370, 372], "adaptattr": 310, "adapttensor": 310, "resetopstatu": 310, "getexecutekernel": 310, "reshape_model": 310, "has_dispatch_table_fil": 310, "set_tuning_mod": 310, "do_tun": 310, "operator_conf": 310, "execute_kernel": 310, "no_tuning_spac": 310, "set_post_op": 310, "post_op": 310, "set_lat": 310, "set_enable_spars": 310, "enable_spars": 310, "kernel_typ": [310, 376, 377], "weight_zero_ratio": 310, "set_weight_shap": 310, "int64_t": [310, 317], "weight_shap": 310, "set_table_id": 310, "table_id": 310, "set_perf_ratio_id": 310, "perf_ratio_id": 310, "append_it_shap": 310, "input_shap": [310, 353, 354, 376], "append_ot_shap": 310, "output_shap": [310, 353], "set_it_shap": 310, "get_it_shap": 310, "get_ot_shap": 310, "set_reshape_tim": 310, "reshape_time_": 310, "get_reshape_tim": 310, "input_attr": 310, "get_attr": 310, "protect": [310, 314, 315], "size_t": [310, 315, 317, 354, 364], "gethash": 310, "name_": 310, "type_": 310, "operator_conf_": [310, 358], "isa": [310, 354, 361, 363, 368, 371, 372, 373], "cpu_isa_": 310, "kernel_handler_": 310, "execute_kernel_": 310, "do_tuning_": 310, "no_tuning_space_": 310, "iter_cnt_": 310, "sparselib_available_": 310, "tune_dense_in_sparse_": 310, "monopoly_kernel_": 310, "dispatch_table_file_exists_": 310, "execution_options_ptr_": 310, "nullptr": [310, 315, 363], "adapt_action_": 310, "model_": 310, "operator_desc": [313, 314, 315, 318, 361], "jd": [314, 315, 316, 317, 364], "engine_t": 314, "cpu_engine_t": 314, "gpu_ocl_engine_t": 314, "engine_kind": [314, 316, 364], "runtime_kind": [314, 316], "virtual": [314, 315, 316, 358, 363, 364], "get_engine_kind": 314, "get_runtime_kind": 314, "impl_list_item_t": [314, 315], "get_implementation_list": 314, "op_desc": [314, 315, 361, 364], "create_kernel": 314, "kernel_t": [314, 315], "stream_t": 314, "create_stream": 314, "create_memory_storag": 314, "memory_storage_t": 314, "engine_kind_": [314, 316], "runtime_kind_": [314, 316], "cpu_inst": 314, "null_inst": 314, "storag": 314, "empty_list": 314, "typenam": [315, 317], "arg_t": 315, "proxy_bas": 315, "hpp": [315, 316, 317, 354, 361, 376], "proxi": [315, 336, 361, 368, 389], "anyth": 315, "similar": [315, 355, 363, 366, 367, 369, 370, 382], "onednn": [315, 358], "struct": [315, 317, 363, 364], "oneapi": [315, 358, 373], "dnnl": [315, 354, 358], "136": 315, "reset_sp": 315, "sp": 315, "get_sp": 315, "create_proxy_object": 315, "result_ref": 315, "privat": [315, 316, 341, 352, 358, 362, 363, 364, 369], "member": [315, 316, 317, 341, 358, 363, 364], "data_handle_": 315, "kernel_desc_proxi": 315, "kernel_desc_t": 315, "real": [315, 354, 369, 370, 373], "attention_desc": 315, "dyn_quantize_mha_desc": 315, "dynamic_quant_desc": 315, "dynamic_quant_matmul_desc": 315, "eltwiseop_desc": 315, "gather_desc": 315, "layernorm_ba_desc": [315, 363], "layernormalized_spmm_desc": 315, "logsoftmax_desc": 315, "mha_dense_desc": 315, "slice_desc": 315, "softmax_desc": 315, "sparse_matmul_desc": [315, 361], "transpose_matmul_desc": 315, "transpose_mha_desc": 315, "kernel_kind": [315, 316, 364], "impl_list_": 315, "kernel_proxi": 315, "dyn_quantize_mha": 315, "dynamic_qu": 315, "dynamic_quant_matmul": 315, "eltwiseop": [315, 363, 364], "layernorm_ba": 315, "layernormalized_spmm": 315, "mha_dens": [315, 376], "slice": [315, 368], "sparse_matmul": [315, 373], "transpose_matmul": 315, "transpose_mha": 315, "kdp": 315, "rt_data": [315, 361], "get_workspace_s": 315, "kd": [315, 331, 345], "sparse_matmul_desc_t": 315, "sparse_matmul_t": 315, "descriptor": [316, 358, 376], "ker_kind": [316, 361, 364], "kernel_prop": [316, 364], "ker_prop": [316, 361, 364], "eng_kind": [316, 361, 364], "tensor_desc": [316, 364], "ts_desc": [316, 361, 364], "postop_attr": [316, 317, 364], "apply_postops_list": [316, 364], "rh": [316, 370], "set_binaryop_list": [316, 363], "binaryop_attr": [316, 317, 363], "binaryop_list": [316, 363], "uint64_t": 316, "impl_nthr": 316, "get_binaryop_list": [316, 363], "ker_kind_": [316, 364], "ker_prop_": [316, 364], "forward_infer": [316, 358, 364], "undef": [316, 317, 363, 364], "impl_nthr_": [316, 364], "ts_descs_": [316, 364], "attrs_": [316, 364], "apply_postops_list_": [316, 364], "binaryop_list_": [316, 363], "enum": [317, 363, 364], "attention_io": 317, "merge_src": 317, "merge_dst": 317, "q_weight": 317, "k_weight": 317, "v_weight": 317, "q_bia": 317, "k_bia": 317, "v_bia": 317, "q_scale": 317, "k_scale": 317, "v_scale": 317, "reshape_input": 317, "q_k_src2": 317, "q_k_scale": 317, "qk_v_output_zero_point": 317, "qk_v_output_scal": 317, "ssd": [317, 364, 376], "eltwiseop_param_t": [317, 364], "element_num": [317, 364], "data_typ": [317, 358, 363, 364, 376], "in_dt": 317, "out_dt": 317, "element_num_each_th": 317, "remain_el": 317, "eltwiseop_data_t": 317, "dst": [317, 358, 363, 364, 366, 367, 368, 371, 372, 376], "gather_param_t": 317, "dt": [317, 363, 364], "dt_size": 317, "extend_mask": 317, "src_axis_s": 317, "dst_axis_s": 317, "src_size": 317, "idx_siz": 317, "outer_s": 317, "inner_s": 317, "binary_ts_s": 317, "gather_data_t": 317, "binaryop_addr": [317, 363], "16": [317, 332, 346, 347, 352, 360, 366, 367, 368, 369, 372, 373, 374, 376, 383], "spec_translnorm_typ": 317, "normal": [317, 363, 371, 390], "layernorm_ba_param_t": 317, "input_dt": [317, 363, 376], "output_dt": [317, 376], "output2_dt": 317, "spec_typ": [317, 376], "row_num": 317, "col_num": 317, "process_col": [317, 363], "direct_process_row": 317, "process_batch_per_k": 317, "ker_per_batch": 317, "batch_num": 317, "thread_elt_offset": [317, 363], "split_output": 317, "layernorm_ba_data_t": 317, "dst2": 317, "process_row": 317, "anonym": 317, "ep": 317, "1e": 317, "matmul_param_t": 317, "dim_t": 317, "m_tile": 317, "n_tile": 317, "matmul_data_t": 317, "src0": [317, 376], "src1": [317, 353, 363, 376], "src2": [317, 363, 376], "matmul_u8_data_t": 317, "uint8_t": [317, 363, 364], "int8_t": 317, "zp": [317, 363], "matmul_io": 317, "io": [317, 358], "dst0": 317, "scale0": 317, "zp0": 317, "matmul_io_max": 317, "mean_var_reduce_param_t": 317, "bm": 317, "bn": 317, "mean_var_reduce_data_t": 317, "mean_in": 317, "var_in": 317, "mean_out": 317, "var_out": 317, "spec_softmax_typ": 317, "lut": [317, 361, 363, 364, 376], "softmax_param_t": 317, "sepc_typ": 317, "scalar_num": 317, "vec_align_len": 317, "vec_tail_len": 317, "vec_num_per_thr": 317, "vec_num_tail_thr": 317, "get_lut_exp_attr": 317, "softmax_data_t": 317, "tmp": [317, 364, 366, 368, 371], "process_vec_num": 317, "bfloat16_t": 317, "amx_params_t": 317, "amx_bf16_params_t": 317, "amx_int8_params_t": 317, "amx_inputs_t": 317, "amx_bf16f32_inputs_t": 317, "amx_bf16bf16_inputs_t": 317, "sparse_schem": 317, "scenario": [317, 343, 368], "spmm_vnni": 317, "sparse_x_dens": 317, "dense_x_spars": 317, "sparse_x_spars": 317, "subfunc_level": [317, 376], "non_kdim": 317, "kdim": 317, "subfunc_level_max": [317, 376], "constexpr": 317, "wei": [317, 368, 376], "todo": [317, 385], "yi": 317, "conflict": 317, "dst_m1": 317, "dst_m2": 317, "work_spac": 317, "vnni_param_t": 317, "spmm_type": 317, "primit": [317, 358], "jit_domain": 317, "has_bia": 317, "append_sum": 317, "output_typ": [317, 353], "tile_w": 317, "sub_func": 317, "im_start": 317, "blocksiz": 317, "indptr": 317, "welford": [317, 369], "dst_t": 317, "vnni_data_t": 317, "ptr_dens": 317, "int32_t": 317, "ptr_bia": 317, "ptr_dst": 317, "ptr_scale": 317, "ptr_dst_m1": 317, "ptr_dst_m2": 317, "num_tilem": 317, "tilem": 317, "tilen": 317, "blocks_per_group": 317, "64": [317, 331, 349, 353, 360, 368, 370, 371, 373, 374, 376], "sizeof": 317, "nnz_group": 317, "nrowptr": 317, "colidx": 317, "group_rowptr": 317, "same_src_dtyp": 317, "src_t": 317, "wgt_t": 317, "bia_t": 317, "avx512_fp32_params_t": 317, "bsc_data_t": 317, "sparse_ptr": 317, "im_end": 317, "in_start": 317, "in_end": 317, "avx512_data_t": 317, "transpose_copy_param": 317, "srcptr": 317, "dstptr": 317, "srcstride": 317, "dststride": 317, "seq_vnni_copy_param": 317, "transpose_mha_step1_param": 317, "mata": 317, "matb": 317, "matc": 317, "matd": 317, "expsum": 317, "cfg": 317, "batchk": [317, 371], "astep": 317, "cstep": 317, "sumstep": 317, "cbatchstep": 317, "scaleab": 317, "transpose_mha_step2_param": 317, "sumptr": 317, "transpose_mha_step3_param": 317, "scalec": 317, "zeropointc": 317, "transpose_mha_io": 317, "src_k": 317, "src_q": 317, "src_v": 317, "tmp2m": 317, "sl_pad": 317, "head_num": [317, 370, 376], "head_siz": [317, 370, 376], "seq_len": [317, 344, 353, 357, 370, 376], "scale_q": 317, "scale_k": 317, "scale_v": 317, "scale_dst": 317, "zp_dst": 317, "transpose_mha_io_max": 317, "arch": 331, "proposit": 331, "promis": [331, 367], "assess": 331, "128": [331, 344, 353, 357, 360, 374, 376, 383], "advisor": 331, "ever": 331, "find": [331, 351, 354, 358, 359, 367, 382], "student": [331, 345, 346], "minim": [331, 345, 372], "done": [331, 345, 354, 368, 376, 383], "z": [331, 345], "distanc": [331, 345], "euclidean": [331, 345], "kullback": [331, 345], "leibler": [331, 345], "diverg": [331, 345], "assign": 331, "cal": 331, "sloss": 331, "mismatch": 331, "512": [331, 353, 367, 369, 372, 374, 376], "desir": [331, 353], "unmatch": 331, "agent": 331, "train_func_builtin": 331, "flash_distil": 331, "eval_func_builtin": 331, "els": [331, 332, 351, 358], "search_loop": 331, "model_arch_para": 331, "oob": 331, "246": 331, "intra_bottleneck_s": 331, "96": [331, 360, 374], "160": [331, 360, 373], "num_attention_head": 331, "intermediate_s": 331, "640": 331, "num_feedforward_network": 331, "mobilebert": [331, 345, 346], "kl": 331, "mse": 331, "best_model_arch": 331, "automodelforpretrain": 331, "higher_is_bett": 331, "10": [331, 343, 344, 349, 353, 360, 366, 374, 376], "42": [331, 360, 374], "500": 331, "25000": 331, "mobilebert_distil": 331, "sgd": 331, "learning_r": 331, "001": 331, "mobilebert_na": 331, "5000": 331, "partial": 331, "pylint": [331, 342], "disabl": [331, 341, 360, 374, 376], "e1101": 331, "makedir": 331, "exist_ok": 331, "120": [331, 373], "240": 331, "256": [331, 353, 374, 376], "eval_loss": [331, 348], "tfautomodelforsequenceclassif": 331, "capabl": [332, 369, 372], "through": [332, 344, 351, 363, 366, 367, 368, 373], "physic": [332, 341, 370], "model_nam": [332, 381], "dataset_nam": 332, "autotoken": [332, 344, 381], "load_dataset": [332, 343, 344], "lambada": 332, "195": 332, "intel_extension_for_transform": [332, 344, 345, 348, 349, 351, 352, 354, 356, 359, 361, 376, 379, 380, 381, 382, 383], "summari": 332, "003": 332, "throughput": [332, 344, 360, 368], "5071": 332, "933": [332, 360], "guid": [335, 344, 345, 351, 364, 366, 388], "formerli": [336, 344, 349, 361, 389], "known": [336, 344, 361, 389], "sparselib": [336, 354, 361, 389], "high": [336, 344, 352, 361, 368, 369, 372, 389], "assembli": [336, 361, 365, 367, 372, 373, 389], "introduc": [338, 342, 362, 363, 364, 365, 366, 368, 370, 371, 372, 383, 391], "who": [338, 341, 364, 391], "might": [338, 355, 391], "profil": [338, 391, 392], "intruct": [338, 391], "met": [338, 391], "request": [338, 344, 391], "interest": 341, "foster": 341, "open": [341, 343, 352, 356], "welcom": [341, 342], "maintain": [341, 342, 344, 355, 384], "particip": [341, 365], "commun": 341, "harass": 341, "free": [341, 363, 376], "everyon": 341, "regardless": 341, "ag": 341, "bodi": [341, 370], "ethnic": 341, "sex": 341, "characterist": 341, "gender": 341, "express": 341, "educ": 341, "socio": 341, "econom": 341, "statu": [341, 380, 383], "nation": 341, "person": 341, "appear": 341, "race": 341, "religion": 341, "sexual": 341, "orient": 341, "contribut": 341, "inclus": 341, "Being": 341, "viewpoint": 341, "gracefulli": 341, "critic": 341, "focus": 341, "empathi": 341, "unaccept": 341, "imageri": 341, "unwelcom": 341, "troll": 341, "insult": 341, "derogatori": 341, "comment": 341, "polit": 341, "attack": 341, "electron": 341, "permiss": 341, "reason": [341, 355, 358, 369], "consid": [341, 354, 362, 364, 366, 377], "inappropri": 341, "profession": 341, "clarifi": 341, "appropri": [341, 351, 363, 371], "fair": 341, "action": 341, "edit": 341, "reject": 341, "wiki": 341, "align": [341, 362, 364, 372], "ban": 341, "temporarili": 341, "perman": 341, "threaten": 341, "offens": 341, "harm": [341, 372], "offici": 341, "mail": 341, "post": [341, 353, 376], "via": [341, 363, 366, 373], "social": 341, "media": 341, "act": [341, 367], "appoint": 341, "onlin": [341, 344, 369], "offlin": [341, 366, 372, 383], "event": 341, "further": [341, 348, 354, 367], "abus": 341, "report": [341, 342, 344], "contact": [341, 384], "complaint": 341, "review": [341, 342], "investig": [341, 372], "circumst": 341, "team": 341, "oblig": 341, "confidenti": 341, "regard": 341, "incid": 341, "polici": [341, 388], "good": [341, 365, 366], "faith": 341, "temporari": [341, 370], "repercuss": 341, "leadership": 341, "faq": 341, "page": [341, 342, 344, 348], "send": 342, "flake8": 342, "autopep8": 342, "clean": 342, "bug": [342, 344], "jira": 342, "ticket": 342, "xxx": [342, 344], "risk": 342, "pr": [342, 376], "reproduc": 342, "submit": [342, 344], "intend": 342, "safe": 342, "collabor": 342, "adher": 342, "tool": [343, 344, 346, 353, 361, 376], "integr": [343, 392], "lab": 343, "pip": [343, 344, 349, 357], "clone": [343, 344, 349, 350, 351], "cd": [343, 344, 349, 350, 351, 357, 361, 373, 376], "submodul": [343, 344, 349, 350, 352], "recurs": [343, 344, 349, 350, 352, 359], "dev": 343, "data_fil": 343, "delimit": [343, 376], "asserttru": 343, "len": [343, 351, 352, 359, 370], "column": [343, 362, 367, 369, 372, 382], "conduct": 343, "deploy": [343, 344, 348, 354], "cuda": 343, "ocraug": 343, "spellingaug": 343, "contextualwordembsforsentenceaug": 343, "xl": 343, "xlnet": [343, 346], "Not": [343, 367], "enough": [343, 368, 383], "rescu": 343, "natur": [343, 344, 346, 369], "sst": [343, 344, 346, 348, 381], "txt": [343, 344, 349, 352, 354, 357, 373], "w": [343, 353, 354, 362, 365, 371], "fw": 343, "clm": [343, 346], "train_fil": 343, "validation_fil": 343, "model_dir": 343, "python3": [343, 350], "run_clm": 343, "do_train": 343, "do_ev": 343, "overwrite_output_dir": 343, "secondli": 343, "training_set": 343, "line": [343, 351, 354, 362, 369, 370, 372, 377], "repetit": 343, "penalti": 343, "platform": [344, 375, 383], "particularli": 344, "gen": [344, 364], "imag": [344, 346, 356, 359, 366, 372], "sentiment": 344, "analysi": 344, "becom": [344, 355, 372], "wide": [344, 345, 364, 365, 383], "art": 344, "popular": 344, "ai": [344, 352], "visit": [344, 360, 374], "skylak": 344, "cascad": [344, 349], "lake": [344, 349], "ic": 344, "cooper": [344, 368], "seri": [344, 363, 366, 376], "hbm": 344, "develop": [344, 358], "easi": [344, 354, 356], "rich": 344, "demonstr": [344, 346, 348, 370, 372], "extrem": [344, 348], "significantli": [344, 369, 371], "cento": [344, 349], "ubuntu": [344, 349, 360, 374], "04": [344, 346, 349, 360, 374], "window": [344, 350], "r": [344, 349, 357, 360, 374, 383], "succeed": 344, "grep": 344, "matrix": [344, 348, 362, 365, 366, 367, 369, 370, 371, 372, 376, 382, 386], "23": [344, 366, 374], "load_metr": 344, "np": 344, "automodelforsequenceclassif": [344, 348], "evalpredict": 344, "english": [344, 346, 348, 381], "lambda": 344, "label2id": [344, 348], "id2label": [344, 348], "neg": [344, 348, 376], "pred": 344, "argmax": [344, 348], "label_id": 344, "q_config": [344, 348, 383], "eval_accuraci": [344, 345, 348, 382], "tmp_trainer": 344, "enable_executor": [344, 347], "neural_engin": [344, 348, 350, 351, 352, 353, 354, 356, 359, 361, 376], "set_log_fil": 344, "load_graph": 344, "dummydataload": 344, "compute_perform": 344, "glog_minloglevel": [344, 352, 357], "input_model": [344, 353, 356, 357], "warm_up": 344, "p50": 344, "50": [344, 373], "p90": 344, "90": [344, 346, 353, 360], "p99": 344, "99": [344, 346, 374], "sec": [344, 360], "workflow": [344, 345, 354, 356, 370], "tutori": [344, 352], "relev": 344, "resourc": [344, 345, 365], "catalog": 344, "brand": [344, 378], "claim": [344, 378], "properti": [344, 378], "trademark": 344, "larg": [345, 346, 359, 360, 362, 365, 368, 369, 370, 376], "signific": 345, "expens": 345, "deploi": [345, 392], "power": [345, 346], "mobil": 345, "shown": [345, 354, 367, 371, 372], "produc": [345, 372], "instruct": [345, 355, 363, 366, 368, 371, 372, 373, 376, 383], "besid": [345, 364], "often": 345, "patient": 345, "compact": 345, "agnost": 345, "summar": [345, 346], "usual": [345, 355, 362, 372, 383], "1x1": [345, 354], "d_conf": [345, 348], "tune_metr": [345, 382], "metric_": 345, "classifi": 345, "distillation_conf": 345, "distilled_model": 345, "intermediatelayersloss": 345, "meanwhil": [346, 362], "posttrainingdynam": [346, 347, 383], "wikitext": 346, "10004": [346, 347], "xsum": 346, "cnn": 346, "cnn_dailymail": 346, "dm": 346, "lambdalab": 346, "sd": 346, "pokemon": 346, "mlm": 346, "plm": 346, "eleutherai": 346, "neo": 346, "125m": 346, "sshleifer": 346, "wip": [346, 366], "star": 346, "ehdwns1516": 346, "uncased_swag": 346, "swag": 346, "squad": 346, "valhalla": 346, "longform": 346, "4096": [346, 374], "squadv1": 346, "lvwerra": 346, "pegasu": 346, "samsum": 346, "textattack": [346, 356], "mrpc": [346, 356, 357], "echarlaix": 346, "acc91": 346, "d37": 346, "hybrid": 346, "elast": 346, "conll03": 346, "conll2003": 346, "small": [346, 354, 368, 370], "translat": 346, "wmt16": 346, "helsinki": 346, "opu": 346, "mt": [346, 375], "en": 346, "ro": 346, "quantizationawaretrain": [346, 347], "maskinun": 346, "distilgpt2": 346, "rocketknight1": 346, "dslim": 346, "ner": 346, "mb": 346, "f1": [346, 379], "gflop": [346, 374, 377], "speedup": 346, "compar": [346, 362, 365, 376, 383], "415": [346, 360], "47": [346, 360, 374], "88": [346, 360, 373, 374], "58": [346, 374], "56": [346, 373, 374], "35": [346, 360, 374], "1x": 346, "la": [346, 365], "minilmv2": 346, "115": 346, "89": [346, 374], "28": [346, 360, 366, 374], "76": [346, 373, 374], "33x": 346, "269": 346, "253": 346, "252": [346, 373], "202": 346, "104": 346, "34": [346, 374], "87": [346, 374], "11": [346, 349, 357, 366, 374], "44": [346, 353, 360, 373, 374], "49": [346, 359, 360, 374], "94x": 346, "84": [346, 374], "85": [346, 360, 374], "21x": 346, "315": 346, "251": [346, 374], "242": [346, 360, 374], "159": [346, 373], "142": [346, 374], "33": [346, 374], "86": [346, 374], "68": [346, 373, 374], "41": [346, 360, 374], "55": [346, 373, 374], "82x": 346, "amount": [346, 365], "torchprofil": 346, "platinum": [346, 360, 374], "8280": 346, "unstructur": [346, 382], "nbsp": [346, 360, 374], "qnli": 346, "qqp": 346, "mnli": 346, "v1": 346, "tinybert_general_4l_312d": 346, "distilroberta": 346, "cola": 346, "krishna2020": 346, "googl": 346, "wikipedia": 346, "prajjwal1": 346, "approch": 346, "pruneofa": 346, "patternlock": [346, 382], "bhadresh": 346, "savani": 346, "emot": 346, "fac": 346, "mini": [346, 353, 357, 360], "gchhablani": 346, "philschmid": 346, "l6": 346, "h384": 346, "moshew": [346, 357], "80": [346, 353, 360, 374], "1x4": [346, 372], "desigh": 347, "32": [347, 352, 360, 366, 367, 369, 370, 371, 372, 373, 374, 376], "bit": [347, 348, 362, 363, 369, 372, 383], "bfloat": 347, "fetch": [347, 362, 365], "flag": 347, "enable_bf16": 347, "bfloat16": 347, "qlinear": [347, 356], "u8s8": 347, "u8u8": 347, "highli": 347, "suggest": [347, 363], "quick": [348, 351], "p_conf": [348, 382], "reduct": [348, 367, 370], "accommod": 348, "budget": 348, "tradeoff": [348, 366], "dynamic_length_config": 348, "aim": [348, 351, 353, 355], "opportun": 348, "hw": 348, "sw": 348, "satisfi": [349, 359, 368], "success": 349, "recommend": [349, 351, 354, 357, 359, 369, 373], "protobuf": [349, 357], "nightli": 349, "conda": [349, 357], "visual": 349, "studio": 349, "compat": 349, "icelak": 349, "futur": [349, 356, 363, 364, 373], "ipex": [349, 383], "13": [349, 360, 366, 374], "linux": 350, "gcc": 350, "cmake": [350, 352, 361, 373, 376], "repo_path": 350, "mkdir": [350, 352, 361, 373, 376], "dpython_execut": 350, "dne_with_sparselib": [350, 376], "neural_engine_bin": 350, "neural_engine_pi": [350, 354], "cpython": 350, "37m": 350, "x86_64": 350, "gnu": 350, "libkernellib": 350, "libneural_engin": 350, "pure": [350, 364], "certain": [351, 359], "simplifi": [351, 355], "attach": [351, 359], "distilbert_bas": 351, "assum": [351, 359, 365], "command": [351, 352, 356, 377], "repo": [351, 376], "instal": [351, 388], "These": [351, 355, 359, 365, 371], "roughli": [351, 368], "divid": [351, 359, 362, 367, 368, 371, 377], "categori": [351, 353], "dst_shape": [351, 352, 358], "father": 351, "keep_dim": 351, "ax": [351, 370], "come": 351, "rewrit": 351, "_attr": 351, "successfulli": [351, 359], "forget": [351, 355, 358], "reinstal": 351, "enter": 351, "you_work_dir": 351, "noth": [351, 359], "wrong": [351, 359], "anoth": [351, 355, 373], "correctli": 351, "distil_bert_bas": 351, "pattern_mapping_config": 351, "div": [351, 355], "even": [351, 362], "delv": 351, "recogn": [351, 392], "put": [351, 355], "namedtupl": 351, "__call__": 351, "retriev": 351, "actual": [351, 352, 369], "equival": [351, 372], "supported_pattern": 351, "influenc": [351, 355], "arbitrari": 351, "pattern_dict": 351, "new_node_nam": 351, "ret_old_nod": 351, "talk": 351, "denomin": 351, "numer": [351, 383], "stabil": 351, "_set_attr": 351, "ln_node_idx": 351, "meet": [351, 366, 368, 372], "finish": [351, 355, 357], "yourself": [351, 359], "multi": [352, 353, 354], "seq": [352, 370], "bert_model": 352, "30522": 352, "1024": [352, 353, 354, 374, 376], "125018112": 352, "slightli": 352, "activ": [352, 356, 357, 362, 366, 367, 368, 371, 376, 383], "throught": 352, "numactl": 352, "bind": 352, "omp_num_thread": 352, "session": 352, "close": 352, "again": [352, 369], "nerual": 352, "cc": 352, "cmakelist": 352, "reus": [352, 368], "engine_integr": 352, "innersourc": 352, "xtransform": 352, "submoudl": 352, "cp": 352, "nlp_executor": 352, "neural_engine_exampl": 352, "ne": 352, "root": 352, "ne_root": 352, "project_source_dir": 352, "link": [352, 358, 382], "lib": 352, "add_execut": 352, "target_include_directori": 352, "boost_inc_dir": 352, "target_link_librari": 352, "cmake_thread_libs_init": 352, "gflag": 352, "analyz": 353, "let": [353, 358, 365, 366], "readm": [353, 356], "run_executor": [353, 357], "model_and_token": [353, 356, 357], "Of": [353, 359, 365], "cours": [353, 359, 365], "proflil": 353, "latanc": 353, "perf": [353, 372, 376, 377], "perfrom": 353, "chrome": 353, "tell": [353, 355, 363, 364], "inst": 353, "pref": 353, "semi": 353, "70": [353, 360], "256x256": [353, 376], "settabl": 353, "256x1024": 353, "1024x256": 353, "gelu_tanh": [353, 358], "add_37": 353, "116": [353, 374], "641": 353, "00": 353, "075": 353, "0375": 353, "comparison": [353, 372], "185": 353, "801": 353, "693": 353, "366": 353, "content": 353, "part1": [353, 358], "modif": 353, "xlsx": 353, "titl": [353, 378], "model_infer": 353, "friendli": [353, 368, 369], "000": 353, "wall": 353, "durat": 353, "17": [353, 360, 366, 374], "138": 353, "iteration4": 353, "726": 353, "phrase": 353, "0m": 353, "perm": [353, 370], "add_284": 353, "028": [353, 374], "044": 353, "reshape_tim": 353, "004m": 353, "forward_tim": 353, "044m": 353, "input_tensor_nam": 353, "matmul_357": 353, "matmul_358": 353, "matmul_346": 353, "input_typ": 353, "f32": [353, 358], "output_tensor_nam": 353, "append_op": 353, "src1_perm": 353, "try": [354, 383], "pictur": [354, 362, 375], "bring": [354, 367, 371, 372], "merg": [354, 359], "off": 354, "model_path": 354, "int8_model_path": 354, "shape_0": 354, "shape_1": 354, "shape_2": 354, "enlarg": 354, "subsequ": [354, 368, 371], "remark": 354, "micro": [354, 362, 367, 372], "oc": [354, 376], "mk": 354, "kn": 354, "nhwc": 354, "nxhxw": 354, "h": 354, "nk": 354, "km": 354, "mmkmb": 354, "mmxmb": 354, "fulfil": 354, "omp": 354, "higher": [354, 370, 372, 376, 383], "unrol": [354, 365, 367], "know": [354, 366], "disk": [354, 356], "dp": 354, "enable_op_tun": 354, "execution_opt": 354, "engine_dispatch_t": 354, "workspac": 354, "tabl": [354, 364, 372], "row": [354, 365, 366, 368, 372, 382], "rest": [354, 355, 359, 370, 372], "hash": [354, 363], "kernel_config": [354, 376], "kernel_nam": [354, 376], "3025159985633461085": 354, "40": [354, 360], "14124194128933833351": 354, "thing": 354, "affect": [354, 368, 371, 377], "simul": [354, 372, 373], "warmup_it": 354, "num_iter": 354, "dispatch_table_file_root": 354, "file_root": 354, "script": [354, 356, 375], "prevent": 354, "imprecis": 354, "purpos": [355, 359, 363, 368], "realiz": 355, "suppli": [355, 359], "recognit": [355, 359], "embeddings_reshap": 355, "said": 355, "thought": 355, "st": 355, "nd": 355, "greater": [355, 379, 380], "sent": 355, "written": 355, "phenomenon": 355, "Its": 355, "situat": [355, 369], "nod": 355, "leav": [355, 370, 372, 376], "old_node_index": 355, "_get_pattern_info": 355, "_create_out_pattern": 355, "_replace_pattern": 355, "emitt": 356, "netron": 356, "bash": [356, 357], "prepare_model": [356, 357], "sh": [356, 357, 377], "task_nam": [356, 357], "ptq": 356, "ir_path": 356, "focu": [357, 370, 379], "nc_folder": 357, "deepengin": 357, "distilbert_base_uncased_mrpc": 357, "env": 357, "prepare_dataset": 357, "shell": 357, "tokenizer_dir": 357, "data_dir": 357, "geluoper": 358, "destructor": 358, "algorithm_": 358, "eng_": 358, "eltwise_forward": 358, "gelu_p_": 358, "src_m_": 358, "dst_m_": 358, "attrs_map": 358, "becuas": 358, "src_shape": 358, "dst_tensor_ptr": 358, "set_shap": 358, "stride": [358, 362], "src_stride": 358, "getstrid": 358, "dst_stride": 358, "desc": [358, 363, 364], "src_md": 358, "dst_md": 358, "part2": 358, "gelu_algorithm": 358, "gelu_erf": 358, "eltwise_gelu_erf": 358, "eltwise_gelu_tanh": 358, "gelu_d": 358, "prop_kind": 358, "primitive_desc": 358, "gelu_pd": 358, "unrefernc": 358, "manag": 358, "strictli": 358, "alia": 358, "src_data": 358, "dst_data": 358, "mutable_data": 358, "data_ptr": 358, "stream": 358, "set_data_handl": 358, "const_cast": 358, "reinterpret_cast": 358, "memory_args_": 358, "dnnl_arg_src": 358, "dnnl_arg_dst": 358, "unref": 358, "unref_tensor": 358, "especi": [358, 372], "int8_lut_optim": 358, "int8_lut_acc_test": 358, "set_dtyp": 358, "register_operator_class": 358, "rule": 359, "recruit": 359, "ln_pattern": 359, "grow": 359, "concis": 359, "intuit": [359, 368], "choos": 359, "prefer": [359, 370], "longer": 359, "ones": 359, "op_type1": 359, "op_type2": 359, "type1": 359, "type2": 359, "elig": 359, "a_node_name_1": 359, "b_node_name_1": 359, "c_node_name_1": 359, "a_node_name_2": 359, "b_node_name_2": 359, "c_node_name_2": 359, "a_node_name_n": 359, "b_node_name_n": 359, "c_node_name_n": 359, "bert_large_model_path": 359, "layer_0": 359, "layer_1": 359, "layer_2": 359, "afterward": 359, "volatil": 359, "incorrect": 359, "outcom": 359, "exactli": 359, "screen": 359, "occur": [359, 362, 369], "alreadi": 359, "moment": 359, "varianc": [359, 369], "batchnorm": 359, "mul_1": 359, "mul_2": 359, "add_1": 359, "07": [360, 374], "8375c": [360, 374], "aw": [360, 374], "c6i": [360, 374], "12xlarg": [360, 374], "vari": [360, 374], "factor": [360, 374], "www": [360, 374], "batchsiz": 360, "2652": 360, "36": [360, 374], "513": 360, "lt": [360, 374], "50m": 360, "2181": 360, "43": [360, 374], "628": 360, "1719": 360, "91": [360, 374], "75": [360, 374], "1487": [360, 374], "255": [360, 371, 383], "1220": 360, "39": [360, 374], "143": 360, "1304": 360, "46": [360, 374], "066": 360, "1102": [360, 374], "870": 360, "487": 360, "750": 360, "82": [360, 373, 374], "690": [360, 374], "188": 360, "910": [360, 374], "921": [360, 374], "729": 360, "71": [360, 373, 374], "619": 360, "38": [360, 373, 374], "821": [360, 374], "499": 360, "429": [360, 373], "936": [360, 374], "680": 360, "318": [360, 374], "557": 360, "262": 360, "467": 360, "589": 360, "405": 360, "339": 360, "473": 360, "119": [360, 374], "389": 360, "945": [360, 374], "360": 360, "274": 360, "843": 360, "259": [360, 373, 374], "442": 360, "241": 360, "364": 360, "016": [360, 374], "303": 360, "266": 360, "45": [360, 374], "05": [360, 374], "221": 360, "973": 360, "112": [360, 374], "349": 360, "938": [360, 374], "275": [360, 373], "614": 360, "217": 360, "37": [360, 374], "039": 360, "301": 360, "166": 360, "033": 360, "320": 360, "769": 360, "263": 360, "724": [360, 374], "207": 360, "819": [360, 374], "181": 360, "021": 360, "979": [360, 374], "74": [360, 374], "235": 360, "63": [360, 374], "091": 360, "51": [360, 374], "914": [360, 374], "698": [360, 374], "905": [360, 374], "8972": 360, "076": [360, 374], "20m": 360, "7192": 360, "19": [360, 366, 374], "906": 360, "5482": 360, "509": 360, "4808": 360, "952": 360, "3678": 360, "409": 360, "4750": 360, "975": [360, 374], "3647": 360, "867": 360, "2921": 360, "587": [360, 374], "2576": 360, "18": [360, 366, 374], "768": [360, 374], "2131": [360, 374], "913": [360, 374], "2804": 360, "096": 360, "2263": 360, "037": 360, "1938": 360, "756": [360, 374], "1581": 360, "15": [360, 366, 367, 372, 374], "1409": 360, "015": 360, "2116": 360, "113": 360, "1777": 360, "972": [360, 374], "1474": 360, "392": 360, "1278": 360, "1137": 360, "752": 360, "1594": 360, "124": 360, "1347": [360, 374], "1126": 360, "993": [360, 374], "258": 360, "890": [360, 374], "877": [360, 374], "1319": 360, "1086": 360, "931": [360, 374], "545": 360, "833": 360, "332": [360, 374], "747": [360, 374], "141": 360, "1106": [360, 374], "31": [360, 366, 367, 374], "924": 360, "446": 360, "719": 360, "633": 360, "501": 360, "816": 360, "961": 360, "549": 360, "807": 360, "868": [360, 374], "701": [360, 374], "117": 360, "613": 360, "618": 360, "515": 360, "75384": 360, "989": 360, "1m": 360, "55628": 360, "917": 360, "49120": 360, "957": [360, 374], "41598": 360, "39218": 360, "31211": 360, "788": [360, 374], "28399": 360, "848": 360, "24910": 360, "966": 360, "20505": 360, "18575": 360, "865": 360, "25485": 360, "987": 360, "17468": 360, "16771": 360, "971": [360, 374], "16004": 360, "996": [360, 374], "13381": 360, "894": [360, 374], "13990": 360, "863": [360, 374], "13154": 360, "12535": 360, "12102": 360, "998": 360, "8426": [360, 374], "8736": 360, "8282": 360, "967": 360, "6659": 360, "898": [360, 374], "6477": 360, "6290": 360, "974": [360, 374], "8598": 360, "6449": 360, "935": [360, 374], "6263": [360, 374], "965": [360, 374], "6080": 360, "988": 360, "3684": 360, "817": [360, 374], "6246": 360, "978": 360, "6374": 360, "947": [360, 374], "6026": 360, "3300": [360, 374], "926": 360, "3226": 360, "6221": 360, "958": 360, "6322": 360, "6081": 360, "985": [360, 374], "3368": 360, "3264": 360, "distillbert": 360, "15460": 360, "296": 360, "10m": 360, "13129": 360, "363": 360, "11323": 360, "578": [360, 374], "10072": 360, "599": 360, "8689": 360, "7901": 360, "205": [360, 374], "6737": 360, "562": 360, "5440": 360, "904": [360, 374], "4920": 360, "786": [360, 374], "4460": 360, "053": 360, "5280": 360, "179": 360, "4339": 360, "244": [360, 373], "3634": [360, 374], "928": 360, "3255": 360, "211": [360, 374], "2928": 360, "197": [360, 374], "3681": 360, "527": [360, 374], "2965": [360, 374], "106": [360, 374], "2741": 360, "862": [360, 374], "2351": 360, "2150": 360, "282": 360, "2918": 360, "316": 360, "2505": [360, 374], "602": 360, "2010": [360, 374], "995": 360, "1872": 360, "609": [360, 374], "2409": 360, "983": 360, "1993": 360, "013": 360, "1671": [360, 374], "627": 360, "1484": 360, "131": 360, "1342": [360, 374], "1910": 360, "456": [360, 374], "1659": 360, "687": 360, "1293": 360, "245": [360, 374], "1230": 360, "798": 360, "1091": 360, "261": 360, "1627": 360, "908": 360, "1397": 360, "684": 360, "1130": 360, "1081": 360, "353": 360, "982": [360, 374], "187": [360, 373], "manufactur": [360, 374], "amazon": [360, 374], "ec2": [360, 374], "bio": [360, 374], "1021": [360, 374], "microcod": [360, 374], "0xd000331": [360, 374], "irq": [360, 374], "balanc": [360, 374], "xeonplatinum": 360, "90ghz": [360, 374], "9ghz": [360, 374], "5ghz": [360, 374], "thread": 360, "socket": [360, 374], "numa": [360, 374], "turbo": [360, 374], "frequencygovern": [360, 374], "workdir": 361, "dne_with_test": 361, "ON": [361, 376], "ut": [361, 364], "dne_with_sparselib_onli": [361, 376], "dne_with_sparselib_benchmark": [361, 376], "test_spmm_vnni_kernel": 361, "box": 361, "profl": [361, 373], "op_attr": [361, 363, 364, 370], "spmm_desc": 361, "spmm_kern": 361, "data0": 361, "data1": 361, "data2": 361, "data3": 361, "data4": 361, "vnni": [361, 362, 366, 370, 371, 374, 376, 383, 390], "amx": [361, 368, 371, 376, 390], "residu": 361, "avx512": [361, 362, 366, 383], "mha": [361, 390], "avx512f": [361, 370, 376, 390], "spmm": [362, 370, 376], "deeplearn": 362, "multipli": [362, 368, 372, 383], "adopt": [362, 367, 372], "modern": 362, "spatial": [362, 368], "program": [362, 378], "64byte": 362, "organ": 362, "associ": 362, "access": [362, 367, 368], "b1": 362, "b2": 362, "simd": [362, 363, 367], "evenli": 362, "discontinu": 362, "fulli": [362, 371, 372], "worst": 362, "veri": [362, 364, 365, 368], "miss": [362, 372], "frequent": 362, "destin": [362, 367, 370, 376], "l1": 362, "l2": [362, 368, 376], "perhap": 362, "mxk": [362, 376], "bxm": 362, "xk": 362, "bxkxm": 362, "2d": [362, 376], "respons": [362, 368, 369, 371], "frac": [362, 370], "dl": 363, "changeabl": 363, "operand": [363, 367], "horizont": 363, "overhead": [363, 369, 370, 371, 372], "move": 363, "binaryop_injector": 363, "postop": [363, 364, 376], "quit": 363, "eltwise_injector": [363, 364], "escap": [363, 364], "compute_vector": 363, "expos": [363, 364], "arithmet": 363, "brows": 363, "vpaddb": 363, "vaddp": 363, "unlik": 363, "ptr": [363, 364, 373], "static_addr": 363, "addr": 363, "binaryop_alg": 363, "per_channel_qu": 363, "per_channel_dequ": 363, "op_alg": [363, 364], "op_dt": 363, "alg": 363, "set_scal": 363, "set_zp": 363, "binary_injector_init": 363, "set_mask": 363, "reg64": [363, 364], "zmm": [363, 364, 367, 369, 372], "get_addr": 363, "broadcast": [363, 367, 372, 373, 376], "enable_mask": 363, "vector_comput": [363, 364], "bianryop": 363, "comput_vector": 363, "wrapper": 363, "jit_binary_injector": 363, "addr_typ": 363, "jit_gener": [363, 364], "opmask": [363, 364], "mov": [363, 373], "addr_ptr": 363, "zmm_src1": 363, "regexp": 363, "step1": [363, 364, 371], "binary_injector": 363, "step2": [363, 364, 371], "data_param": 363, "param_": [363, 364], "front": 363, "append_loop_len": 363, "zmm_byte_s": 363, "get_data_s": 363, "offset_exp": 363, "bianryop_attr_list": 363, "append_vec": 363, "binary_add": 363, "eltwis": 364, "tradit": 364, "obvious": [364, 365, 369], "useless": 364, "idea": [364, 372, 382], "xbyak": 364, "binari": [364, 371, 376, 390], "algo": 364, "aplha": 364, "sacl": 364, "postop_alg": 364, "int8_lut": 364, "postop_typ": 364, "mathemat": 364, "satur": 364, "round": [364, 383], "unus": 364, "\u03b1x": 364, "\u03b2": 364, "le": 364, "gt": 364, "eng_kind_": 364, "omp_get_max_thread": 364, "omp_get_num_proc": 364, "eltwise_injector_init": 364, "chian": 364, "escape_reg": 364, "escape_eras": 364, "eras": 364, "prepare_t": 364, "zmm_src": 364, "postop_idx": 364, "reg_idx": 364, "step0": 364, "jit_eltwiseop_t": 364, "assign_reg": 364, "eltwiseop_kd_t": 364, "op_desc_": 364, "params_": 364, "remain_task_mask": 364, "scratch_": 364, "r10": 364, "reg_src": 364, "addr_src": 364, "r15": [364, 373], "addr_dst": 364, "r14": [364, 373], "reg_param": 364, "rdi": [364, 373], "remain_element_num": 364, "rsi": 364, "getidx": 364, "alloc": [364, 365, 368], "rcx": 364, "rdx": 364, "rsp": 364, "step3": [364, 371], "preambl": 364, "load_param": 364, "vmovup": [364, 373], "postambl": 364, "fp32_gelu_attr": 364, "bf16_gelu_attr": 364, "push_back": 364, "gen_cas": 364, "data0_desc": 364, "postop_list": 364, "fp32_gelu": [364, 376], "fp32_exp": 364, "mask_mock1": 364, "reg64_mock1": 364, "zmm_mock1": 364, "fp32_exp_attr": 364, "data1_desc": 364, "bf16_gelu": 364, "bf16_exp": [364, 376], "bf16_exp_attr": 364, "dt1op1": 364, "dt2op2": 364, "hase": 364, "get_true_data": 364, "rf_data": 364, "your_kernel_log": 364, "apply_postop_list": 364, "unit_test_util": 364, "articl": [365, 383], "gpu": 365, "opencl": 365, "snippet": 365, "unintellig": 365, "understand": [365, 368], "__kernel": 365, "naive_gemm": 365, "__global": 365, "globalrow": 365, "get_global_id": 365, "globalcol": 365, "col": [365, 366, 369, 371], "over": [365, 367, 370], "acc": [365, 376, 377], "0f": 365, "mxn": [365, 371, 376], "2xk": 365, "redund": [365, 382], "asub": 365, "bsub": 365, "tile_gemm": 365, "get_local_id": 365, "get_group_id": 365, "__local": 365, "initialis": 365, "accumul": [365, 370, 372], "numtil": 365, "tiledrow": 365, "tiledcol": 365, "synchronis": 365, "barrier": 365, "clk_local_mem_f": 365, "full": [365, 378, 383], "white": 365, "figur": [365, 368, 369, 370, 372, 375], "half": [365, 371], "correspondingli": 365, "increas": 365, "workload": [365, 370], "localmemori": 365, "tight": 365, "ll": 365, "twice": [365, 371], "ping": 365, "pong": 365, "tidm": 365, "tidn": 365, "offsetm": 365, "offset": [365, 369, 370], "offsetn": 365, "areg": 365, "breg": 365, "wm": 365, "wn": 365, "lpta": 365, "tid": 365, "mod2": 365, "div2": 365, "tiledindex": 365, "indexa": 365, "indexb": 365, "veca": 365, "vecb": 365, "tt": 365, "pragma": 365, "tdpbf16p": 366, "16x32": 366, "32x16": 366, "FOR": [366, 367, 372], "TO": 366, "colsb": 366, "byte": [366, 372], "endfor": [366, 367, 372], "write_row_and_zero": 366, "zero_upper_row": 366, "zero_tileconfig_start": 366, "layout": [366, 369, 370, 371], "successor": 366, "1x16": [366, 372], "concaten": [366, 372, 376], "intrins": 366, "tileloadd": 366, "nonzero": 366, "vmovdqu32": 366, "consum": 366, "altern": [366, 372], "lot": 366, "disast": 366, "16x1": [366, 370], "greatli": [366, 371], "impact": 366, "fly": 366, "__m512i": 366, "_mm512_set_epi16": 366, "29": [366, 374], "27": [366, 374], "26": [366, 373, 374], "25": [366, 374, 376], "22": [366, 374], "21": [366, 374], "__m256i": 366, "lo": 366, "_mm256_loadu_epi": 366, "li": 366, "vec": 366, "_mm512_inserti32x8": 366, "_mm512_castsi256_si512": 366, "_mm512_permutexvar_epi16": 366, "_mm512_storeu_epi32": 366, "vfmadd": 367, "vfmadd231p": [367, 373], "degre": 367, "parallel": [367, 368, 369, 372, 376], "conting": 367, "bsc": 367, "variant": 367, "bsr": 367, "openmp": 367, "thu": [367, 383], "relief": 367, "bottleneck": [367, 369], "microkernel": 367, "peripher": 367, "implicit": 367, "technologi": 368, "among": [368, 371], "satisfactori": 368, "inevit": 368, "solv": [368, 369, 383], "facilit": [368, 371], "At": [368, 369, 371], "flexibl": 368, "divis": 368, "tdpbssd": 368, "tile_k": 368, "formula": 368, "max_tile_k": 368, "back": [368, 369, 370, 371], "extra": 368, "hope": 368, "large_wei_threshold": 368, "16xpad_n": 368, "buffer": [368, 369, 371], "tilestor": 368, "pseudo": 368, "tile_m": [368, 376], "16xn": 368, "dp_tile_n": 368, "k_dim_dp": 368, "write_tile_to_tmp_buf": 368, "dequantize_tile_on_tmp_buf": 368, "calculate_scale_on_tmp_buf": 368, "write_back_scal": 368, "quant_tile_n": 368, "quantize_on_tmp_buf": 368, "write_tile_to_dst": 368, "per_channel_dynamic_quant": 368, "s8s8bf16": 368, "desid": 368, "du": 368, "principl": 368, "possibl": 368, "premis": 368, "rate": [368, 369], "therebi": 368, "feel": [368, 376], "benefit": [368, 372, 383], "suitabl": 368, "chart": 368, "naiv": 369, "solut": [369, 372], "gap": 369, "layernrom": 369, "3d": [369, 390], "poor": 369, "fewer": 369, "wast": 369, "inconsist": 369, "scene": 369, "quarter": 369, "depict": 369, "protocol": 369, "bandwidth": [369, 371, 383], "gain": [369, 383], "brought": [369, 383], "majotr": 369, "layternorm": 369, "encapsul": 369, "ba": [369, 373, 376], "discret": 369, "append": [369, 376, 377], "overal": 369, "p2031": [370, 376], "2013": 370, "noperm": [370, 376], "p1302": [370, 376], "p2013": [370, 376], "equat": [370, 383], "dot": [370, 383], "rm": 370, "q": [370, 371], "v": [370, 371], "qk": 370, "textunderscor": 370, "nativ": 370, "sparelib": 370, "axis": 370, "conceptu": 370, "head_nun": 370, "perm2031": 370, "perm2013": 370, "perm1302": 370, "concept": [370, 372], "lh": 370, "float32": [370, 383], "illustr": 370, "inner": 370, "16x16": 370, "drawn": 370, "lighter": 370, "cell": [370, 372], "respectfulli": 370, "vnni_noperm_p2013_p1302": 370, "transpose_4b_8x8": 370, "legend": 370, "explan": 370, "contigu": 370, "ellipsi": 370, "thinner": 370, "border": 370, "bolder": 370, "color": [370, 372], "16x32x16": 370, "lead": [370, 372], "suboptim": 370, "piec": 370, "turn": 370, "abl": [370, 383], "boost": 370, "twofold": 370, "unifi": 370, "roll": 370, "logic": [371, 373], "worth": 371, "clear": 371, "fact": [371, 383], "With": [371, 383], "spr": 371, "latter": 371, "2nd": 371, "clx": 371, "4x16": [371, 372], "launch": 371, "prior": 371, "iteraion": 371, "polynomi": 371, "essenti": 371, "incom": 371, "far": 371, "four": 372, "adjac": 372, "unsign": [372, 376], "sign": [372, 383], "tmp1": 372, "zeroextend16": 372, "signextend16": 372, "tmp2": 372, "tmp3": 372, "tmp4": 372, "dword": [372, 373], "transposit": 372, "discuss": 372, "typic": 372, "sai": 372, "4x4": 372, "pick": 372, "mxkxn": 372, "problem": [372, 376], "densiti": 372, "fma": 372, "bubbl": 372, "16x4": 372, "highlight": 372, "4x": 372, "talent": 372, "smart": 372, "gui": [372, 373], "swizzl": 372, "workaround": 372, "unfortun": 372, "difficulti": 372, "bad": 372, "cost": 372, "2x1": 372, "conclus": 372, "against": 372, "brief": 373, "sparse_lib_verbos": 373, "sparselib_verbos": 373, "nthr": 373, "224": [373, 374], "exec": 373, "shape_256_256_128": 373, "4658": [373, 374], "56982": 373, "itt": 373, "dne_with_sparselib_vtun": 373, "opt": 373, "latest": [373, 384], "manual": 373, "dcmake_vtune_hom": 373, "sparse_lib_vtun": 373, "ssh": 373, "analys": 373, "verifi": 373, "sparse_lib_dump": 373, "xed64": 373, "click": 373, "xdi": 373, "push": 373, "53": [373, 374], "rbx": 373, "rbp": 373, "4154": 373, "r12": 373, "4155": 373, "r13": 373, "4156": 373, "4157": 373, "dataxf": 373, "bd00040000": 373, "ebp": 373, "0x400": 373, "4c8b3f": 373, "qword": 373, "4c8b7708": 373, "0x8": 373, "4c8b6f10": 373, "0x10": 373, "1a": 373, "avx512evex": 373, "62f17d48efc0": 373, "vpxord": 373, "zmm0": 373, "62f15d48efe4": 373, "zmm4": 373, "62513d48efc0": 373, "zmm8": 373, "2c": 373, "62511d48efe4": 373, "zmm12": 373, "62f17548efc9": 373, "zmm1": 373, "62f15548efe": 373, "zmm5": 373, "3e": 373, "62513548efc9": 373, "zmm9": 373, "62511548efe": 373, "zmm13": 373, "4a": 373, "62f16d48efd2": 373, "zmm2": 373, "62f14d48eff6": 373, "zmm6": 373, "62512d48efd2": 373, "zmm10": 373, "5c": 373, "62510d48eff6": 373, "zmm14": 373, "62": [373, 374], "62c17c481006": 373, "zmm16": 373, "zmmword": 373, "62c17c48104e01": 373, "zmm17": 373, "0x40": 373, "6f": 373, "62c17c48105602": 373, "zmm18": 373, "0x80": 373, "62427d48183f": 373, "vbroadcastss": 373, "zmm31": 373, "7c": 373, "vfma": 373, "62927d40b8c7": 373, "62927540b8cf": 373, "62926d40b8d7": 373, "8e": 373, "62427d48187f04": 373, "95": [373, 374], "62927d40b8e7": 373, "9b": 373, "62927540b8ef": 373, "a1": 373, "62926d40b8f7": 373, "a7": 373, "62427d48187f08": 373, "0x20": 373, "ae": 373, "62127d40b8c7": 373, "b4": 373, "62127540b8cf": 373, "62126d40b8d7": 373, "c0": 373, "62427d48187f0c": 373, "0x30": 373, "c7": 373, "62127d40b8e7": 373, "62127540b8ef": 373, "62126d40b8f7": 373, "d9": 373, "62c17c48104603": 373, "0xc0": 373, "e0": 373, "62c17c48104e04": 373, "0x100": 373, "e7": 373, "62c17c48105605": 373, "0x140": 373, "ee": 373, "62427d48187f01": 373, "0x4": 373, "f5": 373, "fb": 373, "101": 373, "107": 373, "62427d48187f05": 373, "0x14": 373, "10e": 373, "114": 373, "11a": 373, "62427d48187f09": 373, "0x24": 373, "12d": 373, "133": 373, "139": 373, "62427d48187f0d": 373, "0x34": 373, "140": 373, "146": 373, "14c": 373, "152": 373, "62c17c48104606": 373, "0x180": 373, "62c17c48104e07": 373, "0x1c0": 373, "62c17c48105608": 373, "0x200": 373, "167": [373, 374], "62427d48187f02": 373, "16e": 373, "174": 373, "17a": 373, "180": 373, "62427d48187f06": 373, "0x18": 373, "18d": 373, "193": 373, "199": 373, "62427d48187f0a": 373, "0x28": 373, "1a0": 373, "1a6": 373, "1ac": 373, "1b2": 373, "62427d48187f0e": 373, "0x38": 373, "1b9": 373, "1bf": 373, "1c5": 373, "1cb": 373, "62c17c48104609": 373, "0x240": 373, "1d2": 373, "62c17c48104e0a": 373, "0x280": 373, "1d9": 373, "62c17c4810560b": 373, "0x2c0": 373, "1e0": 373, "62427d48187f03": 373, "0xc": 373, "1e7": 373, "1ed": 373, "1f3": 373, "1f9": 373, "62427d48187f07": 373, "0x1c": 373, "200": 373, "206": 373, "20c": 373, "212": 373, "62427d48187f0b": 373, "0x2c": 373, "219": [373, 374], "21f": 373, "225": 373, "22b": 373, "62427d48187f0f": 373, "0x3c": 373, "232": [373, 374], "238": 373, "23e": 373, "62d17c48114500": 373, "24b": 373, "62d17c48116503": 373, "62517c48114506": 373, "62517c48116509": 373, "260": 373, "62d17c48114d01": 373, "267": 373, "62d17c48116d04": 373, "26e": 373, "62517c48114d07": 373, "62517c48116d0a": 373, "27c": 373, "62d17c48115502": 373, "283": 373, "62d17c48117505": 373, "28a": 373, "62517c48115508": 373, "291": 373, "62517c4811750b": 373, "298": [373, 374], "pop": 373, "415f": 373, "29a": 373, "415e": 373, "29c": 373, "415d": 373, "29e": 373, "415c": 373, "2a0": 373, "5d": 373, "2a1": 373, "5b": 373, "2a2": 373, "avx": 373, "c5f877": 373, "vzeroupp": 373, "2a5": 373, "xed3": 373, "stat": 373, "cycl": 373, "29220": 373, "236418": 373, "118": 373, "2003": 373, "54": [373, 374], "00348609": 374, "601": 374, "00310676": 374, "675": 374, "00261406": 374, "802": 374, "00216633": 374, "968": 374, "068": 374, "00164658": 374, "1273": 374, "0112255": 374, "284": 374, "00947462": 374, "885": 374, "377": 374, "00764146": 374, "1097": 374, "78": 374, "0058452": 374, "1435": 374, "00407149": 374, "2060": 374, "0127448": 374, "658": 374, "198": 374, "0111132": 374, "754": 374, "835": 374, "00940157": 374, "892": 374, "00760217": 374, "1103": 374, "0054935": 374, "1527": 374, "044202": 374, "759": 374, "0364227": 374, "0292454": 374, "1147": 374, "0223472": 374, "1501": 374, "0149058": 374, "2251": 374, "216338": 374, "620": 374, "408": 374, "179593": 374, "345": 374, "135054": 374, "806": 374, "0946983": 374, "1417": 374, "0609701": 374, "2201": 374, "190508": 374, "704": 374, "526": 374, "159566": 374, "841": 374, "130863": 374, "1025": 374, "103927": 374, "1291": 374, "0739962": 374, "1813": 374, "0250395": 374, "753": 374, "784": 374, "0210726": 374, "895": 374, "682": 374, "0170987": 374, "0130778": 374, "1443": 374, "00923343": 374, "2044": 374, "3072": 374, "112882": 374, "668": 374, "818": 374, "0879386": 374, "858": 374, "525": 374, "068835": 374, "1096": 374, "79": 374, "0487342": 374, "1549": 374, "0317559": 374, "2377": 374, "109308": 374, "679": 374, "0922471": 374, "805": 374, "638": 374, "0759107": 374, "0558945": 374, "1329": 374, "61": 374, "0358752": 374, "2071": 374, "57": 374, "00565044": 374, "742": 374, "297": 374, "00503604": 374, "832": 374, "00447544": 374, "937": 374, "182": 374, "00368479": 374, "1138": 374, "00270954": 374, "1547": 374, "0183481": 374, "386": 374, "0154121": 374, "1088": 374, "0125696": 374, "1334": 374, "00959948": 374, "1747": 374, "72": 374, "00677631": 374, "2475": 374, "0206321": 374, "813": 374, "162": 374, "0184267": 374, "483": 374, "0164699": 374, "1018": 374, "66": 374, "0135801": 374, "1235": 374, "010552": 374, "1589": 374, "0721208": 374, "930": 374, "506": 374, "059613": 374, "1125": 374, "0483781": 374, "1387": 374, "0366748": 374, "1829": 374, "83": 374, "0248571": 374, "2699": 374, "376539": 374, "712": 374, "902": 374, "31929": 374, "840": 374, "727": 374, "261265": 374, "1027": 374, "193579": 374, "1386": 374, "118429": 374, "2266": 374, "309195": 374, "177": 374, "256619": 374, "1046": 374, "213454": 374, "1257": 374, "165192": 374, "1624": 374, "118402": 374, "2267": 374, "0402931": 374, "855": 374, "0341169": 374, "0275282": 374, "1371": 374, "0211298": 374, "1786": 374, "0150693": 374, "218765": 374, "215": 374, "180921": 374, "834": 374, "592": 374, "142778": 374, "1057": 374, "097692": 374, "1545": 374, "0620034": 374, "2435": 374, "174101": 374, "853": 374, "73": 374, "148369": 374, "1001": 374, "123554": 374, "1203": 374, "0923655": 374, "1609": 374, "0591283": 374, "2513": 374, "0074474": 374, "844": 374, "00657187": 374, "00570175": 374, "00483104": 374, "1302": 374, "00367406": 374, "1712": 374, "0247063": 374, "0207462": 374, "1213": 374, "03": 374, "0169214": 374, "0129936": 374, "1936": 374, "0090376": 374, "2784": 374, "0275881": 374, "912": 374, "0240415": 374, "77": 374, "0207876": 374, "1210": 374, "0177873": 374, "1414": 374, "0140129": 374, "1795": 374, "0994565": 374, "1012": 374, "0819725": 374, "1228": 374, "0660571": 374, "1523": 374, "0497077": 374, "2025": 374, "0341912": 374, "2944": 374, "500698": 374, "804": 374, "184": 374, "420619": 374, "287": 374, "337529": 374, "1192": 374, "94": 374, "251221": 374, "1602": 374, "158668": 374, "2537": 374, "412912": 374, "155": 374, "346369": 374, "1162": 374, "2831": 374, "1422": 374, "220585": 374, "1825": 374, "156168": 374, "2578": 374, "0538395": 374, "1051": 374, "0455066": 374, "1244": 374, "036978": 374, "1531": 374, "028483": 374, "1987": 374, "0200457": 374, "2824": 374, "283445": 374, "799": 374, "069": 374, "236101": 374, "959": 374, "302": 374, "188745": 374, "1199": 374, "135532": 374, "0845544": 374, "2678": 374, "227976": 374, "977": 374, "19463": 374, "1145": 374, "161251": 374, "1382": 374, "65": 374, "123585": 374, "1804": 374, "0840322": 374, "2653": 374, "00940534": 374, "891": 374, "00821985": 374, "1020": 374, "00701343": 374, "1196": 374, "08": 374, "00579899": 374, "1446": 374, "00464705": 374, "1805": 374, "0336342": 374, "997": 374, "629": 374, "0276086": 374, "1215": 374, "0224431": 374, "1495": 374, "09": 374, "0170807": 374, "1964": 374, "0117535": 374, "2854": 374, "0358603": 374, "0310083": 374, "1082": 374, "0260486": 374, "1288": 374, "0215163": 374, "1559": 374, "0170105": 374, "1972": 374, "133295": 374, "1006": 374, "92": 374, "111186": 374, "1207": 374, "0881114": 374, "0665519": 374, "2016": 374, "0454416": 374, "2953": 374, "611718": 374, "645": 374, "533329": 374, "430288": 374, "1247": 374, "307141": 374, "198987": 374, "2698": 374, "02": [374, 379], "556249": 374, "163": 374, "462737": 374, "1160": 374, "37537": 374, "1430": 374, "28321": 374, "1895": 374, "203901": 374, "2633": 374, "0716356": 374, "1053": 374, "0603517": 374, "1250": 374, "0490096": 374, "1540": 374, "0375683": 374, "2009": 374, "0267483": 374, "2822": 374, "3572": 374, "845": 374, "437": 374, "299561": 374, "1008": 374, "228752": 374, "1320": 374, "165648": 374, "1823": 374, "105656": 374, "2858": 374, "298907": 374, "994": 374, "529": 374, "255598": 374, "1163": 374, "20824": 374, "1427": 374, "159911": 374, "1858": 374, "111211": 374, "2673": 374, "0152997": 374, "685": 374, "358": 374, "0131446": 374, "797": 374, "0109669": 374, "956": 374, "132": 374, "00921101": 374, "00755406": 374, "1388": 374, "0553082": 374, "758": 374, "351": 374, "0458481": 374, "826": 374, "0367258": 374, "1142": 374, "06": 374, "027535": 374, "018464": 374, "2271": 374, "0597882": 374, "0510217": 374, "822": 374, "062": 374, "0421644": 374, "0333436": 374, "0296385": 374, "1415": 374, "22241": 374, "337": 374, "18324": 374, "915": 374, "145322": 374, "1154": 374, "1083": 374, "0728843": 374, "2301": 374, "11793": 374, "600": 374, "929398": 374, "722": 374, "720963": 374, "823": 374, "510039": 374, "1315": 374, "336519": 374, "1994": 374, "909941": 374, "737": 374, "508": 374, "753487": 374, "644": 374, "606477": 374, "459915": 374, "1459": 374, "303455": 374, "2211": 374, "123429": 374, "764": 374, "586": 374, "103035": 374, "923": 374, "0825026": 374, "1143": 374, "0625579": 374, "1508": 374, "0426942": 374, "2210": 374, "60813": 374, "734": 374, "483053": 374, "781": 374, "462": 374, "357348": 374, "1056": 374, "256715": 374, "1470": 374, "169119": 374, "2232": 374, "503341": 374, "738": 374, "42134": 374, "881": 374, "342843": 374, "255199": 374, "1456": 374, "174091": 374, "2134": 374, "0142667": 374, "0123966": 374, "1015": 374, "0105865": 374, "1188": 374, "00860835": 374, "1461": 374, "00655363": 374, "1919": 374, "0532543": 374, "0447548": 374, "1124": 374, "0348388": 374, "1444": 374, "0266886": 374, "1885": 374, "0177431": 374, "2836": 374, "69": 374, "0549107": 374, "916": 374, "608": 374, "0475549": 374, "1058": 374, "0401657": 374, "1253": 374, "0326952": 374, "1539": 374, "025032": 374, "220947": 374, "911": 374, "178324": 374, "1128": 374, "137361": 374, "1465": 374, "103126": 374, "1952": 374, "0701429": 374, "2870": 374, "06648": 374, "755": 374, "893959": 374, "900": 374, "831": 374, "718893": 374, "1120": 374, "537405": 374, "1498": 374, "280686": 374, "2869": 374, "902588": 374, "730678": 374, "582871": 374, "1381": 374, "444133": 374, "298489": 374, "2697": 374, "581": 374, "0955952": 374, "1184": 374, "078109": 374, "1449": 374, "0596185": 374, "1899": 374, "0414047": 374, "2735": 374, "596568": 374, "497127": 374, "396634": 374, "286973": 374, "1578": 374, "167473": 374, "2704": 374, "472466": 374, "943": 374, "787": 374, "391055": 374, "1140": 374, "319865": 374, "1394": 374, "247491": 374, "1801": 374, "169874": 374, "2624": 374, "93": 374, "0213786": 374, "686": 374, "67": 374, "018228": 374, "0152068": 374, "0120525": 374, "1218": 374, "0103961": 374, "1412": 374, "0771592": 374, "761": 374, "0642402": 374, "074": 374, "0514668": 374, "0387886": 374, "1513": 374, "0256871": 374, "2285": 374, "0836219": 374, "702": 374, "0712915": 374, "664": 374, "0589148": 374, "697": 374, "0484067": 374, "0411331": 374, "311691": 374, "569": 374, "256635": 374, "204973": 374, "153086": 374, "1534": 374, "101206": 374, "2320": 374, "59625": 374, "588": 374, "583": 374, "33246": 374, "705": 374, "03849": 374, "703": 374, "738939": 374, "1271": 374, "480308": 374, "1956": 374, "26056": 374, "745": 374, "324": 374, "04874": 374, "842936": 374, "1114": 374, "59": 374, "635554": 374, "1478": 374, "42145": 374, "2229": 374, "174215": 374, "375": 374, "145836": 374, "116701": 374, "1132": 374, "0876727": 374, "1506": 374, "0595001": 374, "2220": 374, "883258": 374, "598": 374, "333": 374, "711146": 374, "743": 374, "543634": 374, "129": 374, "402406": 374, "1313": 374, "266945": 374, "1979": 374, "70404": 374, "592043": 374, "878": 374, "695": 374, "475444": 374, "1094": 374, "358932": 374, "240739": 374, "2160": 374, "0184384": 374, "909": 374, "907": 374, "0158714": 374, "013504": 374, "1242": 374, "0109927": 374, "1526": 374, "00826017": 374, "2031": 374, "061272": 374, "1095": 374, "0609618": 374, "1100": 374, "0467291": 374, "1436": 374, "0340362": 374, "1971": 374, "0231282": 374, "2901": 374, "0717247": 374, "0616923": 374, "1087": 374, "0521595": 374, "1286": 374, "0423267": 374, "1585": 374, "0321109": 374, "2089": 374, "286461": 374, "242512": 374, "181783": 374, "1476": 374, "139021": 374, "1930": 374, "0870121": 374, "3085": 374, "36322": 374, "652": 374, "08991": 374, "880185": 374, "1219": 374, "694533": 374, "366328": 374, "2931": 374, "15748": 374, "927": 374, "937824": 374, "1144": 374, "745357": 374, "1440": 374, "558061": 374, "1924": 374, "391387": 374, "2743": 374, "157349": 374, "616": 374, "129806": 374, "103083": 374, "1464": 374, "0784417": 374, "053639": 374, "2815": 374, "767569": 374, "874": 374, "641585": 374, "941": 374, "387": 374, "488558": 374, "1236": 374, "355651": 374, "1698": 374, "230945": 374, "2615": 374, "611059": 374, "514108": 374, "1156": 374, "416571": 374, "318094": 374, "1869": 374, "225023": 374, "2642": 374, "0375093": 374, "564": 374, "0317602": 374, "0261888": 374, "1281": 374, "0211151": 374, "0158951": 374, "2110": 374, "141333": 374, "949": 374, "133647": 374, "1004": 374, "0999998": 374, "0710327": 374, "1889": 374, "52": 374, "0429916": 374, "3121": 374, "147474": 374, "125344": 374, "1070": 374, "104294": 374, "0849766": 374, "1579": 374, "0624729": 374, "2148": 374, "701639": 374, "765": 374, "534615": 374, "359791": 374, "1492": 374, "2612": 374, "2055": 374, "183193": 374, "2930": 374, "92067": 374, "735": 374, "271": 374, "4402": 374, "880": 374, "046": 374, "69186": 374, "1269": 374, "17436": 374, "1828": 374, "880179": 374, "2439": 374, "62123": 374, "264": 374, "14905": 374, "999": 374, "64253": 374, "1307": 374, "1413": 374, "1881": 374, "771439": 374, "2783": 374, "369429": 374, "451": 374, "288236": 374, "1047": 374, "209526": 374, "1441": 374, "148115": 374, "2038": 374, "106089": 374, "2846": 374, "53204": 374, "465": 374, "28593": 374, "939": 374, "368": 374, "0852": 374, "1113": 374, "685382": 374, "1762": 374, "408357": 374, "2958": 374, "4521": 374, "13466": 374, "853916": 374, "1392": 374, "642672": 374, "1850": 374, "446442": 374, "2663": 374, "0574189": 374, "876": 374, "0460811": 374, "1092": 374, "0389357": 374, "1292": 374, "031279": 374, "0234498": 374, "2146": 374, "204966": 374, "17364": 374, "1159": 374, "141097": 374, "1426": 374, "105192": 374, "1913": 374, "0677766": 374, "2970": 374, "21269": 374, "946": 374, "573": 374, "191564": 374, "1050": 374, "156368": 374, "1287": 374, "1565": 374, "0933565": 374, "2156": 374, "84983": 374, "789777": 374, "1019": 374, "598168": 374, "1346": 374, "433492": 374, "1857": 374, "269504": 374, "2988": 374, "74845": 374, "859": 374, "348": 374, "96945": 374, "811": 374, "505": 374, "77082": 374, "76407": 374, "1826": 374, "09719": 374, "2935": 374, "73162": 374, "00241": 374, "1072": 374, "39024": 374, "77317": 374, "1816": 374, "19536": 374, "2694": 374, "517278": 374, "875": 374, "708": 374, "382208": 374, "1185": 374, "317837": 374, "1425": 374, "233231": 374, "1942": 374, "152925": 374, "2962": 374, "44309": 374, "741": 374, "62409": 374, "1115": 374, "64963": 374, "1098": 374, "03923": 374, "1743": 374, "625089": 374, "2898": 374, "07006": 374, "861": 374, "632": 374, "64247": 374, "1085": 374, "33386": 374, "1337": 374, "994935": 374, "1792": 374, "68383": 374, "2608": 374, "0713578": 374, "940": 374, "0612457": 374, "0516788": 374, "1298": 374, "0414834": 374, "1617": 374, "0309886": 374, "2165": 374, "282241": 374, "951": 374, "085": 374, "238855": 374, "1123": 374, "193713": 374, "1385": 374, "146781": 374, "81": 374, "0938959": 374, "286141": 374, "122": 374, "257138": 374, "1043": 374, "214208": 374, "167575": 374, "1601": 374, "124072": 374, "2163": 374, "21431": 374, "884": 374, "237": 374, "955251": 374, "775294": 374, "1384": 374, "63282": 374, "1696": 374, "37333": 374, "2876": 374, "87335": 374, "317": 374, "65059": 374, "1176": 374, "94733": 374, "1457": 374, "62241": 374, "1637": 374, "47752": 374, "2906": 374, "75786": 374, "83024": 374, "889": 374, "87429": 374, "1108": 374, "87685": 374, "75328": 374, "2449": 374, "718776": 374, "289": 374, "561317": 374, "1076": 374, "429166": 374, "1407": 374, "317204": 374, "1904": 374, "208555": 374, "2896": 374, "94057": 374, "30458": 374, "1048": 374, "6702": 374, "25799": 374, "1920": 374, "84121": 374, "2871": 374, "34423": 374, "711": 374, "77444": 374, "857": 374, "10049": 374, "52509": 374, "926038": 374, "2568": 374, "00203027": 374, "1032": 374, "00198061": 374, "00179382": 374, "1169": 374, "00163713": 374, "1280": [374, 376], "00171023": 374, "1226": 374, "00395783": 374, "2119": 374, "00340452": 374, "2463": 374, "00308582": 374, "2718": 374, "00292684": 374, "2866": 374, "00217889": 374, "3849": 374, "00437142": 374, "1918": 374, "00418212": 374, "2005": 374, "00344785": 374, "2433": 374, "00291005": 374, "2882": 374, "00293671": 374, "2856": 374, "0120946": 374, "2774": 374, "0103377": 374, "3245": 374, "00850778": 374, "3943": 374, "00659512": 374, "5087": 374, "00484669": 374, "6923": 374, "0524509": 374, "2558": 374, "0428737": 374, "3130": 374, "0323642": 374, "4147": 374, "0231199": 374, "5805": 374, "0152199": 374, "8818": 374, "0451228": 374, "2974": 374, "0373823": 374, "3590": 374, "0302746": 374, "4433": 374, "023182": 374, "5789": 374, "0161696": 374, "8300": 374, "00731429": 374, "2580": 374, "00633179": 374, "2980": 374, "00535855": 374, "3522": 374, "00449335": 374, "4200": 374, "00341811": 374, "5521": 374, "0270028": 374, "2795": 374, "02197": 374, "3436": 374, "0177477": 374, "4253": 374, "0131335": 374, "5748": 374, "00897444": 374, "8412": 374, "0257188": 374, "2889": 374, "0218969": 374, "3393": 374, "0180933": 374, "4107": 374, "013742": 374, "5408": 374, "00992419": 374, "7488": 374, "00289114": 374, "1450": 374, "00245821": 374, "00252331": 374, "1662": 374, "00226557": 374, "1851": 374, "00180316": 374, "2326": 374, "00578904": 374, "00500361": 374, "3353": 374, "0042401": 374, "3956": 374, "00350486": 374, "4786": 374, "00297233": 374, "5644": 374, "00693265": 374, "2420": 374, "00593063": 374, "2828": 374, "00526697": 374, "3185": 374, "00480098": 374, "3494": 374, "00385131": 374, "4356": 374, "0193516": 374, "3467": 374, "0166254": 374, "4036": 374, "0132869": 374, "5050": 374, "0106293": 374, "6313": 374, "00759056": 374, "8841": 374, "0977256": 374, "2746": 374, "0813271": 374, "0656322": 374, "4090": 374, "0476463": 374, "5633": 374, "0295362": 374, "9088": 374, "0736189": 374, "3646": 374, "0603789": 374, "4445": 374, "0489938": 374, "5478": 374, "036992": 374, "7256": 374, "0258802": 374, "10372": 374, "0116589": 374, "3237": 374, "00979113": 374, "3855": 374, "00811779": 374, "4650": 374, "00667871": 374, "5652": 374, "00493861": 374, "7643": 374, "0537768": 374, "2807": 374, "0459135": 374, "3288": 374, "03588": 374, "4208": 374, "0252901": 374, "5970": 374, "0167419": 374, "9018": 374, "0407051": 374, "3651": 374, "0342908": 374, "4334": 374, "028568": 374, "5202": 374, "0218703": 374, "6796": 374, "016186": 374, "9183": 374, "0031551": 374, "0029515": 374, "00265488": 374, "2369": 374, "00243581": 374, "2582": 374, "00223598": 374, "2813": 374, "00745008": 374, "3377": 374, "00656544": 374, "3833": 374, "00542595": 374, "4638": 374, "00425647": 374, "5912": 374, "0034657": 374, "7261": 374, "00835933": 374, "3010": 374, "00741956": 374, "3391": 374, "0065352": 374, "3850": 374, "00555918": 374, "4526": 374, "00488058": 374, "5156": 374, "0257262": 374, "3912": 374, "0217468": 374, "4628": 374, "0176505": 374, "5703": 374, "0137122": 374, "7341": 374, "00980134": 374, "10270": 374, "124749": 374, "3227": 374, "103385": 374, "3894": 374, "0832193": 374, "4838": 374, "0626013": 374, "6432": 374, "0397992": 374, "10117": 374, "101071": 374, "3983": 374, "0825665": 374, "4876": 374, "0668515": 374, "6023": 374, "0487727": 374, "8255": 374, "0354192": 374, "11368": 374, "0147718": 374, "0127799": 374, "4430": 374, "0105324": 374, "5376": 374, "00869796": 374, "6509": 374, "00643591": 374, "8798": 374, "0698868": 374, "3240": 374, "0588583": 374, "3848": 374, "0473412": 374, "4784": 374, "0346142": 374, "6543": 374, "0222947": 374, "10159": 374, "0538146": 374, "4142": 374, "0454583": 374, "4904": 374, "0373579": 374, "5968": 374, "0291396": 374, "7651": 374, "0208901": 374, "10672": 374, "00393589": 374, "00332212": 374, "2525": 374, "00317296": 374, "2643": 374, "00269113": 374, "3117": 374, "00235812": 374, "3557": 374, "009382": 374, "3576": 374, "00828943": 374, "4047": 374, "00672351": 374, "4990": 374, "00514768": 374, "6518": 374, "0040612": 374, "8262": 374, "0107115": 374, "3132": 374, "00920252": 374, "00794258": 374, "4224": 374, "00698123": 374, "4806": 374, "00561026": 374, "5980": 374, "0345669": 374, "3882": 374, "0289719": 374, "4632": 374, "0232584": 374, "5770": 374, "0179766": 374, "7466": 374, "0128144": 374, "10474": 374, "158162": 374, "3394": 374, "132552": 374, "4050": 374, "101844": 374, "5271": 374, "080936": 374, "6633": 374, "0530097": 374, "10127": 374, "135839": 374, "3952": 374, "11116": 374, "4829": 374, "0899513": 374, "0633017": 374, "8481": 374, "0467462": 374, "11484": 374, "0192628": 374, "3919": 374, "0164591": 374, "4586": 374, "0135348": 374, "5578": 374, "0107712": 374, "7009": 374, "00761117": 374, "9919": 374, "0854876": 374, "3532": 374, "0747271": 374, "4041": 374, "0604759": 374, "4993": 374, "0417964": 374, "7225": 374, "0275467": 374, "10962": 374, "0713821": 374, "4164": 374, "0600772": 374, "4948": 374, "0496581": 374, "5986": 374, "0381385": 374, "7794": 374, "027025": 374, "10999": 374, "00502473": 374, "2086": 374, "00451855": 374, "00396819": 374, "00338962": 374, "3093": 374, "00315343": 374, "3325": 374, "0147951": 374, "2834": 374, "0126225": 374, "3322": 374, "010269": 374, "4084": 374, "00785878": 374, "5337": 374, "00570293": 374, "7354": 374, "0161691": 374, "2594": 374, "0144483": 374, "2902": 374, "011705": 374, "3583": 374, "0101487": 374, "4132": 374, "00879332": 374, "4769": 374, "0560297": 374, "2994": 374, "0467998": 374, "3584": 374, "0374397": 374, "4481": 374, "028166": 374, "5956": 374, "0192593": 374, "8711": 374, "277815": 374, "2415": 374, "229837": 374, "2919": 374, "1787": 374, "3755": 374, "126545": 374, "5303": 374, "0835321": 374, "8033": 374, "224925": 374, "2983": 374, "184256": 374, "3642": 374, "146452": 374, "4582": 374, "108899": 374, "6162": 374, "0740655": 374, "9060": 374, "0319455": 374, "2954": 374, "0268136": 374, "3519": 374, "0217062": 374, "4347": 374, "0166666": 374, "5662": 374, "0116466": 374, "8102": 374, "150549": 374, "2507": 374, "119951": 374, "3147": 374, "0893092": 374, "4226": 374, "0637226": 374, "5923": 374, "0427839": 374, "8823": 374, "122421": 374, "3035": 374, "102244": 374, "0822007": 374, "4520": 374, "0622484": 374, "5969": 374, "0429436": 374, "8652": 374, "00481074": 374, "00443796": 374, "2835": 374, "00389863": 374, "00343822": 374, "3659": 374, "00297784": 374, "4225": 374, "0145757": 374, "3453": 374, "012078": 374, "4167": 374, "00896329": 374, "5615": 374, "00727645": 374, "6917": 374, "00548478": 374, "9176": 374, "0150624": 374, "3341": 374, "0132428": 374, "3800": 374, "011443": 374, "4398": 374, "0092883": 374, "5418": 374, "00744553": 374, "6759": 374, "0543977": 374, "3701": 374, "0445693": 374, "4517": 374, "0363329": 374, "5541": 374, "0270492": 374, "7442": 374, "0187415": 374, "10742": 374, "267367": 374, "3011": 374, "223615": 374, "3601": 374, "1797": 374, "134716": 374, "5977": 374, "0692752": 374, "11624": 374, "222661": 374, "3616": 374, "179525": 374, "4485": 374, "139298": 374, "5781": 374, "0958787": 374, "8399": 374, "176292": 374, "4568": 374, "0700283": 374, "0258341": 374, "4383": 374, "0207504": 374, "5457": 374, "0161277": 374, "7021": 374, "0116008": 374, "9761": 374, "148512": 374, "3050": 374, "124238": 374, "0995304": 374, "4551": 374, "0714324": 374, "6341": 374, "044154": 374, "10259": 374, "113174": 374, "3940": 374, "0961662": 374, "4636": 374, "0765841": 374, "5822": 374, "0592912": 374, "7520": 374, "0416614": 374, "10703": 374, "00655654": 374, "2239": 374, "00584761": 374, "2510": 374, "00502113": 374, "2923": 374, "00466269": 374, "3148": 374, "00393276": 374, "3732": 374, "0203923": 374, "2879": 374, "0171018": 374, "3433": 374, "0137027": 374, "4285": 374, "0109527": 374, "5361": 374, "00749636": 374, "7833": 374, "0221319": 374, "0193761": 374, "3030": 374, "0158773": 374, "3698": 374, "0134367": 374, "4370": 374, "0116365": 374, "5046": 374, "0780751": 374, "3008": 374, "0651551": 374, "3604": 374, "0521945": 374, "4500": 374, "0394101": 374, "5959": 374, "0262706": 374, "8940": 374, "398509": 374, "2357": 374, "332153": 374, "259051": 374, "3626": 374, "184412": 374, "5094": 374, "119678": 374, "7850": 374, "313656": 374, "2995": 374, "257989": 374, "3641": 374, "206049": 374, "4559": 374, "152848": 374, "6146": 374, "103125": 374, "9110": 374, "0444861": 374, "2969": 374, "037334": 374, "3538": 374, "0302293": 374, "0231979": 374, "5695": 374, "0158702": 374, "8325": 374, "219777": 374, "2404": 374, "17764": 374, "2975": 374, "135864": 374, "3889": 374, "100424": 374, "5262": 374, "0677547": 374, "7799": 374, "172356": 374, "3018": 374, "144231": 374, "3606": 374, "116019": 374, "4483": 374, "0873881": 374, "5953": 374, "0596004": 374, "8728": 374, "00609695": 374, "2751": 374, "00517637": 374, "3241": 374, "00448956": 374, "3736": 374, "00394876": 374, "4248": 374, "00317463": 374, "5284": 374, "0204832": 374, "3276": 374, "0137691": 374, "4873": 374, "0114194": 374, "5876": 374, "00893304": 374, "7512": 374, "00653312": 374, "10272": 374, "0192409": 374, "3487": 374, "0168348": 374, "3986": 374, "0142343": 374, "4714": 374, "0119455": 374, "5617": 374, "00910648": 374, "7369": 374, "0781101": 374, "0614806": 374, "4366": 374, "046201": 374, "5810": 374, "0357023": 374, "7518": 374, "0222103": 374, "12086": 374, "326917": 374, "3284": 374, "273363": 374, "3927": 374, "220994": 374, "4858": 374, "166153": 374, "6462": 374, "0854403": 374, "12567": 374, "311348": 374, "3448": 374, "243012": 374, "4418": 374, "187933": 374, "5713": 374, "126819": 374, "8466": 374, "0855686": 374, "12548": 374, "0404778": 374, "3730": 374, "0329699": 374, "4579": 374, "0265272": 374, "5692": 374, "0207815": 374, "7265": 374, "0139037": 374, "10860": 374, "183003": 374, "161443": 374, "3741": 374, "129767": 374, "4654": 374, "0893345": 374, "6760": 374, "0610684": 374, "9890": 374, "15525": 374, "3829": 374, "125772": 374, "4727": 374, "101434": 374, "5861": 374, "0765083": 374, "7770": 374, "0537321": 374, "11064": 374, "0104209": 374, "3219": 374, "00908195": 374, "3694": 374, "00781277": 374, "4294": 374, "00651108": 374, "5153": 374, "0051719": 374, "6487": 374, "0321377": 374, "4176": 374, "0269904": 374, "4972": 374, "0220014": 374, "6100": 374, "016901": 374, "7941": 374, "0120042": 374, "11180": 374, "0373802": 374, "0314895": 374, "4262": 374, "0266731": 374, "5031": 374, "0217822": 374, "6161": 374, "0168219": 374, "7978": 374, "176031": 374, "3049": 374, "134442": 374, "3993": 374, "0843776": 374, "6362": 374, "0640577": 374, "8381": 374, "043787": 374, "12261": 374, "697876": 374, "3077": 374, "615338": 374, "3489": 374, "350147": 374, "6133": 374, "267289": 374, "8034": 374, "179695": 374, "11950": 374, "703207": 374, "3053": 374, "561805": 374, "3822": 374, "423052": 374, "5076": 374, "254835": 374, "171434": 374, "12526": 374, "0933483": 374, "3235": 374, "0725632": 374, "4161": 374, "0539197": 374, "5600": 374, "0376119": 374, "8029": 374, "0263137": 374, "11476": 374, "407388": 374, "340939": 374, "3543": 374, "261028": 374, "4627": 374, "151649": 374, "7965": 374, "103379": 374, "11684": 374, "358769": 374, "3314": 374, "283046": 374, "4201": 374, "212152": 374, "5604": 374, "158502": 374, "7502": 374, "107514": 374, "11059": 374, "0148329": 374, "0129116": 374, "3898": 374, "0110537": 374, "4553": 374, "00925277": 374, "5439": 374, "00716987": 374, "7019": 374, "0526609": 374, "3823": 374, "0447282": 374, "4501": 374, "0365834": 374, "5503": 374, "0274874": 374, "7324": 374, "0183895": 374, "10947": 374, "0556653": 374, "0465882": 374, "4321": 374, "039411": 374, "5108": 374, "0318745": 374, "6316": 374, "024706": 374, "8148": 374, "263316": 374, "3058": 374, "198303": 374, "4061": 374, "141966": 374, "5672": 374, "105849": 374, "7608": 374, "0687866": 374, "11707": 374, "793822": 374, "4057": 374, "996979": 374, "3230": 374, "54288": 374, "5933": 374, "412174": 374, "7815": 374, "274441": 374, "11737": 374, "03474": 374, "3113": 374, "832701": 374, "3868": 374, "564787": 374, "421781": 374, "7637": 374, "271587": 374, "11860": 374, "130834": 374, "3462": 374, "0943305": 374, "4802": 374, "0760123": 374, "0580473": 374, "7803": 374, "0395342": 374, "11458": 374, "635729": 374, "2850": 374, "379899": 374, "307908": 374, "5884": 374, "233057": 374, "7774": 374, "157518": 374, "11503": 374, "518276": 374, "3441": 374, "422517": 374, "4221": 374, "323476": 374, "5513": 374, "247251": 374, "7213": 374, "163369": 374, "10917": 374, "0192313": 374, "0168147": 374, "3991": 374, "0143274": 374, "4683": 374, "011932": 374, "5624": 374, "00914975": 374, "7334": 374, "0723144": 374, "3712": 374, "0613803": 374, "4373": 374, "050021": 374, "5366": 374, "0376949": 374, "7121": 374, "0249397": 374, "10763": 374, "0796627": 374, "3369": 374, "0616695": 374, "4352": 374, "0521326": 374, "5149": 374, "042188": 374, "0325741": 374, "8240": 374, "380582": 374, "2821": 374, "24038": 374, "4466": 374, "195271": 374, "5498": 374, "146935": 374, "7307": 374, "0948318": 374, "11322": 374, "08794": 374, "3947": 374, "913626": 374, "4701": 374, "737943": 374, "5820": 374, "558473": 374, "7690": 374, "369466": 374, "51009": 374, "2844": 374, "26974": 374, "3382": 374, "778244": 374, "5518": 374, "589803": 374, "7282": 374, "375284": 374, "11444": 374, "160705": 374, "3758": 374, "135495": 374, "4457": 374, "108718": 374, "5555": 374, "0811198": 374, "7445": 374, "0533513": 374, "11320": 374, "614109": 374, "3934": 374, "518614": 374, "418491": 374, "5772": 374, "31592": 374, "7647": 374, "211893": 374, "11401": 374, "836616": 374, "2842": 374, "699579": 374, "3399": 374, "544194": 374, "379699": 374, "228043": 374, "10428": 374, "un": 375, "u": 375, "hotmap": 375, "jpg": 375, "x16": 376, "environment_vari": 376, "perfom": 376, "introduct": 376, "benchmark_it": 376, "benchmark_no_refresh": 376, "refresh": 376, "kxn": 376, "sparse_ratio": 376, "micro_b": 376, "output_fp32": 376, "has_append_sum": 376, "micro_oc": 376, "sub_func_level": 376, "3d_infer": 376, "automaticlli": 376, "dsparse_lib_use_amx": 376, "amx_bf16_x16": 376, "output_bf16": 376, "lower_bound": 376, "upper_bound": 376, "invalid": 376, "fp32_relu": 376, "src_dt": 376, "dst_dt": 376, "tanspos": 376, "4d": 376, "distinguish": 376, "bs0": 376, "bs1": 376, "scr2": 376, "avx512f_p2031_p2013": 376, "has_binary_add": 376, "tile_n": 376, "coeffici": 376, "vnni_noperm_p2031_p1302": 376, "suuport": 376, "d0xd1x": 376, "d0": 376, "dst_type": 376, "padding_mask": 376, "badd_dim": 376, "blank": 376, "2048": 376, "large_weight_threshold": 376, "add_bia": 376, "channel_num": 376, "quantize_dim_elt_num": 376, "src_data_typ": 376, "newli": 376, "subdir": 376, "benchmark_dir": 376, "bench_": 376, "cpp": 376, "test_": 376, "entranc": 376, "get_true_data_": 376, "check_result_": 376, "gen_case_": 376, "run_bench_": 376, "calc_flop": 376, "get_refresh_data_idx": 376, "benchmark_util": 376, "whitespac": 377, "labl": 377, "run_ci": 377, "overwrit": 377, "it_per_cor": 377, "discard": 377, "new_input_fil": 377, "medium_n": 377, "ci": 377, "apach": 378, "copyright": 378, "subject": 378, "parti": 378, "accompani": 378, "research": 378, "wish": 378, "bibtex": 378, "misc": 378, "hanwen": 378, "haihao": 378, "shen": 378, "dong": 378, "hengyu": 378, "meng": 378, "wenxin": 378, "zhang": 378, "howpublish": 378, "url": 378, "year": 378, "2023": 378, "logo": 378, "atom": 378, "phi": 378, "pentium": 378, "vtune": 378, "corpor": 378, "subsidiari": 378, "toler": 379, "rel": 379, "conjunct": 379, "proport": [379, 380], "vision": 381, "speech": 381, "multimod": 381, "text_classifi": 381, "great": 381, "9998425245285034": 381, "believ": 381, "beauti": 381, "evoc": 381, "ve": 381, "seen": 381, "9998886585235596": 381, "bear": 382, "brain": 382, "damag": 382, "hypothesi": 382, "yann": 382, "lecun": 382, "salient": 382, "anywher": 382, "filter": 382, "lowest": 382, "freez": 382, "hyper": 382, "didn": 382, "pruning_conf": 382, "littl": 383, "degrad": 383, "ex": 383, "affin": 383, "convers": 383, "math": 383, "zeropoint": 383, "asymmetr": 383, "overflow": 383, "fp16": 383, "unseen": 383, "peopl": 383, "emul": 383, "fake": 383, "backward": 383, "mimic": 383, "made": 383, "ultim": 383, "either": 383, "pain": 383, "lossi": 383, "fx": 383, "qat": 383, "site": 384, "assist": 384, "secur": 388, "legal": 388, "injector": 390}, "objects": {"": [[314, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [314, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [310, 1, 1, "_CPPv48executor", "executor"], [310, 2, 1, "_CPPv4N8executor10DispatcherE", "executor::Dispatcher"], [310, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::input"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::output"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::stage"], [310, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors"], [310, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::input"], [310, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::output"], [310, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::stage"], [310, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [310, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::conf"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [310, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::op"], [310, 3, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward"], [310, 4, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::input"], [310, 4, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::output"], [310, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel"], [310, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::has_dispatch_table_file"], [310, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::input"], [310, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::output"], [310, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::reshape_model"], [310, 3, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash"], [310, 4, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash::input"], [310, 1, 1, "_CPPv4N8executor10Dispatcher13KernelHandlerE", "executor::Dispatcher::KernelHandler"], [310, 3, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare"], [310, 4, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::input"], [310, 4, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::output"], [310, 3, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus"], [310, 4, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::input"], [310, 4, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::output"], [310, 3, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape"], [310, 4, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::input"], [310, 4, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::output"], [310, 5, 1, "_CPPv4N8executor10Dispatcher13adapt_action_E", "executor::Dispatcher::adapt_action_"], [310, 3, 1, "_CPPv4N8executor10Dispatcher15append_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::append_it_shape"], [310, 4, 1, "_CPPv4N8executor10Dispatcher15append_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::append_it_shape::input_shape"], [310, 3, 1, "_CPPv4N8executor10Dispatcher15append_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::append_ot_shape"], [310, 4, 1, "_CPPv4N8executor10Dispatcher15append_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::append_ot_shape::output_shape"], [310, 5, 1, "_CPPv4N8executor10Dispatcher8cpu_isa_E", "executor::Dispatcher::cpu_isa_"], [310, 5, 1, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E", "executor::Dispatcher::dispatch_table_file_exists_"], [310, 3, 1, "_CPPv4NK8executor10Dispatcher9do_tuningEv", "executor::Dispatcher::do_tuning"], [310, 5, 1, "_CPPv4N8executor10Dispatcher10do_tuning_E", "executor::Dispatcher::do_tuning_"], [310, 3, 1, "_CPPv4N8executor10Dispatcher13enable_sparseEv", "executor::Dispatcher::enable_sparse"], [310, 3, 1, "_CPPv4NK8executor10Dispatcher14execute_kernelEv", "executor::Dispatcher::execute_kernel"], [310, 5, 1, "_CPPv4N8executor10Dispatcher15execute_kernel_E", "executor::Dispatcher::execute_kernel_"], [310, 5, 1, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E", "executor::Dispatcher::execution_options_ptr_"], [310, 3, 1, "_CPPv4N8executor10Dispatcher9get_attrsEv", "executor::Dispatcher::get_attrs"], [310, 3, 1, "_CPPv4N8executor10Dispatcher12get_it_shapeEv", "executor::Dispatcher::get_it_shape"], [310, 3, 1, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv", "executor::Dispatcher::get_ot_shape"], [310, 3, 1, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv", "executor::Dispatcher::get_reshape_time"], [310, 5, 1, "_CPPv4N8executor10Dispatcher9iter_cnt_E", "executor::Dispatcher::iter_cnt_"], [310, 5, 1, "_CPPv4N8executor10Dispatcher15kernel_handler_E", "executor::Dispatcher::kernel_handler_"], [310, 3, 1, "_CPPv4N8executor10Dispatcher11kernel_typeEv", "executor::Dispatcher::kernel_type"], [310, 3, 1, "_CPPv4N8executor10Dispatcher7latencyEv", "executor::Dispatcher::latency"], [310, 5, 1, "_CPPv4N8executor10Dispatcher6model_E", "executor::Dispatcher::model_"], [310, 5, 1, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E", "executor::Dispatcher::monopoly_kernel_"], [310, 3, 1, "_CPPv4NK8executor10Dispatcher4nameEv", "executor::Dispatcher::name"], [310, 5, 1, "_CPPv4N8executor10Dispatcher5name_E", "executor::Dispatcher::name_"], [310, 3, 1, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv", "executor::Dispatcher::no_tuning_space"], [310, 5, 1, "_CPPv4N8executor10Dispatcher16no_tuning_space_E", "executor::Dispatcher::no_tuning_space_"], [310, 3, 1, "_CPPv4NK8executor10Dispatcher13operator_confEv", "executor::Dispatcher::operator_conf"], [310, 5, 1, "_CPPv4N8executor10Dispatcher14operator_conf_E", "executor::Dispatcher::operator_conf_"], [310, 3, 1, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv", "executor::Dispatcher::perf_ratio_id"], [310, 3, 1, "_CPPv4N8executor10Dispatcher7post_opEv", "executor::Dispatcher::post_op"], [310, 3, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs"], [310, 4, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs::input_attrs"], [310, 3, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse"], [310, 4, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse::enable_sparse"], [310, 3, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tEi", "executor::Dispatcher::set_it_shape"], [310, 4, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tEi", "executor::Dispatcher::set_it_shape::index"], [310, 4, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tEi", "executor::Dispatcher::set_it_shape::output_shape"], [310, 3, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency"], [310, 4, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency::latency"], [310, 3, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id"], [310, 4, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id::perf_ratio_id"], [310, 3, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op"], [310, 4, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op::post_op"], [310, 3, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time"], [310, 4, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time::reshape_time_"], [310, 3, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id"], [310, 4, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id::table_id"], [310, 3, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode"], [310, 4, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode::mode"], [310, 3, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape"], [310, 4, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape::weight_shape"], [310, 5, 1, "_CPPv4N8executor10Dispatcher20sparselib_available_E", "executor::Dispatcher::sparselib_available_"], [310, 3, 1, "_CPPv4N8executor10Dispatcher8table_idEv", "executor::Dispatcher::table_id"], [310, 5, 1, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E", "executor::Dispatcher::tune_dense_in_sparse_"], [310, 3, 1, "_CPPv4NK8executor10Dispatcher4typeEv", "executor::Dispatcher::type"], [310, 5, 1, "_CPPv4N8executor10Dispatcher5type_E", "executor::Dispatcher::type_"], [310, 3, 1, "_CPPv4N8executor10Dispatcher12weight_shapeEv", "executor::Dispatcher::weight_shape"], [310, 3, 1, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv", "executor::Dispatcher::weight_zero_ratio"], [310, 3, 1, "_CPPv4N8executor10DispatcherD0Ev", "executor::Dispatcher::~Dispatcher"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [315, 1, 1, "_CPPv42jd", "jd"], [316, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 1, 1, "_CPPv42jd", "jd"], [317, 6, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [317, 6, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [317, 6, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [317, 6, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [317, 6, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [317, 6, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [317, 6, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [317, 6, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [317, 6, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [317, 6, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [317, 6, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [315, 2, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [315, 3, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [315, 3, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [315, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [315, 3, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [315, 2, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [315, 3, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [315, 3, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [315, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [317, 7, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [317, 6, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [317, 6, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [317, 6, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [317, 6, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [317, 6, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [317, 6, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [317, 6, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [317, 6, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [317, 6, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [317, 6, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [317, 6, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [317, 6, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [314, 2, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [314, 3, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [314, 3, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [314, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [314, 5, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [314, 3, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [314, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [314, 3, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [315, 2, 1, "_CPPv4N2jd16dyn_quantize_mhaE", "jd::dyn_quantize_mha"], [315, 3, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha"], [315, 3, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv", "jd::dyn_quantize_mha::dyn_quantize_mha"], [315, 4, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha::kdp"], [315, 3, 1, "_CPPv4N2jd16dyn_quantize_mhaD0Ev", "jd::dyn_quantize_mha::~dyn_quantize_mha"], [315, 2, 1, "_CPPv4N2jd21dyn_quantize_mha_descE", "jd::dyn_quantize_mha_desc"], [315, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [315, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [315, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev", "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc"], [315, 2, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [315, 3, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [315, 3, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [315, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [315, 3, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [315, 2, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [315, 3, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [315, 3, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [315, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [315, 2, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [315, 3, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [315, 3, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [315, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [315, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [315, 2, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [315, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [315, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [315, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [315, 2, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [315, 3, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [315, 3, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [315, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [315, 3, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [315, 2, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [315, 3, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [315, 3, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [315, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [314, 2, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [314, 3, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [314, 3, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [314, 3, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [314, 5, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [314, 3, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [314, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [314, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [314, 3, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [314, 3, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [314, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [314, 3, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [314, 5, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [314, 3, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [315, 2, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [315, 3, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [315, 3, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [315, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [315, 3, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [315, 2, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [315, 3, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [315, 3, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [315, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [315, 2, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [315, 3, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [315, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [315, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [315, 5, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [315, 3, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [315, 3, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [315, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [315, 3, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [315, 3, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [315, 2, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [315, 3, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [315, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [315, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [315, 3, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [315, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [315, 3, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [315, 3, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [315, 3, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [315, 3, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [315, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [315, 3, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [315, 2, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [315, 3, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [315, 3, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [315, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [315, 3, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [315, 2, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [315, 3, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [315, 3, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [315, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [315, 2, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [315, 3, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [315, 3, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [315, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [315, 3, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [315, 2, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [315, 3, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [315, 3, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [315, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [315, 2, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [315, 3, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [315, 3, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [315, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [315, 3, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [315, 2, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [315, 3, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [315, 3, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [315, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [315, 2, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [315, 3, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [315, 3, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [315, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [315, 3, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [315, 2, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [315, 3, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [315, 3, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [315, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [316, 2, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [316, 3, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [316, 5, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [316, 3, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [316, 5, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [316, 5, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [316, 3, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [316, 5, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [316, 3, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [316, 3, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [316, 5, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [316, 5, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [316, 5, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [316, 3, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [316, 3, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [316, 3, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [316, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [316, 3, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [316, 3, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [316, 3, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [316, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [316, 3, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [316, 5, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [316, 3, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [316, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [316, 3, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [316, 5, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [316, 3, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [315, 2, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [315, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [315, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [315, 3, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [315, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [315, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [315, 5, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [315, 3, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [315, 3, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [315, 3, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [315, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [315, 3, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [315, 2, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [315, 3, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [315, 3, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [315, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [315, 3, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [315, 2, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [315, 3, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [315, 3, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [315, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [315, 2, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [315, 3, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [315, 3, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [315, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [315, 3, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [315, 2, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [315, 3, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [315, 3, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [315, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [315, 2, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [315, 3, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [315, 3, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [315, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [315, 3, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [315, 2, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [315, 3, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [315, 3, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [315, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [317, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [317, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [317, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [317, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [317, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [317, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [317, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [317, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [317, 5, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [317, 5, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [317, 5, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [317, 5, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [317, 5, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [317, 5, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [317, 5, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [317, 5, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [317, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [317, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [317, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [317, 2, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [317, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [317, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [317, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [317, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [317, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [317, 2, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [317, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [317, 5, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [317, 2, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [317, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [317, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [317, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [317, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [317, 2, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [317, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [317, 2, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [317, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [317, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [317, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [317, 2, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [317, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [317, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [317, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [317, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [317, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [317, 2, 1, "_CPPv4N2jd3ssd13gather_data_tE", "jd::ssd::gather_data_t"], [317, 5, 1, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE", "jd::ssd::gather_data_t::binaryop_addrs"], [317, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3dstE", "jd::ssd::gather_data_t::dst"], [317, 3, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t"], [317, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::a"], [317, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::b"], [317, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::c"], [317, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3idxE", "jd::ssd::gather_data_t::idx"], [317, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3srcE", "jd::ssd::gather_data_t::src"], [317, 2, 1, "_CPPv4N2jd3ssd14gather_param_tE", "jd::ssd::gather_param_t"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE", "jd::ssd::gather_param_t::binary_ts_sizes"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE", "jd::ssd::gather_param_t::binaryop_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE", "jd::ssd::gather_param_t::dst_axis_size"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t2dtE", "jd::ssd::gather_param_t::dt"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE", "jd::ssd::gather_param_t::dt_size"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE", "jd::ssd::gather_param_t::extend_mask"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE", "jd::ssd::gather_param_t::idx_size"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE", "jd::ssd::gather_param_t::inner_size"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t5loopsE", "jd::ssd::gather_param_t::loops"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t4maskE", "jd::ssd::gather_param_t::mask"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE", "jd::ssd::gather_param_t::outer_size"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t6remainE", "jd::ssd::gather_param_t::remain"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE", "jd::ssd::gather_param_t::src_axis_size"], [317, 5, 1, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE", "jd::ssd::gather_param_t::src_size"], [317, 2, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [317, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [317, 2, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [317, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [317, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [317, 2, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [317, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [317, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [317, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [317, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [317, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [317, 7, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [317, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [317, 2, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [317, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [317, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [317, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [317, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [317, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [317, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [317, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [317, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [317, 2, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [317, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [317, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [317, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [317, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [317, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [317, 2, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [317, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [317, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [317, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [317, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [317, 2, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [317, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [317, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [317, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [317, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [317, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [317, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [317, 2, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [317, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [317, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [317, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [317, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [317, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [317, 2, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [317, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [317, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [317, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [317, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [317, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [317, 2, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [317, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [317, 7, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [317, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [317, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [317, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [317, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [317, 7, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [317, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [317, 7, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [317, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [317, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [317, 7, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [317, 6, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [317, 6, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [317, 6, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [317, 6, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [317, 2, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [317, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [317, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [317, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [317, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [317, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [317, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [317, 7, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [317, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [317, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [317, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [317, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [317, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [317, 2, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [317, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [317, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [317, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [317, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [317, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [317, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [317, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [317, 2, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [317, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [315, 2, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [315, 3, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [315, 3, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [315, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [315, 3, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [315, 2, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [315, 3, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [315, 3, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [315, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [315, 2, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [315, 3, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [315, 3, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [315, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [315, 3, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [315, 2, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [315, 3, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [315, 3, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [315, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [315, 3, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [183, 9, 0, "-", "intel_extension_for_transformers"], [228, 9, 0, "-", "sparsity_all"], [229, 9, 0, "-", "test_add_cls_token"], [230, 9, 0, "-", "test_add_embeddings"], [231, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [232, 9, 0, "-", "test_attention_reshape"], [233, 9, 0, "-", "test_bert_mini_fp32"], [234, 9, 0, "-", "test_binary_op"], [235, 9, 0, "-", "test_binaryop"], [236, 9, 0, "-", "test_cast_to"], [237, 9, 0, "-", "test_concat"], [238, 9, 0, "-", "test_conv_reshape"], [239, 9, 0, "-", "test_decoder_attn_reshape"], [240, 9, 0, "-", "test_dispatcher_tuning_acc"], [241, 9, 0, "-", "test_dispatcher_tuning_throughput"], [242, 9, 0, "-", "test_dynamic_quantization"], [243, 9, 0, "-", "test_embedding"], [244, 9, 0, "-", "test_embeddingbag"], [245, 9, 0, "-", "test_execution_options"], [246, 9, 0, "-", "test_gelu"], [247, 9, 0, "-", "test_gpt_int8"], [248, 9, 0, "-", "test_graph_dispatch"], [249, 9, 0, "-", "test_insert_input_output_data"], [250, 9, 0, "-", "test_is_supported_onnx_graph"], [251, 9, 0, "-", "test_last_layer_shape"], [252, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [253, 9, 0, "-", "test_layer_norm_with_transpose"], [254, 9, 0, "-", "test_layernorm"], [255, 9, 0, "-", "test_linear"], [256, 9, 0, "-", "test_linear_int8"], [257, 9, 0, "-", "test_main"], [258, 9, 0, "-", "test_matmul"], [259, 9, 0, "-", "test_matmul_int8"], [260, 9, 0, "-", "test_matmul_with_bias_relu"], [261, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [262, 9, 0, "-", "test_matmul_with_bias_tanh"], [263, 9, 0, "-", "test_merged_embeddingbag"], [264, 9, 0, "-", "test_model"], [265, 9, 0, "-", "test_onnx_utils"], [266, 9, 0, "-", "test_operator_adaptor"], [267, 9, 0, "-", "test_ops"], [268, 9, 0, "-", "test_padding_seq"], [269, 9, 0, "-", "test_padding_sequence"], [270, 9, 0, "-", "test_pattern_dispatch"], [271, 9, 0, "-", "test_permute"], [272, 9, 0, "-", "test_position_embeddings"], [273, 9, 0, "-", "test_pow"], [274, 9, 0, "-", "test_primitive_cache_acc"], [275, 9, 0, "-", "test_primitive_cache_throughput"], [276, 9, 0, "-", "test_qkv_merge"], [277, 9, 0, "-", "test_qkv_reshape"], [278, 9, 0, "-", "test_quant_onnx_execute"], [279, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [280, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [281, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [282, 9, 0, "-", "test_size"], [283, 9, 0, "-", "test_softmax"], [284, 9, 0, "-", "test_start_end_logits"], [285, 9, 0, "-", "test_tanh"], [286, 9, 0, "-", "test_text_encoder"], [287, 9, 0, "-", "test_text_encoder_bf16"], [288, 9, 0, "-", "test_tf_utils"], [289, 9, 0, "-", "test_token_type_embeddings"], [290, 9, 0, "-", "test_transpose"], [291, 9, 0, "-", "test_transpose_batch_matmul"], [292, 9, 0, "-", "test_unet"], [293, 9, 0, "-", "test_unet_bf16"], [294, 9, 0, "-", "test_unsqueeze"], [295, 9, 0, "-", "test_vae_decoder"], [296, 9, 0, "-", "test_vae_decoder_bf16"], [297, 9, 0, "-", "test_weight_sharing_acc"], [298, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [299, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [300, 9, 0, "-", "test_weight_sharing_throughput"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "api_doc_example"], [1, 9, 0, "-", "backends"], [190, 9, 0, "-", "optimization"], [225, 9, 0, "-", "preprocessing"], [227, 9, 0, "-", "version"]], "intel_extension_for_transformers.api_doc_example": [[0, 10, 1, "", "ExampleClass"], [0, 11, 1, "", "attribute1"], [0, 13, 1, "", "function1"], [0, 13, 1, "", "function2"], [0, 13, 1, "", "function3"], [0, 13, 1, "", "generator1"], [0, 14, 1, "", "module_debug_level1"]], "intel_extension_for_transformers.api_doc_example.ExampleClass": [[0, 11, 1, "", "attr1"], [0, 11, 1, "", "attr2"], [0, 11, 1, "", "attr5"], [0, 12, 1, "", "method1"]], "intel_extension_for_transformers.backends": [[182, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[11, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[2, 9, 0, "-", "compile"], [4, 9, 0, "-", "extractors"], [9, 9, 0, "-", "graph"], [10, 9, 0, "-", "graph_utils"], [12, 9, 0, "-", "loaders"], [14, 9, 0, "-", "logger"], [15, 9, 0, "-", "onnx_utils"], [36, 9, 0, "-", "ops"], [100, 9, 0, "-", "sub_graph"], [180, 9, 0, "-", "tf_utils"], [181, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, 13, 1, "", "compile"], [2, 13, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 9, 0, "-", "extractor"], [5, 9, 0, "-", "onnx_extractor"], [6, 9, 0, "-", "tf_extractor"], [7, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, 10, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, 10, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, 10, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, 10, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[8, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, 10, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[8, 12, 1, "", "add_config_item"], [8, 12, 1, "", "change_node_input_tensors"], [8, 12, 1, "", "change_node_output_tensors"], [8, 12, 1, "", "dump_tensor"], [8, 12, 1, "", "engine_init"], [8, 12, 1, "", "get_next_node_names"], [8, 12, 1, "", "get_node_by_name"], [8, 12, 1, "", "get_node_id"], [8, 12, 1, "", "get_pre_node_names"], [8, 12, 1, "", "get_sparse_nodes_name"], [8, 12, 1, "", "get_tensor_idx"], [8, 12, 1, "", "graph_dispatch"], [8, 12, 1, "", "graph_init"], [8, 12, 1, "", "inference"], [8, 12, 1, "", "inquire_config_item"], [8, 12, 1, "", "insert_nodes"], [8, 12, 1, "", "modify_node_connections"], [8, 12, 1, "", "remove_nodes"], [8, 12, 1, "", "rename_node"], [8, 12, 1, "", "save"], [8, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, 10, 1, "", "LazyImport"], [10, 13, 1, "", "autocast_init"], [10, 13, 1, "", "construct_node"], [10, 13, 1, "", "get_autocast_info"], [10, 13, 1, "", "get_data_dtype"], [10, 13, 1, "", "get_model_fwk_name"], [10, 13, 1, "", "get_quant_info"], [10, 13, 1, "", "insert_pattern"], [10, 13, 1, "", "insert_quant_info"], [10, 13, 1, "", "list2str"], [10, 13, 1, "", "names_from_input"], [10, 13, 1, "", "pattern_mapping"], [10, 13, 1, "", "pattern_mapping_conf_validation"], [10, 13, 1, "", "quant_info_init"], [10, 13, 1, "", "search_pattern"], [10, 13, 1, "", "search_straight_pattern"], [10, 13, 1, "", "set_autocast"], [10, 13, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[13, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, 10, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, 10, 1, "", "Logger"], [14, 13, 1, "", "debug"], [14, 13, 1, "", "error"], [14, 13, 1, "", "fatal"], [14, 13, 1, "", "info"], [14, 13, 1, "", "log"], [14, 13, 1, "", "warn"], [14, 13, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[14, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, 13, 1, "", "bias_to_int32"], [15, 13, 1, "", "change_num_name"], [15, 13, 1, "", "get_children"], [15, 13, 1, "", "get_initializer_children_names"], [15, 13, 1, "", "get_node_children_names"], [15, 13, 1, "", "graph_node_names_details"], [15, 13, 1, "", "is_supported_onnx_graph"], [15, 13, 1, "", "is_supported_onnx_node"], [15, 13, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[16, 9, 0, "-", "all"], [17, 9, 0, "-", "assert"], [18, 9, 0, "-", "batch_matmul"], [19, 9, 0, "-", "batch_matmul_v2"], [20, 9, 0, "-", "bias_add"], [21, 9, 0, "-", "binary_op"], [22, 9, 0, "-", "cast"], [23, 9, 0, "-", "concat"], [24, 9, 0, "-", "conv"], [25, 9, 0, "-", "cos"], [26, 9, 0, "-", "empty_ops"], [27, 9, 0, "-", "expand_dims"], [28, 9, 0, "-", "fused_batch_matmul_v2"], [29, 9, 0, "-", "fused_batch_norm_v3"], [30, 9, 0, "-", "fused_gemm"], [31, 9, 0, "-", "fused_matmul"], [32, 9, 0, "-", "gather"], [33, 9, 0, "-", "gather_elements"], [34, 9, 0, "-", "gelu"], [35, 9, 0, "-", "gemm"], [37, 9, 0, "-", "iterator_get_next"], [38, 9, 0, "-", "iterator_v2"], [39, 9, 0, "-", "layer_normalization"], [40, 9, 0, "-", "log_softmax"], [41, 9, 0, "-", "map_and_batch_dataset"], [42, 9, 0, "-", "matmul"], [43, 9, 0, "-", "mean"], [44, 9, 0, "-", "mkl_layer_norm"], [45, 9, 0, "-", "model_dataset"], [46, 9, 0, "-", "one_hot"], [47, 9, 0, "-", "onnx_input"], [48, 9, 0, "-", "op"], [49, 9, 0, "-", "optimize_dataset"], [50, 9, 0, "-", "pack"], [51, 9, 0, "-", "padding_sequence"], [52, 9, 0, "-", "placeholder"], [53, 9, 0, "-", "pos_embed"], [54, 9, 0, "-", "pow"], [55, 9, 0, "-", "quantize_linear"], [56, 9, 0, "-", "quantize_v2"], [57, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [58, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [59, 9, 0, "-", "reduce_mean"], [60, 9, 0, "-", "reduce_sum"], [61, 9, 0, "-", "reorder"], [62, 9, 0, "-", "reshape"], [63, 9, 0, "-", "rsub"], [64, 9, 0, "-", "scatter_elements"], [65, 9, 0, "-", "shape"], [66, 9, 0, "-", "sin"], [67, 9, 0, "-", "size"], [68, 9, 0, "-", "slice"], [69, 9, 0, "-", "softmax"], [70, 9, 0, "-", "split"], [71, 9, 0, "-", "squeeze"], [72, 9, 0, "-", "strided_slice"], [73, 9, 0, "-", "tensor"], [74, 9, 0, "-", "top_k"], [75, 9, 0, "-", "transpose"], [76, 9, 0, "-", "unpack"], [77, 9, 0, "-", "unsqueeze"], [78, 9, 0, "-", "view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, 10, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, 10, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, 10, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, 10, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[19, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, 10, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, 10, 1, "", "BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp": [[21, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, 10, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, 10, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, 10, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, 10, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, 10, 1, "", "Add"], [26, 10, 1, "", "AddV2"], [26, 10, 1, "", "Arange"], [26, 10, 1, "", "BinaryAdd"], [26, 10, 1, "", "Constant"], [26, 10, 1, "", "ConstantOfShape"], [26, 10, 1, "", "Convolution"], [26, 10, 1, "", "CumSum"], [26, 10, 1, "", "Dequantize"], [26, 10, 1, "", "DequantizeLinear"], [26, 10, 1, "", "Einsum"], [26, 10, 1, "", "EmbeddingBag"], [26, 10, 1, "", "Erf"], [26, 10, 1, "", "Expand"], [26, 10, 1, "", "ExpandIndices"], [26, 10, 1, "", "Fill"], [26, 10, 1, "", "FlatMapDataset"], [26, 10, 1, "", "Flatten"], [26, 10, 1, "", "Identity"], [26, 10, 1, "", "InnerProduct"], [26, 10, 1, "", "Input"], [26, 10, 1, "", "LatRange"], [26, 10, 1, "", "ListConstruct"], [26, 10, 1, "", "Loop"], [26, 10, 1, "", "MakeIterator"], [26, 10, 1, "", "MatMulWithBias"], [26, 10, 1, "", "MatMulWithBiasAdd"], [26, 10, 1, "", "MatMulWithBiasGelu"], [26, 10, 1, "", "MatMulWithBiasRelu"], [26, 10, 1, "", "MatMulWithBiasSigmoid"], [26, 10, 1, "", "MatMulWithBiasTanh"], [26, 10, 1, "", "Matmul"], [26, 10, 1, "", "MergedEmbeddingbag"], [26, 10, 1, "", "Onehot"], [26, 10, 1, "", "OpAny"], [26, 10, 1, "", "Output"], [26, 10, 1, "", "PositionIds"], [26, 10, 1, "", "QLinearAdd"], [26, 10, 1, "", "QLinearMatMul"], [26, 10, 1, "", "QLinearMul"], [26, 10, 1, "", "Range"], [26, 10, 1, "", "RealDiv"], [26, 10, 1, "", "Reciprocal"], [26, 10, 1, "", "Relu"], [26, 10, 1, "", "Repeat"], [26, 10, 1, "", "Rsqrt"], [26, 10, 1, "", "SequenceLength"], [26, 10, 1, "", "Sigmoid"], [26, 10, 1, "", "Sqrt"], [26, 10, 1, "", "Square"], [26, 10, 1, "", "SquaredDifference"], [26, 10, 1, "", "Stack"], [26, 10, 1, "", "StopGradient"], [26, 10, 1, "", "Tanh"], [26, 10, 1, "", "TensorSliceDataset"], [26, 10, 1, "", "Tile"], [26, 10, 1, "", "TokenTypeIds"], [26, 10, 1, "", "TransposeBatchMatMul"], [26, 10, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, 10, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, 10, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, 10, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, 10, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, 10, 1, "", "Gather"], [32, 10, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, 10, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, 10, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, 10, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, 10, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, 10, 1, "", "LayerNorm"], [39, 10, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, 10, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, 10, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, 10, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, 10, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, 10, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, 10, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, 10, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[47, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, 10, 1, "", "Operator"], [48, 13, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[48, 12, 1, "", "construct"], [48, 12, 1, "", "extract"], [48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, 10, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, 10, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, 10, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, 10, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, 10, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, 10, 1, "", "Quantize"], [55, 10, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, 10, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, 10, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, 10, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, 10, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, 10, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, 10, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, 10, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, 10, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, 10, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, 10, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, 10, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, 10, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, 10, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, 10, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, 10, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, 10, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, 10, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, 10, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, 10, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, 10, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, 10, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[79, 9, 0, "-", "InnerproductReshapeFusion"], [80, 9, 0, "-", "add_cls_token"], [81, 9, 0, "-", "add_embeddings"], [82, 9, 0, "-", "arangewithreciprocal"], [83, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [84, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [85, 9, 0, "-", "attentionBlock_QKVPreReshape"], [86, 9, 0, "-", "attentionBlock_QKVReshape"], [87, 9, 0, "-", "attentionBlock_Resize2Gather"], [88, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [89, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [90, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [91, 9, 0, "-", "attention_reshape"], [92, 9, 0, "-", "cast_to"], [93, 9, 0, "-", "collect_quant_info"], [94, 9, 0, "-", "conv_reshape"], [95, 9, 0, "-", "decoder_attn_reshape"], [96, 9, 0, "-", "einsumwitharange"], [97, 9, 0, "-", "embeddingbag"], [98, 9, 0, "-", "gelu"], [99, 9, 0, "-", "generate_sequence"], [101, 9, 0, "-", "innerproductwithbiasgelu"], [102, 9, 0, "-", "innerproductwithslice"], [103, 9, 0, "-", "input_data"], [104, 9, 0, "-", "input_file"], [105, 9, 0, "-", "insert_bf16_node"], [106, 9, 0, "-", "insert_quant_node"], [107, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [108, 9, 0, "-", "interact_features"], [109, 9, 0, "-", "last_layer_shape"], [110, 9, 0, "-", "layer_norm"], [111, 9, 0, "-", "layer_norm_with_reduce_mean"], [112, 9, 0, "-", "layer_norm_with_transpose"], [113, 9, 0, "-", "matmul_with_bias"], [114, 9, 0, "-", "matmul_with_bias_add"], [115, 9, 0, "-", "matmul_with_bias_gelu"], [116, 9, 0, "-", "matmul_with_bias_relu"], [117, 9, 0, "-", "matmul_with_bias_sigmoid"], [118, 9, 0, "-", "matmul_with_bias_tanh"], [119, 9, 0, "-", "matmul_with_transpose"], [120, 9, 0, "-", "merged_embeddingbag"], [121, 9, 0, "-", "multi_head_attention"], [122, 9, 0, "-", "operator_adaptor"], [123, 9, 0, "-", "output_data"], [124, 9, 0, "-", "padding_sequence"], [125, 9, 0, "-", "pattern"], [126, 9, 0, "-", "position_embeddings"], [127, 9, 0, "-", "position_embeddings_v1"], [128, 9, 0, "-", "qkv_merge"], [129, 9, 0, "-", "qkv_reshape"], [130, 9, 0, "-", "quantize_fusion"], [131, 9, 0, "-", "quantized_graph_dtype_refactor"], [132, 9, 0, "-", "remove_constant_op"], [133, 9, 0, "-", "remove_last_view"], [134, 9, 0, "-", "remove_list_construct"], [135, 9, 0, "-", "remove_range"], [136, 9, 0, "-", "removeslice"], [137, 9, 0, "-", "reshape_after_restore_hidden_states"], [138, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [139, 9, 0, "-", "reshape_before_restore_hidden_states"], [140, 9, 0, "-", "reshape_fusion"], [141, 9, 0, "-", "resnetBlock_instancenormReshapeFromConv"], [142, 9, 0, "-", "resnetBlock_instancenormReshapeFromdiv"], [143, 9, 0, "-", "restnetBlock_groupNorm"], [144, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [145, 9, 0, "-", "rotary_pos_emb"], [146, 9, 0, "-", "slicemask"], [147, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [148, 9, 0, "-", "stableDiffusion_bf16Convert"], [149, 9, 0, "-", "start_end_logits"], [150, 9, 0, "-", "subgraph_matcher"], [151, 9, 0, "-", "textEncdoer_word_embedding"], [152, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [153, 9, 0, "-", "textEncoder_AttentionReshape"], [154, 9, 0, "-", "textEncoder_KVReshape"], [155, 9, 0, "-", "textEncoder_MulReshape"], [156, 9, 0, "-", "textEncoder_QReshape"], [157, 9, 0, "-", "textEncoder_SoftmaxReshape"], [158, 9, 0, "-", "textEncoder_causal_attention_mask"], [159, 9, 0, "-", "token_type_embeddings"], [160, 9, 0, "-", "token_type_embeddings_v1"], [161, 9, 0, "-", "torch_embedding"], [162, 9, 0, "-", "torch_ip_insert_bias"], [163, 9, 0, "-", "torchinsertbf16node"], [164, 9, 0, "-", "torchpaddingsquence"], [165, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [166, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [167, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [168, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [169, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [170, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [171, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [172, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [173, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [174, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromAdd"], [175, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromConcat"], [176, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [177, 9, 0, "-", "transformer2Dmodel_upBlockResize"], [178, 9, 0, "-", "transpose_batch_matmul"], [179, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, 10, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, 10, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, 10, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, 10, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, 10, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, 10, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, 10, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, 10, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, 10, 1, "", "AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, 10, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, 10, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, 10, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, 10, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, 10, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, 10, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, 10, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, 10, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, 10, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, 10, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, 10, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, 10, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, 10, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, 10, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, 10, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, 10, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, 10, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, 10, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, 10, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, 10, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, 10, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, 10, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, 10, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, 10, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, 10, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, 10, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, 10, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, 10, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, 10, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, 10, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, 10, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, 10, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, 10, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, 10, 1, "", "Pattern"], [125, 13, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, 10, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, 10, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, 10, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, 10, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, 10, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, 10, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, 10, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, 10, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, 10, 1, "", "RemoveListConstruct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, 10, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, 10, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, 10, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, 10, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, 10, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, 10, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[141, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[142, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[143, 10, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, 10, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, 10, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, 10, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[147, 10, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[148, 10, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, 10, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, 10, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[151, 10, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[152, 10, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[153, 10, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[154, 10, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[155, 10, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[156, 10, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[157, 10, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[158, 10, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, 10, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, 10, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, 10, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, 10, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, 10, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[165, 10, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[166, 10, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[167, 10, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[168, 10, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[169, 10, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[170, 10, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[171, 10, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[172, 10, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[173, 10, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[174, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[175, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[176, 10, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[177, 10, 1, "", "Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, 10, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, 10, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, 14, 1, "", "TF_DTYPE_ID"], [180, 13, 1, "", "create_tf_node"], [180, 13, 1, "", "get_tensor_dest_op"], [180, 13, 1, "", "graph_node_names_details"], [180, 13, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, 13, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.optimization": [[184, 9, 0, "-", "benchmark"], [185, 9, 0, "-", "config"], [186, 9, 0, "-", "distillation"], [189, 9, 0, "-", "dynamic"], [192, 9, 0, "-", "mixture"], [193, 9, 0, "-", "model"], [195, 9, 0, "-", "nas"], [197, 9, 0, "-", "optimizer"], [198, 9, 0, "-", "optimizer_tf"], [199, 9, 0, "-", "pipeline"], [200, 9, 0, "-", "pruning"], [202, 9, 0, "-", "pytorch_pruner"], [213, 9, 0, "-", "quantization"], [214, 9, 0, "-", "trainer"], [216, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[184, 13, 1, "", "benchmark"], [184, 13, 1, "", "get_example_inputs"], [184, 13, 1, "", "preprocess_model"], [184, 13, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[185, 10, 1, "", "AutoDistillationConfig"], [185, 10, 1, "", "BenchmarkConfig"], [185, 10, 1, "", "DistillationConfig"], [185, 10, 1, "", "DynamicLengthConfig"], [185, 10, 1, "", "FlashDistillationConfig"], [185, 10, 1, "", "NASConfig"], [185, 10, 1, "", "Provider"], [185, 10, 1, "", "PrunerV2"], [185, 10, 1, "", "PruningConfig"], [185, 10, 1, "", "QuantizationConfig"], [185, 10, 1, "", "TFDistillationConfig"], [185, 10, 1, "", "WeightPruningConfig"], [185, 13, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[185, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[186, 10, 1, "", "Criterion"], [186, 10, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[187, 9, 0, "-", "drop_and_restore_utils"], [188, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, 13, 1, "", "sample_layer_configuration"], [187, 13, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, 10, 1, "", "Evolution"], [188, 13, 1, "", "approx_ratio"], [188, 13, 1, "", "inverse"], [188, 13, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[188, 12, 1, "", "add_gene"], [188, 12, 1, "", "convex_hull"], [188, 12, 1, "", "crossover"], [188, 12, 1, "", "get_store"], [188, 12, 1, "", "load_store"], [188, 12, 1, "", "mutate"], [188, 12, 1, "", "pareto_frontier"], [188, 12, 1, "", "save_population"], [188, 12, 1, "", "save_store"], [188, 12, 1, "", "set_lower_constraint"], [188, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[191, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, 10, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[191, 12, 1, "", "create_distillers"], [191, 12, 1, "", "estimate"], [191, 12, 1, "", "init_by_cfg"], [191, 12, 1, "", "load_search_results"], [191, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[193, 10, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[193, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[194, 9, 0, "-", "basic_nas"], [196, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, 10, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[194, 12, 1, "", "estimate"], [194, 12, 1, "", "execute"], [194, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, 10, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[197, 10, 1, "", "NoTrainerOptimizer"], [197, 10, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[197, 12, 1, "", "distill"], [197, 12, 1, "", "init_distiller"], [197, 12, 1, "", "init_pruner"], [197, 12, 1, "", "init_quantizer"], [197, 12, 1, "", "prune"], [197, 12, 1, "", "quantize"], [197, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[197, 12, 1, "", "fit"], [197, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, 10, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[198, 12, 1, "", "autodistill"], [198, 12, 1, "", "build_train_func"], [198, 12, 1, "", "builtin_eval_func"], [198, 12, 1, "", "distill"], [198, 12, 1, "", "init_distiller"], [198, 12, 1, "", "init_pruner"], [198, 12, 1, "", "init_quantizer"], [198, 12, 1, "", "model_builder_builtin"], [198, 12, 1, "", "prune"], [198, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[199, 13, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[200, 10, 1, "", "PrunerConfig"], [200, 10, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[201, 9, 0, "-", "criteria"], [203, 9, 0, "-", "logger"], [204, 9, 0, "-", "patterns"], [205, 9, 0, "-", "prune_utils"], [206, 9, 0, "-", "pruner"], [207, 9, 0, "-", "pruners"], [208, 9, 0, "-", "pruning"], [209, 9, 0, "-", "regs"], [210, 9, 0, "-", "scheduler"], [211, 9, 0, "-", "schedulers"], [212, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, 10, 1, "", "GradientCriterion"], [201, 10, 1, "", "MagnitudeCriterion"], [201, 10, 1, "", "PruningCriterion"], [201, 10, 1, "", "SnipCriterion"], [201, 10, 1, "", "SnipMomentumCriterion"], [201, 13, 1, "", "get_criterion"], [201, 13, 1, "", "register_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion": [[201, 12, 1, "", "on_step_begin"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion": [[201, 12, 1, "", "on_after_optimizer_step"], [201, 12, 1, "", "on_before_optimizer_step"], [201, 12, 1, "", "on_step_begin"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, 10, 1, "", "BasePattern"], [204, 10, 1, "", "PatternNInM"], [204, 10, 1, "", "PatternNxM"], [204, 13, 1, "", "get_pattern"], [204, 13, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern": [[204, 12, 1, "", "adjust_ratio"], [204, 12, 1, "", "check_layer_validity"], [204, 11, 1, "", "config"], [204, 12, 1, "", "get_block_size_dict"], [204, 12, 1, "", "get_masks"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_masks_local"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_single_mask_per_target_ratio"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "get_sparsity_ratio_each_layer"], [204, 11, 1, "", "invalid_layers"], [204, 11, 1, "", "is_global"], [204, 11, 1, "", "keep_mask_layers"], [204, 11, 1, "", "max_sparsity_ratio_per_op"], [204, 11, 1, "", "min_sparsity_ratio_per_op"], [204, 11, 1, "", "modules"], [204, 11, 1, "", "pattern"], [204, 12, 1, "", "reduce_tensor"], [204, 11, 1, "", "target_sparsity"], [204, 12, 1, "", "update_residual_cnt"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM": [[204, 11, 1, "", "M"], [204, 11, 1, "", "N"], [204, 12, 1, "", "check_layer_validity"], [204, 12, 1, "", "get_ele_mask_per_threshold"], [204, 12, 1, "", "get_least_ninm_mask_from_data"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "reduce_scores"], [204, 12, 1, "", "reshape_orig_to_pattern"], [204, 12, 1, "", "reshape_reduced_to_orig"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM": [[204, 11, 1, "", "block_size"], [204, 12, 1, "", "check_layer_validity"], [204, 12, 1, "", "count_new_masked_cnts"], [204, 12, 1, "", "get_block_size_dict"], [204, 12, 1, "", "get_mask_per_threshold"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "get_sparsity_ratio_progressive"], [204, 12, 1, "", "reduce_scores"], [204, 12, 1, "", "reshape_orig_to_pattern"], [204, 12, 1, "", "reshape_reduced_to_orig"], [204, 12, 1, "", "update_new_added_masks"], [204, 12, 1, "", "update_progressive_masks"], [204, 12, 1, "", "update_progressive_masks_global"], [204, 12, 1, "", "update_progressive_masks_linear"], [204, 12, 1, "", "update_progressive_masks_local"], [204, 12, 1, "", "update_progressive_masks_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[205, 13, 1, "", "check_config"], [205, 13, 1, "", "parse_not_to_prune"], [205, 13, 1, "", "parse_to_prune"], [205, 13, 1, "", "process_and_check_config"], [205, 13, 1, "", "process_config"], [205, 13, 1, "", "reset_non_value_to_default"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[206, 10, 1, "", "MagnitudePruner"], [206, 10, 1, "", "PatternLockPruner"], [206, 10, 1, "", "Pruner"], [206, 10, 1, "", "SnipMomentumPruner"], [206, 10, 1, "", "SnipPruner"], [206, 13, 1, "", "get_pruner"], [206, 13, 1, "", "register_pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.MagnitudePruner": [[206, 12, 1, "", "update_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.PatternLockPruner": [[206, 12, 1, "", "on_after_optimizer_step"], [206, 12, 1, "", "on_step_begin"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner": [[206, 12, 1, "", "check_is_pruned_step"], [206, 11, 1, "", "config"], [206, 11, 1, "", "current_sparsity_ratio"], [206, 11, 1, "", "end_step"], [206, 11, 1, "", "global_step"], [206, 12, 1, "", "mask_weights"], [206, 11, 1, "", "masks"], [206, 11, 1, "", "max_sparsity_ratio_per_layer"], [206, 11, 1, "", "modules"], [206, 12, 1, "", "on_after_eval"], [206, 12, 1, "", "on_after_optimizer_step"], [206, 12, 1, "", "on_before_eval"], [206, 12, 1, "", "on_before_optimizer_step"], [206, 12, 1, "", "on_epoch_begin"], [206, 12, 1, "", "on_epoch_end"], [206, 12, 1, "", "on_step_begin"], [206, 12, 1, "", "on_step_end"], [206, 12, 1, "", "on_train_begin"], [206, 12, 1, "", "on_train_end"], [206, 11, 1, "", "pattern"], [206, 11, 1, "", "scheduler"], [206, 11, 1, "", "scores"], [206, 11, 1, "", "start_step"], [206, 11, 1, "", "target_sparsity_ratio"], [206, 11, 1, "", "update_frequency_on_step"], [206, 12, 1, "", "update_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipMomentumPruner": [[206, 12, 1, "", "on_after_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipPruner": [[206, 12, 1, "", "on_after_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[207, 10, 1, "", "BasePruner"], [207, 10, 1, "", "BasicPruner"], [207, 10, 1, "", "PatternLockPruner"], [207, 10, 1, "", "ProgressivePruner"], [207, 13, 1, "", "get_pruner"], [207, 13, 1, "", "parse_valid_pruner_types"], [207, 13, 1, "", "register_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner": [[207, 12, 1, "", "check_is_pruned_step"], [207, 11, 1, "", "config"], [207, 11, 1, "", "current_sparsity_ratio"], [207, 11, 1, "", "end_step"], [207, 11, 1, "", "global_step"], [207, 12, 1, "", "mask_weights"], [207, 12, 1, "", "mask_weights_general"], [207, 11, 1, "", "masks"], [207, 11, 1, "", "max_sparsity_ratio_per_op"], [207, 11, 1, "", "modules"], [207, 12, 1, "", "on_after_eval"], [207, 12, 1, "", "on_after_optimizer_step"], [207, 12, 1, "", "on_before_eval"], [207, 12, 1, "", "on_before_optimizer_step"], [207, 12, 1, "", "on_epoch_begin"], [207, 12, 1, "", "on_epoch_end"], [207, 12, 1, "", "on_step_begin"], [207, 12, 1, "", "on_step_end"], [207, 12, 1, "", "on_train_begin"], [207, 12, 1, "", "on_train_end"], [207, 11, 1, "", "pattern"], [207, 11, 1, "", "pruning_frequency"], [207, 11, 1, "", "scheduler"], [207, 11, 1, "", "scores"], [207, 11, 1, "", "start_step"], [207, 11, 1, "", "target_sparsity_ratio"], [207, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner": [[207, 11, 1, "", "criterion"], [207, 12, 1, "", "on_after_optimizer_step"], [207, 12, 1, "", "on_before_optimizer_step"], [207, 11, 1, "", "pattern"], [207, 11, 1, "", "reg"], [207, 11, 1, "", "scheduler"], [207, 12, 1, "", "set_global_step"], [207, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner": [[207, 12, 1, "", "on_after_optimizer_step"], [207, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner": [[207, 12, 1, "", "check_is_pruned_progressive_step"], [207, 12, 1, "", "check_progressive_validity"], [207, 12, 1, "", "on_after_optimizer_step"], [207, 12, 1, "", "on_before_optimizer_step"], [207, 12, 1, "", "on_step_begin"], [207, 12, 1, "", "print_progressive_sparsity"], [207, 12, 1, "", "update_masks_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[208, 10, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning": [[208, 11, 1, "", "config_file_path"], [208, 12, 1, "", "get_sparsity_ratio"], [208, 11, 1, "", "model"], [208, 12, 1, "", "on_after_eval"], [208, 12, 1, "", "on_after_optimizer_step"], [208, 12, 1, "", "on_before_eval"], [208, 12, 1, "", "on_before_optimizer_step"], [208, 12, 1, "", "on_epoch_begin"], [208, 12, 1, "", "on_epoch_end"], [208, 12, 1, "", "on_step_begin"], [208, 12, 1, "", "on_step_end"], [208, 12, 1, "", "on_train_begin"], [208, 12, 1, "", "on_train_end"], [208, 11, 1, "", "pruner_info"], [208, 11, 1, "", "pruners"], [208, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[209, 10, 1, "", "BaseReg"], [209, 10, 1, "", "GroupLasso"], [209, 13, 1, "", "get_reg"], [209, 13, 1, "", "get_reg_type"], [209, 13, 1, "", "register_reg"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg": [[209, 12, 1, "", "on_after_optimizer_step"], [209, 12, 1, "", "on_before_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso": [[209, 11, 1, "", "alpha"], [209, 12, 1, "", "on_after_optimizer_step"], [209, 12, 1, "", "on_before_optimizer_step"], [209, 11, 1, "", "reg_terms"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[210, 10, 1, "", "IterativeScheduler"], [210, 10, 1, "", "OneshotScheduler"], [210, 10, 1, "", "Scheduler"], [210, 13, 1, "", "get_scheduler"], [210, 13, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.IterativeScheduler": [[210, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.OneshotScheduler": [[210, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.Scheduler": [[210, 11, 1, "", "config"], [210, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[211, 10, 1, "", "IterativeScheduler"], [211, 10, 1, "", "OneshotScheduler"], [211, 10, 1, "", "PruningScheduler"], [211, 13, 1, "", "get_scheduler"], [211, 13, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler": [[211, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler": [[211, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler": [[211, 11, 1, "", "config"], [211, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[212, 13, 1, "", "check_config"], [212, 13, 1, "", "check_key_validity"], [212, 13, 1, "", "parse_to_prune"], [212, 13, 1, "", "process_and_check_config"], [212, 13, 1, "", "process_config"], [212, 13, 1, "", "process_weight_config"], [212, 13, 1, "", "process_yaml_config"], [212, 13, 1, "", "reset_none_to_default"], [212, 13, 1, "", "update_params"]], "intel_extension_for_transformers.optimization.quantization": [[213, 10, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[214, 10, 1, "", "BaseTrainer"], [214, 10, 1, "", "NLPSeq2SeqTrainer"], [214, 10, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[214, 12, 1, "", "auto_distil_evaluation_loop"], [214, 12, 1, "", "autodistillation"], [214, 12, 1, "", "benchmark"], [214, 12, 1, "", "builtin_eval_func"], [214, 12, 1, "", "builtin_train_func"], [214, 12, 1, "", "compute_loss"], [214, 12, 1, "", "create_optimizer_builtin"], [214, 12, 1, "", "distill"], [214, 12, 1, "", "export_to_bf16_onnx"], [214, 12, 1, "", "export_to_fp32_onnx"], [214, 12, 1, "", "export_to_int8_onnx"], [214, 12, 1, "", "export_to_jit"], [214, 12, 1, "", "export_to_onnx"], [214, 12, 1, "", "init_distiller"], [214, 12, 1, "", "init_pruner"], [214, 12, 1, "", "init_quantizer"], [214, 12, 1, "", "model_builder_builtin"], [214, 12, 1, "", "nas"], [214, 12, 1, "", "orchestrate_optimizations"], [214, 12, 1, "", "prune"], [214, 12, 1, "", "quantize"], [214, 12, 1, "", "run_evolutionary_search"], [214, 12, 1, "", "set_dynamic_config"], [214, 12, 1, "", "train"], [214, 12, 1, "", "training_step"], [214, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[214, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[215, 9, 0, "-", "get_throughput"], [217, 9, 0, "-", "metrics"], [218, 9, 0, "-", "models"], [221, 9, 0, "-", "objectives"], [222, 9, 0, "-", "utility"], [223, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[217, 10, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[219, 9, 0, "-", "modeling_bert_dynamic"], [220, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[219, 10, 1, "", "BertAttention"], [219, 10, 1, "", "BertEmbeddings"], [219, 10, 1, "", "BertEncoder"], [219, 10, 1, "", "BertForMaskedLM"], [219, 10, 1, "", "BertForMultipleChoice"], [219, 10, 1, "", "BertForNextSentencePrediction"], [219, 10, 1, "", "BertForPreTraining"], [219, 10, 1, "", "BertForPreTrainingOutput"], [219, 10, 1, "", "BertForQuestionAnswering"], [219, 10, 1, "", "BertForSequenceClassification"], [219, 10, 1, "", "BertForTokenClassification"], [219, 10, 1, "", "BertIntermediate"], [219, 10, 1, "", "BertLMHeadModel"], [219, 10, 1, "", "BertLMPredictionHead"], [219, 10, 1, "", "BertLayer"], [219, 10, 1, "", "BertModel"], [219, 10, 1, "", "BertOnlyMLMHead"], [219, 10, 1, "", "BertOnlyNSPHead"], [219, 10, 1, "", "BertOutput"], [219, 10, 1, "", "BertPooler"], [219, 10, 1, "", "BertPreTrainedModel"], [219, 10, 1, "", "BertPreTrainingHeads"], [219, 10, 1, "", "BertPredictionHeadTransform"], [219, 10, 1, "", "BertSelfAttention"], [219, 10, 1, "", "BertSelfOutput"], [219, 13, 1, "", "expand_gather"], [219, 13, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[219, 12, 1, "", "forward"], [219, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[219, 12, 1, "", "forward"], [219, 12, 1, "", "get_output_embeddings"], [219, 12, 1, "", "prepare_inputs_for_generation"], [219, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[219, 12, 1, "", "forward"], [219, 12, 1, "", "get_output_embeddings"], [219, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[219, 12, 1, "", "forward"], [219, 12, 1, "", "get_output_embeddings"], [219, 12, 1, "", "prepare_inputs_for_generation"], [219, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[219, 12, 1, "", "feed_forward_chunk"], [219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[219, 12, 1, "", "forward"], [219, 12, 1, "", "get_input_embeddings"], [219, 12, 1, "", "set_input_embeddings"], [219, 12, 1, "", "set_length_config"], [219, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[219, 12, 1, "", "forward"], [219, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[219, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[220, 10, 1, "", "RobertaAttention"], [220, 10, 1, "", "RobertaClassificationHead"], [220, 10, 1, "", "RobertaEmbeddings"], [220, 10, 1, "", "RobertaEncoder"], [220, 10, 1, "", "RobertaForCausalLM"], [220, 10, 1, "", "RobertaForMaskedLM"], [220, 10, 1, "", "RobertaForMultipleChoice"], [220, 10, 1, "", "RobertaForQuestionAnswering"], [220, 10, 1, "", "RobertaForSequenceClassification"], [220, 10, 1, "", "RobertaForTokenClassification"], [220, 10, 1, "", "RobertaIntermediate"], [220, 10, 1, "", "RobertaLMHead"], [220, 10, 1, "", "RobertaLayer"], [220, 10, 1, "", "RobertaModel"], [220, 10, 1, "", "RobertaOutput"], [220, 10, 1, "", "RobertaPooler"], [220, 10, 1, "", "RobertaPreTrainedModel"], [220, 10, 1, "", "RobertaSelfAttention"], [220, 10, 1, "", "RobertaSelfOutput"], [220, 13, 1, "", "create_position_ids_from_input_ids"], [220, 13, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[220, 12, 1, "", "forward"], [220, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[220, 12, 1, "", "create_position_ids_from_inputs_embeds"], [220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[220, 12, 1, "", "forward"], [220, 12, 1, "", "get_output_embeddings"], [220, 12, 1, "", "prepare_inputs_for_generation"], [220, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[220, 12, 1, "", "forward"], [220, 12, 1, "", "get_output_embeddings"], [220, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[220, 12, 1, "", "feed_forward_chunk"], [220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[220, 12, 1, "", "forward"], [220, 12, 1, "", "get_input_embeddings"], [220, 12, 1, "", "set_input_embeddings"], [220, 12, 1, "", "set_length_config"], [220, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[220, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[220, 12, 1, "", "forward"], [220, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[220, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[221, 10, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[221, 12, 1, "", "modelsize"], [221, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[222, 13, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[223, 10, 1, "", "TFDataloader"], [223, 13, 1, "", "distributed_init"], [223, 13, 1, "", "get_filepath"], [223, 13, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[224, 9, 0, "-", "data_augmentation"], [226, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[224, 10, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[224, 12, 1, "", "data_augment"], [224, 12, 1, "", "mit_data_augmentation"], [224, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[226, 10, 1, "", "AugmenterType"], [226, 13, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[229, 10, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[229, 12, 1, "", "setUpClass"], [229, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[230, 10, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[230, 12, 1, "", "setUpClass"], [230, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[231, 10, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[231, 12, 1, "", "setUpClass"], [231, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[232, 10, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[232, 12, 1, "", "setUpClass"], [232, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[233, 10, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[233, 12, 1, "", "setUpClass"], [233, 12, 1, "", "tearDownClass"]], "test_binary_op": [[234, 10, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[234, 12, 1, "", "setUpClass"], [234, 12, 1, "", "tearDownClass"]], "test_binaryop": [[235, 10, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[235, 12, 1, "", "setUpClass"], [235, 12, 1, "", "tearDownClass"]], "test_cast_to": [[236, 10, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[236, 12, 1, "", "setUpClass"], [236, 12, 1, "", "tearDownClass"]], "test_concat": [[237, 10, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[237, 12, 1, "", "setUpClass"], [237, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[238, 10, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[238, 12, 1, "", "setUpClass"], [238, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[239, 10, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[239, 12, 1, "", "setUpClass"], [239, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[240, 10, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[240, 12, 1, "", "setUpClass"], [240, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[241, 10, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[241, 12, 1, "", "setUpClass"], [241, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[242, 10, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[242, 12, 1, "", "setUpClass"], [242, 12, 1, "", "tearDownClass"]], "test_embedding": [[243, 10, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[243, 12, 1, "", "setUpClass"], [243, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[244, 10, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[244, 12, 1, "", "setUpClass"], [244, 12, 1, "", "tearDownClass"]], "test_execution_options": [[245, 10, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[245, 12, 1, "", "setUpClass"], [245, 12, 1, "", "tearDownClass"]], "test_gelu": [[246, 10, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[246, 12, 1, "", "setUpClass"], [246, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[247, 10, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[247, 12, 1, "", "setUpClass"], [247, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[248, 10, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[248, 12, 1, "", "setUpClass"], [248, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[249, 10, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[249, 12, 1, "", "setUpClass"], [249, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[250, 10, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[250, 12, 1, "", "setUpClass"], [250, 12, 1, "", "tearDownClass"], [250, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[251, 10, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[251, 12, 1, "", "setUpClass"], [251, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[252, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[252, 12, 1, "", "setUpClass"], [252, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[253, 10, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[253, 12, 1, "", "setUpClass"], [253, 12, 1, "", "tearDownClass"]], "test_layernorm": [[254, 10, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[254, 12, 1, "", "setUpClass"], [254, 12, 1, "", "tearDownClass"]], "test_linear": [[255, 10, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[255, 12, 1, "", "setUpClass"], [255, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[256, 10, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[256, 12, 1, "", "setUpClass"], [256, 12, 1, "", "tearDownClass"]], "test_main": [[257, 10, 1, "", "TestMain"]], "test_main.TestMain": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_matmul": [[258, 10, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[259, 10, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[260, 10, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[261, 10, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[262, 10, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[263, 10, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[265, 10, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[266, 10, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_ops": [[267, 10, 1, "", "TestOps"]], "test_ops.TestOps": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[268, 10, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[269, 10, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[270, 10, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_permute": [[271, 10, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[272, 10, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_pow": [[273, 10, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[274, 10, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[275, 10, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[276, 10, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[277, 10, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[278, 10, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[279, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[280, 10, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[281, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_size": [[282, 10, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_softmax": [[283, 10, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[284, 10, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_tanh": [[285, 10, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[286, 10, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[287, 10, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[288, 10, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[289, 10, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_transpose": [[290, 10, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[291, 10, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_unet": [[292, 10, 1, "", "TestUnet"]], "test_unet.TestUnet": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[293, 10, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[294, 10, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[295, 10, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[296, 10, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[297, 10, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[298, 10, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[299, 10, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[300, 10, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:class", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:member", "6": "cpp:enumerator", "7": "cpp:enum", "8": "cpp:templateParam", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:method", "13": "py:function", "14": "py:data"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "class", "C++ class"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "member", "C++ member"], "6": ["cpp", "enumerator", "C++ enumerator"], "7": ["cpp", "enum", "C++ enum"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "method", "Python method"], "13": ["py", "function", "Python function"], "14": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 343, 350], "api_doc_exampl": 0, "modul": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "content": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 387, 392], "class": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 188, 191, 193, 194, 196, 197, 198, 200, 201, 204, 206, 207, 208, 209, 210, 211, 213, 214, 217, 219, 220, 221, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 310, 314, 315, 316, 331, 379], "function": [0, 2, 10, 14, 15, 36, 48, 100, 125, 180, 181, 184, 185, 187, 188, 199, 201, 204, 205, 206, 207, 209, 210, 211, 212, 219, 220, 222, 223, 226], "attribut": [0, 36, 100, 180, 341, 351], "backend": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 347, 352, 381], "neural_engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "compil": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 309, 356], "extractor": [3, 4, 5, 6, 7], "submodul": [4, 9, 11, 12, 36, 100, 183, 189, 190, 192, 195, 202, 216, 218, 225], "onnx_extractor": 5, "tf_extractor": 6, "torch_extractor": 7, "graph": [8, 9, 311, 352, 354, 355], "graph_util": 10, "subpackag": [11, 182, 190], "loader": [12, 13], "logger": [14, 203], "onnx_util": 15, "op": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 351, 354], "all": 16, "assert": 17, "batch_matmul": 18, "batch_matmul_v2": 19, "bias_add": 20, "binary_op": 21, "cast": 22, "concat": 23, "conv": 24, "co": 25, "empty_op": 26, "expand_dim": 27, "fused_batch_matmul_v2": 28, "fused_batch_norm_v3": 29, "fused_gemm": 30, "fused_matmul": 31, "gather": 32, "gather_el": 33, "gelu": [34, 98], "gemm": [35, 366, 367, 369, 372], "packag": [36, 100], "iterator_get_next": 37, "iterator_v2": 38, "layer_norm": [39, 110], "log_softmax": 40, "map_and_batch_dataset": 41, "matmul": [42, 368, 369, 370], "mean": [43, 364], "mkl_layer_norm": 44, "model_dataset": 45, "one_hot": 46, "onnx_input": 47, "optimize_dataset": 49, "pack": 50, "padding_sequ": [51, 124], "placehold": 52, "pos_emb": 53, "pow": 54, "quantize_linear": 55, "quantize_v2": 56, "quantized_fused_matmul_and_dequant": 57, "quantized_matmul_with_bias_and_dequant": 58, "reduce_mean": 59, "reduce_sum": 60, "reorder": [61, 366, 370, 371, 372], "reshap": 62, "rsub": 63, "scatter_el": 64, "shape": 65, "sin": 66, "size": [67, 368], "slice": 68, "softmax": [69, 376], "split": 70, "squeez": 71, "strided_slic": 72, "tensor": 73, "top_k": 74, "transpos": [75, 370, 371], "unpack": 76, "unsqueez": 77, "view": 78, "sub_graph": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "innerproductreshapefus": 79, "add_cls_token": 80, "add_embed": 81, "arangewithreciproc": 82, "attentionblock_attentionmaskaddreshap": 83, "attentionblock_constantofshapewithmul": 84, "attentionblock_qkvprereshap": 85, "attentionblock_qkvreshap": 86, "attentionblock_resize2gath": 87, "attentionblock_weightreshapeto4d": 88, "attention_mask_length_adaptive_keep_indic": 89, "attention_output_layer_norm_length_adaptive_keep_indic": 90, "attention_reshap": 91, "cast_to": 92, "collect_quant_info": 93, "conv_reshap": 94, "decoder_attn_reshap": 95, "einsumwitharang": 96, "embeddingbag": 97, "generate_sequ": 99, "innerproductwithbiasgelu": 101, "innerproductwithslic": 102, "input_data": 103, "input_fil": 104, "insert_bf16_nod": 105, "insert_quant_nod": 106, "int8_bf16_mixed_precision_check": 107, "interact_featur": 108, "last_layer_shap": 109, "layer_norm_with_reduce_mean": 111, "layer_norm_with_transpos": 112, "matmul_with_bia": 113, "matmul_with_bias_add": 114, "matmul_with_bias_gelu": 115, "matmul_with_bias_relu": 116, "matmul_with_bias_sigmoid": 117, "matmul_with_bias_tanh": 118, "matmul_with_transpos": 119, "merged_embeddingbag": 120, "multi_head_attent": 121, "operator_adaptor": 122, "output_data": 123, "pattern": [125, 204, 351, 354, 355, 359, 366, 367, 372], "position_embed": 126, "position_embeddings_v1": 127, "qkv_merg": 128, "qkv_reshap": 129, "quantize_fus": 130, "quantized_graph_dtype_refactor": 131, "remove_constant_op": 132, "remove_last_view": 133, "remove_list_construct": 134, "remove_rang": 135, "removeslic": 136, "reshape_after_restore_hidden_st": 137, "reshape_before_and_after_attention_out_layer_norm_gather_el": 138, "reshape_before_restore_hidden_st": 139, "reshape_fus": 140, "resnetblock_instancenormreshapefromconv": 141, "resnetblock_instancenormreshapefromdiv": 142, "restnetblock_groupnorm": 143, "restore_hidden_states_in_length_adaptive_update_indic": 144, "rotary_pos_emb": 145, "slicemask": 146, "stablediffusion_reshapefus": 147, "stablediffusion_bf16convert": 148, "start_end_logit": 149, "subgraph_match": 150, "textencdoer_word_embed": 151, "textencoder_attentionmaskaddreshap": 152, "textencoder_attentionreshap": 153, "textencoder_kvreshap": 154, "textencoder_mulreshap": 155, "textencoder_qreshap": 156, "textencoder_softmaxreshap": 157, "textencoder_causal_attention_mask": 158, "token_type_embed": 159, "token_type_embeddings_v1": 160, "torch_embed": 161, "torch_ip_insert_bia": 162, "torchinsertbf16nod": 163, "torchpaddingsqu": 164, "transformer2dmodel_attentionmaskaddreshap": 165, "transformer2dmodel_constantofshapewithmul": 166, "transformer2dmodel_ffnslic": 167, "transformer2dmodel_ffnslice_1": 168, "transformer2dmodel_qkvprereshap": 169, "transformer2dmodel_qkvreshap": 170, "transformer2dmodel_qkvreshape4d": 171, "transformer2dmodel_encoderhiddenstatesreshap": 172, "transformer2dmodel_getsamplebatch": 173, "transformer2dmodel_instancenormreshapefromadd": 174, "transformer2dmodel_instancenormreshapefromconcat": 175, "transformer2dmodel_sampleslic": 176, "transformer2dmodel_upblockres": 177, "transpose_batch_matmul": 178, "word_embed": 179, "tf_util": 180, "torch_util": 181, "optim": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 319, 324, 327], "benchmark": [184, 320, 332, 357, 376], "config": [185, 321, 331, 351, 354], "distil": [186, 322, 331, 345, 346, 348], "dynam": [187, 188, 189, 368, 383], "drop_and_restore_util": 187, "evolut": 188, "mixtur": [191, 192], "auto_distil": 191, "model": [193, 218, 219, 220, 302, 323, 332, 344, 347, 352, 353, 356, 357, 375, 381], "na": [194, 195, 196, 346], "basic_na": 194, "optimizer_tf": [198, 325, 331], "pipelin": [199, 326, 331, 381], "prune": [200, 208, 346, 348, 382], "pytorch_prun": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "criteria": 201, "prune_util": 205, "pruner": [206, 207], "reg": 209, "schedul": [210, 211], "util": [212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226], "quantiz": [213, 346, 348, 357, 383], "trainer": [214, 328, 331, 345, 382, 383], "get_throughput": 215, "metric": [217, 345, 379, 382, 383], "modeling_bert_dynam": 219, "modeling_roberta_dynam": 220, "object": [221, 380, 383], "utility_tf": 223, "preprocess": [224, 225, 226, 368], "data_augment": 224, "version": [227, 350], "sparsity_al": 228, "test_add_cls_token": 229, "test_add_embed": 230, "test_attention_output_layer_norm_length_adaptive_keep_indic": 231, "test_attention_reshap": 232, "test_bert_mini_fp32": 233, "test_binary_op": 234, "test_binaryop": 235, "test_cast_to": 236, "test_concat": 237, "test_conv_reshap": 238, "test_decoder_attn_reshap": 239, "test_dispatcher_tuning_acc": 240, "test_dispatcher_tuning_throughput": 241, "test_dynamic_quant": 242, "test_embed": 243, "test_embeddingbag": 244, "test_execution_opt": 245, "test_gelu": 246, "test_gpt_int8": 247, "test_graph_dispatch": 248, "test_insert_input_output_data": 249, "test_is_supported_onnx_graph": 250, "test_last_layer_shap": 251, "test_layer_norm_with_reduce_mean": 252, "test_layer_norm_with_transpos": 253, "test_layernorm": 254, "test_linear": 255, "test_linear_int8": 256, "test_main": 257, "test_matmul": 258, "test_matmul_int8": 259, "test_matmul_with_bias_relu": 260, "test_matmul_with_bias_sigmoid": 261, "test_matmul_with_bias_tanh": 262, "test_merged_embeddingbag": 263, "test_model": 264, "test_onnx_util": 265, "test_operator_adaptor": 266, "test_op": 267, "test_padding_seq": 268, "test_padding_sequ": 269, "test_pattern_dispatch": 270, "test_permut": 271, "test_position_embed": 272, "test_pow": 273, "test_primitive_cache_acc": 274, "test_primitive_cache_throughput": 275, "test_qkv_merg": 276, "test_qkv_reshap": 277, "test_quant_onnx_execut": 278, "test_reshape_after_restore_hidden_st": 279, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 280, "test_reshape_before_restore_hidden_st": 281, "test_siz": 282, "test_softmax": 283, "test_start_end_logit": 284, "test_tanh": 285, "test_text_encod": 286, "test_text_encoder_bf16": 287, "test_tf_util": 288, "test_token_type_embed": 289, "test_transpos": 290, "test_transpose_batch_matmul": 291, "test_unet": 292, "test_unet_bf16": 293, "test_unsqueez": 294, "test_vae_decod": 295, "test_vae_decoder_bf16": 296, "test_weight_sharing_acc": 297, "test_weight_sharing_dispatcher_tuning_acc": 298, "test_weight_sharing_dispatcher_tuning_throughtput": 299, "test_weight_sharing_throughput": 300, "secur": 301, "polici": 301, "report": 301, "vulner": 301, "intel": [302, 330, 335, 344, 346, 388], "extens": [302, 330, 335, 344, 346, 388], "transform": [302, 330, 335, 344, 346, 348, 361, 388], "acceler": [302, 348, 361, 365], "base": [302, 346], "platform": [302, 360, 374], "select": 302, "public": 302, "event": 302, "api": [303, 304, 305, 306, 307, 308, 312, 313, 318, 319, 329, 331, 332, 347, 353, 361], "c": [304, 307, 313, 353], "python": [305, 308, 353], "document": [306, 335, 388], "exampl": [306, 331, 332, 333, 346, 347, 353, 356, 376, 380, 381, 386], "dispatch": [310, 354], "engin": [312, 314, 339, 346, 348, 350, 352, 354, 356, 357, 360, 392], "kernel": [313, 315, 318, 336, 354, 361, 365, 368, 376, 389], "operator_desc": [316, 363, 364], "oper": [317, 353, 358], "specif": 317, "type": [317, 351, 382], "pytorch": [324, 331, 332, 345, 346], "tensorflow": [327, 331, 345, 346], "user": [329, 340, 361, 363, 364, 385, 393], "face": 329, "architectur": [330, 352], "autodistil": 331, "design": [331, 357], "framework": [331, 363, 364], "criterion": [331, 345], "knowledgedistillationloss": 331, "intermediatelayersknowledgedistillationloss": 331, "usag": [331, 345, 347, 363, 364, 376, 382], "flash": 331, "regular": 331, "introduct": [332, 343, 345, 347, 351, 353, 354, 355, 356, 359, 361, 363, 364, 365, 366, 370, 375, 379, 380, 381, 382, 383], "get": [332, 343, 344, 348, 353, 357, 379, 383], "start": [332, 343, 344, 348, 379, 383], "stock": [332, 346], "ipex": [332, 346], "output": [332, 344], "featur": [334, 363, 364, 383, 387], "welcom": [335, 388], "section": [335, 388], "implement": [337, 390], "detail": [337, 368, 371, 390], "perform": [338, 360, 361, 373, 374, 391], "neural": [339, 346, 348, 350, 352, 360, 392], "guid": [340, 385, 393], "contributor": [341, 342], "coven": [341, 342], "code": [341, 342], "conduct": [341, 342], "our": 341, "pledg": 341, "standard": 341, "respons": 341, "scope": 341, "enforc": 341, "contribut": 342, "guidelin": 342, "pull": 342, "request": 342, "checklist": 342, "templat": 342, "support": [342, 343, 344, 347, 356, 360, 361, 379, 380, 383], "data": [343, 367, 374], "augment": 343, "instal": [343, 344, 349, 350, 357, 361], "depend": 343, "script": [343, 345, 382, 383], "paramet": 343, "text": 343, "gener": [343, 352], "argument": 343, "overview": 344, "recommend": 344, "hardwar": [344, 349], "valid": [344, 349, 374], "environ": [344, 349, 357], "how": [344, 354, 375], "work": [344, 365], "1": [344, 352, 353, 357, 358, 375], "prerequisit": [344, 349, 350, 357, 368], "2": [344, 352, 357, 358, 375], "from": [344, 349, 350], "pypi": [344, 349], "conda": 344, "3": [344, 352, 375], "sourc": [344, 349], "To": [344, 357], "run": [344, 352, 353, 357, 375], "requir": [344, 349], "prepar": [344, 356, 357, 375], "dataset": [344, 357], "compress": 344, "4": [344, 352, 374], "infer": [344, 352, 362, 381], "expect": 344, "summari": [344, 379], "next": 344, "step": 344, "learn": 344, "more": [344, 354, 365], "knowledg": [345, 346], "intermedi": 345, "layer": [345, 369], "creat": [345, 355, 382, 383], "an": [345, 356, 382, 383], "instanc": [345, 382, 383], "option": [345, 354, 382, 383], "distillationconfig": 345, "length": [346, 348], "adapt": [346, 348], "auto": 346, "orchestr": 346, "refer": [346, 361], "deploy": 346, "dens": [346, 365], "spars": [346, 353, 365, 366, 367, 369, 372, 375], "export": 347, "onnx": [347, 352, 356, 357], "matrix": [347, 360, 361, 368, 380, 383], "fp32": 347, "bf16": 347, "int8": [347, 357, 381], "For": [347, 376], "executor": [347, 358, 381], "linux": 349, "window": 349, "system": 349, "softwar": 349, "stabl": 350, "pip": 350, "binari": [350, 352, 363], "deploi": [350, 352], "bare": 350, "metal": 350, "add": [351, 358], "custom": [351, 352, 358], "regist": [351, 358], "node": [351, 355], "set": [351, 353], "map": [351, 355], "fuse": 351, "new": [351, 355], "after": 351, "fusion": [351, 355], "integr": 352, "tf": 352, "us": [352, 368], "through": 352, "manual": 352, "yaml": 352, "weight": [352, 368, 375], "build": [352, 361, 376], "profil": [353, 373], "profl": 353, "you": 353, "can": 353, "onli": 353, "engine_profil": 353, "befor": 353, "part": 353, "csv": 353, "ratio": 353, "total": 353, "level": 353, "json": 353, "iter": 353, "tune": [354, 357, 383], "best": 354, "relat": 354, "runtim": 354, "turn": 354, "mechan": 354, "dict": 355, "obtain": 355, "necessari": 355, "inform": [355, 378], "construct": 355, "establish": 355, "connect": 355, "remov": [355, 359], "old": 355, "insert": 355, "ir": [356, 357], "format": [356, 367, 377], "low": 357, "precis": 357, "its": 357, "accuraci": [357, 383], "h": 358, "includ": 358, "cpp": 358, "src": 358, "recogn": 359, "represent": 359, "pars": 359, "list": [359, 382], "search": 359, "each": 359, "straight": 359, "chain": 359, "splice": 359, "sub": 359, "main": 359, "duplic": 359, "result": [359, 375], "configur": [360, 374], "librari": 361, "test": 361, "sparse_matmul": [361, 376], "3d": 362, "memori": 362, "layout": 362, "spmm_vnni": [362, 376], "cach": 362, "issu": 362, "injector": [363, 364], "param_typ": [363, 364], "hpp": [363, 364], "jit_binaryop_injector": 363, "develop": [363, 364, 376], "": [363, 364], "perspect": [363, 364], "element": 364, "wise": 364, "alpha": 364, "beta": 364, "scale": 364, "jit_eltwise_injector": 364, "naiv": 365, "tile": 365, "effici": 365, "per": 365, "thread": [365, 374], "prefetch": 365, "amx": 366, "brief": 366, "isa": 366, "avx512f": 367, "kei": 367, "instruct": 367, "loop": 367, "quant": 368, "problem": [368, 369, 370, 371], "descript": [368, 369, 371], "differ": 368, "jit": 368, "path": 368, "small_wei": 368, "large_wei": 368, "normal": 369, "layernorm": 369, "pre": 369, "comput": 369, "spmm": 369, "direct": 369, "layernorm_ba": [369, 376], "statement": 370, "matmul_p2031_2013": 370, "matmul_avx512f_p2031_p2013": [370, 376], "matmul_noperm_p2031_p1302": 370, "matmul_vnni_noperm_p2013_p1302": 370, "beforehand": 370, "mha": [371, 376], "calcul": 371, "vnni": 372, "On": 372, "fly": 372, "activ": 372, "candid": 372, "verbos": 373, "vtune": 373, "sde": 373, "singl": 374, "multi": 374, "visual": 375, "distribut": 375, "setup": 375, "below": 375, "command": 375, "analysi": 375, "spmm_avx512f": 376, "spmm_amx_bf16_x16": 376, "eltwiseop": 376, "transpose_matmul": 376, "matmul_vnni_noperm_p2031_p1302": 376, "attent": 376, "static": [376, 383], "dynamic_quant_matmul": 376, "dynamic_qu": 376, "input": 377, "legal": 378, "licens": 378, "citat": 378, "trademark": 378, "prunerconfig": 382, "pruningconfig": 382, "fundament": 383, "approach": 383, "post": 383, "train": 383, "awar": 383, "quantizationconfig": 383, "releas": 384, "note": 384}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [191, "module-contents"], [193, "module-contents"], [194, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [200, "module-contents"], [201, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [207, "module-contents"], [208, "module-contents"], [209, "module-contents"], [210, "module-contents"], [211, "module-contents"], [212, "module-contents"], [213, "module-contents"], [214, "module-contents"], [217, "module-contents"], [219, "module-contents"], [220, "module-contents"], [221, "module-contents"], [222, "module-contents"], [223, "module-contents"], [224, "module-contents"], [226, "module-contents"], [229, "module-contents"], [230, "module-contents"], [231, "module-contents"], [232, "module-contents"], [233, "module-contents"], [234, "module-contents"], [235, "module-contents"], [236, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [241, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [247, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [185, "classes"], [186, "classes"], [188, "classes"], [191, "classes"], [193, "classes"], [194, "classes"], [196, "classes"], [197, "classes"], [198, "classes"], [200, "classes"], [201, "classes"], [204, "classes"], [206, "classes"], [207, "classes"], [208, "classes"], [209, "classes"], [210, "classes"], [211, "classes"], [213, "classes"], [214, "classes"], [217, "classes"], [219, "classes"], [220, "classes"], [221, "classes"], [223, "classes"], [224, "classes"], [226, "classes"], [229, "classes"], [230, "classes"], [231, "classes"], [232, "classes"], [233, "classes"], [234, "classes"], [235, "classes"], [236, "classes"], [237, "classes"], [238, "classes"], [239, "classes"], [240, "classes"], [241, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [247, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [254, "classes"], [255, "classes"], [256, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [10, "functions"], [14, "functions"], [15, "functions"], [36, "functions"], [48, "functions"], [100, "functions"], [125, "functions"], [180, "functions"], [181, "functions"], [184, "functions"], [185, "functions"], [187, "functions"], [188, "functions"], [199, "functions"], [201, "functions"], [204, "functions"], [205, "functions"], [206, "functions"], [207, "functions"], [209, "functions"], [210, "functions"], [211, "functions"], [212, "functions"], [219, "functions"], [220, "functions"], [222, "functions"], [223, "functions"], [226, "functions"]], "Attributes": [[0, "attributes"], [36, "attributes"], [100, "attributes"], [180, "attributes"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [36, "submodules"], [100, "submodules"], [183, "submodules"], [189, "submodules"], [190, "submodules"], [192, "submodules"], [195, "submodules"], [202, "submodules"], [216, "submodules"], [218, "submodules"], [225, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[11, "subpackages"], [182, "subpackages"], [190, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[36, "package-contents"], [100, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[182, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[183, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[184, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[185, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[186, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[189, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[190, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[192, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[193, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[195, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[197, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[199, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[200, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[210, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[211, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "intel_extension_for_transformers.optimization.quantization": [[213, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[214, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[215, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[216, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[217, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[218, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[219, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[220, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[221, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[222, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[223, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[224, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[225, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[226, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[227, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[228, "module-sparsity_all"]], "test_add_cls_token": [[229, "module-test_add_cls_token"]], "test_add_embeddings": [[230, "module-test_add_embeddings"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[231, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[232, "module-test_attention_reshape"]], "test_bert_mini_fp32": [[233, "module-test_bert_mini_fp32"]], "test_binary_op": [[234, "module-test_binary_op"]], "test_binaryop": [[235, "module-test_binaryop"]], "test_cast_to": [[236, "module-test_cast_to"]], "test_concat": [[237, "module-test_concat"]], "test_conv_reshape": [[238, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[239, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[240, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[241, "module-test_dispatcher_tuning_throughput"]], "test_dynamic_quantization": [[242, "module-test_dynamic_quantization"]], "test_embedding": [[243, "module-test_embedding"]], "test_embeddingbag": [[244, "module-test_embeddingbag"]], "test_execution_options": [[245, "module-test_execution_options"]], "test_gelu": [[246, "module-test_gelu"]], "test_gpt_int8": [[247, "module-test_gpt_int8"]], "test_graph_dispatch": [[248, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[249, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[250, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[251, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[252, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[253, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[254, "module-test_layernorm"]], "test_linear": [[255, "module-test_linear"]], "test_linear_int8": [[256, "module-test_linear_int8"]], "test_main": [[257, "module-test_main"]], "test_matmul": [[258, "module-test_matmul"]], "test_matmul_int8": [[259, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[260, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[261, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[262, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[263, "module-test_merged_embeddingbag"]], "test_model": [[264, "module-test_model"]], "test_onnx_utils": [[265, "module-test_onnx_utils"]], "test_operator_adaptor": [[266, "module-test_operator_adaptor"]], "test_ops": [[267, "module-test_ops"]], "test_padding_seq": [[268, "module-test_padding_seq"]], "test_padding_sequence": [[269, "module-test_padding_sequence"]], "test_pattern_dispatch": [[270, "module-test_pattern_dispatch"]], "test_permute": [[271, "module-test_permute"]], "test_position_embeddings": [[272, "module-test_position_embeddings"]], "test_pow": [[273, "module-test_pow"]], "test_primitive_cache_acc": [[274, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[275, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[276, "module-test_qkv_merge"]], "test_qkv_reshape": [[277, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[278, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[279, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[280, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[281, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[282, "module-test_size"]], "test_softmax": [[283, "module-test_softmax"]], "test_start_end_logits": [[284, "module-test_start_end_logits"]], "test_tanh": [[285, "module-test_tanh"]], "test_text_encoder": [[286, "module-test_text_encoder"]], "test_text_encoder_bf16": [[287, "module-test_text_encoder_bf16"]], "test_tf_utils": [[288, "module-test_tf_utils"]], "test_token_type_embeddings": [[289, "module-test_token_type_embeddings"]], "test_transpose": [[290, "module-test_transpose"]], "test_transpose_batch_matmul": [[291, "module-test_transpose_batch_matmul"]], "test_unet": [[292, "module-test_unet"]], "test_unet_bf16": [[293, "module-test_unet_bf16"]], "test_unsqueeze": [[294, "module-test_unsqueeze"]], "test_vae_decoder": [[295, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[296, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[297, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[298, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[299, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[300, "module-test_weight_sharing_throughput"]], "Security Policy": [[301, "security-policy"]], "Report a Vulnerability": [[301, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[302, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[302, "selected-publications-events"]], "API": [[303, "api"]], "C++ APIs": [[304, "c-apis"], [307, "c-apis"]], "Python APIs": [[305, "python-apis"], [308, "python-apis"]], "API Document Example": [[306, "api-document-example"]], "Compile": [[309, "compile"]], "Class dispatcher": [[310, "class-dispatcher"]], "Graph": [[311, "graph"]], "Engine API": [[312, "engine-api"]], "Kernels C++ APIs": [[313, "kernels-c-apis"]], "Class engine": [[314, "class-engine"]], "Class Kernel": [[315, "class-kernel"]], "Class operator_desc": [[316, "class-operator-desc"]], "Operator Specific Types": [[317, "operator-specific-types"]], "Kernel APIs": [[318, "kernel-apis"]], "Optimization APIs": [[319, "optimization-apis"]], "Benchmark": [[320, "benchmark"], [332, "benchmark"]], "Config": [[321, "config"]], "Distillation": [[322, "distillation"], [345, "distillation"], [345, "id1"], [346, "distillation"], [348, "distillation"]], "Model": [[323, "model"]], "PyTorch Optimizer": [[324, "pytorch-optimizer"]], "Optimizer_tf": [[325, "optimizer-tf"]], "Pipeline": [[326, "pipeline"], [381, "pipeline"]], "TensorFlow Optimizer": [[327, "tensorflow-optimizer"]], "Trainer": [[328, "trainer"]], "User-facing API": [[329, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[330, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[331, "autodistillation-design"]], "AutoDistillation Pipeline": [[331, "autodistillation-pipeline"]], "Framework Class Design": [[331, "framework-class-design"]], "Criterion Class Design": [[331, "criterion-class-design"]], "KnowledgeDistillationLoss": [[331, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[331, "intermediatelayersknowledgedistillationloss"]], "Usage": [[331, "usage"], [363, "usage"], [364, "usage"], [376, "usage"], [382, "usage"]], "Pytorch": [[331, "pytorch"]], "AutoDistillation API in Trainer": [[331, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[331, "flash-distillation-config-example"]], "Regular distillation config example": [[331, "regular-distillation-config-example"]], "AutoDistillation config example": [[331, "autodistillation-config-example"], [331, "id1"]], "Tensorflow": [[331, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[331, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[331, "distillation-config-example"]], "Introduction": [[332, "introduction"], [343, "introduction"], [345, "introduction"], [347, "introduction"], [351, "introduction"], [353, "introduction"], [354, "introduction"], [355, "introduction"], [356, "introduction"], [359, "introduction"], [361, "introduction"], [363, "introduction"], [364, "introduction"], [365, "introduction"], [370, "introduction"], [375, "introduction"], [379, "introduction"], [380, "introduction"], [381, "introduction"], [382, "introduction"], [383, "introduction"]], "Get Started with Benchmark API": [[332, "get-started-with-benchmark-api"]], "Examples": [[332, "examples"], [346, "examples"], [347, "examples"], [376, "examples"], [376, "id1"], [376, "id2"], [376, "id3"], [376, "id4"], [376, "id5"], [376, "id6"], [376, "id7"], [376, "id8"], [376, "id9"], [376, "id10"], [376, "id11"], [381, "examples"]], "Stock Pytorch Model": [[332, "stock-pytorch-model"]], "IPEX Model": [[332, "ipex-model"]], "Benchmark Output": [[332, "benchmark-output"]], "Example": [[333, "example"], [386, "example"]], "Features": [[334, "features"], [387, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[335, "welcome-to-intel-extension-for-transformers-documentation"], [388, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[335, "sections"], [388, "sections"]], "Kernels": [[336, "kernels"], [389, "kernels"]], "Implementation Details": [[337, "implementation-details"], [390, "implementation-details"]], "Performance": [[338, "performance"], [360, "performance"], [361, "performance"], [391, "performance"]], "Neural Engine": [[339, "neural-engine"], [392, "neural-engine"]], "User Guide": [[340, "user-guide"], [385, "user-guide"], [393, "user-guide"]], "Contributor Covenant Code of Conduct": [[341, "contributor-covenant-code-of-conduct"], [342, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[341, "our-pledge"]], "Our Standards": [[341, "our-standards"]], "Our Responsibilities": [[341, "our-responsibilities"]], "Scope": [[341, "scope"]], "Enforcement": [[341, "enforcement"]], "Attribution": [[341, "attribution"]], "Contribution Guidelines": [[342, "contribution-guidelines"]], "Pull Request Checklist": [[342, "pull-request-checklist"]], "Pull Request Template": [[342, "pull-request-template"]], "Support": [[342, "support"], [344, "support"]], "Data Augmentation": [[343, "data-augmentation"], [343, "id1"]], "Getting Started": [[343, "getting-started"], [348, "getting-started"]], "Install Dependency": [[343, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[343, "install-intel-extension-for-transformers"]], "Script": [[343, "script"]], "Parameters of Data Augmentation": [[343, "parameters-of-data-augmentation"]], "Supported Augmenter": [[343, "supported-augmenter"]], "Text Generation Augmenter": [[343, "text-generation-augmenter"]], "Augmenter Arguments:": [[343, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[344, "intel-extension-for-transformers"]], "Overview": [[344, "overview"]], "Recommended Hardware": [[344, "recommended-hardware"]], "Validated Hardware Environment": [[344, "validated-hardware-environment"], [349, "validated-hardware-environment"]], "How it Works": [[344, "how-it-works"]], "Get Started": [[344, "get-started"], [383, "get-started"]], "1. Prerequisites": [[344, "prerequisites"]], "2. Installation": [[344, "installation"]], "2.1 Install from PyPi": [[344, "install-from-pypi"]], "2.2 Install from Conda": [[344, "install-from-conda"]], "2.3 Install from Source": [[344, "install-from-source"]], "3. How To Run": [[344, "how-to-run"]], "3.1 Install Requirements": [[344, "install-requirements"]], "3.2 Prepare Datasets": [[344, "prepare-datasets"]], "3.3 Model Compression": [[344, "model-compression"]], "3.4 Model Inference": [[344, "model-inference"]], "Expected Output": [[344, "expected-output"]], "Summary and Next Steps": [[344, "summary-and-next-steps"]], "Learn More": [[344, "learn-more"]], "Knowledge Distillation": [[345, "knowledge-distillation"], [346, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[345, "intermediate-layer-knowledge-distillation"]], "usage": [[345, "usage"]], "Pytorch Script:": [[345, "pytorch-script"]], "Tensorflow Script:": [[345, "tensorflow-script"]], "Create an Instance of Metric": [[345, "create-an-instance-of-metric"], [383, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[345, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[345, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[345, "distill-with-trainer"]], "Quantization": [[346, "quantization"], [348, "quantization"], [383, "quantization"]], "Stock PyTorch Examples": [[346, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[346, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[346, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[346, "length-adaptive-transformers"]], "Pruning": [[346, "pruning"], [348, "pruning"], [382, "pruning"]], "Auto Distillation (NAS Based)": [[346, "auto-distillation-nas-based"]], "Orchestrate": [[346, "orchestrate"]], "Reference Deployment on Neural Engine": [[346, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[346, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[346, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[347, "export-to-onnx"]], "Supported Model Export Matrix": [[347, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[347, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[347, "export-to-bf16-onnx-model"]], "API usage": [[347, "api-usage"]], "Export to INT8 ONNX Model": [[347, "export-to-int8-onnx-model"]], "For executor backend": [[347, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[348, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[348, "transformers-accelerated-neural-engine"]], "Installation": [[349, "installation"], [350, "installation"], [361, "installation"]], "Linux Installation": [[349, "linux-installation"]], "Prerequisites": [[349, "prerequisites"], [349, "id1"], [350, "prerequisites"]], "Install from Pypi": [[349, "install-from-pypi"], [349, "id2"]], "Install from Source": [[349, "install-from-source"], [349, "id3"]], "Windows Installation": [[349, "windows-installation"]], "System Requirements": [[349, "system-requirements"]], "Validated Software Environment": [[349, "validated-software-environment"]], "Install": [[350, "install"]], "Install stable version intel_extension_for_transformers from pip": [[350, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[350, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[351, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[351, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[351, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[351, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[352, "deploy-and-integration"]], "1. Architecture": [[352, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[352, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[352, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[352, "run-the-inference-by-engine"], [352, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[352, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[352, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[352, "integrate-neural-engine-as-backend"]], "Profiling": [[353, "profiling"]], "Profling API": [[353, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[353, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[353, "profiling-examples"]], "Parts of CSV Profiling": [[353, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[353, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[353, "operator-profiling-part"]], "Total Profiling Part": [[353, "total-profiling-part"]], "Levels of JSON Profiling": [[353, "levels-of-json-profiling"]], "Model Level": [[353, "model-level"]], "Iteration Level": [[353, "iteration-level"]], "Operator Level": [[353, "operator-level"]], "Engine Tuning": [[354, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[354, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[354, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[354, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[354, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[354, "more-tuning-options"]], "Graph Fusion": [[355, "graph-fusion"]], "Pattern Mapping Dict": [[355, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[355, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[355, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[355, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[356, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[356, "supported-onnx-format"]], "Compile Examples": [[356, "compile-examples"]], "Prepare ONNX Model": [[356, "prepare-onnx-model"]], "Compile to IR": [[356, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[357, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[357, "design"]], "Prerequisite": [[357, "prerequisite"]], "Install environment": [[357, "install-environment"]], "Prepare Dataset": [[357, "prepare-dataset"]], "Prepare ONNX model": [[357, "prepare-onnx-model"]], "Run tuning and benchmark": [[357, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[357, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[357, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[358, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[358, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[358, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[359, "pattern-recognize"]], "Pattern Representation": [[359, "pattern-representation"]], "Parse Pattern Representation List": [[359, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[359, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[359, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Neural Engine Support Matrix": [[360, "neural-engine-support-matrix"]], "platform configuration": [[360, "platform-configuration"]], "Transformers-Accelerated Libraries": [[361, "transformers-accelerated-libraries"]], "Build": [[361, "build"], [376, "build"]], "Test": [[361, "test"]], "API reference for users": [[361, "api-reference-for-users"]], "sparse_matmul kernel:": [[361, "sparse-matmul-kernel"]], "Supported Matrix": [[361, "supported-matrix"]], "3D Inference": [[362, "d-inference"]], "Memory Layout in SPMM_VNNI": [[362, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[362, "cache-issues"]], "SPMM_VNNI 3D Inference": [[362, "spmm-vnni-3d-inference"]], "Binary Injectors": [[363, "binary-injectors"]], "Framework Features": [[363, "framework-features"], [364, "framework-features"]], "param_type.hpp": [[363, "param-type-hpp"]], "operator_desc.hpp": [[363, "operator-desc-hpp"], [364, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[363, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[363, "developer-s-perspective"]], "User\u2019s Perspective": [[363, "user-s-perspective"], [364, "user-s-perspective"]], "Element-wise Injector": [[364, "element-wise-injector"]], "param_types.hpp": [[364, "param-types-hpp"]], "alpha,beta,scale meaning": [[364, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[364, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[364, "developer-s-perspective"]], "Dense and Sparse": [[365, "dense-and-sparse"]], "Naive": [[365, "naive"]], "Tile": [[365, "tile"]], "Efficient kernel": [[365, "efficient-kernel"]], "More work per thread": [[365, "more-work-per-thread"]], "Prefetch": [[365, "prefetch"]], "Sparse acceleration": [[365, "sparse-acceleration"]], "Sparse GEMM AMX": [[366, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[366, "brief-introduction-for-isas"]], "Pattern": [[366, "pattern"]], "Reorder": [[366, "reorder"]], "Sparse GEMM AVX512F": [[367, "sparse-gemm-avx512f"]], "Key Instruction": [[367, "key-instruction"]], "Sparse Pattern & Data Format": [[367, "sparse-pattern-data-format"]], "Loops": [[367, "loops"]], "Dynamic Quant Matmul": [[368, "dynamic-quant-matmul"]], "problem description": [[368, "problem-description"]], "Kernel details": [[368, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[368, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[368, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[368, "different-jit-paths-for-different-weight-size"]], "small_wei jit-path": [[368, "small-wei-jit-path"]], "large_wei jit-path": [[368, "large-wei-jit-path"]], "Sparse GEMM with Layer-Normalize": [[369, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[369, "problem-description"]], "layernormalized sparse matmul": [[369, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[369, "pre-compute-spmm"]], "Direct Layernorm_ba": [[369, "direct-layernorm-ba"]], "Transposed MatMul": [[370, "transposed-matmul"]], "Problem Statements": [[370, "problem-statements"]], "Matmul_p2031_2013": [[370, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[370, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[370, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[370, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[370, "reorder-beforehand"]], "Transposed MHA": [[371, "transposed-mha"]], "Problem description": [[371, "problem-description"]], "Details": [[371, "details"]], "Reordering": [[371, "reordering"]], "Calculation": [[371, "calculation"]], "Sparse GEMM VNNI": [[372, "sparse-gemm-vnni"]], "On the fly activation reordering": [[372, "on-the-fly-activation-reordering"]], "Candidate patterns": [[372, "candidate-patterns"]], "Performance and Profiling": [[373, "performance-and-profiling"]], "Verbose": [[373, "verbose"]], "VTune": [[373, "vtune"]], "SDE": [[373, "sde"]], "Validated Performance Data": [[374, "validated-performance-data"]], "Single Thread": [[374, "single-thread"]], "Multi Thread (Thread = 4)": [[374, "multi-thread-thread-4"]], "Platform Configuration": [[374, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[375, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[375, "setups"]], "1. Prepare the sparse model": [[375, "prepare-the-sparse-model"]], "2. Run below commands": [[375, "run-below-commands"]], "3. Analysis results": [[375, "analysis-results"]], "Benchmark for Kernels": [[376, "benchmark-for-kernels"]], "sparse_matmul": [[376, "sparse-matmul"]], "spmm_avx512f": [[376, "spmm-avx512f"]], "spmm_vnni": [[376, "spmm-vnni"]], "spmm_amx_bf16_x16": [[376, "spmm-amx-bf16-x16"]], "eltwiseop": [[376, "eltwiseop"]], "layernorm_ba": [[376, "layernorm-ba"]], "transpose_matmul": [[376, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[376, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[376, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[376, "softmax"]], "attention": [[376, "attention"]], "Static MHA": [[376, "static-mha"]], "dynamic_quant_matmul": [[376, "dynamic-quant-matmul"]], "dynamic_quant": [[376, "dynamic-quant"]], "For developers": [[376, "for-developers"]], "Inputs format": [[377, "inputs-format"]], "Legal Information": [[378, "legal-information"]], "License": [[378, "license"]], "Citation": [[378, "citation"]], "Trademarks": [[378, "trademarks"]], "Metrics": [[379, "metrics"]], "Supported Metric": [[379, "supported-metric"]], "Metric Class Summary": [[379, "metric-class-summary"]], "Get Start with Metrics": [[379, "get-start-with-metrics"]], "Objective": [[380, "objective"]], "Supported Objectives Matrix:": [[380, "supported-objectives-matrix"]], "Examples:": [[380, "examples"]], "Pipeline Inference for INT8 Model": [[381, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[381, "pipeline-inference-for-executor-backend"]], "Pruning types": [[382, "pruning-types"]], "Script:": [[382, "script"], [383, "script"]], "Create an instance of Metric": [[382, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[382, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[382, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[382, "prune-with-trainer"]], "Quantization Fundamentals": [[383, "quantization-fundamentals"]], "Quantization Approach": [[383, "quantization-approach"]], "Post Training Dynamic Quantization": [[383, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[383, "post-training-static-quantization"]], "Quantization Aware Training": [[383, "quantization-aware-training"]], "Accuracy Aware Tuning": [[383, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[383, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[383, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[383, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[383, "quantization-with-trainer"]], "Release": [[384, "release"]], "Release Notes": [[384, "release-notes"]], "Contents:": [[387, null], [392, null]]}, "indexentries": {"exampleclass (class in intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass"]], "attr1 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr1"]], "attr2 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr2"]], "attr5 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr5"]], "attribute1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.attribute1"]], "function1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function1"]], "function2() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function2"]], "function3() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function3"]], "generator1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.generator1"]], "intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "method1() (intel_extension_for_transformers.api_doc_example.exampleclass method)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.method1"]], "module": [[0, "module-intel_extension_for_transformers.api_doc_example"], [1, "module-intel_extension_for_transformers.backends"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [182, "module-intel_extension_for_transformers.backends.neural_engine"], [183, "module-intel_extension_for_transformers"], [184, "module-intel_extension_for_transformers.optimization.benchmark"], [185, "module-intel_extension_for_transformers.optimization.config"], [186, "module-intel_extension_for_transformers.optimization.distillation"], [187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [189, "module-intel_extension_for_transformers.optimization.dynamic"], [190, "module-intel_extension_for_transformers.optimization"], [191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [192, "module-intel_extension_for_transformers.optimization.mixture"], [193, "module-intel_extension_for_transformers.optimization.model"], [194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [195, "module-intel_extension_for_transformers.optimization.nas"], [196, "module-intel_extension_for_transformers.optimization.nas.nas"], [197, "module-intel_extension_for_transformers.optimization.optimizer"], [198, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [199, "module-intel_extension_for_transformers.optimization.pipeline"], [200, "module-intel_extension_for_transformers.optimization.pruning"], [201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"], [202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"], [204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"], [206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"], [207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"], [208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"], [210, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"], [211, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"], [212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"], [213, "module-intel_extension_for_transformers.optimization.quantization"], [214, "module-intel_extension_for_transformers.optimization.trainer"], [215, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [216, "module-intel_extension_for_transformers.optimization.utils"], [217, "module-intel_extension_for_transformers.optimization.utils.metrics"], [218, "module-intel_extension_for_transformers.optimization.utils.models"], [219, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [220, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [221, "module-intel_extension_for_transformers.optimization.utils.objectives"], [222, "module-intel_extension_for_transformers.optimization.utils.utility"], [223, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [224, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [225, "module-intel_extension_for_transformers.preprocessing"], [226, "module-intel_extension_for_transformers.preprocessing.utils"], [227, "module-intel_extension_for_transformers.version"], [228, "module-sparsity_all"], [229, "module-test_add_cls_token"], [230, "module-test_add_embeddings"], [231, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [232, "module-test_attention_reshape"], [233, "module-test_bert_mini_fp32"], [234, "module-test_binary_op"], [235, "module-test_binaryop"], [236, "module-test_cast_to"], [237, "module-test_concat"], [238, "module-test_conv_reshape"], [239, "module-test_decoder_attn_reshape"], [240, "module-test_dispatcher_tuning_acc"], [241, "module-test_dispatcher_tuning_throughput"], [242, "module-test_dynamic_quantization"], [243, "module-test_embedding"], [244, "module-test_embeddingbag"], [245, "module-test_execution_options"], [246, "module-test_gelu"], [247, "module-test_gpt_int8"], [248, "module-test_graph_dispatch"], [249, "module-test_insert_input_output_data"], [250, "module-test_is_supported_onnx_graph"], [251, "module-test_last_layer_shape"], [252, "module-test_layer_norm_with_reduce_mean"], [253, "module-test_layer_norm_with_transpose"], [254, "module-test_layernorm"], [255, "module-test_linear"], [256, "module-test_linear_int8"], [257, "module-test_main"], [258, "module-test_matmul"], [259, "module-test_matmul_int8"], [260, "module-test_matmul_with_bias_relu"], [261, "module-test_matmul_with_bias_sigmoid"], [262, "module-test_matmul_with_bias_tanh"], [263, "module-test_merged_embeddingbag"], [264, "module-test_model"], [265, "module-test_onnx_utils"], [266, "module-test_operator_adaptor"], [267, "module-test_ops"], [268, "module-test_padding_seq"], [269, "module-test_padding_sequence"], [270, "module-test_pattern_dispatch"], [271, "module-test_permute"], [272, "module-test_position_embeddings"], [273, "module-test_pow"], [274, "module-test_primitive_cache_acc"], [275, "module-test_primitive_cache_throughput"], [276, "module-test_qkv_merge"], [277, "module-test_qkv_reshape"], [278, "module-test_quant_onnx_execute"], [279, "module-test_reshape_after_restore_hidden_states"], [280, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [281, "module-test_reshape_before_restore_hidden_states"], [282, "module-test_size"], [283, "module-test_softmax"], [284, "module-test_start_end_logits"], [285, "module-test_tanh"], [286, "module-test_text_encoder"], [287, "module-test_text_encoder_bf16"], [288, "module-test_tf_utils"], [289, "module-test_token_type_embeddings"], [290, "module-test_transpose"], [291, "module-test_transpose_batch_matmul"], [292, "module-test_unet"], [293, "module-test_unet_bf16"], [294, "module-test_unsqueeze"], [295, "module-test_vae_decoder"], [296, "module-test_vae_decoder_bf16"], [297, "module-test_weight_sharing_acc"], [298, "module-test_weight_sharing_dispatcher_tuning_acc"], [299, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [300, "module-test_weight_sharing_throughput"]], "module_debug_level1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.module_debug_level1"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "binaryop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.binaryop method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernorm method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_resize2gather (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather.AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removelistconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct.RemoveListConstruct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "resnetblock_instancenormreshapefromconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv.ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "resnetblock_instancenormreshapefromdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv.ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_instancenormreshapefromadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd.Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "transformer2dmodel_instancenormreshapefromconcat (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat.Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transformer2dmodel_upblockresize (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize.Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[182, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[183, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[184, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[185, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[185, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[186, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[186, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[186, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[187, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[187, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[189, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[190, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[192, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[193, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[193, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[193, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[195, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[196, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[197, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[199, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[199, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[200, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[200, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[200, "module-intel_extension_for_transformers.optimization.pruning"]], "gradientcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion"]], "magnitudecriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion"]], "pruningcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion"]], "snipcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion"]], "snipmomentumcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion"]], "get_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.get_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.on_before_optimizer_step"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_step_begin"]], "register_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.register_criterion"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "basepattern (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern"]], "m (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.M"]], "n (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.N"]], "patternninm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM"]], "patternnxm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM"]], "adjust_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.adjust_ratio"]], "block_size (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.block_size"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.check_layer_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.config"]], "count_new_masked_cnts() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.count_new_masked_cnts"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_block_size_dict"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_block_size_dict"]], "get_ele_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_ele_mask_per_threshold"]], "get_least_ninm_mask_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_least_ninm_mask_from_data"]], "get_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_mask_per_threshold"]], "get_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_masks_global"]], "get_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_local"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_pattern_lock_masks"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_reduced_masks_from_data"]], "get_single_mask_per_target_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_single_mask_per_target_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio"]], "get_sparsity_ratio_each_layer() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio_each_layer"]], "get_sparsity_ratio_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "invalid_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.invalid_layers"]], "is_global (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.is_global"]], "keep_mask_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.keep_mask_layers"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.max_sparsity_ratio_per_op"]], "min_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.min_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.modules"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.pattern"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reduce_scores"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reduce_scores"]], "reduce_tensor() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.reduce_tensor"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_orig_to_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_orig_to_pattern"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_reduced_to_orig"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_reduced_to_orig"]], "target_sparsity (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.target_sparsity"]], "update_new_added_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_new_added_masks"]], "update_progressive_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks"]], "update_progressive_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_global"]], "update_progressive_masks_linear() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_linear"]], "update_progressive_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_local"]], "update_progressive_masks_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_scores"]], "update_residual_cnt() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.update_residual_cnt"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.check_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"]], "parse_not_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.parse_not_to_prune"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.process_config"]], "reset_non_value_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.reset_non_value_to_default"]], "magnitudepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.MagnitudePruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.PatternLockPruner"]], "pruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner"]], "snipmomentumpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipMomentumPruner"]], "snippruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipPruner"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.check_is_pruned_step"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.config"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.mask_weights"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.masks"]], "max_sparsity_ratio_per_layer (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.max_sparsity_ratio_per_layer"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.patternlockpruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.snipmomentumpruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipMomentumPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.snippruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipPruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.patternlockpruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.PatternLockPruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.on_train_end"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.pattern"]], "register_pruners() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.register_pruners"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.scores"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.target_sparsity_ratio"]], "update_frequency_on_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.update_frequency_on_step"]], "update_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.magnitudepruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.MagnitudePruner.update_scores"]], "update_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.pruner.pruner method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.Pruner.update_scores"]], "basepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner"]], "basicpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner"]], "progressivepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner"]], "check_is_pruned_progressive_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_is_pruned_progressive_step"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.check_is_pruned_step"]], "check_progressive_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_progressive_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.config"]], "criterion (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.criterion"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights"]], "mask_weights_general() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights_general"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.masks"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.max_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_end"]], "parse_valid_pruner_types() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.parse_valid_pruner_types"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pattern"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.pattern"]], "print_progressive_sparsity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.print_progressive_sparsity"]], "pruning_frequency (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pruning_frequency"]], "reg (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.reg"]], "register_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.register_pruner"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scheduler"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scores"]], "set_global_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.set_global_step"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.target_sparsity_ratio"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.update_masks"]], "update_masks_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.update_masks_progressive"]], "pruning (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruning)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.update_config"]], "basereg (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg"]], "grouplasso (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso"]], "alpha (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.alpha"]], "get_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg"]], "get_reg_type() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg_type"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_before_optimizer_step"]], "reg_terms (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.reg_terms"]], "register_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.register_reg"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.OneshotScheduler"]], "scheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.Scheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.scheduler attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.Scheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[210, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.iterativescheduler method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.oneshotscheduler method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.scheduler method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.Scheduler.update_sparsity_ratio"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler"]], "pruningscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler attribute)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[211, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.iterativescheduler method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.oneshotscheduler method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.update_sparsity_ratio"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_config"]], "check_key_validity() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_key_validity"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_config"]], "process_weight_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_weight_config"]], "process_yaml_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_yaml_config"]], "reset_none_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.reset_none_to_default"]], "update_params() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.update_params"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[213, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[213, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[214, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[214, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[214, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[214, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[215, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[216, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[217, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[217, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[218, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[219, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[219, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[220, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[220, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[221, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[221, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[221, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[221, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[222, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[222, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[223, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[223, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[223, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[223, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[223, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[224, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[224, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[224, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[224, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[224, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[225, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[226, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[226, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[226, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[227, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[228, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[229, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[229, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[229, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[229, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[230, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[230, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[230, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[230, "module-test_add_embeddings"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[231, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[231, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[231, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[231, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[232, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[232, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[232, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[232, "module-test_attention_reshape"]], "testtorchmodel (class in test_bert_mini_fp32)": [[233, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[233, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[233, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[233, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[234, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[234, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[234, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[234, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[235, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[235, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[235, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[235, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[236, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[236, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[236, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[236, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[237, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[237, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[237, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[237, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[238, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[238, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[238, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[238, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[239, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[239, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[239, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[239, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[240, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[240, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[240, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[240, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[241, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[241, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[241, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[241, "module-test_dispatcher_tuning_throughput"]], "testdynamicquantization (class in test_dynamic_quantization)": [[242, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[242, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[242, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[242, "module-test_dynamic_quantization"]], "testtorchop (class in test_embedding)": [[243, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[243, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[243, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[243, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[244, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[244, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[244, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[244, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[245, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[245, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[245, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[245, "module-test_execution_options"]], "testtorchop (class in test_gelu)": [[246, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[246, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[246, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[246, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[247, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[247, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[247, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[247, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[248, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[248, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[248, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[248, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[249, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[249, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[249, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[249, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[250, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[250, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[250, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[250, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[250, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[251, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[251, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[251, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[251, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[252, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[252, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[252, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[252, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[253, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[253, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[253, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[253, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[254, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[254, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[254, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[254, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[255, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[255, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[255, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[255, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[256, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[256, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[256, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[256, "module-test_linear_int8"]], "testmain (class in test_main)": [[257, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[257, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[257, "test_main.TestMain.tearDownClass"]], "test_main": [[257, "module-test_main"]], "testtorchop (class in test_matmul)": [[258, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[258, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[258, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[258, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[259, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[259, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[259, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[259, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[260, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[260, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[260, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[260, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[261, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[261, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[261, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[261, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[262, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[262, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[262, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[262, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[263, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[263, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[263, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[263, "module-test_merged_embeddingbag"]], "test_model": [[264, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[265, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[265, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[265, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[265, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[266, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[266, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[266, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[266, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[267, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[267, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[267, "test_ops.TestOps.tearDownClass"]], "test_ops": [[267, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[268, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[268, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[268, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[268, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[269, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[269, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[269, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[269, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[270, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[270, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[270, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[270, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[271, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[271, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[271, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[271, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[272, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[272, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[272, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[272, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[273, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[273, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[273, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[273, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[274, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[274, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[274, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[274, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[275, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[275, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[275, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[275, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[276, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[276, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[276, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[276, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[277, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[277, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[277, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[277, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[278, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[278, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[278, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[278, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[279, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[279, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[279, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[279, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[280, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[280, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[280, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[280, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[281, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[281, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[281, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[281, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[282, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[282, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[282, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[282, "module-test_size"]], "testtorchop (class in test_softmax)": [[283, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[283, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[283, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[283, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[284, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[284, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[284, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[284, "module-test_start_end_logits"]], "testtorchop (class in test_tanh)": [[285, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[285, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[285, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[285, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[286, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[286, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[286, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[286, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[287, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[287, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[287, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[287, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[288, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[288, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[288, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[288, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[289, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[289, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[289, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[289, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[290, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[290, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[290, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[290, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[291, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[291, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[291, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[291, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[292, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[292, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[292, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[292, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[293, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[293, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[293, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[293, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[294, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[294, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[294, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[294, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[295, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[295, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[295, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[295, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[296, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[296, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[296, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[296, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[297, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[297, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[297, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[297, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[298, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[298, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[298, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[298, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[299, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[299, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[299, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[299, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[300, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[300, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[300, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[300, "module-test_weight_sharing_throughput"]], "executor (c++ type)": [[310, "_CPPv48executor"]], "executor::dispatcher (c++ class)": [[310, "_CPPv4N8executor10DispatcherE"]], "executor::dispatcher::adaptattrs (c++ function)": [[310, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::adapttensors (c++ function)": [[310, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::dispatcher (c++ function)": [[310, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model"], [310, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model"]], "executor::dispatcher::forward (c++ function)": [[310, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::getexecutekernel (c++ function)": [[310, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb"]], "executor::dispatcher::gethash (c++ function)": [[310, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE"]], "executor::dispatcher::kernelhandler (c++ type)": [[310, "_CPPv4N8executor10Dispatcher13KernelHandlerE"]], "executor::dispatcher::prepare (c++ function)": [[310, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::resetopstatus (c++ function)": [[310, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::reshape (c++ function)": [[310, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::adapt_action_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher13adapt_action_E"]], "executor::dispatcher::append_it_shape (c++ function)": [[310, "_CPPv4N8executor10Dispatcher15append_it_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::append_ot_shape (c++ function)": [[310, "_CPPv4N8executor10Dispatcher15append_ot_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::cpu_isa_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher8cpu_isa_E"]], "executor::dispatcher::dispatch_table_file_exists_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E"]], "executor::dispatcher::do_tuning (c++ function)": [[310, "_CPPv4NK8executor10Dispatcher9do_tuningEv"]], "executor::dispatcher::do_tuning_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher10do_tuning_E"]], "executor::dispatcher::enable_sparse (c++ function)": [[310, "_CPPv4N8executor10Dispatcher13enable_sparseEv"]], "executor::dispatcher::execute_kernel (c++ function)": [[310, "_CPPv4NK8executor10Dispatcher14execute_kernelEv"]], "executor::dispatcher::execute_kernel_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher15execute_kernel_E"]], "executor::dispatcher::execution_options_ptr_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E"]], "executor::dispatcher::get_attrs (c++ function)": [[310, "_CPPv4N8executor10Dispatcher9get_attrsEv"]], "executor::dispatcher::get_it_shape (c++ function)": [[310, "_CPPv4N8executor10Dispatcher12get_it_shapeEv"]], "executor::dispatcher::get_ot_shape (c++ function)": [[310, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv"]], "executor::dispatcher::get_reshape_time (c++ function)": [[310, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv"]], "executor::dispatcher::iter_cnt_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher9iter_cnt_E"]], "executor::dispatcher::kernel_handler_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher15kernel_handler_E"]], "executor::dispatcher::kernel_type (c++ function)": [[310, "_CPPv4N8executor10Dispatcher11kernel_typeEv"]], "executor::dispatcher::latency (c++ function)": [[310, "_CPPv4N8executor10Dispatcher7latencyEv"]], "executor::dispatcher::model_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher6model_E"]], "executor::dispatcher::monopoly_kernel_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E"]], "executor::dispatcher::name (c++ function)": [[310, "_CPPv4NK8executor10Dispatcher4nameEv"]], "executor::dispatcher::name_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher5name_E"]], "executor::dispatcher::no_tuning_space (c++ function)": [[310, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv"]], "executor::dispatcher::no_tuning_space_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher16no_tuning_space_E"]], "executor::dispatcher::operator_conf (c++ function)": [[310, "_CPPv4NK8executor10Dispatcher13operator_confEv"]], "executor::dispatcher::operator_conf_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher14operator_conf_E"]], "executor::dispatcher::perf_ratio_id (c++ function)": [[310, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv"]], "executor::dispatcher::post_op (c++ function)": [[310, "_CPPv4N8executor10Dispatcher7post_opEv"]], "executor::dispatcher::set_attrs (c++ function)": [[310, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE"]], "executor::dispatcher::set_enable_sparse (c++ function)": [[310, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb"]], "executor::dispatcher::set_it_shape (c++ function)": [[310, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tEi"]], "executor::dispatcher::set_latency (c++ function)": [[310, "_CPPv4N8executor10Dispatcher11set_latencyEKf"]], "executor::dispatcher::set_perf_ratio_id (c++ function)": [[310, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string"]], "executor::dispatcher::set_post_op (c++ function)": [[310, "_CPPv4N8executor10Dispatcher11set_post_opERK6string"]], "executor::dispatcher::set_reshape_time (c++ function)": [[310, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf"]], "executor::dispatcher::set_table_id (c++ function)": [[310, "_CPPv4N8executor10Dispatcher12set_table_idE6string"]], "executor::dispatcher::set_tuning_mode (c++ function)": [[310, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb"]], "executor::dispatcher::set_weight_shape (c++ function)": [[310, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE"]], "executor::dispatcher::sparselib_available_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher20sparselib_available_E"]], "executor::dispatcher::table_id (c++ function)": [[310, "_CPPv4N8executor10Dispatcher8table_idEv"]], "executor::dispatcher::tune_dense_in_sparse_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E"]], "executor::dispatcher::type (c++ function)": [[310, "_CPPv4NK8executor10Dispatcher4typeEv"]], "executor::dispatcher::type_ (c++ member)": [[310, "_CPPv4N8executor10Dispatcher5type_E"]], "executor::dispatcher::weight_shape (c++ function)": [[310, "_CPPv4N8executor10Dispatcher12weight_shapeEv"]], "executor::dispatcher::weight_zero_ratio (c++ function)": [[310, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv"]], "executor::dispatcher::~dispatcher (c++ function)": [[310, "_CPPv4N8executor10DispatcherD0Ev"]], "cpu_instance (c macro)": [[314, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[314, "c.NULL_INSTANCE"]], "jd (c++ type)": [[314, "_CPPv42jd"], [315, "_CPPv42jd"], [316, "_CPPv42jd"], [317, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[314, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[314, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[314, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[314, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[314, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[314, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[314, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[314, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[314, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[314, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[314, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[314, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[314, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[314, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[314, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[314, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[314, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[315, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[315, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [315, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[315, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[315, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[315, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [315, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[315, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dyn_quantize_mha (c++ class)": [[315, "_CPPv4N2jd16dyn_quantize_mhaE"]], "jd::dyn_quantize_mha::dyn_quantize_mha (c++ function)": [[315, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy"], [315, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv"]], "jd::dyn_quantize_mha::~dyn_quantize_mha (c++ function)": [[315, "_CPPv4N2jd16dyn_quantize_mhaD0Ev"]], "jd::dyn_quantize_mha_desc (c++ class)": [[315, "_CPPv4N2jd21dyn_quantize_mha_descE"]], "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc (c++ function)": [[315, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc"], [315, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv"]], "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc (c++ function)": [[315, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[315, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[315, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [315, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[315, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[315, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[315, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [315, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[315, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[315, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[315, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [315, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[315, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[315, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[315, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [315, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[315, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[315, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[315, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [315, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[315, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[315, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[315, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [315, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[315, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[315, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[315, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [315, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[315, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[315, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[315, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [315, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[315, "_CPPv4N2jd11gather_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[315, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[315, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[315, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[315, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [315, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[315, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[315, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[315, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[315, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[315, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[315, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[315, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[315, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [315, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[315, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[315, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[315, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [315, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[315, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[315, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[315, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [315, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[315, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[315, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[315, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [315, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[315, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[315, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[315, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [315, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[315, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[315, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[315, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [315, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[315, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[315, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[315, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [315, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[315, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[315, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[315, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [315, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[315, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[315, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[315, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [315, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[315, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[315, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[315, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[315, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[315, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[315, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[315, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[315, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[315, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[315, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [315, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[315, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[315, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[315, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [315, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[315, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[315, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[315, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [315, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[315, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[315, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[315, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [315, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[315, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[315, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[315, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [315, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[315, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[315, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[315, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [315, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[315, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[315, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[315, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [315, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[315, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[315, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[315, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [315, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[315, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[315, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[315, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [315, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[315, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[315, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[315, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [315, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[315, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[316, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[316, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[316, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[316, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[316, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[316, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[316, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[316, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[316, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[316, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [316, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [316, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[316, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[316, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[316, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[316, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[316, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[317, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[317, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[317, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[317, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[317, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[317, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[317, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[317, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[317, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[317, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[317, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[317, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[317, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[317, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[317, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[317, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[317, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[317, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[317, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[317, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[317, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[317, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[317, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[317, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[317, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[317, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[317, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[317, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[317, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[317, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[317, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[317, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[317, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[317, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::gather_data_t (c++ struct)": [[317, "_CPPv4N2jd3ssd13gather_data_tE"]], "jd::ssd::gather_data_t::binaryop_addrs (c++ member)": [[317, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE"]], "jd::ssd::gather_data_t::dst (c++ member)": [[317, "_CPPv4N2jd3ssd13gather_data_t3dstE"]], "jd::ssd::gather_data_t::gather_data_t (c++ function)": [[317, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv"]], "jd::ssd::gather_data_t::idx (c++ member)": [[317, "_CPPv4N2jd3ssd13gather_data_t3idxE"]], "jd::ssd::gather_data_t::src (c++ member)": [[317, "_CPPv4N2jd3ssd13gather_data_t3srcE"]], "jd::ssd::gather_param_t (c++ struct)": [[317, "_CPPv4N2jd3ssd14gather_param_tE"]], "jd::ssd::gather_param_t::binary_ts_sizes (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE"]], "jd::ssd::gather_param_t::binaryop_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE"]], "jd::ssd::gather_param_t::dst_axis_size (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE"]], "jd::ssd::gather_param_t::dt (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t2dtE"]], "jd::ssd::gather_param_t::dt_size (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE"]], "jd::ssd::gather_param_t::extend_mask (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE"]], "jd::ssd::gather_param_t::idx_size (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE"]], "jd::ssd::gather_param_t::inner_size (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE"]], "jd::ssd::gather_param_t::loops (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t5loopsE"]], "jd::ssd::gather_param_t::mask (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t4maskE"]], "jd::ssd::gather_param_t::outer_size (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE"]], "jd::ssd::gather_param_t::remain (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t6remainE"]], "jd::ssd::gather_param_t::src_axis_size (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE"]], "jd::ssd::gather_param_t::src_size (c++ member)": [[317, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[317, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[317, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[317, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[317, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[317, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[317, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[317, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_io (c++ type)": [[317, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[317, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[317, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[317, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[317, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[317, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[317, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[317, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[317, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[317, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[317, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[317, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[317, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[317, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[317, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[317, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[317, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[317, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[317, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[317, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[317, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[317, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[317, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[317, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[317, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[317, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[317, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[317, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[317, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[317, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[317, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[317, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[317, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[317, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[317, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[317, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[317, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[317, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[317, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[317, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[317, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[317, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[317, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[317, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[317, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[317, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[317, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[317, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[317, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[317, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[317, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[317, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[317, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[317, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[317, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[317, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[317, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[317, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[317, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[317, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[317, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[317, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[317, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[317, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[317, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[317, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[317, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[317, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[317, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[317, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[317, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[317, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[317, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[317, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[317, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[317, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[317, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[317, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[317, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[317, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[317, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[317, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})