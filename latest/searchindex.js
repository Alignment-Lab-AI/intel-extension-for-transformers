Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/prune_utils/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/scheduler/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/test_add_cls_token/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_conv_reshape/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_main/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_ops/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_position_embeddings/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_start_end_logits/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_c_engine", "docs/api_doc/api_engine", "docs/api_doc/api_kernel", "docs/api_doc/engine/compile", "docs/api_doc/engine/dispatcher", "docs/api_doc/kernel/api_c", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/kernel", "docs/api_doc/optimization", "docs/api_doc/optimization/benchmark", "docs/api_doc/optimization/distillation", "docs/api_doc/optimization/pipeline", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/neural_engine", "docs/build_docs/source/xtransformers", "docs/data_augmentation", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Deploy and Integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "feature", "index", "kernel", "neural_engine", "xtransformers"], "filenames": ["autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/prune_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/scheduler/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_c_engine.rst", "docs/api_doc/api_engine.rst", "docs/api_doc/api_kernel.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/dispatcher.rst", "docs/api_doc/kernel/api_c.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/kernel.rst", "docs/api_doc/optimization.rst", "docs/api_doc/optimization/benchmark.rst", "docs/api_doc/optimization/distillation.rst", "docs/api_doc/optimization/pipeline.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/xtransformers.rst", "docs/data_augmentation.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Deploy and Integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "feature.rst", "index.rst", "kernel.rst", "neural_engine.rst", "xtransformers.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.scheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "Python APIs", "C++ APIs", "Python APIs", "C++ APIs", "Compile", "Class dispatcher", "Kernel C++ APIs", "Class engine", "Class kernel", "Optimization APIs", "Benchmark", "Distillation", "Pipeline", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Transformers-accelerated Libraries", "Neural Engine", "Intel\u00ae Extension for Transformers", "Data Augmentation", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Deploy and Integration", "Installation", "Add Customized Pattern", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "platform configuration", "Transformers-accelerated Libraries", "Memory Layout in SPMM_VNNI", "Introduction", "Introduction", "Design of AMX Kernel", "Design of AVX512F Kernel", "Introduction", "Design of the VNNI Kernel", "Performance and Profiling", "Validation Performance Data", "Benchmark for Kernels", "Inputs format", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Transformers-accelerated Libraries", "Neural Engine", "Intel\u00ae Extension for Transformers"], "terms": {"The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 118, 119, 121, 122, 123, 124, 126, 136, 138, 140, 141, 142, 144, 148, 184, 185, 186, 187, 188, 191, 194, 199, 200, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237, 238, 239], "neural": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 104, 109, 118, 121, 126, 148, 184, 199, 202, 207, 214, 215, 216, 217, 218, 228, 236, 239, 241], "engin": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 104, 109, 118, 119, 136, 148, 184, 188, 199, 202, 214, 215, 217, 220, 225, 241], "start_pipelin": 1, "model": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 32, 42, 43, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 116, 118, 119, 122, 123, 125, 126, 127, 131, 136, 144, 190, 199, 200, 206, 207, 208, 210, 213, 214, 216, 217, 221, 222, 225, 229, 232, 235, 236, 238, 239, 243, 244], "config": [1, 6, 7, 8, 9, 32, 43, 59, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 112, 115, 118, 119, 125, 126, 127, 128, 130, 131, 132, 134, 136, 140, 141, 184, 200, 206, 207, 208, 210, 212, 215, 217, 220, 225, 233, 237, 238], "none": [1, 6, 7, 9, 13, 59, 113, 114, 115, 116, 118, 119, 122, 123, 125, 126, 127, 128, 136, 138, 140, 141, 142, 143, 144, 199, 206, 207, 208, 209, 215, 235, 236, 238, 239], "pipelin": [1, 118, 119, 122, 123, 184, 194], "interfac": [1, 9, 140, 141, 191, 209, 213, 223], "firstli": [1, 9], "us": [1, 8, 9, 13, 32, 43, 74, 92, 109, 113, 115, 118, 119, 121, 122, 123, 125, 126, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 200, 206, 207, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239], "loader": [1, 9, 110, 216, 218, 221], "get": [1, 6, 7, 8, 9, 12, 13, 32, 43, 59, 109, 113, 115, 116, 118, 122, 123, 125, 126, 130, 132, 134, 142, 144, 209, 214, 216, 217, 218, 220, 221, 225, 229, 230, 234, 237], "comput": [1, 8, 9, 109, 136, 140, 141, 210, 221, 223, 224, 225, 226, 229, 237, 239], "graph": [1, 2, 3, 4, 5, 8, 9, 10, 13, 32, 43, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 207, 214, 218, 221, 228, 229, 230], "correspond": [1, 4, 5, 8, 9, 199, 214, 217, 221, 223, 230, 239], "framework": [1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 112, 113, 118, 119, 127, 136, 143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 207, 208, 211, 212, 214, 218, 223, 237, 238, 239], "contain": [1, 8, 9, 13, 109, 136, 140, 141, 199, 206, 207, 212, 214, 216, 217, 221, 223, 225, 233, 234, 238, 239], "node": [1, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 109, 144, 209, 221, 222, 232], "edg": [1, 9], "i": [1, 2, 4, 5, 8, 9, 13, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 118, 119, 126, 136, 140, 141, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 194, 199, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239], "op": [1, 4, 5, 8, 9, 13, 109, 110, 190, 215, 220, 221, 225, 226, 233, 234, 239], "tensor": [1, 4, 5, 6, 7, 8, 9, 13, 32, 43, 109, 110, 136, 140, 141, 190, 212, 214, 215, 217, 218, 220, 229, 233, 238, 239], "Then": [1, 8, 9, 207, 217, 218, 230, 233, 238, 239], "extract": [1, 2, 3, 4, 5, 9, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 214, 216, 218], "pack": [1, 9, 32, 110, 230], "them": [1, 4, 5, 8, 9, 212, 214, 217, 225, 227, 230, 239], "our": [1, 9, 200, 206, 209, 221, 225, 227, 229, 230, 237], "form": [1, 8, 9, 136, 207, 215, 221, 224, 228, 233], "next": [1, 6, 7, 9, 140, 141, 199, 217, 218, 225, 228, 229, 230], "exploit": [1, 9, 221], "abov": [1, 8, 9, 140, 141, 213, 214, 216, 217, 221, 227, 229], "consist": [1, 9], "sub": [1, 8, 9, 22, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 214, 216, 217, 225, 229], "which": [1, 4, 5, 8, 9, 109, 115, 118, 119, 121, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 206, 207, 212, 213, 214, 216, 217, 221, 224, 225, 226, 227, 228, 230, 235, 238, 239], "can": [1, 8, 9, 118, 121, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 200, 206, 207, 209, 212, 214, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 237, 238, 239], "see": [1, 8, 9, 140, 141, 183, 214, 215, 216, 217, 218, 221, 222, 224, 228, 231, 232, 233], "new": [1, 4, 5, 8, 9, 13, 136, 147, 221, 225, 226, 234], "big": [1, 9, 216, 217], "like": [1, 4, 5, 8, 9, 109, 184, 206, 207, 212, 214, 215, 216, 217, 218, 221, 225, 226, 227, 231, 235, 236, 238, 239], "layernorm": [1, 8, 9, 22, 35, 81, 214, 217, 221, 233], "There": [1, 9, 207, 212, 214, 215, 231, 233, 236, 238], "mai": [1, 8, 9, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 216, 221, 227, 228, 229, 230, 233, 239], "have": [1, 8, 9, 109, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 212, 214, 215, 216, 217, 218, 221, 226, 229, 233, 235, 236, 237, 238, 239], "differ": [1, 6, 7, 9, 10, 11, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 115, 118, 123, 124, 199, 206, 207, 210, 212, 214, 216, 217, 218, 221, 223, 224, 230, 235, 236, 238, 239], "flow": [1, 8, 9, 214, 217], "one": [1, 4, 5, 8, 9, 140, 199, 207, 210, 213, 214, 215, 216, 217, 221, 225, 227, 233, 237], "subgraph": [1, 8, 9, 104, 216, 218], "final": [1, 9, 216, 217, 218, 220, 221, 235], "convert": [1, 4, 5, 8, 9, 13, 109, 209, 219, 233, 239], "yaml": [1, 6, 7, 8, 9, 118, 122, 123, 124, 136, 215, 216, 218], "file": [1, 2, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 92, 104, 116, 118, 119, 121, 122, 123, 124, 136, 148, 206, 212, 214, 215, 216, 218, 220, 225, 226, 233, 234], "bin": [1, 6, 7, 9, 212, 215, 216, 218, 231], "configur": [1, 9, 66, 113, 115, 118, 121, 122, 123, 124, 128, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 206, 208, 209, 216, 224, 225, 228], "infer": [1, 6, 7, 9, 10, 11, 112, 118, 126, 136, 141, 184, 200, 208, 210, 213, 214, 215, 216, 217, 218, 227, 236, 239], "base": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 116, 118, 119, 121, 122, 123, 124, 127, 128, 132, 135, 136, 138, 140, 141, 142, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 199, 200, 206, 209, 211, 218, 219, 220, 222, 228, 229, 231, 232, 237, 244], "thi": [2, 8, 136, 140, 141, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 206, 207, 209, 212, 214, 215, 216, 217, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237, 239], "tensorflow": [2, 5, 14, 15, 16, 17, 18, 19, 23, 25, 30, 33, 34, 36, 37, 38, 40, 41, 44, 45, 46, 48, 50, 51, 53, 57, 58, 62, 109, 113, 118, 119, 126, 144, 210, 211, 212, 221, 239], "onnx": [2, 4, 13, 136, 200, 210, 214, 215, 216, 229, 237, 243], "pleas": [2, 4, 5, 132, 183, 184, 199, 200, 206, 207, 208, 210, 214, 217, 220, 223, 224, 225, 226, 233, 238, 239], "refer": [2, 4, 5, 132, 184, 199, 206, 207, 210, 217, 220, 227, 233, 238, 239], "onnx_extractor": [2, 3, 9, 110], "py": [2, 206, 211, 214, 215, 219], "tf_extractor": [2, 3, 9, 110], "more": [2, 4, 5, 8, 183, 184, 200, 207, 210, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 227, 229, 230, 232, 233], "detail": [2, 8, 199, 200, 207, 208, 210, 213, 214, 215, 216, 217, 220, 221, 222, 223, 227, 231, 232, 233, 238, 239], "object": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 32, 43, 59, 74, 92, 104, 109, 112, 113, 114, 116, 118, 122, 123, 124, 125, 126, 127, 136, 137, 138, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 200, 207, 210, 214, 220, 238], "A": [2, 3, 8, 112, 115, 122, 123, 127, 136, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 212, 214, 221, 222, 224, 227, 230, 232, 233], "super": [2, 3, 214, 216], "an": [2, 3, 13, 109, 118, 123, 124, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 200, 206, 208, 209, 210, 212, 214, 215, 216, 217, 220, 221, 223, 224, 225, 226, 230, 234, 235, 237, 243], "oper": [2, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 109, 190, 191, 193, 208, 212, 213, 214, 216, 218, 223, 225, 226, 228, 229, 230, 233, 239], "do": [2, 3, 116, 118, 125, 126, 136, 209, 212, 214, 216, 217, 221, 225, 238, 239], "addit": [2, 3, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 208, 215, 234], "attribut": [2, 3, 4, 5, 8, 43, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 193, 199, 215, 217, 220, 226], "without": [2, 3, 125, 136, 207, 212, 214, 230, 231, 233], "modifi": [2, 3, 6, 7, 8, 141, 212, 215, 218], "topologi": [2, 3], "modul": [3, 7, 9, 10, 32, 74, 123, 199, 218, 219], "all": [4, 5, 6, 7, 8, 9, 32, 43, 74, 92, 110, 136, 140, 141, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 199, 207, 212, 213, 214, 215, 217, 221, 222, 225, 226, 227, 232, 235, 238, 239], "input": [4, 5, 6, 7, 8, 13, 22, 109, 113, 118, 126, 127, 136, 140, 141, 184, 190, 199, 200, 206, 207, 209, 210, 212, 215, 216, 217, 220, 228, 229, 230, 233, 237], "python": [4, 5, 8, 140, 141, 206, 211, 212, 213, 214, 216, 218, 219, 243, 244], "compos": [4, 5, 118, 119, 136, 199, 214, 218], "order": [4, 5, 6, 7, 8, 118, 119, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 206, 214, 215, 221, 224, 230], "origin": [4, 5, 8, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 200, 206, 207, 214, 218, 229, 239], "calcul": [4, 5, 116, 199, 215, 221, 224, 226, 230, 233, 239], "notic": [4, 5, 218, 225, 229], "map": [4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 184, 190, 199, 207, 224, 239], "between": [4, 5, 140, 141, 199, 207, 230, 233, 239], "For": [4, 5, 8, 13, 183, 184, 199, 200, 210, 214, 216, 217, 221, 222, 223, 225, 227, 229, 230, 231, 232, 237], "relat": [4, 5, 136, 207, 214, 217, 221, 227, 238, 239], "deatil": [4, 5], "api": [4, 5, 6, 7, 184, 200, 212, 216, 217, 218, 220, 221, 225, 226, 237, 242, 243, 244], "onnxextractor": 4, "decor": [4, 5, 13, 32, 43, 74, 92, 109], "graph_def": [4, 5, 109], "ha": [4, 5, 8, 199, 206, 214, 216, 217, 219, 220, 221, 224, 226, 233, 239], "input_tensor": [4, 5, 8, 13, 32, 43, 109, 141, 214, 217], "output_tensor": [4, 5, 8, 13, 32, 43, 109, 214, 217], "record": [4, 5, 199, 215, 216], "sourc": [4, 5, 8, 13, 109, 212, 225, 229, 233], "dest": [4, 5, 8, 13, 109], "name": [4, 5, 6, 7, 8, 13, 32, 43, 59, 74, 92, 109, 113, 114, 118, 121, 126, 127, 128, 130, 132, 134, 138, 142, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 190, 199, 200, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219, 221, 222, 226, 232, 235, 236, 237, 238, 239], "list": [4, 5, 6, 7, 8, 13, 109, 113, 114, 118, 125, 128, 136, 140, 141, 207, 212, 213, 214, 217, 225, 226, 234, 239], "return": [4, 5, 8, 13, 32, 43, 74, 92, 109, 112, 115, 118, 119, 121, 122, 123, 124, 126, 127, 136, 140, 141, 199, 206, 214, 217, 221, 225, 226, 235], "paramet": [4, 5, 8, 13, 32, 43, 74, 92, 109, 113, 115, 118, 119, 121, 122, 123, 124, 126, 127, 128, 136, 140, 141, 144, 199, 207, 215, 221, 235, 238], "onnxmodel": [4, 13], "type": [4, 5, 8, 13, 32, 43, 74, 92, 109, 115, 118, 121, 126, 127, 136, 140, 144, 190, 199, 200, 206, 207, 208, 209, 212, 215, 216, 218, 221, 225, 226, 233, 235, 236, 239], "tensorflowextractor": 5, "tensorflowmodel": [5, 109], "defint": [6, 7], "properti": [6, 7, 32, 43, 59, 113, 118, 119, 122, 123, 125, 126, 136], "execution_opt": [6, 7, 216], "option": [6, 7, 8, 118, 121, 125, 126, 127, 136, 140, 141, 199, 215, 221, 225, 230, 233], "execut": [6, 7, 122, 123, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 193, 199, 216, 220, 223, 225, 226, 231, 233, 239], "weight_data": [6, 7], "weight_byt": [6, 7], "net_config": [6, 7], "network": [6, 7, 132, 199, 207, 212, 214, 215, 217, 228, 238, 239], "dict": [6, 7, 8, 13, 59, 109, 113, 118, 122, 123, 127, 128, 136, 140, 141, 206, 212, 214, 238], "insert_nod": [6, 7], "index": [6, 7, 140, 141, 144, 217, 220, 221], "insert": [6, 7, 8, 218, 220, 221, 225, 226, 239], "ir": [6, 7, 212, 214, 215, 216, 231, 243], "remove_nod": [6, 7], "node_nam": [6, 7, 8, 13, 109, 214, 217], "remov": [6, 7, 141, 226, 238], "from": [6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 109, 116, 118, 119, 121, 136, 140, 141, 147, 199, 200, 206, 207, 208, 210, 212, 214, 215, 216, 217, 218, 220, 221, 225, 226, 228, 229, 230, 235, 236, 237, 238, 239], "get_node_id": [6, 7, 214], "id": [6, 7, 8, 118, 121, 141, 144, 226], "accord": [6, 7, 214, 216, 230], "get_node_by_nam": [6, 7], "rename_nod": [6, 7], "old_nam": [6, 7], "new_nam": [6, 7], "change_node_input_tensor": [6, 7], "mode": [6, 7, 114, 118, 128, 135, 190, 199, 215, 219, 233, 234, 239], "change_node_output_tensor": [6, 7], "output": [6, 7, 8, 13, 22, 32, 43, 109, 113, 118, 126, 136, 140, 141, 184, 190, 199, 206, 207, 212, 214, 215, 216, 217, 218, 219, 220, 221, 228, 229, 230, 233, 237], "get_pre_node_nam": [6, 7], "previou": [6, 7, 118, 119, 136, 212], "get_next_node_nam": [6, 7], "get_tensor_idx": [6, 7], "tensor_nam": [6, 7, 13, 109], "from_output": [6, 7], "true": [6, 7, 113, 118, 136, 138, 140, 141, 142, 184, 190, 199, 200, 209, 210, 213, 214, 215, 216, 225, 226, 229, 231, 233, 235, 236, 239], "modify_node_connect": [6, 7], "dump_tensor": [6, 7], "tensor_list": [6, 7], "dump": [6, 7, 239], "engine_init": [6, 7], "net_info": [6, 7], "b": [6, 7, 8, 13, 140, 214, 221, 224, 227, 228, 230, 233], "pybind": [6, 7], "executor": [6, 7, 112, 190, 200, 212, 214, 215], "input_data": [6, 7, 8, 9, 74, 110, 212], "graph_init": [6, 7, 212, 216], "initi": [6, 7, 8, 13, 32, 43, 113, 118, 122, 123, 136, 140, 141, 199, 225, 226, 237, 238], "exampl": [6, 7, 8, 140, 141, 184, 206, 207, 210, 212, 214, 216, 217, 219, 220, 221, 223, 225, 235, 238, 239, 241], "import": [6, 7, 8, 127, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 200, 206, 207, 210, 212, 214, 216, 218, 221, 225, 226, 235, 236, 237, 238, 239], "newgraph": [6, 7], "conf": [6, 7, 113, 118, 128, 190, 212, 215, 216, 220], "out": [6, 7, 8, 136, 212, 214, 217, 223, 229, 239], "input_0": [6, 7, 212, 216], "input_1": [6, 7, 212, 216], "input_2": [6, 7, 212, 216], "save": [6, 7, 116, 136, 206, 212, 214, 215, 218, 227, 229, 230, 239], "output_dir": [6, 7, 113, 118, 125, 136, 199, 206, 218, 219], "ymal": [6, 7], "graph_dispatch": [6, 7, 216], "tune": [6, 7, 136, 206, 207, 235, 236, 238], "inputs_shap": [6, 7, 216], "dispatch": [6, 7, 186], "get_sparse_nodes_nam": [6, 7], "threshold": [6, 7], "0": [6, 7, 8, 109, 113, 114, 116, 118, 128, 138, 140, 141, 143, 144, 184, 190, 191, 192, 193, 199, 200, 206, 207, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239], "7": [6, 7, 8, 199, 208, 211, 213, 214, 217, 219, 221, 222, 227, 232, 233, 235, 239], "sparsiti": [6, 7, 113, 118, 222, 232, 233, 238], "spars": [6, 7, 184, 216, 223, 224, 227, 230, 233], "transpose_mode_int8": [6, 7], "node_name_list": [6, 7], "transpos": [6, 7, 9, 32, 110, 141, 215, 216, 224, 227, 229, 230, 233], "innerproduct": [6, 7, 22, 215, 216], "reorder": [6, 7, 22], "util": [8, 13, 109, 113, 115, 118, 206, 214, 221, 224, 230, 233], "names_from_input": 8, "static": [8, 142, 191, 193, 200, 215, 218, 225, 227, 237], "method": [8, 116, 118, 124, 128, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 199, 206, 208, 225, 227, 231, 238, 239], "valid": [8, 118, 126, 136, 184, 206, 207, 221, 242], "string": [8, 13, 109, 116, 118, 122, 123, 124, 144, 190, 206, 207, 214, 216, 217, 220, 226, 235, 236, 238, 239], "defin": [8, 122, 123, 124, 147, 199, 207, 212, 214, 220, 221, 230, 234, 235, 238, 239], "field": [8, 206, 225, 226, 239], "": [8, 13, 109, 136, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 191, 199, 200, 207, 212, 214, 215, 217, 218, 220, 222, 232, 234, 237, 239], "tupl": [8, 115, 127, 140, 141], "In": [8, 118, 119, 136, 140, 199, 212, 214, 215, 216, 217, 218, 221, 224, 225, 226, 227, 228, 229, 230, 235, 236, 239], "nodedef": [8, 109], "end": [8, 140, 141, 184, 215, 218, 220, 221, 226, 231], "If": [8, 115, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 207, 209, 212, 214, 215, 216, 217, 218, 221, 225, 233, 235, 238, 239], "also": [8, 212, 214, 215, 217, 218, 220, 221, 224, 225, 226, 230, 231, 236, 239], "get_data_dtyp": 8, "data": [8, 59, 184, 199, 208, 212, 214, 216, 218, 219, 220, 224, 225, 226, 230, 233, 239, 242], "const": [8, 13, 109, 190, 191, 192, 193, 220, 223, 225, 226, 227], "dtype": [8, 13, 59, 109, 136, 209, 212, 215, 216, 220], "numpi": [8, 13, 212], "valu": [8, 13, 109, 125, 136, 140, 141, 206, 207, 212, 214, 215, 216, 217, 225, 226, 227, 229, 233, 235, 236, 238, 239], "dtypes_dict": 8, "quant_info_init": 8, "quant": [8, 239], "info": [8, 12, 13, 109, 199, 212, 214, 231], "insert_quant_info": 8, "kei": [8, 13, 109, 136, 140, 141, 184, 215, 216, 217, 225, 226, 227], "get_quant_info": 8, "search_straight_pattern": [8, 221], "input_pattern": [8, 221], "search": [8, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 113, 116, 118, 119, 122, 123, 136, 184, 199, 208, 217], "user": [8, 140, 141, 184, 199, 200, 209, 214, 215, 217, 219, 229, 231, 233, 236, 237], "specifi": [8, 115, 118, 122, 123, 124, 126, 128, 135, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 217, 218, 226, 229, 233, 238, 239], "pattern": [8, 9, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 184, 191, 218, 224, 238], "intern": [8, 217], "grpah": [8, 13, 109], "structur": [8, 208, 212, 214, 216, 228, 238], "attent": [8, 140, 141, 191, 199, 215, 221, 229], "chain": [8, 225, 226], "call": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 209, 214, 216, 217, 224, 225, 226, 230, 239], "must": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 211, 217, 221, 224, 225, 230], "straight": 8, "sequenc": [8, 115, 140, 141, 210, 214, 217, 221, 228], "It": [8, 118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 207, 214, 215, 216, 217, 220, 221, 228, 229, 233], "mean": [8, 9, 32, 110, 140, 141, 206, 212, 214, 215, 216, 217, 221, 224, 225, 230, 233, 235, 238, 239], "ani": [8, 118, 121, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 221, 237], "otherwis": [8, 214, 216, 233], "op_typ": [8, 13, 32, 43, 109, 214, 216, 217, 226], "element": [8, 136, 214, 221, 226, 228, 229, 230, 233], "could": [8, 191, 212, 214, 215, 217, 218, 221, 227, 238, 239], "mandatori": 8, "ar": [8, 115, 116, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 207, 211, 212, 213, 214, 215, 216, 217, 218, 221, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 238, 239], "while": [8, 212, 217, 221, 233, 239], "stand": [8, 214], "mybe": 8, "mul": [8, 22, 214, 217, 221, 225], "add": [8, 22, 116, 207, 212, 215, 216, 217, 221, 225, 226, 233, 234], "addv2": [8, 22, 221], "equal": [8, 22, 136, 217, 224, 225], "below": [8, 184, 199, 206, 207, 212, 214, 216, 218, 221, 224, 228, 229, 230, 236], "gener": [8, 141, 147, 200, 207, 214, 217, 221, 225, 226, 228, 231, 233, 235, 236, 239], "extractor": [8, 9, 110, 216, 218, 221], "length": [8, 113, 115, 118, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 200, 217, 221, 225, 239], "match": [8, 199, 207, 216, 217, 221, 228, 229], "result": [8, 118, 119, 126, 136, 184, 199, 200, 208, 214, 216, 217, 222, 225, 226, 229, 230, 232, 238, 239], "24": [8, 199, 221, 222, 227, 232], "layer": [8, 115, 131, 140, 141, 199, 215, 221, 225, 228, 229, 238], "each": [8, 118, 119, 136, 140, 141, 199, 206, 215, 216, 217, 224, 228, 229, 230, 233, 234, 238], "still": [8, 221, 239], "last": [8, 136, 140, 141, 217, 221, 224, 228, 229, 239], "former": [8, 221], "mayb": [8, 216, 230], "search_pattern": [8, 221], "pattern_list": 8, "complet": [8, 214, 222, 232], "represent": [8, 210, 214, 217, 218], "its": [8, 118, 119, 136, 199, 207, 214, 217, 218, 221, 228, 230, 233], "op_idx": 8, "howev": [8, 216, 217, 221, 224, 227, 230], "due": [8, 140, 217, 221, 224, 239], "few": [8, 228], "complic": [8, 214, 221], "thei": [8, 118, 121, 207, 213, 221, 224, 225, 226, 227, 229, 233], "therefor": [8, 209, 224, 228, 229, 230, 239], "fist": 8, "repres": [8, 215, 217, 221, 223, 224, 226, 239], "main": [8, 136, 141, 217, 223, 233], "top": [8, 184, 206, 228], "down": 8, "head": [8, 140, 141, 221, 226, 229], "tail": [8, 221, 231], "left": [8, 140, 141, 227, 229, 230], "e": [8, 118, 119, 136, 184, 199, 207, 216, 225, 226, 229, 233], "g": [8, 118, 119, 136, 199, 207, 225, 226], "bert_large_squad": 8, "pb": [8, 210], "1": [8, 113, 114, 118, 128, 140, 141, 143, 184, 199, 200, 206, 207, 208, 209, 211, 213, 214, 216, 217, 218, 221, 222, 224, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239], "squareddiffer": [8, 22, 221], "2": [8, 113, 115, 118, 140, 184, 199, 200, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 221, 222, 227, 228, 230, 231, 232, 233, 235, 237], "3": [8, 199, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 227, 228, 230, 232, 233, 234, 235], "4": [8, 113, 118, 128, 140, 141, 199, 206, 207, 208, 211, 214, 215, 216, 217, 220, 221, 222, 227, 228, 230, 231, 238], "rsqrt": [8, 22, 221], "5": [8, 113, 114, 118, 199, 206, 207, 214, 215, 217, 220, 221, 222, 227, 232, 233], "8": [8, 199, 208, 209, 211, 214, 215, 217, 219, 221, 222, 226, 227, 230, 231, 232, 233, 239], "9": [8, 199, 206, 210, 211, 214, 221, 222, 227, 232, 233, 238], "6": [8, 199, 207, 208, 213, 214, 217, 221, 222, 226, 227, 231, 232, 239], "same": [8, 141, 207, 209, 212, 214, 215, 217, 218, 221, 224, 230, 233, 234], "func": [8, 199, 216], "follow": [8, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 140, 141, 185, 186, 187, 188, 194, 206, 207, 211, 214, 215, 216, 217, 218, 220, 225, 226, 227, 228, 229, 230, 231, 233, 234, 239], "frozen": [8, 212, 218], "you": [8, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 200, 206, 207, 209, 212, 214, 216, 217, 218, 221, 225, 226, 227, 231, 233, 235, 237, 238, 239], "had": [8, 214], "better": [8, 118, 119, 126, 136, 199, 214, 215, 216, 224, 229, 235, 236, 239], "identifi": [8, 118, 121], "your": [8, 136, 206, 210, 212, 214, 215, 216, 217, 225, 226, 233, 237], "own": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 217, 218, 225, 236], "casual": 8, "tf": [8, 118, 126, 140, 199], "control": [8, 199, 214], "start": [8, 140, 141, 215, 221, 234], "mostli": [8, 221], "longest": [8, 221], "path": [8, 113, 118, 119, 121, 122, 123, 124, 136, 144, 206, 210, 212, 215, 216, 218, 231, 233], "sometim": [8, 217, 239], "connect": [8, 132, 238], "But": [8, 212, 224, 237], "don": [8, 140, 141, 220, 225], "t": [8, 140, 141, 191, 199, 206, 207, 220, 223, 224, 225, 229, 230, 233, 238], "need": [8, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 206, 207, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 229, 230, 233, 238, 239], "least": 8, "doesn": [8, 199, 225, 230, 233], "exist": [8, 118, 121, 199, 210, 214, 237], "relationship": 8, "sever": [8, 206, 214, 218, 221, 224, 233, 239], "should": [8, 118, 121, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 212, 214, 216, 217, 220, 221, 224, 225, 226, 233, 234, 235, 236, 239], "split": [8, 9, 32, 110, 206, 216, 224, 227], "representtaion": 8, "two": [8, 136, 207, 214, 216, 217, 219, 220, 225, 226, 227, 229, 230, 236, 237, 238, 239], "idx": [8, 226], "some": [8, 141, 212, 214, 215, 216, 217, 220, 221, 225, 226, 230, 239], "outsid": [8, 140, 141, 217, 221], "give": [8, 214, 217, 224], "just": [8, 141, 212, 214, 215, 216, 217, 218, 221, 226, 230, 235], "empti": [8, 22, 217, 221, 226, 234], "algorithm": [8, 32, 43, 74, 92, 113, 118, 122, 123, 184, 199, 206, 216, 217, 220, 221, 223, 224, 225, 233, 238, 239], "support": [8, 13, 92, 112, 116, 118, 122, 123, 127, 128, 135, 184, 211, 212, 213, 214, 215, 216, 220, 221, 226, 231, 233, 237, 238], "kind": [8, 66, 192, 220, 223, 233], "beaus": 8, "make": [8, 32, 43, 212, 213, 214, 223, 224, 225, 226, 228, 229, 231, 233], "sure": [8, 214, 233], "whole": [8, 118, 119, 199, 208, 215, 216, 219, 228, 231], "so": [8, 118, 121, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 207, 213, 214, 216, 217, 220, 221, 223, 225, 227, 228, 230, 231, 235, 236, 238, 239], "check": [8, 13, 136, 200, 214, 216, 217, 221, 226], "symmetr": [8, 221, 239], "consecut": [8, 227, 230], "y": [8, 226], "o": [8, 199, 206, 211, 222, 226, 232], "shape": [8, 22, 59, 140, 141, 199, 212, 215, 216, 220, 224, 229, 233], "df": [8, 221], "duplic": 8, "would": [8, 214, 217, 218, 221, 231], "perform": [8, 113, 118, 119, 122, 123, 136, 140, 141, 142, 184, 199, 200, 207, 209, 210, 212, 215, 216, 219, 222, 224, 227, 228, 229, 230, 233, 235, 236, 238, 239, 242], "befor": [8, 136, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 207, 209, 212, 214, 216, 217, 218, 221, 225, 226, 227, 233, 239], "splice": 8, "de": 8, "total": [8, 115, 140, 199, 206, 217, 221, 230, 231], "c": [8, 211, 212, 213, 214, 216, 221, 222, 228, 232, 233, 242, 243], "d": [8, 199, 206, 207, 224, 229], "f": [8, 207, 220, 231, 239], "c1": 8, "d1": [8, 233], "c2": 8, "d2": 8, "c3": [8, 231], "d3": [8, 231], "step": [8, 136, 213, 214, 215, 217, 218, 219, 220, 221, 225, 229, 233], "now": [8, 200, 212, 213, 214, 216, 217, 218, 225, 226, 233, 237], "set": [8, 32, 43, 114, 115, 136, 140, 141, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 206, 212, 216, 217, 218, 220, 221, 224, 225, 226, 228, 233], "part": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 220, 221, 230], "As": [8, 207, 214, 215, 217, 218, 227, 229, 230], "appli": [8, 208, 210, 225, 226, 229, 230, 238, 239], "everi": [8, 214, 224, 233], "right": [8, 140, 141, 200, 227, 229, 230, 237], "construct_nod": 8, "attr": [8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 212, 214, 225, 226], "ordereddict": [8, 32, 43, 214], "construct": [8, 32, 43, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 225, 226], "new_nod": 8, "insert_pattern": 8, "target_node_nam": 8, "replac": [8, 141, 184, 207, 210, 214, 217, 238, 239], "specif": [8, 118, 121, 122, 123, 199, 207, 211, 214, 216, 217, 223, 224, 228, 233, 235, 236, 237, 239], "ccontain": 8, "insid": [8, 217, 220, 228], "been": [8, 140, 141, 207, 226, 237], "pattern_map": [8, 214, 217], "pattern_nam": 8, "mapping_dict": 8, "custom": [8, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 118, 126, 136, 184, 199, 215, 217], "mapping_config": 8, "first": [8, 136, 206, 213, 214, 216, 217, 219, 221, 226, 227, 228, 229, 230, 231, 234, 239], "second": [8, 140, 141, 213, 217, 219, 220, 221, 227, 228, 229, 230, 231, 233, 239], "third": [8, 217, 228, 230], "requir": [8, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 210, 217, 219, 221, 222, 224, 227, 233, 239], "old": 8, "reshap": [8, 9, 32, 110, 190, 212, 214, 215, 220], "paddingsequ": [8, 22, 91, 212], "search_mod": [8, 214, 217], "embed": [8, 140, 141, 212, 217, 221, 225], "m": [8, 207, 208, 215, 216, 222, 224, 227, 228, 230, 232, 233], "after": [8, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 209, 213, 215, 216, 217, 218, 220, 221, 223, 224, 226, 230, 234, 239], "fusion": [8, 66, 220, 221, 225, 226], "about": [8, 214, 217, 220, 222, 226, 230, 232], "in_pattern": 8, "input_id": [8, 140, 141, 210, 212], "segment_id": [8, 210, 212], "input_mask": [8, 210, 212], "out_pattern": 8, "int": [8, 113, 118, 128, 214, 225, 226], "th": [8, 217], "berfor": 8, "n": [8, 116, 140, 141, 206, 207, 216, 217, 219, 222, 224, 227, 228, 230, 232, 233], "match_result": 8, "_n": 8, "reshape_0": [8, 217], "where": [8, 22, 140, 141, 199, 207, 217, 223, 224, 226, 228, 229, 230, 233, 234], "go": [8, 200], "happen": [8, 215, 230], "sepcial": 8, "biasadd": [8, 18, 217, 221], "bia": [8, 13, 215], "unfix": 8, "locat": [8, 59, 212, 214, 217, 221, 230, 233], "onli": [8, 113, 118, 140, 141, 200, 211, 212, 216, 217, 218, 220, 223, 225, 226, 229, 230, 233, 235, 237], "other": [8, 118, 121, 191, 193, 206, 210, 212, 214, 215, 216, 217, 221, 222, 230, 232, 233, 239], "write": [8, 206, 214, 221], "note": [8, 208, 211, 212, 214, 215, 216, 217, 219, 220, 221, 225, 226, 229, 230, 233, 239], "That": [8, 230], "too": [8, 214, 224, 225], "decompos": [8, 214], "list2str": [8, 214], "src_perm": 8, "str": [8, 32, 43, 74, 92, 112, 113, 114, 118, 121, 125, 127, 128, 136, 138, 140, 141, 142, 206], "emit": [8, 217], "ret": [8, 221, 231], "str2list": 8, "src_str": 8, "pattern_mapping_conf_valid": 8, "conf_dict": 8, "lazyimport": 8, "module_nam": 8, "lazi": 8, "till": 8, "later": [8, 214, 221], "get_model_fwk_nam": 8, "detect": 8, "belong": [8, 214, 239], "avail": [8, 185, 186, 187, 188, 194, 228], "fwk": 8, "na": [8, 113, 118, 119, 136, 206], "assert": [9, 32, 110, 140, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199], "batch_matmul": [9, 32, 110], "batch_matmul_v2": [9, 32, 110], "bias_add": [9, 13, 32, 110], "cast": [9, 32, 110], "concat": [9, 32, 110, 214], "conv": [9, 32, 110, 215, 216, 226], "empty_op": [9, 32, 110, 214], "expand_dim": [9, 32, 110], "fused_batch_matmul_v2": [9, 32, 110], "fused_batch_norm_v3": [9, 32, 110], "fused_gemm": [9, 32, 110], "fused_matmul": [9, 32, 110], "gather": [9, 32, 110, 136, 141, 191, 214, 225], "gather_el": [9, 32, 110, 214], "gelu": [9, 32, 74, 110, 214, 220, 226, 233], "gemm": [9, 32, 110, 184, 209, 223, 224, 230, 233], "iterator_get_next": [9, 32, 110], "iterator_v2": [9, 32, 110, 214], "layer_norm": [9, 32, 74, 110, 214], "map_and_batch_dataset": [9, 32, 110, 214], "matmul": [9, 13, 22, 32, 110, 209, 215, 217, 218, 221, 223, 229, 233], "mkl_layer_norm": [9, 32, 110], "model_dataset": [9, 32, 110], "one_hot": [9, 32, 110], "onnx_input": [9, 32, 110], "optimize_dataset": [9, 32, 110, 214], "placehold": [9, 32, 110], "quantize_linear": [9, 32, 110, 214], "quantize_v2": [9, 32, 110], "quantized_fused_matmul_and_dequant": [9, 32, 110], "quantized_matmul_with_bias_and_dequant": [9, 32, 110], "reduce_mean": [9, 32, 110, 214], "reduce_sum": [9, 32, 110], "scatter_el": [9, 32, 110], "softmax": [9, 32, 110, 140, 191, 199, 207, 229], "squeez": [9, 32, 110], "strided_slic": [9, 32, 110], "top_k": [9, 32, 110], "unpack": [9, 32, 110, 136, 214], "unsqueez": [9, 32, 110, 214], "sub_graph": [9, 110, 214, 216], "add_cls_token": [9, 74, 110], "add_embed": [9, 74, 110], "attention_mask_length_adaptive_keep_indic": [9, 74, 110], "attention_output_layer_norm_length_adaptive_keep_indic": [9, 74, 110], "attention_reshap": [9, 74, 110], "collect_quant_info": [9, 74, 110], "conv_reshap": [9, 74, 110], "embeddingbag": [9, 22, 74, 110], "generate_sequ": [9, 74, 110], "input_fil": [9, 74, 110], "insert_bf16_nod": [9, 74, 110], "insert_quant_nod": [9, 74, 110], "interact_featur": [9, 74, 110], "last_layer_shap": [9, 74, 110], "layer_norm_with_reduce_mean": [9, 74, 110, 214], "matmul_with_bia": [9, 74, 110], "matmul_with_bias_add": [9, 74, 110], "matmul_with_bias_gelu": [9, 74, 110], "matmul_with_bias_relu": [9, 74, 110], "matmul_with_bias_sigmoid": [9, 74, 110], "matmul_with_bias_tanh": [9, 74, 110], "merged_embeddingbag": [9, 74, 110], "output_data": [9, 74, 110, 212], "padding_sequ": [9, 74, 110, 212], "position_embed": [9, 74, 110], "position_embeddings_v1": [9, 74, 110], "qkv_merg": [9, 74, 110], "qkv_reshap": [9, 74, 110], "quantize_fus": [9, 74, 110], "reshape_after_restore_hidden_st": [9, 74, 110], "reshape_before_and_after_attention_out_layer_norm_gather_el": [9, 74, 110], "reshape_before_restore_hidden_st": [9, 74, 110], "reshape_fus": [9, 74, 110], "restore_hidden_states_in_length_adaptive_update_indic": [9, 74, 110], "start_end_logit": [9, 74, 110], "subgraph_match": [9, 74, 110, 216], "token_type_embed": [9, 74, 110, 214], "token_type_embeddings_v1": [9, 74, 110, 214], "transpose_batch_matmul": [9, 74, 110, 214], "word_embed": [9, 74, 110, 212], "graph_util": [9, 110, 214, 217, 221], "logger": [9, 110, 231], "onnx_util": [9, 110], "tf_util": [9, 110], "load": [10, 11, 116, 118, 119, 126, 127, 136, 140, 141, 212, 214, 215, 216, 218, 224, 226, 227, 228, 230], "frontend": [10, 11, 228], "get_logg": 12, "log": [12, 212, 220], "level": [12, 141, 212, 216, 226, 228], "msg": 12, "arg": [12, 112, 118, 121, 126, 136, 191, 199, 215, 220], "kwarg": [12, 118, 121, 136, 140, 141], "format": [12, 199, 215, 229, 239], "debug": 12, "error": [12, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 212, 220, 231], "fatal": 12, "warn": 12, "get_children": 13, "input_name_to_nod": 13, "get_node_children_nam": 13, "nodeproto": 13, "get_initializer_children_nam": 13, "graph_node_names_detail": [13, 109], "pars": [13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 109, 212, 220], "graph_nodes_dict": [13, 109], "Be": [13, 109], "class": [13, 109, 127, 130, 134, 186, 188, 191, 200, 206, 207, 214, 220, 223, 225, 226], "cerat": 13, "output_nam": [13, 113, 118, 126], "ouput": 13, "param": [13, 109, 136, 225, 226], "node_names_detail": [13, 109], "is_supported_onnx_graph": [13, 158], "is_supported_onnx_nod": 13, "change_num_nam": 13, "number": [13, 113, 115, 116, 118, 141, 206, 216, 217, 221, 224, 230, 234, 239], "bias_to_int32": 13, "bias_nod": 13, "a_scal": 13, "b_scale": 13, "int8": [13, 127, 136, 184, 200, 208, 215, 216, 218, 226, 229, 233, 239], "int32": [13, 212], "matric": [13, 229], "scale": [13, 225, 239], "arrai": [13, 212], "fp32_bia": 13, "int8_bia": 13, "int8_bias_zero_point": 13, "int8_bias_scal": 13, "int32_bia": 13, "onnx_extract_oper": 13, "nodes_dict": [13, 32, 42, 43, 109], "tf_dtype": [13, 109], "set_attr": [14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 190, 214], "batchmatmul": 16, "batchmatmulv2": 17, "onnxruntim": [20, 21, 27, 29, 47, 52, 54, 56, 60, 61, 63, 209, 211, 214, 219], "regist": [22, 32, 43, 74, 92, 130, 132, 134, 224, 225, 226, 228, 229, 230], "binaryadd": [22, 225], "constantofshap": 22, "dequantizelinear": [22, 218], "div": [22, 214, 217], "erf": [22, 220], "expand": [22, 141], "fill": [22, 217, 229], "flatmapdataset": 22, "ident": [22, 207], "lessequ": 22, "makeiter": 22, "matmulwithbiasadd": [22, 84], "matmulwithbiasgelu": [22, 85], "matmulwithbiastanh": [22, 88], "matmulwithbia": [22, 83], "nonzero": [22, 227], "pow": [22, 214, 217], "qlinearmatmul": [22, 218], "qlinearadd": 22, "qlinearmul": 22, "realdiv": 22, "slice": 22, "sqrt": [22, 214, 217, 229], "squar": [22, 140, 141], "stopgradi": 22, "tanh": [22, 220, 226, 233], "tensorslicedataset": 22, "transposebatchmatmul": [22, 107, 214], "rang": [22, 113, 118, 199, 214, 216, 233, 238, 239], "relu": [22, 226, 233], "matmulwithbiasrelu": [22, 86], "quantiz": [22, 113, 118, 121, 125, 126, 136, 209, 225, 226, 233, 235, 240], "Not": [22, 122, 123, 206, 228], "cumsum": 22, "onehot": [22, 41], "tokentypeid": 22, "positionid": 22, "loop": [22, 136, 199, 214, 225, 229], "sigmoid": 22, "matmulwithbiassigmoid": [22, 87], "flatten": 22, "mergedembeddingbag": [22, 89], "convolut": [22, 207, 216], "expandindic": 22, "tile": [22, 224, 227, 229, 230, 233], "expanddim": 23, "fusedbatchnormv3": 25, "fusedgemm": 26, "fusedmatmul": 27, "gatherv2": [28, 214], "gatherel": [29, 214], "operator_registri": [32, 43, 214], "operator_typ": [32, 43, 214], "subclass": [32, 43, 74, 92, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193], "cl": [32, 43, 74, 92, 199], "registr": [32, 43, 74, 92, 214], "iteratorgetnext": 33, "iteratorv2": [34, 214], "mapandbatchdataset": [36, 214], "modeldataset": 40, "onnxinput": 42, "optimizedataset": [44, 214], "quantizelinear": [47, 214, 218], "quantizev2": 48, "quantizedmatmulwithbiasanddequant": 50, "reducemean": [51, 214, 217], "reducesum": 52, "scatterel": 54, "stridedslic": 58, "source_op": 59, "dest_op": 59, "definit": [59, 226], "topk": 60, "addclstoken": [64, 66], "fuse": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 218, 225, 226], "acceler": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 202, 208, 209, 218, 225, 226, 229, 239, 241, 244], "strategi": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 113, 118, 126], "addembed": 65, "attentionmasklengthadaptiveexpandindic": 66, "attentionoutputlayernormlengthadaptiveexpandindic": 67, "attentionreshap": 68, "collectquantinfo": 69, "convreshap": 70, "generatesequ": 73, "bass": [74, 92], "pattern_registri": [74, 92, 214], "pattern_typ": [74, 92, 214], "subgraphmatch": [74, 104, 216], "inputdata": [75, 214], "inputfil": 76, "insertbf16nod": 77, "insertquantnod": 78, "interactfeatur": 79, "lastlayershap": 80, "layernormwithreducemean": [82, 214], "outputdata": [90, 214], "positionembed": 93, "positionembeddingsv1": 94, "qkvmerg": 95, "qkvreshap": 96, "qunatizefus": 97, "reshapeafterrestorehiddenst": 98, "reshapebeforeandafterattentionoutlayernormgatherel": 99, "reshapebeforerestorehiddenst": 100, "reshapefus": 101, "restorehiddenstatesinlengthadapt": 102, "startendlogit": 103, "matcher": [104, 199, 218], "tokentypeembed": [105, 214], "tokentypeembeddingsv1": [106, 214], "wordembed": 108, "create_tf_nod": 109, "creat": [109, 118, 119, 123, 124, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 193, 214, 219, 220, 228, 233, 235], "when": [109, 136, 140, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 200, 208, 214, 216, 217, 220, 221, 224, 226, 228, 230, 233, 235, 236, 239], "tendorflow": 109, "get_tensor_dest_op": 109, "someth": 109, "store": [109, 116, 118, 119, 121, 199, 214, 217, 218, 221, 224, 225, 226, 227, 229, 230], "dest_op_nam": 109, "tf_extract_oper": 109, "tf_dtype_id": 109, "deal": [109, 199, 215], "multipl": [109, 140, 141, 208, 214, 215, 226, 228, 229, 230, 233, 235, 236], "indetermin": 109, "compil": [110, 184, 187, 210, 212, 213, 214, 216, 217, 219, 221, 243], "version": [111, 118, 121, 211, 216, 222, 232], "provid": [112, 113, 116, 118, 121, 125, 126, 136, 140, 141, 184, 199, 208, 209, 210, 214, 223, 226, 235, 239], "pytorchbenchmark": 112, "executorbenchmark": 112, "run": [112, 125, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 200, 206, 233, 234, 239], "self": [112, 140, 141, 199, 206, 214, 215], "print": [112, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 221], "tabl": [112, 216, 226, 230], "header": 112, "pytorch": [112, 113, 116, 118, 119, 121, 125, 136, 140, 141, 143, 200, 206, 209, 211, 237, 238, 239], "transform": [112, 113, 118, 126, 127, 136, 140, 141, 199, 200, 206, 207, 211, 213, 214, 225, 226, 229, 230, 236, 237, 238, 239], "overwrit": 112, "_prepare_inference_func": 112, "executorbenchmarkargu": [112, 200], "pretrainedconfig": 112, "process": [113, 118, 119, 122, 123, 136, 199, 208, 212, 214, 216, 217, 221, 224, 225, 230, 238, 239], "enum": [113, 114, 118, 128, 135, 147, 225, 226], "function": [113, 118, 119, 121, 122, 123, 125, 126, 136, 190, 191, 192, 193, 199, 207, 214, 216, 217, 220, 221, 225, 226, 233, 235, 238, 239], "inc": [113, 118, 121, 125, 126, 136, 219], "nncf": [113, 118], "dynamiclengthconfig": [113, 118, 136, 210], "max_length": [113, 118, 136, 184], "length_config": [113, 118, 140, 141, 210], "const_rat": [113, 118], "float": [113, 114, 118, 126, 128, 136, 138, 142, 190, 206, 207, 209, 214, 219, 225, 226, 235, 236, 238, 239], "num_sandwich": [113, 118], "length_drop_ratio_bound": [113, 115, 118], "layer_dropout_prob": [113, 115, 118], "layer_dropout_bound": [113, 115, 118], "dynamic_train": [113, 118], "bool": [113, 114, 118, 121, 136, 138, 140, 141, 142, 190, 191, 193, 207, 214, 225, 226, 235, 236], "fals": [113, 114, 116, 118, 121, 136, 140, 141, 184, 190, 199, 200, 207, 214, 216, 225, 226, 235], "load_store_fil": [113, 118], "evo_it": [113, 118], "30": [113, 118, 227], "population_s": [113, 118], "20": [113, 118, 211, 212, 219, 222, 227, 231, 232], "mutation_s": [113, 118], "mutation_prob": [113, 116, 118], "crossover_s": [113, 118], "num_cpu": [113, 118], "48": [113, 118, 222, 232], "distributed_world_s": [113, 118], "latency_constraint": [113, 118], "evo_eval_metr": [113, 118], "eval_f1": [113, 116, 118, 210, 235, 239], "dynam": [113, 118, 136, 220, 225, 228], "adapt": [113, 118, 184], "quantizationconfig": [113, 118, 125, 126, 136, 184, 210], "approach": [113, 118, 122, 123, 124, 206, 207, 208, 210, 226], "posttrainingstat": [113, 118, 208, 209, 210, 239], "timeout": [113, 118, 239], "max_trial": [113, 118, 199, 239], "100": [113, 118, 136, 140, 141, 233, 239], "metric": [113, 118, 119, 122, 123, 126, 136, 137, 184, 199, 210], "union": [113, 118, 136, 140, 141], "config_fil": [113, 118], "sampling_s": [113, 118], "use_bf16": [113, 118], "input_nam": [113, 118, 126], "op_wis": [113, 118], "maximum": [113, 118, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 222, 232, 239], "trial": [113, 118, 136], "performance_onli": [113, 118], "boolean": [113, 118], "whether": [113, 118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 215, 221], "random_se": [113, 118], "random": [113, 118, 140, 199], "seed": [113, 118, 199], "tensorboard": [113, 118], "directori": [113, 118, 121, 218, 223], "resume_path": [113, 118], "resum": [113, 118, 121, 136], "sampl": [113, 115, 118, 184, 199, 206, 222, 229, 239], "size": [113, 118, 140, 141, 199, 200, 210, 212, 216, 224, 228, 229, 239], "pruningconfig": [113, 118, 210], "epoch": [113, 118, 238], "epoch_rang": [113, 118, 128], "initial_sparsity_ratio": [113, 118, 128], "target_sparsity_ratio": [113, 118, 128, 210, 238], "97": [113, 118, 128, 232, 238], "pruner_config": [113, 118, 210, 238], "neural_compressor": [113, 118, 119, 122, 123, 125, 128, 136], "pruner": [113, 118, 128, 136, 207, 238], "prune": [113, 118, 125, 126, 131, 132, 136, 141, 184, 240], "target": [113, 118, 131, 136, 199, 215, 230, 238], "ratio": [113, 115, 116, 118, 207, 233, 235, 236, 238], "init_prune_config": [113, 118], "init": [113, 118, 119, 125, 126, 143, 144, 191, 193, 199, 206, 211, 212, 213, 226], "distillationconfig": [113, 118, 136, 210], "criterion": [113, 114, 118, 126, 138, 210, 235, 239], "distil": [113, 118, 119, 125, 126, 136, 184, 194, 206, 219], "inc_config": [113, 118], "tfdistillationconfig": [113, 118, 199], "loss_typ": [113, 114, 118, 199, 207], "loss_weight": [113, 118, 199], "train_step": [113, 118, 199], "temperatur": [113, 114, 118, 199, 206, 207], "flashdistillationconfig": [113, 118], "block_nam": [113, 118, 199], "layer_mappings_for_knowledge_transf": [113, 118, 199], "add_origin_loss": [113, 114, 118, 199, 207], "flash": [113, 118, 119, 136], "autodistillationconfig": [113, 118, 199], "search_spac": [113, 118, 122, 123, 199], "search_algorithm": [113, 118, 199], "bo": [113, 118, 199], "knowledge_transf": [113, 118, 199], "regular_distil": [113, 118, 199], "auto": [113, 118, 119, 126, 206, 215, 220, 226], "disil": [113, 118], "knowledg": [113, 118, 136, 199, 206], "transfer": [113, 118, 136, 144, 207], "regular": [113, 118, 119, 238], "space": [113, 118, 119, 122, 123, 136, 199, 216, 224], "max": [113, 115, 118, 136, 222, 225, 228, 230, 232, 239], "nasconfig": [113, 118, 122, 123, 124], "basic": [113, 118, 122, 123, 141, 144, 211, 220], "parser": [113, 118], "procedur": [113, 118, 233], "knowledgeloss": [114, 207], "ce": [114, 199, 207], "loss_weight_ratio": [114, 207], "layer_map": [114, 207], "distillationcriterionmod": [114, 118], "drop": [115, 131, 208, 230, 235], "restor": [115, 208], "sample_length_configur": 115, "max_seq_length": [115, 116], "num_hidden_lay": 115, "layer_config": [115, 140, 141], "length_drop_prob": 115, "length_drop_ratio": 115, "min_length": 115, "hidden": [115, 140, 141, 199], "probabl": [115, 199], "truncat": [115, 184], "less": [115, 207, 216, 230, 238], "than": [115, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 215, 216, 217, 225, 229, 233, 239], "min": [115, 239], "sample_layer_configur": 115, "layer_dropout": 115, "depend": [115, 122, 123, 211, 213], "paramat": 115, "dropout": 115, "how": [115, 136, 183, 212, 214, 215, 218, 219, 221, 226, 227, 233, 235, 238], "mani": [115, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 215, 217, 225, 227, 233], "bound": 115, "kept": 115, "evolust": 116, "evolustionari": 116, "approx_ratio": 116, "x": [116, 141, 216, 226, 228, 229, 233, 239], "12": [116, 206, 211, 213, 215, 222, 227, 229, 231, 232, 233], "l": [116, 199, 207], "384": [116, 199, 216, 222, 232], "approxim": 116, "invers": 116, "store2str": 116, "gene": 116, "mac": 116, "score": [116, 140, 141, 237], "parent": 116, "parmat": 116, "devic": [116, 206, 207, 212, 216, 237], "evalu": [116, 118, 119, 122, 123, 125, 126, 136, 199, 207, 215, 229, 235, 236, 238, 239], "lower_constraint": 116, "upper_constraint": 116, "eval_metr": 116, "evolutionari": [116, 136], "load_stor": 116, "store_fil": 116, "save_stor": 116, "get_stor": 116, "set_lower_constraint": 116, "constraint": [116, 239], "setter": [116, 141], "lower": [116, 230, 236, 239], "set_upper_constraint": 116, "upper": [116, 226], "save_popul": 116, "population_fil": 116, "popul": 116, "convex_hul": 116, "pareto_fronti": 116, "add_gen": 116, "mutat": 116, "rai": 116, "crossov": 116, "packag": [117, 120, 206], "drop_and_restore_util": [117, 118], "evolut": [117, 118, 208], "mixtur": 118, "auto_distil": [118, 120, 199], "basic_na": [118, 123], "utility_tf": [118, 137], "benchmark": [118, 184, 185, 194, 216, 222, 223, 232, 234], "optimizer_tf": 118, "trainer": [118, 125, 184, 208, 209, 210], "autodistil": [118, 119, 126, 136], "model_build": [118, 119, 122, 123, 126, 136, 199], "conf_fname_or_obj": [118, 119, 122, 123, 124], "experiment": [118, 119, 122, 123, 125, 136, 226], "nasbas": [118, 119, 122, 123, 124], "design": [118, 119, 136, 214, 223, 225, 226], "handl": [118, 119, 136, 140, 141, 183, 191, 199, 220, 227, 228], "three": [118, 119, 128, 135, 136, 199, 214, 217, 221, 229, 238, 239], "major": [118, 119, 136, 199, 224, 230, 239], "stage": [118, 119, 136, 190, 199], "explor": [118, 119, 136, 199, 210], "compress": [118, 119, 136, 184, 199, 207, 210, 224, 227, 230, 239], "architectur": [118, 119, 122, 123, 136, 140, 141, 184, 199, 211, 224], "iter": [118, 119, 136, 199, 212, 216, 220, 225, 228, 229, 233, 234], "train": [118, 119, 122, 123, 125, 126, 136, 184, 199, 200, 206, 207, 238], "discov": [118, 119, 136, 199], "potenti": [118, 119, 136, 199], "measur": [118, 119, 136, 199, 207, 223, 235, 236, 238, 239], "predict": [118, 119, 136, 140, 141, 199, 206, 207], "accuraci": [118, 119, 136, 199, 207, 208, 210, 233, 235, 236, 238], "hardwar": [118, 119, 136, 199, 207, 231], "etc": [118, 119, 136, 199, 207, 215], "select": [118, 119, 136, 140, 141, 199, 226], "best": [118, 119, 122, 123, 136, 199, 208], "teacher_model": [118, 119, 125, 126, 136, 199, 207, 210], "getter": [118, 119, 136, 141], "teacher": [118, 119, 125, 126, 199, 207, 208], "student_model": [118, 119], "student": [118, 119, 199, 207], "train_func": [118, 119, 122, 123, 125, 126, 136, 199], "eval_func": [118, 119, 122, 123, 125, 126, 136, 199], "res_save_path": [118, 119, 122, 123], "model_cl": [118, 119, 126, 136, 199], "found": [118, 119, 122, 123, 213, 214, 230], "estim": [118, 119, 122, 123, 215, 230], "load_search_result": [118, 119], "init_by_cfg": [118, 119, 122, 123], "instanc": [118, 119, 122, 123, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 212, 215, 222, 232, 234, 235, 236, 237], "create_distil": [118, 119], "optimizedmodel": [118, 121], "from_pretrain": [118, 121, 140, 141, 184, 200, 237], "classmethod": [118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "model_name_or_path": [118, 121, 206], "instanti": [118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "given": [118, 121, 140, 141, 206, 221, 226, 228, 229, 230, 238], "intel": [118, 121, 183, 200, 206, 210, 211, 212, 213, 214, 222, 224, 231, 232, 236, 237, 238, 239], "compressor": [118, 121, 126, 184, 236, 239], "repositori": [118, 121], "hug": [118, 121, 184, 218], "face": [118, 121, 184, 218], "hub": [118, 121, 237], "local": [118, 121, 136, 214, 224], "host": [118, 121], "cache_dir": [118, 121], "download": [118, 121, 140, 141], "cach": [118, 121, 191, 220, 229], "standard": [118, 121], "force_download": [118, 121], "default": [118, 121, 127, 136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 206, 207, 214, 216, 222, 226, 230, 231, 232, 233, 235, 236, 238, 239], "forc": [118, 121], "re": [118, 121, 227], "overrid": [118, 121, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 220], "resume_download": [118, 121], "delet": [118, 121, 191, 193, 238], "incomplet": [118, 121], "receiv": [118, 121, 217, 221], "attempt": [118, 121], "revis": [118, 121], "branch": [118, 121, 233], "tag": [118, 121], "commit": [118, 121, 234], "sinc": [118, 121, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 207], "we": [118, 121, 122, 123, 141, 206, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 239], "git": [118, 121, 206, 211, 212, 213], "system": [118, 121, 213], "artifact": [118, 121], "huggingfac": [118, 121, 235, 237], "co": [118, 121], "allow": [118, 121], "q_model": [118, 121], "obj": [118, 122, 123, 124], "tfoptim": [118, 126, 199, 207], "pretrainedmodel": [118, 126, 136, 140, 141, 199], "training_args_tf": [118, 126], "tftrainingargu": [118, 126], "train_dataset": [118, 126, 184, 199], "eval_dataset": [118, 126, 184, 199], "compute_metr": [118, 126, 199], "callabl": [118, 125, 126, 136, 199], "task_typ": [118, 126, 144], "task_id": [118, 126, 144], "entri": [118, 126, 136, 141], "techniqu": [118, 126, 208, 210, 239], "dataset": [118, 126, 136, 144, 206, 208, 235, 239], "builtin_eval_func": [118, 126, 136], "saved_model": [118, 126], "quantized_model_path": [118, 126], "larger": [118, 126, 136], "init_quant": [118, 125, 126, 136, 225], "quant_config": [118, 125, 126, 136, 184, 210, 239], "prepar": [118, 125, 126, 141, 190, 206, 215, 217, 220, 225, 226, 230, 239], "invok": [118, 125, 126], "init_prun": [118, 125, 126, 136], "pruning_config": [118, 125, 126, 136, 210, 238], "init_distil": [118, 125, 126, 136], "distillation_config": [118, 125, 126, 136, 207, 210], "model_builder_builtin": [118, 126, 136, 199], "arch_para": [118, 126, 136], "built": [118, 126, 199, 236], "builder": [118, 126, 199], "autodistillation_config": [118, 126, 136, 199], "build_train_func": [118, 126], "build": [118, 122, 123, 126, 136, 199, 213, 224, 231, 236], "prunerconfig": [118, 128, 210], "update_frequ": [118, 128], "prune_typ": [118, 128, 210, 238], "basicmagnitud": [118, 128, 208, 210, 238], "per_tensor": [118, 128], "pruningmod": [118, 128], "current": [118, 128, 135, 215, 225, 226, 228, 229, 233], "quantizationmod": [118, 135], "both": [119, 136, 140, 141, 206, 210, 229, 233, 234, 235, 239], "basicna": [122, 123], "conf_fnam": [122, 123], "dictionari": [122, 123, 136], "here": [122, 123, 136, 213, 214, 216, 217, 218, 220, 221, 226, 230, 239], "common": [124, 239], "orchestr": [125, 136, 184], "orchestrate_optim": [125, 136], "compon": [125, 136, 225], "aggreg": 125, "fit": 125, "schedul": [125, 136, 199, 223], "notraineroptim": [125, 207, 238, 239], "saved_result": 125, "calib_func": 125, "calib": 125, "calib_dataload": [125, 136], "calibr": [125, 136, 239], "dataload": [125, 136, 144], "_inc_quant": 125, "infer_framework_load_model": 127, "autoconfig": [127, 184, 200, 237], "model_class": 127, "task": [127, 141, 144, 199, 206, 207, 208, 219, 226, 229, 231, 237], "model_kwarg": [127, 141, 237], "register_pattern": 130, "registri": [130, 132, 134], "get_pattern": 130, "parse_to_prun": 131, "keep": [131, 217], "parse_not_to_prun": 131, "non": [131, 141, 228, 229, 230, 234], "register_prun": 132, "get_prun": 132, "snipprun": 132, "snip": 132, "singl": [132, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 229], "shot": 132, "sensit": 132, "http": [132, 140, 206, 211, 212, 213, 220], "arxiv": [132, 140], "org": [132, 140, 211], "ab": [132, 140, 239], "1810": 132, "02340": 132, "register_schedul": 134, "get_schedul": 134, "easili": [136, 224, 225], "finetun": [136, 184, 200, 208, 237], "basetrain": 136, "resuming_checkpoint": 136, "checkpoint": [136, 140], "builtin_train_func": 136, "goal": [136, 238], "automativ": 136, "recip": [136, 206, 216, 236], "low": [136, 210, 224, 236, 239], "precis": [136, 209, 218, 236, 239], "achiev": [136, 236], "point": [136, 141, 199, 217, 225, 226, 239], "automat": [136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 206, 215, 216, 217, 225, 233], "pruningconf": 136, "torch": [136, 140, 141, 237], "nn": [136, 140, 141, 228], "smaller": [136, 207, 238], "config_list": 136, "optimizt": 136, "combin": [136, 199, 216, 221, 225, 226, 239], "create_optimizer_builtin": 136, "resume_from_checkpoint": 136, "optuna": 136, "ignore_keys_for_ev": 136, "tor": 136, "present": [136, 140], "state": [136, 140, 141, 222, 232], "hyperparamet": [136, 199], "ignor": [136, 140, 141, 214], "dure": [136, 212, 230, 234, 236, 238, 239], "keyword": 136, "argument": [136, 140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 207, 215, 234, 235, 236, 238, 239], "hide": [136, 140, 141], "deprec": [136, 140, 141], "training_step": 136, "batch": [136, 184, 200, 212, 228, 229, 234], "inject": [136, 226], "behavior": [136, 207, 224, 225, 238, 239], "being": 136, "fed": 136, "most": [136, 217, 221, 225, 226, 229, 237], "expect": [136, 140, 141, 200, 230, 236], "under": [136, 212, 214, 215, 218, 233], "label": [136, 140, 141, 206, 234, 237], "document": [136, 206, 207, 210, 229, 230, 238, 239], "accept": [136, 237], "loss": [136, 140, 141, 199, 206, 207, 239], "training_step_length_adapt": 136, "compute_loss": 136, "return_output": 136, "By": [136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 212], "nas_config": 136, "baseic": 136, "callabel": 136, "auto_distil_evaluation_loop": 136, "descript": [136, 206, 207, 215, 230, 235, 236, 238, 239], "prediction_loss_onli": 136, "ignore_kei": 136, "metric_key_prefix": 136, "eval": [136, 199, 235], "trainer_util": 136, "evalloopoutput": 136, "share": 136, "work": [136, 183, 226, 237], "doe": [136, 214, 225, 226, 227, 228, 229], "avoid": [136, 140, 141, 221, 224, 226, 229, 233], "memori": [136, 200, 220, 225, 226, 227, 228, 229, 230, 236, 239], "huge": 136, "export_to_onnx": [136, 200, 209], "tranfer": 136, "export_to_fp32_onnx": 136, "save_path": [136, 209], "opset_vers": [136, 209], "14": [136, 209, 222, 227, 231, 232], "do_constant_fold": [136, 209], "verbos": [136, 209], "fp32": [136, 200, 208, 212, 215, 216, 218, 220, 225, 226, 227, 228, 233, 237, 239], "export_to_bf16_onnx": 136, "bf16": [136, 208, 218, 226, 227, 233], "export_to_int8_onnx": 136, "quant_format": [136, 209], "qdq": [136, 209, 218], "s8s8": [136, 209], "sample_s": 136, "calibrate_method": 136, "minmax": 136, "scale_map": 136, "export_to_jit": 136, "jit": [136, 223, 225, 226, 228], "set_dynamic_config": [136, 210], "dynamic_config": [136, 210], "run_evolutionary_search": 136, "nlptrainer": [136, 184, 207, 210, 238, 239], "nlp": [136, 184, 206, 208, 210, 212, 219, 238, 239], "nlpseq2seqtrain": 136, "seq2seqtrain": 136, "seq2seq": [136, 140, 141], "lenght": 136, "num_beam": 136, "numbert": 136, "beam": 136, "greater_is_bett": [138, 142, 184, 199, 235, 236, 239], "is_rel": [138, 210, 235, 239], "01": [138, 200, 210, 232, 235, 239], "weight_ratio": [138, 142, 235, 236, 239], "modeling_bert_dynam": 139, "modeling_roberta_dynam": 139, "bert": [140, 199, 207, 208, 212, 215, 216, 219, 221, 222, 225, 229], "load_tf_weights_in_bert": 140, "tf_checkpoint_path": 140, "bertembed": [140, 141], "word": [140, 141, 208, 230], "posit": [140, 141, 184, 216, 221, 233, 237], "token_typ": 140, "bertpretrainedmodel": 140, "modeling_util": [140, 141], "abstract": [140, 141], "weight": [140, 141, 199, 207, 209, 215, 216, 218, 224, 227, 228, 230, 233, 235, 236, 238, 239], "simpl": [140, 141, 211, 212, 225, 237], "pretrain": [140, 141, 214], "bertforpretrainingoutput": 140, "modeloutput": 140, "bertforpretrain": 140, "floattensor": [140, 141], "sum": [140, 207, 215, 230, 233], "mask": [140, 141, 208, 225, 226, 227], "languag": [140, 141, 184, 206, 208, 237], "classif": [140, 141, 199, 207, 208, 237], "prediction_logit": [140, 141], "batch_siz": [140, 141, 144, 200, 212, 215, 219, 229, 233], "sequence_length": [140, 141, 200], "vocab_s": [140, 141], "vocabulari": 140, "token": [140, 141, 184, 206, 208, 218, 237], "seq_relationship_logit": 140, "continu": [140, 224, 229], "hidden_st": [140, 141], "output_hidden_st": [140, 141], "hidden_s": [140, 141, 199], "plu": 140, "output_attent": [140, 141], "num_head": [140, 141], "averag": [140, 215], "bertmodel": 140, "add_pooling_lay": [140, 141], "behav": [140, 141], "encod": [140, 141, 199, 215, 221], "well": [140, 141, 209, 239], "decod": [140, 141, 231], "case": [140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 207, 208, 215, 216, 224, 226, 227, 233, 234], "cross": [140, 141], "ad": [140, 141, 214, 217, 221, 225, 230, 233, 237], "describ": [140, 141, 206, 228, 229, 233, 235, 236], "1706": [140, 222, 232], "03762": 140, "ashish": [140, 141], "vaswani": [140, 141], "noam": [140, 141], "shazeer": [140, 141], "niki": [140, 141], "parmar": [140, 141], "jakob": [140, 141], "uszkoreit": [140, 141], "llion": [140, 141], "jone": [140, 141], "aidan": [140, 141], "gomez": [140, 141], "lukasz": [140, 141], "kaiser": [140, 141], "illia": [140, 141], "polosukhin": [140, 141], "To": [140, 141, 199, 214, 229, 230, 233, 234], "is_decod": [140, 141], "add_cross_attent": [140, 141], "encoder_hidden_st": [140, 141], "forward": [140, 141, 190, 199, 215, 220, 239], "pass": [140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 225, 226, 237, 239], "attention_mask": [140, 141], "token_type_id": [140, 141], "position_id": [140, 141], "head_mask": [140, 141], "inputs_emb": [140, 141], "encoder_attention_mask": [140, 141], "past_key_valu": [140, 141], "use_cach": [140, 141], "return_dict": [140, 141], "always_keep_cls_token": [140, 141], "modeling_output": [140, 141], "basemodeloutputwithpoolingandcrossattent": [140, 141], "pad": [140, 141, 184, 215, 230], "indic": [140, 141, 221, 225, 226, 229, 230, 235], "n_layer": [140, 141], "embed_size_per_head": [140, 141], "precomput": [140, 141], "block": [140, 141, 208, 224, 227, 228, 230, 238], "speed": [140, 141, 200, 214, 217], "up": [140, 141, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 215, 217, 226, 233], "decoder_input_id": [140, 141], "those": [140, 141, 229, 238, 239], "past": [140, 141], "instead": [140, 141], "next_sentence_label": 140, "longtensor": [140, 141], "docstr": [140, 141], "pair": [140, 212, 226, 230], "legaci": [140, 141], "berttoken": 140, "uncas": [140, 184, 199, 200, 208, 218, 237], "hello": [140, 141], "my": [140, 141], "dog": [140, 141], "cute": [140, 141], "return_tensor": [140, 141, 184], "pt": [140, 141, 184, 237], "bertlmheadmodel": 140, "causallmoutputwithcrossattent": [140, 141], "bertformaskedlm": 140, "maskedlmoutput": [140, 141], "bertfornextsentencepredict": 140, "nextsentencepredictoroutput": 140, "prompt": 140, "itali": 140, "pizza": 140, "serv": 140, "formal": 140, "restaur": 140, "unslic": 140, "next_sent": 140, "sky": 140, "blue": 140, "shorter": 140, "wavelength": 140, "light": 140, "logit": [140, 141, 184, 199, 207, 212], "sentenc": [140, 141, 184, 206], "wa": 140, "bertforsequenceclassif": 140, "sequenceclassifieroutput": [140, 141], "regress": [140, 141, 206], "num_label": [140, 141, 184], "entropi": [140, 141, 199], "bertformultiplechoic": 140, "multiplechoicemodeloutput": [140, 141], "choic": [140, 141, 208], "num_choic": [140, 141], "dimens": [140, 141, 199, 207, 216, 228, 229, 230, 233], "bertfortokenclassif": 140, "tokenclassifieroutput": [140, 141], "bertforquestionansw": 140, "start_posit": [140, 141], "end_posit": [140, 141], "questionansweringmodeloutput": [140, 141], "span": [140, 141], "clamp": [140, 141], "taken": [140, 141], "account": [140, 141], "roberta": [141, 208], "robertaembed": 141, "tini": [141, 208], "tweak": 141, "past_key_values_length": 141, "create_position_ids_from_inputs_emb": 141, "directli": [141, 225, 227], "cannot": [141, 224, 230, 234], "sequenti": [141, 217, 225, 226, 228], "robertaselfattent": 141, "position_embedding_typ": 141, "transpose_for_scor": 141, "robertaselfoutput": 141, "robertaattent": 141, "attenion": 141, "prune_head": 141, "robertaintermedi": 141, "intermidi": 141, "robertaoutput": 141, "robertalay": 141, "output_length": 141, "feed_forward_chunk": 141, "attention_output": 141, "feed": [141, 207, 212], "robertaencod": 141, "roberata": 141, "basemodeloutputwithpastandcrossattent": 141, "robertapool": 141, "pooler": 141, "robertapretrainedmodel": 141, "update_keys_to_ignor": 141, "del_keys_to_ignor": 141, "robertamodel": 141, "_": [141, 199, 200, 206, 207, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 233, 235, 236, 237, 238, 239], "get_input_embed": 141, "set_input_embed": 141, "set_length_config": 141, "set_output_attent": 141, "robertaforcausallm": 141, "causal": [141, 206], "get_output_embed": 141, "set_output_embed": 141, "new_embed": 141, "robertatoken": 141, "robertaconfig": 141, "prepare_inputs_for_gener": 141, "robertaformaskedlm": 141, "robertalmhead": 141, "featur": [141, 184, 199, 205, 207, 218, 221, 224, 231, 237, 244], "robertaforsequenceclassif": 141, "robertaformultiplechoic": 141, "robertafortokenclassif": 141, "robertaclassificationhead": 141, "robertaforquestionansw": 141, "quanstion": 141, "answer": [141, 208], "create_position_ids_from_input_id": 141, "padding_idx": 141, "symbol": 141, "begin": [141, 199, 225, 226], "fairseq": 141, "make_posit": 141, "expand_gath": 141, "dim": [141, 212, 220, 224, 230, 233], "models": [142, 208, 236], "distributed_init": [143, 144], "backend": [143, 200, 208, 210, 211, 213, 214, 216, 218, 221, 223, 233, 239], "gloo": 143, "world_siz": 143, "rank": 143, "init_method": 143, "master_addr": 143, "127": [143, 215, 231, 232, 239], "master_port": 143, "12345": 143, "distibut": 143, "environ": [143, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 233], "tfdataload": 144, "worker_address": 144, "worker": 144, "distribut": [144, 199, 207, 239], "address": [144, 184, 225], "treat": [144, 214], "chief": 144, "get_filepath": 144, "base_dirpath": 144, "folder": [144, 212, 213, 214, 215, 216, 218], "keras2savedmodel": 144, "kera": 144, "save_model": 144, "augmentertyp": 147, "enumer": 147, "deriv": [147, 191, 223, 229], "testaddclstoken": 149, "methodnam": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "runtest": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "unittest": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "testcas": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "whose": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 199, 221], "test": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 208, 211, 222, 232, 233, 234], "code": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210, 211, 214, 216, 226, 227, 228, 231, 233], "itself": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 231], "place": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 226, 238], "fixtur": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "constructor": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 220], "author": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "deconstruct": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "implement": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 193, 199, 214, 216, 217, 221, 223, 224, 225, 228, 229, 231, 233], "setup": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 206, 211, 214], "teardown": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "respect": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 218], "necessari": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 220, 230], "__init__": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214], "alwai": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 221, 234], "chang": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 224, 225, 230], "signatur": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "failureexcept": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "determin": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 216, 223, 231], "except": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 216, 225], "rais": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "fail": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "deem": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "rather": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 217, 225], "longmessag": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "long": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 221], "messag": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "includ": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 193, 208, 212, 215, 216, 223, 226, 230, 233, 239], "repr": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "failur": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "explicit": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 193, 220, 226], "maxdiff": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "diff": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "difflib": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "look": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 214, 215, 226], "individu": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "setupclass": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "hook": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "teardownclass": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "testattentionreshap": [150, 151, 173, 176], "testconvreshap": 152, "testembeddingbag": 153, "testexecutionopt": 154, "testgelu": 155, "testgraphdispatch": 156, "testinsertinputouputdata": 157, "testissupportedonnxgraph": 158, "testlastlayershap": 159, "testlayernormwithreducemean": [160, 175, 177], "testmain": 161, "testmatmulwithbiasrelu": 162, "testmatmulwithbiassigmoid": 163, "testmatmulwithbiastanh": 164, "testmergedembeddingbag": 165, "testonnxutil": 167, "testop": 168, "testpaddingsequ": 169, "testpatterndispatch": 170, "testpositionembed": 171, "testqkvmerg": 172, "testquantonnxexecut": 174, "teststartendlogit": 178, "testtfutil": 179, "testtokentypeembed": 180, "testtranspos": 181, "testtransposebatchmatmul": 182, "issu": [183, 199, 239], "center": 183, "inform": [183, 185, 186, 187, 188, 194, 207, 212, 215, 222, 226, 228, 232, 233, 238, 239], "resolv": 183, "guidelin": 183, "innov": 184, "toolkit": [184, 208, 212], "particular": 184, "effect": [184, 206, 214, 233], "4th": 184, "xeon": [184, 208, 211, 224, 232, 239], "scalabl": [184, 208, 211, 225], "processor": [184, 208, 211, 222, 232], "sapphir": [184, 211], "rapid": [184, 211], "codenam": 184, "aim": [184, 210, 214, 215, 217], "seamless": 184, "experi": [184, 227, 230], "extend": 184, "leverag": [184, 199, 207, 210], "advanc": [184, 199, 223, 231], "awar": 184, "softwar": 184, "optim": [184, 199, 200, 207, 208, 209, 210, 211, 212, 217, 218, 219, 225, 226, 228, 235, 236, 237, 238, 239], "runtim": [184, 231, 233, 239], "releas": 184, "neurip": 184, "2022": [184, 222, 232], "paper": [184, 210], "fast": [184, 210], "distilbert": [184, 199, 200, 208, 210, 218, 237], "cpu": [184, 206, 210, 211, 212, 220, 222, 224, 226, 231, 232, 237], "quala": [184, 208, 210], "minilm": [184, 208, 210], "2021": 184, "onc": [184, 215], "pre": [184, 217], "applic": 184, "stabl": [184, 211], "diffus": [184, 208], "gpt": [184, 206, 208], "j": [184, 208, 212, 213, 214, 223, 228, 230, 231, 233], "6b": [184, 208], "t5": [184, 208], "setfit": 184, "pip": [184, 206, 211, 219], "page": 184, "load_dataset": [184, 206], "load_metr": 184, "automodelforsequenceclassif": 184, "autotoken": [184, 237], "raw_dataset": [184, 206], "glue": [184, 206], "sst2": [184, 206, 208, 215, 219], "sst": [184, 200, 206, 208, 237], "english": [184, 200, 208, 237], "lambda": 184, "128": [184, 199, 200, 215, 219, 222, 232, 233, 239], "intel_extension_for_transform": [184, 200, 207, 210, 211, 212, 214, 216, 218, 221, 223, 233, 235, 236, 237, 238, 239], "label2id": 184, "id2label": 184, "neg": 184, "q_config": [184, 210, 239], "eval_loss": [184, 199], "argmax": 184, "item": 184, "quick": [184, 214], "matrix": [184, 224, 227, 228, 229, 230, 233, 238], "overview": 184, "kernel": [184, 188, 212, 215, 220, 222, 224, 225, 226, 229, 231, 232], "librari": [184, 202, 225, 226, 241], "export": [184, 200, 212, 215, 218, 237], "deploy": [184, 206, 210, 216], "profil": [184, 242], "augment": 184, "tutori": [184, 212], "AND": 184, "blog": 184, "publish": 184, "medium": [184, 206, 234], "mleffici": 184, "effici": [184, 210], "dec": 184, "nov": 184, "coher": 184, "novemb": 184, "alibaba": 184, "deep": [184, 206, 218, 226, 236, 239], "learn": [184, 206, 218, 226, 236, 239], "purif": 184, "aug": [184, 206], "namespac": [190, 191, 192, 193], "public": [190, 191, 192, 193, 220, 225, 226], "typedef": 190, "std": [190, 191, 192, 193, 223, 225, 226], "unordered_map": [190, 226], "shared_ptr": [190, 191, 193, 220], "kernelhandl": 190, "operatorconfig": [190, 220], "executionopt": [190, 216], "e_ptr": 190, "m_ptr": 190, "inlin": [190, 191, 192, 193, 225], "void": [190, 191, 193, 220, 223, 225, 226], "vector": [190, 191, 192, 193, 220, 223, 225, 226, 228, 229, 230], "adaptattr": 190, "adapttensor": 190, "resetopstatu": 190, "getexecutekernel": 190, "reshape_model": 190, "has_dispatch_table_fil": 190, "set_tuning_mod": 190, "do_tun": 190, "operator_conf": 190, "execute_kernel": 190, "no_tuning_spac": 190, "set_post_op": 190, "post_op": 190, "set_lat": 190, "latenc": [190, 199, 208, 215, 222, 232, 239], "set_enable_spars": 190, "enable_spars": 190, "kernel_typ": [190, 233, 234], "weight_zero_ratio": 190, "set_weight_shap": 190, "int64_t": 190, "weight_shap": 190, "set_table_id": 190, "table_id": 190, "set_perf_ratio_id": 190, "perf_ratio_id": 190, "set_it_shap": 190, "input_shap": [190, 215, 216, 233], "set_ot_shap": 190, "output_shap": [190, 215], "get_it_shap": 190, "get_ot_shap": 190, "set_reshape_tim": 190, "reshape_time_": 190, "get_reshape_tim": 190, "input_attr": 190, "get_attr": 190, "protect": [190, 191, 192, 193], "size_t": [190, 216, 226], "gethash": 190, "name_": 190, "type_": 190, "operator_conf_": [190, 220], "isa": [190, 216, 225, 230, 231], "cpu_isa_": 190, "kernel_handler_": 190, "execute_kernel_": 190, "do_tuning_": 190, "no_tuning_space_": 190, "iter_cnt_": 190, "sparselib_available_": 190, "tune_dense_in_sparse_": 190, "monopoly_kernel_": 190, "dispatch_table_file_exists_": 190, "execution_options_ptr_": 190, "nullptr": [190, 191, 225], "adapt_action_": 190, "model_": 190, "jd": [191, 192, 193, 226], "templat": [191, 193], "typenam": [191, 193], "arg_t": 191, "proxy_bas": 191, "hpp": [191, 193, 216, 223, 233], "proxi": [191, 223], "anyth": 191, "similar": [191, 217, 225, 227, 228, 229, 238], "onednn": [191, 220], "struct": [191, 225, 226], "oneapi": [191, 220, 231], "dnnl": [191, 216, 220], "136": 191, "virtual": [191, 192, 193, 220, 225, 226], "reset_sp": 191, "sp": 191, "get_sp": 191, "create_proxy_object": 191, "result_ref": 191, "privat": [191, 212, 220, 224, 225, 226], "member": [191, 220, 225, 226], "data_handle_": 191, "kernel_desc_proxi": 191, "kernel_desc_t": [191, 193], "operator_desc": [191, 192, 223], "real": [191, 193, 216, 229, 231], "attention_desc": 191, "eltwiseop_desc": 191, "gather_desc": 191, "layernorm_ba_desc": [191, 225], "softmax_desc": 191, "sparse_matmul_desc": [191, 223], "transpose_matmul_desc": 191, "op_desc": [191, 192, 223, 226], "kernel_kind": [191, 226], "impl_list_item_t": [191, 192], "impl_list_": 191, "kernel_proxi": 191, "kernel_t": [191, 193], "eltwiseop": [191, 225, 226], "layernorm_ba": 191, "sparse_matmul": [191, 231], "transpose_matmul": 191, "kdp": 191, "rt_data": [191, 193, 223], "kd": [191, 193, 199, 207, 223], "sparse_matmul_desc_t": 191, "sparse_matmul_t": 191, "primit": [191, 193, 220, 223], "attention_k_t": [191, 193], "attention_ref_k_t": [191, 193], "eltwiseop_k_t": [191, 193], "eltwiseop_ref_k_t": [191, 193], "gather_k_t": [191, 193], "gather_ref_k_t": [191, 193], "layernorm_ba_k_t": [191, 193], "layernorm_ba_ref_k_t": [191, 193], "matmul_avx512f_p2031_p2013_k_t": [191, 193], "matmul_ref_k_t": [191, 193], "matmul_vnni_noperm_p2031_p1302_k_t": [191, 193], "matmul_vnni_p2031_p2013_k_t": [191, 193], "softmax_k_t": [191, 193], "softmax_ref_k_t": [191, 193], "spmm_amx_bf16_x16_k_t": [191, 193], "spmm_avx512f_k_t": [191, 193], "spmm_ref_k_t": [191, 193], "spmm_vnni_k_t": [191, 193], "derived_k_t": [191, 193], "derived_kd_t": [191, 193], "k_ref": [191, 193], "kd_": [191, 193], "cpu_engin": 192, "engine_kind": [192, 226], "eng_kind": [192, 223, 226], "get_implementation_list": 192, "eng_kind_": [192, 226], "within": [199, 228], "arch": 199, "proposit": 199, "propos": [199, 207, 224], "promis": [199, 228], "assess": 199, "64": [199, 200, 211, 215, 222, 229, 231, 232, 233], "num": [199, 206, 215, 224, 226, 229], "advisor": 199, "bayesian": 199, "ever": 199, "find": [199, 214, 216, 220, 221, 228, 238], "minim": [199, 207, 230], "done": [199, 207, 216, 233, 239], "z": [199, 207], "distanc": [199, 207], "euclidean": [199, 207], "kullback": [199, 207], "leibler": [199, 207], "diverg": [199, 207], "term": [199, 207, 228, 229, 230, 235, 236, 239], "assign": 199, "cal": 199, "sloss": 199, "intermedi": [199, 214, 218, 221, 230, 239], "mismatch": 199, "512": [199, 215, 228, 230, 232], "linear": [199, 207, 226, 228, 229], "desir": [199, 215], "unmatch": 199, "def": [199, 214], "agent": 199, "train_func_builtin": 199, "flash_distil": 199, "eval_func_builtin": 199, "els": [199, 214, 220], "search_loop": 199, "model_arch_para": 199, "oob": 199, "246": 199, "intra_bottleneck_s": 199, "96": [199, 222, 232], "160": [199, 222, 231], "num_attention_head": 199, "intermediate_s": 199, "640": 199, "num_feedforward_network": 199, "mobilebert": [199, 207, 208], "kl": 199, "mse": 199, "best_model_arch": 199, "automodelforpretrain": 199, "higher_is_bett": 199, "10": [199, 206, 211, 215, 222, 227, 232, 233], "42": [199, 222, 232], "500": 199, "25000": 199, "mobilebert_distil": 199, "sgd": 199, "learning_r": 199, "001": 199, "mobilebert_na": 199, "5000": 199, "partial": 199, "pylint": 199, "disabl": [199, 222, 232], "e1101": 199, "makedir": 199, "exist_ok": 199, "120": [199, 231], "240": 199, "256": [199, 215, 232], "tfautomodelforsequenceclassif": 199, "inherit": [200, 207, 214, 220, 237, 238, 239], "help": [200, 206, 221, 225], "improv": [200, 215, 225, 228, 230, 239], "reduct": [200, 210, 228, 229], "compar": [200, 208, 224, 233, 239], "pytorchbenchmarkargu": 200, "model_id_fp32": 200, "model_id_int8": 200, "benchmark_arg": 200, "32": [200, 209, 212, 222, 227, 228, 229, 230, 231, 232, 233], "multi_process": 200, "only_pretrain_model": 200, "seq": [200, 212, 229], "time": [200, 215, 224, 225, 227, 228, 229, 230, 233, 234, 239], "finetu": 200, "017": 200, "021": [200, 222], "029": 200, "013": [200, 222], "mb": [200, 208], "255": [200, 222, 239], "45": [200, 222, 232], "engl": 200, "65": [200, 232], "026": 200, "md": [200, 215, 218], "model_nam": [200, 237], "008": 200, "012": 200, "023": 200, "003": 200, "004": 200, "466": 200, "132": [200, 232], "53": [200, 231, 232], "extens": [206, 210, 211, 213, 214, 236, 237, 238], "tool": [206, 208, 215, 223, 233], "machin": [206, 233], "project": 206, "integr": 206, "nlpaug": 206, "lab": 206, "clone": [206, 211, 213, 214], "github": [206, 211, 212, 213, 220], "com": [206, 211, 212, 213, 222, 232], "cd": [206, 211, 213, 214, 219, 223, 231, 233], "submodul": [206, 211, 212, 213], "updat": [206, 211, 212, 213, 238], "recurs": [206, 211, 212, 213, 221], "preprocess": 206, "data_augment": 206, "dataaugment": 206, "augmenter_typ": 206, "textgenerationaug": 206, "input_dataset": 206, "dev": 206, "csv": 206, "output_path": 206, "join": 206, "result_path": 206, "test1": 206, "cv": 206, "augmenter_argu": 206, "gpt2": 206, "data_aug": 206, "data_fil": 206, "delimit": [206, 233], "asserttru": 206, "len": [206, 212, 214, 221, 229], "json": 206, "column": [206, 224, 228, 230, 238], "conduct": 206, "integ": [206, 209, 216, 217, 230, 233, 238, 239], "cuda": 206, "keyboardaug": 206, "ocraug": 206, "spellingaug": 206, "contextualwordembsforsentenceaug": 206, "condit": [206, 216, 217], "xl": 206, "xlnet": [206, 208], "ctrl": [206, 208], "enough": [206, 239], "rescu": 206, "natur": [206, 208], "fine": [206, 238, 239], "eo": 206, "open": [206, 212, 218], "txt": [206, 211, 212, 216, 219, 231], "w": [206, 215, 216, 224], "fw": 206, "clm": [206, 208], "train_fil": 206, "validation_fil": 206, "model_dir": 206, "python3": [206, 213], "run_clm": 206, "do_train": 206, "do_ev": 206, "overwrite_output_dir": 206, "secondli": 206, "training_set": 206, "scenario": 206, "line": [206, 214, 216, 224, 229, 230, 234], "stop": [206, 239], "k": [206, 216, 223, 225, 227, 228, 229, 230, 232, 233], "p": 206, "repetit": 206, "penalti": 206, "wide": [207, 226, 239], "larg": [207, 208, 221, 222, 224, 229], "signific": 207, "expens": 207, "deploi": 207, "power": [207, 208], "mobil": 207, "shown": [207, 216, 228, 230], "workflow": [207, 216, 218, 229], "take": [207, 215, 217, 220, 225, 230], "produc": [207, 230], "instruct": [207, 217, 225, 227, 230, 231, 233, 239], "besid": [207, 226], "often": 207, "guid": [207, 214, 226, 227], "patient": 207, "compact": 207, "agnost": 207, "resourc": 207, "limit": [207, 228], "summar": [207, 208], "usual": [207, 217, 224, 230, 239], "1x1": [207, 216], "eval_accuraci": [207, 210, 238], "d_conf": [207, 210], "tune_metr": [207, 238], "metric_": 207, "classifi": 207, "distillation_conf": 207, "distilled_model": 207, "phase": [207, 238], "intermediatelayersloss": 207, "knowledgedistillationloss": 207, "meanwhil": [208, 224], "demonstr": [208, 210, 229, 230], "posttrainingdynam": [208, 209, 239], "wikitext": 208, "10004": [208, 209], "xsum": 208, "cnn": 208, "cnn_dailymail": 208, "dm": 208, "lambdalab": 208, "sd": 208, "pokemon": 208, "text": [208, 226, 231, 237], "imag": [208, 218, 221, 227, 230], "mlm": 208, "plm": 208, "eleutherai": 208, "neo": 208, "125m": 208, "sshleifer": 208, "wip": [208, 227], "star": 208, "ehdwns1516": 208, "uncased_swag": 208, "swag": 208, "squad": 208, "question": [208, 227], "lvwerra": 208, "pegasu": 208, "samsum": 208, "textattack": [208, 218], "mrpc": [208, 218, 219], "echarlaix": 208, "acc91": 208, "d37": 208, "hybrid": 208, "elast": 208, "conll03": 208, "conll2003": 208, "small": [208, 216, 229], "translat": 208, "wmt16": 208, "helsinki": 208, "opu": 208, "mt": 208, "en": 208, "ro": 208, "quantizationawaretrain": [208, 209], "No": 208, "maskinun": 208, "distilgpt2": 208, "rocketknight1": 208, "dslim": 208, "ner": 208, "datatyp": [208, 209], "f1": [208, 235], "gflop": [208, 232, 234], "speedup": 208, "415": [208, 222], "47": [208, 222, 232], "88": [208, 222, 231, 232], "58": [208, 232], "56": [208, 231, 232], "35": [208, 222, 232], "1x": 208, "la": 208, "minilmv2": 208, "115": 208, "04": [208, 211, 222, 232], "89": [208, 232], "28": [208, 222, 227, 232], "16": [208, 209, 212, 222, 227, 228, 230, 231, 232, 239], "99": [208, 232], "76": [208, 231, 232], "33x": 208, "269": 208, "253": 208, "252": [208, 231], "202": 208, "104": 208, "34": [208, 232], "87": [208, 232], "11": [208, 211, 219, 227, 232], "44": [208, 215, 222, 231, 232], "49": [208, 221, 222, 232], "94x": 208, "84": [208, 232], "85": [208, 222, 232], "21x": 208, "315": 208, "251": [208, 232], "242": [208, 222, 232], "159": [208, 231], "142": [208, 232], "33": [208, 232], "86": [208, 232], "68": [208, 231, 232], "41": [208, 222, 232], "55": [208, 231, 232], "82x": 208, "amount": 208, "obtain": [208, 215], "torchprofil": 208, "platinum": [208, 222, 232], "8280": 208, "unstructur": [208, 238], "group": [208, 214, 221, 229, 230, 238], "lasso": [208, 238], "nbsp": [208, 222, 232], "90": [208, 215, 222], "pruneofa": 208, "googl": 208, "wikipedia": 208, "prajjwal1": 208, "approch": 208, "patternlock": [208, 238], "bhadresh": 208, "savani": 208, "emot": 208, "fac": 208, "mini": [208, 215, 219, 222], "gchhablani": 208, "philschmid": 208, "l6": 208, "h384": 208, "moshew": [208, 219], "squadv1": 208, "80": [208, 215, 222, 232], "1x4": [208, 230], "desigh": 209, "bit": [209, 210, 224, 225, 230, 239], "bfloat": 209, "fetch": [209, 224], "flag": 209, "enable_bf16": 209, "bfloat16": 209, "qlinear": [209, 218], "u8s8": 209, "u8u8": 209, "highli": 209, "suggest": [209, 225], "enabl": [209, 210, 222, 224, 231, 232], "enable_executor": 209, "p_conf": [210, 238], "further": [210, 216, 228], "enhanc": [210, 228], "accommod": 210, "budget": 210, "tradeoff": [210, 227], "dynamic_length_config": 210, "extrem": 210, "opportun": 210, "hw": 210, "sw": 210, "neural_engin": [210, 212, 213, 214, 215, 216, 218, 221, 223, 233], "satisfi": [211, 221], "success": 211, "r": [211, 219, 222, 232, 239], "recommend": [211, 214, 216, 219, 221, 231], "protobuf": [211, 219], "nightli": 211, "conda": [211, 219], "visual": 211, "studio": 211, "compat": 211, "formerli": [211, 223], "cascad": 211, "lake": 211, "icelak": 211, "futur": [211, 218, 225, 226, 231], "cento": 211, "ubuntu": [211, 222, 232], "ipex": [211, 239], "13": [211, 222, 227, 232], "high": [212, 223, 230], "multi": [212, 215, 216], "bert_model": 212, "30522": 212, "1024": [212, 215, 216, 232, 233], "125018112": 212, "dst_shape": [212, 214, 220], "slightli": 212, "read": 212, "activ": [212, 218, 219, 224, 227, 228, 239], "throught": 212, "numactl": 212, "command": [212, 214, 218, 234], "bind": 212, "core": [212, 222, 224, 232, 234], "omp_num_thread": 212, "session": 212, "want": [212, 214, 215, 216, 218, 221, 224, 225, 226, 233, 235], "close": 212, "glog_minloglevel": [212, 219], "again": 212, "nerual": 212, "show": [212, 214, 217, 218, 221, 227, 229], "actual": [212, 214], "cc": 212, "cmakelist": 212, "reus": 212, "mkdir": [212, 213, 223, 231, 233], "engine_integr": 212, "innersourc": 212, "ai": 212, "xtransform": 212, "submoudl": 212, "cp": 212, "src": [212, 226, 230, 233], "nlp_executor": 212, "neural_engine_exampl": 212, "ne": 212, "root": 212, "ne_root": 212, "project_source_dir": 212, "link": [212, 220, 238], "lib": 212, "add_execut": 212, "target_include_directori": 212, "boost_inc_dir": 212, "target_link_librari": 212, "cmake_thread_libs_init": 212, "gflag": 212, "cmake": [212, 213, 223, 231, 233], "window": 213, "linux": 213, "gcc": 213, "repo_path": 213, "dpython_execut": 213, "dne_with_sparselib": [213, 233], "neural_engine_bin": 213, "neural_engine_pi": [213, 216], "cpython": 213, "37m": 213, "x86_64": 213, "gnu": 213, "libkernellib": 213, "libneural_engin": 213, "pure": [213, 226], "certain": [214, 221], "simplifi": [214, 217], "attach": [214, 221], "distilbert_bas": 214, "assum": [214, 221], "repo": [214, 233], "instal": [214, 243], "These": [214, 217, 221], "roughli": 214, "divid": [214, 221, 224, 228, 234], "categori": [214, 215], "through": [214, 225, 227, 228, 231], "father": 214, "keep_dim": 214, "axi": [214, 215, 229], "ax": [214, 229], "come": 214, "rewrit": 214, "_attr": 214, "successfulli": [214, 221], "forget": [214, 217, 220], "reinstal": 214, "enter": 214, "you_work_dir": 214, "noth": [214, 221], "wrong": [214, 221], "anoth": [214, 217, 231], "correctli": 214, "distil_bert_bas": 214, "pattern_mapping_config": 214, "becaus": [214, 225, 227, 239], "even": [214, 224], "delv": 214, "recogn": 214, "doc": [214, 217, 225, 230], "put": [214, 217], "collect": [214, 215, 239], "namedtupl": 214, "__call__": 214, "retriev": 214, "equival": [214, 230], "supported_pattern": 214, "appropri": [214, 225], "influenc": [214, 217], "arbitrari": 214, "pattern_dict": 214, "new_node_nam": 214, "ret_old_nod": 214, "talk": 214, "epsilon": 214, "denomin": 214, "numer": [214, 239], "stabil": 214, "_set_attr": 214, "ln_node_idx": 214, "meet": [214, 227, 230], "finish": [214, 217, 219], "yourself": [214, 221], "analyz": 215, "let": [215, 220, 227], "readm": [215, 218], "run_executor": [215, 219], "input_model": [215, 218, 219], "model_and_token": [215, 218, 219], "seq_len": [215, 219, 229, 233], "Of": [215, 221], "cours": [215, 221], "proflil": 215, "trace": 215, "latanc": 215, "perf": [215, 230, 233, 234], "perfrom": 215, "chrome": 215, "view": [215, 224], "wai": [215, 216, 217, 221, 224, 226, 229, 231], "tell": [215, 217, 225, 226], "inst": 215, "And": [215, 216, 217, 218, 221, 225], "count": [215, 220], "pref": 215, "semi": 215, "4x1": [215, 224, 230], "70": [215, 222], "256x256": [215, 233], "settabl": 215, "256x1024": 215, "1024x256": 215, "dens": [215, 216, 221, 230, 233, 238], "post": [215, 233], "gelu_tanh": [215, 220], "add_37": 215, "116": [215, 232], "641": 215, "00": 215, "075": 215, "0375": 215, "comparison": [215, 230], "entir": [215, 224, 238], "185": 215, "801": 215, "693": 215, "366": 215, "content": 215, "part1": [215, 220], "modif": 215, "xlsx": 215, "titl": 215, "model_infer": 215, "friendli": 215, "000": 215, "wall": 215, "durat": 215, "17": [215, 222, 227, 232], "138": 215, "iteration4": 215, "726": 215, "per": [215, 222, 225, 227, 232, 234, 238], "phrase": 215, "0m": 215, "permut": [215, 227, 229, 233], "src1": [215, 225, 233], "perm": [215, 229], "add_284": 215, "028": [215, 232], "044": 215, "reshape_tim": 215, "004m": 215, "forward_tim": 215, "044m": 215, "input_tensor_nam": 215, "matmul_357": 215, "matmul_358": 215, "matmul_346": 215, "input_typ": 215, "f32": [215, 220], "output_tensor_nam": 215, "output_typ": 215, "append_op": 215, "src1_perm": 215, "try": [216, 239], "pictur": [216, 224], "bring": [216, 228, 230], "mainli": 216, "merg": [216, 221], "qkv": [216, 218], "off": 216, "model_path": 216, "easi": [216, 218], "mix": 216, "int8_model_path": 216, "shape_0": 216, "shape_1": 216, "shape_2": 216, "consid": [216, 224, 226, 227], "enlarg": 216, "subsequ": 216, "remark": 216, "sparselib": [216, 223], "micro": [216, 224, 228, 230], "oc": [216, 233], "mk": 216, "kn": 216, "nhwc": 216, "nxhxw": 216, "h": 216, "nk": 216, "km": 216, "mmkmb": 216, "mmxmb": 216, "fulfil": 216, "along": [216, 228, 229, 230], "omp": 216, "higher": [216, 229, 230, 233, 239], "unrol": [216, 228], "know": [216, 227], "disk": [216, 218], "dp": 216, "enable_op_tun": 216, "fix": [216, 227], "engine_dispatch_t": 216, "workspac": 216, "row": [216, 227, 230, 238], "rest": [216, 217, 221, 229, 230], "hash": [216, 225], "kernel_config": [216, 233], "kernel_nam": [216, 233], "3025159985633461085": 216, "40": [216, 222], "14124194128933833351": 216, "thing": 216, "affect": 216, "warmup": 216, "simul": [216, 230, 231], "warmup_it": 216, "num_iter": 216, "dispatch_table_file_root": 216, "file_root": 216, "script": [216, 218], "prevent": 216, "imprecis": 216, "purpos": [217, 221, 225], "realiz": 217, "suppli": [217, 221], "recognit": [217, 221], "embeddings_reshap": 217, "said": 217, "thought": 217, "st": 217, "nd": 217, "copi": [217, 229], "greater": [217, 235, 236], "reason": [217, 220], "sent": 217, "written": 217, "might": 217, "phenomenon": 217, "correct": [217, 221, 229], "Its": 217, "situat": 217, "nod": 217, "leav": [217, 229, 230], "old_node_index": 217, "variabl": [217, 220, 233], "_get_pattern_info": 217, "maintain": 217, "becom": [217, 230], "_create_out_pattern": 217, "_replace_pattern": 217, "emitt": 218, "netron": 218, "s8": [218, 225, 226, 233], "u8": [218, 220, 226, 233], "bash": [218, 219], "prepare_model": [218, 219], "sh": [218, 219, 234], "task_nam": [218, 219], "ptq": 218, "much": 218, "ir_path": 218, "focu": [219, 229, 235], "nc_folder": 219, "deepengin": 219, "distilbert_base_uncased_mrpc": 219, "env": 219, "prepare_dataset": 219, "shell": 219, "tokenizer_dir": 219, "data_dir": 219, "develop": 220, "geluoper": 220, "destructor": 220, "io": 220, "html": 220, "algorithm_": 220, "eng_": 220, "eltwise_forward": 220, "gelu_p_": 220, "src_m_": 220, "dst_m_": 220, "attrs_map": 220, "adjust": [220, 239], "becuas": 220, "descriptor": [220, 223, 233], "src_shape": 220, "dst": [220, 225, 226, 227, 228, 230, 233], "dst_tensor_ptr": 220, "set_shap": 220, "stride": [220, 224], "src_stride": 220, "getstrid": 220, "dst_stride": 220, "desc": [220, 225, 226], "src_md": 220, "data_typ": [220, 225, 226, 233], "dst_md": 220, "part2": 220, "gelu_algorithm": 220, "gelu_erf": 220, "eltwise_gelu_erf": 220, "eltwise_gelu_tanh": 220, "gelu_d": 220, "prop_kind": 220, "forward_infer": [220, 226], "primitive_desc": 220, "gelu_pd": 220, "unrefernc": 220, "reduc": [220, 224, 225, 228, 230, 239], "manag": 220, "strictli": 220, "alia": 220, "src_data": 220, "dst_data": 220, "mutable_data": 220, "data_ptr": 220, "stream": 220, "set_data_handl": 220, "const_cast": 220, "reinterpret_cast": 220, "memory_args_": 220, "dnnl_arg_src": 220, "dnnl_arg_dst": 220, "unref": 220, "unref_tensor": 220, "especi": [220, 230], "int8_lut_optim": 220, "int8_lut_acc_test": 220, "set_dtyp": 220, "register_operator_class": 220, "rule": 221, "recruit": 221, "ln_pattern": 221, "grow": 221, "concis": 221, "intuit": 221, "choos": 221, "prefer": [221, 229], "longer": 221, "ones": 221, "op_type1": 221, "op_type2": 221, "type1": 221, "type2": 221, "separ": [221, 230], "elig": 221, "a_node_name_1": 221, "b_node_name_1": 221, "c_node_name_1": 221, "a_node_name_2": 221, "b_node_name_2": 221, "c_node_name_2": 221, "a_node_name_n": 221, "b_node_name_n": 221, "c_node_name_n": 221, "bert_large_model_path": 221, "layer_0": 221, "layer_1": 221, "layer_2": 221, "afterward": 221, "volatil": 221, "incorrect": 221, "outcom": 221, "Or": 221, "exactli": 221, "screen": 221, "occur": [221, 224], "alreadi": 221, "moment": 221, "varianc": 221, "batchnorm": 221, "mul_1": 221, "mul_2": 221, "add_1": 221, "07": [222, 232], "8375c": [222, 232], "aw": [222, 232], "c6i": [222, 232], "12xlarg": [222, 232], "vari": [222, 232], "factor": [222, 232], "visit": [222, 232], "www": [222, 232], "sequencelength": 222, "throughput": 222, "sec": 222, "batchsiz": 222, "2652": 222, "36": [222, 232], "513": 222, "lt": [222, 232], "50m": 222, "2181": 222, "43": [222, 232], "628": 222, "1719": 222, "91": [222, 232], "75": [222, 232], "1487": [222, 232], "1220": 222, "39": [222, 232], "143": 222, "1304": 222, "46": [222, 232], "066": 222, "1102": [222, 232], "870": 222, "487": 222, "750": 222, "82": [222, 231, 232], "690": [222, 232], "188": 222, "910": [222, 232], "921": [222, 232], "729": 222, "71": [222, 231, 232], "619": 222, "38": [222, 231, 232], "821": [222, 232], "499": 222, "933": 222, "429": [222, 231], "936": [222, 232], "680": 222, "318": [222, 232], "557": 222, "262": 222, "467": 222, "589": 222, "405": 222, "339": 222, "473": 222, "119": [222, 232], "389": 222, "945": [222, 232], "360": 222, "274": 222, "843": 222, "259": [222, 231, 232], "442": 222, "241": 222, "364": 222, "016": [222, 232], "303": 222, "266": 222, "05": [222, 232], "221": 222, "973": 222, "112": [222, 232], "349": 222, "938": [222, 232], "275": [222, 231], "614": 222, "217": 222, "37": [222, 232], "039": 222, "301": 222, "166": 222, "033": 222, "320": 222, "769": 222, "263": 222, "724": [222, 232], "207": 222, "819": [222, 232], "181": 222, "979": [222, 232], "74": [222, 232], "235": 222, "63": [222, 232], "091": 222, "51": [222, 232], "914": [222, 232], "698": [222, 232], "905": [222, 232], "8972": 222, "076": [222, 232], "20m": 222, "7192": 222, "19": [222, 227, 232], "906": 222, "5482": 222, "509": 222, "4808": 222, "952": 222, "3678": 222, "409": 222, "4750": 222, "975": [222, 232], "3647": 222, "867": 222, "2921": 222, "587": [222, 232], "2576": 222, "18": [222, 227, 232], "768": [222, 232], "2131": [222, 232], "913": [222, 232], "2804": 222, "096": 222, "2263": 222, "037": 222, "1938": 222, "756": [222, 232], "1581": 222, "15": [222, 227, 228, 230, 232], "1409": 222, "015": 222, "2116": 222, "113": 222, "1777": 222, "972": [222, 232], "1474": 222, "392": 222, "1278": 222, "1137": 222, "752": 222, "1594": 222, "124": 222, "1347": [222, 232], "1126": 222, "993": [222, 232], "258": 222, "890": [222, 232], "877": [222, 232], "1319": 222, "1086": 222, "931": [222, 232], "545": 222, "833": 222, "332": [222, 232], "747": [222, 232], "141": 222, "1106": [222, 232], "31": [222, 227, 228, 232], "924": 222, "446": 222, "719": 222, "633": 222, "501": 222, "816": 222, "961": 222, "549": 222, "807": 222, "868": [222, 232], "701": [222, 232], "117": 222, "613": 222, "618": 222, "515": 222, "484": 222, "75384": 222, "989": 222, "1m": 222, "55628": 222, "917": 222, "49120": 222, "957": [222, 232], "41598": 222, "39218": 222, "31211": 222, "788": [222, 232], "28399": 222, "848": 222, "24910": 222, "966": 222, "20505": 222, "18575": 222, "865": 222, "25485": 222, "987": 222, "17468": 222, "16771": 222, "971": [222, 232], "16004": 222, "996": [222, 232], "13381": 222, "894": [222, 232], "13990": 222, "863": [222, 232], "13154": 222, "12535": 222, "12102": 222, "998": 222, "8426": [222, 232], "8736": 222, "8282": 222, "967": 222, "6659": 222, "898": [222, 232], "6477": 222, "6290": 222, "974": [222, 232], "8598": 222, "6449": 222, "935": [222, 232], "6263": [222, 232], "965": [222, 232], "6080": 222, "988": 222, "3684": 222, "817": [222, 232], "6246": 222, "978": 222, "6374": 222, "947": [222, 232], "6026": 222, "3300": [222, 232], "926": 222, "3226": 222, "6221": 222, "958": 222, "6322": 222, "6081": 222, "985": [222, 232], "3368": 222, "3264": 222, "distillbert": 222, "15460": 222, "296": 222, "10m": 222, "13129": 222, "363": 222, "11323": 222, "578": [222, 232], "10072": 222, "599": 222, "8689": 222, "7901": 222, "205": [222, 232], "6737": 222, "562": 222, "5440": 222, "904": [222, 232], "4920": 222, "786": [222, 232], "4460": 222, "053": 222, "5280": 222, "179": 222, "4339": 222, "244": [222, 231], "3634": [222, 232], "928": 222, "3255": 222, "211": [222, 232], "2928": 222, "197": [222, 232], "3681": 222, "527": [222, 232], "2965": [222, 232], "106": [222, 232], "2741": 222, "862": [222, 232], "2351": 222, "2150": 222, "282": 222, "2918": 222, "316": 222, "2505": [222, 232], "602": 222, "2010": [222, 232], "995": 222, "1872": 222, "609": [222, 232], "2409": 222, "983": 222, "1993": 222, "1671": [222, 232], "627": 222, "1484": 222, "131": 222, "1342": [222, 232], "1910": 222, "456": [222, 232], "1659": 222, "687": 222, "1293": 222, "245": [222, 232], "1230": 222, "798": 222, "1091": 222, "261": 222, "1627": 222, "908": 222, "1397": 222, "684": 222, "1130": 222, "1081": 222, "353": 222, "982": [222, 232], "187": [222, 231], "manufactur": [222, 232], "amazon": [222, 232], "ec2": [222, 232], "product": [222, 229, 232, 236, 239], "bio": [222, 232], "1021": [222, 232], "microcod": [222, 232], "0xd000331": [222, 232], "irq": [222, 232], "balanc": [222, 232], "xeonplatinum": 222, "90ghz": [222, 232], "frequenc": [222, 232, 238], "9ghz": [222, 232], "5ghz": [222, 232], "thread": 222, "socket": [222, 232], "numa": [222, 232], "turbo": [222, 232], "frequencygovern": [222, 232], "known": 223, "assembli": [223, 228, 230, 231], "domain": 223, "workdir": 223, "dne_with_test": 223, "ON": [223, 233], "ut": [223, 226], "dne_with_sparselib_onli": [223, 233], "dne_with_sparselib_benchmark": [223, 233], "test_spmm_vnni_kernel": 223, "box": 223, "profl": [223, 231], "section": [223, 230, 231], "ker_kind": [223, 226], "ker_prop": [223, 226], "ts_desc": [223, 226], "op_attr": [223, 225, 226, 229], "spmm_desc": 223, "spmm_kern": 223, "data0": 223, "data1": 223, "data2": 223, "data3": 223, "data4": 223, "unit": 223, "xbyak": [223, 226], "codegener": 223, "convent": 223, "xxxx": 223, "brgemm": 223, "isom": 223, "logic": [223, 231], "spmm": [224, 229, 233], "vnni": [224, 227, 229, 233, 239], "deeplearn": 224, "multipli": [224, 230, 239], "adopt": [224, 228, 230], "modern": 224, "spatial": 224, "program": 224, "64byte": 224, "organ": 224, "associ": 224, "access": [224, 228], "align": [224, 226, 230], "b1": 224, "b2": 224, "avx512": [224, 227, 239], "simd": [224, 225, 228], "width": [224, 225, 228, 239], "evenli": 224, "discontinu": 224, "fulli": [224, 230], "worst": 224, "veri": [224, 226], "miss": [224, 230], "frequent": 224, "introduc": [224, 225, 226, 227, 229, 230, 239], "destin": [224, 228, 229], "l1": 224, "l2": 224, "perhap": 224, "mxk": [224, 233], "bxm": 224, "xk": 224, "bxkxm": 224, "nxm": 224, "2d": [224, 233], "respons": 224, "frac": [224, 229], "binaryop": 225, "injector": [225, 226], "dl": 225, "changeabl": 225, "operand": [225, 228], "src2": [225, 233], "seri": [225, 227, 233], "horizont": 225, "overhead": [225, 229, 230], "move": 225, "binaryop_injector": 225, "postop": [225, 226, 233], "quit": 225, "eltwise_injector": [225, 226], "escap": [225, 226], "lut": [225, 226, 233], "compute_vector": 225, "expos": [225, 226], "arithmet": 225, "brows": 225, "dt": [225, 226], "vpaddb": 225, "vaddp": 225, "binaryop_attr": 225, "unlik": 225, "set_binaryop_list": 225, "what": [225, 226, 229, 238], "ptr": [225, 226, 231], "static_addr": 225, "normal": 225, "zp": 225, "channel": [225, 228, 230, 238], "dequant": [225, 226, 233], "free": [225, 233], "addr": 225, "binaryop_alg": 225, "uint8_t": [225, 226], "undef": [225, 226], "per_channel_qu": 225, "per_channel_dequ": 225, "op_alg": [225, 226], "op_dt": 225, "alg": 225, "set_scal": 225, "set_zp": 225, "binaryop_list_": 225, "binaryop_list": 225, "get_binaryop_list": 225, "binary_injector_init": 225, "set_mask": 225, "binari": [225, 226, 233], "reg64": [225, 226], "zmm": [225, 226, 228, 230], "get_addr": 225, "broadcast": [225, 228, 230, 231], "scalar": 225, "enable_mask": 225, "vector_comput": [225, 226], "bianryop": 225, "comput_vector": 225, "wrapper": 225, "jit_binary_injector": 225, "addr_typ": 225, "jit_gener": [225, 226], "opmask": [225, 226], "reg": [225, 226], "mov": [225, 231], "addr_ptr": 225, "zmm_src1": 225, "regexp": 225, "step1": [225, 226], "binary_injector": 225, "step2": [225, 226], "via": [225, 227, 231], "data_param": 225, "binaryop_addr": 225, "param_": [225, 226], "front": 225, "append_loop_len": 225, "process_col": 225, "zmm_byte_s": 225, "get_data_s": 225, "input_dt": [225, 233], "offset_exp": 225, "thread_elt_offset": 225, "bianryop_attr_list": 225, "append_vec": 225, "binary_add": 225, "eltwis": 226, "tradit": 226, "obvious": 226, "useless": 226, "idea": [226, 230, 238], "who": 226, "wise": [226, 233], "exp": [226, 233], "postop_attr": 226, "algo": 226, "aplha": 226, "zero": [226, 228, 230, 238], "sacl": 226, "postop_alg": 226, "int8_lut": 226, "postop_typ": 226, "mathemat": 226, "satur": 226, "round": [226, 239], "unus": 226, "\u03b1x": 226, "\u03b2": 226, "le": 226, "gt": 226, "apply_postops_list_": 226, "ker_kind_": 226, "ker_prop_": 226, "kernel_prop": 226, "impl_nthr_": 226, "ts_descs_": 226, "attrs_": 226, "tensor_desc": 226, "apply_postops_list": 226, "omp_get_max_thread": 226, "omp_get_num_proc": 226, "eltwise_injector_init": 226, "chian": 226, "escape_reg": 226, "escape_eras": 226, "eras": 226, "prepare_t": 226, "zmm_src": 226, "postop_idx": 226, "reg_typ": 226, "reg_idx": 226, "step0": 226, "eltwiseop_param_t": 226, "element_num": 226, "jit_eltwiseop_t": 226, "ssd": [226, 233], "assign_reg": 226, "eltwiseop_kd_t": 226, "op_desc_": 226, "params_": 226, "remain_task_mask": 226, "scratch_": 226, "r10": 226, "reg_src": 226, "addr_src": 226, "r15": [226, 231], "addr_dst": 226, "r14": [226, 231], "reg_param": 226, "rdi": [226, 231], "remain_element_num": 226, "rsi": 226, "getidx": 226, "alloc": 226, "special": [226, 229], "rcx": 226, "rdx": 226, "rsp": 226, "step3": 226, "preambl": 226, "load_param": 226, "vmovup": [226, 231], "postambl": 226, "fp32_gelu_attr": 226, "bf16_gelu_attr": 226, "gen": 226, "push_back": 226, "gen_cas": 226, "data0_desc": 226, "postop_list": 226, "fp32_gelu": [226, 233], "fp32_exp": 226, "mask_mock1": 226, "reg64_mock1": 226, "zmm_mock1": 226, "fp32_exp_attr": 226, "data1_desc": 226, "bf16_gelu": 226, "bf16_exp": [226, 233], "bf16_exp_attr": 226, "dt1op1": 226, "dt2op2": 226, "hase": 226, "get_true_data": 226, "rf_data": 226, "tmp": [226, 227], "your_kernel_log": 226, "apply_postop_list": 226, "unit_test_util": 226, "tdpbf16p": 227, "16x32": 227, "32x16": 227, "FOR": [227, 228, 230], "TO": 227, "colsb": 227, "byte": [227, 230], "col": 227, "endfor": [227, 228, 230], "write_row_and_zero": 227, "zero_upper_row": 227, "zero_tileconfig_start": 227, "layout": [227, 229], "successor": 227, "1x16": [227, 230], "concaten": [227, 230, 233], "intrins": 227, "offlin": [227, 230, 239], "tileloadd": 227, "good": 227, "vmovdqu32": 227, "consum": 227, "altern": [227, 230], "lot": 227, "disast": 227, "16x1": [227, 229], "greatli": 227, "impact": 227, "fly": 227, "__m512i": 227, "_mm512_set_epi16": 227, "29": [227, 232], "27": [227, 232], "26": [227, 231, 232], "25": [227, 232, 233], "23": [227, 232], "22": [227, 232], "21": [227, 232], "__m256i": 227, "lo": 227, "_mm256_loadu_epi": 227, "li": 227, "vec": 227, "_mm512_inserti32x8": 227, "_mm512_castsi256_si512": 227, "_mm512_permutexvar_epi16": 227, "_mm512_storeu_epi32": 227, "vfmadd": 228, "vfmadd231p": [228, 231], "degre": 228, "parallel": [228, 230, 233], "conting": 228, "act": 228, "bsc": 228, "variant": 228, "bsr": 228, "openmp": 228, "over": [228, 229], "thu": [228, 239], "relief": 228, "bottleneck": 228, "microkernel": 228, "peripher": 228, "decid": [228, 239], "implicit": 228, "p2031": [229, 233], "2013": 229, "avx512f": [229, 233], "noperm": [229, 233], "p1302": [229, 233], "p2013": [229, 233], "equat": [229, 239], "dot": [229, 239], "rm": 229, "q": 229, "v": 229, "qk": 229, "textunderscor": 229, "head_num": [229, 233], "head_siz": [229, 233], "nativ": 229, "sparelib": 229, "physic": 229, "axis": 229, "conceptu": 229, "head_nun": 229, "perm2031": 229, "perm2013": 229, "perm1302": 229, "concept": [229, 230], "lh": 229, "rh": 229, "float32": [229, 239], "figur": [229, 230], "illustr": 229, "inner": 229, "bodi": 229, "accumul": [229, 230], "16x16": 229, "drawn": 229, "lighter": 229, "cell": [229, 230], "uint8": [229, 239], "respectfulli": 229, "vnni_noperm_p2013_p1302": 229, "transpose_4b_8x8": 229, "legend": 229, "explan": 229, "offset": 229, "contigu": 229, "ellipsi": 229, "thinner": 229, "border": 229, "bolder": 229, "color": [229, 230], "16x32x16": 229, "lead": [229, 230], "suboptim": 229, "temporari": 229, "piec": 229, "turn": 229, "abl": [229, 239], "boost": 229, "twofold": 229, "unifi": 229, "roll": 229, "back": 229, "workload": 229, "four": 230, "adjac": 230, "unsign": [230, 233], "sign": [230, 239], "tmp1": 230, "zeroextend16": 230, "signextend16": 230, "tmp2": 230, "tmp3": 230, "tmp4": 230, "dword": [230, 231], "capabl": 230, "benefit": [230, 239], "transposit": 230, "discuss": 230, "typic": 230, "sai": 230, "4x4": 230, "4x16": 230, "pick": 230, "mxkxn": 230, "problem": 230, "densiti": 230, "fma": 230, "bubbl": 230, "16x4": 230, "highlight": 230, "4x": 230, "talent": 230, "solut": 230, "smart": 230, "gui": [230, 231], "swizzl": 230, "workaround": 230, "investig": 230, "unfortun": 230, "difficulti": 230, "bad": 230, "cost": 230, "harm": 230, "2x1": 230, "conclus": 230, "against": 230, "brief": 231, "sparse_lib_verbos": 231, "sparselib_verbos": 231, "nthr": 231, "224": [231, 232], "exec": 231, "shape_256_256_128": 231, "4658": [231, 232], "56982": 231, "itt": 231, "dne_with_sparselib_vtun": 231, "opt": 231, "latest": 231, "manual": 231, "dcmake_vtune_hom": 231, "sparse_lib_vtun": 231, "ssh": 231, "analys": 231, "verifi": 231, "sparse_lib_dump": 231, "xed64": 231, "click": 231, "xdi": 231, "push": 231, "rbx": 231, "rbp": 231, "4154": 231, "r12": 231, "4155": 231, "r13": 231, "4156": 231, "4157": 231, "dataxf": 231, "bd00040000": 231, "ebp": 231, "0x400": 231, "4c8b3f": 231, "qword": 231, "4c8b7708": 231, "0x8": 231, "4c8b6f10": 231, "0x10": 231, "1a": 231, "avx512evex": 231, "62f17d48efc0": 231, "vpxord": 231, "zmm0": 231, "62f15d48efe4": 231, "zmm4": 231, "62513d48efc0": 231, "zmm8": 231, "2c": 231, "62511d48efe4": 231, "zmm12": 231, "62f17548efc9": 231, "zmm1": 231, "62f15548efe": 231, "zmm5": 231, "3e": 231, "62513548efc9": 231, "zmm9": 231, "62511548efe": 231, "zmm13": 231, "4a": 231, "62f16d48efd2": 231, "zmm2": 231, "50": 231, "62f14d48eff6": 231, "zmm6": 231, "62512d48efd2": 231, "zmm10": 231, "5c": 231, "62510d48eff6": 231, "zmm14": 231, "62": [231, 232], "62c17c481006": 231, "zmm16": 231, "zmmword": 231, "62c17c48104e01": 231, "zmm17": 231, "0x40": 231, "6f": 231, "62c17c48105602": 231, "zmm18": 231, "0x80": 231, "62427d48183f": 231, "vbroadcastss": 231, "zmm31": 231, "7c": 231, "vfma": 231, "62927d40b8c7": 231, "62927540b8cf": 231, "62926d40b8d7": 231, "8e": 231, "62427d48187f04": 231, "95": [231, 232], "62927d40b8e7": 231, "9b": 231, "62927540b8ef": 231, "a1": 231, "62926d40b8f7": 231, "a7": 231, "62427d48187f08": 231, "0x20": 231, "ae": 231, "62127d40b8c7": 231, "b4": 231, "62127540b8cf": 231, "ba": [231, 233], "62126d40b8d7": 231, "c0": 231, "62427d48187f0c": 231, "0x30": 231, "c7": 231, "62127d40b8e7": 231, "62127540b8ef": 231, "62126d40b8f7": 231, "d9": 231, "62c17c48104603": 231, "0xc0": 231, "e0": 231, "62c17c48104e04": 231, "0x100": 231, "e7": 231, "62c17c48105605": 231, "0x140": 231, "ee": 231, "62427d48187f01": 231, "0x4": 231, "f5": 231, "fb": 231, "101": 231, "107": 231, "62427d48187f05": 231, "0x14": 231, "10e": 231, "114": 231, "11a": 231, "62427d48187f09": 231, "0x24": 231, "12d": 231, "133": 231, "139": 231, "62427d48187f0d": 231, "0x34": 231, "140": 231, "146": 231, "14c": 231, "152": 231, "62c17c48104606": 231, "0x180": 231, "62c17c48104e07": 231, "0x1c0": 231, "62c17c48105608": 231, "0x200": 231, "167": [231, 232], "62427d48187f02": 231, "16e": 231, "174": 231, "17a": 231, "180": 231, "62427d48187f06": 231, "0x18": 231, "18d": 231, "193": 231, "199": 231, "62427d48187f0a": 231, "0x28": 231, "1a0": 231, "1a6": 231, "1ac": 231, "1b2": 231, "62427d48187f0e": 231, "0x38": 231, "1b9": 231, "1bf": 231, "1c5": 231, "1cb": 231, "62c17c48104609": 231, "0x240": 231, "1d2": 231, "62c17c48104e0a": 231, "0x280": 231, "1d9": 231, "62c17c4810560b": 231, "0x2c0": 231, "1e0": 231, "62427d48187f03": 231, "0xc": 231, "1e7": 231, "1ed": 231, "1f3": 231, "1f9": 231, "62427d48187f07": 231, "0x1c": 231, "200": 231, "206": 231, "20c": 231, "212": 231, "62427d48187f0b": 231, "0x2c": 231, "219": [231, 232], "21f": 231, "225": 231, "22b": 231, "62427d48187f0f": 231, "0x3c": 231, "232": [231, 232], "238": 231, "23e": 231, "62d17c48114500": 231, "24b": 231, "62d17c48116503": 231, "62517c48114506": 231, "62517c48116509": 231, "260": 231, "62d17c48114d01": 231, "267": 231, "62d17c48116d04": 231, "26e": 231, "62517c48114d07": 231, "62517c48116d0a": 231, "27c": 231, "62d17c48115502": 231, "283": 231, "62d17c48117505": 231, "28a": 231, "62517c48115508": 231, "291": 231, "62517c4811750b": 231, "298": [231, 232], "pop": 231, "415f": 231, "29a": 231, "415e": 231, "29c": 231, "415d": 231, "29e": 231, "415c": 231, "2a0": 231, "5d": 231, "2a1": 231, "5b": 231, "2a2": 231, "avx": 231, "c5f877": 231, "vzeroupp": 231, "2a5": 231, "xed3": 231, "stat": 231, "cycl": 231, "29220": 231, "236418": 231, "118": 231, "2003": 231, "54": [231, 232], "003486": 232, "601": 232, "003107": 232, "675": 232, "002614": 232, "802": 232, "002166": 232, "968": 232, "068": 232, "001647": 232, "1273": 232, "011226": 232, "284": 232, "009475": 232, "885": 232, "377": 232, "007641": 232, "1097": 232, "78": 232, "005845": 232, "1435": 232, "004071": 232, "2060": 232, "012745": 232, "658": 232, "198": 232, "011113": 232, "754": 232, "835": 232, "009402": 232, "892": 232, "007602": 232, "1103": 232, "005494": 232, "1527": 232, "044202": 232, "759": 232, "036423": 232, "029245": 232, "1147": 232, "022347": 232, "1501": 232, "014906": 232, "2251": 232, "4096": 232, "216338": 232, "620": 232, "408": 232, "179593": 232, "345": 232, "135054": 232, "806": 232, "094698": 232, "1417": 232, "06097": 232, "2201": 232, "190508": 232, "704": 232, "526": 232, "159566": 232, "841": 232, "130863": 232, "1025": 232, "103927": 232, "1291": 232, "073996": 232, "1813": 232, "02504": 232, "753": 232, "784": 232, "021073": 232, "895": 232, "682": 232, "017099": 232, "013078": 232, "1443": 232, "009233": 232, "2044": 232, "3072": 232, "112882": 232, "668": 232, "818": 232, "087939": 232, "858": 232, "525": 232, "068835": 232, "1096": 232, "79": 232, "048734": 232, "1549": 232, "031756": 232, "2377": 232, "109308": 232, "679": 232, "092247": 232, "805": 232, "638": 232, "075911": 232, "055895": 232, "1329": 232, "61": 232, "035875": 232, "2071": 232, "57": 232, "00565": 232, "742": 232, "297": 232, "005036": 232, "832": 232, "004475": 232, "937": 232, "182": 232, "003685": 232, "1138": 232, "00271": 232, "1547": 232, "98": 232, "018348": 232, "386": 232, "015412": 232, "1088": 232, "01257": 232, "1334": 232, "009599": 232, "1747": 232, "72": 232, "006776": 232, "2475": 232, "020632": 232, "813": 232, "162": 232, "018427": 232, "483": 232, "01647": 232, "1018": 232, "66": 232, "01358": 232, "1235": 232, "010552": 232, "1589": 232, "072121": 232, "930": 232, "506": 232, "059613": 232, "1125": 232, "048378": 232, "1387": 232, "036675": 232, "1829": 232, "83": 232, "024857": 232, "2699": 232, "376539": 232, "712": 232, "902": 232, "31929": 232, "840": 232, "727": 232, "261265": 232, "1027": 232, "193579": 232, "1386": 232, "118429": 232, "2266": 232, "309195": 232, "177": 232, "256619": 232, "1046": 232, "213454": 232, "1257": 232, "165192": 232, "1624": 232, "118402": 232, "2267": 232, "040293": 232, "855": 232, "034117": 232, "027528": 232, "1371": 232, "02113": 232, "1786": 232, "015069": 232, "218765": 232, "215": 232, "180921": 232, "834": 232, "592": 232, "142778": 232, "1057": 232, "097692": 232, "1545": 232, "062003": 232, "2435": 232, "174101": 232, "853": 232, "73": 232, "148369": 232, "1001": 232, "123554": 232, "1203": 232, "092366": 232, "1609": 232, "059128": 232, "2513": 232, "007447": 232, "844": 232, "006572": 232, "005702": 232, "004831": 232, "1302": 232, "003674": 232, "1712": 232, "024706": 232, "020746": 232, "1213": 232, "03": 232, "016921": 232, "012994": 232, "1936": 232, "009038": 232, "2784": 232, "027588": 232, "912": 232, "024042": 232, "77": 232, "020788": 232, "1210": 232, "017787": 232, "1414": 232, "014013": 232, "1795": 232, "099457": 232, "1012": 232, "081973": 232, "1228": 232, "066057": 232, "1523": 232, "049708": 232, "2025": 232, "034191": 232, "2944": 232, "500698": 232, "804": 232, "184": 232, "420619": 232, "287": 232, "337529": 232, "1192": 232, "94": 232, "251221": 232, "1602": 232, "158668": 232, "2537": 232, "412912": 232, "155": 232, "346369": 232, "1162": 232, "2831": 232, "1422": 232, "220585": 232, "1825": 232, "156168": 232, "2578": 232, "05384": 232, "1051": 232, "045507": 232, "1244": 232, "036978": 232, "1531": 232, "028483": 232, "1987": 232, "020046": 232, "2824": 232, "283445": 232, "799": 232, "069": 232, "236101": 232, "959": 232, "302": 232, "188745": 232, "1199": 232, "135532": 232, "084554": 232, "2678": 232, "227976": 232, "977": 232, "19463": 232, "1145": 232, "161251": 232, "1382": 232, "123585": 232, "1804": 232, "084032": 232, "2653": 232, "009405": 232, "891": 232, "00822": 232, "1020": 232, "007013": 232, "1196": 232, "08": 232, "005799": 232, "1446": 232, "004647": 232, "1805": 232, "033634": 232, "997": 232, "629": 232, "027609": 232, "1215": 232, "022443": 232, "1495": 232, "09": 232, "017081": 232, "1964": 232, "011754": 232, "2854": 232, "03586": 232, "031008": 232, "1082": 232, "026049": 232, "1288": 232, "021516": 232, "1559": 232, "017011": 232, "1972": 232, "133295": 232, "1006": 232, "92": 232, "111186": 232, "1207": 232, "088111": 232, "066552": 232, "2016": 232, "045442": 232, "2953": 232, "611718": 232, "645": 232, "533329": 232, "430288": 232, "1247": 232, "307141": 232, "198987": 232, "2698": 232, "02": [232, 235], "556249": 232, "163": 232, "462737": 232, "1160": 232, "37537": 232, "1430": 232, "28321": 232, "1895": 232, "203901": 232, "2633": 232, "071636": 232, "1053": 232, "060352": 232, "1250": 232, "04901": 232, "1540": 232, "037568": 232, "2009": 232, "026748": 232, "2822": 232, "3572": 232, "845": 232, "437": 232, "299561": 232, "1008": 232, "228752": 232, "1320": 232, "165648": 232, "1823": 232, "105656": 232, "2858": 232, "298907": 232, "994": 232, "529": 232, "255598": 232, "1163": 232, "20824": 232, "1427": 232, "159911": 232, "1858": 232, "111211": 232, "2673": 232, "0153": 232, "685": 232, "358": 232, "013145": 232, "797": 232, "010967": 232, "956": 232, "009211": 232, "007554": 232, "1388": 232, "055308": 232, "758": 232, "351": 232, "045848": 232, "826": 232, "036726": 232, "1142": 232, "06": 232, "027535": 232, "018464": 232, "2271": 232, "059788": 232, "051022": 232, "822": 232, "062": 232, "042164": 232, "033344": 232, "029639": 232, "1415": 232, "22241": 232, "337": 232, "18324": 232, "915": 232, "145322": 232, "1154": 232, "1083": 232, "072884": 232, "2301": 232, "11793": 232, "600": 232, "929398": 232, "722": 232, "720963": 232, "823": 232, "510039": 232, "1315": 232, "336519": 232, "1994": 232, "909941": 232, "737": 232, "508": 232, "753487": 232, "644": 232, "606477": 232, "459915": 232, "1459": 232, "303455": 232, "2211": 232, "123429": 232, "764": 232, "586": 232, "103035": 232, "923": 232, "082503": 232, "1143": 232, "062558": 232, "1508": 232, "042694": 232, "2210": 232, "60813": 232, "734": 232, "483053": 232, "781": 232, "462": 232, "357348": 232, "1056": 232, "256715": 232, "1470": 232, "169119": 232, "2232": 232, "503341": 232, "738": 232, "42134": 232, "881": 232, "342843": 232, "255199": 232, "1456": 232, "174091": 232, "2134": 232, "014267": 232, "012397": 232, "1015": 232, "010587": 232, "1188": 232, "008608": 232, "1461": 232, "006554": 232, "1919": 232, "053254": 232, "044755": 232, "1124": 232, "034839": 232, "1444": 232, "026689": 232, "1885": 232, "017743": 232, "2836": 232, "69": 232, "054911": 232, "916": 232, "608": 232, "047555": 232, "1058": 232, "040166": 232, "1253": 232, "032695": 232, "1539": 232, "025032": 232, "220947": 232, "911": 232, "178324": 232, "1128": 232, "137361": 232, "1465": 232, "103126": 232, "1952": 232, "070143": 232, "2870": 232, "06648": 232, "755": 232, "893959": 232, "900": 232, "831": 232, "718893": 232, "1120": 232, "537405": 232, "1498": 232, "280686": 232, "2869": 232, "902588": 232, "730678": 232, "582871": 232, "1381": 232, "444133": 232, "298489": 232, "2697": 232, "581": 232, "095595": 232, "1184": 232, "078109": 232, "1449": 232, "059619": 232, "1899": 232, "041405": 232, "2735": 232, "596568": 232, "497127": 232, "396634": 232, "286973": 232, "1578": 232, "167473": 232, "2704": 232, "472466": 232, "943": 232, "787": 232, "391055": 232, "1140": 232, "319865": 232, "1394": 232, "247491": 232, "1801": 232, "169874": 232, "2624": 232, "93": 232, "021379": 232, "686": 232, "67": 232, "018228": 232, "015207": 232, "012053": 232, "1218": 232, "010396": 232, "1412": 232, "077159": 232, "761": 232, "06424": 232, "074": 232, "051467": 232, "038789": 232, "1513": 232, "025687": 232, "2285": 232, "083622": 232, "702": 232, "071292": 232, "664": 232, "058915": 232, "697": 232, "048407": 232, "041133": 232, "311691": 232, "569": 232, "256635": 232, "204973": 232, "153086": 232, "1534": 232, "101206": 232, "2320": 232, "59625": 232, "588": 232, "583": 232, "33246": 232, "705": 232, "03849": 232, "703": 232, "738939": 232, "1271": 232, "480308": 232, "1956": 232, "26056": 232, "745": 232, "324": 232, "04874": 232, "842936": 232, "1114": 232, "59": 232, "635554": 232, "1478": 232, "42145": 232, "2229": 232, "174215": 232, "375": 232, "145836": 232, "116701": 232, "1132": 232, "087673": 232, "1506": 232, "0595": 232, "2220": 232, "883258": 232, "598": 232, "333": 232, "711146": 232, "743": 232, "543634": 232, "129": 232, "402406": 232, "1313": 232, "266945": 232, "1979": 232, "70404": 232, "592043": 232, "878": 232, "695": 232, "475444": 232, "1094": 232, "358932": 232, "240739": 232, "2160": 232, "018438": 232, "909": 232, "907": 232, "015871": 232, "013504": 232, "1242": 232, "010993": 232, "1526": 232, "00826": 232, "2031": 232, "061272": 232, "1095": 232, "060962": 232, "1100": 232, "046729": 232, "1436": 232, "034036": 232, "1971": 232, "023128": 232, "2901": 232, "071725": 232, "061692": 232, "1087": 232, "05216": 232, "1286": 232, "042327": 232, "1585": 232, "032111": 232, "2089": 232, "286461": 232, "242512": 232, "181783": 232, "1476": 232, "139021": 232, "1930": 232, "087012": 232, "3085": 232, "36322": 232, "652": 232, "08991": 232, "880185": 232, "1219": 232, "694533": 232, "366328": 232, "2931": 232, "15748": 232, "927": 232, "937824": 232, "1144": 232, "745357": 232, "1440": 232, "558061": 232, "1924": 232, "391387": 232, "2743": 232, "157349": 232, "616": 232, "129806": 232, "103083": 232, "1464": 232, "078442": 232, "053639": 232, "2815": 232, "767569": 232, "874": 232, "641585": 232, "941": 232, "387": 232, "488558": 232, "1236": 232, "355651": 232, "1698": 232, "230945": 232, "2615": 232, "611059": 232, "514108": 232, "1156": 232, "416571": 232, "318094": 232, "1869": 232, "225023": 232, "2642": 232, "037509": 232, "564": 232, "03176": 232, "026189": 232, "1281": 232, "021115": 232, "015895": 232, "2110": 232, "141333": 232, "949": 232, "133647": 232, "1004": 232, "071033": 232, "1889": 232, "52": 232, "042992": 232, "3121": 232, "147474": 232, "125344": 232, "1070": 232, "104294": 232, "084977": 232, "1579": 232, "062473": 232, "2148": 232, "701639": 232, "765": 232, "534615": 232, "359791": 232, "1492": 232, "2612": 232, "2055": 232, "183193": 232, "2930": 232, "92067": 232, "735": 232, "271": 232, "4402": 232, "880": 232, "046": 232, "69186": 232, "1269": 232, "17436": 232, "1828": 232, "880179": 232, "2439": 232, "62123": 232, "264": 232, "14905": 232, "999": 232, "64253": 232, "1307": 232, "1413": 232, "1881": 232, "771439": 232, "2783": 232, "369429": 232, "451": 232, "288236": 232, "1047": 232, "209526": 232, "1441": 232, "148115": 232, "2038": 232, "106089": 232, "2846": 232, "53204": 232, "465": 232, "28593": 232, "939": 232, "368": 232, "0852": 232, "1113": 232, "685382": 232, "1762": 232, "408357": 232, "2958": 232, "4521": 232, "13466": 232, "853916": 232, "1392": 232, "642672": 232, "1850": 232, "446442": 232, "2663": 232, "057419": 232, "876": 232, "046081": 232, "1092": 232, "038936": 232, "1292": 232, "031279": 232, "02345": 232, "2146": 232, "204966": 232, "17364": 232, "1159": 232, "141097": 232, "1426": 232, "105192": 232, "1913": 232, "067777": 232, "2970": 232, "21269": 232, "946": 232, "573": 232, "191564": 232, "1050": 232, "156368": 232, "1287": 232, "1565": 232, "093357": 232, "2156": 232, "84983": 232, "789777": 232, "1019": 232, "598168": 232, "1346": 232, "433492": 232, "1857": 232, "269504": 232, "2988": 232, "74845": 232, "859": 232, "348": 232, "96945": 232, "811": 232, "505": 232, "77082": 232, "76407": 232, "1826": 232, "09719": 232, "2935": 232, "73162": 232, "00241": 232, "1072": 232, "39024": 232, "77317": 232, "1816": 232, "19536": 232, "2694": 232, "517278": 232, "875": 232, "708": 232, "382208": 232, "1185": 232, "317837": 232, "1425": 232, "233231": 232, "1942": 232, "152925": 232, "2962": 232, "44309": 232, "741": 232, "62409": 232, "1115": 232, "64963": 232, "1098": 232, "03923": 232, "1743": 232, "625089": 232, "2898": 232, "07006": 232, "861": 232, "632": 232, "64247": 232, "1085": 232, "33386": 232, "1337": 232, "994935": 232, "1792": 232, "68383": 232, "2608": 232, "071358": 232, "940": 232, "061246": 232, "051679": 232, "1298": 232, "041483": 232, "1617": 232, "030989": 232, "2165": 232, "282241": 232, "951": 232, "085": 232, "238855": 232, "1123": 232, "193713": 232, "1385": 232, "146781": 232, "81": 232, "093896": 232, "286141": 232, "122": 232, "257138": 232, "1043": 232, "214208": 232, "167575": 232, "1601": 232, "124072": 232, "2163": 232, "21431": 232, "884": 232, "237": 232, "955251": 232, "775294": 232, "1384": 232, "63282": 232, "1696": 232, "37333": 232, "2876": 232, "87335": 232, "317": 232, "65059": 232, "1176": 232, "94733": 232, "1457": 232, "62241": 232, "1637": 232, "47752": 232, "2906": 232, "75786": 232, "83024": 232, "889": 232, "87429": 232, "1108": 232, "87685": 232, "75328": 232, "2449": 232, "718776": 232, "289": 232, "561317": 232, "1076": 232, "429166": 232, "1407": 232, "317204": 232, "1904": 232, "208555": 232, "2896": 232, "94057": 232, "30458": 232, "1048": 232, "6702": 232, "25799": 232, "1920": 232, "84121": 232, "2871": 232, "34423": 232, "711": 232, "77444": 232, "857": 232, "10049": 232, "52509": 232, "926038": 232, "2568": 232, "00203": 232, "1032": 232, "001981": 232, "001794": 232, "1169": 232, "001637": 232, "1280": 232, "00171": 232, "1226": 232, "003958": 232, "2119": 232, "003405": 232, "2463": 232, "003086": 232, "2718": 232, "002927": 232, "2866": 232, "002179": 232, "3849": 232, "004371": 232, "1918": 232, "004182": 232, "2005": 232, "003448": 232, "2433": 232, "00291": 232, "2882": 232, "002937": 232, "2856": 232, "012095": 232, "2774": 232, "010338": 232, "3245": 232, "008508": 232, "3943": 232, "006595": 232, "5087": 232, "004847": 232, "6923": 232, "052451": 232, "2558": 232, "042874": 232, "3130": 232, "032364": 232, "4147": 232, "02312": 232, "5805": 232, "01522": 232, "8818": 232, "045123": 232, "2974": 232, "037382": 232, "3590": 232, "030275": 232, "4433": 232, "023182": 232, "5789": 232, "01617": 232, "8300": 232, "007314": 232, "2580": 232, "006332": 232, "2980": 232, "005359": 232, "3522": 232, "004493": 232, "4200": 232, "003418": 232, "5521": 232, "027003": 232, "2795": 232, "02197": 232, "3436": 232, "017748": 232, "4253": 232, "013134": 232, "5748": 232, "008974": 232, "8412": 232, "025719": 232, "2889": 232, "021897": 232, "3393": 232, "018093": 232, "4107": 232, "013742": 232, "5408": 232, "009924": 232, "7488": 232, "002891": 232, "1450": 232, "002458": 232, "002523": 232, "1662": 232, "002266": 232, "1851": 232, "001803": 232, "2326": 232, "005789": 232, "005004": 232, "3353": 232, "00424": 232, "3956": 232, "003505": 232, "4786": 232, "002972": 232, "5644": 232, "006933": 232, "2420": 232, "005931": 232, "2828": 232, "005267": 232, "3185": 232, "004801": 232, "3494": 232, "003851": 232, "4356": 232, "019352": 232, "3467": 232, "016625": 232, "4036": 232, "013287": 232, "5050": 232, "010629": 232, "6313": 232, "007591": 232, "8841": 232, "097726": 232, "2746": 232, "081327": 232, "065632": 232, "4090": 232, "047646": 232, "5633": 232, "029536": 232, "9088": 232, "073619": 232, "3646": 232, "060379": 232, "4445": 232, "048994": 232, "5478": 232, "036992": 232, "7256": 232, "02588": 232, "10372": 232, "011659": 232, "3237": 232, "009791": 232, "3855": 232, "008118": 232, "4650": 232, "006679": 232, "5652": 232, "004939": 232, "7643": 232, "053777": 232, "2807": 232, "045914": 232, "3288": 232, "03588": 232, "4208": 232, "02529": 232, "5970": 232, "016742": 232, "9018": 232, "040705": 232, "3651": 232, "034291": 232, "4334": 232, "028568": 232, "5202": 232, "02187": 232, "6796": 232, "016186": 232, "9183": 232, "003155": 232, "002952": 232, "002655": 232, "2369": 232, "002436": 232, "2582": 232, "002236": 232, "2813": 232, "00745": 232, "3377": 232, "006565": 232, "3833": 232, "005426": 232, "4638": 232, "004256": 232, "5912": 232, "003466": 232, "7261": 232, "008359": 232, "3010": 232, "00742": 232, "3391": 232, "006535": 232, "3850": 232, "005559": 232, "4526": 232, "004881": 232, "5156": 232, "025726": 232, "3912": 232, "021747": 232, "4628": 232, "017651": 232, "5703": 232, "013712": 232, "7341": 232, "009801": 232, "10270": 232, "124749": 232, "3227": 232, "103385": 232, "3894": 232, "083219": 232, "4838": 232, "062601": 232, "6432": 232, "039799": 232, "10117": 232, "101071": 232, "3983": 232, "082567": 232, "4876": 232, "066852": 232, "6023": 232, "048773": 232, "8255": 232, "035419": 232, "11368": 232, "014772": 232, "01278": 232, "4430": 232, "010532": 232, "5376": 232, "008698": 232, "6509": 232, "006436": 232, "8798": 232, "069887": 232, "3240": 232, "058858": 232, "3848": 232, "047341": 232, "4784": 232, "034614": 232, "6543": 232, "022295": 232, "10159": 232, "053815": 232, "4142": 232, "045458": 232, "4904": 232, "037358": 232, "5968": 232, "02914": 232, "7651": 232, "02089": 232, "10672": 232, "003936": 232, "003322": 232, "2525": 232, "003173": 232, "2643": 232, "002691": 232, "3117": 232, "002358": 232, "3557": 232, "009382": 232, "3576": 232, "008289": 232, "4047": 232, "006724": 232, "4990": 232, "005148": 232, "6518": 232, "004061": 232, "8262": 232, "010712": 232, "3132": 232, "009203": 232, "007943": 232, "4224": 232, "006981": 232, "4806": 232, "00561": 232, "5980": 232, "034567": 232, "3882": 232, "028972": 232, "4632": 232, "023258": 232, "5770": 232, "017977": 232, "7466": 232, "012814": 232, "10474": 232, "158162": 232, "3394": 232, "132552": 232, "4050": 232, "101844": 232, "5271": 232, "080936": 232, "6633": 232, "05301": 232, "10127": 232, "135839": 232, "3952": 232, "11116": 232, "4829": 232, "089951": 232, "063302": 232, "8481": 232, "046746": 232, "11484": 232, "019263": 232, "3919": 232, "016459": 232, "4586": 232, "013535": 232, "5578": 232, "010771": 232, "7009": 232, "007611": 232, "9919": 232, "085488": 232, "3532": 232, "074727": 232, "4041": 232, "060476": 232, "4993": 232, "041796": 232, "7225": 232, "027547": 232, "10962": 232, "071382": 232, "4164": 232, "060077": 232, "4948": 232, "049658": 232, "5986": 232, "038139": 232, "7794": 232, "027025": 232, "10999": 232, "005025": 232, "2086": 232, "004519": 232, "003968": 232, "00339": 232, "3093": 232, "003153": 232, "3325": 232, "014795": 232, "2834": 232, "012623": 232, "3322": 232, "010269": 232, "4084": 232, "007859": 232, "5337": 232, "005703": 232, "7354": 232, "016169": 232, "2594": 232, "014448": 232, "2902": 232, "011705": 232, "3583": 232, "010149": 232, "4132": 232, "008793": 232, "4769": 232, "05603": 232, "2994": 232, "0468": 232, "3584": 232, "03744": 232, "4481": 232, "028166": 232, "5956": 232, "019259": 232, "8711": 232, "277815": 232, "2415": 232, "229837": 232, "2919": 232, "1787": 232, "3755": 232, "126545": 232, "5303": 232, "083532": 232, "8033": 232, "224925": 232, "2983": 232, "184256": 232, "3642": 232, "146452": 232, "4582": 232, "108899": 232, "6162": 232, "074066": 232, "9060": 232, "031946": 232, "2954": 232, "026814": 232, "3519": 232, "021706": 232, "4347": 232, "016667": 232, "5662": 232, "011647": 232, "8102": 232, "150549": 232, "2507": 232, "119951": 232, "3147": 232, "089309": 232, "4226": 232, "063723": 232, "5923": 232, "042784": 232, "8823": 232, "122421": 232, "3035": 232, "102244": 232, "082201": 232, "4520": 232, "062248": 232, "5969": 232, "042944": 232, "8652": 232, "004811": 232, "004438": 232, "2835": 232, "003899": 232, "003438": 232, "3659": 232, "002978": 232, "4225": 232, "014576": 232, "3453": 232, "012078": 232, "4167": 232, "008963": 232, "5615": 232, "007276": 232, "6917": 232, "005485": 232, "9176": 232, "015062": 232, "3341": 232, "013243": 232, "3800": 232, "011443": 232, "4398": 232, "009288": 232, "5418": 232, "007446": 232, "6759": 232, "054398": 232, "3701": 232, "044569": 232, "4517": 232, "036333": 232, "5541": 232, "027049": 232, "7442": 232, "018742": 232, "10742": 232, "267367": 232, "3011": 232, "223615": 232, "3601": 232, "1797": 232, "134716": 232, "5977": 232, "069275": 232, "11624": 232, "222661": 232, "3616": 232, "179525": 232, "4485": 232, "139298": 232, "5781": 232, "095879": 232, "8399": 232, "176292": 232, "4568": 232, "070028": 232, "025834": 232, "4383": 232, "02075": 232, "5457": 232, "016128": 232, "7021": 232, "011601": 232, "9761": 232, "148512": 232, "3050": 232, "124238": 232, "09953": 232, "4551": 232, "071432": 232, "6341": 232, "044154": 232, "10259": 232, "113174": 232, "3940": 232, "096166": 232, "4636": 232, "076584": 232, "5822": 232, "059291": 232, "7520": 232, "041661": 232, "10703": 232, "006557": 232, "2239": 232, "005848": 232, "2510": 232, "005021": 232, "2923": 232, "004663": 232, "3148": 232, "003933": 232, "3732": 232, "020392": 232, "2879": 232, "017102": 232, "3433": 232, "013703": 232, "4285": 232, "010953": 232, "5361": 232, "007496": 232, "7833": 232, "022132": 232, "019376": 232, "3030": 232, "015877": 232, "3698": 232, "013437": 232, "4370": 232, "011637": 232, "5046": 232, "078075": 232, "3008": 232, "065155": 232, "3604": 232, "052195": 232, "4500": 232, "03941": 232, "5959": 232, "026271": 232, "8940": 232, "398509": 232, "2357": 232, "332153": 232, "259051": 232, "3626": 232, "184412": 232, "5094": 232, "119678": 232, "7850": 232, "313656": 232, "2995": 232, "257989": 232, "3641": 232, "206049": 232, "4559": 232, "152848": 232, "6146": 232, "103125": 232, "9110": 232, "044486": 232, "2969": 232, "037334": 232, "3538": 232, "030229": 232, "023198": 232, "5695": 232, "01587": 232, "8325": 232, "219777": 232, "2404": 232, "17764": 232, "2975": 232, "135864": 232, "3889": 232, "100424": 232, "5262": 232, "067755": 232, "7799": 232, "172356": 232, "3018": 232, "144231": 232, "3606": 232, "116019": 232, "4483": 232, "087388": 232, "5953": 232, "0596": 232, "8728": 232, "006097": 232, "2751": 232, "005176": 232, "3241": 232, "00449": 232, "3736": 232, "003949": 232, "4248": 232, "003175": 232, "5284": 232, "020483": 232, "3276": 232, "013769": 232, "4873": 232, "011419": 232, "5876": 232, "008933": 232, "7512": 232, "006533": 232, "10272": 232, "019241": 232, "3487": 232, "016835": 232, "3986": 232, "014234": 232, "4714": 232, "011946": 232, "5617": 232, "009106": 232, "7369": 232, "07811": 232, "061481": 232, "4366": 232, "046201": 232, "5810": 232, "035702": 232, "7518": 232, "02221": 232, "12086": 232, "326917": 232, "3284": 232, "273363": 232, "3927": 232, "220994": 232, "4858": 232, "166153": 232, "6462": 232, "08544": 232, "12567": 232, "311348": 232, "3448": 232, "243012": 232, "4418": 232, "187933": 232, "5713": 232, "126819": 232, "8466": 232, "085569": 232, "12548": 232, "040478": 232, "3730": 232, "03297": 232, "4579": 232, "026527": 232, "5692": 232, "020782": 232, "7265": 232, "013904": 232, "10860": 232, "183003": 232, "161443": 232, "3741": 232, "129767": 232, "4654": 232, "089335": 232, "6760": 232, "061068": 232, "9890": 232, "15525": 232, "3829": 232, "125772": 232, "4727": 232, "101434": 232, "5861": 232, "076508": 232, "7770": 232, "053732": 232, "11064": 232, "010421": 232, "3219": 232, "009082": 232, "3694": 232, "007813": 232, "4294": 232, "006511": 232, "5153": 232, "005172": 232, "6487": 232, "032138": 232, "4176": 232, "02699": 232, "4972": 232, "022001": 232, "6100": 232, "016901": 232, "7941": 232, "012004": 232, "11180": 232, "03738": 232, "03149": 232, "4262": 232, "026673": 232, "5031": 232, "021782": 232, "6161": 232, "016822": 232, "7978": 232, "176031": 232, "3049": 232, "134442": 232, "3993": 232, "084378": 232, "6362": 232, "064058": 232, "8381": 232, "043787": 232, "12261": 232, "697876": 232, "3077": 232, "615338": 232, "3489": 232, "350147": 232, "6133": 232, "267289": 232, "8034": 232, "179695": 232, "11950": 232, "703207": 232, "3053": 232, "561805": 232, "3822": 232, "423052": 232, "5076": 232, "254835": 232, "171434": 232, "12526": 232, "093348": 232, "3235": 232, "072563": 232, "4161": 232, "05392": 232, "5600": 232, "037612": 232, "8029": 232, "026314": 232, "11476": 232, "407388": 232, "340939": 232, "3543": 232, "261028": 232, "4627": 232, "151649": 232, "7965": 232, "103379": 232, "11684": 232, "358769": 232, "3314": 232, "283046": 232, "4201": 232, "212152": 232, "5604": 232, "158502": 232, "7502": 232, "107514": 232, "11059": 232, "014833": 232, "012912": 232, "3898": 232, "011054": 232, "4553": 232, "009253": 232, "5439": 232, "00717": 232, "7019": 232, "052661": 232, "3823": 232, "044728": 232, "4501": 232, "036583": 232, "5503": 232, "027487": 232, "7324": 232, "01839": 232, "10947": 232, "055665": 232, "046588": 232, "4321": 232, "039411": 232, "5108": 232, "031875": 232, "6316": 232, "8148": 232, "263316": 232, "3058": 232, "198303": 232, "4061": 232, "141966": 232, "5672": 232, "105849": 232, "7608": 232, "068787": 232, "11707": 232, "793822": 232, "4057": 232, "996979": 232, "3230": 232, "54288": 232, "5933": 232, "412174": 232, "7815": 232, "274441": 232, "11737": 232, "03474": 232, "3113": 232, "832701": 232, "3868": 232, "564787": 232, "421781": 232, "7637": 232, "271587": 232, "11860": 232, "130834": 232, "3462": 232, "094331": 232, "4802": 232, "076012": 232, "058047": 232, "7803": 232, "039534": 232, "11458": 232, "635729": 232, "2850": 232, "379899": 232, "307908": 232, "5884": 232, "233057": 232, "7774": 232, "157518": 232, "11503": 232, "518276": 232, "3441": 232, "422517": 232, "4221": 232, "323476": 232, "5513": 232, "247251": 232, "7213": 232, "163369": 232, "10917": 232, "019231": 232, "016815": 232, "3991": 232, "014327": 232, "4683": 232, "011932": 232, "5624": 232, "00915": 232, "7334": 232, "072314": 232, "3712": 232, "06138": 232, "4373": 232, "050021": 232, "5366": 232, "037695": 232, "7121": 232, "02494": 232, "10763": 232, "079663": 232, "3369": 232, "06167": 232, "4352": 232, "052133": 232, "5149": 232, "042188": 232, "032574": 232, "8240": 232, "380582": 232, "2821": 232, "24038": 232, "4466": 232, "195271": 232, "5498": 232, "146935": 232, "7307": 232, "094832": 232, "11322": 232, "08794": 232, "3947": 232, "913626": 232, "4701": 232, "737943": 232, "5820": 232, "558473": 232, "7690": 232, "369466": 232, "51009": 232, "2844": 232, "26974": 232, "3382": 232, "778244": 232, "5518": 232, "589803": 232, "7282": 232, "375284": 232, "11444": 232, "160705": 232, "3758": 232, "135495": 232, "4457": 232, "108718": 232, "5555": 232, "08112": 232, "7445": 232, "053351": 232, "11320": 232, "614109": 232, "3934": 232, "518614": 232, "418491": 232, "5772": 232, "31592": 232, "7647": 232, "211893": 232, "11401": 232, "836616": 232, "2842": 232, "699579": 232, "3399": 232, "544194": 232, "379699": 232, "228043": 232, "10428": 232, "amx": 233, "x16": 233, "environment_vari": 233, "acc": [233, 234], "perfom": 233, "introduct": 233, "benchmark_it": 233, "benchmark_no_refresh": 233, "refresh": 233, "kxn": 233, "mxn": 233, "sparse_ratio": 233, "micro_b": 233, "output_fp32": 233, "has_append_sum": 233, "micro_oc": 233, "sub_func_level": 233, "3d_infer": 233, "append": [233, 234], "automaticlli": 233, "subfunc_level": 233, "subfunc_level_max": 233, "fold": 233, "dsparse_lib_use_amx": 233, "amx_bf16_x16": 233, "output_bf16": 233, "interv": 233, "lower_bound": 233, "upper_bound": 233, "invalid": 233, "prefix": 233, "fp32_relu": 233, "src_dt": 233, "dst_dt": 233, "tanspos": 233, "4d": 233, "distinguish": 233, "alpha": 233, "src0": 233, "bs0": 233, "bs1": 233, "beta": 233, "scr2": 233, "avx512f_p2031_p2013": 233, "has_binary_add": 233, "tile_m": 233, "tile_n": 233, "coeffici": 233, "vnni_noperm_p2031_p1302": 233, "spec_typ": 233, "output_dt": 233, "suuport": 233, "d0xd1x": 233, "d0": 233, "dst_type": 233, "newli": 233, "subdir": 233, "benchmark_dir": 233, "bench_": 233, "cpp": 233, "test_": 233, "entranc": 233, "get_true_data_": 233, "check_result_": 233, "gen_case_": 233, "run_bench_": 233, "feel": 233, "calc_flop": 233, "get_refresh_data_idx": 233, "benchmark_util": 233, "whitespac": 234, "labl": 234, "skip": 234, "run_ci": 234, "discard": 234, "new_input_fil": 234, "medium_n": 234, "it_per_cor": 234, "repeat": 234, "ci": 234, "toler": 235, "usag": [235, 236], "rel": 235, "conjunct": 235, "absolut": [235, 238, 239], "proport": [235, 236], "statu": [236, 239], "criteria": 236, "vision": 237, "speech": 237, "multimod": 237, "text_classifi": 237, "great": 237, "9998425245285034": 237, "believ": 237, "beauti": 237, "evoc": 237, "ve": 237, "seen": 237, "9998886585235596": 237, "redund": 238, "bear": 238, "brain": 238, "damag": 238, "hypothesi": 238, "yann": 238, "lecun": 238, "salient": 238, "anywher": 238, "filter": 238, "magnitud": 238, "lowest": 238, "lock": 238, "freez": 238, "grouplasso": 238, "hyper": 238, "didn": 238, "pruning_conf": 238, "full": 239, "littl": 239, "degrad": 239, "gain": 239, "bandwidth": 239, "ex": 239, "articl": 239, "affin": 239, "convers": 239, "math": 239, "zeropoint": 239, "asymmetr": 239, "earli": 239, "platform": [239, 244], "overflow": 239, "fp16": 239, "solv": 239, "unseen": 239, "peopl": 239, "emul": 239, "fake": 239, "With": 239, "backward": 239, "mimic": 239, "made": 239, "fact": 239, "ultim": 239, "yield": 239, "either": 239, "pain": 239, "brought": 239, "lossi": 239, "fx": 239, "eager": 239, "qat": 239, "exit": 239, "guarante": 239}, "objects": {"": [[190, 0, 1, "_CPPv48executor", "executor"], [190, 1, 1, "_CPPv4N8executor10DispatcherE", "executor::Dispatcher"], [190, 2, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::output"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::stage"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::output"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::stage"], [190, 2, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [190, 2, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::conf"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [190, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::op"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::output"], [190, 2, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::has_dispatch_table_file"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::output"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::reshape_model"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash::input"], [190, 0, 1, "_CPPv4N8executor10Dispatcher13KernelHandlerE", "executor::Dispatcher::KernelHandler"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::output"], [190, 2, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus"], [190, 3, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::output"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::input"], [190, 3, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::output"], [190, 4, 1, "_CPPv4N8executor10Dispatcher13adapt_action_E", "executor::Dispatcher::adapt_action_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher8cpu_isa_E", "executor::Dispatcher::cpu_isa_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E", "executor::Dispatcher::dispatch_table_file_exists_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher9do_tuningEv", "executor::Dispatcher::do_tuning"], [190, 4, 1, "_CPPv4N8executor10Dispatcher10do_tuning_E", "executor::Dispatcher::do_tuning_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher13enable_sparseEv", "executor::Dispatcher::enable_sparse"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher14execute_kernelEv", "executor::Dispatcher::execute_kernel"], [190, 4, 1, "_CPPv4N8executor10Dispatcher15execute_kernel_E", "executor::Dispatcher::execute_kernel_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E", "executor::Dispatcher::execution_options_ptr_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher9get_attrsEv", "executor::Dispatcher::get_attrs"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12get_it_shapeEv", "executor::Dispatcher::get_it_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv", "executor::Dispatcher::get_ot_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv", "executor::Dispatcher::get_reshape_time"], [190, 4, 1, "_CPPv4N8executor10Dispatcher9iter_cnt_E", "executor::Dispatcher::iter_cnt_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher15kernel_handler_E", "executor::Dispatcher::kernel_handler_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher11kernel_typeEv", "executor::Dispatcher::kernel_type"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7latencyEv", "executor::Dispatcher::latency"], [190, 4, 1, "_CPPv4N8executor10Dispatcher6model_E", "executor::Dispatcher::model_"], [190, 4, 1, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E", "executor::Dispatcher::monopoly_kernel_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher4nameEv", "executor::Dispatcher::name"], [190, 4, 1, "_CPPv4N8executor10Dispatcher5name_E", "executor::Dispatcher::name_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv", "executor::Dispatcher::no_tuning_space"], [190, 4, 1, "_CPPv4N8executor10Dispatcher16no_tuning_space_E", "executor::Dispatcher::no_tuning_space_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher13operator_confEv", "executor::Dispatcher::operator_conf"], [190, 4, 1, "_CPPv4N8executor10Dispatcher14operator_conf_E", "executor::Dispatcher::operator_conf_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv", "executor::Dispatcher::perf_ratio_id"], [190, 2, 1, "_CPPv4N8executor10Dispatcher7post_opEv", "executor::Dispatcher::post_op"], [190, 2, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs"], [190, 3, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs::input_attrs"], [190, 2, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse"], [190, 3, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse::enable_sparse"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_it_shape"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_it_shape::input_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency"], [190, 3, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency::latency"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_ot_shape"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::set_ot_shape::output_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id"], [190, 3, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id::perf_ratio_id"], [190, 2, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op"], [190, 3, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op::post_op"], [190, 2, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time::reshape_time_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id"], [190, 3, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id::table_id"], [190, 2, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode"], [190, 3, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode::mode"], [190, 2, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape"], [190, 3, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape::weight_shape"], [190, 4, 1, "_CPPv4N8executor10Dispatcher20sparselib_available_E", "executor::Dispatcher::sparselib_available_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher8table_idEv", "executor::Dispatcher::table_id"], [190, 4, 1, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E", "executor::Dispatcher::tune_dense_in_sparse_"], [190, 2, 1, "_CPPv4NK8executor10Dispatcher4typeEv", "executor::Dispatcher::type"], [190, 4, 1, "_CPPv4N8executor10Dispatcher5type_E", "executor::Dispatcher::type_"], [190, 2, 1, "_CPPv4N8executor10Dispatcher12weight_shapeEv", "executor::Dispatcher::weight_shape"], [190, 2, 1, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv", "executor::Dispatcher::weight_zero_ratio"], [190, 2, 1, "_CPPv4N8executor10DispatcherD0Ev", "executor::Dispatcher::~Dispatcher"], [191, 0, 1, "_CPPv42jd", "jd"], [191, 0, 1, "_CPPv42jd", "jd"], [192, 0, 1, "_CPPv42jd", "jd"], [193, 0, 1, "_CPPv42jd", "jd"], [191, 1, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [191, 2, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [191, 2, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [191, 3, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [191, 2, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [191, 1, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [191, 2, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [191, 2, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [191, 3, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [191, 1, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [191, 2, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [191, 2, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [191, 3, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [191, 2, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [191, 1, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [191, 2, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [191, 2, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [191, 3, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [192, 1, 1, "_CPPv4N2jd6engineE", "jd::engine"], [192, 4, 1, "_CPPv4N2jd6engine9eng_kind_E", "jd::engine::eng_kind_"], [192, 2, 1, "_CPPv4N2jd6engine6engineERK11engine_kind", "jd::engine::engine"], [192, 3, 1, "_CPPv4N2jd6engine6engineERK11engine_kind", "jd::engine::engine::eng_kind"], [192, 2, 1, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc", "jd::engine::get_implementation_list"], [192, 3, 1, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc", "jd::engine::get_implementation_list::op_desc"], [192, 2, 1, "_CPPv4NK2jd6engine4kindEv", "jd::engine::kind"], [192, 2, 1, "_CPPv4N2jd6engineD0Ev", "jd::engine::~engine"], [191, 1, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [191, 2, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [191, 2, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [191, 3, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [191, 2, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [191, 1, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [191, 2, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [191, 2, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [191, 3, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [191, 1, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [191, 2, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [191, 3, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [191, 3, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [191, 4, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [191, 2, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [191, 2, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [191, 3, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [191, 2, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [191, 2, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [191, 1, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [191, 2, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [191, 3, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [191, 3, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [191, 2, 1, "_CPPv4N2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [191, 3, 1, "_CPPv4N2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [191, 2, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [191, 2, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [191, 2, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [191, 3, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [191, 2, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [191, 1, 1, "_CPPv4N2jd8kernel_tE", "jd::kernel_t"], [193, 1, 1, "_CPPv4N2jd8kernel_tE", "jd::kernel_t"], [191, 2, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create"], [193, 2, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create"], [191, 5, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::derived_k_t"], [193, 5, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::derived_k_t"], [191, 5, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::derived_kd_t"], [193, 5, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::derived_kd_t"], [191, 3, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::k_ref"], [193, 3, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::k_ref"], [191, 3, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::kd"], [193, 3, 1, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::create::kd"], [191, 2, 1, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE", "jd::kernel_t::execute"], [193, 2, 1, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE", "jd::kernel_t::execute"], [191, 3, 1, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE", "jd::kernel_t::execute::rt_data"], [193, 3, 1, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE", "jd::kernel_t::execute::rt_data"], [191, 2, 1, "_CPPv4N2jd8kernel_t4initEv", "jd::kernel_t::init"], [193, 2, 1, "_CPPv4N2jd8kernel_t4initEv", "jd::kernel_t::init"], [191, 2, 1, "_CPPv4NK2jd8kernel_t2kdEv", "jd::kernel_t::kd"], [193, 2, 1, "_CPPv4NK2jd8kernel_t2kdEv", "jd::kernel_t::kd"], [191, 4, 1, "_CPPv4N2jd8kernel_t3kd_E", "jd::kernel_t::kd_"], [193, 4, 1, "_CPPv4N2jd8kernel_t3kd_E", "jd::kernel_t::kd_"], [191, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t", "jd::kernel_t::kernel_t"], [191, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::kernel_t"], [191, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t", "jd::kernel_t::kernel_t"], [193, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t", "jd::kernel_t::kernel_t"], [193, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::kernel_t"], [193, 2, 1, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t", "jd::kernel_t::kernel_t"], [191, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::kernel_t::kd"], [193, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_t::kernel_t::kd"], [191, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t", "jd::kernel_t::kernel_t::other"], [191, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t", "jd::kernel_t::kernel_t::other"], [193, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t", "jd::kernel_t::kernel_t::other"], [193, 3, 1, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t", "jd::kernel_t::kernel_t::other"], [191, 2, 1, "_CPPv4N2jd8kernel_taSERK8kernel_t", "jd::kernel_t::operator="], [191, 2, 1, "_CPPv4N2jd8kernel_taSERR8kernel_t", "jd::kernel_t::operator="], [193, 2, 1, "_CPPv4N2jd8kernel_taSERK8kernel_t", "jd::kernel_t::operator="], [193, 2, 1, "_CPPv4N2jd8kernel_taSERR8kernel_t", "jd::kernel_t::operator="], [191, 3, 1, "_CPPv4N2jd8kernel_taSERK8kernel_t", "jd::kernel_t::operator=::other"], [191, 3, 1, "_CPPv4N2jd8kernel_taSERR8kernel_t", "jd::kernel_t::operator=::other"], [193, 3, 1, "_CPPv4N2jd8kernel_taSERK8kernel_t", "jd::kernel_t::operator=::other"], [193, 3, 1, "_CPPv4N2jd8kernel_taSERR8kernel_t", "jd::kernel_t::operator=::other"], [191, 2, 1, "_CPPv4N2jd8kernel_tD0Ev", "jd::kernel_t::~kernel_t"], [193, 2, 1, "_CPPv4N2jd8kernel_tD0Ev", "jd::kernel_t::~kernel_t"], [191, 1, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [191, 2, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [191, 2, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [191, 3, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [191, 2, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [191, 1, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [191, 2, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [191, 2, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [191, 3, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [191, 1, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [191, 5, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [191, 5, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [191, 2, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [191, 3, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [191, 3, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [191, 4, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [191, 2, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [191, 2, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [191, 2, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [191, 3, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [191, 2, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [191, 1, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [191, 2, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [191, 2, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [191, 3, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [191, 2, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [191, 1, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [191, 2, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [191, 2, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [191, 3, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [191, 1, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [191, 2, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [191, 2, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [191, 3, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [191, 2, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [191, 1, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [191, 2, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [191, 2, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [191, 3, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [191, 1, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [191, 2, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [191, 2, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [191, 3, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [191, 2, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [191, 1, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [191, 2, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [191, 2, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [191, 3, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [191, 2, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [111, 6, 0, "-", "intel_extension_for_transformers"], [149, 6, 0, "-", "test_add_cls_token"], [150, 6, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [151, 6, 0, "-", "test_attention_reshape"], [152, 6, 0, "-", "test_conv_reshape"], [153, 6, 0, "-", "test_embeddingbag"], [154, 6, 0, "-", "test_execution_options"], [155, 6, 0, "-", "test_gelu"], [156, 6, 0, "-", "test_graph_dispatch"], [157, 6, 0, "-", "test_insert_input_output_data"], [158, 6, 0, "-", "test_is_supported_onnx_graph"], [159, 6, 0, "-", "test_last_layer_shape"], [160, 6, 0, "-", "test_layer_norm_with_reduce_mean"], [161, 6, 0, "-", "test_main"], [162, 6, 0, "-", "test_matmul_with_bias_relu"], [163, 6, 0, "-", "test_matmul_with_bias_sigmoid"], [164, 6, 0, "-", "test_matmul_with_bias_tanh"], [165, 6, 0, "-", "test_merged_embeddingbag"], [166, 6, 0, "-", "test_model"], [167, 6, 0, "-", "test_onnx_utils"], [168, 6, 0, "-", "test_ops"], [169, 6, 0, "-", "test_padding_sequence"], [170, 6, 0, "-", "test_pattern_dispatch"], [171, 6, 0, "-", "test_position_embeddings"], [172, 6, 0, "-", "test_qkv_merge"], [173, 6, 0, "-", "test_qkv_reshape"], [174, 6, 0, "-", "test_quant_onnx_execute"], [175, 6, 0, "-", "test_reshape_after_restore_hidden_states"], [176, 6, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [177, 6, 0, "-", "test_reshape_before_restore_hidden_states"], [178, 6, 0, "-", "test_start_end_logits"], [179, 6, 0, "-", "test_tf_utils"], [180, 6, 0, "-", "test_token_type_embeddings"], [181, 6, 0, "-", "test_transpose"], [182, 6, 0, "-", "test_transpose_batch_matmul"]], "intel_extension_for_transformers": [[0, 6, 0, "-", "backends"], [118, 6, 0, "-", "optimization"], [146, 6, 0, "-", "preprocessing"], [148, 6, 0, "-", "version"]], "intel_extension_for_transformers.backends": [[110, 6, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[9, 6, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, 7, 1, "", "compile"], [1, 6, 0, "-", "compile"], [3, 6, 0, "-", "extractors"], [7, 6, 0, "-", "graph"], [8, 6, 0, "-", "graph_utils"], [10, 6, 0, "-", "loaders"], [12, 6, 0, "-", "logger"], [13, 6, 0, "-", "onnx_utils"], [32, 6, 0, "-", "ops"], [74, 6, 0, "-", "sub_graph"], [109, 6, 0, "-", "tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, 7, 1, "", "compile"], [1, 7, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 8, 1, "", "Extractor"], [2, 6, 0, "-", "extractor"], [4, 6, 0, "-", "onnx_extractor"], [5, 6, 0, "-", "tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, 8, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, 8, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, 8, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, 8, 1, "", "Graph"], [6, 6, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph": [[7, 9, 1, "", "change_node_input_tensors"], [7, 9, 1, "", "change_node_output_tensors"], [7, 9, 1, "", "dump_tensor"], [7, 9, 1, "", "engine_init"], [7, 10, 1, "", "execution_options"], [7, 9, 1, "", "get_next_node_names"], [7, 9, 1, "", "get_node_by_name"], [7, 9, 1, "", "get_node_id"], [7, 9, 1, "", "get_pre_node_names"], [7, 9, 1, "", "get_sparse_nodes_name"], [7, 9, 1, "", "get_tensor_idx"], [7, 9, 1, "", "graph_dispatch"], [7, 9, 1, "", "graph_init"], [7, 9, 1, "", "inference"], [7, 9, 1, "", "insert_nodes"], [7, 9, 1, "", "modify_node_connections"], [7, 10, 1, "", "net_config"], [7, 10, 1, "", "nodes"], [7, 9, 1, "", "remove_nodes"], [7, 9, 1, "", "rename_node"], [7, 9, 1, "", "save"], [7, 9, 1, "", "transpose_mode_int8"], [7, 10, 1, "", "weight_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, 8, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[6, 9, 1, "", "change_node_input_tensors"], [6, 9, 1, "", "change_node_output_tensors"], [6, 9, 1, "", "dump_tensor"], [6, 9, 1, "", "engine_init"], [6, 10, 1, "", "execution_options"], [6, 9, 1, "", "get_next_node_names"], [6, 9, 1, "", "get_node_by_name"], [6, 9, 1, "", "get_node_id"], [6, 9, 1, "", "get_pre_node_names"], [6, 9, 1, "", "get_sparse_nodes_name"], [6, 9, 1, "", "get_tensor_idx"], [6, 9, 1, "", "graph_dispatch"], [6, 9, 1, "", "graph_init"], [6, 9, 1, "", "inference"], [6, 9, 1, "", "insert_nodes"], [6, 9, 1, "", "modify_node_connections"], [6, 10, 1, "", "net_config"], [6, 10, 1, "", "nodes"], [6, 9, 1, "", "remove_nodes"], [6, 9, 1, "", "rename_node"], [6, 9, 1, "", "save"], [6, 9, 1, "", "transpose_mode_int8"], [6, 10, 1, "", "weight_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, 8, 1, "", "LazyImport"], [8, 7, 1, "", "construct_node"], [8, 7, 1, "", "get_data_dtype"], [8, 7, 1, "", "get_model_fwk_name"], [8, 7, 1, "", "get_quant_info"], [8, 7, 1, "", "insert_pattern"], [8, 7, 1, "", "insert_quant_info"], [8, 7, 1, "", "list2str"], [8, 7, 1, "", "names_from_input"], [8, 7, 1, "", "pattern_mapping"], [8, 7, 1, "", "pattern_mapping_conf_validation"], [8, 7, 1, "", "quant_info_init"], [8, 7, 1, "", "search_pattern"], [8, 7, 1, "", "search_straight_pattern"], [8, 7, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, 8, 1, "", "Loader"], [11, 6, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, 8, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, 8, 1, "", "Logger"], [12, 7, 1, "", "debug"], [12, 7, 1, "", "error"], [12, 7, 1, "", "fatal"], [12, 7, 1, "", "info"], [12, 7, 1, "", "log"], [12, 7, 1, "", "warn"], [12, 7, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[12, 9, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, 7, 1, "", "bias_to_int32"], [13, 7, 1, "", "change_num_name"], [13, 7, 1, "", "get_children"], [13, 7, 1, "", "get_initializer_children_names"], [13, 7, 1, "", "get_node_children_names"], [13, 7, 1, "", "graph_node_names_details"], [13, 7, 1, "", "is_supported_onnx_graph"], [13, 7, 1, "", "is_supported_onnx_node"], [13, 7, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[32, 8, 1, "", "Operator"], [14, 6, 0, "-", "all"], [15, 6, 0, "-", "assert"], [16, 6, 0, "-", "batch_matmul"], [17, 6, 0, "-", "batch_matmul_v2"], [18, 6, 0, "-", "bias_add"], [19, 6, 0, "-", "cast"], [20, 6, 0, "-", "concat"], [21, 6, 0, "-", "conv"], [22, 6, 0, "-", "empty_ops"], [23, 6, 0, "-", "expand_dims"], [24, 6, 0, "-", "fused_batch_matmul_v2"], [25, 6, 0, "-", "fused_batch_norm_v3"], [26, 6, 0, "-", "fused_gemm"], [27, 6, 0, "-", "fused_matmul"], [28, 6, 0, "-", "gather"], [29, 6, 0, "-", "gather_elements"], [30, 6, 0, "-", "gelu"], [31, 6, 0, "-", "gemm"], [33, 6, 0, "-", "iterator_get_next"], [34, 6, 0, "-", "iterator_v2"], [35, 6, 0, "-", "layer_normalization"], [36, 6, 0, "-", "map_and_batch_dataset"], [37, 6, 0, "-", "matmul"], [38, 6, 0, "-", "mean"], [39, 6, 0, "-", "mkl_layer_norm"], [40, 6, 0, "-", "model_dataset"], [41, 6, 0, "-", "one_hot"], [42, 6, 0, "-", "onnx_input"], [43, 6, 0, "-", "op"], [32, 7, 1, "", "operator_registry"], [44, 6, 0, "-", "optimize_dataset"], [45, 6, 0, "-", "pack"], [46, 6, 0, "-", "placeholder"], [47, 6, 0, "-", "quantize_linear"], [48, 6, 0, "-", "quantize_v2"], [49, 6, 0, "-", "quantized_fused_matmul_and_dequantize"], [50, 6, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [51, 6, 0, "-", "reduce_mean"], [52, 6, 0, "-", "reduce_sum"], [53, 6, 0, "-", "reshape"], [54, 6, 0, "-", "scatter_elements"], [55, 6, 0, "-", "softmax"], [56, 6, 0, "-", "split"], [57, 6, 0, "-", "squeeze"], [58, 6, 0, "-", "strided_slice"], [59, 6, 0, "-", "tensor"], [60, 6, 0, "-", "top_k"], [61, 6, 0, "-", "transpose"], [62, 6, 0, "-", "unpack"], [63, 6, 0, "-", "unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator": [[32, 10, 1, "", "attr"], [32, 10, 1, "", "config"], [32, 9, 1, "", "construct"], [32, 9, 1, "", "extract"], [32, 10, 1, "", "input_tensors"], [32, 10, 1, "", "name"], [32, 10, 1, "", "op_type"], [32, 10, 1, "", "output_tensors"], [32, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, 8, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[14, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, 8, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[15, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, 8, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[16, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, 8, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[17, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, 8, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[18, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[19, 8, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[19, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[20, 8, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[20, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[21, 8, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[21, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[22, 8, 1, "", "Add"], [22, 8, 1, "", "AddV2"], [22, 8, 1, "", "BinaryAdd"], [22, 8, 1, "", "ConstantOfShape"], [22, 8, 1, "", "Convolution"], [22, 8, 1, "", "CumSum"], [22, 8, 1, "", "DequantizeLinear"], [22, 8, 1, "", "Div"], [22, 8, 1, "", "EmbeddingBag"], [22, 8, 1, "", "Equal"], [22, 8, 1, "", "Erf"], [22, 8, 1, "", "Expand"], [22, 8, 1, "", "ExpandIndices"], [22, 8, 1, "", "Fill"], [22, 8, 1, "", "FlatMapDataset"], [22, 8, 1, "", "Flatten"], [22, 8, 1, "", "Identity"], [22, 8, 1, "", "InnerProduct"], [22, 8, 1, "", "Input"], [22, 8, 1, "", "LayerNorm"], [22, 8, 1, "", "LessEqual"], [22, 8, 1, "", "Loop"], [22, 8, 1, "", "MakeIterator"], [22, 8, 1, "", "MatMulWithBias"], [22, 8, 1, "", "MatMulWithBiasAdd"], [22, 8, 1, "", "MatMulWithBiasGelu"], [22, 8, 1, "", "MatMulWithBiasRelu"], [22, 8, 1, "", "MatMulWithBiasSigmoid"], [22, 8, 1, "", "MatMulWithBiasTanh"], [22, 8, 1, "", "Matmul"], [22, 8, 1, "", "MergedEmbeddingbag"], [22, 8, 1, "", "Mul"], [22, 8, 1, "", "NonZero"], [22, 8, 1, "", "Not"], [22, 8, 1, "", "Onehot"], [22, 8, 1, "", "Output"], [22, 8, 1, "", "PaddingSequence"], [22, 8, 1, "", "PositionIds"], [22, 8, 1, "", "Pow"], [22, 8, 1, "", "QLinearAdd"], [22, 8, 1, "", "QLinearMatMul"], [22, 8, 1, "", "QLinearMul"], [22, 8, 1, "", "Quantize"], [22, 8, 1, "", "Range"], [22, 8, 1, "", "RealDiv"], [22, 8, 1, "", "Relu"], [22, 8, 1, "", "Reorder"], [22, 8, 1, "", "Rsqrt"], [22, 8, 1, "", "Shape"], [22, 8, 1, "", "Sigmoid"], [22, 8, 1, "", "Slice"], [22, 8, 1, "", "Sqrt"], [22, 8, 1, "", "Square"], [22, 8, 1, "", "SquaredDifference"], [22, 8, 1, "", "StopGradient"], [22, 8, 1, "", "Sub"], [22, 8, 1, "", "Tanh"], [22, 8, 1, "", "TensorSliceDataset"], [22, 8, 1, "", "Tile"], [22, 8, 1, "", "TokenTypeIds"], [22, 8, 1, "", "TransposeBatchMatMul"], [22, 8, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[23, 8, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[23, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[25, 8, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[25, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[26, 8, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[26, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[27, 8, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[27, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[28, 8, 1, "", "Gather"], [28, 8, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[28, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[28, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[29, 8, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[29, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[30, 8, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[30, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[31, 8, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[31, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[33, 8, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[33, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[34, 8, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[34, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[35, 8, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[35, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[36, 8, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[36, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[37, 8, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[37, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[38, 8, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[38, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[40, 8, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[40, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[41, 8, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[41, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[42, 8, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[42, 9, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[43, 8, 1, "", "Operator"], [43, 7, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[43, 10, 1, "", "attr"], [43, 10, 1, "", "config"], [43, 9, 1, "", "construct"], [43, 9, 1, "", "extract"], [43, 10, 1, "", "input_tensors"], [43, 10, 1, "", "name"], [43, 10, 1, "", "op_type"], [43, 10, 1, "", "output_tensors"], [43, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[44, 8, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[44, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[45, 8, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[45, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[46, 8, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[46, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[47, 8, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[47, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[48, 8, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[48, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[50, 8, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[50, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[51, 8, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[51, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[52, 8, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[52, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[53, 8, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[53, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[54, 8, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[54, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[55, 8, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[55, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[56, 8, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[56, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[57, 8, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[57, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[58, 8, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[58, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[59, 8, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor": [[59, 10, 1, "", "config"], [59, 10, 1, "", "data"], [59, 10, 1, "", "dest_op"], [59, 10, 1, "", "dtype"], [59, 10, 1, "", "location"], [59, 10, 1, "", "name"], [59, 10, 1, "", "shape"], [59, 10, 1, "", "source_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[60, 8, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[60, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[61, 8, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[61, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[62, 8, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[62, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[63, 8, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[63, 9, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[74, 8, 1, "", "Pattern"], [74, 8, 1, "", "SubGraphMatcher"], [64, 6, 0, "-", "add_cls_token"], [65, 6, 0, "-", "add_embeddings"], [66, 6, 0, "-", "attention_mask_length_adaptive_keep_indices"], [67, 6, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [68, 6, 0, "-", "attention_reshape"], [69, 6, 0, "-", "collect_quant_info"], [70, 6, 0, "-", "conv_reshape"], [71, 6, 0, "-", "embeddingbag"], [72, 6, 0, "-", "gelu"], [73, 6, 0, "-", "generate_sequence"], [75, 6, 0, "-", "input_data"], [76, 6, 0, "-", "input_file"], [77, 6, 0, "-", "insert_bf16_node"], [78, 6, 0, "-", "insert_quant_node"], [79, 6, 0, "-", "interact_features"], [80, 6, 0, "-", "last_layer_shape"], [81, 6, 0, "-", "layer_norm"], [82, 6, 0, "-", "layer_norm_with_reduce_mean"], [83, 6, 0, "-", "matmul_with_bias"], [84, 6, 0, "-", "matmul_with_bias_add"], [85, 6, 0, "-", "matmul_with_bias_gelu"], [86, 6, 0, "-", "matmul_with_bias_relu"], [87, 6, 0, "-", "matmul_with_bias_sigmoid"], [88, 6, 0, "-", "matmul_with_bias_tanh"], [89, 6, 0, "-", "merged_embeddingbag"], [90, 6, 0, "-", "output_data"], [91, 6, 0, "-", "padding_sequence"], [92, 6, 0, "-", "pattern"], [74, 7, 1, "", "pattern_registry"], [93, 6, 0, "-", "position_embeddings"], [94, 6, 0, "-", "position_embeddings_v1"], [95, 6, 0, "-", "qkv_merge"], [96, 6, 0, "-", "qkv_reshape"], [97, 6, 0, "-", "quantize_fusion"], [98, 6, 0, "-", "reshape_after_restore_hidden_states"], [99, 6, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [100, 6, 0, "-", "reshape_before_restore_hidden_states"], [101, 6, 0, "-", "reshape_fusion"], [102, 6, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [103, 6, 0, "-", "start_end_logits"], [104, 6, 0, "-", "subgraph_matcher"], [105, 6, 0, "-", "token_type_embeddings"], [106, 6, 0, "-", "token_type_embeddings_v1"], [107, 6, 0, "-", "transpose_batch_matmul"], [108, 6, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[64, 8, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[65, 8, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[66, 8, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[67, 8, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[68, 8, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[69, 8, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[70, 8, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[71, 8, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[72, 8, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[73, 8, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[75, 8, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[76, 8, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[77, 8, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[78, 8, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[79, 8, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[80, 8, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[81, 8, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[82, 8, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[83, 8, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[84, 8, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[85, 8, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[86, 8, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[87, 8, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[88, 8, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[89, 8, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[90, 8, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[91, 8, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[92, 8, 1, "", "Pattern"], [92, 7, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[93, 8, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[94, 8, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[95, 8, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[96, 8, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[97, 8, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[98, 8, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[99, 8, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[100, 8, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[101, 8, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[102, 8, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[103, 8, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[104, 8, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[105, 8, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[106, 8, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[107, 8, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[108, 8, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[109, 11, 1, "", "TF_DTYPE_ID"], [109, 7, 1, "", "create_tf_node"], [109, 7, 1, "", "get_tensor_dest_op"], [109, 7, 1, "", "graph_node_names_details"], [109, 7, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.optimization": [[118, 8, 1, "", "AutoDistillation"], [118, 8, 1, "", "AutoDistillationConfig"], [118, 8, 1, "", "DistillationConfig"], [118, 8, 1, "", "DistillationCriterionMode"], [118, 8, 1, "", "DynamicLengthConfig"], [118, 8, 1, "", "FlashDistillationConfig"], [118, 8, 1, "", "NAS"], [118, 8, 1, "", "NASConfig"], [118, 8, 1, "", "OptimizedModel"], [118, 8, 1, "", "Provider"], [118, 8, 1, "", "PrunerConfig"], [118, 8, 1, "", "PruningConfig"], [118, 8, 1, "", "PruningMode"], [118, 8, 1, "", "QuantizationConfig"], [118, 8, 1, "", "QuantizationMode"], [118, 8, 1, "", "TFDistillationConfig"], [118, 8, 1, "", "TFOptimization"], [112, 6, 0, "-", "benchmark"], [113, 6, 0, "-", "config"], [114, 6, 0, "-", "distillation"], [117, 6, 0, "-", "dynamic"], [120, 6, 0, "-", "mixture"], [121, 6, 0, "-", "model"], [123, 6, 0, "-", "nas"], [125, 6, 0, "-", "optimizer"], [126, 6, 0, "-", "optimizer_tf"], [127, 6, 0, "-", "pipeline"], [128, 6, 0, "-", "pruning"], [129, 6, 0, "-", "pytorch_pruner"], [135, 6, 0, "-", "quantization"], [136, 6, 0, "-", "trainer"], [137, 6, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.AutoDistillation": [[118, 9, 1, "", "create_distillers"], [118, 9, 1, "", "estimate"], [118, 10, 1, "", "eval_func"], [118, 9, 1, "", "init_by_cfg"], [118, 9, 1, "", "load_search_results"], [118, 9, 1, "", "search"], [118, 10, 1, "", "student_model"], [118, 10, 1, "", "teacher_model"], [118, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.AutoDistillationConfig": [[118, 10, 1, "", "framework"], [118, 10, 1, "", "knowledge_transfer"], [118, 10, 1, "", "max_trials"], [118, 10, 1, "", "metrics"], [118, 10, 1, "", "regular_distillation"], [118, 10, 1, "", "search_algorithm"], [118, 10, 1, "", "search_space"], [118, 10, 1, "", "seed"]], "intel_extension_for_transformers.optimization.DistillationConfig": [[118, 10, 1, "", "criterion"], [118, 10, 1, "", "framework"], [118, 10, 1, "", "metrics"]], "intel_extension_for_transformers.optimization.NASConfig": [[118, 10, 1, "", "framework"], [118, 10, 1, "", "max_trials"], [118, 10, 1, "", "metrics"], [118, 10, 1, "", "search_algorithm"], [118, 10, 1, "", "search_space"], [118, 10, 1, "", "seed"]], "intel_extension_for_transformers.optimization.OptimizedModel": [[118, 9, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.PruningConfig": [[118, 10, 1, "", "epoch_range"], [118, 10, 1, "", "epochs"], [118, 10, 1, "", "framework"], [118, 9, 1, "", "init_prune_config"], [118, 10, 1, "", "initial_sparsity_ratio"], [118, 10, 1, "", "metrics"], [118, 10, 1, "", "pruner_config"], [118, 10, 1, "", "target_sparsity_ratio"]], "intel_extension_for_transformers.optimization.QuantizationConfig": [[118, 10, 1, "", "approach"], [118, 10, 1, "", "framework"], [118, 10, 1, "", "input_names"], [118, 10, 1, "", "max_trials"], [118, 10, 1, "", "metrics"], [118, 10, 1, "", "objectives"], [118, 10, 1, "", "op_wise"], [118, 10, 1, "", "output_dir"], [118, 10, 1, "", "output_names"], [118, 10, 1, "", "performance_only"], [118, 10, 1, "", "random_seed"], [118, 10, 1, "", "resume_path"], [118, 10, 1, "", "sampling_size"], [118, 10, 1, "", "strategy"], [118, 10, 1, "", "tensorboard"], [118, 10, 1, "", "timeout"]], "intel_extension_for_transformers.optimization.TFOptimization": [[118, 9, 1, "", "autodistill"], [118, 9, 1, "", "build_train_func"], [118, 9, 1, "", "builtin_eval_func"], [118, 9, 1, "", "distill"], [118, 10, 1, "", "eval_dataset"], [118, 10, 1, "", "eval_func"], [118, 9, 1, "", "init_distiller"], [118, 9, 1, "", "init_pruner"], [118, 9, 1, "", "init_quantizer"], [118, 10, 1, "", "input_names"], [118, 10, 1, "", "inputs"], [118, 9, 1, "", "model_builder_builtin"], [118, 10, 1, "", "output_names"], [118, 9, 1, "", "prune"], [118, 9, 1, "", "quantize"], [118, 10, 1, "", "train_dataset"], [118, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.benchmark": [[112, 8, 1, "", "ExecutorBenchmark"], [112, 7, 1, "", "run"]], "intel_extension_for_transformers.optimization.config": [[113, 8, 1, "", "AutoDistillationConfig"], [113, 8, 1, "", "DistillationConfig"], [113, 8, 1, "", "DynamicLengthConfig"], [113, 8, 1, "", "FlashDistillationConfig"], [113, 8, 1, "", "NASConfig"], [113, 8, 1, "", "Provider"], [113, 8, 1, "", "PruningConfig"], [113, 8, 1, "", "QuantizationConfig"], [113, 8, 1, "", "TFDistillationConfig"]], "intel_extension_for_transformers.optimization.config.AutoDistillationConfig": [[113, 10, 1, "", "framework"], [113, 10, 1, "", "knowledge_transfer"], [113, 10, 1, "", "max_trials"], [113, 10, 1, "", "metrics"], [113, 10, 1, "", "regular_distillation"], [113, 10, 1, "", "search_algorithm"], [113, 10, 1, "", "search_space"], [113, 10, 1, "", "seed"]], "intel_extension_for_transformers.optimization.config.DistillationConfig": [[113, 10, 1, "", "criterion"], [113, 10, 1, "", "framework"], [113, 10, 1, "", "metrics"]], "intel_extension_for_transformers.optimization.config.NASConfig": [[113, 10, 1, "", "framework"], [113, 10, 1, "", "max_trials"], [113, 10, 1, "", "metrics"], [113, 10, 1, "", "search_algorithm"], [113, 10, 1, "", "search_space"], [113, 10, 1, "", "seed"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[113, 10, 1, "", "epoch_range"], [113, 10, 1, "", "epochs"], [113, 10, 1, "", "framework"], [113, 9, 1, "", "init_prune_config"], [113, 10, 1, "", "initial_sparsity_ratio"], [113, 10, 1, "", "metrics"], [113, 10, 1, "", "pruner_config"], [113, 10, 1, "", "target_sparsity_ratio"]], "intel_extension_for_transformers.optimization.config.QuantizationConfig": [[113, 10, 1, "", "approach"], [113, 10, 1, "", "framework"], [113, 10, 1, "", "input_names"], [113, 10, 1, "", "max_trials"], [113, 10, 1, "", "metrics"], [113, 10, 1, "", "objectives"], [113, 10, 1, "", "op_wise"], [113, 10, 1, "", "output_dir"], [113, 10, 1, "", "output_names"], [113, 10, 1, "", "performance_only"], [113, 10, 1, "", "random_seed"], [113, 10, 1, "", "resume_path"], [113, 10, 1, "", "sampling_size"], [113, 10, 1, "", "strategy"], [113, 10, 1, "", "tensorboard"], [113, 10, 1, "", "timeout"]], "intel_extension_for_transformers.optimization.distillation": [[114, 8, 1, "", "Criterion"], [114, 8, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[115, 6, 0, "-", "drop_and_restore_utils"], [116, 6, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[115, 7, 1, "", "sample_layer_configuration"], [115, 7, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[116, 8, 1, "", "Evolution"], [116, 7, 1, "", "approx_ratio"], [116, 7, 1, "", "inverse"], [116, 7, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[116, 9, 1, "", "add_gene"], [116, 9, 1, "", "convex_hull"], [116, 9, 1, "", "crossover"], [116, 9, 1, "", "get_store"], [116, 9, 1, "", "load_store"], [116, 9, 1, "", "mutate"], [116, 9, 1, "", "pareto_frontier"], [116, 9, 1, "", "save_population"], [116, 9, 1, "", "save_store"], [116, 9, 1, "", "set_lower_constraint"], [116, 9, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[119, 6, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[119, 8, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[119, 9, 1, "", "create_distillers"], [119, 9, 1, "", "estimate"], [119, 10, 1, "", "eval_func"], [119, 9, 1, "", "init_by_cfg"], [119, 9, 1, "", "load_search_results"], [119, 9, 1, "", "search"], [119, 10, 1, "", "student_model"], [119, 10, 1, "", "teacher_model"], [119, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.model": [[121, 8, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[121, 9, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[123, 8, 1, "", "BasicNAS"], [123, 8, 1, "", "NAS"], [122, 6, 0, "-", "basic_nas"], [124, 6, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.BasicNAS": [[123, 9, 1, "", "estimate"], [123, 10, 1, "", "eval_func"], [123, 9, 1, "", "execute"], [123, 9, 1, "", "init_by_cfg"], [123, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[122, 8, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[122, 9, 1, "", "estimate"], [122, 10, 1, "", "eval_func"], [122, 9, 1, "", "execute"], [122, 9, 1, "", "init_by_cfg"], [122, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.nas.nas": [[124, 8, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[125, 8, 1, "", "NoTrainerOptimizer"], [125, 8, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[125, 10, 1, "", "calib_dataloader"], [125, 10, 1, "", "calib_func"], [125, 9, 1, "", "distill"], [125, 10, 1, "", "eval_func"], [125, 9, 1, "", "init_distiller"], [125, 9, 1, "", "init_pruner"], [125, 9, 1, "", "init_quantizer"], [125, 10, 1, "", "provider"], [125, 9, 1, "", "prune"], [125, 9, 1, "", "quantize"], [125, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[125, 9, 1, "", "fit"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[126, 8, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[126, 9, 1, "", "autodistill"], [126, 9, 1, "", "build_train_func"], [126, 9, 1, "", "builtin_eval_func"], [126, 9, 1, "", "distill"], [126, 10, 1, "", "eval_dataset"], [126, 10, 1, "", "eval_func"], [126, 9, 1, "", "init_distiller"], [126, 9, 1, "", "init_pruner"], [126, 9, 1, "", "init_quantizer"], [126, 10, 1, "", "input_names"], [126, 10, 1, "", "inputs"], [126, 9, 1, "", "model_builder_builtin"], [126, 10, 1, "", "output_names"], [126, 9, 1, "", "prune"], [126, 9, 1, "", "quantize"], [126, 10, 1, "", "train_dataset"], [126, 10, 1, "", "train_func"]], "intel_extension_for_transformers.optimization.pipeline": [[127, 7, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[128, 8, 1, "", "PrunerConfig"], [128, 8, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[130, 6, 0, "-", "patterns"], [131, 6, 0, "-", "prune_utils"], [132, 6, 0, "-", "pruner"], [133, 6, 0, "-", "pruning"], [134, 6, 0, "-", "scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[130, 7, 1, "", "get_pattern"], [130, 7, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[131, 7, 1, "", "parse_not_to_prune"], [131, 7, 1, "", "parse_to_prune"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[132, 8, 1, "", "SnipPruner"], [132, 7, 1, "", "get_pruner"], [132, 7, 1, "", "register_pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[134, 7, 1, "", "get_scheduler"], [134, 7, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.quantization": [[135, 8, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[136, 8, 1, "", "BaseTrainer"], [136, 8, 1, "", "NLPSeq2SeqTrainer"], [136, 8, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[136, 9, 1, "", "auto_distil_evaluation_loop"], [136, 9, 1, "", "autodistillation"], [136, 9, 1, "", "builtin_eval_func"], [136, 9, 1, "", "builtin_train_func"], [136, 10, 1, "", "calib_dataloader"], [136, 9, 1, "", "compute_loss"], [136, 9, 1, "", "create_optimizer_builtin"], [136, 9, 1, "", "distill"], [136, 10, 1, "", "eval_func"], [136, 9, 1, "", "export_to_bf16_onnx"], [136, 9, 1, "", "export_to_fp32_onnx"], [136, 9, 1, "", "export_to_int8_onnx"], [136, 9, 1, "", "export_to_jit"], [136, 9, 1, "", "export_to_onnx"], [136, 9, 1, "", "init_distiller"], [136, 9, 1, "", "init_pruner"], [136, 9, 1, "", "init_quantizer"], [136, 9, 1, "", "model_builder_builtin"], [136, 9, 1, "", "nas"], [136, 9, 1, "", "orchestrate_optimizations"], [136, 10, 1, "", "provider"], [136, 9, 1, "", "prune"], [136, 9, 1, "", "quantize"], [136, 10, 1, "", "resuming_checkpoint"], [136, 9, 1, "", "run_evolutionary_search"], [136, 9, 1, "", "set_dynamic_config"], [136, 9, 1, "", "train"], [136, 10, 1, "", "train_func"], [136, 9, 1, "", "training_step"], [136, 9, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[136, 9, 1, "", "builtin_eval_func"], [136, 10, 1, "", "max_length"], [136, 10, 1, "", "num_beams"]], "intel_extension_for_transformers.optimization.utils": [[138, 6, 0, "-", "metrics"], [139, 6, 0, "-", "models"], [142, 6, 0, "-", "objectives"], [143, 6, 0, "-", "utility"], [144, 6, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[138, 8, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[140, 6, 0, "-", "modeling_bert_dynamic"], [141, 6, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[140, 8, 1, "", "BertEmbeddings"], [140, 8, 1, "", "BertForMaskedLM"], [140, 8, 1, "", "BertForMultipleChoice"], [140, 8, 1, "", "BertForNextSentencePrediction"], [140, 8, 1, "", "BertForPreTraining"], [140, 8, 1, "", "BertForPreTrainingOutput"], [140, 8, 1, "", "BertForQuestionAnswering"], [140, 8, 1, "", "BertForSequenceClassification"], [140, 8, 1, "", "BertForTokenClassification"], [140, 8, 1, "", "BertLMHeadModel"], [140, 8, 1, "", "BertModel"], [140, 8, 1, "", "BertPreTrainedModel"], [140, 7, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[140, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[141, 8, 1, "", "RobertaAttention"], [141, 8, 1, "", "RobertaClassificationHead"], [141, 8, 1, "", "RobertaEmbeddings"], [141, 8, 1, "", "RobertaEncoder"], [141, 8, 1, "", "RobertaForCausalLM"], [141, 8, 1, "", "RobertaForMaskedLM"], [141, 8, 1, "", "RobertaForMultipleChoice"], [141, 8, 1, "", "RobertaForQuestionAnswering"], [141, 8, 1, "", "RobertaForSequenceClassification"], [141, 8, 1, "", "RobertaForTokenClassification"], [141, 8, 1, "", "RobertaIntermediate"], [141, 8, 1, "", "RobertaLMHead"], [141, 8, 1, "", "RobertaLayer"], [141, 8, 1, "", "RobertaModel"], [141, 8, 1, "", "RobertaOutput"], [141, 8, 1, "", "RobertaPooler"], [141, 8, 1, "", "RobertaPreTrainedModel"], [141, 8, 1, "", "RobertaSelfAttention"], [141, 8, 1, "", "RobertaSelfOutput"], [141, 7, 1, "", "create_position_ids_from_input_ids"], [141, 7, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[141, 9, 1, "", "create_position_ids_from_inputs_embeds"], [141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "get_output_embeddings"], [141, 9, 1, "", "prepare_inputs_for_generation"], [141, 9, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "get_output_embeddings"], [141, 9, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[141, 9, 1, "", "feed_forward_chunk"], [141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "get_input_embeddings"], [141, 9, 1, "", "set_input_embeddings"], [141, 9, 1, "", "set_length_config"], [141, 9, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[141, 9, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[141, 9, 1, "", "forward"], [141, 9, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[141, 9, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[142, 8, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[142, 9, 1, "", "modelsize"], [142, 9, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[143, 7, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[144, 8, 1, "", "TFDataloader"], [144, 7, 1, "", "distributed_init"], [144, 7, 1, "", "get_filepath"], [144, 7, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[145, 6, 0, "-", "data_augmentation"], [147, 6, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.utils": [[147, 8, 1, "", "AugmenterType"]], "test_add_cls_token": [[149, 8, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[149, 9, 1, "", "setUpClass"], [149, 9, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[150, 8, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[150, 9, 1, "", "setUpClass"], [150, 9, 1, "", "tearDownClass"]], "test_attention_reshape": [[151, 8, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[151, 9, 1, "", "setUpClass"], [151, 9, 1, "", "tearDownClass"]], "test_conv_reshape": [[152, 8, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[152, 9, 1, "", "setUpClass"], [152, 9, 1, "", "tearDownClass"]], "test_embeddingbag": [[153, 8, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[153, 9, 1, "", "setUpClass"], [153, 9, 1, "", "tearDownClass"]], "test_execution_options": [[154, 8, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[154, 9, 1, "", "setUpClass"], [154, 9, 1, "", "tearDownClass"]], "test_gelu": [[155, 8, 1, "", "TestGelu"]], "test_gelu.TestGelu": [[155, 9, 1, "", "setUpClass"], [155, 9, 1, "", "tearDownClass"]], "test_graph_dispatch": [[156, 8, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[156, 9, 1, "", "setUpClass"], [156, 9, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[157, 8, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[157, 9, 1, "", "setUpClass"], [157, 9, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[158, 8, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[158, 9, 1, "", "setUpClass"], [158, 9, 1, "", "tearDownClass"], [158, 9, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[159, 8, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[159, 9, 1, "", "setUpClass"], [159, 9, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[160, 8, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[160, 9, 1, "", "setUpClass"], [160, 9, 1, "", "tearDownClass"]], "test_main": [[161, 8, 1, "", "TestMain"]], "test_main.TestMain": [[161, 9, 1, "", "setUpClass"], [161, 9, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[162, 8, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[162, 9, 1, "", "setUpClass"], [162, 9, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[163, 8, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[163, 9, 1, "", "setUpClass"], [163, 9, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[164, 8, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[164, 9, 1, "", "setUpClass"], [164, 9, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[165, 8, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[165, 9, 1, "", "setUpClass"], [165, 9, 1, "", "tearDownClass"]], "test_onnx_utils": [[167, 8, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[167, 9, 1, "", "setUpClass"], [167, 9, 1, "", "tearDownClass"]], "test_ops": [[168, 8, 1, "", "TestOps"]], "test_ops.TestOps": [[168, 9, 1, "", "setUpClass"], [168, 9, 1, "", "tearDownClass"]], "test_padding_sequence": [[169, 8, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[169, 9, 1, "", "setUpClass"], [169, 9, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[170, 8, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[170, 9, 1, "", "setUpClass"], [170, 9, 1, "", "tearDownClass"]], "test_position_embeddings": [[171, 8, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[171, 9, 1, "", "setUpClass"], [171, 9, 1, "", "tearDownClass"]], "test_qkv_merge": [[172, 8, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[172, 9, 1, "", "setUpClass"], [172, 9, 1, "", "tearDownClass"]], "test_qkv_reshape": [[173, 8, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[173, 9, 1, "", "setUpClass"], [173, 9, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[174, 8, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[174, 9, 1, "", "setUpClass"], [174, 9, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[175, 8, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[175, 9, 1, "", "setUpClass"], [175, 9, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[176, 8, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[176, 9, 1, "", "setUpClass"], [176, 9, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[177, 8, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[177, 9, 1, "", "setUpClass"], [177, 9, 1, "", "tearDownClass"]], "test_start_end_logits": [[178, 8, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[178, 9, 1, "", "setUpClass"], [178, 9, 1, "", "tearDownClass"]], "test_tf_utils": [[179, 8, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[179, 9, 1, "", "setUpClass"], [179, 9, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[180, 8, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[180, 9, 1, "", "setUpClass"], [180, 9, 1, "", "tearDownClass"]], "test_transpose": [[181, 8, 1, "", "TestTranspose"]], "test_transpose.TestTranspose": [[181, 9, 1, "", "setUpClass"], [181, 9, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[182, 8, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[182, 9, 1, "", "setUpClass"], [182, 9, 1, "", "tearDownClass"]]}, "objtypes": {"0": "cpp:type", "1": "cpp:class", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:templateParam", "6": "py:module", "7": "py:function", "8": "py:class", "9": "py:method", "10": "py:property", "11": "py:data"}, "objnames": {"0": ["cpp", "type", "C++ type"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "templateParam", "C++ template parameter"], "6": ["py", "module", "Python module"], "7": ["py", "function", "Python function"], "8": ["py", "class", "Python class"], "9": ["py", "method", "Python method"], "10": ["py", "property", "Python property"], "11": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 206, 213], "backend": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 209, 212, 237], "neural_engin": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "compil": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 189, 218], "modul": [1, 2, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 240], "function": [1, 8, 9, 12, 13, 32, 43, 74, 92, 109, 112, 115, 116, 127, 130, 131, 132, 134, 140, 141, 143, 144], "extractor": [2, 3, 4, 5], "class": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 116, 118, 119, 121, 122, 123, 124, 125, 126, 128, 132, 135, 136, 138, 140, 141, 142, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 192, 193, 199, 235], "submodul": [3, 7, 9, 10, 32, 74, 111, 117, 118, 120, 123, 137, 139], "packag": [3, 7, 9, 10, 32, 74, 118, 123], "onnx_extractor": 4, "tf_extractor": 5, "graph": [6, 7, 212, 216, 217], "graph_util": 8, "subpackag": [9, 110, 118], "loader": [10, 11], "logger": 12, "onnx_util": 13, "op": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 214, 216], "all": 14, "assert": 15, "batch_matmul": 16, "batch_matmul_v2": 17, "bias_add": 18, "cast": 19, "concat": 20, "conv": 21, "empty_op": 22, "expand_dim": 23, "fused_batch_matmul_v2": 24, "fused_batch_norm_v3": 25, "fused_gemm": 26, "fused_matmul": 27, "gather": 28, "gather_el": 29, "gelu": [30, 72], "gemm": 31, "attribut": [32, 74, 109, 214], "iterator_get_next": 33, "iterator_v2": 34, "layer_norm": [35, 81], "map_and_batch_dataset": 36, "matmul": 37, "mean": [38, 226], "mkl_layer_norm": 39, "model_dataset": 40, "one_hot": 41, "onnx_input": 42, "optimize_dataset": 44, "pack": 45, "placehold": 46, "quantize_linear": 47, "quantize_v2": 48, "quantized_fused_matmul_and_dequant": 49, "quantized_matmul_with_bias_and_dequant": 50, "reduce_mean": 51, "reduce_sum": 52, "reshap": 53, "scatter_el": 54, "softmax": [55, 233], "split": 56, "squeez": 57, "strided_slic": 58, "tensor": 59, "top_k": 60, "transpos": 61, "unpack": 62, "unsqueez": 63, "sub_graph": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "add_cls_token": 64, "add_embed": 65, "attention_mask_length_adaptive_keep_indic": 66, "attention_output_layer_norm_length_adaptive_keep_indic": 67, "attention_reshap": 68, "collect_quant_info": 69, "conv_reshap": 70, "embeddingbag": 71, "generate_sequ": 73, "input_data": 75, "input_fil": 76, "insert_bf16_nod": 77, "insert_quant_nod": 78, "interact_featur": 79, "last_layer_shap": 80, "layer_norm_with_reduce_mean": 82, "matmul_with_bia": 83, "matmul_with_bias_add": 84, "matmul_with_bias_gelu": 85, "matmul_with_bias_relu": 86, "matmul_with_bias_sigmoid": 87, "matmul_with_bias_tanh": 88, "merged_embeddingbag": 89, "output_data": 90, "padding_sequ": 91, "pattern": [92, 130, 214, 216, 217, 221, 227, 228, 230], "position_embed": 93, "position_embeddings_v1": 94, "qkv_merg": 95, "qkv_reshap": 96, "quantize_fus": 97, "reshape_after_restore_hidden_st": 98, "reshape_before_and_after_attention_out_layer_norm_gather_el": 99, "reshape_before_restore_hidden_st": 100, "reshape_fus": 101, "restore_hidden_states_in_length_adaptive_update_indic": 102, "start_end_logit": 103, "subgraph_match": 104, "token_type_embed": 105, "token_type_embeddings_v1": 106, "transpose_batch_matmul": 107, "word_embed": 108, "tf_util": 109, "optim": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 194], "benchmark": [112, 195, 200, 219, 233], "config": [113, 199, 214, 216], "distil": [114, 196, 199, 207, 208, 210], "dynam": [115, 116, 117, 239], "drop_and_restore_util": 115, "evolut": 116, "mixtur": [119, 120], "auto_distil": 119, "model": [121, 139, 140, 141, 184, 209, 212, 215, 218, 219, 237], "na": [122, 123, 124, 208], "basic_na": 122, "optimizer_tf": [126, 199], "pipelin": [127, 197, 199, 237], "prune": [128, 133, 208, 210, 238], "pytorch_prun": [129, 130, 131, 132, 133, 134], "prune_util": 131, "pruner": 132, "schedul": 134, "quantiz": [135, 184, 208, 210, 219, 239], "trainer": [136, 199, 207, 238, 239], "util": [137, 138, 139, 140, 141, 142, 143, 144, 147], "metric": [138, 207, 235, 238, 239], "modeling_bert_dynam": 140, "modeling_roberta_dynam": 141, "object": [142, 236, 239], "utility_tf": 144, "preprocess": [145, 146, 147], "data_augment": 145, "version": [148, 213], "test_add_cls_token": 149, "test_attention_output_layer_norm_length_adaptive_keep_indic": 150, "test_attention_reshap": 151, "test_conv_reshap": 152, "test_embeddingbag": 153, "test_execution_opt": 154, "test_gelu": 155, "test_graph_dispatch": 156, "test_insert_input_output_data": 157, "test_is_supported_onnx_graph": 158, "test_last_layer_shap": 159, "test_layer_norm_with_reduce_mean": 160, "test_main": 161, "test_matmul_with_bias_relu": 162, "test_matmul_with_bias_sigmoid": 163, "test_matmul_with_bias_tanh": 164, "test_merged_embeddingbag": 165, "test_model": 166, "test_onnx_util": 167, "test_op": 168, "test_padding_sequ": 169, "test_pattern_dispatch": 170, "test_position_embed": 171, "test_qkv_merg": 172, "test_qkv_reshap": 173, "test_quant_onnx_execut": 174, "test_reshape_after_restore_hidden_st": 175, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 176, "test_reshape_before_restore_hidden_st": 177, "test_start_end_logit": 178, "test_tf_util": 179, "test_token_type_embed": 180, "test_transpos": 181, "test_transpose_batch_matmul": 182, "secur": 183, "polici": 183, "report": 183, "vulner": 183, "intel": [184, 198, 202, 205, 208, 241, 244], "extens": [184, 198, 202, 205, 208, 241, 244], "transform": [184, 198, 202, 203, 205, 208, 210, 223, 241, 242, 244], "acceler": [184, 203, 210, 223, 242], "base": [184, 208], "platform": [184, 222, 232], "instal": [184, 206, 211, 213, 219, 223], "from": [184, 211, 213], "pypi": [184, 211], "get": [184, 206, 210, 215, 219, 235, 239], "start": [184, 206, 210, 235, 239], "sentiment": 184, "analysi": 184, "prepar": [184, 218, 219], "dataset": [184, 219], "document": [184, 202, 241], "select": 184, "public": 184, "event": 184, "python": [185, 187, 215], "api": [185, 186, 187, 188, 191, 194, 199, 209, 215, 223], "c": [186, 188, 191, 215], "dispatch": [190, 216], "kernel": [191, 193, 216, 223, 227, 228, 230, 233], "engin": [192, 204, 208, 210, 212, 213, 216, 218, 219, 243], "architectur": [198, 212], "autodistil": 199, "design": [199, 219, 227, 228, 230], "framework": [199, 225, 226], "criterion": [199, 207], "knowledgedistillationloss": 199, "intermediatelayersknowledgedistillationloss": 199, "usag": [199, 207, 209, 225, 226, 233, 238], "pytorch": [199, 207, 208], "flash": 199, "exampl": [199, 208, 209, 215, 218, 233, 236, 237], "regular": 199, "tensorflow": [199, 207, 208], "introduct": [200, 206, 207, 209, 214, 215, 216, 217, 218, 221, 223, 225, 226, 227, 229, 235, 236, 237, 238, 239], "pytorchbenchmark": 200, "executorbenchmark": 200, "featur": [201, 225, 226, 239, 240], "welcom": [202, 241], "section": [202, 241], "librari": [203, 223, 242], "neural": [204, 208, 210, 212, 213, 243], "data": [206, 228, 232], "augment": 206, "depend": 206, "script": [206, 207, 238, 239], "paramet": 206, "support": [206, 209, 218, 235, 236, 239], "text": 206, "gener": [206, 212], "argument": 206, "knowledg": [207, 208], "intermedi": 207, "layer": 207, "creat": [207, 217, 238, 239], "an": [207, 218, 238, 239], "instanc": [207, 238, 239], "option": [207, 216, 238, 239], "distillationconfig": 207, "stock": 208, "ipex": 208, "length": [208, 210], "adapt": [208, 210], "auto": 208, "orchestr": 208, "refer": [208, 223], "deploy": 208, "dens": 208, "spars": [208, 215, 228], "export": 209, "onnx": [209, 212, 218, 219], "matrix": [209, 236, 239], "fp32": 209, "bf16": 209, "int8": [209, 219, 237], "For": [209, 233], "executor": [209, 220, 237], "linux": 211, "prerequisit": [211, 213, 219], "sourc": 211, "window": 211, "system": 211, "requir": 211, "valid": [211, 232], "hardwar": 211, "environ": [211, 219], "softwar": 211, "deploi": [212, 213], "integr": 212, "1": [212, 215, 219, 220], "2": [212, 219, 220], "tf": 212, "us": 212, "infer": [212, 224, 237], "through": 212, "run": [212, 215, 219], "3": 212, "manual": 212, "custom": [212, 214, 220], "yaml": 212, "weight": 212, "binari": [212, 213], "build": [212, 223, 233], "4": [212, 232], "stabl": 213, "pip": 213, "bare": 213, "metal": 213, "add": [214, 220], "regist": [214, 220], "node": [214, 217], "type": [214, 238], "set": [214, 215], "map": [214, 217], "fuse": 214, "new": [214, 217], "after": 214, "fusion": [214, 217], "profil": [215, 231], "profl": 215, "you": 215, "can": 215, "onli": 215, "engine_profil": 215, "befor": 215, "part": 215, "csv": 215, "ratio": 215, "oper": [215, 220], "total": 215, "level": 215, "json": 215, "iter": 215, "tune": [216, 219, 239], "best": 216, "relat": 216, "runtim": 216, "how": 216, "turn": 216, "mechan": 216, "more": 216, "dict": 217, "obtain": 217, "necessari": 217, "inform": 217, "construct": 217, "establish": 217, "connect": 217, "remov": [217, 221], "old": 217, "insert": 217, "ir": [218, 219], "format": [218, 228, 234], "low": 219, "precis": 219, "To": 219, "its": 219, "accuraci": [219, 239], "h": 220, "includ": 220, "cpp": 220, "src": 220, "recogn": 221, "represent": 221, "pars": 221, "list": [221, 238], "search": 221, "each": 221, "straight": 221, "chain": 221, "splice": 221, "sub": 221, "main": 221, "duplic": 221, "result": 221, "configur": [222, 232], "test": 223, "perform": [223, 231, 232], "user": [223, 225, 226], "sparse_matmul": [223, 233], "develop": [223, 225, 226, 233], "guid": 223, "memori": 224, "layout": 224, "spmm_vnni": [224, 233], "cach": 224, "issu": 224, "3d": 224, "param_typ": [225, 226], "hpp": [225, 226], "operator_desc": [225, 226], "jit_binaryop_injector": 225, "": [225, 226], "perspect": [225, 226], "alpha": 226, "beta": 226, "scale": 226, "jit_eltwise_injector": 226, "amx": 227, "brief": 227, "isa": 227, "reorder": [227, 229, 230], "avx512f": 228, "kei": 228, "instruct": 228, "loop": 228, "problem": 229, "statement": 229, "matmul_p2031_2013": 229, "matmul_avx512f_p2031_p2013": [229, 233], "matmul_noperm_p2031_p1302": 229, "matmul_vnni_noperm_p2013_p1302": 229, "beforehand": 229, "vnni": 230, "On": 230, "fly": 230, "activ": 230, "candid": 230, "verbos": 231, "vtune": 231, "sde": 231, "singl": 232, "thread": 232, "multi": 232, "spmm_avx512f": 233, "spmm_amx_bf16_x16": 233, "eltwiseop": 233, "layernorm_ba": 233, "transpose_matmul": 233, "matmul_vnni_noperm_p2031_p1302": 233, "attent": 233, "input": 234, "summari": 235, "prunerconfig": 238, "pruningconfig": 238, "fundament": 239, "approach": 239, "post": 239, "train": 239, "static": 239, "awar": 239, "quantizationconfig": 239}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.backends": [[0, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [119, "module-contents"], [121, "module-contents"], [122, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [138, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [147, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"]], "Functions": [[1, "functions"], [8, "functions"], [9, "functions"], [12, "functions"], [13, "functions"], [32, "functions"], [43, "functions"], [74, "functions"], [92, "functions"], [109, "functions"], [112, "functions"], [115, "functions"], [116, "functions"], [127, "functions"], [130, "functions"], [131, "functions"], [132, "functions"], [134, "functions"], [140, "functions"], [141, "functions"], [143, "functions"], [144, "functions"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [116, "classes"], [118, "classes"], [119, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [128, "classes"], [132, "classes"], [135, "classes"], [136, "classes"], [138, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [144, "classes"], [147, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[3, "submodules"], [7, "submodules"], [9, "submodules"], [10, "submodules"], [32, "submodules"], [74, "submodules"], [111, "submodules"], [117, "submodules"], [118, "submodules"], [120, "submodules"], [123, "submodules"], [137, "submodules"], [139, "submodules"]], "Package Contents": [[3, "package-contents"], [7, "package-contents"], [9, "package-contents"], [10, "package-contents"], [32, "package-contents"], [74, "package-contents"], [118, "package-contents"], [123, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[9, "subpackages"], [110, "subpackages"], [118, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Attributes": [[32, "attributes"], [74, "attributes"], [109, "attributes"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[110, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[111, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[112, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[113, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[114, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[115, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[116, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[117, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[118, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[119, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[120, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[121, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[122, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[123, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[124, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[125, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[126, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[127, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[128, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[129, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[130, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[131, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"]], "intel_extension_for_transformers.optimization.quantization": [[135, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[136, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils": [[137, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[138, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[139, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[140, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[141, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[142, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[143, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[144, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[145, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[146, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[147, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[148, "module-intel_extension_for_transformers.version"]], "test_add_cls_token": [[149, "module-test_add_cls_token"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[150, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[151, "module-test_attention_reshape"]], "test_conv_reshape": [[152, "module-test_conv_reshape"]], "test_embeddingbag": [[153, "module-test_embeddingbag"]], "test_execution_options": [[154, "module-test_execution_options"]], "test_gelu": [[155, "module-test_gelu"]], "test_graph_dispatch": [[156, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[157, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[158, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[159, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[160, "module-test_layer_norm_with_reduce_mean"]], "test_main": [[161, "module-test_main"]], "test_matmul_with_bias_relu": [[162, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[163, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[164, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[165, "module-test_merged_embeddingbag"]], "test_model": [[166, "module-test_model"]], "test_onnx_utils": [[167, "module-test_onnx_utils"]], "test_ops": [[168, "module-test_ops"]], "test_padding_sequence": [[169, "module-test_padding_sequence"]], "test_pattern_dispatch": [[170, "module-test_pattern_dispatch"]], "test_position_embeddings": [[171, "module-test_position_embeddings"]], "test_qkv_merge": [[172, "module-test_qkv_merge"]], "test_qkv_reshape": [[173, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[174, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[175, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[176, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[177, "module-test_reshape_before_restore_hidden_states"]], "test_start_end_logits": [[178, "module-test_start_end_logits"]], "test_tf_utils": [[179, "module-test_tf_utils"]], "test_token_type_embeddings": [[180, "module-test_token_type_embeddings"]], "test_transpose": [[181, "module-test_transpose"]], "test_transpose_batch_matmul": [[182, "module-test_transpose_batch_matmul"]], "Security Policy": [[183, "security-policy"]], "Report a Vulnerability": [[183, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[184, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Installation": [[184, "installation"], [211, "installation"], [213, "installation"], [223, "installation"]], "Install from Pypi": [[184, "install-from-pypi"], [211, "install-from-pypi"], [211, "id2"]], "Getting Started": [[184, "getting-started"], [206, "getting-started"], [210, "getting-started"]], "Sentiment Analysis with Quantization": [[184, "sentiment-analysis-with-quantization"]], "Prepare Dataset": [[184, "prepare-dataset"], [219, "prepare-dataset"]], "Quantization": [[184, "quantization"], [208, "quantization"], [210, "quantization"], [239, "quantization"]], "Documentation": [[184, "documentation"]], "Selected Publications/Events": [[184, "selected-publications-events"]], "Python APIs": [[185, "python-apis"], [187, "python-apis"]], "C++ APIs": [[186, "c-apis"], [188, "c-apis"]], "Compile": [[189, "compile"]], "Class dispatcher": [[190, "class-dispatcher"]], "Kernel C++ APIs": [[191, "kernel-c-apis"]], "Class engine": [[192, "class-engine"]], "Class kernel": [[193, "class-kernel"]], "Optimization APIs": [[194, "optimization-apis"]], "Benchmark": [[195, "benchmark"], [200, "benchmark"]], "Distillation": [[196, "distillation"], [207, "distillation"], [207, "id1"], [208, "distillation"], [210, "distillation"]], "Pipeline": [[197, "pipeline"], [237, "pipeline"]], "Architecture of Intel\u00ae Extension for Transformers": [[198, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[199, "autodistillation-design"]], "AutoDistillation Pipeline": [[199, "autodistillation-pipeline"]], "Framework Class Design": [[199, "framework-class-design"]], "Criterion Class Design": [[199, "criterion-class-design"]], "KnowledgeDistillationLoss": [[199, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[199, "intermediatelayersknowledgedistillationloss"]], "Usage": [[199, "usage"], [225, "usage"], [226, "usage"], [233, "usage"], [238, "usage"]], "Pytorch": [[199, "pytorch"]], "AutoDistillation API in Trainer": [[199, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[199, "flash-distillation-config-example"]], "Regular distillation config example": [[199, "regular-distillation-config-example"]], "AutoDistillation config example": [[199, "autodistillation-config-example"], [199, "id1"]], "Tensorflow": [[199, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[199, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[199, "distillation-config-example"]], "Introduction": [[200, "introduction"], [206, "introduction"], [207, "introduction"], [209, "introduction"], [214, "introduction"], [215, "introduction"], [216, "introduction"], [217, "introduction"], [218, "introduction"], [221, "introduction"], [223, "introduction"], [225, "introduction"], [226, "introduction"], [229, "introduction"], [235, "introduction"], [236, "introduction"], [237, "introduction"], [238, "introduction"], [239, "introduction"]], "PyTorchBenchmark": [[200, "pytorchbenchmark"]], "ExecutorBenchmark": [[200, "executorbenchmark"]], "Features": [[201, "features"], [240, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[202, "welcome-to-intel-extension-for-transformers-documentation"], [241, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[202, "sections"], [241, "sections"]], "Transformers-accelerated Libraries": [[203, "transformers-accelerated-libraries"], [223, "transformers-accelerated-libraries"], [242, "transformers-accelerated-libraries"]], "Neural Engine": [[204, "neural-engine"], [243, "neural-engine"]], "Intel\u00ae Extension for Transformers": [[205, "intel-extension-for-transformers"], [244, "intel-extension-for-transformers"]], "Data Augmentation": [[206, "data-augmentation"], [206, "id1"]], "Install Dependency": [[206, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[206, "install-intel-extension-for-transformers"]], "Script": [[206, "script"]], "Parameters of Data Augmentation": [[206, "parameters-of-data-augmentation"]], "Supported Augmenter": [[206, "supported-augmenter"]], "Text Generation Augmenter": [[206, "text-generation-augmenter"]], "Augmenter Arguments:": [[206, "augmenter-arguments"]], "Knowledge Distillation": [[207, "knowledge-distillation"], [208, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[207, "intermediate-layer-knowledge-distillation"]], "usage": [[207, "usage"]], "Pytorch Script:": [[207, "pytorch-script"]], "Tensorflow Script:": [[207, "tensorflow-script"]], "Create an Instance of Metric": [[207, "create-an-instance-of-metric"], [239, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[207, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[207, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[207, "distill-with-trainer"]], "Examples": [[208, "examples"], [209, "examples"], [233, "examples"], [233, "id1"], [233, "id2"], [233, "id3"], [233, "id4"], [233, "id5"], [233, "id6"], [233, "id7"], [233, "id8"], [237, "examples"]], "Stock PyTorch Examples": [[208, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[208, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[208, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[208, "length-adaptive-transformers"]], "Pruning": [[208, "pruning"], [210, "pruning"], [238, "pruning"]], "Auto Distillation (NAS Based)": [[208, "auto-distillation-nas-based"]], "Orchestrate": [[208, "orchestrate"]], "Reference Deployment on Neural Engine": [[208, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[208, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[208, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[209, "export-to-onnx"]], "Supported Model Export Matrix": [[209, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[209, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[209, "export-to-bf16-onnx-model"]], "API usage": [[209, "api-usage"]], "Export to INT8 ONNX Model": [[209, "export-to-int8-onnx-model"]], "For executor backend": [[209, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[210, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[210, "transformers-accelerated-neural-engine"]], "Linux Installation": [[211, "linux-installation"]], "Prerequisites": [[211, "prerequisites"], [211, "id1"], [213, "prerequisites"]], "Install from Source": [[211, "install-from-source"], [211, "id3"]], "Windows Installation": [[211, "windows-installation"]], "System Requirements": [[211, "system-requirements"]], "Validated Hardware Environment": [[211, "validated-hardware-environment"]], "Validated Software Environment": [[211, "validated-software-environment"]], "Deploy and Integration": [[212, "deploy-and-integration"]], "1. Architecture": [[212, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[212, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[212, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[212, "run-the-inference-by-engine"], [212, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[212, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[212, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[212, "integrate-neural-engine-as-backend"]], "Install": [[213, "install"]], "Install stable version intel_extension_for_transformers from pip": [[213, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[213, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[214, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[214, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[214, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[214, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Profiling": [[215, "profiling"]], "Profling API": [[215, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[215, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[215, "profiling-examples"]], "Parts of CSV Profiling": [[215, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[215, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[215, "operator-profiling-part"]], "Total Profiling Part": [[215, "total-profiling-part"]], "Levels of JSON Profiling": [[215, "levels-of-json-profiling"]], "Model Level": [[215, "model-level"]], "Iteration Level": [[215, "iteration-level"]], "Operator Level": [[215, "operator-level"]], "Engine Tuning": [[216, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[216, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[216, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[216, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[216, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[216, "more-tuning-options"]], "Graph Fusion": [[217, "graph-fusion"]], "Pattern Mapping Dict": [[217, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[217, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[217, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[217, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[218, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[218, "supported-onnx-format"]], "Compile Examples": [[218, "compile-examples"]], "Prepare ONNX Model": [[218, "prepare-onnx-model"]], "Compile to IR": [[218, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[219, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[219, "design"]], "Prerequisite": [[219, "prerequisite"]], "Install environment": [[219, "install-environment"]], "Prepare ONNX model": [[219, "prepare-onnx-model"]], "Run tuning and benchmark": [[219, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[219, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[219, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[220, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[220, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[220, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[221, "pattern-recognize"]], "Pattern Representation": [[221, "pattern-representation"]], "Parse Pattern Representation List": [[221, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[221, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[221, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "platform configuration": [[222, "platform-configuration"], [232, "platform-configuration"]], "Build": [[223, "build"], [233, "build"]], "Test": [[223, "test"]], "Performance": [[223, "performance"]], "API reference for users": [[223, "api-reference-for-users"]], "sparse_matmul kernel:": [[223, "sparse-matmul-kernel"]], "Developer guide for developers": [[223, "developer-guide-for-developers"]], "Memory Layout in SPMM_VNNI": [[224, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[224, "cache-issues"]], "SPMM_VNNI 3D Inference": [[224, "spmm-vnni-3d-inference"]], "Framework Features": [[225, "framework-features"], [226, "framework-features"]], "param_type.hpp": [[225, "param-type-hpp"]], "operator_desc.hpp": [[225, "operator-desc-hpp"], [226, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[225, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[225, "developer-s-perspective"]], "User\u2019s Perspective": [[225, "user-s-perspective"], [226, "user-s-perspective"]], "param_types.hpp": [[226, "param-types-hpp"]], "alpha,beta,scale meaning": [[226, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[226, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[226, "developer-s-perspective"]], "Design of AMX Kernel": [[227, "design-of-amx-kernel"]], "Brief introduction for ISAs": [[227, "brief-introduction-for-isas"]], "Pattern": [[227, "pattern"]], "Reorder": [[227, "reorder"]], "Design of AVX512F Kernel": [[228, "design-of-avx512f-kernel"]], "Key Instruction": [[228, "key-instruction"]], "Sparse Pattern & Data Format": [[228, "sparse-pattern-data-format"]], "Loops": [[228, "loops"]], "Problem Statements": [[229, "problem-statements"]], "Matmul_p2031_2013": [[229, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[229, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[229, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[229, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[229, "reorder-beforehand"]], "Design of the VNNI Kernel": [[230, "design-of-the-vnni-kernel"]], "On the fly activation reordering": [[230, "on-the-fly-activation-reordering"]], "Candidate patterns": [[230, "candidate-patterns"]], "Performance and Profiling": [[231, "performance-and-profiling"]], "Verbose": [[231, "verbose"]], "VTune": [[231, "vtune"]], "SDE": [[231, "sde"]], "Validation Performance Data": [[232, "validation-performance-data"]], "Single Thread": [[232, "single-thread"]], "Multi Thread (Thread = 4)": [[232, "multi-thread-thread-4"]], "Benchmark for Kernels": [[233, "benchmark-for-kernels"]], "sparse_matmul": [[233, "sparse-matmul"]], "spmm_avx512f": [[233, "spmm-avx512f"]], "spmm_vnni": [[233, "spmm-vnni"]], "spmm_amx_bf16_x16": [[233, "spmm-amx-bf16-x16"]], "eltwiseop": [[233, "eltwiseop"]], "layernorm_ba": [[233, "layernorm-ba"]], "transpose_matmul": [[233, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[233, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[233, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[233, "softmax"]], "attention": [[233, "attention"]], "For developers": [[233, "for-developers"]], "Inputs format": [[234, "inputs-format"]], "Metrics": [[235, "metrics"]], "Supported Metric": [[235, "supported-metric"]], "Metric Class Summary": [[235, "metric-class-summary"]], "Get Start with Metrics": [[235, "get-start-with-metrics"]], "Objective": [[236, "objective"]], "Supported Objectives Matrix:": [[236, "supported-objectives-matrix"]], "Examples:": [[236, "examples"]], "Pipeline Inference for INT8 Model": [[237, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[237, "pipeline-inference-for-executor-backend"]], "Pruning types": [[238, "pruning-types"]], "Script:": [[238, "script"], [239, "script"]], "Create an instance of Metric": [[238, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[238, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[238, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[238, "prune-with-trainer"]], "Quantization Fundamentals": [[239, "quantization-fundamentals"]], "Quantization Approach": [[239, "quantization-approach"]], "Post Training Dynamic Quantization": [[239, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[239, "post-training-static-quantization"]], "Quantization Aware Training": [[239, "quantization-aware-training"]], "Accuracy Aware Tuning": [[239, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[239, "supported-feature-matrix"]], "Get Started": [[239, "get-started"]], "Create an Instance of Objective(Optional)": [[239, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[239, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[239, "quantization-with-trainer"]], "Contents:": [[240, null]]}, "indexentries": {"intel_extension_for_transformers.backends": [[0, "module-intel_extension_for_transformers.backends"]], "module": [[0, "module-intel_extension_for_transformers.backends"], [1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [110, "module-intel_extension_for_transformers.backends.neural_engine"], [111, "module-intel_extension_for_transformers"], [112, "module-intel_extension_for_transformers.optimization.benchmark"], [113, "module-intel_extension_for_transformers.optimization.config"], [114, "module-intel_extension_for_transformers.optimization.distillation"], [115, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [116, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [117, "module-intel_extension_for_transformers.optimization.dynamic"], [118, "module-intel_extension_for_transformers.optimization"], [119, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [120, "module-intel_extension_for_transformers.optimization.mixture"], [121, "module-intel_extension_for_transformers.optimization.model"], [122, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [123, "module-intel_extension_for_transformers.optimization.nas"], [124, "module-intel_extension_for_transformers.optimization.nas.nas"], [125, "module-intel_extension_for_transformers.optimization.optimizer"], [126, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [127, "module-intel_extension_for_transformers.optimization.pipeline"], [128, "module-intel_extension_for_transformers.optimization.pruning"], [129, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [130, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [131, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"], [132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"], [133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"], [135, "module-intel_extension_for_transformers.optimization.quantization"], [136, "module-intel_extension_for_transformers.optimization.trainer"], [137, "module-intel_extension_for_transformers.optimization.utils"], [138, "module-intel_extension_for_transformers.optimization.utils.metrics"], [139, "module-intel_extension_for_transformers.optimization.utils.models"], [140, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [141, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [142, "module-intel_extension_for_transformers.optimization.utils.objectives"], [143, "module-intel_extension_for_transformers.optimization.utils.utility"], [144, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [145, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [146, "module-intel_extension_for_transformers.preprocessing"], [147, "module-intel_extension_for_transformers.preprocessing.utils"], [148, "module-intel_extension_for_transformers.version"], [149, "module-test_add_cls_token"], [150, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [151, "module-test_attention_reshape"], [152, "module-test_conv_reshape"], [153, "module-test_embeddingbag"], [154, "module-test_execution_options"], [155, "module-test_gelu"], [156, "module-test_graph_dispatch"], [157, "module-test_insert_input_output_data"], [158, "module-test_is_supported_onnx_graph"], [159, "module-test_last_layer_shape"], [160, "module-test_layer_norm_with_reduce_mean"], [161, "module-test_main"], [162, "module-test_matmul_with_bias_relu"], [163, "module-test_matmul_with_bias_sigmoid"], [164, "module-test_matmul_with_bias_tanh"], [165, "module-test_merged_embeddingbag"], [166, "module-test_model"], [167, "module-test_onnx_utils"], [168, "module-test_ops"], [169, "module-test_padding_sequence"], [170, "module-test_pattern_dispatch"], [171, "module-test_position_embeddings"], [172, "module-test_qkv_merge"], [173, "module-test_qkv_reshape"], [174, "module-test_quant_onnx_execute"], [175, "module-test_reshape_after_restore_hidden_states"], [176, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [177, "module-test_reshape_before_restore_hidden_states"], [178, "module-test_start_end_logits"], [179, "module-test_tf_utils"], [180, "module-test_token_type_embeddings"], [181, "module-test_transpose"], [182, "module-test_transpose_batch_matmul"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[1, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[1, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[1, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[4, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "execution_options (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.execution_options"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "net_config (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.net_config"]], "nodes (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.nodes"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "weight_data (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph property)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.weight_data"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.engine_init"]], "execution_options (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.execution_options"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.inference"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.modify_node_connections"]], "net_config (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.net_config"]], "nodes (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.nodes"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph method)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.transpose_mode_int8"]], "weight_data (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph property)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.graph.Graph.weight_data"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile)": [[9, "intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[11, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "div (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Div"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "equal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Equal"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LayerNorm"]], "lessequal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LessEqual"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "mul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Mul"]], "nonzero (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.NonZero"]], "not (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Not"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PaddingSequence"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Pow"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Quantize"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reorder"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Shape"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Slice"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "sub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sub"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator"]], "attr (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.attr"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.config"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.extract"]], "input_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.input_tensors"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.name"]], "op_type (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.op_type"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.operator_registry"]], "output_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator property)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.output_tensors"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.operator method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.Operator.set_attr"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "attr (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.attr"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.config"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "input_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.input_tensors"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.name"]], "op_type (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.op_type"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "output_tensors (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator property)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.output_tensors"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "config (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.config"]], "data (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.data"]], "dest_op (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.dest_op"]], "dtype (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.dtype"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "location (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.location"]], "name (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.name"]], "shape (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.shape"]], "source_op (intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.tensor property)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor.source_op"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.Pattern"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern_registry"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[110, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[111, "module-intel_extension_for_transformers"]], "executorbenchmark (class in intel_extension_for_transformers.optimization.benchmark)": [[112, "intel_extension_for_transformers.optimization.benchmark.ExecutorBenchmark"]], "intel_extension_for_transformers.optimization.benchmark": [[112, "module-intel_extension_for_transformers.optimization.benchmark"]], "run() (in module intel_extension_for_transformers.optimization.benchmark)": [[112, "intel_extension_for_transformers.optimization.benchmark.run"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.Provider"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[113, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "approach (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.approach"]], "criterion (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.DistillationConfig.criterion"]], "epoch_range (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.epoch_range"]], "epochs (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.epochs"]], "framework (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.DistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.framework"]], "framework (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.framework"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "initial_sparsity_ratio (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.initial_sparsity_ratio"]], "input_names (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.input_names"]], "intel_extension_for_transformers.optimization.config": [[113, "module-intel_extension_for_transformers.optimization.config"]], "knowledge_transfer (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.knowledge_transfer"]], "max_trials (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.max_trials"]], "metrics (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.distillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.DistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.metrics"]], "objectives (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.objectives"]], "op_wise (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.op_wise"]], "output_dir (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.output_dir"]], "output_names (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.output_names"]], "performance_only (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.performance_only"]], "pruner_config (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.pruner_config"]], "random_seed (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.random_seed"]], "regular_distillation (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.regular_distillation"]], "resume_path (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.resume_path"]], "sampling_size (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.sampling_size"]], "search_algorithm (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.search_algorithm"]], "search_algorithm (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.search_algorithm"]], "search_space (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.search_space"]], "search_space (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.search_space"]], "seed (intel_extension_for_transformers.optimization.config.autodistillationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig.seed"]], "seed (intel_extension_for_transformers.optimization.config.nasconfig property)": [[113, "intel_extension_for_transformers.optimization.config.NASConfig.seed"]], "strategy (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.strategy"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.config.pruningconfig property)": [[113, "intel_extension_for_transformers.optimization.config.PruningConfig.target_sparsity_ratio"]], "tensorboard (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.tensorboard"]], "timeout (intel_extension_for_transformers.optimization.config.quantizationconfig property)": [[113, "intel_extension_for_transformers.optimization.config.QuantizationConfig.timeout"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[114, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[114, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[114, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[115, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[115, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[115, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[116, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[116, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[117, "module-intel_extension_for_transformers.optimization.dynamic"]], "autodistillation (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.DistillationConfig"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.DistillationCriterionMode"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.FlashDistillationConfig"]], "nas (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.NAS"]], "nasconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.NASConfig"]], "optimizedmodel (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.OptimizedModel"]], "provider (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.Provider"]], "prunerconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.PrunerConfig"]], "pruningconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.PruningConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.PruningMode"]], "quantizationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig"]], "quantizationmode (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.QuantizationMode"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.TFDistillationConfig"]], "tfoptimization (class in intel_extension_for_transformers.optimization)": [[118, "intel_extension_for_transformers.optimization.TFOptimization"]], "approach (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.approach"]], "autodistill() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.builtin_eval_func"]], "create_distillers() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.create_distillers"]], "criterion (intel_extension_for_transformers.optimization.distillationconfig property)": [[118, "intel_extension_for_transformers.optimization.DistillationConfig.criterion"]], "distill() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.distill"]], "epoch_range (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.epoch_range"]], "epochs (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.epochs"]], "estimate() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.estimate"]], "eval_dataset (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.eval_dataset"]], "eval_func (intel_extension_for_transformers.optimization.autodistillation property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.eval_func"]], "eval_func (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.eval_func"]], "framework (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.distillationconfig property)": [[118, "intel_extension_for_transformers.optimization.DistillationConfig.framework"]], "framework (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.framework"]], "framework (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.framework"]], "framework (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.framework"]], "from_pretrained() (intel_extension_for_transformers.optimization.optimizedmodel class method)": [[118, "intel_extension_for_transformers.optimization.OptimizedModel.from_pretrained"]], "init_by_cfg() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.init_by_cfg"]], "init_distiller() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.init_distiller"]], "init_prune_config() (intel_extension_for_transformers.optimization.pruningconfig method)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.init_prune_config"]], "init_pruner() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.init_quantizer"]], "initial_sparsity_ratio (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.initial_sparsity_ratio"]], "input_names (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.input_names"]], "input_names (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.input_names"]], "inputs (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.inputs"]], "intel_extension_for_transformers.optimization": [[118, "module-intel_extension_for_transformers.optimization"]], "knowledge_transfer (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.knowledge_transfer"]], "load_search_results() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.load_search_results"]], "max_trials (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.max_trials"]], "max_trials (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.max_trials"]], "metrics (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.distillationconfig property)": [[118, "intel_extension_for_transformers.optimization.DistillationConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.metrics"]], "metrics (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.metrics"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.model_builder_builtin"]], "objectives (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.objectives"]], "op_wise (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.op_wise"]], "output_dir (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.output_dir"]], "output_names (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.output_names"]], "output_names (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.output_names"]], "performance_only (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.performance_only"]], "prune() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.prune"]], "pruner_config (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.pruner_config"]], "quantize() (intel_extension_for_transformers.optimization.tfoptimization method)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.quantize"]], "random_seed (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.random_seed"]], "regular_distillation (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.regular_distillation"]], "resume_path (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.resume_path"]], "sampling_size (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.sampling_size"]], "search() (intel_extension_for_transformers.optimization.autodistillation method)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.search"]], "search_algorithm (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.search_algorithm"]], "search_algorithm (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.search_algorithm"]], "search_space (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.search_space"]], "search_space (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.search_space"]], "seed (intel_extension_for_transformers.optimization.autodistillationconfig property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillationConfig.seed"]], "seed (intel_extension_for_transformers.optimization.nasconfig property)": [[118, "intel_extension_for_transformers.optimization.NASConfig.seed"]], "strategy (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.strategy"]], "student_model (intel_extension_for_transformers.optimization.autodistillation property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.student_model"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pruningconfig property)": [[118, "intel_extension_for_transformers.optimization.PruningConfig.target_sparsity_ratio"]], "teacher_model (intel_extension_for_transformers.optimization.autodistillation property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.teacher_model"]], "tensorboard (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.tensorboard"]], "timeout (intel_extension_for_transformers.optimization.quantizationconfig property)": [[118, "intel_extension_for_transformers.optimization.QuantizationConfig.timeout"]], "train_dataset (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.train_dataset"]], "train_func (intel_extension_for_transformers.optimization.autodistillation property)": [[118, "intel_extension_for_transformers.optimization.AutoDistillation.train_func"]], "train_func (intel_extension_for_transformers.optimization.tfoptimization property)": [[118, "intel_extension_for_transformers.optimization.TFOptimization.train_func"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "eval_func (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.eval_func"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[119, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "student_model (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.student_model"]], "teacher_model (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.teacher_model"]], "train_func (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation property)": [[119, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.train_func"]], "intel_extension_for_transformers.optimization.mixture": [[120, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[121, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[121, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[121, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "eval_func (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas property)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.eval_func"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[122, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "train_func (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas property)": [[122, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.train_func"]], "basicnas (class in intel_extension_for_transformers.optimization.nas)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS"]], "nas (class in intel_extension_for_transformers.optimization.nas)": [[123, "intel_extension_for_transformers.optimization.nas.NAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.estimate"]], "eval_func (intel_extension_for_transformers.optimization.nas.basicnas property)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.eval_func"]], "execute() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basicnas method)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas": [[123, "module-intel_extension_for_transformers.optimization.nas"]], "train_func (intel_extension_for_transformers.optimization.nas.basicnas property)": [[123, "intel_extension_for_transformers.optimization.nas.BasicNAS.train_func"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[124, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[124, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[125, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "calib_dataloader (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.calib_dataloader"]], "calib_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.calib_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "eval_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.eval_func"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[125, "module-intel_extension_for_transformers.optimization.optimizer"]], "provider (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.provider"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "train_func (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer property)": [[125, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.train_func"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "eval_dataset (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.eval_dataset"]], "eval_func (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.eval_func"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "input_names (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.input_names"]], "inputs (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.inputs"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[126, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "output_names (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.output_names"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "train_dataset (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.train_dataset"]], "train_func (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization property)": [[126, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.train_func"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[127, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[127, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[128, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[128, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[128, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[129, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[130, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[130, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[130, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils": [[131, "module-intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils"]], "parse_not_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[131, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.parse_not_to_prune"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils)": [[131, "intel_extension_for_transformers.optimization.pytorch_pruner.prune_utils.parse_to_prune"]], "snippruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.SnipPruner"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.get_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruner": [[132, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruner"]], "register_pruners() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruner)": [[132, "intel_extension_for_transformers.optimization.pytorch_pruner.pruner.register_pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[133, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler": [[134, "module-intel_extension_for_transformers.optimization.pytorch_pruner.scheduler"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.scheduler)": [[134, "intel_extension_for_transformers.optimization.pytorch_pruner.scheduler.register_scheduler"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[135, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[135, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "calib_dataloader (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.calib_dataloader"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "eval_func (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.eval_func"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[136, "module-intel_extension_for_transformers.optimization.trainer"]], "max_length (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.max_length"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "num_beams (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.num_beams"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "provider (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.provider"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "resuming_checkpoint (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.resuming_checkpoint"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "train_func (intel_extension_for_transformers.optimization.trainer.basetrainer property)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train_func"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[136, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils": [[137, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[138, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[138, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[139, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[140, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[140, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[141, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[141, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[142, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[142, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[142, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[142, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[143, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[143, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[144, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[144, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[144, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[144, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[144, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[145, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[146, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[147, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "intel_extension_for_transformers.preprocessing.utils": [[147, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[148, "module-intel_extension_for_transformers.version"]], "testaddclstoken (class in test_add_cls_token)": [[149, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[149, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[149, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[149, "module-test_add_cls_token"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[150, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[150, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[150, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[150, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[151, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[151, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[151, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[151, "module-test_attention_reshape"]], "testconvreshape (class in test_conv_reshape)": [[152, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[152, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[152, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[152, "module-test_conv_reshape"]], "testembeddingbag (class in test_embeddingbag)": [[153, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[153, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[153, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[153, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[154, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[154, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[154, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[154, "module-test_execution_options"]], "testgelu (class in test_gelu)": [[155, "test_gelu.TestGelu"]], "setupclass() (test_gelu.testgelu class method)": [[155, "test_gelu.TestGelu.setUpClass"]], "teardownclass() (test_gelu.testgelu class method)": [[155, "test_gelu.TestGelu.tearDownClass"]], "test_gelu": [[155, "module-test_gelu"]], "testgraphdispatch (class in test_graph_dispatch)": [[156, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[156, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[156, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[156, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[157, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[157, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[157, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[157, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[158, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[158, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[158, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[158, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[158, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[159, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[159, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[159, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[159, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[160, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[160, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[160, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[160, "module-test_layer_norm_with_reduce_mean"]], "testmain (class in test_main)": [[161, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[161, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[161, "test_main.TestMain.tearDownClass"]], "test_main": [[161, "module-test_main"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[162, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[162, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[162, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[162, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[163, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[163, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[163, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[163, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[164, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[164, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[164, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[164, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[165, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[165, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[165, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[165, "module-test_merged_embeddingbag"]], "test_model": [[166, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[167, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[167, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[167, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[167, "module-test_onnx_utils"]], "testops (class in test_ops)": [[168, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[168, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[168, "test_ops.TestOps.tearDownClass"]], "test_ops": [[168, "module-test_ops"]], "testpaddingsequence (class in test_padding_sequence)": [[169, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[169, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[169, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[169, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[170, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[170, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[170, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[170, "module-test_pattern_dispatch"]], "testpositionembeddings (class in test_position_embeddings)": [[171, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[171, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[171, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[171, "module-test_position_embeddings"]], "testqkvmerge (class in test_qkv_merge)": [[172, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[172, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[172, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[172, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[173, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[173, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[173, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[173, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[174, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[174, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[174, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[174, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[175, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[175, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[175, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[175, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[176, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[176, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[176, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[176, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[177, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[177, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[177, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[177, "module-test_reshape_before_restore_hidden_states"]], "teststartendlogits (class in test_start_end_logits)": [[178, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[178, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[178, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[178, "module-test_start_end_logits"]], "testtfutils (class in test_tf_utils)": [[179, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[179, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[179, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[179, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[180, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[180, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[180, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[180, "module-test_token_type_embeddings"]], "testtranspose (class in test_transpose)": [[181, "test_transpose.TestTranspose"]], "setupclass() (test_transpose.testtranspose class method)": [[181, "test_transpose.TestTranspose.setUpClass"]], "teardownclass() (test_transpose.testtranspose class method)": [[181, "test_transpose.TestTranspose.tearDownClass"]], "test_transpose": [[181, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[182, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[182, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[182, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[182, "module-test_transpose_batch_matmul"]], "executor (c++ type)": [[190, "_CPPv48executor"]], "executor::dispatcher (c++ class)": [[190, "_CPPv4N8executor10DispatcherE"]], "executor::dispatcher::adaptattrs (c++ function)": [[190, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::adapttensors (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::dispatcher (c++ function)": [[190, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model"], [190, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model"]], "executor::dispatcher::forward (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::getexecutekernel (c++ function)": [[190, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb"]], "executor::dispatcher::gethash (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE"]], "executor::dispatcher::kernelhandler (c++ type)": [[190, "_CPPv4N8executor10Dispatcher13KernelHandlerE"]], "executor::dispatcher::prepare (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::resetopstatus (c++ function)": [[190, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::reshape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::adapt_action_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher13adapt_action_E"]], "executor::dispatcher::cpu_isa_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher8cpu_isa_E"]], "executor::dispatcher::dispatch_table_file_exists_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E"]], "executor::dispatcher::do_tuning (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher9do_tuningEv"]], "executor::dispatcher::do_tuning_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher10do_tuning_E"]], "executor::dispatcher::enable_sparse (c++ function)": [[190, "_CPPv4N8executor10Dispatcher13enable_sparseEv"]], "executor::dispatcher::execute_kernel (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher14execute_kernelEv"]], "executor::dispatcher::execute_kernel_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher15execute_kernel_E"]], "executor::dispatcher::execution_options_ptr_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E"]], "executor::dispatcher::get_attrs (c++ function)": [[190, "_CPPv4N8executor10Dispatcher9get_attrsEv"]], "executor::dispatcher::get_it_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12get_it_shapeEv"]], "executor::dispatcher::get_ot_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv"]], "executor::dispatcher::get_reshape_time (c++ function)": [[190, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv"]], "executor::dispatcher::iter_cnt_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher9iter_cnt_E"]], "executor::dispatcher::kernel_handler_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher15kernel_handler_E"]], "executor::dispatcher::kernel_type (c++ function)": [[190, "_CPPv4N8executor10Dispatcher11kernel_typeEv"]], "executor::dispatcher::latency (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7latencyEv"]], "executor::dispatcher::model_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher6model_E"]], "executor::dispatcher::monopoly_kernel_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E"]], "executor::dispatcher::name (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher4nameEv"]], "executor::dispatcher::name_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher5name_E"]], "executor::dispatcher::no_tuning_space (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv"]], "executor::dispatcher::no_tuning_space_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher16no_tuning_space_E"]], "executor::dispatcher::operator_conf (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher13operator_confEv"]], "executor::dispatcher::operator_conf_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher14operator_conf_E"]], "executor::dispatcher::perf_ratio_id (c++ function)": [[190, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv"]], "executor::dispatcher::post_op (c++ function)": [[190, "_CPPv4N8executor10Dispatcher7post_opEv"]], "executor::dispatcher::set_attrs (c++ function)": [[190, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE"]], "executor::dispatcher::set_enable_sparse (c++ function)": [[190, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb"]], "executor::dispatcher::set_it_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::set_latency (c++ function)": [[190, "_CPPv4N8executor10Dispatcher11set_latencyEKf"]], "executor::dispatcher::set_ot_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12set_ot_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::set_perf_ratio_id (c++ function)": [[190, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string"]], "executor::dispatcher::set_post_op (c++ function)": [[190, "_CPPv4N8executor10Dispatcher11set_post_opERK6string"]], "executor::dispatcher::set_reshape_time (c++ function)": [[190, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf"]], "executor::dispatcher::set_table_id (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12set_table_idE6string"]], "executor::dispatcher::set_tuning_mode (c++ function)": [[190, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb"]], "executor::dispatcher::set_weight_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE"]], "executor::dispatcher::sparselib_available_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher20sparselib_available_E"]], "executor::dispatcher::table_id (c++ function)": [[190, "_CPPv4N8executor10Dispatcher8table_idEv"]], "executor::dispatcher::tune_dense_in_sparse_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E"]], "executor::dispatcher::type (c++ function)": [[190, "_CPPv4NK8executor10Dispatcher4typeEv"]], "executor::dispatcher::type_ (c++ member)": [[190, "_CPPv4N8executor10Dispatcher5type_E"]], "executor::dispatcher::weight_shape (c++ function)": [[190, "_CPPv4N8executor10Dispatcher12weight_shapeEv"]], "executor::dispatcher::weight_zero_ratio (c++ function)": [[190, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv"]], "executor::dispatcher::~dispatcher (c++ function)": [[190, "_CPPv4N8executor10DispatcherD0Ev"]], "jd (c++ type)": [[191, "_CPPv42jd"], [192, "_CPPv42jd"], [193, "_CPPv42jd"]], "jd::attention (c++ class)": [[191, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[191, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [191, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[191, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[191, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[191, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [191, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[191, "_CPPv4N2jd14attention_descD0Ev"]], "jd::eltwiseop (c++ class)": [[191, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[191, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [191, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[191, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[191, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[191, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [191, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[191, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[191, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[191, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [191, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[191, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[191, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[191, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [191, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[191, "_CPPv4N2jd11gather_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[191, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[191, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[191, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[191, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [191, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[191, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[191, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[191, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[191, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[191, "_CPPv4N2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[191, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[191, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [191, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[191, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::kernel_t (c++ class)": [[191, "_CPPv4N2jd8kernel_tE"], [193, "_CPPv4N2jd8kernel_tE"]], "jd::kernel_t::create (c++ function)": [[191, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"], [193, "_CPPv4I00EN2jd8kernel_t6createEbRNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_t::execute (c++ function)": [[191, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE"], [193, "_CPPv4NK2jd8kernel_t7executeERKNSt6vectorIPKvEE"]], "jd::kernel_t::init (c++ function)": [[191, "_CPPv4N2jd8kernel_t4initEv"], [193, "_CPPv4N2jd8kernel_t4initEv"]], "jd::kernel_t::kd (c++ function)": [[191, "_CPPv4NK2jd8kernel_t2kdEv"], [193, "_CPPv4NK2jd8kernel_t2kdEv"]], "jd::kernel_t::kd_ (c++ member)": [[191, "_CPPv4N2jd8kernel_t3kd_E"], [193, "_CPPv4N2jd8kernel_t3kd_E"]], "jd::kernel_t::kernel_t (c++ function)": [[191, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t"], [191, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE"], [191, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t"], [193, "_CPPv4N2jd8kernel_t8kernel_tERK8kernel_t"], [193, "_CPPv4N2jd8kernel_t8kernel_tERKNSt10shared_ptrIK13kernel_desc_tEE"], [193, "_CPPv4N2jd8kernel_t8kernel_tERR8kernel_t"]], "jd::kernel_t::operator= (c++ function)": [[191, "_CPPv4N2jd8kernel_taSERK8kernel_t"], [191, "_CPPv4N2jd8kernel_taSERR8kernel_t"], [193, "_CPPv4N2jd8kernel_taSERK8kernel_t"], [193, "_CPPv4N2jd8kernel_taSERR8kernel_t"]], "jd::kernel_t::~kernel_t (c++ function)": [[191, "_CPPv4N2jd8kernel_tD0Ev"], [193, "_CPPv4N2jd8kernel_tD0Ev"]], "jd::layernorm_ba (c++ class)": [[191, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[191, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [191, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[191, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[191, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[191, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [191, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[191, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::proxy_base (c++ class)": [[191, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[191, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[191, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[191, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[191, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[191, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[191, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::softmax (c++ class)": [[191, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[191, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [191, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[191, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[191, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[191, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [191, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[191, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[191, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[191, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [191, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[191, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[191, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[191, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [191, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[191, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[191, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[191, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [191, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[191, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[191, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[191, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [191, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[191, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::engine (c++ class)": [[192, "_CPPv4N2jd6engineE"]], "jd::engine::eng_kind_ (c++ member)": [[192, "_CPPv4N2jd6engine9eng_kind_E"]], "jd::engine::engine (c++ function)": [[192, "_CPPv4N2jd6engine6engineERK11engine_kind"]], "jd::engine::get_implementation_list (c++ function)": [[192, "_CPPv4NK2jd6engine23get_implementation_listERK13operator_desc"]], "jd::engine::kind (c++ function)": [[192, "_CPPv4NK2jd6engine4kindEv"]], "jd::engine::~engine (c++ function)": [[192, "_CPPv4N2jd6engineD0Ev"]]}})