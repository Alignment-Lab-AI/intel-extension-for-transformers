Search.setIndex({"docnames": ["autoapi/clangformat/index", "autoapi/convert_falcon/index", "autoapi/convert_gptj/index", "autoapi/convert_gptj_wo_vocab/index", "autoapi/convert_gptneox/index", "autoapi/convert_llama/index", "autoapi/convert_mpt/index", "autoapi/gptj_binding/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/modeling/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_add_zeros/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_baddbmm/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv/index", "autoapi/test_conv_int8/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dolly_pattern/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_electra/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_fwk/index", "autoapi/test_gather/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_graph_optimizer/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_neox_rotary_pos_emb/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_slice/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_static_compressed_buffer/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_two_linear/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/clangformat/index.rst", "autoapi/convert_falcon/index.rst", "autoapi/convert_gptj/index.rst", "autoapi/convert_gptj_wo_vocab/index.rst", "autoapi/convert_gptneox/index.rst", "autoapi/convert_llama/index.rst", "autoapi/convert_mpt/index.rst", "autoapi/gptj_binding/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_add_zeros/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_baddbmm/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv/index.rst", "autoapi/test_conv_int8/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dolly_pattern/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_electra/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_fwk/index.rst", "autoapi/test_gather/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_graph_optimizer/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_neox_rotary_pos_emb/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_slice/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_static_compressed_buffer/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_two_linear/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">clang-format</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_falcon</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptj</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptj_wo_vocab</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptneox</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_llama</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_mpt</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gptj_binding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.resize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.where</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dolly_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_electra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_fwk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_static_compressed_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_two_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Static Compressed Buffer", "Neural Engine Support Matrix", "ITREX Graph", "Table of Contents", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"bytes_to_unicod": [1, 2, 3, 4, 6], "sourc": [1, 2, 3, 4, 5, 6, 9, 11, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 216, 218, 221, 223, 224, 225, 226, 227, 230, 232, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 386, 400, 407, 413, 415], "return": [1, 2, 3, 4, 5, 6, 13, 14, 15, 18, 23, 57, 150, 206, 207, 214, 216, 223, 226, 230, 232, 236, 238, 240, 241, 243, 246, 251, 252, 365, 366, 377, 378, 385, 389, 393, 397, 400, 401, 416], "list": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 18, 23, 57, 206, 207, 214, 216, 224, 225, 239, 243, 244, 246, 251, 252, 378, 379, 384, 385, 386, 389, 394, 400, 401, 414, 420], "utf": [1, 2, 3, 4, 6], "8": [1, 2, 3, 4, 5, 6, 18, 246, 356, 365, 378, 380, 381, 383, 385, 387, 389, 391, 393, 395, 397, 401, 402, 403, 409, 410, 411, 413, 420], "byte": [1, 2, 3, 4, 5, 6, 403, 409], "correspond": [1, 2, 3, 4, 6, 9, 13, 14, 18, 365, 385, 389, 393, 398, 405, 409, 412, 420], "unicod": [1, 2, 3, 4, 6], "string": [1, 2, 3, 4, 5, 6, 18, 23, 206, 207, 216, 227, 236, 238, 243, 255, 256, 355, 377, 379, 385, 388, 389, 392, 397, 401, 416, 417, 419, 420], "The": [1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 221, 224, 226, 227, 230, 232, 235, 236, 238, 240, 243, 246, 249, 251, 252, 253, 255, 256, 258, 347, 349, 352, 354, 355, 357, 363, 365, 366, 375, 377, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 413, 416, 418, 419, 420], "revers": [1, 2, 3, 4, 6], "bpe": [1, 2, 3, 4, 6], "code": [1, 2, 3, 4, 6, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 354, 355, 356, 378, 382, 383, 385, 388, 396, 397, 401, 402, 403, 404, 405, 410, 413, 415], "work": [1, 2, 3, 4, 6, 246, 346, 394, 397, 401, 418], "thi": [1, 2, 3, 4, 5, 6, 11, 18, 183, 216, 235, 243, 246, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 354, 355, 356, 365, 375, 376, 377, 378, 379, 381, 385, 386, 387, 388, 389, 392, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 415, 416, 418, 420], "mean": [1, 2, 3, 4, 6, 18, 19, 45, 208, 221, 224, 251, 252, 256, 356, 377, 385, 386, 387, 388, 389, 393, 394, 396, 397, 399, 400, 402, 406, 409, 413, 416, 419, 420], "you": [1, 2, 3, 4, 6, 18, 218, 224, 239, 251, 252, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 366, 376, 377, 378, 379, 381, 385, 386, 388, 389, 390, 393, 394, 396, 397, 400, 401, 403, 410, 412, 413, 415, 416, 418, 419, 420, 421], "need": [1, 2, 3, 4, 5, 6, 18, 123, 224, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 377, 378, 379, 385, 387, 388, 389, 390, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 413, 419, 420, 421], "larg": [1, 2, 3, 4, 6, 379, 380, 393, 394, 395, 396, 397, 399, 402, 405, 406, 407, 413], "charact": [1, 2, 3, 4, 6, 397], "your": [1, 2, 3, 4, 6, 18, 246, 256, 258, 347, 376, 377, 378, 382, 385, 386, 387, 388, 389, 396, 397, 400, 401, 413, 415, 418], "vocab": [1, 2, 3, 4, 6], "want": [1, 2, 3, 4, 6, 224, 239, 366, 372, 385, 387, 388, 390, 393, 394, 397, 399, 400, 401, 413, 416, 428], "avoid": [1, 2, 3, 4, 6, 246, 251, 252, 393, 397, 399, 401, 405, 407, 408, 413], "unk": [1, 2, 3, 4, 6], "when": [1, 2, 3, 4, 6, 206, 224, 246, 251, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 366, 375, 380, 385, 386, 388, 389, 392, 393, 394, 397, 399, 401, 402, 404, 405, 406, 408, 409, 413, 416, 417, 420], "re": [1, 2, 3, 4, 6, 232, 397, 403], "someth": [1, 2, 3, 4, 6, 206], "like": [1, 2, 3, 4, 6, 9, 13, 14, 15, 18, 113, 114, 206, 256, 377, 378, 379, 382, 385, 386, 387, 388, 389, 390, 393, 394, 397, 400, 401, 403, 410, 416, 417, 419, 420], "10b": [1, 2, 3, 4, 6], "token": [1, 2, 3, 4, 6, 210, 214, 218, 239, 251, 252, 256, 366, 377, 378, 380, 382, 390, 394, 396, 418], "dataset": [1, 2, 3, 4, 6, 221, 240, 246, 255, 256, 366, 377, 380, 416, 420], "end": [1, 2, 3, 4, 6, 18, 243, 251, 252, 256, 347, 378, 387, 390, 392, 393, 397, 401, 410], "up": [1, 2, 3, 4, 5, 6, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 385, 387, 389, 394, 397, 401, 413], "around": [1, 2, 3, 4, 6], "5k": [1, 2, 3, 4, 6], "decent": [1, 2, 3, 4, 6], "coverag": [1, 2, 3, 4, 6], "i": [1, 2, 3, 4, 5, 6, 9, 11, 13, 14, 15, 18, 23, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 216, 221, 224, 230, 240, 243, 246, 251, 252, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 352, 353, 354, 355, 356, 357, 363, 365, 366, 370, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 426], "signific": [1, 4, 379, 397], "percentag": [1, 2, 3, 4, 6], "normal": [1, 2, 3, 4, 6, 356, 400, 408, 427], "sai": [1, 2, 3, 4, 6, 409], "32k": [1, 2, 3, 4, 6], "To": [1, 2, 3, 4, 6, 221, 251, 252, 365, 376, 385, 397, 402, 405, 407, 409, 413, 414], "we": [1, 2, 3, 4, 6, 232, 236, 252, 372, 375, 377, 378, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 416, 417, 418, 420, 428], "lookup": [1, 2, 3, 4, 6], "tabl": [1, 2, 3, 4, 6, 388, 401, 409], "between": [1, 2, 3, 4, 6, 13, 14, 251, 252, 356, 365, 379, 397, 406, 409, 413, 420], "And": [1, 2, 3, 4, 6, 123, 387, 388, 389, 390, 393, 400], "map": [1, 2, 3, 4, 5, 6, 13, 14, 18, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 246, 365, 378, 379, 394, 399, 420], "whitespac": [1, 2, 3, 4, 6, 414], "control": [1, 2, 3, 4, 5, 6, 18, 223, 224, 365, 385, 397], "barf": [1, 2, 3, 4, 6], "signfic": [2, 3, 6], "nefiletyp": [3, 5], "gener": [3, 5, 18, 113, 114, 223, 224, 243, 246, 251, 252, 256, 366, 378, 379, 385, 389, 393, 400, 401, 404, 405, 408, 410, 412, 413, 416, 417, 420], "enumer": [3, 5, 258, 356], "deriv": [3, 5, 354, 406, 407], "from": [3, 5, 16, 18, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 206, 207, 223, 227, 230, 232, 243, 246, 251, 252, 256, 365, 366, 375, 377, 379, 380, 382, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 400, 401, 404, 406, 407, 408, 409, 416, 417, 418, 419, 420], "defin": [3, 5, 18, 216, 224, 236, 238, 239, 243, 246, 353, 365, 375, 378, 379, 385, 386, 392, 393, 409, 414, 416, 419, 420], "new": [3, 5, 9, 13, 14, 15, 18, 23, 246, 376, 393, 394, 397, 400, 401, 414, 421], "handle_quant": [3, 5], "model": [3, 5, 9, 13, 14, 15, 16, 18, 21, 23, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 187, 188, 189, 191, 192, 193, 204, 205, 207, 214, 216, 221, 223, 224, 227, 229, 230, 236, 239, 240, 241, 243, 246, 255, 256, 363, 365, 377, 379, 380, 382, 384, 385, 388, 389, 393, 394, 395, 397, 400, 405, 406, 407, 408, 411, 415, 416, 417, 419, 420, 429], "lazymodel": [3, 5], "convert": [3, 5, 9, 13, 14, 18, 23, 206, 223, 224, 381, 391, 394, 408, 413, 420], "entri": [3, 5, 208, 240, 246, 251, 252, 415], "foo": [3, 5], "qweight": [3, 5], "scale": [3, 5, 23, 246, 356, 400, 405, 408, 420], "etc": [3, 5, 230, 246, 365, 379, 387], "which": [3, 5, 9, 13, 14, 15, 18, 161, 206, 224, 226, 230, 232, 246, 251, 252, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375, 377, 379, 384, 385, 386, 388, 389, 393, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 412, 413, 416, 419, 420], "resolv": [3, 5, 346], "unquantizedtensor": [3, 5], "raw": [3, 5], "data": [3, 5, 18, 84, 210, 223, 256, 258, 356, 365, 378, 380, 385, 386, 388, 390, 391, 392, 394, 399, 400, 401, 402, 405, 406, 409, 413, 420, 424, 428], "one": [3, 5, 9, 13, 14, 18, 214, 243, 251, 356, 365, 378, 379, 382, 384, 385, 387, 388, 389, 393, 394, 396, 397, 400, 402, 403, 408, 412, 413, 418], "weight": [3, 5, 91, 224, 251, 252, 356, 365, 379, 381, 387, 388, 390, 399, 402, 403, 404, 408, 409, 413, 416, 417, 419, 420], "quantizedtensor": [3, 5], "lazyunpickl": [3, 5], "fp": [3, 5], "io": [3, 5, 356, 392], "data_base_path": [3, 5], "str": [3, 5, 18, 57, 150, 210, 216, 218, 223, 224, 225, 232, 235, 239, 241, 244, 246, 249, 251, 252, 253, 256, 258, 366, 377], "zip_fil": [3, 5], "zipfil": [3, 5], "take": [3, 5, 375, 379, 387, 389, 392, 400, 408, 409], "binari": [3, 5, 383, 401, 408, 413, 427], "file": [3, 5, 9, 11, 13, 14, 15, 16, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 150, 178, 224, 227, 230, 232, 236, 238, 243, 246, 247, 256, 353, 354, 355, 356, 377, 378, 385, 386, 387, 388, 390, 392, 396, 397, 400, 401, 412, 413, 414, 415], "read": [3, 5, 243, 378, 386, 396], "pickl": [3, 5], "stream": [3, 5, 392], "protocol": [3, 5, 406], "version": [3, 5, 221, 232, 246, 375, 378, 383, 388, 395, 411, 415], "detect": [3, 5, 18], "automat": [3, 5, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 366, 377, 387, 388, 389, 397, 400, 413], "so": [3, 5, 18, 232, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 379, 384, 385, 388, 389, 392, 393, 400, 402, 403, 404, 405, 406, 408, 409, 410, 413, 416, 417, 419, 420], "argument": [3, 5, 216, 224, 243, 246, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 379, 387, 414, 416, 417, 419, 420], "past": [3, 5, 251, 252], "object": [3, 5, 13, 14, 15, 206, 216, 224, 229, 236, 238, 239, 240, 241, 243, 246, 248, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 366, 378, 379, 382, 385, 392, 419, 424], "": [3, 5, 18, 23, 57, 110, 206, 224, 246, 252, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 354, 365, 375, 378, 379, 385, 386, 387, 389, 390, 392, 394, 395, 397, 402, 406, 408, 411, 413, 414, 418, 420], "represent": [3, 5, 18, 375, 382, 385, 389, 390], "ar": [3, 5, 18, 113, 114, 161, 221, 226, 227, 243, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 365, 375, 376, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 419, 420], "ignor": [3, 5, 216, 246, 251, 252, 385, 397], "must": [3, 5, 18, 221, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 366, 383, 389, 393, 399, 400, 402, 409], "have": [3, 5, 9, 18, 206, 216, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375, 376, 378, 385, 386, 387, 388, 389, 390, 393, 394, 397, 401, 405, 406, 407, 408, 412, 413, 415, 416, 417, 418, 419, 420], "two": [3, 5, 18, 246, 379, 385, 388, 389, 391, 392, 394, 400, 401, 403, 406, 407, 408, 409, 417, 418, 419, 420], "method": [3, 5, 18, 227, 238, 244, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 377, 380, 397, 400, 403, 405, 408, 410, 419, 420], "an": [3, 5, 11, 18, 23, 206, 238, 246, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 375, 377, 378, 380, 381, 382, 385, 386, 387, 388, 389, 392, 393, 394, 396, 397, 399, 400, 401, 405, 406, 409, 414, 416, 418, 429], "integ": [3, 5, 377, 381, 388, 389, 409, 413, 419, 420], "readlin": [3, 5], "requir": [3, 5, 18, 147, 221, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 366, 382, 389, 391, 393, 395, 397, 399, 402, 403, 405, 412, 413, 420], "both": [3, 5, 230, 246, 251, 252, 375, 377, 382, 397, 405, 407, 412, 413, 414, 416, 420], "should": [3, 5, 18, 232, 246, 251, 252, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 385, 386, 388, 389, 392, 393, 399, 400, 401, 406, 413, 414, 416, 417, 420], "thu": [3, 5, 404, 420], "can": [3, 5, 9, 18, 113, 114, 123, 147, 218, 232, 243, 246, 251, 252, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 377, 378, 379, 381, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 413, 417, 418, 419, 420], "open": [3, 5, 375, 377, 386, 390, 396], "bytesio": [3, 5], "ani": [3, 5, 18, 232, 246, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375, 376, 385, 393, 397, 418], "other": [3, 5, 18, 73, 123, 232, 356, 375, 376, 377, 378, 385, 386, 387, 388, 389, 393, 394, 395, 397, 405, 408, 409, 411, 413, 415, 420], "custom": [3, 5, 18, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 216, 240, 246, 256, 347, 365, 378, 387, 389, 397, 429], "meet": [3, 5, 353, 354, 355, 356, 385, 403, 405, 409], "interfac": [3, 5, 9, 208, 224, 251, 252, 354, 381, 384, 398], "option": [3, 5, 18, 216, 223, 224, 232, 239, 241, 246, 251, 252, 365, 366, 387, 393, 400, 409, 413], "keyword": [3, 5, 246], "fix_import": [3, 5], "encod": [3, 5, 235, 251, 252, 365, 387, 393], "error": [3, 5, 22, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 392, 410], "us": [3, 5, 9, 18, 23, 57, 150, 161, 183, 206, 216, 221, 223, 224, 226, 230, 232, 235, 236, 239, 240, 246, 251, 252, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 366, 375, 376, 377, 378, 379, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420], "compat": [3, 5, 383], "support": [3, 5, 18, 23, 150, 216, 218, 224, 227, 241, 244, 245, 256, 356, 382, 383, 384, 385, 386, 387, 388, 392, 393, 401, 405, 406, 408, 410, 412, 413, 418, 419, 423], "python": [3, 5, 13, 14, 18, 251, 252, 352, 363, 376, 377, 378, 383, 384, 385, 386, 388, 390, 391, 396, 412], "2": [3, 5, 18, 221, 224, 226, 251, 356, 365, 366, 377, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 393, 394, 395, 397, 402, 403, 404, 409, 410, 411, 413, 415, 416, 418], "If": [3, 5, 18, 226, 246, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 376, 379, 381, 385, 387, 388, 389, 390, 393, 397, 400, 406, 413, 415, 416, 419, 420], "true": [3, 5, 16, 216, 224, 246, 249, 251, 252, 253, 365, 378, 381, 382, 384, 385, 387, 388, 394, 400, 401, 407, 410, 413, 416, 417, 420], "try": [3, 5, 388, 396, 420], "old": [3, 5, 18], "name": [3, 5, 13, 14, 15, 16, 18, 23, 57, 84, 150, 206, 216, 224, 225, 232, 241, 244, 249, 253, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 377, 378, 379, 380, 382, 383, 385, 386, 387, 388, 389, 391, 393, 395, 401, 411, 412, 415, 416, 417, 418, 419, 420], "3": [3, 5, 18, 356, 365, 366, 377, 379, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 401, 403, 404, 409, 411, 413, 414, 416], "tell": [3, 5, 387, 389, 400, 401], "how": [3, 5, 224, 226, 246, 346, 376, 385, 386, 387, 390, 391, 393, 397, 401, 402, 403, 413, 416, 419], "decod": [3, 5, 235, 251, 252, 394, 410], "bit": [3, 5, 381, 382, 396, 397, 399, 400, 406, 409, 420], "instanc": [3, 5, 224, 230, 236, 246, 247, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 366, 375, 386, 387, 395, 411, 414, 416, 417, 418], "default": [3, 5, 223, 224, 232, 239, 241, 246, 251, 252, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 366, 377, 378, 379, 385, 388, 394, 395, 397, 401, 405, 409, 410, 411, 413, 416, 417, 419, 420], "ascii": [3, 5], "strict": [3, 5], "respect": [3, 5, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375, 386, 389, 390], "find_class": [3, 5], "specifi": [3, 5, 18, 218, 224, 226, 236, 238, 240, 244, 245, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 389, 390, 394, 397, 401, 405, 407, 413, 419, 420], "necessari": [3, 5, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375, 392, 397, 409, 413], "import": [3, 5, 16, 18, 241, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 366, 377, 378, 379, 382, 385, 386, 388, 390, 393, 394, 397, 400, 401, 405, 416, 417, 418, 419, 420], "subclass": [3, 5, 57, 150, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 354], "mai": [3, 5, 9, 18, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 354, 355, 356, 375, 376, 378, 385, 388, 393, 394, 396, 397, 402, 403, 404, 406, 407, 408, 409, 413, 415, 420], "overrid": [3, 5, 232, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 354, 392], "e": [3, 5, 18, 113, 114, 216, 224, 230, 246, 365, 375, 378, 379, 388, 397, 400, 401, 406, 407, 413, 414], "g": [3, 5, 216, 224, 230, 246, 365, 379, 396, 397, 400, 401, 406, 414], "restrict": [3, 5], "unpickl": [3, 5], "arbitrari": [3, 5, 385], "call": [3, 5, 18, 110, 142, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 381, 385, 388, 389, 394, 399, 400, 401, 408, 409, 420], "whenev": [3, 5, 397], "pass": [3, 5, 243, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 356, 394, 400, 401, 418, 420], "bounded_parallel_map": [3, 5], "func": [3, 5, 18, 365, 388], "callabl": [3, 5, 239, 240, 246, 365], "In": [3, 5, 18, 230, 246, 251, 365, 375, 378, 385, 386, 387, 388, 389, 390, 393, 394, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 416, 417, 420], "out": [3, 5, 16, 18, 246, 376, 378, 385, 386, 389, 397, 398, 407, 420], "iter": [3, 5, 216, 224, 230, 246, 365, 366, 378, 386, 388, 392, 394, 400, 404, 407, 408, 413, 414], "concurr": [3, 5], "int": [3, 5, 18, 216, 218, 223, 224, 244, 246, 251, 356, 366, 385, 400, 401, 402, 405], "parallel": [3, 5, 404, 405, 406, 409, 413], "backpressur": [3, 5], "caller": [3, 5], "doesn": [3, 5, 18, 365, 397, 400, 409, 413], "t": [3, 5, 18, 224, 251, 252, 354, 356, 365, 377, 379, 392, 394, 396, 397, 399, 400, 402, 405, 407, 408, 409, 413, 419], "next": [3, 5, 9, 16, 251, 252, 365, 389, 390, 397, 400, 402, 404, 406, 407, 408, 409], "fast": [3, 5, 224, 347, 378, 382], "enough": [3, 5, 377, 394, 405, 420], "stop": [3, 5, 218, 224, 256, 377, 397, 420], "some": [3, 5, 18, 147, 161, 252, 378, 385, 386, 387, 388, 389, 392, 393, 394, 397, 400, 401, 405, 409, 420], "point": [3, 5, 208, 246, 251, 252, 365, 389, 400, 401, 405, 408, 420], "rather": [3, 5, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 389, 400], "than": [3, 5, 226, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 366, 387, 388, 389, 397, 400, 405, 407, 412, 413, 420], "let": [3, 5, 387, 392, 402, 403], "result": [3, 5, 18, 216, 230, 240, 246, 347, 365, 366, 375, 378, 380, 385, 388, 389, 395, 397, 400, 401, 402, 405, 406, 407, 408, 409, 411, 415, 419, 420], "pile": [3, 5], "memori": [3, 5, 246, 392, 394, 400, 401, 402, 403, 404, 406, 407, 408, 409, 417, 420], "specif": [3, 5, 18, 232, 236, 355, 357, 365, 375, 379, 383, 385, 388, 389, 397, 399, 404, 405, 406, 412, 413, 416, 417, 418, 420], "max": [3, 5, 35, 224, 226, 246, 378, 394, 395, 400, 402, 404, 409, 411, 420], "output": [3, 5, 16, 18, 23, 35, 206, 207, 224, 239, 246, 251, 252, 356, 365, 377, 379, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 397, 404, 405, 406, 407, 409, 413, 418], "valu": [3, 5, 18, 23, 206, 207, 214, 223, 224, 239, 243, 246, 251, 252, 356, 377, 378, 379, 385, 386, 387, 388, 389, 397, 400, 401, 402, 403, 405, 407, 408, 413, 416, 417, 419, 420], "buffer": [3, 5, 405, 406, 408], "per": [3, 5, 216, 387, 395, 400, 403, 411, 413, 414, 419], "thread": [3, 5, 395], "nth_multifile_path": [3, 5], "path": [3, 5, 18, 216, 224, 230, 232, 236, 238, 239, 243, 246, 255, 256, 377, 378, 382, 386, 387, 388, 390, 394, 397, 410, 412, 413], "pathlib": [3, 5], "n": [3, 5, 18, 227, 251, 252, 356, 377, 379, 388, 389, 391, 395, 396, 397, 399, 402, 403, 404, 405, 408, 409, 411, 413], "none": [3, 5, 9, 16, 18, 23, 56, 57, 84, 91, 206, 207, 216, 223, 224, 225, 226, 227, 230, 236, 239, 240, 241, 244, 246, 249, 251, 252, 253, 254, 255, 356, 365, 377, 379, 380, 381, 387, 416, 417, 419, 420], "given": [3, 5, 224, 232, 251, 252, 377, 393, 401, 404, 407, 409, 419], "belong": [3, 5, 18, 385, 420], "multi": [3, 5, 218, 386, 387, 388], "bin": [3, 5, 9, 16, 239, 386, 387, 388, 390, 396, 397, 410, 412], "1": [3, 5, 18, 223, 224, 225, 244, 246, 251, 252, 254, 256, 356, 365, 366, 375, 377, 379, 380, 381, 382, 383, 384, 385, 388, 389, 390, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 416, 418, 419, 420], "nth": [3, 5], "find_multifile_path": [3, 5], "whole": [3, 5, 18, 221, 230, 365, 380, 387, 388, 404, 405, 406, 408, 410], "load_some_model": [3, 5], "modelplu": [3, 5], "load": [3, 5, 21, 227, 230, 240, 241, 246, 251, 252, 378, 385, 386, 387, 388, 390, 394, 397, 399, 401, 402, 403, 404, 409], "format": [3, 5, 22, 91, 216, 246, 365, 387, 396, 397, 407, 408, 411, 412, 420], "neural_engin": [8, 378, 382, 384, 385, 386, 387, 388, 390, 393, 394, 398, 413], "compil": [8, 208, 349, 382, 384, 385, 386, 388, 389, 391, 393, 394, 429], "extractor": [8, 18, 19, 208, 388, 390, 393], "graph": [8, 9, 11, 13, 14, 15, 18, 19, 20, 23, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 349, 378, 379, 385, 390, 393, 394, 404, 407, 409, 429], "loader": [8, 9, 19, 208, 388, 390, 393], "op": [8, 9, 13, 14, 15, 18, 19, 23, 123, 147, 158, 206, 207, 208, 224, 246, 356, 387, 392, 393, 394, 400, 401, 413, 414, 420], "sub_graph": [8, 19, 208, 385, 388], "graph_util": [8, 19, 208, 385, 389, 393], "logger": [8, 19, 208, 410], "onnx_util": [8, 19, 208], "optim": [8, 19, 208, 347, 363, 365, 366, 378, 379, 380, 381, 382, 383, 386, 389, 390, 391, 394, 397, 400, 401, 402, 404, 416, 417, 418, 419, 420], "tf_util": [8, 19, 208], "torch_util": [8, 19, 208], "neural": [9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 115, 147, 178, 206, 207, 208, 232, 235, 240, 347, 365, 366, 374, 378, 379, 385, 387, 388, 389, 390, 394, 404, 412, 417, 420, 423, 430], "engin": [9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 115, 147, 178, 206, 207, 208, 230, 246, 348, 357, 365, 374, 378, 385, 387, 389, 392, 394, 400, 405, 408, 412, 423, 430], "start_pipelin": 9, "config": [9, 16, 18, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 223, 226, 229, 230, 235, 239, 240, 241, 243, 246, 251, 252, 363, 366, 377, 378, 379, 380, 382, 386, 387, 389, 392, 400, 413, 418, 419], "pipelin": [9, 229, 230, 236, 424], "firstli": 9, "get": [9, 16, 18, 22, 23, 206, 207, 226, 227, 246, 253, 255, 258, 381, 385, 388, 389, 390, 392, 393, 397, 400, 407, 409, 414, 418, 425], "comput": [9, 18, 206, 221, 246, 251, 252, 370, 378, 382, 393, 397, 398, 399, 400, 401, 402, 405, 407, 408, 412, 418, 420, 426], "framework": [9, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 147, 224, 230, 241, 246, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 370, 379, 380, 383, 385, 386, 390, 394, 398, 418, 419, 420, 426], "contain": [9, 18, 23, 113, 114, 206, 207, 214, 243, 246, 251, 252, 256, 365, 370, 377, 379, 385, 386, 388, 389, 393, 397, 398, 400, 412, 413, 414, 419, 420, 426], "node": [9, 13, 14, 15, 16, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 183, 206, 207, 255, 381, 393, 395, 411], "edg": 9, "tensor": [9, 13, 14, 15, 16, 18, 19, 23, 45, 73, 147, 206, 207, 208, 223, 246, 251, 252, 356, 385, 386, 387, 389, 390, 392, 394, 407, 412, 413, 419, 420], "Then": [9, 18, 379, 389, 390, 408, 409, 413, 419, 420], "extract": [9, 11, 13, 14, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 385, 388, 390], "pack": [9, 19, 45, 208, 409], "them": [9, 13, 14, 18, 385, 386, 389, 397, 400, 403, 405, 408, 409, 420], "our": [9, 377, 381, 393, 400, 402, 403, 405, 407, 408, 409, 418], "form": [9, 18, 216, 246, 379, 387, 393, 399, 404, 408, 413], "exploit": [9, 393], "abov": [9, 18, 251, 252, 384, 385, 388, 389, 393, 397, 402, 403, 405, 406, 407, 412], "consist": [9, 376, 397], "sub": [9, 18, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 385, 388, 389, 400, 407, 408], "see": [9, 18, 113, 114, 216, 221, 251, 252, 346, 375, 378, 385, 387, 388, 389, 390, 393, 395, 396, 397, 399, 404, 408, 410, 411, 412, 413, 415], "big": [9, 388, 389, 394], "layernorm": [9, 18, 48, 126, 385, 389, 393, 398, 413], "There": [9, 379, 385, 386, 387, 406, 410, 413, 417, 419], "differ": [9, 16, 21, 92, 93, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 187, 188, 189, 191, 192, 193, 204, 205, 226, 238, 365, 375, 377, 378, 379, 382, 385, 386, 388, 389, 390, 393, 397, 399, 406, 409, 416, 417, 419, 420], "flow": [9, 18, 385, 389, 397], "subgraph": [9, 18, 178, 388, 390], "final": [9, 388, 389, 390, 392, 393, 397, 402, 405, 406, 408, 416], "yaml": [9, 16, 18, 236, 238, 246, 387, 388, 390, 394, 412], "configur": [9, 101, 224, 226, 232, 236, 238, 240, 243, 244, 246, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 356, 365, 377, 380, 381, 388, 399, 400, 404, 421], "infer": [9, 16, 21, 223, 235, 240, 246, 252, 347, 380, 382, 384, 385, 387, 388, 389, 390, 394, 396, 397, 403, 405, 406, 408, 417, 420, 427], "base": [11, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 232, 241, 246, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 354, 365, 377, 378, 381, 382, 383, 390, 392, 395, 402, 404, 405, 406, 407, 408, 410, 411, 418], "tensorflow": [11, 14, 24, 25, 27, 28, 29, 31, 36, 38, 43, 46, 47, 50, 51, 52, 54, 55, 58, 59, 61, 62, 65, 67, 68, 71, 82, 83, 87, 206, 224, 230, 240, 255, 363, 382, 383, 386, 393, 420], "onnx": [11, 13, 23, 207, 216, 224, 246, 378, 382, 385, 387, 388, 407, 418, 424, 429], "pleas": [11, 13, 14, 243, 256, 258, 346, 365, 366, 377, 379, 380, 382, 385, 389, 392, 396, 397, 398, 399, 400, 401, 405, 408, 413, 419, 420], "refer": [11, 13, 14, 221, 243, 256, 258, 365, 377, 378, 379, 382, 389, 392, 396, 397, 403, 405, 408, 413, 415, 419, 420], "onnx_extractor": [11, 12, 19, 208], "py": [11, 377, 385, 387, 391, 396, 412], "tf_extractor": [11, 12, 19, 208], "more": [11, 13, 14, 18, 113, 114, 346, 379, 382, 384, 385, 387, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 403, 405, 406, 407, 409, 411, 412, 413], "detail": [11, 18, 365, 370, 372, 375, 376, 378, 379, 380, 382, 384, 385, 387, 388, 389, 392, 393, 395, 396, 397, 398, 403, 410, 411, 413, 419, 420, 426, 428], "A": [11, 18, 226, 236, 241, 243, 246, 251, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 385, 386, 393, 395, 397, 399, 402, 403, 409, 411, 413], "super": [11, 385, 388], "oper": [11, 13, 14, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 147, 161, 206, 207, 355, 357, 370, 380, 384, 385, 386, 388, 390, 398, 400, 401, 402, 404, 405, 406, 407, 408, 409, 413, 420, 426, 429], "do": [11, 224, 227, 239, 240, 243, 246, 375, 381, 385, 386, 388, 389, 393, 394, 397, 400, 402, 405, 419, 420], "addit": [11, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 378, 380, 387, 402, 406, 414, 421], "attribut": [11, 13, 14, 15, 18, 57, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 354, 365, 387, 389, 392, 401], "without": [11, 239, 246, 375, 379, 385, 386, 397, 406, 409, 410, 413], "modifi": [11, 16, 18, 123, 147, 221, 243, 252, 386, 387, 390, 396, 397], "topologi": 11, "modul": [12, 17, 19, 20, 45, 115, 208, 237, 365, 390, 391], "torch_extractor": [12, 19, 208], "all": [13, 14, 15, 16, 18, 19, 45, 57, 147, 150, 161, 208, 214, 243, 246, 251, 252, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 365, 375, 378, 379, 384, 385, 386, 387, 389, 393, 395, 396, 397, 400, 401, 402, 403, 405, 408, 411, 416, 419, 420], "input": [13, 14, 16, 18, 23, 35, 113, 114, 147, 206, 207, 223, 240, 241, 246, 251, 252, 356, 365, 366, 377, 378, 379, 381, 382, 386, 387, 388, 389, 392, 394, 404, 406, 407, 409, 413, 418], "compos": [13, 14, 15, 230, 246, 365, 385, 390, 408], "order": [13, 14, 16, 18, 230, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 377, 385, 387, 393, 399, 405, 406, 408, 409], "origin": [13, 14, 18, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 221, 223, 243, 256, 377, 379, 385, 390, 396, 397, 406, 407, 420], "calcul": [13, 14, 113, 114, 227, 243, 365, 387, 393, 399, 401, 402, 405, 406, 409, 413, 420], "notic": [13, 14, 390, 400, 407, 408, 415], "For": [13, 14, 18, 23, 147, 346, 365, 375, 378, 382, 385, 388, 389, 393, 394, 395, 397, 398, 400, 403, 407, 408, 409, 410, 411, 418], "relat": [13, 14, 246, 372, 379, 385, 389, 393, 394, 403, 408, 419, 420, 428], "deatil": [13, 14], "api": [13, 14, 16, 256, 347, 376, 378, 386, 388, 389, 390, 392, 393, 400, 401, 418, 425], "onnxextractor": 13, "decor": [13, 14, 15, 23, 57, 150, 206, 207], "graph_def": [13, 14, 15, 206], "ha": [13, 14, 15, 18, 256, 365, 376, 377, 378, 385, 388, 389, 391, 392, 393, 396, 397, 399, 401, 405, 413, 420], "input_tensor": [13, 14, 15, 18, 23, 57, 206, 207, 251, 252, 385, 389], "output_tensor": [13, 14, 15, 18, 23, 57, 206, 207, 385, 389], "record": [13, 14, 15, 221, 365, 387, 388], "dest": [13, 14, 15, 18, 23, 206], "paramet": [13, 14, 15, 18, 23, 57, 150, 206, 207, 216, 223, 224, 226, 230, 232, 235, 236, 238, 239, 240, 241, 244, 246, 251, 252, 255, 256, 347, 356, 365, 366, 378, 379, 387, 393, 397, 416, 419], "onnxmodel": [13, 23], "type": [13, 14, 15, 18, 23, 57, 150, 206, 207, 216, 223, 224, 226, 232, 235, 240, 241, 246, 251, 255, 256, 258, 357, 365, 376, 377, 378, 379, 380, 381, 386, 387, 388, 390, 393, 396, 397, 398, 400, 401, 406, 412, 413, 416, 417, 420], "tensorflowextractor": 14, "tensorflowmodel": [14, 206], "torch": [15, 90, 113, 114, 207, 216, 223, 224, 235, 246, 251, 252, 366, 378, 418], "torchextractor": 15, "torchscript": [15, 77, 207, 223, 224, 246, 366], "defint": [16, 91], "add_config_item": 16, "kei": [16, 18, 23, 206, 243, 246, 251, 252, 347, 378, 387, 388, 389, 397, 400, 401, 403], "val": [16, 18], "add": [16, 18, 35, 224, 227, 243, 379, 386, 387, 388, 389, 393, 396, 397, 398, 400, 401, 408, 413, 414, 429], "pair": [16, 224, 251, 386, 401, 409], "framework_modeling_config": 16, "inquire_config_item": 16, "insert_nod": 16, "index": [16, 251, 252, 255, 356, 389, 392, 393], "insert": [16, 18, 390, 392, 393, 397, 400, 401, 420], "ir": [16, 385, 386, 387, 388, 394, 410, 412, 429], "remove_nod": 16, "node_nam": [16, 18, 23, 206, 385, 389], "remov": [16, 18, 158, 161, 252, 375, 376, 401, 419], "get_node_id": [16, 385], "id": [16, 18, 232, 252, 255, 397, 401, 402], "accord": [16, 385, 388, 397, 409], "get_node_by_nam": 16, "rename_nod": 16, "old_nam": 16, "new_nam": 16, "change_node_input_tensor": 16, "mode": [16, 223, 225, 244, 245, 365, 387, 391, 406, 408, 413, 414, 420], "change_node_output_tensor": 16, "get_pre_node_nam": 16, "previou": [16, 230, 246, 378, 386, 405, 421], "get_next_node_nam": 16, "get_tensor_idx": 16, "tensor_nam": [16, 23, 206], "from_output": 16, "modify_node_connect": 16, "dump_tensor": 16, "tensor_list": 16, "dump": [16, 420], "engine_init": 16, "net_info": 16, "weight_data": 16, "b": [16, 18, 23, 251, 385, 393, 396, 397, 399, 402, 403, 404, 408, 409, 413], "refresh_model": 16, "pybind": 16, "executor": [16, 385, 386, 387], "input_data": [16, 18, 19, 115, 208, 386], "graph_init": [16, 386, 388], "load_weight": 16, "fals": [16, 216, 224, 225, 227, 232, 246, 251, 252, 356, 365, 366, 379, 382, 385, 388, 400, 401, 413, 416], "initi": [16, 18, 23, 26, 30, 48, 57, 78, 224, 236, 246, 251, 252, 356, 365, 396, 397, 400, 401, 405, 418, 419], "exampl": [16, 18, 147, 210, 216, 224, 251, 252, 256, 347, 348, 369, 375, 377, 378, 379, 382, 385, 386, 388, 389, 391, 392, 393, 394, 397, 398, 400, 402, 416, 419, 420, 425], "newgraph": 16, "conf": [16, 224, 386, 387, 388, 392, 412], "input_0": [16, 386, 388], "input_1": [16, 386, 388], "input_2": [16, 386, 388], "save": [16, 216, 227, 239, 246, 377, 378, 385, 386, 387, 390, 394, 403, 407, 409, 420], "output_dir": [16, 216, 239, 246, 365, 377, 390, 391], "ymal": 16, "graph_dispatch": [16, 388], "tune": [16, 210, 224, 246, 347, 377, 378, 379, 415, 416, 417, 419, 429], "inputs_shap": [16, 388], "dispatch": 16, "get_sparse_nodes_nam": 16, "threshold": [16, 397, 413], "0": [16, 18, 206, 216, 224, 225, 227, 244, 249, 251, 252, 254, 255, 256, 353, 354, 356, 365, 366, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 415, 416, 418, 419, 420], "7": [16, 18, 356, 365, 378, 380, 383, 384, 385, 389, 391, 393, 395, 403, 411, 413, 416, 420], "sparsiti": [16, 224, 243, 395, 413, 419], "spars": [16, 347, 356, 378, 388, 398, 399, 408, 413, 427], "transpose_mode_int8": 16, "node_name_list": 16, "transpos": [16, 19, 45, 70, 208, 251, 252, 387, 388, 398, 399, 403, 405, 406, 409, 413, 427], "innerproduct": [16, 35, 123, 387, 388, 398], "reorder": [16, 19, 45, 208, 405, 406], "util": [18, 23, 206, 207, 224, 226, 229, 257, 377, 385, 393, 396, 397, 399, 406, 409, 413], "names_from_input": 18, "static": [18, 253, 353, 356, 387, 390, 400, 403, 405, 418], "valid": [18, 224, 240, 246, 366, 376, 377, 379, 382, 393, 415, 421, 428], "field": [18, 224, 377, 400, 401, 420], "tupl": [18, 226, 241, 251, 252], "nodedef": [18, 206], "also": [18, 376, 378, 385, 386, 387, 389, 390, 392, 393, 394, 396, 397, 399, 400, 401, 402, 405, 408, 409, 410, 417, 420], "get_data_dtyp": 18, "const": [18, 23, 206, 353, 354, 355, 356, 392, 398, 400, 401, 402, 403], "dtype": [18, 23, 84, 206, 207, 246, 378, 381, 386, 387, 388, 392], "numpi": [18, 23, 378, 386], "dtypes_dict": 18, "autocast_init": 18, "quant": [18, 123, 224, 398, 413, 420, 427], "info": [18, 22, 23, 113, 114, 206, 207, 365, 378, 385, 410], "set_autocast": 18, "get_autocast_info": 18, "quant_info_init": 18, "insert_quant_info": 18, "get_quant_info": 18, "environ_info_init": 18, "environ": [18, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375, 386, 413, 414], "insert_environ_info": 18, "remove_environ_info_item": 18, "item": [18, 366, 378, 382], "get_environ_info": 18, "search_straight_pattern": [18, 393], "input_pattern": [18, 393], "search": [18, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 224, 227, 230, 236, 246, 365, 380, 389], "user": [18, 216, 243, 251, 252, 256, 347, 348, 365, 366, 369, 372, 378, 381, 385, 387, 389, 391, 394, 397, 405, 407, 410, 413, 417, 418, 425, 428], "pattern": [18, 19, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 214, 224, 354, 390, 399, 402, 412, 419, 429], "intern": [18, 389, 397, 405], "grpah": [18, 23, 206], "structur": [18, 380, 385, 386, 388, 396, 397, 404, 408, 412, 419], "attent": [18, 251, 252, 354, 365, 375, 387, 393, 407], "chain": [18, 400, 401], "straight": 18, "sequenc": [18, 210, 218, 226, 251, 252, 378, 382, 385, 389, 393, 397, 404, 413], "It": [18, 110, 232, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 366, 379, 385, 387, 388, 389, 392, 393, 394, 397, 404, 405, 407, 408, 413], "otherwis": [18, 216, 375, 385, 388, 405, 413], "op_typ": [18, 23, 57, 206, 207, 385, 388, 389, 401], "element": [18, 243, 246, 385, 393, 398, 402, 404, 407, 409, 413, 427], "could": [18, 243, 354, 375, 385, 386, 387, 389, 390, 393, 403, 412, 413, 419, 420], "mandatori": 18, "while": [18, 386, 389, 393, 397, 402, 405, 408, 413, 420], "stand": [18, 385], "mybe": 18, "mul": [18, 385, 389, 393, 400], "addv2": [18, 35, 393], "equal": [18, 246, 389, 397, 399, 400], "below": [18, 224, 347, 365, 376, 377, 378, 379, 385, 386, 388, 390, 393, 397, 399, 404, 406, 407, 408, 409, 417], "length": [18, 224, 226, 251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 378, 389, 393, 397, 400, 413, 420], "match": [18, 214, 365, 379, 388, 389, 393, 404, 407], "24": [18, 365, 393, 395, 403, 411], "layer": [18, 224, 226, 243, 251, 252, 365, 387, 393, 397, 400, 404, 407, 419, 427], "each": [18, 113, 114, 216, 224, 230, 246, 251, 252, 256, 365, 377, 387, 388, 389, 397, 399, 402, 404, 405, 406, 407, 408, 409, 412, 413, 414, 419], "still": [18, 243, 347, 393, 402, 420], "last": [18, 221, 224, 246, 251, 252, 389, 393, 394, 397, 399, 404, 405, 407, 420], "former": [18, 393], "here": [18, 236, 246, 372, 378, 384, 385, 388, 389, 390, 392, 393, 397, 401, 409, 420, 421, 428], "search_pattern": [18, 393], "pattern_list": 18, "complet": [18, 385, 395, 397, 402, 405, 408, 411], "its": [18, 147, 230, 246, 365, 375, 379, 385, 386, 389, 390, 393, 397, 404, 405, 406, 409, 412, 413, 415], "op_idx": 18, "howev": [18, 243, 388, 389, 393, 394, 397, 399, 403, 406, 409], "due": [18, 251, 389, 393, 397, 399, 420], "few": [18, 216, 404], "complic": [18, 385, 393], "thei": [18, 221, 232, 375, 379, 384, 393, 394, 397, 399, 400, 401, 403, 407, 413], "therefor": [18, 381, 399, 404, 407, 409, 420], "fist": 18, "repres": [18, 243, 375, 387, 389, 393, 397, 399, 401, 402, 405, 420], "main": [18, 218, 243, 246, 251, 252, 256, 389, 397, 406, 413], "top": [18, 347, 377, 378, 404], "down": [18, 397], "head": [18, 251, 252, 393, 401, 407, 408], "tail": [18, 393, 410], "left": [18, 251, 252, 403, 407, 409], "bert_large_squad": 18, "pb": [18, 382], "squareddiffer": [18, 35, 393], "4": [18, 224, 244, 246, 251, 252, 356, 365, 366, 375, 377, 379, 380, 383, 385, 387, 388, 389, 392, 393, 394, 395, 396, 397, 403, 404, 405, 406, 409, 410, 413, 419], "rsqrt": [18, 35, 393], "5": [18, 96, 97, 98, 99, 179, 180, 181, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 224, 225, 356, 365, 366, 377, 379, 385, 386, 387, 389, 392, 393, 395, 397, 403, 411, 413], "9": [18, 224, 256, 365, 377, 378, 382, 383, 385, 393, 395, 397, 403, 411, 413, 419], "6": [18, 356, 365, 379, 380, 384, 385, 389, 393, 395, 401, 403, 410, 411, 420], "same": [18, 252, 379, 381, 385, 386, 387, 389, 390, 393, 396, 397, 399, 402, 405, 406, 409, 412, 413, 414], "follow": [18, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 218, 251, 252, 349, 352, 357, 363, 366, 375, 376, 377, 378, 379, 383, 385, 387, 388, 389, 390, 392, 396, 397, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 420], "frozen": [18, 386, 390], "had": [18, 385], "better": [18, 110, 230, 240, 246, 365, 385, 386, 387, 388, 397, 399, 405, 406, 407, 408, 412, 416, 417, 420], "identifi": [18, 232, 402], "own": [18, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 385, 389, 390, 396, 397, 400, 406, 417], "casual": 18, "tf": [18, 240, 251, 365], "start": [18, 251, 252, 387, 393, 414, 425], "mostli": [18, 393], "longest": [18, 393], "sometim": [18, 389, 420], "connect": [18, 397, 419], "But": [18, 386, 399, 418], "don": [18, 224, 251, 252, 392, 394, 397, 400], "least": [18, 214, 243, 397, 406], "exist": [18, 232, 256, 365, 382, 385, 418], "relationship": 18, "sever": [18, 377, 385, 390, 393, 394, 397, 399, 413, 420], "split": [18, 19, 45, 208, 366, 377, 388, 399, 403, 405, 406], "representtaion": 18, "idx": [18, 401], "outsid": [18, 251, 252, 389, 393], "give": [18, 385, 389, 399], "just": [18, 252, 378, 385, 386, 387, 388, 389, 390, 393, 397, 401, 409, 412, 416], "empti": [18, 35, 389, 393, 401, 414], "algorithm": [18, 57, 150, 224, 236, 356, 365, 377, 388, 389, 392, 393, 397, 399, 400, 406, 413, 419, 420], "kind": [18, 101, 355, 392, 406, 413], "beaus": 18, "make": [18, 57, 147, 246, 366, 375, 376, 384, 385, 386, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 413], "sure": [18, 147, 366, 385, 397, 402, 413], "check": [18, 23, 123, 224, 246, 372, 376, 378, 385, 388, 389, 393, 397, 401, 428], "symmetr": [18, 393, 405, 413, 420], "consecut": [18, 403, 409], "y": [18, 113, 114, 401], "o": [18, 256, 365, 377, 378, 383, 395, 401, 406, 411], "shape": [18, 19, 45, 84, 208, 251, 252, 356, 365, 378, 386, 387, 388, 392, 394, 399, 405, 407, 413], "df": [18, 393], "duplic": 18, "would": [18, 385, 389, 390, 393, 394, 397, 410], "perform": [18, 224, 230, 236, 246, 251, 252, 253, 365, 366, 370, 378, 379, 381, 382, 386, 387, 388, 391, 396, 399, 402, 403, 404, 405, 406, 407, 408, 409, 413, 416, 417, 419, 420, 426], "befor": [18, 224, 243, 246, 251, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 366, 376, 379, 381, 385, 388, 389, 390, 393, 397, 400, 401, 402, 403, 405, 406, 408, 413, 420], "splice": 18, "de": 18, "total": [18, 224, 226, 251, 365, 366, 377, 389, 393, 397, 402, 409, 410], "step": [18, 224, 243, 246, 384, 385, 387, 389, 390, 391, 392, 393, 394, 400, 405, 407, 408, 413], "c": [18, 208, 357, 378, 383, 384, 385, 386, 388, 393, 395, 396, 397, 402, 404, 411, 413], "d": [18, 365, 377, 379, 399, 407], "f": [18, 356, 379, 392, 410, 420], "c1": 18, "d1": [18, 413], "c2": 18, "d2": 18, "c3": [18, 410], "d3": [18, 410], "now": [18, 256, 384, 385, 386, 388, 389, 390, 396, 400, 401, 408, 413, 418], "set": [18, 57, 216, 218, 225, 226, 239, 240, 246, 251, 252, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 366, 375, 377, 378, 386, 388, 389, 390, 392, 393, 394, 396, 397, 399, 400, 401, 404, 413], "part": [18, 216, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 389, 392, 393, 394, 397, 408, 409], "As": [18, 379, 385, 387, 389, 390, 403, 407, 409], "appli": [18, 224, 375, 380, 382, 396, 397, 400, 401, 405, 406, 407, 409, 413, 419, 420], "everi": [18, 243, 385, 399, 413], "right": [18, 251, 252, 375, 397, 403, 407, 409, 418], "construct_nod": 18, "attr": [18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 355, 385, 386, 400, 401], "construct": [18, 57, 251, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375, 400, 401], "new_nod": 18, "insert_pattern": 18, "target_node_nam": 18, "replac": [18, 252, 378, 379, 382, 385, 389, 419, 420], "ccontain": 18, "insid": [18, 389, 392, 404, 406], "been": [18, 251, 252, 376, 379, 401, 405, 418], "pattern_map": [18, 385, 389], "pattern_nam": 18, "mapping_dict": 18, "mapping_config": 18, "first": [18, 142, 224, 246, 377, 384, 385, 388, 389, 391, 393, 394, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 420], "second": [18, 224, 251, 252, 366, 384, 389, 391, 392, 393, 403, 404, 407, 409, 410, 413, 420], "third": [18, 389, 404, 409, 415], "reshap": [18, 19, 45, 62, 183, 208, 385, 386, 387, 392], "paddingsequ": [18, 60, 149, 386], "search_mod": [18, 385, 389], "embed": [18, 251, 252, 386, 389, 393, 400], "m": [18, 356, 378, 379, 380, 387, 388, 395, 396, 397, 399, 402, 403, 404, 405, 406, 408, 409, 411, 413], "after": [18, 110, 147, 161, 183, 243, 251, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 381, 384, 387, 388, 389, 390, 392, 393, 397, 399, 401, 406, 408, 409, 412, 413, 414, 420], "fusion": [18, 101, 147, 161, 392, 393, 400, 401, 406, 429], "about": [18, 375, 378, 385, 389, 392, 395, 397, 401, 409, 411], "in_pattern": 18, "input_id": [18, 251, 252, 382, 386, 394], "segment_id": [18, 382, 386], "input_mask": [18, 382, 386], "out_pattern": 18, "th": [18, 389], "berfor": 18, "match_result": 18, "_n": 18, "reshape_0": [18, 389], "dict": [18, 23, 206, 207, 210, 216, 224, 236, 241, 243, 244, 246, 251, 252, 256, 377, 385, 386, 419], "where": [18, 19, 45, 208, 251, 252, 365, 379, 389, 397, 399, 401, 404, 405, 407, 409, 413, 414], "go": [18, 397, 402], "mayb": [18, 388, 409], "happen": [18, 387, 409], "sepcial": 18, "biasadd": [18, 29, 389, 393], "bia": [18, 23, 224, 356, 387, 413], "unfix": 18, "locat": [18, 84, 385, 386, 389, 393, 409, 413, 421], "onli": [18, 216, 221, 224, 246, 251, 252, 256, 347, 366, 383, 386, 388, 389, 390, 392, 394, 396, 397, 398, 400, 401, 402, 405, 407, 408, 409, 413, 416, 418], "write": [18, 377, 385, 393, 405, 406, 408], "note": [18, 243, 366, 380, 383, 385, 386, 387, 388, 389, 391, 392, 393, 397, 400, 401, 407, 408, 409, 413, 420], "That": [18, 408, 409], "too": [18, 385, 399, 400, 405], "decompos": [18, 385], "list2str": [18, 385], "src_perm": 18, "emit": [18, 389], "ret": [18, 393, 410], "str2list": 18, "src_str": 18, "pattern_mapping_conf_valid": 18, "conf_dict": 18, "lazyimport": 18, "module_nam": 18, "lazi": 18, "till": 18, "later": [18, 385, 393], "get_model_fwk_nam": 18, "avail": [18, 349, 352, 357, 363, 378, 383, 386, 397, 404], "fwk": 18, "na": [18, 224, 229, 246, 377, 398], "set_environ_var": 18, "env": [18, 391], "var": [18, 113, 114, 356], "kv": 18, "del_environ_var": 18, "delet": [18, 232, 419], "assert": [19, 45, 208, 251, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365], "baddbmm": [19, 45, 208], "batch_matmul": [19, 45, 208], "batch_matmul_v2": [19, 45, 208], "bias_add": [19, 23, 45, 208], "cast": [19, 45, 208], "concat": [19, 45, 208, 385], "conv": [19, 45, 208, 224, 387, 388, 401], "co": [19, 45, 90, 208, 218, 232, 378], "empty_op": [19, 45, 208, 385], "expand_dim": [19, 45, 208], "fused_batch_matmul_v2": [19, 45, 208], "fused_batch_norm_v3": [19, 45, 208], "fused_gemm": [19, 45, 208], "fused_matmul": [19, 45, 208], "gather": [19, 45, 208, 246, 251, 252, 354, 385, 400], "gather_el": [19, 45, 208, 385], "gelu": [19, 45, 115, 208, 385, 392, 398, 401, 413], "gemm": [19, 45, 208, 224, 381, 399, 402, 405, 408, 413, 427], "iterator_get_next": [19, 45, 208], "iterator_v2": [19, 45, 208, 385], "layer_norm": [19, 45, 115, 208, 385], "log_softmax": [19, 45, 208], "map_and_batch_dataset": [19, 45, 208, 385], "matmul": [19, 23, 35, 45, 123, 208, 224, 381, 387, 389, 390, 393, 398, 408, 413, 427], "mkl_layer_norm": [19, 45, 208], "model_dataset": [19, 45, 208], "one_hot": [19, 45, 208], "onnx_input": [19, 45, 208], "optimize_dataset": [19, 45, 208, 385], "padding_sequ": [19, 45, 115, 208, 386], "placehold": [19, 45, 208], "pos_emb": [19, 45, 208], "pow": [19, 45, 208, 385, 389], "quantize_linear": [19, 45, 208, 385], "quantize_v2": [19, 45, 208], "quantized_fused_matmul_and_dequant": [19, 45, 208], "quantized_matmul_with_bias_and_dequant": [19, 45, 208], "reduce_mean": [19, 45, 208, 385], "reduce_sum": [19, 45, 208], "resiz": [19, 45, 208], "rsub": [19, 45, 208], "scatter_el": [19, 45, 208], "sin": [19, 45, 208], "size": [19, 45, 208, 216, 223, 224, 246, 251, 252, 365, 375, 378, 382, 386, 388, 394, 399, 402, 404, 406, 407, 408, 413, 420], "slice_position_id": [19, 45, 208], "softmax": [19, 45, 208, 251, 354, 365, 379, 398, 407, 408], "squeez": [19, 45, 208], "strided_slic": [19, 45, 208], "top_k": [19, 45, 208, 256, 397], "unpack": [19, 45, 208, 246, 385], "unsqueez": [19, 45, 208, 385], "view": [19, 45, 208, 376, 387, 399, 421], "innerproductreshapefus": [19, 108, 115, 208], "add_cls_token": [19, 115, 208], "add_embed": [19, 115, 208], "arangewithreciproc": [19, 115, 208], "attentionblock_attentionmaskaddreshap": [19, 115, 208], "attentionblock_constantofshapewithmul": [19, 115, 208], "attentionblock_qkvprereshap": [19, 115, 208], "attentionblock_qkvreshap": [19, 115, 208], "attentionblock_weightreshapeto4d": [19, 115, 208], "attention_mask_length_adaptive_keep_indic": [19, 115, 208], "attention_output_layer_norm_length_adaptive_keep_indic": [19, 115, 208], "attention_reshap": [19, 115, 208], "cast_to": [19, 115, 208], "collect_quant_info": [19, 115, 208], "conv_reshap": [19, 115, 208], "decoder_attn_reshap": [19, 115, 208], "einsumwitharang": [19, 115, 208], "embeddingbag": [19, 35, 115, 208], "embeddings_to_2d_before_inner_product": [19, 115, 208], "generate_sequ": [19, 115, 208], "innerproductwithbiasgelu": [19, 115, 208], "innerproductwithslic": [19, 115, 208], "innerproductwithswish": [19, 115, 208], "input_fil": [19, 115, 208], "insert_bf16_nod": [19, 115, 208], "insert_quant_nod": [19, 115, 208], "int8_bf16_mixed_precision_check": [19, 115, 208], "interact_featur": [19, 115, 208], "last_layer_shap": [19, 115, 208], "layer_norm_with_reduce_mean": [19, 115, 208, 385], "layer_norm_with_transpos": [19, 115, 208], "llama_embed": [19, 115, 208], "llama_matmulwithtranspos": [19, 115, 208], "llama_postprocess": [19, 115, 208], "llama_rotary_pos_emb": [19, 115, 208], "lower_all_tupl": [19, 115, 208], "matmul_with_bia": [19, 115, 208], "matmul_with_bias_add": [19, 115, 208], "matmul_with_bias_gelu": [19, 115, 208], "matmul_with_bias_relu": [19, 115, 208], "matmul_with_bias_sigmoid": [19, 115, 208], "matmul_with_bias_tanh": [19, 115, 208], "matmul_with_bias_unsqueez": [19, 115, 208], "matmul_with_transpos": [19, 115, 208], "matmul_with_transpose_scale_add": [19, 115, 208], "merged_embeddingbag": [19, 115, 208], "neox_reorder_chang": [19, 115, 208], "neox_rotary_pos_emb": [19, 115, 208], "operator_adaptor": [19, 115, 208], "output_data": [19, 115, 208, 386], "position_embed": [19, 115, 208], "position_embeddings_v1": [19, 115, 208], "qkv_merg": [19, 115, 208], "qkv_reshap": [19, 115, 208], "quant_gather_to_bf16": [19, 115, 208], "quantize_fus": [19, 115, 208], "quantized_graph_dtype_refactor": [19, 115, 208], "remove_constant_op": [19, 115, 208], "remove_last_view": [19, 115, 208], "remove_rang": [19, 115, 208], "remove_unused_oper": [19, 115, 208], "remove_zero": [19, 115, 208], "removeslic": [19, 115, 208], "reshape_after_restore_hidden_st": [19, 115, 208], "reshape_before_and_after_attention_out_layer_norm_gather_el": [19, 115, 208], "reshape_before_restore_hidden_st": [19, 115, 208], "reshape_fus": [19, 115, 208], "restore_hidden_states_in_length_adaptive_update_indic": [19, 115, 208], "rms_norm": [19, 115, 208], "rotary_pos_emb": [19, 115, 208], "slicemask": [19, 115, 208], "stablediffusion_explicitnhwctranspos": [19, 115, 208], "stablediffusion_mhareshap": [19, 115, 208], "stablediffusion_reshapefus": [19, 115, 208], "stablediffusion_bf16convert": [19, 115, 208], "start_end_logit": [19, 115, 208], "subgraph_match": [19, 115, 208, 388], "textencdoer_word_embed": [19, 115, 208], "textencoder_attentionmaskaddreshap": [19, 115, 208], "textencoder_attentionreshap": [19, 115, 208], "textencoder_kvreshap": [19, 115, 208], "textencoder_mulreshap": [19, 115, 208], "textencoder_qreshap": [19, 115, 208], "textencoder_softmaxreshap": [19, 115, 208], "textencoder_causal_attention_mask": [19, 115, 208], "token_type_embed": [19, 115, 208, 385], "token_type_embeddings_v1": [19, 115, 208, 385], "torch_embed": [19, 115, 208], "torch_ip_insert_bia": [19, 115, 208], "torch_unpack_baddbmm": [19, 115, 208], "torchinsertbf16nod": [19, 115, 155, 208], "torchpaddingsqu": [19, 115, 208], "transformer2dmodel_attentionmaskaddreshap": [19, 115, 208], "transformer2dmodel_constantofshapewithmul": [19, 115, 208], "transformer2dmodel_ffnslic": [19, 115, 208], "transformer2dmodel_ffnslice_1": [19, 115, 208], "transformer2dmodel_qkvprereshap": [19, 115, 208], "transformer2dmodel_qkvreshap": [19, 115, 208], "transformer2dmodel_qkvreshape4d": [19, 115, 208], "transformer2dmodel_encoderhiddenstatesreshap": [19, 115, 208], "transformer2dmodel_getsamplebatch": [19, 115, 208], "transformer2dmodel_sampleslic": [19, 115, 208], "transpose_batch_matmul": [19, 115, 208, 385], "word_embed": [19, 115, 208, 386], "frontend": [21, 404], "get_logg": 22, "log": [22, 378, 386, 392], "level": [22, 252, 347, 375, 378, 388, 401, 404, 412], "msg": 22, "arg": [22, 91, 214, 218, 232, 240, 243, 246, 256, 354, 365, 387, 392], "kwarg": [22, 91, 218, 224, 232, 243, 246, 251, 252], "debug": [22, 386, 394, 397], "fatal": 22, "warn": 22, "get_children": 23, "input_name_to_nod": 23, "get_node_children_nam": 23, "nodeproto": [23, 207], "get_initializer_children_nam": 23, "graph_node_names_detail": [23, 206, 207], "pars": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 74, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 90, 206, 386, 392], "graph_nodes_dict": [23, 206], "Be": [23, 206], "class": [23, 206, 216, 233, 241, 356, 357, 366, 377, 379, 385, 392, 400, 401], "cerat": 23, "output_nam": [23, 386], "ouput": 23, "param": [23, 206, 246, 400, 401], "node_names_detail": [23, 206], "is_supported_onnx_graph": [23, 290], "is_supported_onnx_nod": 23, "change_num_nam": 23, "number": [23, 216, 224, 226, 227, 252, 256, 366, 377, 388, 389, 393, 396, 399, 402, 408, 409, 413, 414, 420], "bias_to_int32": 23, "bias_nod": 23, "a_scal": 23, "b_scale": 23, "int8": [23, 224, 241, 246, 378, 380, 387, 388, 390, 396, 398, 401, 406, 407, 413, 420, 429], "int32": [23, 378, 386], "matric": [23, 402, 407, 408], "arrai": [23, 386], "fp32_bia": 23, "int8_bia": 23, "int8_bias_zero_point": 23, "int8_bias_scal": 23, "int32_bia": 23, "onnx_extract_oper": 23, "framework_model": [23, 56, 57, 206], "nodes_dict": [23, 56, 57, 206, 207], "engine_graph": [23, 56, 57, 206, 207], "tf_dtype": [23, 206, 207], "set_attr": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 385], "regist": [26, 35, 48, 57, 60, 63, 64, 73, 75, 79, 89, 150, 399, 400, 401, 402, 404, 405, 406, 407, 409, 429], "tile": [26, 35, 73, 399, 403, 405, 407, 408, 409, 413], "batchmatmul": 27, "batchmatmulv2": 28, "binaryop": [30, 400], "onnxruntim": [32, 33, 34, 40, 42, 63, 64, 69, 70, 72, 73, 74, 76, 81, 85, 86, 88, 89, 378, 381, 383, 385, 391], "multiheadattenion": 35, "binaryadd": [35, 400], "constantofshap": 35, "dequantizelinear": [35, 390], "dequant": [35, 400, 401, 405, 413], "erf": [35, 392], "expand": [35, 251, 252], "fill": [35, 389, 397, 407], "flatmapdataset": 35, "ident": [35, 375, 379, 397], "makeiter": 35, "matmulwithbiasadd": [35, 135], "matmulwithbiasgelu": [35, 136], "matmulwithbiastanh": [35, 139], "matmulwithbia": [35, 134], "qlinearmatmul": [35, 390], "qlinearadd": 35, "qlinearmul": 35, "realdiv": 35, "sqrt": [35, 385, 389, 407], "squar": [35, 251, 252], "stopgradi": 35, "tanh": [35, 392, 401, 413], "tensorslicedataset": 35, "transposebatchmatmul": [35, 204, 385], "rang": [35, 224, 246, 365, 378, 385, 388, 394, 397, 413, 419, 420], "relu": [35, 401, 413], "matmulwithbiasrelu": [35, 137], "cumsum": 35, "onehot": [35, 55], "tokentypeid": 35, "positionid": 35, "loop": [35, 246, 365, 385, 400, 402, 407], "sigmoid": 35, "matmulwithbiassigmoid": [35, 138], "flatten": 35, "mergedembeddingbag": [35, 143], "convolut": [35, 379, 388], "expandindic": 35, "opani": 35, "sequencelength": [35, 395], "arang": 35, "reciproc": 35, "einsum": 35, "repeat": [35, 396, 402, 414], "stack": [35, 408], "constant": [35, 158, 246], "listconstruct": 35, "latrang": 35, "masked_fil": 35, "floor_divid": 35, "listunpack": 35, "silu": 35, "zero": [35, 243, 401, 402, 404, 405, 409, 419], "expanddim": 36, "fusedbatchnormv3": 38, "fusedgemm": 39, "fusedmatmul": 40, "gatherv2": [41, 385], "gatherel": [42, 385], "iteratorgetnext": 46, "iteratorv2": [47, 385], "logsoftmax": [49, 354], "mapandbatchdataset": [50, 385], "modeldataset": 54, "onnxinput": 56, "operator_registri": [57, 385], "operator_typ": [57, 385], "cl": [57, 150, 365], "registr": [57, 150, 385], "ordereddict": [57, 385], "optimizedataset": [58, 385], "packagepositionembed": 62, "quantizelinear": [64, 385, 390], "quantiz": [64, 224, 229, 232, 239, 240, 246, 347, 378, 381, 396, 400, 401, 405, 406, 408, 413, 416, 424, 429], "quantizev2": 65, "quantizedmatmulwithbiasanddequant": 67, "reducemean": [68, 385, 389], "reducesum": 69, "aten": 73, "self": [73, 224, 251, 252, 256, 365, 377, 385, 387], "scalar": [73, 400], "alpha": [73, 356, 406, 413], "scatterel": 74, "primconst": 77, "slicepositionid": 79, "stridedslic": 83, "source_op": 84, "dest_op": 84, "definit": [84, 401], "topk": 85, "input_shap": [91, 387, 388, 413], "weight_optim": 91, "fuse": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 390, 400, 401], "acceler": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 370, 378, 380, 381, 390, 400, 401, 405, 407, 420, 426], "strategi": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 224, 240, 402], "addclstoken": [93, 101], "addembed": 94, "stabl": [96, 97, 98, 99, 113, 114, 179, 180, 181, 184, 185, 186, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 347, 378, 383, 394, 405], "diffusionv1": [96, 97, 98, 99, 180, 181, 184, 185, 186, 194, 195, 198, 199, 200], "attentionmasklengthadaptiveexpandindic": 101, "attentionoutputlayernormlengthadaptiveexpandindic": 102, "attentionreshap": 103, "castto": 104, "collectquantinfo": 105, "convreshap": 106, "decoderattnreshap": 107, "gatherwithadd": 110, "embeddingsto2dbeforeinnerproduct": 110, "operatoradaptor": [110, 147], "quantgathertobf16": [110, 155], "generatesequ": 112, "channel": [113, 114, 400, 404, 409, 413, 419], "separ": [113, 114, 375, 393, 409, 415], "num_group": [113, 114], "group": [113, 114, 380, 385, 393, 402, 407, 409, 419], "num_channel": [113, 114], "x": [113, 114, 227, 251, 252, 388, 401, 404, 405, 407, 408, 413, 420], "epsilon": [113, 114, 385], "gamma": [113, 114], "beta": [113, 114, 356, 406, 413], "http": [113, 114, 218, 221, 251, 256, 258, 377, 378, 383, 384, 386, 392, 415, 421], "pytorch": [113, 114, 216, 224, 227, 230, 232, 235, 239, 246, 251, 252, 254, 363, 377, 378, 381, 383, 391, 396, 412, 418, 419, 420], "org": [113, 114, 221, 251, 383], "doc": [113, 114, 218, 256, 385, 389, 400, 409], "nn": [113, 114, 223, 246, 404], "html": [113, 114, 392], "groupnorm": [114, 354], "inputdata": [119, 385], "inputfil": 120, "insertbf16nod": 121, "insertquantnod": 122, "quantizedgraphdtyperefactor": [123, 157], "int8bf16mixedprecisioncheck": 123, "inferenc": 123, "under": [123, 246, 378, 385, 386, 387, 390, 406, 413, 415], "in8": 123, "bf16": [123, 224, 246, 378, 380, 390, 398, 401, 403, 405, 408, 413], "mix": [123, 388], "precis": [123, 246, 381, 390, 417, 420, 429], "u8": [123, 390, 392, 401, 408, 413], "s8": [123, 390, 400, 401, 405, 413], "fp32": [123, 224, 246, 378, 380, 386, 387, 388, 390, 392, 396, 400, 401, 403, 404, 406, 408, 413, 418, 420], "interactfeatur": 124, "lastlayershap": 125, "layernormwithreducemean": [127, 385], "layernormwithtranspos": 128, "llamaembed": 129, "llamamatmulwithtranspos": 130, "llamapostprocess": 131, "roraryposemb": [132, 146, 170], "llamaroraryposemb": 132, "loweralltupl": 133, "matmulwithbiasunsqueez": 140, "matmulwithtranspos": [141, 142], "matmulwithtransposescaleadd": 142, "multiheadattent": 144, "bass": [144, 150, 173], "neoxreorderchang": 145, "neoxroraryposemb": 146, "sweep": 147, "receiv": [147, 232, 389, 393, 394, 397], "outputdata": [148, 385], "pattern_registri": [150, 385], "pattern_typ": [150, 385], "positionembed": 151, "positionembeddingsv1": 152, "qkvmerg": 153, "qkvreshap": 154, "qunatizefus": 156, "quantizedgraphdtypecheck": 157, "removeconstantop": 158, "removelastview": 159, "removerang": 160, "removeunusedoper": 161, "removezero": 162, "reshapeafterrestorehiddenst": 164, "reshapebeforeandafterattentionoutlayernormgatherel": 165, "reshapebeforerestorehiddenst": 166, "reshapefus": 167, "restorehiddenstatesinlengthadapt": 168, "rmsnorm": 169, "explicitnhwctransposeforconv": 172, "startendlogit": 177, "matcher": [178, 365, 390], "subgraphmatch": [178, 388], "textencoder_wordembed": 179, "textencoderv1": [179, 196, 197, 201, 202, 203], "qkv": [183, 388, 390], "textencoder_casualattentionmask": 186, "tokentypeembed": [187, 385], "tokentypeembeddingsv1": [188, 385], "torchembed": 189, "torchinnerproductinsertbia": 190, "torchunpackbaddbmm": 191, "torchpaddingsequ": 193, "transformer2dmodel_ffninputslic": 196, "transformer2dmodel_ffninputslice_1": 197, "transformer2dmodel_qkvreshapeto4d": 200, "wordembed": 205, "create_tf_nod": 206, "creat": [206, 221, 224, 230, 238, 246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 375, 385, 391, 392, 397, 404, 413, 416], "tendorflow": 206, "get_tensor_dest_op": 206, "store": [206, 224, 227, 230, 232, 365, 385, 389, 390, 393, 394, 399, 400, 401, 402, 403, 405, 406, 407, 409], "dest_op_nam": 206, "tf_extract_oper": 206, "tf_dtype_id": 206, "deal": [206, 365, 387], "multipl": [206, 247, 251, 252, 256, 366, 380, 385, 387, 397, 401, 402, 404, 405, 406, 407, 408, 409, 413, 416, 417], "indetermin": 206, "torch_extract_oper": 207, "neural_engine_bin": [208, 384], "datacollatorforsuperviseddataset": 210, "transform": [210, 218, 224, 240, 241, 246, 251, 252, 256, 365, 366, 370, 376, 379, 384, 385, 386, 400, 401, 406, 407, 408, 409, 415, 417, 418, 419, 420, 421, 426], "pretrainedtoken": [210, 218], "collat": 210, "supervis": 210, "fine": [210, 347, 377, 378, 397, 419, 420], "preprocess": [210, 223, 224, 377, 378, 408], "target": [210, 221, 223, 224, 246, 365, 387, 397, 409, 419], "pattern_match": 214, "source_list": 214, "task": [214, 216, 241, 252, 255, 365, 377, 378, 379, 380, 391, 397, 401, 407, 410, 418], "batch_siz": [214, 216, 218, 223, 224, 246, 251, 252, 255, 366, 378, 386, 387, 391, 397, 407, 413], "instanti": [214, 216, 232, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "model_arg": 216, "new_fewshot": 216, "devic": [216, 227, 235, 377, 379, 386, 388, 418], "cpu": [216, 224, 347, 355, 366, 377, 378, 382, 383, 386, 392, 395, 397, 399, 401, 410, 411, 418], "no_cach": 216, "limit": [216, 224, 379, 397, 404, 408], "bootstrap_it": 216, "100000": 216, "description_dict": 216, "check_integr": 216, "decontamination_ngrams_path": 216, "seed": [216, 224, 365, 396], "1234": 216, "user_model": 216, "model_format": [216, 218], "union": [216, 246, 356], "lm": 216, "get_model": 216, "create_from_arg_str": 216, "taken": [216, 251, 252], "eval_harness_nam": 216, "__name__": 216, "num_fewshot": 216, "shot": 216, "context": [216, 221], "batch": [216, 223, 246, 356, 378, 386, 404, 405, 407, 414], "cuda": [216, 377], "run": [216, 239, 246, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 366, 377, 397, 413, 414, 420], "bool": [216, 224, 225, 232, 246, 249, 251, 252, 253, 353, 354, 355, 356, 366, 379, 385, 400, 401, 416, 417], "whether": [216, 224, 232, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 372, 385, 387, 393, 413, 428], "cach": [216, 232, 354, 392, 402, 405, 406, 407, 413], "test": [216, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 376, 378, 380, 383, 395, 397, 411, 413, 414], "bootstrap": 216, "statist": 216, "dictionari": [216, 236, 246], "descript": [216, 246, 376, 377, 379, 387, 409, 416, 417, 419, 420], "task_nam": [216, 390, 391], "relev": [216, 378, 397], "suit": [216, 397], "provid": [216, 223, 224, 227, 232, 239, 240, 246, 251, 252, 256, 258, 347, 365, 366, 378, 380, 381, 382, 385, 394, 397, 398, 401, 406, 408, 416, 420], "autocausallm": 218, "pretrain": [218, 251, 252, 385, 397], "causal": [218, 252, 377], "languag": [218, 251, 252, 347, 375, 377, 378, 380, 418], "find": [218, 356, 365, 385, 388, 392, 393, 397, 404, 419], "hf": 218, "document": [218, 246, 347, 348, 376, 377, 378, 379, 382, 396, 397, 405, 407, 408, 409, 419, 420], "model_doc": 218, "auto": [218, 224, 230, 240, 377, 387, 392, 401], "automodelforcausallm": 218, "autoseq2seqlm": 218, "seq2seq": [218, 246, 251, 252], "automodelforseq2seqlm": 218, "multitokeneoscriteria": 218, "initial_decoder_input_length": 218, "criteria": [218, 417], "lambada": [220, 366], "word": [221, 251, 252, 380, 409], "predict": [221, 230, 246, 251, 252, 365, 377, 378, 379], "broad": 221, "discours": 221, "arxiv": [221, 251], "pdf": 221, "1606": 221, "06031": 221, "capabl": [221, 366, 397, 406, 409], "text": [221, 256, 347, 366, 378, 380, 391, 397, 401, 410, 415, 418], "understand": [221, 397, 402, 405], "collect": [221, 224, 366, 385, 387, 420], "narr": 221, "passag": 221, "share": [221, 246, 402], "characterist": [221, 375], "human": 221, "subject": [221, 415], "abl": [221, 407, 420], "guess": 221, "expos": [221, 400, 401], "sentenc": [221, 251, 252, 256, 366, 377, 378], "preced": 221, "succe": 221, "cannot": [221, 252, 356, 399, 405, 409, 414], "simpli": 221, "reli": 221, "local": [221, 232, 246, 385, 399, 402, 405], "keep": [221, 389, 396], "track": 221, "inform": [221, 240, 243, 346, 349, 352, 357, 363, 375, 376, 378, 379, 386, 387, 395, 397, 401, 404, 411, 412, 413, 419, 420, 421, 425], "broader": 221, "homepag": 221, "zenodo": 221, "2630551": 221, "x4xzn5nkjui": 221, "lambadastandard": 221, "standard": [221, 232], "lambadaopenai": 221, "openai": 221, "gpt": [221, 347, 377, 378, 380, 396], "github": [221, 256, 258, 376, 377, 378, 383, 384, 386, 392, 415, 421], "com": [221, 256, 258, 377, 378, 383, 384, 386, 395, 411, 415, 421], "issu": [221, 346, 365, 372, 375, 376, 378, 406, 420, 428], "131": [221, 395], "issuecom": 221, "497136199": 221, "pytorchbenchmark": 223, "executorbenchmark": 223, "refactor_batch_s": 223, "old_batch_s": 223, "batched_valu": 223, "get_example_input": [223, 366], "dataload": [223, 239, 246, 255, 366, 378], "batched_data": 223, "preprocess_model": 223, "example_input": [223, 366], "additional_cmd": 223, "jit": [223, 224, 246, 353, 354, 355, 356, 366, 370, 398, 400, 401, 404, 408, 413, 426], "trace": [223, 224, 366, 387], "benchmarkconfig": [223, 224, 366], "process": [223, 224, 230, 235, 236, 243, 246, 256, 365, 378, 380, 385, 386, 388, 389, 393, 394, 397, 399, 400, 402, 405, 406, 409, 419, 420], "raw_cmd": 223, "scriptmodul": 223, "model_name_or_path": [223, 232, 246, 256, 366, 377], "build": [223, 236, 240, 246, 365, 378, 383, 384, 396, 397, 399, 405, 406, 410, 417], "inc": [224, 232, 239, 240, 246, 391], "nncf": 224, "check_valu": 224, "src": [224, 356, 386, 401, 409, 413], "supported_typ": 224, "supported_valu": 224, "def": [224, 365, 366, 378, 385], "datatyp": [224, 380, 381], "uint8": [224, 407, 420], "_datatyp": 224, "dynamiclengthconfig": [224, 246, 382], "max_length": [224, 366, 378], "length_config": [224, 251, 252, 382], "const_rat": 224, "float": [224, 225, 240, 243, 244, 246, 249, 253, 356, 377, 379, 381, 385, 391, 400, 401, 402, 416, 417, 419, 420], "num_sandwich": 224, "length_drop_ratio_bound": [224, 226], "layer_dropout_prob": [224, 226], "layer_dropout_bound": [224, 226], "dynamic_train": 224, "load_store_fil": 224, "evo_it": 224, "30": [224, 397, 403], "population_s": 224, "20": [224, 366, 378, 383, 386, 391, 395, 403, 410, 411], "mutation_s": 224, "mutation_prob": [224, 227], "crossover_s": 224, "num_cpu": 224, "48": [224, 395, 396, 411], "distributed_world_s": 224, "latency_constraint": 224, "evo_eval_metr": 224, "eval_f1": [224, 227, 382, 416, 420], "dynam": [224, 229, 246, 392, 394, 397, 398, 400, 404, 406, 413, 427], "adapt": [224, 347, 375, 378, 397], "maximum": [224, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 394, 395, 411, 420], "drop": [224, 226, 380, 406, 409, 416], "ratio": [224, 226, 227, 243, 379, 411, 413, 416, 417, 419], "sandwich": 224, "num": [224, 365, 377, 387, 399, 401, 407], "train": [224, 230, 236, 239, 240, 243, 246, 347, 365, 377, 378, 379, 382, 412, 419], "dropout": [224, 226], "probabl": [224, 226, 365, 397, 406], "evolut": [224, 228, 229, 380], "popul": [224, 227], "mutat": [224, 227], "crossov": [224, 227], "distribut": [224, 255, 365, 379, 397, 406, 420, 421], "world": 224, "latenc": [224, 365, 366, 378, 380, 387, 395, 402, 420], "constraint": [224, 227, 420], "metric": [224, 229, 230, 236, 240, 246, 248, 365, 378, 382, 424], "quantizationconfig": [224, 239, 240, 246, 378, 382], "approach": [224, 236, 238, 377, 379, 380, 382, 401, 402], "posttrainingstat": [224, 380, 381, 382, 420], "basic": [224, 236, 252, 255, 378, 383, 392, 405], "timeout": [224, 420], "max_trial": [224, 365, 420], "100": [224, 246, 251, 252, 378, 397, 413, 420], "config_fil": 224, "sampling_s": 224, "use_bf16": 224, "recip": [224, 246, 377, 388, 417], "earli": [224, 420], "combin": [224, 246, 365, 388, 393, 397, 400, 401, 420], "decid": [224, 404, 420], "exit": [224, 420], "time": [224, 387, 394, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 420], "evalu": [224, 227, 230, 236, 239, 240, 243, 246, 365, 379, 387, 397, 407, 416, 417, 419, 420], "accuraci": [224, 230, 246, 365, 379, 380, 382, 396, 405, 413, 416, 417, 419], "notraineroptim": [224, 239, 379, 419, 420], "guarante": [224, 420], "mani": [224, 226, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 385, 387, 389, 400, 402, 403, 406, 408, 413], "sampl": [224, 226, 246, 256, 365, 366, 377, 378, 382, 395, 407, 420], "neural_compressor": [224, 239, 246], "smooth_quant": 224, "smooth": 224, "smooth_quant_arg": 224, "fast_bias_correct": 224, "correct": [224, 375, 389, 393, 397, 407], "weight_correct": 224, "gemm_to_matmul": 224, "graph_optimization_level": 224, "disable_al": 224, "enable_bas": 224, "enable_extend": 224, "enable_al": 224, "first_conv_or_matmul_quant": 224, "last_conv_or_matmul_quant": 224, "pre_post_process_quant": 224, "postprocess": 224, "add_qdq_pair_to_weight": 224, "qdq": [224, 246, 381, 390], "vaild": 224, "onnxrt_trt_ep": 224, "optypes_to_exclude_output_qu": 224, "optyp": 224, "dedicated_qdq_pair": 224, "dedic": 224, "pruningconfig": [224, 382], "epoch": [224, 243, 419], "epoch_rang": [224, 244], "initial_sparsity_ratio": [224, 244], "target_sparsity_ratio": [224, 244, 382, 419], "97": [224, 244, 411, 419], "pruner_config": [224, 382, 419], "pruner": [224, 229, 244, 246, 379, 419], "prune": [224, 229, 239, 240, 242, 246, 251, 252, 347, 378, 424], "goal": [224, 246, 419], "behavior": [224, 246, 375, 376, 379, 397, 399, 400, 405, 419, 420], "nlp": [224, 246, 256, 258, 347, 377, 378, 380, 382, 386, 419, 420], "wil": 224, "basicmagnitud": [224, 244, 380, 382, 419], "typel": 224, "init_prune_config": 224, "init": [224, 230, 239, 240, 242, 254, 255, 365, 384, 386, 401], "distillationconfig": [224, 246, 382], "criterion": [224, 225, 240, 249, 382, 416, 420], "distil": [224, 229, 230, 239, 240, 246, 377, 378, 391, 424], "inc_config": 224, "knowledgeloss": [224, 225, 379], "tfdistillationconfig": [224, 365], "loss_typ": [224, 225, 365, 379], "loss_weight": [224, 365], "train_step": [224, 365], "temperatur": [224, 225, 256, 365, 377, 379], "loss": [224, 246, 251, 252, 365, 377, 379, 420], "knowledgedistillationloss": [224, 379], "flashdistillationconfig": 224, "block_nam": [224, 365], "layer_mappings_for_knowledge_transf": [224, 365], "add_origin_loss": [224, 225, 365, 379], "flash": [224, 230, 246], "autodistillationconfig": [224, 365], "search_spac": [224, 236, 365], "search_algorithm": [224, 365], "bo": [224, 365, 415], "knowledge_transf": [224, 365], "regular_distil": [224, 365], "disil": 224, "space": [224, 230, 236, 246, 365, 375, 376, 388, 397, 399, 402], "bayesian": [224, 365], "architectur": [224, 230, 236, 240, 246, 251, 252, 365, 378, 383, 399, 406, 408], "candid": 224, "trial": [224, 246], "random": [224, 251, 365, 397, 406], "knowledg": [224, 246, 347, 365, 377, 378], "transfer": [224, 246, 255, 379], "stage": [224, 230, 246, 365], "autodistil": [224, 230, 240, 246, 424], "regular": [224, 230, 419], "nasconfig": [224, 236, 238], "parser": 224, "procedur": [224, 413], "backend": [224, 246, 254, 366, 378, 380, 382, 383, 384, 385, 388, 390, 393, 394, 398, 413, 420], "warmup": [224, 366, 388, 394], "cores_per_inst": [224, 246, 366], "num_of_inst": [224, 246, 366], "benchmark": [224, 229, 246, 247, 378, 388, 395, 398, 411, 414, 424], "skip": [224, 366, 402, 414], "core": [224, 366, 386, 395, 396, 397, 399, 405, 406, 411, 414, 415], "enabl": [224, 366, 381, 382, 395, 397, 399, 405, 406, 410, 411], "prunerv2": 224, "target_spars": 224, "pruning_typ": 224, "op_nam": 224, "excluded_op_nam": 224, "start_step": 224, "end_step": 224, "pruning_scop": 224, "pruning_frequ": 224, "min_sparsity_ratio_per_op": 224, "max_sparsity_ratio_per_op": 224, "sparsity_decay_typ": 224, "pruning_op_typ": 224, "reg_typ": [224, 401], "criterion_reduce_typ": 224, "resume_from_pruned_checkpoint": 224, "similiar": 224, "weightpruningconfig": 224, "pruning_config": [224, 239, 240, 246, 382, 419], "snip_momentum": 224, "4x1": [224, 387, 399, 409], "global": 224, "98": [224, 411], "exp": [224, 401, 408, 413], "linear": [224, 365, 379, 401, 404, 407], "ce": [225, 365, 379], "loss_weight_ratio": [225, 379], "layer_map": [225, 379], "distillationcriterionmod": 225, "restor": [226, 380], "sample_length_configur": 226, "max_seq_length": [226, 227], "num_hidden_lay": 226, "layer_config": [226, 251, 252], "length_drop_prob": 226, "length_drop_ratio": 226, "min_length": 226, "hidden": [226, 251, 252, 365, 402], "truncat": [226, 378], "less": [226, 366, 379, 388, 397, 405, 409, 419], "min": [226, 246, 420], "sample_layer_configur": 226, "layer_dropout": 226, "depend": [226, 236, 376, 384], "paramat": 226, "bound": 226, "kept": [226, 397], "evolust": 227, "evolustionari": 227, "approx_ratio": 227, "12": [227, 383, 384, 387, 395, 396, 403, 407, 410, 411, 413], "l": [227, 365, 379, 396, 397], "384": [227, 365, 388, 395, 411], "approxim": [227, 408], "invers": [227, 408], "store2str": 227, "gene": 227, "mac": 227, "score": [227, 251, 252, 418], "parent": 227, "parmat": 227, "lower_constraint": 227, "upper_constraint": 227, "eval_metr": 227, "evolutionari": [227, 246], "load_stor": 227, "store_fil": 227, "save_stor": 227, "get_stor": 227, "set_lower_constraint": 227, "setter": [227, 251, 252], "lower": [227, 256, 397, 409, 417, 420], "set_upper_constraint": 227, "upper": [227, 401], "save_popul": 227, "population_fil": 227, "convex_hul": 227, "pareto_fronti": 227, "add_gen": 227, "rai": 227, "packag": [228, 231, 347, 377, 378], "drop_and_restore_util": [228, 229], "mixtur": 229, "auto_distil": [229, 231, 365], "basic_na": [229, 237], "get_throughput": [229, 248], "utility_tf": [229, 248], "optimizer_tf": 229, "trainer": [229, 239, 363, 378, 380, 381, 382], "handl": [230, 246, 251, 252, 346, 354, 365, 392, 403, 404], "model_build": [230, 236, 240, 246, 365], "conf_fname_or_obj": [230, 236, 238], "design": [230, 246, 385, 397, 400, 401, 412, 424], "three": [230, 243, 244, 245, 246, 365, 378, 385, 389, 393, 407, 408, 419, 420], "major": [230, 246, 365, 399, 405, 406, 408, 409, 420], "explor": [230, 246, 365, 382], "compress": [230, 246, 347, 365, 379, 382, 399, 403, 405, 409, 412, 420], "discov": [230, 246, 365], "potenti": [230, 246, 356, 365, 376, 397, 406], "measur": [230, 246, 365, 366, 379, 398, 416, 417, 419, 420], "hardwar": [230, 246, 365, 376, 379, 410, 412], "select": [230, 246, 251, 252, 365, 397, 401, 413], "best": [230, 236, 246, 365, 375, 380, 397], "res_save_path": [230, 236], "model_cl": [230, 240, 246, 365], "found": [230, 236, 378, 384, 385, 409], "estim": [230, 236, 387, 409], "load_search_result": 230, "init_by_cfg": [230, 236], "create_distil": 230, "optimizedmodel": 232, "from_pretrain": [232, 251, 252, 366, 378, 382, 418], "function": [232, 236, 239, 240, 243, 246, 353, 354, 355, 365, 379, 385, 388, 389, 392, 393, 394, 397, 400, 401, 413, 416, 419, 420], "classmethod": [232, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "intel": [232, 256, 346, 366, 376, 382, 384, 385, 386, 395, 396, 399, 410, 411, 415, 417, 418, 419, 420, 421], "compressor": [232, 235, 240, 347, 366, 378, 417, 420], "repositori": [232, 378], "hug": [232, 347, 378, 390], "face": [232, 347, 348, 375, 378, 390], "hub": [232, 418], "directori": [232, 239, 390, 412], "host": 232, "cache_dir": 232, "download": [232, 251, 252, 421], "force_download": 232, "forc": 232, "resume_download": 232, "incomplet": 232, "attempt": 232, "resum": [232, 246], "revis": 232, "branch": [232, 413], "tag": 232, "commit": [232, 375, 414], "sinc": [232, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 379, 405, 406, 408], "git": [232, 377, 378, 383, 384, 386], "system": [232, 378, 384], "artifact": 232, "huggingfac": [232, 256, 378, 391, 416, 418], "allow": [232, 366, 397], "q_model": 232, "incencod": 235, "incdecod": 235, "pretrainedconfig": 235, "basicna": 236, "conf_fnam": 236, "obj": [236, 238], "execut": [236, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 354, 365, 378, 388, 392, 398, 400, 401, 405, 406, 408, 410, 413, 414, 420], "common": [238, 375, 378, 420], "nasbas": 238, "orchestr": [239, 246], "orchestrate_optim": [239, 246], "compon": [239, 246, 400, 415], "experiment": [239, 246, 396, 401], "eval_func": [239, 240, 246, 365], "train_func": [239, 240, 246, 365], "saved_result": [239, 378], "aggreg": 239, "fit": [239, 402], "schedul": [239, 246, 365, 370, 398, 426], "save_model": [239, 255, 378], "json": [239, 256, 377], "pytorch_model": 239, "init_quant": [239, 240, 246, 400], "quant_config": [239, 240, 246, 378, 382, 420], "calib_func": 239, "calib_dataload": [239, 246], "prepar": [239, 240, 251, 252, 377, 387, 389, 392, 400, 401, 409, 420], "invok": [239, 240], "_inc_quant": 239, "calibr": [239, 246, 420], "init_prun": [239, 240, 246], "init_distil": [239, 240, 246], "distillation_config": [239, 240, 246, 379, 382], "teacher_model": [239, 240, 246, 365, 379, 382], "teacher": [239, 240, 365, 379, 380], "tfoptim": [240, 365, 379], "pretrainedmodel": [240, 246, 365], "training_args_tf": 240, "tftrainingargu": 240, "train_dataset": [240, 365, 378, 382], "eval_dataset": [240, 365, 378, 382], "compute_metr": [240, 365, 378], "task_typ": [240, 255], "task_id": [240, 255], "techniqu": [240, 378, 380, 382, 397, 420], "builtin_eval_func": [240, 246], "saved_model": 240, "quantized_model_path": 240, "larger": [240, 246, 397], "model_builder_builtin": [240, 246, 365], "arch_para": [240, 246], "built": [240, 365, 397, 417], "builder": [240, 365], "autodistillation_config": [240, 246, 365], "build_train_func": 240, "infer_framework_load_model": 241, "autoconfig": [241, 378, 382, 418], "model_class": 241, "model_kwarg": [241, 251, 252, 418], "config_file_path": 243, "pruner_info": 243, "update_config": 243, "current": [243, 244, 245, 387, 396, 397, 400, 401, 402, 404, 405, 407, 412, 413], "get_sparsity_ratio": 243, "elementwise_over_matmul_gemm_conv": 243, "elementwise_over_al": 243, "blockwise_over_matmul_gemm_conv": 243, "block": [243, 251, 252, 380, 394, 399, 402, 403, 404, 405, 406, 408, 409, 419], "on_train_begin": 243, "implement": [243, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 370, 378, 385, 388, 389, 393, 396, 398, 399, 400, 402, 404, 405, 406, 407, 408, 410, 413, 426], "begin": [243, 252, 365, 397, 400, 401], "ensur": [243, 397, 405], "on_epoch_begin": 243, "on_step_begin": 243, "local_step": 243, "on_before_optimizer_step": 243, "on_step_end": 243, "on_epoch_end": 243, "on_train_end": 243, "phase": [243, 379, 419], "on_before_ev": 243, "on_after_ev": 243, "on_after_optimizer_step": 243, "pruningmod": 244, "prunerconfig": [244, 382], "update_frequ": 244, "prune_typ": [244, 382, 419], "per_tensor": 244, "quantizationmod": 245, "easili": [246, 399, 400], "finetun": [246, 378, 380, 382, 418], "basetrain": 246, "builtin_train_func": 246, "automativ": 246, "low": [246, 378, 382, 397, 399, 406, 408, 417, 420, 429], "achiev": [246, 378, 397, 402, 417], "pruningconf": 246, "smaller": [246, 379, 397, 419], "config_list": 246, "optimizt": 246, "create_optimizer_builtin": 246, "resume_from_checkpoint": 246, "optuna": 246, "ignore_keys_for_ev": 246, "tor": 246, "checkpoint": [246, 251], "present": [246, 251, 408], "state": [246, 251, 252, 378, 395, 397, 411], "hyperparamet": [246, 365, 397], "dure": [246, 386, 394, 397, 405, 409, 414, 417, 419, 420], "hide": [246, 251, 252], "deprec": [246, 251, 252], "training_step": 246, "inject": [246, 397, 401], "being": [246, 397], "fed": 246, "most": [246, 378, 389, 393, 394, 397, 400, 401, 402, 405, 407, 418], "expect": [246, 251, 252, 375, 376, 397, 409, 417], "label": [246, 251, 252, 256, 377, 414, 418], "accept": [246, 375, 418], "training_step_length_adapt": 246, "compute_loss": 246, "return_output": 246, "By": [246, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 397], "nas_config": 246, "baseic": 246, "callabel": 246, "auto_distil_evaluation_loop": 246, "prediction_loss_onli": 246, "ignore_kei": 246, "metric_key_prefix": 246, "eval": [246, 365, 416], "trainer_util": 246, "evalloopoutput": 246, "doe": [246, 385, 400, 401, 402, 403, 404, 407, 413], "huge": 246, "prefix": [246, 413], "export_to_onnx": [246, 378, 381], "tranfer": 246, "paramert": 246, "export_to_fp32_onnx": 246, "save_path": [246, 381], "opset_vers": [246, 381], "14": [246, 381, 395, 403, 410, 411], "do_constant_fold": [246, 381], "verbos": [246, 381, 397], "export": [246, 378, 387, 390, 418, 424], "fold": [246, 413], "export_to_bf16_onnx": 246, "export_to_int8_onnx": 246, "quant_format": [246, 381], "s8s8": [246, 381, 405], "sample_s": 246, "calibrate_method": 246, "minmax": 246, "scale_map": [246, 378], "export_to_jit": 246, "set_dynamic_config": [246, 382], "dynamic_config": [246, 382], "run_evolutionary_search": 246, "nlptrainer": [246, 378, 379, 382, 419, 420], "nlpseq2seqtrain": 246, "special": [247, 401, 407], "trigger": [247, 376, 397], "greater_is_bett": [249, 253, 365, 382, 416, 417, 420], "is_rel": [249, 382, 416, 420], "01": [249, 382, 411, 416, 420], "weight_ratio": [249, 253, 416, 417, 420], "modeling_bert_dynam": 250, "modeling_roberta_dynam": 250, "bert": [251, 365, 378, 379, 380, 386, 387, 388, 391, 393, 394, 395, 400, 405, 406, 407, 408], "load_tf_weights_in_bert": 251, "tf_checkpoint_path": 251, "bertembed": [251, 252], "posit": [251, 252, 375, 378, 382, 388, 393, 397, 413, 418], "token_typ": 251, "forward": [251, 252, 365, 387, 392, 420], "longtensor": [251, 252], "token_type_id": [251, 252, 394], "position_id": [251, 252], "inputs_emb": [251, 252], "floattensor": [251, 252], "past_key_values_length": [251, 252], "bertselfattent": 251, "position_embedding_typ": [251, 252], "transpose_for_scor": [251, 252], "hidden_st": [251, 252], "attention_mask": [251, 252, 394], "head_mask": [251, 252], "encoder_hidden_st": [251, 252], "encoder_attention_mask": [251, 252], "past_key_valu": [251, 252], "output_attent": [251, 252], "bertselfoutput": 251, "bertattent": 251, "prune_head": [251, 252], "bertintermedi": 251, "intermedi": [251, 365, 385, 390, 393, 409, 420], "bertoutput": 251, "bertlay": 251, "output_length": [251, 252], "always_keep_cls_token": [251, 252], "feed_forward_chunk": [251, 252], "attention_output": [251, 252], "feed": [251, 252, 379, 386], "chunk": 251, "bertencod": 251, "use_cach": [251, 252], "output_hidden_st": [251, 252], "return_dict": [251, 252], "modeling_output": [251, 252], "basemodeloutputwithpastandcrossattent": [251, 252], "bertpool": 251, "pooler": [251, 252], "bertpredictionheadtransform": 251, "bertlmpredictionhead": 251, "bertonlymlmhead": 251, "mask": [251, 252, 356, 380, 400, 401, 403, 405, 408], "sequence_output": 251, "bertonlynsphead": 251, "pooled_output": 251, "bertpretraininghead": 251, "bertpretrainedmodel": 251, "abstract": [251, 252], "simpl": [251, 252, 378, 383, 386, 396, 400, 408, 418], "bertforpretrainingoutput": 251, "bertforpretrain": 251, "sum": [251, 366, 379, 387, 406, 408, 409, 413], "classif": [251, 252, 347, 365, 378, 379, 380, 391, 418], "prediction_logit": [251, 252], "sequence_length": [251, 252], "vocab_s": [251, 252], "vocabulari": 251, "seq_relationship_logit": 251, "continu": [251, 397, 399, 402, 406, 407], "hidden_s": [251, 252, 365], "plu": 251, "num_head": [251, 252], "averag": [251, 366, 378, 387], "bertmodel": 251, "add_pooling_lay": [251, 252], "behav": [251, 252], "well": [251, 252, 381, 420, 421], "case": [251, 252, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 379, 380, 387, 388, 394, 397, 399, 401, 402, 403, 413, 414], "cross": [251, 252], "ad": [251, 252, 385, 389, 393, 397, 400, 409, 413, 418], "describ": [251, 252, 355, 377, 402, 404, 407, 413, 416, 417], "ab": [251, 420], "1706": [251, 395, 411], "03762": 251, "ashish": [251, 252], "vaswani": [251, 252], "noam": [251, 252], "shazeer": [251, 252], "niki": [251, 252], "parmar": [251, 252], "jakob": [251, 252], "uszkoreit": [251, 252], "llion": [251, 252], "jone": [251, 252], "aidan": [251, 252], "gomez": [251, 252], "lukasz": [251, 252], "kaiser": [251, 252], "illia": [251, 252], "polosukhin": [251, 252], "is_decod": [251, 252], "add_cross_attent": [251, 252], "get_input_embed": [251, 252], "getter": [251, 252], "set_input_embed": [251, 252], "set_length_config": [251, 252], "set_output_attent": [251, 252], "basemodeloutputwithpoolingandcrossattent": [251, 252], "pad": [251, 252, 366, 378, 387, 405, 409, 413], "indic": [251, 252, 356, 393, 400, 401, 407, 409, 413, 416], "n_layer": [251, 252], "embed_size_per_head": [251, 252], "precomput": [251, 252], "speed": [251, 252, 385, 389, 397], "decoder_input_id": [251, 252], "those": [251, 252, 407, 419, 420], "instead": [251, 252, 397, 402], "get_output_embed": [251, 252], "set_output_embed": [251, 252], "new_embed": [251, 252], "next_sentence_label": 251, "docstr": [251, 252], "legaci": [251, 252], "berttoken": 251, "uncas": [251, 365, 378, 380, 382, 390, 418], "hello": [251, 252, 397], "my": [251, 252], "dog": [251, 252], "cute": [251, 252], "return_tensor": [251, 252, 366, 378, 382], "pt": [251, 252, 366, 378, 382, 418], "bertlmheadmodel": 251, "causallmoutputwithcrossattent": [251, 252], "prepare_inputs_for_gener": [251, 252], "bertformaskedlm": 251, "maskedlmoutput": [251, 252], "bertfornextsentencepredict": 251, "nextsentencepredictoroutput": 251, "prompt": 251, "itali": 251, "pizza": 251, "serv": 251, "formal": 251, "restaur": 251, "unslic": 251, "next_sent": 251, "sky": 251, "blue": 251, "shorter": [251, 397], "wavelength": 251, "light": 251, "logit": [251, 252, 365, 378, 379, 382, 386], "wa": 251, "bertforsequenceclassif": 251, "sequenceclassifieroutput": [251, 252], "regress": [251, 252, 377], "num_label": [251, 252, 378, 382], "entropi": [251, 252, 365, 397], "bertformultiplechoic": 251, "choic": [251, 252, 380, 394], "multiplechoicemodeloutput": [251, 252], "num_choic": [251, 252], "dimens": [251, 252, 365, 379, 388, 404, 405, 407, 409, 413], "bertfortokenclassif": 251, "tokenclassifieroutput": [251, 252], "bertforquestionansw": 251, "question": [251, 375, 376, 378, 380, 403], "answer": [251, 252, 375, 380], "start_posit": [251, 252], "end_posit": [251, 252], "questionansweringmodeloutput": [251, 252], "span": [251, 252], "clamp": [251, 252], "account": [251, 252, 375], "expand_gath": [251, 252], "dim": [251, 252, 386, 392, 399, 405, 409, 413], "roberta": [252, 380], "robertaembed": 252, "tini": [252, 380], "tweak": 252, "create_position_ids_from_inputs_emb": 252, "directli": [252, 397, 400, 403, 406], "sequenti": [252, 389, 400, 401, 404], "robertaselfattent": 252, "robertaselfoutput": 252, "robertaattent": 252, "attenion": 252, "robertaintermedi": 252, "intermidi": 252, "robertaoutput": 252, "robertalay": 252, "robertaencod": 252, "roberata": 252, "robertapool": 252, "robertapretrainedmodel": 252, "update_keys_to_ignor": 252, "del_keys_to_ignor": 252, "robertamodel": 252, "_": [252, 365, 377, 379, 384, 385, 386, 387, 388, 389, 390, 392, 393, 397, 398, 399, 400, 401, 405, 406, 407, 408, 413, 416, 417, 418, 419, 420], "robertaforcausallm": 252, "robertatoken": 252, "robertaconfig": 252, "robertaformaskedlm": 252, "robertalmhead": 252, "featur": [252, 347, 365, 374, 376, 378, 379, 390, 393, 396, 399, 406, 410, 418, 421, 430], "robertaforsequenceclassif": 252, "robertaformultiplechoic": 252, "robertafortokenclassif": 252, "robertaclassificationhead": 252, "robertaforquestionansw": 252, "quanstion": 252, "create_position_ids_from_input_id": 252, "padding_idx": 252, "non": [252, 397, 404, 407, 409, 413, 414], "symbol": 252, "fairseq": 252, "make_posit": 252, "models": [253, 380, 417], "distributed_init": [254, 255], "gloo": 254, "world_siz": 254, "rank": [254, 397], "init_method": 254, "master_addr": 254, "127": [254, 387, 410, 411, 420], "master_port": 254, "12345": 254, "distibut": 254, "tfdataload": 255, "worker_address": 255, "worker": 255, "address": [255, 347, 375, 400, 405, 406], "treat": [255, 385], "chief": 255, "get_filepath": 255, "base_dirpath": 255, "folder": [255, 384, 385, 386, 387, 388, 390], "keras2savedmodel": 255, "kera": 255, "augment": [256, 258, 424], "extens": [256, 376, 382, 384, 385, 386, 415, 417, 418, 419, 421], "blob": 256, "md": [256, 387, 390], "dataaugment": [256, 377], "augmenter_typ": [256, 377], "wai": [256, 378, 387, 388, 389, 393, 396, 397, 399, 401, 407, 410], "enhanc": [256, 382, 404], "textgenerationaug": [256, 377], "keyboardaug": [256, 377], "aug": [256, 347, 377], "input_dataset": [256, 377], "origin_data": 256, "output_path": [256, 377, 396], "join": [256, 377], "result_path": [256, 377], "test1": [256, 377], "cv": [256, 377], "augmenter_argu": [256, 377], "gpt2": [256, 377], "medium": [256, 347, 377, 378, 414], "data_aug": [256, 377], "text_generation_augment": 256, "raw_dataset": [256, 377, 378, 382], "No": [256, 380], "glue": [256, 377, 378], "sst2": [256, 366, 377, 378, 380, 387, 391], "eo": [256, 377, 397], "k": [256, 356, 377, 388, 400, 402, 403, 404, 405, 407, 408, 409, 411, 413], "p": [256, 377, 378, 396], "top_p": [256, 397], "effect": [256, 347, 377, 378, 385, 397, 413], "tend": 256, "toward": [256, 375], "greedi": 256, "repetition_penalti": 256, "primarili": [256, 397], "ctrl": [256, 377, 380, 397], "num_return_sent": 256, "entir": [256, 387, 399, 405, 406, 419], "num_sampl": 256, "condit": [256, 377, 388, 389, 415], "stop_token": 256, "mit_data_augment": 256, "nlpaug": [256, 258, 377], "librari": [256, 258, 370, 376, 400, 401, 426], "help": [256, 258, 377, 378, 393, 397, 400, 412], "machin": [256, 258, 377, 413], "learn": [256, 258, 347, 377, 390, 397, 401, 417, 420], "project": [256, 258, 375, 376, 377, 396], "makcedward": [256, 258], "suffix": 256, "csv": [256, 377], "column_nam": 256, "sentence1": 256, "sentence2": 256, "data_augment": [257, 377], "augmentertyp": 258, "get_augmenter_from_typ": 258, "aug_typ": 258, "augment_typ": 258, "testaddclstoken": 260, "methodnam": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "runtest": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "whose": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 365, 393], "singl": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 396, 402, 407], "itself": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 410], "place": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 394, 401, 406, 419], "fixtur": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "testcas": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "constructor": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 392], "author": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 415], "deconstruct": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "setup": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "teardown": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "__init__": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 385], "alwai": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 393, 397, 405, 414], "chang": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 376, 385, 396, 397, 399, 400, 409, 414, 415], "signatur": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "failureexcept": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "determin": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375, 388, 397, 410], "except": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 388, 397, 400], "rais": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 397], "fail": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "deem": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375], "longmessag": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "long": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 393], "messag": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 397], "includ": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 354, 355, 356, 375, 376, 378, 380, 386, 387, 388, 397, 398, 401, 409, 413, 415, 420], "repr": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "print": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 385, 393, 397], "failur": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "explicit": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 354, 375, 392, 401], "maxdiff": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "diff": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "difflib": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "look": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 385, 387, 397, 401, 402], "individu": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 375], "setupclass": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "hook": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "teardownclass": [260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "testaddembed": 261, "testtorchop": [262, 265, 268, 270, 271, 272, 277, 280, 284, 285, 294, 295, 297, 299, 300, 306, 310, 313, 315, 324, 325, 326, 329, 334, 339], "testattentionreshap": [263, 264, 319, 322], "testtorchmodel": [266, 286], "testbinaryop": 267, "testcastto": 269, "testconvreshap": 273, "testdecoderattnreshap": 274, "testdispatchertuningacc": 275, "testdispatchertuningthroughput": 276, "testdynamicquant": 278, "testelectra": 279, "testembeddingbag": 281, "testexecutionopt": [282, 288], "testfwk": 283, "testgraphdispatch": 287, "testinsertinputouputdata": 289, "testissupportedonnxgraph": 290, "testlastlayershap": 291, "testlayernormwithreducemean": [292, 321, 323], "testlayernormwithtranspos": 293, "testtorchlinear": [296, 336], "testmain": 298, "testmatmulwithbiasrelu": 301, "testmatmulwithbiassigmoid": 302, "testmatmulwithbiastanh": 303, "testmergedembeddingbag": 304, "testonnxutil": 307, "testoperatoradaptor": 308, "testop": 309, "testpaddingsequ": 311, "testpatterndispatch": 312, "testpositionembed": 314, "testprimitivecacheacc": 316, "testprimitivecachethroughput": 317, "testqkvmerg": 318, "testquantonnxexecut": 320, "teststartendlogit": 327, "testscbuff": 328, "testtextencod": 330, "testtextencoderbf16": 331, "testtfutil": 332, "testtokentypeembed": 333, "testtransposebatchmatmul": 335, "testunet": 337, "testunetbf16": 338, "testvaedecod": 340, "testvaedecoderbf16": 341, "testweightsharingacc": 342, "testweightsharingdispatchertuningacc": 343, "testweightsharingdispatchertuningthroughput": 344, "testweightsharingthroughput": 345, "center": 346, "guidelin": 346, "innov": [347, 378], "toolkit": [347, 378, 380], "particular": 347, "4th": [347, 378], "xeon": [347, 378, 380, 383, 399, 408, 411, 415, 420], "scalabl": [347, 378, 380, 383, 400], "processor": [347, 378, 380, 383, 395, 411], "sapphir": [347, 378, 383], "rapid": [347, 378, 383], "codenam": 347, "seamless": [347, 378, 397], "experi": [347, 375, 378, 397, 403, 408, 409], "extend": [347, 378, 402], "leverag": [347, 365, 378, 379, 382, 397], "advanc": [347, 365, 375, 378, 398, 410], "softwar": [347, 378, 415], "uniqu": [347, 378], "awar": [347, 378], "runtim": [347, 356, 378, 410, 413, 420], "releas": [347, 378, 425], "neurip": [347, 378], "2022": [347, 378, 395, 411], "paper": [347, 378, 382], "distilbert": [347, 365, 378, 380, 382, 390, 418], "quala": [347, 378, 380, 382], "minilm": [347, 378, 380, 382], "2021": [347, 378], "onc": [347, 378, 387, 397, 408], "pre": [347, 378, 389, 402, 412], "diffus": [347, 378, 380, 405], "j": [347, 378, 380, 384, 385, 386, 396, 398, 404, 409, 410, 413], "6b": [347, 378, 380], "neox": [347, 378, 396], "bloom": [347, 378], "176b": [347, 378], "t5": [347, 378, 380], "flan": [347, 378], "workflow": [347, 378, 379, 388, 390, 407], "setfit": [347, 378], "sentiment": [347, 378], "analysi": [347, 378], "dlsa": [347, 378], "neuralchat": [347, 378], "chatbot": [347, 378], "through": [347, 366, 378, 385, 400, 403, 404, 405, 410], "effici": [347, 378, 382, 394], "peft": [347, 378], "domain": [347, 370, 378, 397, 398, 426], "blog": [347, 378], "publish": [347, 375, 378, 415], "april": 347, "2023": [347, 415], "tech": 347, "artifici": 347, "intellig": 347, "ai": [347, 378], "With": [347, 408, 420], "mlperf": 347, "bar": 347, "5x": 347, "commun": [347, 375], "mleffici": [347, 378], "dec": [347, 378], "nov": [347, 378], "coher": [347, 397, 406], "novemb": 347, "alibaba": 347, "deep": [347, 377, 378, 390, 401, 417, 420], "purif": 347, "kernel": [348, 356, 374, 386, 387, 392, 395, 396, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 411, 412, 430], "namespac": [353, 354, 355, 356], "jd": [353, 354, 355, 356, 401, 413], "convent": [353, 354, 355, 356], "refactor": [353, 354, 355, 356], "engine_t": 353, "cpu_engine_t": 353, "gpu_ocl_engine_t": 353, "public": [353, 354, 355, 356, 375, 392, 400, 401], "inlin": [353, 354, 355, 400], "engine_kind": [353, 355, 401], "runtime_kind": [353, 355], "virtual": [353, 354, 355, 392, 400, 401], "get_engine_kind": 353, "get_runtime_kind": 353, "std": [353, 354, 355, 356, 398, 400, 401], "vector": [353, 354, 355, 356, 392, 398, 400, 401, 402, 404, 407, 409], "impl_list_item_t": [353, 354], "get_implementation_list": 353, "operator_desc": [353, 354, 357, 398], "op_desc": [353, 354, 398, 401], "create_kernel": 353, "shared_ptr": [353, 354, 392], "kernel_t": [353, 354], "stream_t": 353, "create_stream": 353, "create_memory_storag": 353, "memory_storage_t": 353, "protect": [353, 354], "engine_kind_": [353, 355], "runtime_kind_": [353, 355], "cpu_inst": 353, "null_inst": 353, "storag": 353, "empty_list": 353, "templat": [354, 356], "typenam": [354, 356], "arg_t": 354, "void": [354, 355, 356, 392, 398, 400, 401, 402], "proxy_bas": 354, "hpp": [354, 355, 356, 388, 398, 413], "proxi": [354, 370, 398, 426], "anyth": 354, "similar": [354, 389, 400, 403, 404, 406, 407, 419], "onednn": [354, 392], "struct": [354, 356, 400, 401], "oneapi": [354, 392, 410], "dnnl": [354, 388, 392], "136": 354, "reset_sp": 354, "sp": 354, "get_sp": 354, "create_proxy_object": 354, "result_ref": 354, "privat": [354, 355, 375, 386, 392, 399, 400, 401, 405, 406], "member": [354, 355, 356, 375, 392, 400, 401], "data_handle_": 354, "kernel_desc_proxi": 354, "kernel_desc_t": 354, "real": [354, 388, 397, 405, 406, 407, 410], "attention_desc": 354, "dynamic_quant_desc": 354, "dynamic_quant_matmul_desc": 354, "eltwiseop_desc": 354, "gather_desc": 354, "groupnorm_desc": 354, "layernorm_ba_desc": [354, 400], "layernormalized_spmm_desc": 354, "logsoftmax_desc": 354, "mha_dense_desc": 354, "slice_desc": 354, "softmax_desc": 354, "sparse_matmul_desc": [354, 398], "transpose_matmul_desc": 354, "transpose_mha_desc": 354, "kernel_kind": [354, 355, 401], "impl_list_": 354, "nullptr": [354, 356, 400], "kernel_proxi": 354, "dynamic_qu": 354, "dynamic_quant_matmul": 354, "eltwiseop": [354, 400, 401], "layernorm_ba": 354, "layernormalized_spmm": 354, "mha_dens": [354, 413], "slice": [354, 394], "sparse_matmul": [354, 410], "transpose_matmul": 354, "transpose_mha": 354, "kdp": 354, "rt_data": [354, 398], "exec_context_t": 354, "ctx": [354, 397], "size_t": [354, 356, 388, 401], "get_workspace_s": 354, "kd": [354, 365, 379], "sparse_matmul_desc_t": 354, "sparse_matmul_t": 354, "descriptor": [355, 392, 413], "ker_kind": [355, 398, 401], "kernel_prop": [355, 401], "ker_prop": [355, 398, 401], "eng_kind": [355, 398, 401], "tensor_desc": [355, 401], "ts_desc": [355, 398, 401], "unordered_map": [355, 401], "postop_attr": [355, 356, 401], "apply_postops_list": [355, 401], "rh": [355, 407], "set_binaryop_list": [355, 400], "binaryop_attr": [355, 356, 400], "binaryop_list": [355, 400], "uint64_t": 355, "impl_nthr": 355, "get_binaryop_list": [355, 400], "dim_t": [355, 356], "tensor_shap": 355, "data_typ": [355, 356, 392, 400, 401, 413], "tensor_dtyp": 355, "format_typ": 355, "tensor_ftyp": 355, "ker_kind_": [355, 401], "ker_prop_": [355, 401], "forward_infer": [355, 392, 401], "undef": [355, 356, 400, 401], "impl_nthr_": [355, 401], "ts_descs_": [355, 401], "attrs_": [355, 401], "apply_postops_list_": [355, 401], "binaryop_list_": [355, 400], "enum": [356, 400, 401], "attention_io": 356, "merge_src": 356, "merge_dst": 356, "q_weight": 356, "k_weight": 356, "v_weight": 356, "q_bia": 356, "k_bia": 356, "v_bia": 356, "q_scale": 356, "k_scale": 356, "v_scale": 356, "reshape_input": 356, "q_k_src2": 356, "q_k_scale": 356, "qk_v_output_zero_point": 356, "qk_v_output_scal": 356, "ssd": [356, 401, 413], "eltwiseop_param_t": [356, 401], "element_num": [356, 401], "in_dt": 356, "out_dt": 356, "element_num_each_th": 356, "remain_el": 356, "eltwiseop_data_t": 356, "dst": [356, 392, 400, 401, 403, 404, 405, 408, 409, 413], "doxygenfil": 356, "gather_typ": 356, "spec_translnorm_typ": 356, "direct": 356, "layernorm_ba_param_t": 356, "input_dt": [356, 400, 413], "output_dt": [356, 413], "output2_dt": 356, "spec_typ": [356, 413], "row_num": 356, "col_num": 356, "process_col": [356, 400], "direct_process_row": 356, "process_batch_per_k": 356, "ker_per_batch": 356, "batch_num": 356, "thread_elt_offset": [356, 400], "split_output": 356, "layernorm_ba_data_t": 356, "dst2": 356, "process_row": 356, "anonym": 356, "ep": 356, "1e": 356, "matmul_param_t": 356, "m_tile": 356, "n_tile": 356, "matmul_fp8_param_t": 356, "bfloat16_t": 356, "weight_bf16": 356, "int8_t": 356, "weight_int8": 356, "float8_e4m3_t": 356, "weight_f8_e4m3": 356, "float8_e5m2_t": 356, "weight_f8_e5m2": 356, "uint8_t": [356, 400, 401], "weight_8bit": 356, "weight_typ": 356, "has_scale0": 356, "has_append_sum": [356, 413], "thread_num": 356, "matmul_data_t": 356, "src0": [356, 413], "src1": [356, 387, 400, 413], "src2": [356, 400, 413], "matmul_u8_data_t": 356, "zp": [356, 400], "matmul_fp8_data_t": 356, "mata": 356, "matb": 356, "matc": 356, "matd": 356, "mate": 356, "astep": 356, "bstep": 356, "cstep": 356, "dstep": 356, "kpo": 356, "matmul_input": 356, "scale0": 356, "zp0": 356, "append_sum": 356, "matmul_io_max": 356, "matmul_io": 356, "dst0": 356, "matmul_output": 356, "mean_var_reduce_param_t": 356, "bm": 356, "bn": 356, "mean_var_reduce_data_t": 356, "mean_in": 356, "var_in": 356, "mean_out": 356, "var_out": 356, "spec_softmax_typ": 356, "lut": [356, 398, 400, 401, 413], "softmax_param_t": 356, "sepc_typ": 356, "scalar_num": 356, "vec_align_len": 356, "vec_tail_len": 356, "vec_num_per_thr": 356, "vec_num_tail_thr": 356, "get_lut_exp_attr": 356, "softmax_data_t": 356, "tmp": [356, 401, 403, 405, 408], "process_vec_num": 356, "typedef": 356, "amx_params_t": 356, "amx_bf16_params_t": 356, "amx_int8_params_t": 356, "amx_inputs_t": 356, "amx_bf16f32_inputs_t": 356, "amx_bf16bf16_inputs_t": 356, "sparse_schem": 356, "scenario": [356, 377, 405], "spmm_vnni": 356, "sparse_x_dens": 356, "dense_x_spars": 356, "sparse_x_spars": 356, "subfunc_level": [356, 413], "non_kdim": 356, "kdim": 356, "subfunc_level_max": [356, 413], "variabl": [356, 386, 389, 392, 413, 414], "constexpr": 356, "wei": [356, 413], "todo": [356, 422], "yi": 356, "conflict": 356, "dst_m1": 356, "dst_m2": 356, "work_spac": 356, "vnni_param_t": 356, "spmm_type": 356, "primit": [356, 392], "jit_domain": 356, "has_bia": 356, "output_typ": [356, 387], "tile_w": 356, "sub_func": 356, "im_start": 356, "blocksiz": 356, "indptr": 356, "welford": [356, 406], "dst_t": 356, "vnni_data_t": 356, "ptr_dens": 356, "int32_t": 356, "ptr_bia": 356, "ptr_dst": 356, "ptr_scale": 356, "ptr_dst_m1": 356, "ptr_dst_m2": 356, "num_tilem": 356, "tilem": 356, "tilen": 356, "16": [356, 366, 380, 381, 386, 395, 397, 403, 404, 405, 406, 409, 410, 411, 413, 420], "blocks_per_group": 356, "64": [356, 365, 383, 387, 394, 395, 397, 405, 407, 408, 410, 411, 413], "sizeof": 356, "nnz_group": 356, "nrowptr": 356, "colidx": 356, "group_rowptr": 356, "same_src_dtyp": 356, "src_t": 356, "wgt_t": 356, "bia_t": 356, "avx512_fp32_params_t": 356, "int64_t": 356, "bsc_data_t": 356, "sparse_ptr": 356, "im_end": 356, "in_start": 356, "in_end": 356, "avx512_data_t": 356, "dens": [356, 387, 388, 393, 398, 409, 413, 419], "transpose_copy_param": 356, "srcptr": 356, "dstptr": 356, "srcstride": 356, "dststride": 356, "seq_vnni_copy_param": 356, "transpose_mha_step1_param": 356, "expsum": 356, "cfg": 356, "batchk": [356, 408], "sumstep": 356, "cbatchstep": 356, "scaleab": 356, "transpose_mha_step2_param": 356, "sumptr": 356, "transpose_mha_step3_param": 356, "scalec": 356, "zeropointc": 356, "transpose_mha_io": 356, "src_k": 356, "src_q": 356, "src_v": 356, "tmp2m": 356, "sl_pad": 356, "head_num": [356, 407, 413], "head_siz": [356, 407, 413], "seq_len": [356, 378, 386, 387, 391, 407, 413], "scale_q": 356, "scale_k": 356, "scale_v": 356, "scale_dst": 356, "zp_dst": 356, "transpose_mha_io_max": 356, "within": [365, 375, 397, 404], "arch": 365, "proposit": 365, "propos": [365, 379, 399], "promis": [365, 404, 405], "assess": 365, "128": [365, 378, 386, 387, 391, 394, 395, 396, 397, 411, 413, 420], "advisor": 365, "ever": [365, 397], "network": [365, 379, 385, 386, 387, 389, 404, 419, 420], "student": [365, 379, 380], "minim": [365, 379, 409], "done": [365, 379, 388, 405, 413, 420], "z": [365, 379, 397], "distanc": [365, 379], "euclidean": [365, 379], "kullback": [365, 379], "leibler": [365, 379], "diverg": [365, 379, 397], "term": [365, 379, 404, 407, 409, 415, 416, 417, 420], "assign": [365, 405], "cal": 365, "sloss": 365, "mismatch": 365, "512": [365, 387, 396, 397, 404, 406, 409, 411, 413], "desir": [365, 387, 397], "unmatch": 365, "agent": 365, "train_func_builtin": 365, "flash_distil": 365, "eval_func_builtin": 365, "els": [365, 366, 385, 392], "search_loop": 365, "model_arch_para": 365, "oob": 365, "246": 365, "intra_bottleneck_s": 365, "96": [365, 395, 411], "160": [365, 395, 410], "num_attention_head": 365, "intermediate_s": 365, "640": 365, "num_feedforward_network": 365, "mobilebert": [365, 379, 380], "kl": 365, "mse": 365, "best_model_arch": 365, "automodelforpretrain": 365, "higher_is_bett": 365, "10": [365, 377, 378, 383, 386, 387, 395, 397, 403, 411, 413], "42": [365, 395, 411], "500": 365, "25000": 365, "mobilebert_distil": 365, "sgd": 365, "learning_r": 365, "001": 365, "mobilebert_na": 365, "5000": 365, "partial": 365, "pylint": [365, 376], "disabl": [365, 375, 395, 397, 411, 413], "e1101": 365, "makedir": 365, "exist_ok": 365, "120": [365, 410], "240": 365, "256": [365, 387, 396, 411, 413], "eval_loss": [365, 382], "tfautomodelforsequenceclassif": 365, "inherit": [366, 379, 385, 392, 418, 419, 420], "adjust": [366, 392, 397, 420], "physic": [366, 375, 397, 407], "model_nam": [366, 418], "dataset_nam": 366, "autotoken": [366, 378, 418], "load_dataset": [366, 377, 378], "195": 366, "intel_extension_for_transform": [366, 377, 378, 379, 382, 383, 385, 386, 388, 390, 393, 394, 398, 413, 416, 417, 418, 419, 420], "summari": 366, "003": 366, "throughput": [366, 378, 395, 405], "5071": 366, "933": [366, 395], "guid": [369, 378, 379, 385, 401, 403, 425], "formerli": [370, 378, 383, 398, 426], "known": [370, 378, 397, 398, 426], "sparselib": [370, 388, 398, 426], "high": [370, 378, 386, 394, 396, 398, 405, 406, 409, 426], "assembli": [370, 398, 402, 404, 409, 410, 426], "introduc": [372, 376, 399, 400, 401, 402, 403, 405, 407, 408, 409, 420, 428], "who": [372, 375, 397, 401, 428], "might": [372, 389, 397, 428], "profil": [372, 428, 429], "intruct": [372, 428], "met": [372, 428], "request": [372, 378, 428], "interest": 375, "foster": 375, "welcom": [375, 376], "maintain": [375, 376, 378, 389, 394, 397, 421], "particip": [375, 397, 402], "harass": 375, "free": [375, 400, 413], "everyon": 375, "regardless": 375, "ag": 375, "bodi": [375, 407], "ethnic": 375, "sex": 375, "gender": 375, "express": 375, "educ": 375, "socio": 375, "econom": [375, 394], "statu": [375, 417, 420], "nation": 375, "person": 375, "appear": [375, 397], "race": 375, "religion": 375, "sexual": 375, "orient": 375, "contribut": 375, "inclus": 375, "Being": 375, "viewpoint": 375, "gracefulli": 375, "critic": 375, "focus": [375, 397], "what": [375, 400, 401, 407, 419], "show": [375, 378, 385, 386, 389, 390, 393, 397, 403, 405, 407], "empathi": 375, "unaccept": 375, "imageri": 375, "unwelcom": 375, "troll": 375, "insult": 375, "derogatori": 375, "comment": 375, "polit": 375, "attack": 375, "electron": 375, "permiss": 375, "reason": [375, 389, 392, 406], "consid": [375, 388, 397, 399, 401, 403, 414], "inappropri": 375, "profession": 375, "clarifi": 375, "appropri": [375, 385, 400, 408], "fair": 375, "action": 375, "edit": 375, "reject": 375, "wiki": 375, "align": [375, 399, 401, 409], "ban": 375, "temporarili": 375, "perman": 375, "threaten": 375, "offens": 375, "harm": [375, 409], "offici": 375, "mail": 375, "post": [375, 387, 413], "via": [375, 400, 403, 410], "social": 375, "media": 375, "act": [375, 404], "appoint": 375, "onlin": [375, 378, 406], "offlin": [375, 403, 409, 420], "event": 375, "further": [375, 382, 388, 397, 404], "abus": 375, "report": [375, 376, 378], "contact": [375, 421], "complaint": 375, "review": [375, 376], "investig": [375, 409], "circumst": 375, "team": 375, "oblig": 375, "confidenti": 375, "regard": 375, "incid": 375, "polici": [375, 425], "good": [375, 402, 403], "faith": 375, "temporari": [375, 407], "repercuss": 375, "leadership": 375, "faq": 375, "page": [375, 376, 378, 382], "improv": [376, 378, 387, 397, 400, 402, 404, 405, 409, 420], "send": 376, "style": 376, "flake8": 376, "autopep8": 376, "clean": 376, "bug": [376, 378], "fix": [376, 388, 403], "jira": 376, "ticket": 376, "xxx": [376, 378], "risk": [376, 397], "pr": [376, 413], "reproduc": [376, 397], "submit": [376, 378, 397], "reach": [376, 378, 397], "intend": [376, 397], "safe": 376, "collabor": 376, "adher": 376, "tool": [377, 378, 380, 387, 394, 398, 413], "integr": [377, 429], "lab": 377, "pip": [377, 378, 383, 385, 391, 412], "clone": [377, 378, 383, 384, 385], "itrex": [377, 378, 383, 384, 386], "cd": [377, 378, 383, 384, 385, 386, 391, 396, 398, 410, 413], "v": [377, 378, 383, 385, 407, 408], "dev": 377, "data_fil": 377, "delimit": [377, 413], "asserttru": 377, "len": [377, 385, 386, 393, 407], "column": [377, 399, 404, 406, 409, 419], "conduct": 377, "deploy": [377, 378, 382, 388, 391], "ocraug": 377, "spellingaug": 377, "contextualwordembsforsentenceaug": 377, "xl": 377, "xlnet": [377, 380], "Not": [377, 404], "rescu": 377, "natur": [377, 378, 380, 397, 406], "sst": [377, 378, 380, 382, 418], "txt": [377, 386, 388, 391, 410, 412], "w": [377, 386, 387, 388, 399, 402, 408], "fw": 377, "clm": [377, 380], "train_fil": 377, "validation_fil": 377, "model_dir": 377, "python3": [377, 384], "run_clm": 377, "do_train": 377, "do_ev": 377, "overwrite_output_dir": 377, "secondli": 377, "training_set": 377, "line": [377, 385, 388, 397, 399, 406, 407, 409, 414], "repetit": [377, 397], "penalti": [377, 396], "platform": [378, 396, 412, 420], "particularli": [378, 397], "gen": [378, 401], "imag": [378, 380, 390, 393, 403, 409], "becom": [378, 389, 394, 397, 409], "wide": [378, 379, 401, 402, 420], "art": 378, "popular": 378, "visit": [378, 395, 411], "skylak": 378, "cascad": [378, 383], "lake": [378, 383], "ic": 378, "cooper": [378, 405], "seri": [378, 397, 400, 403, 413], "hbm": 378, "develop": [378, 392, 396], "product": [378, 395, 407, 411, 417, 420], "easi": [378, 388, 390], "rich": 378, "demonstr": [378, 380, 382, 407, 409], "extrem": [378, 382, 397], "togeth": [378, 397], "significantli": [378, 397, 406, 408], "cento": [378, 383], "ubuntu": [378, 383, 395, 411], "04": [378, 380, 383, 395, 411], "window": [378, 383, 384], "succeed": 378, "grep": 378, "matrix": [378, 382, 399, 402, 403, 404, 406, 407, 408, 409, 413, 419, 423], "load_metr": 378, "np": 378, "automodelforsequenceclassif": [378, 382], "evalpredict": 378, "english": [378, 380, 382, 418], "lambda": 378, "usag": [378, 397, 416, 417], "label2id": [378, 382], "id2label": [378, 382], "neg": [378, 382, 397, 413], "pred": 378, "argmax": [378, 382], "axi": [378, 385, 387, 407, 408], "label_id": 378, "q_config": [378, 382, 420], "eval_accuraci": [378, 379, 382, 419], "tmp_trainer": 378, "enable_executor": [378, 381], "set_log_fil": 378, "load_graph": 378, "dummydataload": 378, "compute_perform": 378, "reduc": [378, 392, 397, 399, 400, 402, 404, 405, 406, 408, 409, 420], "glog_minloglevel": [378, 386, 391], "obtain": [378, 380, 387, 397, 408], "section": [378, 397, 398, 409, 410], "input_model": [378, 387, 390, 391], "warm_up": 378, "p50": 378, "50": [378, 410], "p90": 378, "90": [378, 380, 387, 395], "p99": 378, "99": [378, 380, 411], "sec": [378, 395], "tutori": [378, 386], "resourc": [378, 379, 402], "catalog": 378, "brand": [378, 415], "claim": [378, 415], "properti": [378, 386, 415], "trademark": 378, "expens": 379, "deploi": [379, 429], "power": [379, 380, 397], "mobil": 379, "shown": [379, 388, 404, 408, 409], "produc": [379, 397, 409], "instruct": [379, 389, 396, 400, 403, 405, 408, 409, 410, 413, 420], "besid": [379, 401], "often": 379, "patient": 379, "compact": 379, "agnost": 379, "summar": [379, 380], "usual": [379, 389, 399, 409, 420], "1x1": [379, 388], "d_conf": [379, 382], "tune_metr": [379, 419], "metric_": 379, "classifi": 379, "distillation_conf": 379, "distilled_model": 379, "intermediatelayersloss": 379, "meanwhil": [380, 399, 405], "posttrainingdynam": [380, 381, 420], "wikitext": 380, "10004": [380, 381], "xsum": 380, "cnn": 380, "cnn_dailymail": 380, "dm": 380, "lambdalab": 380, "sd": 380, "pokemon": 380, "mlm": 380, "plm": 380, "eleutherai": 380, "neo": 380, "125m": 380, "sshleifer": 380, "wip": [380, 403], "star": 380, "ehdwns1516": 380, "uncased_swag": 380, "swag": 380, "squad": 380, "valhalla": 380, "longform": 380, "4096": [380, 411], "squadv1": 380, "lvwerra": 380, "pegasu": 380, "samsum": 380, "textattack": [380, 390], "mrpc": [380, 390, 391], "echarlaix": 380, "acc91": 380, "d37": 380, "hybrid": 380, "elast": 380, "conll03": 380, "conll2003": 380, "small": [380, 388, 405, 407], "translat": 380, "wmt16": 380, "helsinki": 380, "opu": 380, "mt": [380, 412], "en": 380, "ro": 380, "quantizationawaretrain": [380, 381], "maskinun": 380, "distilgpt2": 380, "rocketknight1": 380, "dslim": 380, "ner": 380, "mb": 380, "f1": [380, 416], "gflop": [380, 411, 414], "speedup": 380, "compar": [380, 396, 397, 399, 402, 413, 420], "415": [380, 395], "47": [380, 395, 411], "88": [380, 395, 410, 411], "58": [380, 411], "56": [380, 396, 410, 411], "35": [380, 395, 411], "1x": 380, "la": [380, 402], "minilmv2": 380, "115": 380, "89": [380, 411], "28": [380, 395, 403, 411], "76": [380, 410, 411], "33x": 380, "269": 380, "253": 380, "252": [380, 410], "202": 380, "104": 380, "34": [380, 411], "87": [380, 411], "11": [380, 383, 391, 403, 411], "44": [380, 387, 395, 410, 411], "49": [380, 393, 395, 411], "94x": 380, "84": [380, 411], "85": [380, 395, 411], "21x": 380, "315": 380, "251": [380, 411], "242": [380, 395, 411], "159": [380, 410], "142": [380, 411], "33": [380, 394, 411], "86": [380, 411], "68": [380, 410, 411], "41": [380, 395, 411], "55": [380, 396, 410, 411], "82x": 380, "amount": [380, 397, 402], "torchprofil": 380, "platinum": [380, 395, 411], "8280": 380, "unstructur": [380, 419], "lasso": [380, 419], "nbsp": [380, 395, 411], "qnli": 380, "qqp": 380, "mnli": 380, "v1": 380, "tinybert_general_4l_312d": 380, "distilroberta": 380, "cola": 380, "krishna2020": 380, "googl": 380, "wikipedia": 380, "prajjwal1": 380, "approch": 380, "pruneofa": 380, "patternlock": [380, 419], "bhadresh": 380, "savani": 380, "emot": 380, "fac": 380, "mini": [380, 387, 391, 395], "gchhablani": 380, "philschmid": 380, "l6": 380, "h384": 380, "moshew": [380, 391], "80": [380, 387, 395, 411], "1x4": [380, 409], "desigh": 381, "32": [381, 386, 394, 395, 396, 403, 404, 406, 407, 408, 409, 410, 411, 413], "bfloat": 381, "fetch": [381, 399, 402], "flag": 381, "enable_bf16": 381, "bfloat16": 381, "qlinear": [381, 390], "u8s8": 381, "u8u8": 381, "highli": 381, "suggest": [381, 400], "quick": [382, 385], "p_conf": [382, 419], "reduct": [382, 404, 407], "accommod": 382, "budget": 382, "tradeoff": [382, 403], "dynamic_length_config": 382, "aim": [382, 385, 387, 389, 397], "opportun": 382, "hw": 382, "sw": 382, "recommend": [383, 385, 388, 391, 393, 394, 396, 397, 406, 410], "protobuf": [383, 391], "nightli": 383, "conda": [383, 391], "satisfi": [383, 393, 405], "success": 383, "gcc": [383, 384], "linux": [383, 384], "visual": [383, 397], "studio": 383, "icelak": 383, "futur": [383, 390, 400, 401, 410], "ipex": [383, 420], "13": [383, 395, 403, 411], "cmake": [384, 386, 396, 398, 410, 413], "submodul": [384, 386], "updat": [384, 386, 397, 406, 419], "recurs": [384, 386, 393], "mkdir": [384, 386, 396, 398, 410, 413], "dpython_execut": 384, "dne_with_sparselib": [384, 413], "neural_engine_pi": 384, "cpython": 384, "37m": 384, "x86_64": 384, "gnu": 384, "libkernellib": 384, "libneural_engin": 384, "lib": [384, 386], "subdirectori": 384, "pure": [384, 401], "certain": [385, 393, 397], "simplifi": [385, 389], "attach": [385, 393], "distilbert_bas": 385, "assum": [385, 393, 402], "command": [385, 386, 390, 397, 414], "repo": [385, 413], "instal": [385, 397, 412, 425], "These": [385, 389, 393, 397, 402, 408], "roughli": [385, 405], "divid": [385, 393, 399, 404, 405, 408, 414], "categori": [385, 387], "dst_shape": [385, 386, 392], "father": 385, "keep_dim": 385, "ax": [385, 407], "come": 385, "rewrit": 385, "_attr": 385, "successfulli": [385, 393], "forget": [385, 389, 392], "reinstal": 385, "enter": 385, "you_work_dir": 385, "noth": [385, 393], "wrong": [385, 393], "anoth": [385, 389, 394, 397, 410], "correctli": 385, "distil_bert_bas": 385, "pattern_mapping_config": 385, "div": [385, 389], "becaus": [385, 400, 403, 408, 420], "even": [385, 399], "delv": 385, "recogn": [385, 429], "put": [385, 386, 389, 396], "namedtupl": 385, "__call__": 385, "retriev": 385, "actual": [385, 386, 406], "equival": [385, 409], "supported_pattern": 385, "influenc": [385, 389, 397], "pattern_dict": 385, "new_node_nam": 385, "ret_old_nod": 385, "talk": 385, "denomin": 385, "numer": [385, 420], "stabil": 385, "_set_attr": 385, "ln_node_idx": 385, "finish": [385, 389, 391], "yourself": [385, 393, 396], "seq": [386, 407], "bert_model": 386, "30522": 386, "1024": [386, 387, 388, 396, 411, 413], "125018112": 386, "slightli": 386, "activ": [386, 390, 391, 394, 397, 399, 403, 404, 405, 408, 413, 420], "throught": 386, "numactl": [386, 396], "bind": [386, 396], "omp_num_thread": [386, 396], "session": [386, 394], "glog": 386, "nerual": 386, "cc": 386, "cmakelist": 386, "reus": [386, 394, 397, 405], "engine_integr": 386, "cp": [386, 396], "nlp_executor": 386, "neural_engine_exampl": 386, "ne": [386, 396], "root": 386, "ne_root": 386, "project_source_dir": 386, "link": [386, 392, 419], "runtime_output_directori": 386, "add_execut": 386, "target_include_directori": 386, "boost_inc_dir": 386, "target_link_librari": 386, "cmake_thread_libs_init": 386, "gflag": 386, "dir": 386, "set_target_properti": 386, "analyz": 387, "readm": [387, 390, 397], "run_executor": [387, 391], "model_and_token": [387, 390, 391], "Of": [387, 393, 402], "cours": [387, 393, 402], "proflil": 387, "latanc": 387, "perf": [387, 409, 413, 414], "perfrom": 387, "chrome": 387, "inst": 387, "count": [387, 392, 394], "pref": 387, "semi": 387, "70": [387, 395], "256x256": [387, 413], "settabl": 387, "256x1024": 387, "1024x256": 387, "gelu_tanh": [387, 392], "add_37": 387, "116": [387, 411], "641": 387, "00": 387, "075": 387, "0375": 387, "comparison": [387, 409], "185": 387, "801": 387, "693": 387, "366": 387, "content": 387, "part1": [387, 392], "modif": 387, "xlsx": 387, "titl": [387, 415], "model_infer": 387, "friendli": [387, 405, 406], "000": 387, "wall": 387, "durat": 387, "17": [387, 395, 403, 411], "138": 387, "iteration4": 387, "726": 387, "phrase": 387, "0m": 387, "permut": [387, 403, 407, 413], "perm": [387, 407], "add_284": 387, "028": [387, 411], "044": 387, "reshape_tim": 387, "004m": 387, "forward_tim": 387, "044m": 387, "input_tensor_nam": 387, "matmul_357": 387, "matmul_358": 387, "matmul_346": 387, "input_typ": 387, "f32": [387, 392, 396], "output_tensor_nam": 387, "output_shap": 387, "append_op": 387, "src1_perm": 387, "pictur": [388, 399, 412], "bring": [388, 404, 408, 409], "mainli": [388, 396, 405, 406], "merg": [388, 393], "off": [388, 397], "model_path": [388, 394], "isa": [388, 398, 400, 405, 408, 409, 410], "int8_model_path": 388, "shape_0": 388, "shape_1": 388, "shape_2": 388, "enlarg": 388, "subsequ": [388, 397, 405, 408], "remark": 388, "micro": [388, 399, 404, 409], "oc": [388, 413], "mk": 388, "kn": 388, "nhwc": 388, "nxhxw": 388, "h": [388, 397], "nk": 388, "km": 388, "mmkmb": 388, "mmxmb": 388, "fulfil": 388, "along": [388, 404, 407, 409], "omp": 388, "higher": [388, 396, 397, 407, 409, 413, 420], "unrol": [388, 402, 404], "know": [388, 394, 403], "disk": [388, 390, 394], "enable_op_tun": 388, "execution_opt": [388, 394], "engine_dispatch_t": 388, "workspac": 388, "row": [388, 402, 403, 405, 409, 419], "rest": [388, 389, 393, 407, 409], "hash": [388, 400], "kernel_config": [388, 413], "kernel_nam": [388, 413], "3025159985633461085": 388, "40": [388, 395, 397], "14124194128933833351": 388, "thing": 388, "affect": [388, 397, 405, 408, 414], "simul": [388, 409, 410], "warmup_it": 388, "num_iter": 388, "dispatch_table_file_root": 388, "file_root": 388, "script": [388, 390, 396, 412], "prevent": [388, 397], "imprecis": 388, "purpos": [389, 393, 400, 405], "realiz": 389, "suppli": [389, 393, 394], "recognit": [389, 393], "embeddings_reshap": 389, "said": 389, "thought": 389, "st": 389, "nd": 389, "copi": [389, 407], "greater": [389, 416, 417], "sent": 389, "written": 389, "phenomenon": 389, "Its": 389, "situat": [389, 397, 406], "nod": 389, "leav": [389, 407, 409, 413], "old_node_index": 389, "_get_pattern_info": 389, "_create_out_pattern": 389, "_replace_pattern": 389, "emitt": 390, "netron": 390, "bash": [390, 391], "prepare_model": [390, 391], "sh": [390, 391, 414], "ptq": 390, "much": [390, 397, 402], "ir_path": 390, "focu": [391, 397, 407, 416], "home": 391, "distilbert_base_uncas": 391, "r": [391, 395, 397, 411, 412, 420], "prepare_dataset": 391, "shell": 391, "tokenizer_dir": 391, "data_dir": 391, "geluoper": 392, "destructor": 392, "operatorconfig": 392, "algorithm_": 392, "eng_": 392, "eltwise_forward": 392, "gelu_p_": 392, "src_m_": 392, "dst_m_": 392, "attrs_map": 392, "operator_conf_": 392, "becuas": 392, "src_shape": 392, "dst_tensor_ptr": 392, "set_shap": 392, "stride": [392, 399], "src_stride": 392, "getstrid": 392, "dst_stride": 392, "desc": [392, 400, 401], "src_md": 392, "dst_md": 392, "part2": 392, "gelu_algorithm": 392, "gelu_erf": 392, "eltwise_gelu_erf": 392, "eltwise_gelu_tanh": 392, "gelu_d": 392, "prop_kind": 392, "primitive_desc": 392, "gelu_pd": 392, "unrefernc": 392, "manag": [392, 394], "strictli": 392, "alia": 392, "src_data": 392, "dst_data": 392, "mutable_data": 392, "data_ptr": 392, "set_data_handl": 392, "const_cast": 392, "reinterpret_cast": 392, "memory_args_": 392, "dnnl_arg_src": 392, "dnnl_arg_dst": 392, "unref": 392, "unref_tensor": 392, "especi": [392, 409], "int8_lut_optim": 392, "int8_lut_acc_test": 392, "set_dtyp": 392, "register_operator_class": 392, "rule": 393, "recruit": 393, "ln_pattern": 393, "grow": 393, "concis": 393, "intuit": [393, 405], "choos": 393, "prefer": [393, 407], "longer": [393, 397], "ones": 393, "op_type1": 393, "op_type2": 393, "type1": 393, "type2": 393, "elig": 393, "a_node_name_1": 393, "b_node_name_1": 393, "c_node_name_1": 393, "a_node_name_2": 393, "b_node_name_2": 393, "c_node_name_2": 393, "a_node_name_n": 393, "b_node_name_n": 393, "c_node_name_n": 393, "bert_large_model_path": 393, "layer_0": 393, "layer_1": 393, "layer_2": 393, "afterward": 393, "volatil": 393, "incorrect": 393, "outcom": 393, "Or": 393, "exactli": 393, "screen": 393, "occur": [393, 399, 406], "alreadi": 393, "moment": 393, "varianc": [393, 406], "batchnorm": 393, "mul_1": 393, "mul_2": 393, "add_1": 393, "cycl": [394, 410], "pointer": 394, "life": 394, "malloc": 394, "getmemori": 394, "consum": [394, 403], "lead": [394, 397, 407, 409], "wast": [394, 405, 406], "veri": [394, 399, 401, 402, 405], "alloc": [394, 401, 402], "faster": 394, "setp": 394, "activation_mem_compress": 394, "max_input_shapes_list": 394, "warm": 394, "quit": [394, 400], "llama": [394, 396, 397], "7b": [394, 396, 397], "past_k_v_0": 394, "past_k_v_1": 394, "63": [394, 395, 411], "beam": 394, "extra": [394, 397, 405], "dag": 394, "activation_dag": 394, "dump_activation_dag": 394, "execution_mod": 394, "07": [395, 411], "8375c": [395, 411], "aw": [395, 411], "c6i": [395, 411], "12xlarg": [395, 411], "vari": [395, 411], "factor": [395, 411], "www": [395, 411], "batchsiz": 395, "2652": 395, "36": [395, 411], "513": 395, "lt": [395, 411], "50m": 395, "2181": 395, "43": [395, 411], "628": 395, "1719": 395, "91": [395, 411], "75": [395, 411], "1487": [395, 411], "255": [395, 408, 420], "1220": 395, "39": [395, 411], "143": 395, "1304": 395, "46": [395, 411], "066": 395, "1102": [395, 411], "870": 395, "487": 395, "750": 395, "82": [395, 410, 411], "690": [395, 411], "188": 395, "910": [395, 411], "921": [395, 411], "729": 395, "71": [395, 410, 411], "619": 395, "38": [395, 410, 411], "821": [395, 411], "499": 395, "429": [395, 410], "936": [395, 411], "680": 395, "318": [395, 411], "557": 395, "262": 395, "467": 395, "589": 395, "405": 395, "339": 395, "473": 395, "119": [395, 411], "389": 395, "945": [395, 411], "360": 395, "274": 395, "843": 395, "259": [395, 410, 411], "442": 395, "241": 395, "364": 395, "016": [395, 411], "303": 395, "266": 395, "45": [395, 411], "05": [395, 397, 411], "221": 395, "973": 395, "112": [395, 411], "349": 395, "938": [395, 411], "275": [395, 410], "614": 395, "217": 395, "37": [395, 411], "039": 395, "301": 395, "166": 395, "033": 395, "320": 395, "769": 395, "263": 395, "724": [395, 411], "207": 395, "819": [395, 411], "181": 395, "021": 395, "979": [395, 411], "74": [395, 411], "235": 395, "091": 395, "51": [395, 411], "914": [395, 411], "698": [395, 411], "905": [395, 411], "8972": 395, "076": [395, 411], "20m": 395, "7192": 395, "19": [395, 403, 411], "906": 395, "5482": 395, "509": 395, "4808": 395, "952": 395, "3678": 395, "409": 395, "4750": 395, "975": [395, 411], "3647": 395, "867": 395, "2921": 395, "587": [395, 411], "2576": 395, "18": [395, 403, 411], "768": [395, 411], "2131": [395, 411], "913": [395, 411], "2804": 395, "096": 395, "2263": 395, "037": 395, "1938": 395, "756": [395, 411], "1581": 395, "15": [395, 397, 403, 404, 409, 411], "1409": 395, "015": 395, "2116": 395, "113": 395, "1777": 395, "972": [395, 411], "1474": 395, "392": 395, "1278": 395, "1137": 395, "752": 395, "1594": 395, "124": 395, "1347": [395, 411], "1126": 395, "993": [395, 411], "258": 395, "890": [395, 411], "877": [395, 411], "1319": 395, "1086": 395, "931": [395, 411], "545": 395, "833": 395, "332": [395, 411], "747": [395, 411], "141": 395, "1106": [395, 411], "31": [395, 403, 404, 411], "924": 395, "446": 395, "719": 395, "633": 395, "501": 395, "816": 395, "961": 395, "549": 395, "807": 395, "868": [395, 411], "701": [395, 411], "117": 395, "613": 395, "618": 395, "515": 395, "484": 395, "75384": 395, "989": 395, "1m": 395, "55628": 395, "917": 395, "49120": 395, "957": [395, 411], "41598": 395, "39218": 395, "31211": 395, "788": [395, 411], "28399": 395, "848": 395, "24910": 395, "966": 395, "20505": 395, "18575": 395, "865": 395, "25485": 395, "987": 395, "17468": 395, "16771": 395, "971": [395, 411], "16004": 395, "996": [395, 411], "13381": 395, "894": [395, 411], "13990": 395, "863": [395, 411], "13154": 395, "12535": 395, "12102": 395, "998": 395, "8426": [395, 411], "8736": 395, "8282": 395, "967": 395, "6659": 395, "898": [395, 411], "6477": 395, "6290": 395, "974": [395, 411], "8598": 395, "6449": 395, "935": [395, 411], "6263": [395, 411], "965": [395, 411], "6080": 395, "988": 395, "3684": 395, "817": [395, 411], "6246": 395, "978": 395, "6374": 395, "947": [395, 411], "6026": 395, "3300": [395, 411], "926": 395, "3226": 395, "6221": 395, "958": 395, "6322": 395, "6081": 395, "985": [395, 411], "3368": 395, "3264": 395, "distillbert": 395, "15460": 395, "296": 395, "10m": 395, "13129": 395, "363": 395, "11323": 395, "578": [395, 411], "10072": 395, "599": 395, "8689": 395, "7901": 395, "205": [395, 411], "6737": 395, "562": 395, "5440": 395, "904": [395, 411], "4920": 395, "786": [395, 411], "4460": 395, "053": 395, "5280": 395, "179": 395, "4339": 395, "244": [395, 410], "3634": [395, 411], "928": 395, "3255": 395, "211": [395, 411], "2928": 395, "197": [395, 411], "3681": 395, "527": [395, 411], "2965": [395, 411], "106": [395, 411], "2741": 395, "862": [395, 411], "2351": 395, "2150": 395, "282": 395, "2918": 395, "316": 395, "2505": [395, 411], "602": 395, "2010": [395, 411], "995": 395, "1872": 395, "609": [395, 411], "2409": 395, "983": 395, "1993": 395, "013": 395, "1671": [395, 411], "627": 395, "1484": 395, "1342": [395, 411], "1910": 395, "456": [395, 411], "1659": 395, "687": 395, "1293": 395, "245": [395, 411], "1230": 395, "798": 395, "1091": 395, "261": 395, "1627": 395, "908": 395, "1397": 395, "684": 395, "1130": 395, "1081": 395, "353": 395, "982": [395, 411], "187": [395, 410], "manufactur": [395, 411], "amazon": [395, 411], "ec2": [395, 411], "bio": [395, 411], "1021": [395, 411], "microcod": [395, 411], "0xd000331": [395, 411], "irq": [395, 411], "balanc": [395, 397, 411], "xeonplatinum": 395, "90ghz": [395, 411], "frequenc": [395, 411, 419], "9ghz": [395, 411], "5ghz": [395, 411], "socket": [395, 411], "numa": [395, 411], "turbo": [395, 411], "frequencygovern": [395, 411], "bare": 396, "metal": 396, "llm": 396, "solut": [396, 406, 409], "borrow": 396, "cpp": [396, 397, 413], "almost": 396, "macro": 396, "difficult": 396, "hierarch": 396, "bitsfrom": 396, "avx512f": [396, 398, 407, 413, 427], "x86": 396, "gpu": [396, 402], "short": 396, "ninja": 396, "65b": 396, "30b": 396, "13b": 396, "tokenizer_checklist": 396, "chk": 396, "convert_llama": 396, "outtyp": 396, "outfil": 396, "quant_llama": 396, "model_fil": 396, "out_fil": 396, "q4_j": 396, "block_siz": 396, "gemm_isa": 396, "vnni": [396, 398, 399, 403, 407, 408, 411, 413, 420, 427], "q4_j_vnni_b128": 396, "gptneox": 396, "convert_gptneox": 396, "input_model_name_or_path": 396, "quant_gptneox": 396, "mpt": 396, "convert_mpt": 396, "quant_mpt": 396, "falcon": 396, "convert_falcon": 396, "quant_falcon": 396, "main_llama": [396, 397], "color": [396, 397, 407, 409], "she": 396, "door": 396, "main_gptneox": 396, "main_mpt": 396, "main_falcon": 396, "main_gptj": 396, "q8": 396, "gptj_bind": 396, "awai": 397, "path_to_model": 397, "upon": 397, "cover": 397, "commonli": 397, "program": [397, 399, 415], "fname": 397, "ggml": 397, "respons": [397, 399, 405, 406, 408], "ins": 397, "alpaca": 397, "n_predict": 397, "ctx_size": 397, "were": 397, "2048": [397, 413], "wait": 397, "offer": 397, "engag": 397, "convers": [397, 420], "variou": 397, "press": 397, "interject": 397, "backslash": 397, "immedi": 397, "excel": 397, "differenti": 397, "distinguish": [397, 413], "tailor": 397, "chat": 397, "paus": 397, "encount": 397, "switch": 397, "jump": 397, "back": [397, 405, 406, 407, 408], "turn": [397, 407], "speak": 397, "overcom": 397, "conjunct": [397, 416], "assist": [397, 421], "technic": 397, "reset": 397, "lose": 397, "comprehend": 397, "yield": [397, 420], "increas": [397, 402], "beyond": 397, "unpredict": 397, "retain": 397, "topic": 397, "remain": 397, "divers": 397, "creativ": 397, "qualiti": 397, "infin": 397, "caus": 397, "temp": 397, "determinist": 397, "conserv": 397, "At": [397, 405, 406, 408], "pick": [397, 409], "repeat_penalti": 397, "repeat_last_n": 397, "penal": 397, "nl": 397, "newlin": 397, "monoton": 397, "strongli": 397, "lenient": 397, "histori": 397, "recent": 397, "dialogu": 397, "poetri": 397, "plai": 397, "role": 397, "nonsens": 397, "subset": 397, "cumul": 397, "nucleu": 397, "95": [397, 410, 411], "impact": [397, 403], "suppress": 397, "promot": 397, "contextu": 397, "surround": 397, "closer": 397, "perplex": 397, "mirostat_lr": 397, "rate": [397, 406], "eta": 397, "mirostat_": 397, "tau": 397, "strike": 397, "excess": 397, "boredom": 397, "trap": 397, "incoher": 397, "confus": 397, "quickli": 397, "respond": 397, "feedback": 397, "slower": 397, "token_id": 397, "likelihood": 397, "manual": [397, 410], "decreas": 397, "15043": 397, "inf": 397, "never": 397, "practic": 397, "29905": 397, "preval": 397, "latex": 397, "across": 397, "oppos": 397, "logic": [397, 408, 410], "greatli": [397, 403, 408], "lock": [397, 419], "swap": 397, "trade": 397, "advantag": 397, "ram": 397, "slow": 397, "mmap": 397, "pageout": 397, "memory_f32": 397, "cost": [397, 409], "benefit": [397, 405, 409, 420], "bla": 397, "progress": 397, "startup": 397, "primari": 397, "displai": 397, "latest": [397, 410, 421], "frequent": [397, 399], "outdat": 397, "mtest": 397, "properli": 397, "lora": 397, "impli": 397, "workdir": 398, "dne_with_test": 398, "ON": [398, 413], "ut": [398, 401], "dne_with_sparselib_onli": [398, 413], "dne_with_sparselib_benchmark": [398, 413], "test_spmm_vnni_kernel": 398, "box": 398, "profl": [398, 410], "op_attr": [398, 400, 401, 407], "spmm_desc": 398, "spmm_kern": 398, "data0": 398, "data1": 398, "data2": 398, "data3": 398, "data4": 398, "unit": [398, 405], "amx": [398, 405, 408, 413, 427], "wise": [398, 413, 427], "residu": 398, "avx512": [398, 399, 403, 420], "mha": [398, 427], "spmm": [399, 407, 413], "deeplearn": 399, "multipli": [399, 405, 409, 420], "adopt": [399, 404, 409], "modern": 399, "spatial": [399, 405], "64byte": 399, "organ": 399, "associ": 399, "access": [399, 404, 405], "b1": 399, "b2": 399, "simd": [399, 400, 404], "width": [399, 400, 404, 406, 420], "evenli": 399, "discontinu": 399, "fulli": [399, 408, 409], "worst": 399, "miss": [399, 409], "destin": [399, 404, 407, 413], "l1": 399, "l2": [399, 405, 413], "perhap": 399, "mxk": [399, 413], "bxm": 399, "xk": 399, "bxkxm": 399, "nxm": 399, "2d": [399, 413], "frac": [399, 407], "dl": 400, "changeabl": 400, "operand": [400, 404], "horizont": 400, "overhead": [400, 406, 407, 408, 409], "move": 400, "binaryop_injector": 400, "postop": [400, 401, 413], "eltwise_injector": [400, 401], "escap": [400, 401], "compute_vector": 400, "arithmet": 400, "brows": 400, "dt": [400, 401], "vpaddb": 400, "vaddp": 400, "unlik": 400, "ptr": [400, 401, 410], "static_addr": 400, "addr": 400, "binaryop_alg": 400, "per_channel_qu": 400, "per_channel_dequ": 400, "op_alg": [400, 401], "op_dt": 400, "alg": 400, "set_scal": 400, "set_zp": 400, "binary_injector_init": 400, "set_mask": 400, "reg64": [400, 401], "zmm": [400, 401, 404, 406, 409], "get_addr": 400, "broadcast": [400, 404, 409, 410, 413], "enable_mask": 400, "vector_comput": [400, 401], "bianryop": 400, "comput_vector": 400, "wrapper": 400, "jit_binary_injector": 400, "addr_typ": 400, "jit_gener": [400, 401], "opmask": [400, 401], "reg": [400, 401], "mov": [400, 410], "addr_ptr": 400, "zmm_src1": 400, "regexp": 400, "step1": [400, 401, 408], "binary_injector": 400, "step2": [400, 401, 408], "data_param": 400, "binaryop_addr": 400, "param_": [400, 401], "front": 400, "append_loop_len": 400, "zmm_byte_s": 400, "get_data_s": 400, "offset_exp": 400, "bianryop_attr_list": 400, "append_vec": 400, "binary_add": 400, "eltwis": 401, "tradit": 401, "obvious": [401, 402, 406], "useless": 401, "idea": [401, 409, 419], "xbyak": 401, "algo": 401, "aplha": 401, "sacl": 401, "postop_alg": 401, "int8_lut": 401, "postop_typ": 401, "mathemat": 401, "satur": 401, "round": [401, 420], "unus": 401, "\u03b1x": 401, "\u03b2": 401, "le": 401, "gt": 401, "eng_kind_": 401, "omp_get_max_thread": 401, "omp_get_num_proc": 401, "eltwise_injector_init": 401, "chian": 401, "escape_reg": 401, "escape_eras": 401, "eras": 401, "prepare_t": 401, "zmm_src": 401, "postop_idx": 401, "reg_idx": 401, "step0": 401, "jit_eltwiseop_t": 401, "assign_reg": 401, "eltwiseop_kd_t": 401, "op_desc_": 401, "params_": 401, "remain_task_mask": 401, "scratch_": 401, "r10": 401, "reg_src": 401, "addr_src": 401, "r15": [401, 410], "addr_dst": 401, "r14": [401, 410], "reg_param": 401, "rdi": [401, 410], "remain_element_num": 401, "rsi": 401, "getidx": 401, "rcx": 401, "rdx": 401, "rsp": 401, "step3": [401, 408], "preambl": 401, "load_param": 401, "vmovup": [401, 410], "postambl": 401, "fp32_gelu_attr": 401, "bf16_gelu_attr": 401, "push_back": 401, "gen_cas": 401, "data0_desc": 401, "postop_list": 401, "fp32_gelu": [401, 413], "fp32_exp": 401, "mask_mock1": 401, "reg64_mock1": 401, "zmm_mock1": 401, "fp32_exp_attr": 401, "data1_desc": 401, "bf16_gelu": 401, "bf16_exp": [401, 413], "bf16_exp_attr": 401, "dt1op1": 401, "dt2op2": 401, "hase": 401, "get_true_data": 401, "rf_data": 401, "your_kernel_log": 401, "apply_postop_list": 401, "unit_test_util": 401, "articl": [402, 420], "opencl": 402, "snippet": 402, "unintellig": 402, "__kernel": 402, "naive_gemm": 402, "__global": 402, "globalrow": 402, "get_global_id": 402, "globalcol": 402, "col": [402, 403, 406, 408], "over": [402, 404, 407], "acc": [402, 413, 414], "0f": 402, "mxn": [402, 408, 413], "2xk": 402, "redund": [402, 419], "asub": 402, "bsub": 402, "tile_gemm": 402, "get_local_id": 402, "get_group_id": 402, "__local": 402, "initialis": 402, "accumul": [402, 407, 409], "numtil": 402, "tiledrow": 402, "tiledcol": 402, "synchronis": 402, "barrier": 402, "clk_local_mem_f": 402, "full": [402, 415, 420], "white": 402, "figur": [402, 405, 406, 407, 409, 412], "half": [402, 408], "correspondingli": 402, "workload": [402, 407], "localmemori": 402, "tight": 402, "ll": 402, "twice": [402, 408], "ping": 402, "pong": 402, "tidm": 402, "tidn": 402, "offsetm": 402, "offset": [402, 406, 407], "offsetn": 402, "areg": 402, "breg": 402, "wm": 402, "wn": 402, "lpta": 402, "tid": 402, "mod2": 402, "div2": 402, "tiledindex": 402, "indexa": 402, "indexb": 402, "veca": 402, "vecb": 402, "tt": 402, "pragma": 402, "tdpbf16p": 403, "16x32": 403, "32x16": 403, "FOR": [403, 404, 409], "TO": 403, "colsb": 403, "endfor": [403, 404, 409], "write_row_and_zero": 403, "zero_upper_row": 403, "zero_tileconfig_start": 403, "layout": [403, 406, 407, 408], "successor": 403, "1x16": [403, 409], "concaten": [403, 409, 413], "intrins": 403, "tileloadd": 403, "nonzero": 403, "vmovdqu32": 403, "altern": [403, 409], "lot": 403, "disast": 403, "16x1": [403, 407], "fly": 403, "__m512i": 403, "_mm512_set_epi16": 403, "29": [403, 411], "27": [403, 411], "26": [403, 410, 411], "25": [403, 411, 413], "23": [403, 411], "22": [403, 411], "21": [403, 411], "__m256i": 403, "lo": 403, "_mm256_loadu_epi": 403, "li": 403, "vec": 403, "_mm512_inserti32x8": 403, "_mm512_castsi256_si512": 403, "_mm512_permutexvar_epi16": 403, "_mm512_storeu_epi32": 403, "vfmadd": 404, "vfmadd231p": [404, 410], "degre": 404, "conting": 404, "bsc": 404, "variant": 404, "bsr": 404, "openmp": 404, "relief": 404, "bottleneck": [404, 406], "microkernel": 404, "peripher": 404, "implicit": 404, "technologi": 405, "among": [405, 408], "satisfactori": 405, "inevit": 405, "solv": [405, 406, 420], "facilit": [405, 408], "flexibl": 405, "divis": 405, "tdpbssd": 405, "tile_k": 405, "formula": 405, "max_tile_k": 405, "hope": 405, "large_wei_threshold": 405, "16xpad_n": 405, "tilestor": 405, "pseudo": 405, "tile_m": [405, 413], "16xn": 405, "dp_tile_n": 405, "k_dim_dp": 405, "write_tile_to_tmp_buf": 405, "dequantize_tile_on_tmp_buf": 405, "calculate_scale_on_tmp_buf": 405, "write_back_scal": 405, "quant_tile_n": 405, "quantize_on_tmp_buf": 405, "write_tile_to_dst": 405, "scale_reduce_quant": 405, "needn": 405, "sync": 405, "2nd": [405, 408], "s8s8bf16": 405, "desid": 405, "du": 405, "until": 405, "feel": [405, 413], "suitabl": 405, "chart": 405, "again": 406, "naiv": 406, "gap": 406, "layernrom": 406, "3d": [406, 427], "poor": 406, "fewer": 406, "inconsist": 406, "scene": 406, "quarter": 406, "depict": 406, "bandwidth": [406, 408, 420], "gain": [406, 420], "brought": [406, 420], "majotr": 406, "layternorm": 406, "encapsul": 406, "ba": [406, 410, 413], "discret": 406, "append": [406, 413, 414], "overal": 406, "p2031": [407, 413], "2013": 407, "noperm": [407, 413], "p1302": [407, 413], "p2013": [407, 413], "equat": [407, 420], "dot": [407, 420], "rm": 407, "q": [407, 408], "qk": 407, "textunderscor": 407, "nativ": 407, "sparelib": 407, "axis": 407, "conceptu": 407, "head_nun": 407, "perm2031": 407, "perm2013": 407, "perm1302": 407, "concept": [407, 409], "lh": 407, "float32": [407, 420], "illustr": 407, "inner": 407, "16x16": 407, "drawn": 407, "lighter": 407, "cell": [407, 409], "respectfulli": 407, "vnni_noperm_p2013_p1302": 407, "transpose_4b_8x8": 407, "legend": 407, "explan": 407, "contigu": 407, "ellipsi": 407, "thinner": 407, "border": 407, "bolder": 407, "16x32x16": 407, "suboptim": 407, "piec": 407, "boost": 407, "twofold": 407, "unifi": 407, "roll": 407, "worth": 408, "clear": 408, "fact": [408, 420], "spr": 408, "latter": 408, "clx": 408, "4x16": [408, 409], "launch": 408, "prior": 408, "iteraion": 408, "polynomi": 408, "essenti": 408, "incom": 408, "far": 408, "four": 409, "adjac": 409, "unsign": [409, 413], "sign": [409, 420], "tmp1": 409, "zeroextend16": 409, "signextend16": 409, "tmp2": 409, "tmp3": 409, "tmp4": 409, "dword": [409, 410], "transposit": 409, "discuss": 409, "typic": 409, "4x4": 409, "mxkxn": 409, "problem": [409, 413], "densiti": 409, "fma": 409, "bubbl": 409, "16x4": 409, "highlight": 409, "4x": 409, "talent": 409, "smart": 409, "gui": [409, 410], "swizzl": 409, "workaround": 409, "unfortun": 409, "difficulti": 409, "bad": 409, "2x1": 409, "conclus": 409, "against": 409, "brief": 410, "sparse_lib_verbos": 410, "sparselib_verbos": 410, "nthr": 410, "224": [410, 411], "exec": 410, "shape_256_256_128": 410, "4658": [410, 411], "56982": 410, "itt": 410, "dne_with_sparselib_vtun": 410, "opt": 410, "dcmake_vtune_hom": 410, "sparse_lib_vtun": 410, "ssh": 410, "analys": 410, "verifi": 410, "sparse_lib_dump": 410, "xed64": 410, "click": 410, "xdi": 410, "push": 410, "53": [410, 411], "rbx": 410, "rbp": 410, "4154": 410, "r12": 410, "4155": 410, "r13": 410, "4156": 410, "4157": 410, "dataxf": 410, "bd00040000": 410, "ebp": 410, "0x400": 410, "4c8b3f": 410, "qword": 410, "4c8b7708": 410, "0x8": 410, "4c8b6f10": 410, "0x10": 410, "1a": 410, "avx512evex": 410, "62f17d48efc0": 410, "vpxord": 410, "zmm0": 410, "62f15d48efe4": 410, "zmm4": 410, "62513d48efc0": 410, "zmm8": 410, "2c": 410, "62511d48efe4": 410, "zmm12": 410, "62f17548efc9": 410, "zmm1": 410, "62f15548efe": 410, "zmm5": 410, "3e": 410, "62513548efc9": 410, "zmm9": 410, "62511548efe": 410, "zmm13": 410, "4a": 410, "62f16d48efd2": 410, "zmm2": 410, "62f14d48eff6": 410, "zmm6": 410, "62512d48efd2": 410, "zmm10": 410, "5c": 410, "62510d48eff6": 410, "zmm14": 410, "62": [410, 411], "62c17c481006": 410, "zmm16": 410, "zmmword": 410, "62c17c48104e01": 410, "zmm17": 410, "0x40": 410, "6f": 410, "62c17c48105602": 410, "zmm18": 410, "0x80": 410, "62427d48183f": 410, "vbroadcastss": 410, "zmm31": 410, "7c": 410, "vfma": 410, "62927d40b8c7": 410, "62927540b8cf": 410, "62926d40b8d7": 410, "8e": 410, "62427d48187f04": 410, "62927d40b8e7": 410, "9b": 410, "62927540b8ef": 410, "a1": 410, "62926d40b8f7": 410, "a7": 410, "62427d48187f08": 410, "0x20": 410, "ae": 410, "62127d40b8c7": 410, "b4": 410, "62127540b8cf": 410, "62126d40b8d7": 410, "c0": 410, "62427d48187f0c": 410, "0x30": 410, "c7": 410, "62127d40b8e7": 410, "62127540b8ef": 410, "62126d40b8f7": 410, "d9": 410, "62c17c48104603": 410, "0xc0": 410, "e0": 410, "62c17c48104e04": 410, "0x100": 410, "e7": 410, "62c17c48105605": 410, "0x140": 410, "ee": 410, "62427d48187f01": 410, "0x4": 410, "f5": 410, "fb": 410, "101": 410, "107": 410, "62427d48187f05": 410, "0x14": 410, "10e": 410, "114": 410, "11a": 410, "62427d48187f09": 410, "0x24": 410, "12d": 410, "133": 410, "139": 410, "62427d48187f0d": 410, "0x34": 410, "140": 410, "146": 410, "14c": 410, "152": 410, "62c17c48104606": 410, "0x180": 410, "62c17c48104e07": 410, "0x1c0": 410, "62c17c48105608": 410, "0x200": 410, "167": [410, 411], "62427d48187f02": 410, "16e": 410, "174": 410, "17a": 410, "180": 410, "62427d48187f06": 410, "0x18": 410, "18d": 410, "193": 410, "199": 410, "62427d48187f0a": 410, "0x28": 410, "1a0": 410, "1a6": 410, "1ac": 410, "1b2": 410, "62427d48187f0e": 410, "0x38": 410, "1b9": 410, "1bf": 410, "1c5": 410, "1cb": 410, "62c17c48104609": 410, "0x240": 410, "1d2": 410, "62c17c48104e0a": 410, "0x280": 410, "1d9": 410, "62c17c4810560b": 410, "0x2c0": 410, "1e0": 410, "62427d48187f03": 410, "0xc": 410, "1e7": 410, "1ed": 410, "1f3": 410, "1f9": 410, "62427d48187f07": 410, "0x1c": 410, "200": 410, "206": 410, "20c": 410, "212": 410, "62427d48187f0b": 410, "0x2c": 410, "219": [410, 411], "21f": 410, "225": 410, "22b": 410, "62427d48187f0f": 410, "0x3c": 410, "232": [410, 411], "238": 410, "23e": 410, "62d17c48114500": 410, "24b": 410, "62d17c48116503": 410, "62517c48114506": 410, "62517c48116509": 410, "260": 410, "62d17c48114d01": 410, "267": 410, "62d17c48116d04": 410, "26e": 410, "62517c48114d07": 410, "62517c48116d0a": 410, "27c": 410, "62d17c48115502": 410, "283": 410, "62d17c48117505": 410, "28a": 410, "62517c48115508": 410, "291": 410, "62517c4811750b": 410, "298": [410, 411], "pop": 410, "415f": 410, "29a": 410, "415e": 410, "29c": 410, "415d": 410, "29e": 410, "415c": 410, "2a0": 410, "5d": 410, "2a1": 410, "5b": 410, "2a2": 410, "avx": 410, "c5f877": 410, "vzeroupp": 410, "2a5": 410, "xed3": 410, "stat": 410, "29220": 410, "236418": 410, "118": 410, "2003": 410, "54": [410, 411], "00348609": 411, "601": 411, "00310676": 411, "675": 411, "00261406": 411, "802": 411, "00216633": 411, "968": 411, "068": 411, "00164658": 411, "1273": 411, "0112255": 411, "284": 411, "00947462": 411, "885": 411, "377": 411, "00764146": 411, "1097": 411, "78": 411, "0058452": 411, "1435": 411, "00407149": 411, "2060": 411, "0127448": 411, "658": 411, "198": 411, "0111132": 411, "754": 411, "835": 411, "00940157": 411, "892": 411, "00760217": 411, "1103": 411, "0054935": 411, "1527": 411, "044202": 411, "759": 411, "0364227": 411, "0292454": 411, "1147": 411, "0223472": 411, "1501": 411, "0149058": 411, "2251": 411, "216338": 411, "620": 411, "408": 411, "179593": 411, "345": 411, "135054": 411, "806": 411, "0946983": 411, "1417": 411, "0609701": 411, "2201": 411, "190508": 411, "704": 411, "526": 411, "159566": 411, "841": 411, "130863": 411, "1025": 411, "103927": 411, "1291": 411, "0739962": 411, "1813": 411, "0250395": 411, "753": 411, "784": 411, "0210726": 411, "895": 411, "682": 411, "0170987": 411, "0130778": 411, "1443": 411, "00923343": 411, "2044": 411, "3072": 411, "112882": 411, "668": 411, "818": 411, "0879386": 411, "858": 411, "525": 411, "068835": 411, "1096": 411, "79": 411, "0487342": 411, "1549": 411, "0317559": 411, "2377": 411, "109308": 411, "679": 411, "0922471": 411, "805": 411, "638": 411, "0759107": 411, "0558945": 411, "1329": 411, "61": 411, "0358752": 411, "2071": 411, "57": 411, "00565044": 411, "742": 411, "297": 411, "00503604": 411, "832": 411, "00447544": 411, "937": 411, "182": 411, "00368479": 411, "1138": 411, "00270954": 411, "1547": 411, "0183481": 411, "386": 411, "0154121": 411, "1088": 411, "0125696": 411, "1334": 411, "00959948": 411, "1747": 411, "72": 411, "00677631": 411, "2475": 411, "0206321": 411, "813": 411, "162": 411, "0184267": 411, "483": 411, "0164699": 411, "1018": 411, "66": 411, "0135801": 411, "1235": 411, "010552": 411, "1589": 411, "0721208": 411, "930": 411, "506": 411, "059613": 411, "1125": 411, "0483781": 411, "1387": 411, "0366748": 411, "1829": 411, "83": 411, "0248571": 411, "2699": 411, "376539": 411, "712": 411, "902": 411, "31929": 411, "840": 411, "727": 411, "261265": 411, "1027": 411, "193579": 411, "1386": 411, "118429": 411, "2266": 411, "309195": 411, "177": 411, "256619": 411, "1046": 411, "213454": 411, "1257": 411, "165192": 411, "1624": 411, "118402": 411, "2267": 411, "0402931": 411, "855": 411, "0341169": 411, "0275282": 411, "1371": 411, "0211298": 411, "1786": 411, "0150693": 411, "218765": 411, "215": 411, "180921": 411, "834": 411, "592": 411, "142778": 411, "1057": 411, "097692": 411, "1545": 411, "0620034": 411, "2435": 411, "174101": 411, "853": 411, "73": 411, "148369": 411, "1001": 411, "123554": 411, "1203": 411, "0923655": 411, "1609": 411, "0591283": 411, "2513": 411, "0074474": 411, "844": 411, "00657187": 411, "00570175": 411, "00483104": 411, "1302": 411, "00367406": 411, "1712": 411, "0247063": 411, "0207462": 411, "1213": 411, "03": 411, "0169214": 411, "0129936": 411, "1936": 411, "0090376": 411, "2784": 411, "0275881": 411, "912": 411, "0240415": 411, "77": 411, "0207876": 411, "1210": 411, "0177873": 411, "1414": 411, "0140129": 411, "1795": 411, "0994565": 411, "1012": 411, "0819725": 411, "1228": 411, "0660571": 411, "1523": 411, "0497077": 411, "2025": 411, "0341912": 411, "2944": 411, "500698": 411, "804": 411, "184": 411, "420619": 411, "287": 411, "337529": 411, "1192": 411, "94": 411, "251221": 411, "1602": 411, "158668": 411, "2537": 411, "412912": 411, "155": 411, "346369": 411, "1162": 411, "2831": 411, "1422": 411, "220585": 411, "1825": 411, "156168": 411, "2578": 411, "0538395": 411, "1051": 411, "0455066": 411, "1244": 411, "036978": 411, "1531": 411, "028483": 411, "1987": 411, "0200457": 411, "2824": 411, "283445": 411, "799": 411, "069": 411, "236101": 411, "959": 411, "302": 411, "188745": 411, "1199": 411, "135532": 411, "0845544": 411, "2678": 411, "227976": 411, "977": 411, "19463": 411, "1145": 411, "161251": 411, "1382": 411, "65": 411, "123585": 411, "1804": 411, "0840322": 411, "2653": 411, "00940534": 411, "891": 411, "00821985": 411, "1020": 411, "00701343": 411, "1196": 411, "08": 411, "00579899": 411, "1446": 411, "00464705": 411, "1805": 411, "0336342": 411, "997": 411, "629": 411, "0276086": 411, "1215": 411, "0224431": 411, "1495": 411, "09": 411, "0170807": 411, "1964": 411, "0117535": 411, "2854": 411, "0358603": 411, "0310083": 411, "1082": 411, "0260486": 411, "1288": 411, "0215163": 411, "1559": 411, "0170105": 411, "1972": 411, "133295": 411, "1006": 411, "92": 411, "111186": 411, "1207": 411, "0881114": 411, "0665519": 411, "2016": 411, "0454416": 411, "2953": 411, "611718": 411, "645": 411, "533329": 411, "430288": 411, "1247": 411, "307141": 411, "198987": 411, "2698": 411, "02": [411, 416], "556249": 411, "163": 411, "462737": 411, "1160": 411, "37537": 411, "1430": 411, "28321": 411, "1895": 411, "203901": 411, "2633": 411, "0716356": 411, "1053": 411, "0603517": 411, "1250": 411, "0490096": 411, "1540": 411, "0375683": 411, "2009": 411, "0267483": 411, "2822": 411, "3572": 411, "845": 411, "437": 411, "299561": 411, "1008": 411, "228752": 411, "1320": 411, "165648": 411, "1823": 411, "105656": 411, "2858": 411, "298907": 411, "994": 411, "529": 411, "255598": 411, "1163": 411, "20824": 411, "1427": 411, "159911": 411, "1858": 411, "111211": 411, "2673": 411, "0152997": 411, "685": 411, "358": 411, "0131446": 411, "797": 411, "0109669": 411, "956": 411, "132": 411, "00921101": 411, "00755406": 411, "1388": 411, "0553082": 411, "758": 411, "351": 411, "0458481": 411, "826": 411, "0367258": 411, "1142": 411, "06": 411, "027535": 411, "018464": 411, "2271": 411, "0597882": 411, "0510217": 411, "822": 411, "062": 411, "0421644": 411, "0333436": 411, "0296385": 411, "1415": 411, "22241": 411, "337": 411, "18324": 411, "915": 411, "145322": 411, "1154": 411, "1083": 411, "0728843": 411, "2301": 411, "11793": 411, "600": 411, "929398": 411, "722": 411, "720963": 411, "823": 411, "510039": 411, "1315": 411, "336519": 411, "1994": 411, "909941": 411, "737": 411, "508": 411, "753487": 411, "644": 411, "606477": 411, "459915": 411, "1459": 411, "303455": 411, "2211": 411, "123429": 411, "764": 411, "586": 411, "103035": 411, "923": 411, "0825026": 411, "1143": 411, "0625579": 411, "1508": 411, "0426942": 411, "2210": 411, "60813": 411, "734": 411, "483053": 411, "781": 411, "462": 411, "357348": 411, "1056": 411, "256715": 411, "1470": 411, "169119": 411, "2232": 411, "503341": 411, "738": 411, "42134": 411, "881": 411, "342843": 411, "255199": 411, "1456": 411, "174091": 411, "2134": 411, "0142667": 411, "0123966": 411, "1015": 411, "0105865": 411, "1188": 411, "00860835": 411, "1461": 411, "00655363": 411, "1919": 411, "0532543": 411, "0447548": 411, "1124": 411, "0348388": 411, "1444": 411, "0266886": 411, "1885": 411, "0177431": 411, "2836": 411, "69": 411, "0549107": 411, "916": 411, "608": 411, "0475549": 411, "1058": 411, "0401657": 411, "1253": 411, "0326952": 411, "1539": 411, "025032": 411, "220947": 411, "911": 411, "178324": 411, "1128": 411, "137361": 411, "1465": 411, "103126": 411, "1952": 411, "0701429": 411, "2870": 411, "06648": 411, "755": 411, "893959": 411, "900": 411, "831": 411, "718893": 411, "1120": 411, "537405": 411, "1498": 411, "280686": 411, "2869": 411, "902588": 411, "730678": 411, "582871": 411, "1381": 411, "444133": 411, "298489": 411, "2697": 411, "581": 411, "0955952": 411, "1184": 411, "078109": 411, "1449": 411, "0596185": 411, "1899": 411, "0414047": 411, "2735": 411, "596568": 411, "497127": 411, "396634": 411, "286973": 411, "1578": 411, "167473": 411, "2704": 411, "472466": 411, "943": 411, "787": 411, "391055": 411, "1140": 411, "319865": 411, "1394": 411, "247491": 411, "1801": 411, "169874": 411, "2624": 411, "93": 411, "0213786": 411, "686": 411, "67": 411, "018228": 411, "0152068": 411, "0120525": 411, "1218": 411, "0103961": 411, "1412": 411, "0771592": 411, "761": 411, "0642402": 411, "074": 411, "0514668": 411, "0387886": 411, "1513": 411, "0256871": 411, "2285": 411, "0836219": 411, "702": 411, "0712915": 411, "664": 411, "0589148": 411, "697": 411, "0484067": 411, "0411331": 411, "311691": 411, "569": 411, "256635": 411, "204973": 411, "153086": 411, "1534": 411, "101206": 411, "2320": 411, "59625": 411, "588": 411, "583": 411, "33246": 411, "705": 411, "03849": 411, "703": 411, "738939": 411, "1271": 411, "480308": 411, "1956": 411, "26056": 411, "745": 411, "324": 411, "04874": 411, "842936": 411, "1114": 411, "59": 411, "635554": 411, "1478": 411, "42145": 411, "2229": 411, "174215": 411, "375": 411, "145836": 411, "116701": 411, "1132": 411, "0876727": 411, "1506": 411, "0595001": 411, "2220": 411, "883258": 411, "598": 411, "333": 411, "711146": 411, "743": 411, "543634": 411, "129": 411, "402406": 411, "1313": 411, "266945": 411, "1979": 411, "70404": 411, "592043": 411, "878": 411, "695": 411, "475444": 411, "1094": 411, "358932": 411, "240739": 411, "2160": 411, "0184384": 411, "909": 411, "907": 411, "0158714": 411, "013504": 411, "1242": 411, "0109927": 411, "1526": 411, "00826017": 411, "2031": 411, "061272": 411, "1095": 411, "0609618": 411, "1100": 411, "0467291": 411, "1436": 411, "0340362": 411, "1971": 411, "0231282": 411, "2901": 411, "0717247": 411, "0616923": 411, "1087": 411, "0521595": 411, "1286": 411, "0423267": 411, "1585": 411, "0321109": 411, "2089": 411, "286461": 411, "242512": 411, "181783": 411, "1476": 411, "139021": 411, "1930": 411, "0870121": 411, "3085": 411, "36322": 411, "652": 411, "08991": 411, "880185": 411, "1219": 411, "694533": 411, "366328": 411, "2931": 411, "15748": 411, "927": 411, "937824": 411, "1144": 411, "745357": 411, "1440": 411, "558061": 411, "1924": 411, "391387": 411, "2743": 411, "157349": 411, "616": 411, "129806": 411, "103083": 411, "1464": 411, "0784417": 411, "053639": 411, "2815": 411, "767569": 411, "874": 411, "641585": 411, "941": 411, "387": 411, "488558": 411, "1236": 411, "355651": 411, "1698": 411, "230945": 411, "2615": 411, "611059": 411, "514108": 411, "1156": 411, "416571": 411, "318094": 411, "1869": 411, "225023": 411, "2642": 411, "0375093": 411, "564": 411, "0317602": 411, "0261888": 411, "1281": 411, "0211151": 411, "0158951": 411, "2110": 411, "141333": 411, "949": 411, "133647": 411, "1004": 411, "0999998": 411, "0710327": 411, "1889": 411, "52": 411, "0429916": 411, "3121": 411, "147474": 411, "125344": 411, "1070": 411, "104294": 411, "0849766": 411, "1579": 411, "0624729": 411, "2148": 411, "701639": 411, "765": 411, "534615": 411, "359791": 411, "1492": 411, "2612": 411, "2055": 411, "183193": 411, "2930": 411, "92067": 411, "735": 411, "271": 411, "4402": 411, "880": 411, "046": 411, "69186": 411, "1269": 411, "17436": 411, "1828": 411, "880179": 411, "2439": 411, "62123": 411, "264": 411, "14905": 411, "999": 411, "64253": 411, "1307": 411, "1413": 411, "1881": 411, "771439": 411, "2783": 411, "369429": 411, "451": 411, "288236": 411, "1047": 411, "209526": 411, "1441": 411, "148115": 411, "2038": 411, "106089": 411, "2846": 411, "53204": 411, "465": 411, "28593": 411, "939": 411, "368": 411, "0852": 411, "1113": 411, "685382": 411, "1762": 411, "408357": 411, "2958": 411, "4521": 411, "13466": 411, "853916": 411, "1392": 411, "642672": 411, "1850": 411, "446442": 411, "2663": 411, "0574189": 411, "876": 411, "0460811": 411, "1092": 411, "0389357": 411, "1292": 411, "031279": 411, "0234498": 411, "2146": 411, "204966": 411, "17364": 411, "1159": 411, "141097": 411, "1426": 411, "105192": 411, "1913": 411, "0677766": 411, "2970": 411, "21269": 411, "946": 411, "573": 411, "191564": 411, "1050": 411, "156368": 411, "1287": 411, "1565": 411, "0933565": 411, "2156": 411, "84983": 411, "789777": 411, "1019": 411, "598168": 411, "1346": 411, "433492": 411, "1857": 411, "269504": 411, "2988": 411, "74845": 411, "859": 411, "348": 411, "96945": 411, "811": 411, "505": 411, "77082": 411, "76407": 411, "1826": 411, "09719": 411, "2935": 411, "73162": 411, "00241": 411, "1072": 411, "39024": 411, "77317": 411, "1816": 411, "19536": 411, "2694": 411, "517278": 411, "875": 411, "708": 411, "382208": 411, "1185": 411, "317837": 411, "1425": 411, "233231": 411, "1942": 411, "152925": 411, "2962": 411, "44309": 411, "741": 411, "62409": 411, "1115": 411, "64963": 411, "1098": 411, "03923": 411, "1743": 411, "625089": 411, "2898": 411, "07006": 411, "861": 411, "632": 411, "64247": 411, "1085": 411, "33386": 411, "1337": 411, "994935": 411, "1792": 411, "68383": 411, "2608": 411, "0713578": 411, "940": 411, "0612457": 411, "0516788": 411, "1298": 411, "0414834": 411, "1617": 411, "0309886": 411, "2165": 411, "282241": 411, "951": 411, "085": 411, "238855": 411, "1123": 411, "193713": 411, "1385": 411, "146781": 411, "81": 411, "0938959": 411, "286141": 411, "122": 411, "257138": 411, "1043": 411, "214208": 411, "167575": 411, "1601": 411, "124072": 411, "2163": 411, "21431": 411, "884": 411, "237": 411, "955251": 411, "775294": 411, "1384": 411, "63282": 411, "1696": 411, "37333": 411, "2876": 411, "87335": 411, "317": 411, "65059": 411, "1176": 411, "94733": 411, "1457": 411, "62241": 411, "1637": 411, "47752": 411, "2906": 411, "75786": 411, "83024": 411, "889": 411, "87429": 411, "1108": 411, "87685": 411, "75328": 411, "2449": 411, "718776": 411, "289": 411, "561317": 411, "1076": 411, "429166": 411, "1407": 411, "317204": 411, "1904": 411, "208555": 411, "2896": 411, "94057": 411, "30458": 411, "1048": 411, "6702": 411, "25799": 411, "1920": 411, "84121": 411, "2871": 411, "34423": 411, "711": 411, "77444": 411, "857": 411, "10049": 411, "52509": 411, "926038": 411, "2568": 411, "00203027": 411, "1032": 411, "00198061": 411, "00179382": 411, "1169": 411, "00163713": 411, "1280": [411, 413], "00171023": 411, "1226": 411, "00395783": 411, "2119": 411, "00340452": 411, "2463": 411, "00308582": 411, "2718": 411, "00292684": 411, "2866": 411, "00217889": 411, "3849": 411, "00437142": 411, "1918": 411, "00418212": 411, "2005": 411, "00344785": 411, "2433": 411, "00291005": 411, "2882": 411, "00293671": 411, "2856": 411, "0120946": 411, "2774": 411, "0103377": 411, "3245": 411, "00850778": 411, "3943": 411, "00659512": 411, "5087": 411, "00484669": 411, "6923": 411, "0524509": 411, "2558": 411, "0428737": 411, "3130": 411, "0323642": 411, "4147": 411, "0231199": 411, "5805": 411, "0152199": 411, "8818": 411, "0451228": 411, "2974": 411, "0373823": 411, "3590": 411, "0302746": 411, "4433": 411, "023182": 411, "5789": 411, "0161696": 411, "8300": 411, "00731429": 411, "2580": 411, "00633179": 411, "2980": 411, "00535855": 411, "3522": 411, "00449335": 411, "4200": 411, "00341811": 411, "5521": 411, "0270028": 411, "2795": 411, "02197": 411, "3436": 411, "0177477": 411, "4253": 411, "0131335": 411, "5748": 411, "00897444": 411, "8412": 411, "0257188": 411, "2889": 411, "0218969": 411, "3393": 411, "0180933": 411, "4107": 411, "013742": 411, "5408": 411, "00992419": 411, "7488": 411, "00289114": 411, "1450": 411, "00245821": 411, "00252331": 411, "1662": 411, "00226557": 411, "1851": 411, "00180316": 411, "2326": 411, "00578904": 411, "00500361": 411, "3353": 411, "0042401": 411, "3956": 411, "00350486": 411, "4786": 411, "00297233": 411, "5644": 411, "00693265": 411, "2420": 411, "00593063": 411, "2828": 411, "00526697": 411, "3185": 411, "00480098": 411, "3494": 411, "00385131": 411, "4356": 411, "0193516": 411, "3467": 411, "0166254": 411, "4036": 411, "0132869": 411, "5050": 411, "0106293": 411, "6313": 411, "00759056": 411, "8841": 411, "0977256": 411, "2746": 411, "0813271": 411, "0656322": 411, "4090": 411, "0476463": 411, "5633": 411, "0295362": 411, "9088": 411, "0736189": 411, "3646": 411, "0603789": 411, "4445": 411, "0489938": 411, "5478": 411, "036992": 411, "7256": 411, "0258802": 411, "10372": 411, "0116589": 411, "3237": 411, "00979113": 411, "3855": 411, "00811779": 411, "4650": 411, "00667871": 411, "5652": 411, "00493861": 411, "7643": 411, "0537768": 411, "2807": 411, "0459135": 411, "3288": 411, "03588": 411, "4208": 411, "0252901": 411, "5970": 411, "0167419": 411, "9018": 411, "0407051": 411, "3651": 411, "0342908": 411, "4334": 411, "028568": 411, "5202": 411, "0218703": 411, "6796": 411, "016186": 411, "9183": 411, "0031551": 411, "0029515": 411, "00265488": 411, "2369": 411, "00243581": 411, "2582": 411, "00223598": 411, "2813": 411, "00745008": 411, "3377": 411, "00656544": 411, "3833": 411, "00542595": 411, "4638": 411, "00425647": 411, "5912": 411, "0034657": 411, "7261": 411, "00835933": 411, "3010": 411, "00741956": 411, "3391": 411, "0065352": 411, "3850": 411, "00555918": 411, "4526": 411, "00488058": 411, "5156": 411, "0257262": 411, "3912": 411, "0217468": 411, "4628": 411, "0176505": 411, "5703": 411, "0137122": 411, "7341": 411, "00980134": 411, "10270": 411, "124749": 411, "3227": 411, "103385": 411, "3894": 411, "0832193": 411, "4838": 411, "0626013": 411, "6432": 411, "0397992": 411, "10117": 411, "101071": 411, "3983": 411, "0825665": 411, "4876": 411, "0668515": 411, "6023": 411, "0487727": 411, "8255": 411, "0354192": 411, "11368": 411, "0147718": 411, "0127799": 411, "4430": 411, "0105324": 411, "5376": 411, "00869796": 411, "6509": 411, "00643591": 411, "8798": 411, "0698868": 411, "3240": 411, "0588583": 411, "3848": 411, "0473412": 411, "4784": 411, "0346142": 411, "6543": 411, "0222947": 411, "10159": 411, "0538146": 411, "4142": 411, "0454583": 411, "4904": 411, "0373579": 411, "5968": 411, "0291396": 411, "7651": 411, "0208901": 411, "10672": 411, "00393589": 411, "00332212": 411, "2525": 411, "00317296": 411, "2643": 411, "00269113": 411, "3117": 411, "00235812": 411, "3557": 411, "009382": 411, "3576": 411, "00828943": 411, "4047": 411, "00672351": 411, "4990": 411, "00514768": 411, "6518": 411, "0040612": 411, "8262": 411, "0107115": 411, "3132": 411, "00920252": 411, "00794258": 411, "4224": 411, "00698123": 411, "4806": 411, "00561026": 411, "5980": 411, "0345669": 411, "3882": 411, "0289719": 411, "4632": 411, "0232584": 411, "5770": 411, "0179766": 411, "7466": 411, "0128144": 411, "10474": 411, "158162": 411, "3394": 411, "132552": 411, "4050": 411, "101844": 411, "5271": 411, "080936": 411, "6633": 411, "0530097": 411, "10127": 411, "135839": 411, "3952": 411, "11116": 411, "4829": 411, "0899513": 411, "0633017": 411, "8481": 411, "0467462": 411, "11484": 411, "0192628": 411, "3919": 411, "0164591": 411, "4586": 411, "0135348": 411, "5578": 411, "0107712": 411, "7009": 411, "00761117": 411, "9919": 411, "0854876": 411, "3532": 411, "0747271": 411, "4041": 411, "0604759": 411, "4993": 411, "0417964": 411, "7225": 411, "0275467": 411, "10962": 411, "0713821": 411, "4164": 411, "0600772": 411, "4948": 411, "0496581": 411, "5986": 411, "0381385": 411, "7794": 411, "027025": 411, "10999": 411, "00502473": 411, "2086": 411, "00451855": 411, "00396819": 411, "00338962": 411, "3093": 411, "00315343": 411, "3325": 411, "0147951": 411, "2834": 411, "0126225": 411, "3322": 411, "010269": 411, "4084": 411, "00785878": 411, "5337": 411, "00570293": 411, "7354": 411, "0161691": 411, "2594": 411, "0144483": 411, "2902": 411, "011705": 411, "3583": 411, "0101487": 411, "4132": 411, "00879332": 411, "4769": 411, "0560297": 411, "2994": 411, "0467998": 411, "3584": 411, "0374397": 411, "4481": 411, "028166": 411, "5956": 411, "0192593": 411, "8711": 411, "277815": 411, "2415": 411, "229837": 411, "2919": 411, "1787": 411, "3755": 411, "126545": 411, "5303": 411, "0835321": 411, "8033": 411, "224925": 411, "2983": 411, "184256": 411, "3642": 411, "146452": 411, "4582": 411, "108899": 411, "6162": 411, "0740655": 411, "9060": 411, "0319455": 411, "2954": 411, "0268136": 411, "3519": 411, "0217062": 411, "4347": 411, "0166666": 411, "5662": 411, "0116466": 411, "8102": 411, "150549": 411, "2507": 411, "119951": 411, "3147": 411, "0893092": 411, "4226": 411, "0637226": 411, "5923": 411, "0427839": 411, "8823": 411, "122421": 411, "3035": 411, "102244": 411, "0822007": 411, "4520": 411, "0622484": 411, "5969": 411, "0429436": 411, "8652": 411, "00481074": 411, "00443796": 411, "2835": 411, "00389863": 411, "00343822": 411, "3659": 411, "00297784": 411, "4225": 411, "0145757": 411, "3453": 411, "012078": 411, "4167": 411, "00896329": 411, "5615": 411, "00727645": 411, "6917": 411, "00548478": 411, "9176": 411, "0150624": 411, "3341": 411, "0132428": 411, "3800": 411, "011443": 411, "4398": 411, "0092883": 411, "5418": 411, "00744553": 411, "6759": 411, "0543977": 411, "3701": 411, "0445693": 411, "4517": 411, "0363329": 411, "5541": 411, "0270492": 411, "7442": 411, "0187415": 411, "10742": 411, "267367": 411, "3011": 411, "223615": 411, "3601": 411, "1797": 411, "134716": 411, "5977": 411, "0692752": 411, "11624": 411, "222661": 411, "3616": 411, "179525": 411, "4485": 411, "139298": 411, "5781": 411, "0958787": 411, "8399": 411, "176292": 411, "4568": 411, "0700283": 411, "0258341": 411, "4383": 411, "0207504": 411, "5457": 411, "0161277": 411, "7021": 411, "0116008": 411, "9761": 411, "148512": 411, "3050": 411, "124238": 411, "0995304": 411, "4551": 411, "0714324": 411, "6341": 411, "044154": 411, "10259": 411, "113174": 411, "3940": 411, "0961662": 411, "4636": 411, "0765841": 411, "5822": 411, "0592912": 411, "7520": 411, "0416614": 411, "10703": 411, "00655654": 411, "2239": 411, "00584761": 411, "2510": 411, "00502113": 411, "2923": 411, "00466269": 411, "3148": 411, "00393276": 411, "3732": 411, "0203923": 411, "2879": 411, "0171018": 411, "3433": 411, "0137027": 411, "4285": 411, "0109527": 411, "5361": 411, "00749636": 411, "7833": 411, "0221319": 411, "0193761": 411, "3030": 411, "0158773": 411, "3698": 411, "0134367": 411, "4370": 411, "0116365": 411, "5046": 411, "0780751": 411, "3008": 411, "0651551": 411, "3604": 411, "0521945": 411, "4500": 411, "0394101": 411, "5959": 411, "0262706": 411, "8940": 411, "398509": 411, "2357": 411, "332153": 411, "259051": 411, "3626": 411, "184412": 411, "5094": 411, "119678": 411, "7850": 411, "313656": 411, "2995": 411, "257989": 411, "3641": 411, "206049": 411, "4559": 411, "152848": 411, "6146": 411, "103125": 411, "9110": 411, "0444861": 411, "2969": 411, "037334": 411, "3538": 411, "0302293": 411, "0231979": 411, "5695": 411, "0158702": 411, "8325": 411, "219777": 411, "2404": 411, "17764": 411, "2975": 411, "135864": 411, "3889": 411, "100424": 411, "5262": 411, "0677547": 411, "7799": 411, "172356": 411, "3018": 411, "144231": 411, "3606": 411, "116019": 411, "4483": 411, "0873881": 411, "5953": 411, "0596004": 411, "8728": 411, "00609695": 411, "2751": 411, "00517637": 411, "3241": 411, "00448956": 411, "3736": 411, "00394876": 411, "4248": 411, "00317463": 411, "5284": 411, "0204832": 411, "3276": 411, "0137691": 411, "4873": 411, "0114194": 411, "5876": 411, "00893304": 411, "7512": 411, "00653312": 411, "10272": 411, "0192409": 411, "3487": 411, "0168348": 411, "3986": 411, "0142343": 411, "4714": 411, "0119455": 411, "5617": 411, "00910648": 411, "7369": 411, "0781101": 411, "0614806": 411, "4366": 411, "046201": 411, "5810": 411, "0357023": 411, "7518": 411, "0222103": 411, "12086": 411, "326917": 411, "3284": 411, "273363": 411, "3927": 411, "220994": 411, "4858": 411, "166153": 411, "6462": 411, "0854403": 411, "12567": 411, "311348": 411, "3448": 411, "243012": 411, "4418": 411, "187933": 411, "5713": 411, "126819": 411, "8466": 411, "0855686": 411, "12548": 411, "0404778": 411, "3730": 411, "0329699": 411, "4579": 411, "0265272": 411, "5692": 411, "0207815": 411, "7265": 411, "0139037": 411, "10860": 411, "183003": 411, "161443": 411, "3741": 411, "129767": 411, "4654": 411, "0893345": 411, "6760": 411, "0610684": 411, "9890": 411, "15525": 411, "3829": 411, "125772": 411, "4727": 411, "101434": 411, "5861": 411, "0765083": 411, "7770": 411, "0537321": 411, "11064": 411, "0104209": 411, "3219": 411, "00908195": 411, "3694": 411, "00781277": 411, "4294": 411, "00651108": 411, "5153": 411, "0051719": 411, "6487": 411, "0321377": 411, "4176": 411, "0269904": 411, "4972": 411, "0220014": 411, "6100": 411, "016901": 411, "7941": 411, "0120042": 411, "11180": 411, "0373802": 411, "0314895": 411, "4262": 411, "0266731": 411, "5031": 411, "0217822": 411, "6161": 411, "0168219": 411, "7978": 411, "176031": 411, "3049": 411, "134442": 411, "3993": 411, "0843776": 411, "6362": 411, "0640577": 411, "8381": 411, "043787": 411, "12261": 411, "697876": 411, "3077": 411, "615338": 411, "3489": 411, "350147": 411, "6133": 411, "267289": 411, "8034": 411, "179695": 411, "11950": 411, "703207": 411, "3053": 411, "561805": 411, "3822": 411, "423052": 411, "5076": 411, "254835": 411, "171434": 411, "12526": 411, "0933483": 411, "3235": 411, "0725632": 411, "4161": 411, "0539197": 411, "5600": 411, "0376119": 411, "8029": 411, "0263137": 411, "11476": 411, "407388": 411, "340939": 411, "3543": 411, "261028": 411, "4627": 411, "151649": 411, "7965": 411, "103379": 411, "11684": 411, "358769": 411, "3314": 411, "283046": 411, "4201": 411, "212152": 411, "5604": 411, "158502": 411, "7502": 411, "107514": 411, "11059": 411, "0148329": 411, "0129116": 411, "3898": 411, "0110537": 411, "4553": 411, "00925277": 411, "5439": 411, "00716987": 411, "7019": 411, "0526609": 411, "3823": 411, "0447282": 411, "4501": 411, "0365834": 411, "5503": 411, "0274874": 411, "7324": 411, "0183895": 411, "10947": 411, "0556653": 411, "0465882": 411, "4321": 411, "039411": 411, "5108": 411, "0318745": 411, "6316": 411, "024706": 411, "8148": 411, "263316": 411, "3058": 411, "198303": 411, "4061": 411, "141966": 411, "5672": 411, "105849": 411, "7608": 411, "0687866": 411, "11707": 411, "793822": 411, "4057": 411, "996979": 411, "3230": 411, "54288": 411, "5933": 411, "412174": 411, "7815": 411, "274441": 411, "11737": 411, "03474": 411, "3113": 411, "832701": 411, "3868": 411, "564787": 411, "421781": 411, "7637": 411, "271587": 411, "11860": 411, "130834": 411, "3462": 411, "0943305": 411, "4802": 411, "0760123": 411, "0580473": 411, "7803": 411, "0395342": 411, "11458": 411, "635729": 411, "2850": 411, "379899": 411, "307908": 411, "5884": 411, "233057": 411, "7774": 411, "157518": 411, "11503": 411, "518276": 411, "3441": 411, "422517": 411, "4221": 411, "323476": 411, "5513": 411, "247251": 411, "7213": 411, "163369": 411, "10917": 411, "0192313": 411, "0168147": 411, "3991": 411, "0143274": 411, "4683": 411, "011932": 411, "5624": 411, "00914975": 411, "7334": 411, "0723144": 411, "3712": 411, "0613803": 411, "4373": 411, "050021": 411, "5366": 411, "0376949": 411, "7121": 411, "0249397": 411, "10763": 411, "0796627": 411, "3369": 411, "0616695": 411, "4352": 411, "0521326": 411, "5149": 411, "042188": 411, "0325741": 411, "8240": 411, "380582": 411, "2821": 411, "24038": 411, "4466": 411, "195271": 411, "5498": 411, "146935": 411, "7307": 411, "0948318": 411, "11322": 411, "08794": 411, "3947": 411, "913626": 411, "4701": 411, "737943": 411, "5820": 411, "558473": 411, "7690": 411, "369466": 411, "51009": 411, "2844": 411, "26974": 411, "3382": 411, "778244": 411, "5518": 411, "589803": 411, "7282": 411, "375284": 411, "11444": 411, "160705": 411, "3758": 411, "135495": 411, "4457": 411, "108718": 411, "5555": 411, "0811198": 411, "7445": 411, "0533513": 411, "11320": 411, "614109": 411, "3934": 411, "518614": 411, "418491": 411, "5772": 411, "31592": 411, "7647": 411, "211893": 411, "11401": 411, "836616": 411, "2842": 411, "699579": 411, "3399": 411, "544194": 411, "379699": 411, "228043": 411, "10428": 411, "un": 412, "u": 412, "sparsity_al": 412, "hotmap": 412, "jpg": 412, "x16": 413, "environment_vari": 413, "kernel_typ": [413, 414], "perfom": 413, "introduct": 413, "benchmark_it": 413, "benchmark_no_refresh": 413, "refresh": 413, "kxn": 413, "sparse_ratio": 413, "micro_b": 413, "output_fp32": 413, "micro_oc": 413, "sub_func_level": 413, "3d_infer": 413, "automaticlli": 413, "dsparse_lib_use_amx": 413, "amx_bf16_x16": 413, "output_bf16": 413, "interv": 413, "lower_bound": 413, "upper_bound": 413, "invalid": 413, "fp32_relu": 413, "src_dt": 413, "dst_dt": 413, "tanspos": 413, "4d": 413, "bs0": 413, "bs1": 413, "scr2": 413, "avx512f_p2031_p2013": 413, "has_binary_add": 413, "tile_n": 413, "coeffici": 413, "vnni_noperm_p2031_p1302": 413, "suuport": 413, "d0xd1x": 413, "d0": 413, "dst_type": 413, "padding_mask": 413, "badd_dim": 413, "blank": 413, "large_weight_threshold": 413, "add_bia": 413, "channel_num": 413, "quantize_dim_elt_num": 413, "src_data_typ": 413, "newli": 413, "subdir": 413, "benchmark_dir": 413, "bench_": 413, "test_": 413, "entranc": 413, "get_true_data_": 413, "check_result_": 413, "gen_case_": 413, "run_bench_": 413, "calc_flop": 413, "get_refresh_data_idx": 413, "benchmark_util": 413, "labl": 414, "run_ci": 414, "overwrit": 414, "it_per_cor": 414, "discard": 414, "new_input_fil": 414, "medium_n": 414, "ci": 414, "apach": 415, "copyright": 415, "parti": 415, "accompani": 415, "research": 415, "wish": 415, "bibtex": 415, "misc": 415, "hanwen": 415, "haihao": 415, "shen": 415, "dong": 415, "hengyu": 415, "meng": 415, "wenxin": 415, "zhang": 415, "howpublish": 415, "url": 415, "year": 415, "logo": 415, "atom": 415, "phi": 415, "pentium": 415, "vtune": 415, "corpor": 415, "subsidiari": 415, "toler": 416, "rel": 416, "absolut": [416, 419, 420], "proport": [416, 417], "vision": 418, "speech": 418, "multimod": 418, "text_classifi": 418, "great": 418, "9998425245285034": 418, "believ": 418, "beauti": 418, "evoc": 418, "ve": 418, "seen": 418, "9998886585235596": 418, "bear": 419, "brain": 419, "damag": 419, "hypothesi": 419, "yann": 419, "lecun": 419, "salient": 419, "anywher": 419, "filter": 419, "magnitud": 419, "lowest": 419, "freez": 419, "grouplasso": 419, "hyper": 419, "didn": 419, "pruning_conf": 419, "littl": 420, "degrad": 420, "ex": 420, "affin": 420, "math": 420, "zeropoint": 420, "asymmetr": 420, "overflow": 420, "fp16": 420, "unseen": 420, "peopl": 420, "emul": 420, "fake": 420, "backward": 420, "mimic": 420, "made": 420, "ultim": 420, "either": 420, "pain": 420, "lossi": 420, "fx": 420, "eager": 420, "qat": 420, "site": 421, "secur": 425, "legal": 425, "injector": 427}, "objects": {"": [[353, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [353, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [353, 1, 1, "_CPPv42jd", "jd"], [353, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [356, 1, 1, "_CPPv42jd", "jd"], [356, 1, 1, "_CPPv42jd", "jd"], [356, 1, 1, "_CPPv42jd", "jd"], [356, 1, 1, "_CPPv42jd", "jd"], [356, 1, 1, "_CPPv42jd", "jd"], [356, 1, 1, "_CPPv42jd", "jd"], [356, 1, 1, "_CPPv42jd", "jd"], [356, 1, 1, "_CPPv42jd", "jd"], [356, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [356, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [356, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [356, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [356, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [356, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [356, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [356, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [356, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [356, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [356, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [354, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [354, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [354, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [354, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [354, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [354, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [354, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [354, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [354, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [356, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [356, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [356, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [356, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [356, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [356, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [356, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [356, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [356, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [356, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [356, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [356, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [356, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [353, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [353, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [353, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::cpu_engine_t::create_kernel"], [353, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [353, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [353, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t", "jd::cpu_engine_t::create_stream"], [353, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [353, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [353, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [353, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [354, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [354, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [354, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [354, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [354, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [354, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [354, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [354, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [354, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [354, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [354, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [354, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [354, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [354, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [354, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [354, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [354, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [354, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [354, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [354, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [354, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [354, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [354, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [354, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [354, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [354, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [354, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [353, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [353, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [353, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [353, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [353, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [353, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [353, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [353, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [353, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [353, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [353, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [353, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [353, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [353, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [354, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [354, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [354, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [354, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [354, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [354, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [354, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [354, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [354, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [354, 3, 1, "_CPPv4N2jd9groupnormE", "jd::groupnorm"], [354, 4, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm"], [354, 4, 1, "_CPPv4N2jd9groupnorm9groupnormEv", "jd::groupnorm::groupnorm"], [354, 5, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm::kdp"], [354, 4, 1, "_CPPv4N2jd9groupnormD0Ev", "jd::groupnorm::~groupnorm"], [354, 3, 1, "_CPPv4N2jd14groupnorm_descE", "jd::groupnorm_desc"], [354, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc"], [354, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv", "jd::groupnorm_desc::groupnorm_desc"], [354, 5, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd14groupnorm_descD0Ev", "jd::groupnorm_desc::~groupnorm_desc"], [354, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [354, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [354, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [354, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [354, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [354, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [354, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [354, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [354, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [354, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [354, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [354, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [354, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [354, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [354, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute"], [354, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [354, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute::ctx"], [354, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [354, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [354, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [354, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [354, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [354, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [354, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [354, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [354, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [354, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [354, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [354, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [354, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [354, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [354, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [354, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [354, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [354, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [354, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [354, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [354, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [354, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [354, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [354, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [354, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [354, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [354, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [354, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [354, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [354, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [354, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [354, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [354, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [354, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [354, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [354, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [354, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [354, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [354, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [354, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [354, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [354, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [354, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [355, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [355, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [355, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [355, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [355, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [355, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [355, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [355, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [355, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [355, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [355, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [355, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [355, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [355, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [355, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [355, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [355, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [355, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [355, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [355, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [355, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [355, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [355, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [355, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [355, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [355, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [355, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv", "jd::operator_desc::tensor_dtypes"], [355, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv", "jd::operator_desc::tensor_ftypes"], [355, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_shapesEv", "jd::operator_desc::tensor_shapes"], [355, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [355, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [354, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [354, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [354, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [354, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [354, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [354, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [354, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [354, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [354, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [354, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [354, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [354, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [354, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [354, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [354, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [354, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [354, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [354, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [354, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [354, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [354, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [354, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [354, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [354, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [354, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [354, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [354, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [354, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [354, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [354, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [354, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [354, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [354, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [354, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [354, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [354, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [354, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [354, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [354, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [356, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [356, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [356, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [356, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [356, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [356, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [356, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [356, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [356, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [356, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [356, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [356, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [356, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [356, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [356, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [356, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [356, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [356, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [356, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [356, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [356, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [356, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [356, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [356, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [356, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [356, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [356, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [356, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [356, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [356, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [356, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [356, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [356, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [356, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [356, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [356, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [356, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [356, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [356, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [356, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [356, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [356, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [356, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [356, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [356, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [356, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [356, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [356, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [356, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [356, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [356, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [356, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [356, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [356, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [356, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE", "jd::ssd::matmul_fp8_data_t::matE"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [356, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE", "jd::ssd::matmul_fp8_data_t::scale"], [356, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE", "jd::ssd::matmul_fp8_param_t::has_append_sum"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E", "jd::ssd::matmul_fp8_param_t::has_scale0"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE", "jd::ssd::matmul_fp8_param_t::weight_8bit"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E", "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E", "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [356, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [356, 1, 1, "_CPPv4N2jd3ssd12matmul_inputE", "jd::ssd::matmul_input"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::APPEND_SUM"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::SCALE0"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::SRC0"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::SRC1"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::SRC2"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::ZP0"], [356, 6, 1, "_CPPv4N2jd3ssd12matmul_input5inputE", "jd::ssd::matmul_input::input"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::input::APPEND_SUM"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::input::SCALE0"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::input::SRC0"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::input::SRC1"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::input::SRC2"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::input::ZP0"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::input::matmul_io_MAX"], [356, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::matmul_io_MAX"], [356, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::APPEND_SUM"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [356, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::io::APPEND_SUM"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [356, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [356, 1, 1, "_CPPv4N2jd3ssd13matmul_outputE", "jd::ssd::matmul_output"], [356, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::DST0"], [356, 6, 1, "_CPPv4N2jd3ssd13matmul_output6outputE", "jd::ssd::matmul_output::output"], [356, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::output::DST0"], [356, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [356, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [356, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [356, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [356, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [356, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [356, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [356, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [356, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [356, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [356, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [356, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [356, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [356, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [356, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [356, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [356, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [356, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [356, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [356, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [356, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [356, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [356, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [356, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [356, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [356, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [356, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [356, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [356, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [356, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [356, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [356, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [356, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [356, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [356, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [356, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [356, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [356, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [356, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [356, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [356, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [356, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [356, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [356, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [356, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [356, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [356, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [356, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [356, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [356, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [356, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [356, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [356, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [356, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [356, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [356, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [356, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [356, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [356, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [356, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [356, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [356, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [356, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [356, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [356, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [356, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [356, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [356, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [356, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [356, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [356, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [356, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [356, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [356, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [356, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [356, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [356, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [356, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [356, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [354, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [354, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [354, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [354, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [354, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [354, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [354, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [354, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [354, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [354, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [354, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [354, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [354, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [354, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [354, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [354, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [354, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [354, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [354, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [0, 9, 0, "-", "clang-format"], [1, 9, 0, "-", "convert_falcon"], [2, 9, 0, "-", "convert_gptj"], [3, 9, 0, "-", "convert_gptj_wo_vocab"], [4, 9, 0, "-", "convert_gptneox"], [5, 9, 0, "-", "convert_llama"], [6, 9, 0, "-", "convert_mpt"], [7, 9, 0, "-", "gptj_binding"], [222, 9, 0, "-", "intel_extension_for_transformers"], [259, 9, 0, "-", "sparsity_all"], [260, 9, 0, "-", "test_add_cls_token"], [261, 9, 0, "-", "test_add_embeddings"], [262, 9, 0, "-", "test_add_zeros"], [263, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [264, 9, 0, "-", "test_attention_reshape"], [265, 9, 0, "-", "test_baddbmm"], [266, 9, 0, "-", "test_bert_mini_fp32"], [267, 9, 0, "-", "test_binary_op"], [268, 9, 0, "-", "test_binaryop"], [269, 9, 0, "-", "test_cast_to"], [270, 9, 0, "-", "test_concat"], [271, 9, 0, "-", "test_conv"], [272, 9, 0, "-", "test_conv_int8"], [273, 9, 0, "-", "test_conv_reshape"], [274, 9, 0, "-", "test_decoder_attn_reshape"], [275, 9, 0, "-", "test_dispatcher_tuning_acc"], [276, 9, 0, "-", "test_dispatcher_tuning_throughput"], [277, 9, 0, "-", "test_dolly_pattern"], [278, 9, 0, "-", "test_dynamic_quantization"], [279, 9, 0, "-", "test_electra"], [280, 9, 0, "-", "test_embedding"], [281, 9, 0, "-", "test_embeddingbag"], [282, 9, 0, "-", "test_execution_options"], [283, 9, 0, "-", "test_fwk"], [284, 9, 0, "-", "test_gather"], [285, 9, 0, "-", "test_gelu"], [286, 9, 0, "-", "test_gpt_int8"], [287, 9, 0, "-", "test_graph_dispatch"], [288, 9, 0, "-", "test_graph_optimizer"], [289, 9, 0, "-", "test_insert_input_output_data"], [290, 9, 0, "-", "test_is_supported_onnx_graph"], [291, 9, 0, "-", "test_last_layer_shape"], [292, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [293, 9, 0, "-", "test_layer_norm_with_transpose"], [294, 9, 0, "-", "test_layernorm"], [295, 9, 0, "-", "test_linear"], [296, 9, 0, "-", "test_linear_int8"], [297, 9, 0, "-", "test_llama_pattern"], [298, 9, 0, "-", "test_main"], [299, 9, 0, "-", "test_matmul"], [300, 9, 0, "-", "test_matmul_int8"], [301, 9, 0, "-", "test_matmul_with_bias_relu"], [302, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [303, 9, 0, "-", "test_matmul_with_bias_tanh"], [304, 9, 0, "-", "test_merged_embeddingbag"], [305, 9, 0, "-", "test_model"], [306, 9, 0, "-", "test_neox_rotary_pos_emb"], [307, 9, 0, "-", "test_onnx_utils"], [308, 9, 0, "-", "test_operator_adaptor"], [309, 9, 0, "-", "test_ops"], [310, 9, 0, "-", "test_padding_seq"], [311, 9, 0, "-", "test_padding_sequence"], [312, 9, 0, "-", "test_pattern_dispatch"], [313, 9, 0, "-", "test_permute"], [314, 9, 0, "-", "test_position_embeddings"], [315, 9, 0, "-", "test_pow"], [316, 9, 0, "-", "test_primitive_cache_acc"], [317, 9, 0, "-", "test_primitive_cache_throughput"], [318, 9, 0, "-", "test_qkv_merge"], [319, 9, 0, "-", "test_qkv_reshape"], [320, 9, 0, "-", "test_quant_onnx_execute"], [321, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [322, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [323, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [324, 9, 0, "-", "test_size"], [325, 9, 0, "-", "test_slice"], [326, 9, 0, "-", "test_softmax"], [327, 9, 0, "-", "test_start_end_logits"], [328, 9, 0, "-", "test_static_compressed_buffer"], [329, 9, 0, "-", "test_tanh"], [330, 9, 0, "-", "test_text_encoder"], [331, 9, 0, "-", "test_text_encoder_bf16"], [332, 9, 0, "-", "test_tf_utils"], [333, 9, 0, "-", "test_token_type_embeddings"], [334, 9, 0, "-", "test_transpose"], [335, 9, 0, "-", "test_transpose_batch_matmul"], [336, 9, 0, "-", "test_two_linear"], [337, 9, 0, "-", "test_unet"], [338, 9, 0, "-", "test_unet_bf16"], [339, 9, 0, "-", "test_unsqueeze"], [340, 9, 0, "-", "test_vae_decoder"], [341, 9, 0, "-", "test_vae_decoder_bf16"], [342, 9, 0, "-", "test_weight_sharing_acc"], [343, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [344, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [345, 9, 0, "-", "test_weight_sharing_throughput"]], "convert_falcon": [[1, 10, 1, "", "bytes_to_unicode"]], "convert_gptj": [[2, 10, 1, "", "bytes_to_unicode"]], "convert_gptj_wo_vocab": [[3, 11, 1, "", "LazyUnpickler"], [3, 11, 1, "", "NEFileType"], [3, 10, 1, "", "bounded_parallel_map"], [3, 10, 1, "", "bytes_to_unicode"], [3, 10, 1, "", "find_multifile_paths"], [3, 10, 1, "", "handle_quantization"], [3, 10, 1, "", "load_some_model"], [3, 10, 1, "", "nth_multifile_path"]], "convert_gptj_wo_vocab.LazyUnpickler": [[3, 12, 1, "", "find_class"]], "convert_gptneox": [[4, 10, 1, "", "bytes_to_unicode"]], "convert_llama": [[5, 11, 1, "", "LazyUnpickler"], [5, 11, 1, "", "NEFileType"], [5, 10, 1, "", "bounded_parallel_map"], [5, 10, 1, "", "find_multifile_paths"], [5, 10, 1, "", "handle_quantization"], [5, 10, 1, "", "load_some_model"], [5, 10, 1, "", "nth_multifile_path"]], "convert_llama.LazyUnpickler": [[5, 12, 1, "", "find_class"]], "convert_mpt": [[6, 10, 1, "", "bytes_to_unicode"]], "intel_extension_for_transformers": [[8, 9, 0, "-", "backends"], [213, 9, 0, "-", "evaluation"], [229, 9, 0, "-", "optimization"], [257, 9, 0, "-", "preprocessing"]], "intel_extension_for_transformers.backends": [[208, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[19, 9, 0, "-", "compile"], [208, 10, 1, "", "neural_engine_bin"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[9, 9, 0, "-", "compile"], [10, 9, 0, "-", "dynamic_quantize"], [12, 9, 0, "-", "extractors"], [17, 9, 0, "-", "graph"], [18, 9, 0, "-", "graph_utils"], [20, 9, 0, "-", "loaders"], [22, 9, 0, "-", "logger"], [23, 9, 0, "-", "onnx_utils"], [45, 9, 0, "-", "ops"], [91, 9, 0, "-", "optimizer"], [115, 9, 0, "-", "sub_graph"], [206, 9, 0, "-", "tf_utils"], [207, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[9, 10, 1, "", "compile"], [9, 10, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[11, 9, 0, "-", "extractor"], [13, 9, 0, "-", "onnx_extractor"], [14, 9, 0, "-", "tf_extractor"], [15, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[11, 11, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[13, 11, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[14, 11, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[15, 11, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[16, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[16, 11, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[16, 12, 1, "", "add_config_item"], [16, 12, 1, "", "change_node_input_tensors"], [16, 12, 1, "", "change_node_output_tensors"], [16, 12, 1, "", "dump_tensor"], [16, 12, 1, "", "engine_init"], [16, 12, 1, "", "get_next_node_names"], [16, 12, 1, "", "get_node_by_name"], [16, 12, 1, "", "get_node_id"], [16, 12, 1, "", "get_pre_node_names"], [16, 12, 1, "", "get_sparse_nodes_name"], [16, 12, 1, "", "get_tensor_idx"], [16, 12, 1, "", "graph_dispatch"], [16, 12, 1, "", "graph_init"], [16, 12, 1, "", "inference"], [16, 12, 1, "", "inquire_config_item"], [16, 12, 1, "", "insert_nodes"], [16, 12, 1, "", "modify_node_connections"], [16, 12, 1, "", "remove_nodes"], [16, 12, 1, "", "rename_node"], [16, 12, 1, "", "save"], [16, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[18, 11, 1, "", "LazyImport"], [18, 10, 1, "", "autocast_init"], [18, 10, 1, "", "construct_node"], [18, 10, 1, "", "del_environ_var"], [18, 10, 1, "", "del_environ_vars"], [18, 10, 1, "", "environ_info_init"], [18, 10, 1, "", "get_autocast_info"], [18, 10, 1, "", "get_data_dtype"], [18, 10, 1, "", "get_environ_info"], [18, 10, 1, "", "get_model_fwk_name"], [18, 10, 1, "", "get_quant_info"], [18, 10, 1, "", "insert_environ_info"], [18, 10, 1, "", "insert_pattern"], [18, 10, 1, "", "insert_quant_info"], [18, 10, 1, "", "list2str"], [18, 10, 1, "", "names_from_input"], [18, 10, 1, "", "pattern_mapping"], [18, 10, 1, "", "pattern_mapping_conf_validation"], [18, 10, 1, "", "quant_info_init"], [18, 10, 1, "", "remove_environ_info_item"], [18, 10, 1, "", "remove_environ_info_items"], [18, 10, 1, "", "search_pattern"], [18, 10, 1, "", "search_straight_pattern"], [18, 10, 1, "", "set_autocast"], [18, 10, 1, "", "set_environ_var"], [18, 10, 1, "", "set_environ_vars"], [18, 10, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[21, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[21, 11, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[22, 11, 1, "", "Logger"], [22, 10, 1, "", "debug"], [22, 10, 1, "", "error"], [22, 10, 1, "", "fatal"], [22, 10, 1, "", "info"], [22, 10, 1, "", "log"], [22, 10, 1, "", "warn"], [22, 10, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[22, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[23, 10, 1, "", "bias_to_int32"], [23, 10, 1, "", "change_num_name"], [23, 10, 1, "", "get_children"], [23, 10, 1, "", "get_initializer_children_names"], [23, 10, 1, "", "get_node_children_names"], [23, 10, 1, "", "graph_node_names_details"], [23, 10, 1, "", "is_supported_onnx_graph"], [23, 10, 1, "", "is_supported_onnx_node"], [23, 10, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[24, 9, 0, "-", "all"], [25, 9, 0, "-", "assert"], [26, 9, 0, "-", "baddbmm"], [27, 9, 0, "-", "batch_matmul"], [28, 9, 0, "-", "batch_matmul_v2"], [29, 9, 0, "-", "bias_add"], [30, 9, 0, "-", "binary_op"], [31, 9, 0, "-", "cast"], [32, 9, 0, "-", "concat"], [33, 9, 0, "-", "conv"], [34, 9, 0, "-", "cos"], [35, 9, 0, "-", "empty_ops"], [36, 9, 0, "-", "expand_dims"], [37, 9, 0, "-", "fused_batch_matmul_v2"], [38, 9, 0, "-", "fused_batch_norm_v3"], [39, 9, 0, "-", "fused_gemm"], [40, 9, 0, "-", "fused_matmul"], [41, 9, 0, "-", "gather"], [42, 9, 0, "-", "gather_elements"], [43, 9, 0, "-", "gelu"], [44, 9, 0, "-", "gemm"], [46, 9, 0, "-", "iterator_get_next"], [47, 9, 0, "-", "iterator_v2"], [48, 9, 0, "-", "layer_normalization"], [49, 9, 0, "-", "log_softmax"], [50, 9, 0, "-", "map_and_batch_dataset"], [51, 9, 0, "-", "matmul"], [52, 9, 0, "-", "mean"], [53, 9, 0, "-", "mkl_layer_norm"], [54, 9, 0, "-", "model_dataset"], [55, 9, 0, "-", "one_hot"], [56, 9, 0, "-", "onnx_input"], [57, 9, 0, "-", "op"], [58, 9, 0, "-", "optimize_dataset"], [59, 9, 0, "-", "pack"], [60, 9, 0, "-", "padding_sequence"], [61, 9, 0, "-", "placeholder"], [62, 9, 0, "-", "pos_embed"], [63, 9, 0, "-", "pow"], [64, 9, 0, "-", "quantize_linear"], [65, 9, 0, "-", "quantize_v2"], [66, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [67, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [68, 9, 0, "-", "reduce_mean"], [69, 9, 0, "-", "reduce_sum"], [70, 9, 0, "-", "reorder"], [71, 9, 0, "-", "reshape"], [72, 9, 0, "-", "resize"], [73, 9, 0, "-", "rsub"], [74, 9, 0, "-", "scatter_elements"], [75, 9, 0, "-", "shape"], [76, 9, 0, "-", "sin"], [77, 9, 0, "-", "size"], [78, 9, 0, "-", "slice"], [79, 9, 0, "-", "slice_position_ids"], [80, 9, 0, "-", "softmax"], [81, 9, 0, "-", "split"], [82, 9, 0, "-", "squeeze"], [83, 9, 0, "-", "strided_slice"], [84, 9, 0, "-", "tensor"], [85, 9, 0, "-", "top_k"], [86, 9, 0, "-", "transpose"], [87, 9, 0, "-", "unpack"], [88, 9, 0, "-", "unsqueeze"], [89, 9, 0, "-", "view"], [90, 9, 0, "-", "where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[24, 11, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[25, 11, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[26, 11, 1, "", "Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm": [[26, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[27, 11, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[28, 11, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[28, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[29, 11, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[30, 11, 1, "", "BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[31, 11, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[32, 11, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[33, 11, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[34, 11, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[35, 11, 1, "", "Add"], [35, 11, 1, "", "AddV2"], [35, 11, 1, "", "Arange"], [35, 11, 1, "", "BinaryAdd"], [35, 11, 1, "", "Constant"], [35, 11, 1, "", "ConstantOfShape"], [35, 11, 1, "", "Convolution"], [35, 11, 1, "", "CumSum"], [35, 11, 1, "", "Dequantize"], [35, 11, 1, "", "DequantizeLinear"], [35, 11, 1, "", "Einsum"], [35, 11, 1, "", "EmbeddingBag"], [35, 11, 1, "", "Erf"], [35, 11, 1, "", "Expand"], [35, 11, 1, "", "ExpandIndices"], [35, 11, 1, "", "Fill"], [35, 11, 1, "", "FlatMapDataset"], [35, 11, 1, "", "Flatten"], [35, 11, 1, "", "Floor_divide"], [35, 11, 1, "", "Identity"], [35, 11, 1, "", "InnerProduct"], [35, 11, 1, "", "Input"], [35, 11, 1, "", "LatRange"], [35, 11, 1, "", "ListConstruct"], [35, 11, 1, "", "ListUnpack"], [35, 11, 1, "", "Loop"], [35, 11, 1, "", "MakeIterator"], [35, 11, 1, "", "Masked_fill"], [35, 11, 1, "", "MatMulWithBias"], [35, 11, 1, "", "MatMulWithBiasAdd"], [35, 11, 1, "", "MatMulWithBiasGelu"], [35, 11, 1, "", "MatMulWithBiasRelu"], [35, 11, 1, "", "MatMulWithBiasSigmoid"], [35, 11, 1, "", "MatMulWithBiasTanh"], [35, 11, 1, "", "Matmul"], [35, 11, 1, "", "Max"], [35, 11, 1, "", "MergedEmbeddingbag"], [35, 11, 1, "", "MultiHeadAttenion"], [35, 11, 1, "", "Onehot"], [35, 11, 1, "", "OpAny"], [35, 11, 1, "", "Output"], [35, 11, 1, "", "PositionIds"], [35, 11, 1, "", "QLinearAdd"], [35, 11, 1, "", "QLinearMatMul"], [35, 11, 1, "", "QLinearMul"], [35, 11, 1, "", "Range"], [35, 11, 1, "", "RealDiv"], [35, 11, 1, "", "Reciprocal"], [35, 11, 1, "", "Relu"], [35, 11, 1, "", "Repeat"], [35, 11, 1, "", "Rsqrt"], [35, 11, 1, "", "SequenceLength"], [35, 11, 1, "", "Sigmoid"], [35, 11, 1, "", "Silu"], [35, 11, 1, "", "Sqrt"], [35, 11, 1, "", "Square"], [35, 11, 1, "", "SquaredDifference"], [35, 11, 1, "", "Stack"], [35, 11, 1, "", "StopGradient"], [35, 11, 1, "", "Tanh"], [35, 11, 1, "", "TensorSliceDataset"], [35, 11, 1, "", "Tile"], [35, 11, 1, "", "TokenTypeIds"], [35, 11, 1, "", "TransposeBatchMatMul"], [35, 11, 1, "", "Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[36, 11, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[36, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[38, 11, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[39, 11, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[40, 11, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[41, 11, 1, "", "Gather"], [41, 11, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[42, 11, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[43, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[44, 11, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[44, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[46, 11, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[47, 11, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[47, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[48, 11, 1, "", "LayerNorm"], [48, 11, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm": [[48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[49, 11, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[50, 11, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[51, 11, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[52, 11, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[54, 11, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[55, 11, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[56, 11, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[56, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[57, 11, 1, "", "Operator"], [57, 10, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[57, 12, 1, "", "construct"], [57, 12, 1, "", "extract"], [57, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[58, 11, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[59, 11, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[60, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[61, 11, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[62, 11, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[63, 11, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[64, 11, 1, "", "Quantize"], [64, 11, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[65, 11, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[67, 11, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[68, 11, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[68, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[69, 11, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[70, 11, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[71, 11, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[72, 11, 1, "", "Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[73, 11, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[73, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[74, 11, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[75, 11, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[76, 11, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[77, 11, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[78, 11, 1, "", "Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[79, 11, 1, "", "SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds": [[79, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[80, 11, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[80, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[81, 11, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[81, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[82, 11, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[82, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[83, 11, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[83, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[84, 11, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[85, 11, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[85, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[86, 11, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[86, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[87, 11, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[87, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[88, 11, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[88, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[89, 11, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[89, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[90, 11, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where": [[90, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[91, 11, 1, "", "Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer": [[91, 12, 1, "", "optimize"], [91, 12, 1, "", "weight_optimization"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[92, 9, 0, "-", "InnerproductReshapeFusion"], [93, 9, 0, "-", "add_cls_token"], [94, 9, 0, "-", "add_embeddings"], [95, 9, 0, "-", "arangewithreciprocal"], [96, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [97, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [98, 9, 0, "-", "attentionBlock_QKVPreReshape"], [99, 9, 0, "-", "attentionBlock_QKVReshape"], [100, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [101, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [102, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [103, 9, 0, "-", "attention_reshape"], [104, 9, 0, "-", "cast_to"], [105, 9, 0, "-", "collect_quant_info"], [106, 9, 0, "-", "conv_reshape"], [107, 9, 0, "-", "decoder_attn_reshape"], [108, 9, 0, "-", "einsumwitharange"], [109, 9, 0, "-", "embeddingbag"], [110, 9, 0, "-", "embeddings_to_2d_before_inner_product"], [111, 9, 0, "-", "gelu"], [112, 9, 0, "-", "generate_sequence"], [113, 9, 0, "-", "groupNorm"], [114, 9, 0, "-", "groupNormSwish"], [116, 9, 0, "-", "innerproductwithbiasgelu"], [117, 9, 0, "-", "innerproductwithslice"], [118, 9, 0, "-", "innerproductwithswish"], [119, 9, 0, "-", "input_data"], [120, 9, 0, "-", "input_file"], [121, 9, 0, "-", "insert_bf16_node"], [122, 9, 0, "-", "insert_quant_node"], [123, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [124, 9, 0, "-", "interact_features"], [125, 9, 0, "-", "last_layer_shape"], [126, 9, 0, "-", "layer_norm"], [127, 9, 0, "-", "layer_norm_with_reduce_mean"], [128, 9, 0, "-", "layer_norm_with_transpose"], [129, 9, 0, "-", "llama_embeding"], [130, 9, 0, "-", "llama_matmulwithtranspose"], [131, 9, 0, "-", "llama_postprocess"], [132, 9, 0, "-", "llama_rotary_pos_emb"], [133, 9, 0, "-", "lower_all_tuples"], [134, 9, 0, "-", "matmul_with_bias"], [135, 9, 0, "-", "matmul_with_bias_add"], [136, 9, 0, "-", "matmul_with_bias_gelu"], [137, 9, 0, "-", "matmul_with_bias_relu"], [138, 9, 0, "-", "matmul_with_bias_sigmoid"], [139, 9, 0, "-", "matmul_with_bias_tanh"], [140, 9, 0, "-", "matmul_with_bias_unsqueeze"], [141, 9, 0, "-", "matmul_with_transpose"], [142, 9, 0, "-", "matmul_with_transpose_scale_add"], [143, 9, 0, "-", "merged_embeddingbag"], [144, 9, 0, "-", "multi_head_attention"], [145, 9, 0, "-", "neox_reorder_change"], [146, 9, 0, "-", "neox_rotary_pos_emb"], [147, 9, 0, "-", "operator_adaptor"], [148, 9, 0, "-", "output_data"], [149, 9, 0, "-", "padding_sequence"], [150, 9, 0, "-", "pattern"], [151, 9, 0, "-", "position_embeddings"], [152, 9, 0, "-", "position_embeddings_v1"], [153, 9, 0, "-", "qkv_merge"], [154, 9, 0, "-", "qkv_reshape"], [155, 9, 0, "-", "quant_gather_to_bf16"], [156, 9, 0, "-", "quantize_fusion"], [157, 9, 0, "-", "quantized_graph_dtype_refactor"], [158, 9, 0, "-", "remove_constant_op"], [159, 9, 0, "-", "remove_last_view"], [160, 9, 0, "-", "remove_range"], [161, 9, 0, "-", "remove_unused_operator"], [162, 9, 0, "-", "remove_zeros"], [163, 9, 0, "-", "removeslice"], [164, 9, 0, "-", "reshape_after_restore_hidden_states"], [165, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [166, 9, 0, "-", "reshape_before_restore_hidden_states"], [167, 9, 0, "-", "reshape_fusion"], [168, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [169, 9, 0, "-", "rms_norm"], [170, 9, 0, "-", "rotary_pos_emb"], [171, 9, 0, "-", "slicemask"], [172, 9, 0, "-", "stableDiffusion_ExplicitNHWCTranspose"], [173, 9, 0, "-", "stableDiffusion_MHA"], [174, 9, 0, "-", "stableDiffusion_MHAReshape"], [175, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [176, 9, 0, "-", "stableDiffusion_bf16Convert"], [177, 9, 0, "-", "start_end_logits"], [178, 9, 0, "-", "subgraph_matcher"], [179, 9, 0, "-", "textEncdoer_word_embedding"], [180, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [181, 9, 0, "-", "textEncoder_AttentionReshape"], [182, 9, 0, "-", "textEncoder_KVReshape"], [183, 9, 0, "-", "textEncoder_MulReshape"], [184, 9, 0, "-", "textEncoder_QReshape"], [185, 9, 0, "-", "textEncoder_SoftmaxReshape"], [186, 9, 0, "-", "textEncoder_causal_attention_mask"], [187, 9, 0, "-", "token_type_embeddings"], [188, 9, 0, "-", "token_type_embeddings_v1"], [189, 9, 0, "-", "torch_embedding"], [190, 9, 0, "-", "torch_ip_insert_bias"], [191, 9, 0, "-", "torch_unpack_baddbmm"], [192, 9, 0, "-", "torchinsertbf16node"], [193, 9, 0, "-", "torchpaddingsquence"], [194, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [195, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [196, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [197, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [198, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [199, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [200, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [201, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [202, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [203, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [204, 9, 0, "-", "transpose_batch_matmul"], [205, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[92, 11, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[93, 11, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[94, 11, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[95, 11, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[96, 11, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[97, 11, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[98, 11, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[99, 11, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[100, 11, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[101, 11, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[102, 11, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[103, 11, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[104, 11, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[105, 11, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[106, 11, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[107, 11, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[108, 11, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[109, 11, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[110, 11, 1, "", "EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[111, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[112, 11, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[113, 11, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[114, 11, 1, "", "GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[116, 11, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[117, 11, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[118, 11, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[119, 11, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[120, 11, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[121, 11, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[122, 11, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[123, 11, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[124, 11, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[125, 11, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[126, 11, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[127, 11, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[128, 11, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[129, 11, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[130, 11, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[131, 11, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[132, 11, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[133, 11, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[134, 11, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[135, 11, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[136, 11, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[137, 11, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[138, 11, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[139, 11, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[140, 11, 1, "", "MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[141, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[142, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[143, 11, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[144, 11, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[145, 11, 1, "", "NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[146, 11, 1, "", "NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[147, 11, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[148, 11, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[149, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[150, 11, 1, "", "Pattern"], [150, 10, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[151, 11, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[152, 11, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[153, 11, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[154, 11, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[155, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[156, 11, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[157, 11, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[158, 11, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[159, 11, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[160, 11, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[161, 11, 1, "", "RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[162, 11, 1, "", "RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[163, 11, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[164, 11, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[165, 11, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[166, 11, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[167, 11, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[168, 11, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[169, 11, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[170, 11, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[171, 11, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[172, 11, 1, "", "ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[173, 11, 1, "", "StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[174, 11, 1, "", "StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[175, 11, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[176, 11, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[177, 11, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[178, 11, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[179, 11, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[180, 11, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[181, 11, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[182, 11, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[183, 11, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[184, 11, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[185, 11, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[186, 11, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[187, 11, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[188, 11, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[189, 11, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[190, 11, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[191, 11, 1, "", "TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[192, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[193, 11, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[194, 11, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[195, 11, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[196, 11, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[197, 11, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[198, 11, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[199, 11, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[200, 11, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[201, 11, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[202, 11, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[203, 11, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[204, 11, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[205, 11, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[206, 13, 1, "", "TF_DTYPE_ID"], [206, 10, 1, "", "create_tf_node"], [206, 10, 1, "", "get_tensor_dest_op"], [206, 10, 1, "", "graph_node_names_details"], [206, 10, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[207, 10, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[212, 9, 0, "-", "hf_eval"], [215, 9, 0, "-", "lm_code_eval"], [217, 9, 0, "-", "lm_eval"]], "intel_extension_for_transformers.evaluation.hf_eval": [[209, 9, 0, "-", "evaluator"], [211, 9, 0, "-", "hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[210, 9, 0, "-", "cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[210, 11, 1, "", "DataCollatorForSupervisedDataset"], [210, 10, 1, "", "preprocess"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[214, 9, 0, "-", "evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[214, 10, 1, "", "evaluate"], [214, 10, 1, "", "pattern_match"]], "intel_extension_for_transformers.evaluation.lm_eval": [[216, 9, 0, "-", "evaluator"], [219, 9, 0, "-", "models"], [220, 9, 0, "-", "tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[216, 10, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[218, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[218, 11, 1, "", "AutoCausalLM"], [218, 11, 1, "", "AutoSeq2SeqLM"], [218, 11, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[221, 9, 0, "-", "lambada"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[221, 11, 1, "", "LambadaOpenAI"], [221, 11, 1, "", "LambadaStandard"]], "intel_extension_for_transformers.optimization": [[223, 9, 0, "-", "benchmark"], [224, 9, 0, "-", "config"], [225, 9, 0, "-", "distillation"], [228, 9, 0, "-", "dynamic"], [231, 9, 0, "-", "mixture"], [232, 9, 0, "-", "model"], [233, 9, 0, "-", "modeling"], [237, 9, 0, "-", "nas"], [239, 9, 0, "-", "optimizer"], [240, 9, 0, "-", "optimizer_tf"], [241, 9, 0, "-", "pipeline"], [242, 9, 0, "-", "pruner"], [244, 9, 0, "-", "pruning"], [245, 9, 0, "-", "quantization"], [246, 9, 0, "-", "trainer"], [248, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[223, 10, 1, "", "benchmark"], [223, 10, 1, "", "get_example_inputs"], [223, 10, 1, "", "preprocess_model"], [223, 10, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[224, 11, 1, "", "AutoDistillationConfig"], [224, 11, 1, "", "BenchmarkConfig"], [224, 11, 1, "", "DistillationConfig"], [224, 11, 1, "", "DynamicLengthConfig"], [224, 11, 1, "", "FlashDistillationConfig"], [224, 11, 1, "", "NASConfig"], [224, 11, 1, "", "Provider"], [224, 11, 1, "", "PrunerV2"], [224, 11, 1, "", "PruningConfig"], [224, 11, 1, "", "QuantizationConfig"], [224, 11, 1, "", "TFDistillationConfig"], [224, 11, 1, "", "WeightPruningConfig"], [224, 10, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[224, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[225, 11, 1, "", "Criterion"], [225, 11, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[226, 9, 0, "-", "drop_and_restore_utils"], [227, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[226, 10, 1, "", "sample_layer_configuration"], [226, 10, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[227, 11, 1, "", "Evolution"], [227, 10, 1, "", "approx_ratio"], [227, 10, 1, "", "inverse"], [227, 10, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[227, 12, 1, "", "add_gene"], [227, 12, 1, "", "convex_hull"], [227, 12, 1, "", "crossover"], [227, 12, 1, "", "get_store"], [227, 12, 1, "", "load_store"], [227, 12, 1, "", "mutate"], [227, 12, 1, "", "pareto_frontier"], [227, 12, 1, "", "save_population"], [227, 12, 1, "", "save_store"], [227, 12, 1, "", "set_lower_constraint"], [227, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[230, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[230, 11, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[230, 12, 1, "", "create_distillers"], [230, 12, 1, "", "estimate"], [230, 12, 1, "", "init_by_cfg"], [230, 12, 1, "", "load_search_results"], [230, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[232, 11, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[232, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.modeling": [[234, 9, 0, "-", "modeling_base_seq2seq"], [235, 9, 0, "-", "modeling_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[235, 11, 1, "", "INCDecoder"], [235, 11, 1, "", "INCEncoder"]], "intel_extension_for_transformers.optimization.nas": [[236, 9, 0, "-", "basic_nas"], [238, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[236, 11, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[236, 12, 1, "", "estimate"], [236, 12, 1, "", "execute"], [236, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[238, 11, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[239, 11, 1, "", "NoTrainerOptimizer"], [239, 11, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[239, 12, 1, "", "distill"], [239, 12, 1, "", "init_distiller"], [239, 12, 1, "", "init_pruner"], [239, 12, 1, "", "init_quantizer"], [239, 12, 1, "", "prune"], [239, 12, 1, "", "quantize"], [239, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[239, 12, 1, "", "fit"], [239, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[240, 11, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[240, 12, 1, "", "autodistill"], [240, 12, 1, "", "build_train_func"], [240, 12, 1, "", "builtin_eval_func"], [240, 12, 1, "", "distill"], [240, 12, 1, "", "init_distiller"], [240, 12, 1, "", "init_pruner"], [240, 12, 1, "", "init_quantizer"], [240, 12, 1, "", "model_builder_builtin"], [240, 12, 1, "", "prune"], [240, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[241, 10, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruner": [[243, 9, 0, "-", "pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[243, 11, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning.Pruning": [[243, 14, 1, "", "config_file_path"], [243, 12, 1, "", "get_sparsity_ratio"], [243, 14, 1, "", "model"], [243, 12, 1, "", "on_after_eval"], [243, 12, 1, "", "on_after_optimizer_step"], [243, 12, 1, "", "on_before_eval"], [243, 12, 1, "", "on_before_optimizer_step"], [243, 12, 1, "", "on_epoch_begin"], [243, 12, 1, "", "on_epoch_end"], [243, 12, 1, "", "on_step_begin"], [243, 12, 1, "", "on_step_end"], [243, 12, 1, "", "on_train_begin"], [243, 12, 1, "", "on_train_end"], [243, 14, 1, "", "pruner_info"], [243, 14, 1, "", "pruners"], [243, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pruning": [[244, 11, 1, "", "PrunerConfig"], [244, 11, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.quantization": [[245, 11, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[246, 11, 1, "", "BaseTrainer"], [246, 11, 1, "", "NLPSeq2SeqTrainer"], [246, 11, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[246, 12, 1, "", "auto_distil_evaluation_loop"], [246, 12, 1, "", "autodistillation"], [246, 12, 1, "", "benchmark"], [246, 12, 1, "", "builtin_eval_func"], [246, 12, 1, "", "builtin_train_func"], [246, 12, 1, "", "compute_loss"], [246, 12, 1, "", "create_optimizer_builtin"], [246, 12, 1, "", "distill"], [246, 12, 1, "", "export_to_bf16_onnx"], [246, 12, 1, "", "export_to_fp32_onnx"], [246, 12, 1, "", "export_to_int8_onnx"], [246, 12, 1, "", "export_to_jit"], [246, 12, 1, "", "export_to_onnx"], [246, 12, 1, "", "init_distiller"], [246, 12, 1, "", "init_pruner"], [246, 12, 1, "", "init_quantizer"], [246, 12, 1, "", "model_builder_builtin"], [246, 12, 1, "", "nas"], [246, 12, 1, "", "orchestrate_optimizations"], [246, 12, 1, "", "prune"], [246, 12, 1, "", "quantize"], [246, 12, 1, "", "run_evolutionary_search"], [246, 12, 1, "", "set_dynamic_config"], [246, 12, 1, "", "train"], [246, 12, 1, "", "training_step"], [246, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[246, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[247, 9, 0, "-", "get_throughput"], [249, 9, 0, "-", "metrics"], [250, 9, 0, "-", "models"], [253, 9, 0, "-", "objectives"], [254, 9, 0, "-", "utility"], [255, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[249, 11, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[251, 9, 0, "-", "modeling_bert_dynamic"], [252, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[251, 11, 1, "", "BertAttention"], [251, 11, 1, "", "BertEmbeddings"], [251, 11, 1, "", "BertEncoder"], [251, 11, 1, "", "BertForMaskedLM"], [251, 11, 1, "", "BertForMultipleChoice"], [251, 11, 1, "", "BertForNextSentencePrediction"], [251, 11, 1, "", "BertForPreTraining"], [251, 11, 1, "", "BertForPreTrainingOutput"], [251, 11, 1, "", "BertForQuestionAnswering"], [251, 11, 1, "", "BertForSequenceClassification"], [251, 11, 1, "", "BertForTokenClassification"], [251, 11, 1, "", "BertIntermediate"], [251, 11, 1, "", "BertLMHeadModel"], [251, 11, 1, "", "BertLMPredictionHead"], [251, 11, 1, "", "BertLayer"], [251, 11, 1, "", "BertModel"], [251, 11, 1, "", "BertOnlyMLMHead"], [251, 11, 1, "", "BertOnlyNSPHead"], [251, 11, 1, "", "BertOutput"], [251, 11, 1, "", "BertPooler"], [251, 11, 1, "", "BertPreTrainedModel"], [251, 11, 1, "", "BertPreTrainingHeads"], [251, 11, 1, "", "BertPredictionHeadTransform"], [251, 11, 1, "", "BertSelfAttention"], [251, 11, 1, "", "BertSelfOutput"], [251, 10, 1, "", "expand_gather"], [251, 10, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_output_embeddings"], [251, 12, 1, "", "prepare_inputs_for_generation"], [251, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_output_embeddings"], [251, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_output_embeddings"], [251, 12, 1, "", "prepare_inputs_for_generation"], [251, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[251, 12, 1, "", "feed_forward_chunk"], [251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_input_embeddings"], [251, 12, 1, "", "set_input_embeddings"], [251, 12, 1, "", "set_length_config"], [251, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[252, 11, 1, "", "RobertaAttention"], [252, 11, 1, "", "RobertaClassificationHead"], [252, 11, 1, "", "RobertaEmbeddings"], [252, 11, 1, "", "RobertaEncoder"], [252, 11, 1, "", "RobertaForCausalLM"], [252, 11, 1, "", "RobertaForMaskedLM"], [252, 11, 1, "", "RobertaForMultipleChoice"], [252, 11, 1, "", "RobertaForQuestionAnswering"], [252, 11, 1, "", "RobertaForSequenceClassification"], [252, 11, 1, "", "RobertaForTokenClassification"], [252, 11, 1, "", "RobertaIntermediate"], [252, 11, 1, "", "RobertaLMHead"], [252, 11, 1, "", "RobertaLayer"], [252, 11, 1, "", "RobertaModel"], [252, 11, 1, "", "RobertaOutput"], [252, 11, 1, "", "RobertaPooler"], [252, 11, 1, "", "RobertaPreTrainedModel"], [252, 11, 1, "", "RobertaSelfAttention"], [252, 11, 1, "", "RobertaSelfOutput"], [252, 10, 1, "", "create_position_ids_from_input_ids"], [252, 10, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[252, 12, 1, "", "forward"], [252, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[252, 12, 1, "", "create_position_ids_from_inputs_embeds"], [252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[252, 12, 1, "", "forward"], [252, 12, 1, "", "get_output_embeddings"], [252, 12, 1, "", "prepare_inputs_for_generation"], [252, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[252, 12, 1, "", "forward"], [252, 12, 1, "", "get_output_embeddings"], [252, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[252, 12, 1, "", "feed_forward_chunk"], [252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[252, 12, 1, "", "forward"], [252, 12, 1, "", "get_input_embeddings"], [252, 12, 1, "", "set_input_embeddings"], [252, 12, 1, "", "set_length_config"], [252, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[252, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[252, 12, 1, "", "forward"], [252, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[252, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[253, 11, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[253, 12, 1, "", "modelsize"], [253, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[254, 10, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[255, 11, 1, "", "TFDataloader"], [255, 10, 1, "", "distributed_init"], [255, 10, 1, "", "get_filepath"], [255, 10, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[256, 9, 0, "-", "data_augmentation"], [258, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[256, 11, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[256, 12, 1, "", "data_augment"], [256, 12, 1, "", "mit_data_augmentation"], [256, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[258, 11, 1, "", "AugmenterType"], [258, 10, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[260, 11, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[261, 11, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_add_zeros": [[262, 11, 1, "", "TestTorchOP"]], "test_add_zeros.TestTorchOP": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[263, 11, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[264, 11, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_baddbmm": [[265, 11, 1, "", "TestTorchOP"]], "test_baddbmm.TestTorchOP": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[266, 11, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_binary_op": [[267, 11, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_binaryop": [[268, 11, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_cast_to": [[269, 11, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_concat": [[270, 11, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_conv": [[271, 11, 1, "", "TestTorchOP"]], "test_conv.TestTorchOP": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_conv_int8": [[272, 11, 1, "", "TestTorchOP"]], "test_conv_int8.TestTorchOP": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[273, 11, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[274, 11, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[275, 11, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[276, 11, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_dolly_pattern": [[277, 11, 1, "", "TestTorchOP"]], "test_dolly_pattern.TestTorchOP": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[278, 11, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_electra": [[279, 11, 1, "", "TestElectra"]], "test_electra.TestElectra": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_embedding": [[280, 11, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[281, 11, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_execution_options": [[282, 11, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_fwk": [[283, 11, 1, "", "TestFWK"]], "test_fwk.TestFWK": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_gather": [[284, 11, 1, "", "TestTorchOP"]], "test_gather.TestTorchOP": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_gelu": [[285, 11, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[286, 11, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[287, 11, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_graph_optimizer": [[288, 11, 1, "", "TestExecutionOptions"]], "test_graph_optimizer.TestExecutionOptions": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[289, 11, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[290, 11, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"], [290, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[291, 11, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[292, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[293, 11, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_layernorm": [[294, 11, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_linear": [[295, 11, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[296, 11, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[297, 11, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_main": [[298, 11, 1, "", "TestMain"]], "test_main.TestMain": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_matmul": [[299, 11, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[300, 11, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[301, 11, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[302, 11, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[303, 11, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[303, 12, 1, "", "setUpClass"], [303, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[304, 11, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[304, 12, 1, "", "setUpClass"], [304, 12, 1, "", "tearDownClass"]], "test_neox_rotary_pos_emb": [[306, 11, 1, "", "TestTorchOP"]], "test_neox_rotary_pos_emb.TestTorchOP": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[307, 11, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[308, 11, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_ops": [[309, 11, 1, "", "TestOps"]], "test_ops.TestOps": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[310, 11, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[310, 12, 1, "", "setUpClass"], [310, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[311, 11, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[311, 12, 1, "", "setUpClass"], [311, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[312, 11, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[312, 12, 1, "", "setUpClass"], [312, 12, 1, "", "tearDownClass"]], "test_permute": [[313, 11, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[313, 12, 1, "", "setUpClass"], [313, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[314, 11, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[314, 12, 1, "", "setUpClass"], [314, 12, 1, "", "tearDownClass"]], "test_pow": [[315, 11, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[315, 12, 1, "", "setUpClass"], [315, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[316, 11, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[316, 12, 1, "", "setUpClass"], [316, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[317, 11, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[317, 12, 1, "", "setUpClass"], [317, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[318, 11, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[318, 12, 1, "", "setUpClass"], [318, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[319, 11, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[319, 12, 1, "", "setUpClass"], [319, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[320, 11, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[320, 12, 1, "", "setUpClass"], [320, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[321, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[321, 12, 1, "", "setUpClass"], [321, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[322, 11, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[322, 12, 1, "", "setUpClass"], [322, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[323, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[323, 12, 1, "", "setUpClass"], [323, 12, 1, "", "tearDownClass"]], "test_size": [[324, 11, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[324, 12, 1, "", "setUpClass"], [324, 12, 1, "", "tearDownClass"]], "test_slice": [[325, 11, 1, "", "TestTorchOP"]], "test_slice.TestTorchOP": [[325, 12, 1, "", "setUpClass"], [325, 12, 1, "", "tearDownClass"]], "test_softmax": [[326, 11, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[326, 12, 1, "", "setUpClass"], [326, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[327, 11, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[327, 12, 1, "", "setUpClass"], [327, 12, 1, "", "tearDownClass"]], "test_static_compressed_buffer": [[328, 11, 1, "", "TestSCBuffer"]], "test_static_compressed_buffer.TestSCBuffer": [[328, 12, 1, "", "setUpClass"], [328, 12, 1, "", "tearDownClass"]], "test_tanh": [[329, 11, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[329, 12, 1, "", "setUpClass"], [329, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[330, 11, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[330, 12, 1, "", "setUpClass"], [330, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[331, 11, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[331, 12, 1, "", "setUpClass"], [331, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[332, 11, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[332, 12, 1, "", "setUpClass"], [332, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[333, 11, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[333, 12, 1, "", "setUpClass"], [333, 12, 1, "", "tearDownClass"]], "test_transpose": [[334, 11, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[334, 12, 1, "", "setUpClass"], [334, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[335, 11, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[335, 12, 1, "", "setUpClass"], [335, 12, 1, "", "tearDownClass"]], "test_two_linear": [[336, 11, 1, "", "TestTorchLinear"]], "test_two_linear.TestTorchLinear": [[336, 12, 1, "", "setUpClass"], [336, 12, 1, "", "tearDownClass"]], "test_unet": [[337, 11, 1, "", "TestUnet"]], "test_unet.TestUnet": [[337, 12, 1, "", "setUpClass"], [337, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[338, 11, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[338, 12, 1, "", "setUpClass"], [338, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[339, 11, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[339, 12, 1, "", "setUpClass"], [339, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[340, 11, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[340, 12, 1, "", "setUpClass"], [340, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[341, 11, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[341, 12, 1, "", "setUpClass"], [341, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[342, 11, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[342, 12, 1, "", "setUpClass"], [342, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[343, 11, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[343, 12, 1, "", "setUpClass"], [343, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[344, 11, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[344, 12, 1, "", "setUpClass"], [344, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[345, 11, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[345, 12, 1, "", "setUpClass"], [345, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:function", "11": "py:class", "12": "py:method", "13": "py:data", "14": "py:attribute"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "function", "Python function"], "11": ["py", "class", "Python class"], "12": ["py", "method", "Python method"], "13": ["py", "data", "Python data"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"clang": 0, "format": [0, 390, 404, 414], "convert_falcon": 1, "modul": [1, 2, 3, 4, 5, 6, 9, 11, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 214, 216, 218, 221, 223, 224, 225, 226, 227, 230, 232, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "content": [1, 2, 3, 4, 5, 6, 9, 11, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 216, 218, 221, 223, 224, 225, 226, 227, 230, 232, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 397, 424, 429], "function": [1, 2, 3, 4, 5, 6, 9, 18, 22, 23, 45, 57, 115, 150, 206, 207, 208, 210, 214, 216, 223, 224, 226, 227, 241, 251, 252, 254, 255, 258], "convert_gptj": 2, "convert_gptj_wo_vocab": 3, "class": [3, 5, 11, 13, 14, 15, 16, 18, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 218, 221, 224, 225, 227, 230, 232, 235, 236, 238, 239, 240, 243, 244, 245, 246, 249, 251, 252, 253, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 353, 354, 355, 365, 416], "convert_gptneox": 4, "convert_llama": 5, "convert_mpt": 6, "gptj_bind": 7, "intel_extension_for_transform": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 384], "backend": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 381, 386, 418], "subpackag": [8, 19, 208, 229], "neural_engin": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "compil": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 350, 390, 396], "dynamic_quant": 10, "extractor": [11, 12, 13, 14, 15], "submodul": [12, 17, 19, 20, 45, 115, 220, 228, 229, 231, 237, 242, 248, 250, 257], "onnx_extractor": 13, "tf_extractor": 14, "torch_extractor": 15, "graph": [16, 17, 351, 386, 388, 389, 396], "graph_util": 18, "loader": [20, 21], "logger": 22, "onnx_util": 23, "op": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 385, 388], "all": 24, "assert": 25, "baddbmm": 26, "batch_matmul": 27, "batch_matmul_v2": 28, "bias_add": 29, "binary_op": 30, "cast": 31, "concat": 32, "conv": 33, "co": 34, "empty_op": 35, "expand_dim": 36, "fused_batch_matmul_v2": 37, "fused_batch_norm_v3": 38, "fused_gemm": 39, "fused_matmul": 40, "gather": 41, "gather_el": 42, "gelu": [43, 111], "gemm": [44, 403, 404, 406, 409], "packag": [45, 115, 208], "attribut": [45, 115, 206, 375, 385], "iterator_get_next": 46, "iterator_v2": 47, "layer_norm": [48, 126], "log_softmax": 49, "map_and_batch_dataset": 50, "matmul": [51, 405, 406, 407], "mean": [52, 401], "mkl_layer_norm": 53, "model_dataset": 54, "one_hot": 55, "onnx_input": 56, "optimize_dataset": 58, "pack": 59, "padding_sequ": [60, 149], "placehold": 61, "pos_emb": 62, "pow": 63, "quantize_linear": 64, "quantize_v2": 65, "quantized_fused_matmul_and_dequant": 66, "quantized_matmul_with_bias_and_dequant": 67, "reduce_mean": 68, "reduce_sum": 69, "reorder": [70, 403, 407, 408, 409], "reshap": 71, "resiz": 72, "rsub": 73, "scatter_el": 74, "shape": 75, "sin": 76, "size": [77, 397, 405], "slice": 78, "slice_position_id": 79, "softmax": [80, 413], "split": 81, "squeez": 82, "strided_slic": 83, "tensor": 84, "top_k": 85, "transpos": [86, 407, 408], "unpack": 87, "unsqueez": 88, "view": 89, "where": 90, "optim": [91, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 360, 361], "sub_graph": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "innerproductreshapefus": 92, "add_cls_token": 93, "add_embed": 94, "arangewithreciproc": 95, "attentionblock_attentionmaskaddreshap": 96, "attentionblock_constantofshapewithmul": 97, "attentionblock_qkvprereshap": 98, "attentionblock_qkvreshap": 99, "attentionblock_weightreshapeto4d": 100, "attention_mask_length_adaptive_keep_indic": 101, "attention_output_layer_norm_length_adaptive_keep_indic": 102, "attention_reshap": 103, "cast_to": 104, "collect_quant_info": 105, "conv_reshap": 106, "decoder_attn_reshap": 107, "einsumwitharang": 108, "embeddingbag": 109, "embeddings_to_2d_before_inner_product": 110, "generate_sequ": 112, "groupnorm": 113, "groupnormswish": 114, "innerproductwithbiasgelu": 116, "innerproductwithslic": 117, "innerproductwithswish": 118, "input_data": 119, "input_fil": 120, "insert_bf16_nod": 121, "insert_quant_nod": 122, "int8_bf16_mixed_precision_check": 123, "interact_featur": 124, "last_layer_shap": 125, "layer_norm_with_reduce_mean": 127, "layer_norm_with_transpos": 128, "llama_embed": 129, "llama_matmulwithtranspos": 130, "llama_postprocess": 131, "llama_rotary_pos_emb": 132, "lower_all_tupl": 133, "matmul_with_bia": 134, "matmul_with_bias_add": 135, "matmul_with_bias_gelu": 136, "matmul_with_bias_relu": 137, "matmul_with_bias_sigmoid": 138, "matmul_with_bias_tanh": 139, "matmul_with_bias_unsqueez": 140, "matmul_with_transpos": 141, "matmul_with_transpose_scale_add": 142, "merged_embeddingbag": 143, "multi_head_attent": 144, "neox_reorder_chang": 145, "neox_rotary_pos_emb": 146, "operator_adaptor": 147, "output_data": 148, "pattern": [150, 385, 388, 389, 393, 403, 404, 409], "position_embed": 151, "position_embeddings_v1": 152, "qkv_merg": 153, "qkv_reshap": 154, "quant_gather_to_bf16": 155, "quantize_fus": 156, "quantized_graph_dtype_refactor": 157, "remove_constant_op": 158, "remove_last_view": 159, "remove_rang": 160, "remove_unused_oper": 161, "remove_zero": 162, "removeslic": 163, "reshape_after_restore_hidden_st": 164, "reshape_before_and_after_attention_out_layer_norm_gather_el": 165, "reshape_before_restore_hidden_st": 166, "reshape_fus": 167, "restore_hidden_states_in_length_adaptive_update_indic": 168, "rms_norm": 169, "rotary_pos_emb": 170, "slicemask": 171, "stablediffusion_explicitnhwctranspos": 172, "stablediffusion_mha": 173, "stablediffusion_mhareshap": 174, "stablediffusion_reshapefus": 175, "stablediffusion_bf16convert": 176, "start_end_logit": 177, "subgraph_match": 178, "textencdoer_word_embed": 179, "textencoder_attentionmaskaddreshap": 180, "textencoder_attentionreshap": 181, "textencoder_kvreshap": 182, "textencoder_mulreshap": 183, "textencoder_qreshap": 184, "textencoder_softmaxreshap": 185, "textencoder_causal_attention_mask": 186, "token_type_embed": 187, "token_type_embeddings_v1": 188, "torch_embed": 189, "torch_ip_insert_bia": 190, "torch_unpack_baddbmm": 191, "torchinsertbf16nod": 192, "torchpaddingsqu": 193, "transformer2dmodel_attentionmaskaddreshap": 194, "transformer2dmodel_constantofshapewithmul": 195, "transformer2dmodel_ffnslic": 196, "transformer2dmodel_ffnslice_1": 197, "transformer2dmodel_qkvprereshap": 198, "transformer2dmodel_qkvreshap": 199, "transformer2dmodel_qkvreshape4d": 200, "transformer2dmodel_encoderhiddenstatesreshap": 201, "transformer2dmodel_getsamplebatch": 202, "transformer2dmodel_sampleslic": 203, "transpose_batch_matmul": 204, "word_embed": 205, "tf_util": 206, "torch_util": 207, "evalu": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "hf_eval": [209, 210, 211, 212], "hf_dataset": [210, 211], "cnn_dailymail": 210, "lm_code_ev": [214, 215], "lm_eval": [216, 217, 218, 219, 220, 221], "model": [218, 219, 232, 233, 234, 235, 250, 251, 252, 347, 359, 366, 378, 381, 386, 387, 390, 391, 396, 412, 418], "huggingfac": 218, "task": [220, 221], "lambada": 221, "benchmark": [223, 366, 391, 413], "config": [224, 358, 365, 385, 388], "distil": [225, 365, 379, 380, 382], "dynam": [226, 227, 228, 405, 420], "drop_and_restore_util": 226, "evolut": 227, "mixtur": [230, 231], "auto_distil": 230, "modeling_base_seq2seq": 234, "modeling_seq2seq": 235, "na": [236, 237, 238, 380], "basic_na": 236, "optimizer_tf": [240, 365], "pipelin": [241, 365, 418], "pruner": [242, 243], "prune": [243, 244, 380, 382, 419], "quantiz": [245, 380, 382, 391, 397, 420], "trainer": [246, 362, 365, 379, 419, 420], "util": [247, 248, 249, 250, 251, 252, 253, 254, 255, 258], "get_throughput": 247, "metric": [249, 379, 416, 419, 420], "modeling_bert_dynam": 251, "modeling_roberta_dynam": 252, "object": [253, 417, 420], "utility_tf": 255, "preprocess": [256, 257, 258, 405], "data_augment": 256, "sparsity_al": 259, "test_add_cls_token": 260, "test_add_embed": 261, "test_add_zero": 262, "test_attention_output_layer_norm_length_adaptive_keep_indic": 263, "test_attention_reshap": 264, "test_baddbmm": 265, "test_bert_mini_fp32": 266, "test_binary_op": 267, "test_binaryop": 268, "test_cast_to": 269, "test_concat": 270, "test_conv": 271, "test_conv_int8": 272, "test_conv_reshap": 273, "test_decoder_attn_reshap": 274, "test_dispatcher_tuning_acc": 275, "test_dispatcher_tuning_throughput": 276, "test_dolly_pattern": 277, "test_dynamic_quant": 278, "test_electra": 279, "test_embed": 280, "test_embeddingbag": 281, "test_execution_opt": 282, "test_fwk": 283, "test_gath": 284, "test_gelu": 285, "test_gpt_int8": 286, "test_graph_dispatch": 287, "test_graph_optim": 288, "test_insert_input_output_data": 289, "test_is_supported_onnx_graph": 290, "test_last_layer_shap": 291, "test_layer_norm_with_reduce_mean": 292, "test_layer_norm_with_transpos": 293, "test_layernorm": 294, "test_linear": 295, "test_linear_int8": 296, "test_llama_pattern": 297, "test_main": 298, "test_matmul": 299, "test_matmul_int8": 300, "test_matmul_with_bias_relu": 301, "test_matmul_with_bias_sigmoid": 302, "test_matmul_with_bias_tanh": 303, "test_merged_embeddingbag": 304, "test_model": 305, "test_neox_rotary_pos_emb": 306, "test_onnx_util": 307, "test_operator_adaptor": 308, "test_op": 309, "test_padding_seq": 310, "test_padding_sequ": 311, "test_pattern_dispatch": 312, "test_permut": 313, "test_position_embed": 314, "test_pow": 315, "test_primitive_cache_acc": 316, "test_primitive_cache_throughput": 317, "test_qkv_merg": 318, "test_qkv_reshap": 319, "test_quant_onnx_execut": 320, "test_reshape_after_restore_hidden_st": 321, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 322, "test_reshape_before_restore_hidden_st": 323, "test_siz": 324, "test_slic": 325, "test_softmax": 326, "test_start_end_logit": 327, "test_static_compressed_buff": 328, "test_tanh": 329, "test_text_encod": 330, "test_text_encoder_bf16": 331, "test_tf_util": 332, "test_token_type_embed": 333, "test_transpos": 334, "test_transpose_batch_matmul": 335, "test_two_linear": 336, "test_unet": 337, "test_unet_bf16": 338, "test_unsqueez": 339, "test_vae_decod": 340, "test_vae_decoder_bf16": 341, "test_weight_sharing_acc": 342, "test_weight_sharing_dispatcher_tuning_acc": 343, "test_weight_sharing_dispatcher_tuning_throughtput": 344, "test_weight_sharing_throughput": 345, "secur": 346, "polici": 346, "report": 346, "vulner": 346, "intel": [347, 364, 369, 377, 378, 380, 383, 425], "extens": [347, 364, 369, 377, 378, 380, 383, 425], "transform": [347, 364, 369, 377, 378, 380, 382, 383, 398, 425], "acceler": [347, 382, 398, 402], "base": [347, 380, 397], "platform": [347, 395, 411], "select": 347, "public": 347, "event": 347, "api": [348, 349, 352, 357, 363, 365, 366, 381, 387, 398], "python": [349, 387], "engin": [352, 353, 373, 380, 382, 384, 386, 388, 390, 391, 395, 429], "kernel": [354, 357, 370, 388, 398, 402, 405, 413, 426], "operator_desc": [355, 400, 401], "oper": [356, 387, 392], "specif": 356, "type": [356, 385, 419], "pytorch": [360, 365, 366, 379, 380], "tensorflow": [361, 365, 379, 380], "user": [363, 374, 398, 400, 401, 422, 430], "face": 363, "architectur": [364, 386], "autodistil": 365, "design": [365, 391], "framework": [365, 400, 401], "criterion": [365, 379], "knowledgedistillationloss": 365, "intermediatelayersknowledgedistillationloss": 365, "usag": [365, 379, 381, 400, 401, 413, 419], "flash": 365, "exampl": [365, 366, 367, 380, 381, 387, 390, 413, 417, 418, 423], "regular": 365, "introduct": [366, 377, 379, 381, 385, 387, 388, 389, 390, 393, 394, 398, 400, 401, 402, 403, 407, 412, 416, 417, 418, 419, 420], "get": [366, 377, 378, 382, 387, 391, 416, 420], "start": [366, 377, 378, 382, 397, 416, 420], "stock": [366, 380], "ipex": [366, 380], "output": [366, 378], "featur": [368, 400, 401, 420, 424], "welcom": [369, 425], "document": [369, 425], "section": [369, 425], "implement": [371, 427], "detail": [371, 405, 408, 427], "perform": [372, 395, 397, 398, 410, 411, 428], "neural": [373, 380, 382, 384, 386, 395, 429], "guid": [374, 422, 430], "contributor": [375, 376], "coven": [375, 376], "code": [375, 376], "conduct": [375, 376], "our": 375, "pledg": 375, "standard": 375, "respons": 375, "scope": 375, "enforc": 375, "contribut": 376, "guidelin": 376, "pull": 376, "request": 376, "checklist": 376, "templat": 376, "support": [376, 377, 378, 381, 390, 395, 396, 398, 416, 417, 420], "data": [377, 404, 411], "augment": 377, "instal": [377, 378, 383, 384, 391, 398], "depend": 377, "script": [377, 379, 419, 420], "paramet": 377, "text": 377, "gener": [377, 386, 397], "argument": 377, "overview": 378, "recommend": 378, "hardwar": [378, 383], "valid": [378, 383, 411], "environ": [378, 383, 391], "how": [378, 388, 394, 396, 412], "work": [378, 402], "1": [378, 386, 387, 391, 392, 412], "prerequisit": [378, 383, 384, 391, 405], "2": [378, 386, 391, 392, 412], "from": [378, 383, 384], "pypi": [378, 383], "conda": 378, "3": [378, 386, 412], "sourc": [378, 383], "To": [378, 391], "run": [378, 386, 387, 391, 396, 412], "requir": [378, 383], "prepar": [378, 390, 391, 412], "dataset": [378, 391], "compress": [378, 394], "4": [378, 386, 411], "infer": [378, 386, 399, 418], "expect": 378, "summari": [378, 416], "next": 378, "step": 378, "learn": 378, "more": [378, 388, 394, 402], "knowledg": [379, 380], "intermedi": 379, "layer": [379, 406], "creat": [379, 389, 419, 420], "an": [379, 390, 419, 420], "instanc": [379, 419, 420], "option": [379, 388, 394, 397, 419, 420], "distillationconfig": 379, "length": [380, 382], "adapt": [380, 382], "auto": 380, "orchestr": 380, "refer": [380, 398], "deploy": 380, "dens": [380, 402], "spars": [380, 387, 402, 403, 404, 406, 409, 412], "export": 381, "onnx": [381, 386, 390, 391], "matrix": [381, 395, 398, 405, 417, 420], "fp32": 381, "bf16": 381, "int8": [381, 391, 418], "For": [381, 413], "executor": [381, 392, 418], "system": [383, 397], "softwar": 383, "stabl": 384, "version": 384, "pip": 384, "binari": [384, 386, 400], "deploi": [384, 386], "bare": 384, "metal": 384, "add": [385, 392], "custom": [385, 386, 392], "regist": [385, 392], "node": [385, 389], "set": [385, 387], "map": [385, 389, 397], "fuse": 385, "new": [385, 389], "after": 385, "fusion": [385, 389], "integr": 386, "tf": [386, 397], "us": [386, 396, 405], "through": 386, "manual": 386, "yaml": 386, "weight": [386, 405, 412], "build": [386, 398, 413], "profil": [387, 410], "profl": 387, "you": 387, "can": 387, "onli": 387, "engine_profil": 387, "befor": 387, "c": 387, "part": 387, "csv": 387, "ratio": 387, "total": 387, "level": 387, "json": 387, "iter": 387, "tune": [388, 391, 397, 420], "dispatch": 388, "best": 388, "relat": 388, "runtim": 388, "turn": [388, 394], "mechan": 388, "dict": 389, "obtain": 389, "necessari": 389, "inform": [389, 415], "construct": 389, "establish": 389, "connect": 389, "remov": [389, 393], "old": 389, "insert": 389, "ir": [390, 391], "low": 391, "precis": 391, "its": 391, "accuraci": [391, 420], "h": 392, "includ": 392, "cpp": 392, "src": 392, "recogn": 393, "represent": 393, "pars": 393, "list": [393, 419], "search": 393, "each": 393, "straight": 393, "chain": 393, "splice": 393, "sub": 393, "main": 393, "duplic": 393, "result": [393, 412], "static": [394, 413, 420], "buffer": 394, "configur": [395, 411], "itrex": 396, "convert": 396, "tabl": 397, "quick": 397, "unix": 397, "linux": 397, "maco": 397, "etc": 397, "common": 397, "input": [397, 414], "prompt": 397, "interact": 397, "revers": 397, "In": 397, "prefix": 397, "suffix": 397, "instruct": [397, 404], "mode": 397, "context": 397, "manag": 397, "keep": 397, "flag": 397, "number": 397, "token": 397, "predict": 397, "temperatur": 397, "repeat": 397, "penalti": 397, "top": 397, "k": 397, "sampl": 397, "p": 397, "tail": 397, "free": 397, "local": 397, "typic": 397, "mirostat": 397, "logit": 397, "bia": 397, "rng": 397, "seed": 397, "memori": [397, 399], "thread": [397, 402, 411], "mlock": 397, "No": 397, "float": 397, "32": 397, "batch": 397, "cach": [397, 399], "addit": 397, "librari": 398, "test": 398, "sparse_matmul": [398, 413], "3d": 399, "layout": 399, "spmm_vnni": [399, 413], "issu": 399, "injector": [400, 401], "param_typ": [400, 401], "hpp": [400, 401], "jit_binaryop_injector": 400, "develop": [400, 401, 413], "": [400, 401], "perspect": [400, 401], "element": 401, "wise": 401, "alpha": 401, "beta": 401, "scale": 401, "jit_eltwise_injector": 401, "naiv": 402, "tile": 402, "effici": 402, "per": 402, "prefetch": 402, "amx": 403, "brief": 403, "isa": 403, "avx512f": 404, "kei": 404, "loop": 404, "quant": 405, "problem": [405, 406, 407, 408], "descript": [405, 406, 408], "differ": 405, "jit": 405, "path": 405, "one": 405, "stage": 405, "two": 405, "normal": 406, "layernorm": 406, "pre": 406, "comput": 406, "spmm": 406, "direct": 406, "layernorm_ba": [406, 413], "statement": 407, "matmul_p2031_2013": 407, "matmul_avx512f_p2031_p2013": [407, 413], "matmul_noperm_p2031_p1302": 407, "matmul_vnni_noperm_p2013_p1302": 407, "beforehand": 407, "mha": [408, 413], "calcul": 408, "vnni": 409, "On": 409, "fly": 409, "activ": 409, "candid": 409, "verbos": 410, "vtune": 410, "sde": 410, "singl": 411, "multi": 411, "visual": 412, "distribut": 412, "setup": 412, "below": 412, "command": 412, "analysi": 412, "spmm_avx512f": 413, "spmm_amx_bf16_x16": 413, "eltwiseop": 413, "transpose_matmul": 413, "matmul_vnni_noperm_p2031_p1302": 413, "attent": 413, "dynamic_quant_matmul": 413, "dynamic_qu": 413, "legal": 415, "licens": 415, "citat": 415, "trademark": 415, "prunerconfig": 419, "pruningconfig": 419, "fundament": 420, "approach": 420, "post": 420, "train": 420, "awar": 420, "quantizationconfig": 420, "releas": 421, "note": 421}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"clang-format": [[0, "module-clang-format"]], "convert_falcon": [[1, "module-convert_falcon"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [18, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [189, "module-contents"], [190, "module-contents"], [191, "module-contents"], [192, "module-contents"], [193, "module-contents"], [194, "module-contents"], [195, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [200, "module-contents"], [201, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [207, "module-contents"], [210, "module-contents"], [214, "module-contents"], [216, "module-contents"], [218, "module-contents"], [221, "module-contents"], [223, "module-contents"], [224, "module-contents"], [225, "module-contents"], [226, "module-contents"], [227, "module-contents"], [230, "module-contents"], [232, "module-contents"], [235, "module-contents"], [236, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [241, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [249, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [258, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [302, "module-contents"], [303, "module-contents"], [304, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"], [310, "module-contents"], [311, "module-contents"], [312, "module-contents"], [313, "module-contents"], [314, "module-contents"], [315, "module-contents"], [316, "module-contents"], [317, "module-contents"], [318, "module-contents"], [319, "module-contents"], [320, "module-contents"], [321, "module-contents"], [322, "module-contents"], [323, "module-contents"], [324, "module-contents"], [325, "module-contents"], [326, "module-contents"], [327, "module-contents"], [328, "module-contents"], [329, "module-contents"], [330, "module-contents"], [331, "module-contents"], [332, "module-contents"], [333, "module-contents"], [334, "module-contents"], [335, "module-contents"], [336, "module-contents"], [337, "module-contents"], [338, "module-contents"], [339, "module-contents"], [340, "module-contents"], [341, "module-contents"], [342, "module-contents"], [343, "module-contents"], [344, "module-contents"], [345, "module-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [9, "functions"], [18, "functions"], [22, "functions"], [23, "functions"], [45, "functions"], [57, "functions"], [115, "functions"], [150, "functions"], [206, "functions"], [207, "functions"], [208, "functions"], [210, "functions"], [214, "functions"], [216, "functions"], [223, "functions"], [224, "functions"], [226, "functions"], [227, "functions"], [241, "functions"], [251, "functions"], [252, "functions"], [254, "functions"], [255, "functions"], [258, "functions"]], "convert_gptj": [[2, "module-convert_gptj"]], "convert_gptj_wo_vocab": [[3, "module-convert_gptj_wo_vocab"]], "Classes": [[3, "classes"], [5, "classes"], [11, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [21, "classes"], [22, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"], [187, "classes"], [188, "classes"], [189, "classes"], [190, "classes"], [191, "classes"], [192, "classes"], [193, "classes"], [194, "classes"], [195, "classes"], [196, "classes"], [197, "classes"], [198, "classes"], [199, "classes"], [200, "classes"], [201, "classes"], [202, "classes"], [203, "classes"], [204, "classes"], [205, "classes"], [210, "classes"], [218, "classes"], [221, "classes"], [224, "classes"], [225, "classes"], [227, "classes"], [230, "classes"], [232, "classes"], [235, "classes"], [236, "classes"], [238, "classes"], [239, "classes"], [240, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [249, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [255, "classes"], [256, "classes"], [258, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"], [303, "classes"], [304, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"], [310, "classes"], [311, "classes"], [312, "classes"], [313, "classes"], [314, "classes"], [315, "classes"], [316, "classes"], [317, "classes"], [318, "classes"], [319, "classes"], [320, "classes"], [321, "classes"], [322, "classes"], [323, "classes"], [324, "classes"], [325, "classes"], [326, "classes"], [327, "classes"], [328, "classes"], [329, "classes"], [330, "classes"], [331, "classes"], [332, "classes"], [333, "classes"], [334, "classes"], [335, "classes"], [336, "classes"], [337, "classes"], [338, "classes"], [339, "classes"], [340, "classes"], [341, "classes"], [342, "classes"], [343, "classes"], [344, "classes"], [345, "classes"]], "convert_gptneox": [[4, "module-convert_gptneox"]], "convert_llama": [[5, "module-convert_llama"]], "convert_mpt": [[6, "module-convert_mpt"]], "gptj_binding": [[7, "module-gptj_binding"]], "intel_extension_for_transformers.backends": [[8, "module-intel_extension_for_transformers.backends"]], "Subpackages": [[8, "subpackages"], [19, "subpackages"], [208, "subpackages"], [229, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[12, "submodules"], [17, "submodules"], [19, "submodules"], [20, "submodules"], [45, "submodules"], [115, "submodules"], [220, "submodules"], [228, "submodules"], [229, "submodules"], [231, "submodules"], [237, "submodules"], [242, "submodules"], [248, "submodules"], [250, "submodules"], [257, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[45, "package-contents"], [115, "package-contents"], [208, "package-contents"]], "Attributes": [[45, "attributes"], [115, "attributes"], [206, "attributes"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[205, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[206, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[207, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[208, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[211, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[212, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[213, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[214, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[215, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[219, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[221, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[222, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[223, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[224, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[225, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[226, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[227, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[228, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[229, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[230, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[231, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[232, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[233, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[234, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[235, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[236, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[237, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[238, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[239, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[240, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[241, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[242, "module-intel_extension_for_transformers.optimization.pruner"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[243, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "intel_extension_for_transformers.optimization.pruning": [[244, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.quantization": [[245, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[246, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[247, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[248, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[249, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[250, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[252, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[253, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[254, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[255, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[256, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[257, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[258, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[259, "module-sparsity_all"]], "test_add_cls_token": [[260, "module-test_add_cls_token"]], "test_add_embeddings": [[261, "module-test_add_embeddings"]], "test_add_zeros": [[262, "module-test_add_zeros"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[263, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[264, "module-test_attention_reshape"]], "test_baddbmm": [[265, "module-test_baddbmm"]], "test_bert_mini_fp32": [[266, "module-test_bert_mini_fp32"]], "test_binary_op": [[267, "module-test_binary_op"]], "test_binaryop": [[268, "module-test_binaryop"]], "test_cast_to": [[269, "module-test_cast_to"]], "test_concat": [[270, "module-test_concat"]], "test_conv": [[271, "module-test_conv"]], "test_conv_int8": [[272, "module-test_conv_int8"]], "test_conv_reshape": [[273, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[274, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[275, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[276, "module-test_dispatcher_tuning_throughput"]], "test_dolly_pattern": [[277, "module-test_dolly_pattern"]], "test_dynamic_quantization": [[278, "module-test_dynamic_quantization"]], "test_electra": [[279, "module-test_electra"]], "test_embedding": [[280, "module-test_embedding"]], "test_embeddingbag": [[281, "module-test_embeddingbag"]], "test_execution_options": [[282, "module-test_execution_options"]], "test_fwk": [[283, "module-test_fwk"]], "test_gather": [[284, "module-test_gather"]], "test_gelu": [[285, "module-test_gelu"]], "test_gpt_int8": [[286, "module-test_gpt_int8"]], "test_graph_dispatch": [[287, "module-test_graph_dispatch"]], "test_graph_optimizer": [[288, "module-test_graph_optimizer"]], "test_insert_input_output_data": [[289, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[290, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[291, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[292, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[293, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[294, "module-test_layernorm"]], "test_linear": [[295, "module-test_linear"]], "test_linear_int8": [[296, "module-test_linear_int8"]], "test_llama_pattern": [[297, "module-test_llama_pattern"]], "test_main": [[298, "module-test_main"]], "test_matmul": [[299, "module-test_matmul"]], "test_matmul_int8": [[300, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[301, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[302, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[303, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[304, "module-test_merged_embeddingbag"]], "test_model": [[305, "module-test_model"]], "test_neox_rotary_pos_emb": [[306, "module-test_neox_rotary_pos_emb"]], "test_onnx_utils": [[307, "module-test_onnx_utils"]], "test_operator_adaptor": [[308, "module-test_operator_adaptor"]], "test_ops": [[309, "module-test_ops"]], "test_padding_seq": [[310, "module-test_padding_seq"]], "test_padding_sequence": [[311, "module-test_padding_sequence"]], "test_pattern_dispatch": [[312, "module-test_pattern_dispatch"]], "test_permute": [[313, "module-test_permute"]], "test_position_embeddings": [[314, "module-test_position_embeddings"]], "test_pow": [[315, "module-test_pow"]], "test_primitive_cache_acc": [[316, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[317, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[318, "module-test_qkv_merge"]], "test_qkv_reshape": [[319, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[320, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[321, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[322, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[323, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[324, "module-test_size"]], "test_slice": [[325, "module-test_slice"]], "test_softmax": [[326, "module-test_softmax"]], "test_start_end_logits": [[327, "module-test_start_end_logits"]], "test_static_compressed_buffer": [[328, "module-test_static_compressed_buffer"]], "test_tanh": [[329, "module-test_tanh"]], "test_text_encoder": [[330, "module-test_text_encoder"]], "test_text_encoder_bf16": [[331, "module-test_text_encoder_bf16"]], "test_tf_utils": [[332, "module-test_tf_utils"]], "test_token_type_embeddings": [[333, "module-test_token_type_embeddings"]], "test_transpose": [[334, "module-test_transpose"]], "test_transpose_batch_matmul": [[335, "module-test_transpose_batch_matmul"]], "test_two_linear": [[336, "module-test_two_linear"]], "test_unet": [[337, "module-test_unet"]], "test_unet_bf16": [[338, "module-test_unet_bf16"]], "test_unsqueeze": [[339, "module-test_unsqueeze"]], "test_vae_decoder": [[340, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[341, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[342, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[343, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[344, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[345, "module-test_weight_sharing_throughput"]], "Security Policy": [[346, "security-policy"]], "Report a Vulnerability": [[346, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[347, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[347, "selected-publications-events"]], "API": [[348, "api"]], "Python APIs": [[349, "python-apis"]], "Compile": [[350, "compile"]], "Graph": [[351, "graph"]], "Engine API": [[352, "engine-api"]], "Class engine": [[353, "class-engine"]], "Class Kernel": [[354, "class-kernel"]], "Class operator_desc": [[355, "class-operator-desc"]], "Operator Specific Types": [[356, "operator-specific-types"]], "Kernel APIs": [[357, "kernel-apis"]], "Config": [[358, "config"]], "Model": [[359, "model"]], "PyTorch Optimizer": [[360, "pytorch-optimizer"]], "TensorFlow Optimizer": [[361, "tensorflow-optimizer"]], "Trainer": [[362, "trainer"]], "User-facing API": [[363, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[364, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[365, "autodistillation-design"]], "AutoDistillation Pipeline": [[365, "autodistillation-pipeline"]], "Framework Class Design": [[365, "framework-class-design"]], "Criterion Class Design": [[365, "criterion-class-design"]], "KnowledgeDistillationLoss": [[365, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[365, "intermediatelayersknowledgedistillationloss"]], "Usage": [[365, "usage"], [400, "usage"], [401, "usage"], [413, "usage"], [419, "usage"]], "Pytorch": [[365, "pytorch"]], "AutoDistillation API in Trainer": [[365, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[365, "flash-distillation-config-example"]], "Regular distillation config example": [[365, "regular-distillation-config-example"]], "AutoDistillation config example": [[365, "autodistillation-config-example"], [365, "id1"]], "Tensorflow": [[365, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[365, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[365, "distillation-config-example"]], "Benchmark": [[366, "benchmark"]], "Introduction": [[366, "introduction"], [377, "introduction"], [379, "introduction"], [381, "introduction"], [385, "introduction"], [387, "introduction"], [388, "introduction"], [389, "introduction"], [390, "introduction"], [393, "introduction"], [394, "introduction"], [398, "introduction"], [400, "introduction"], [401, "introduction"], [402, "introduction"], [407, "introduction"], [412, "introduction"], [416, "introduction"], [417, "introduction"], [418, "introduction"], [419, "introduction"], [420, "introduction"]], "Get Started with Benchmark API": [[366, "get-started-with-benchmark-api"]], "Examples": [[366, "examples"], [380, "examples"], [381, "examples"], [413, "examples"], [413, "id1"], [413, "id2"], [413, "id3"], [413, "id4"], [413, "id5"], [413, "id6"], [413, "id7"], [413, "id8"], [413, "id9"], [413, "id10"], [413, "id11"], [418, "examples"]], "Stock Pytorch Model": [[366, "stock-pytorch-model"]], "IPEX Model": [[366, "ipex-model"]], "Benchmark Output": [[366, "benchmark-output"]], "Example": [[367, "example"], [423, "example"]], "Features": [[368, "features"], [424, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[369, "welcome-to-intel-extension-for-transformers-documentation"], [425, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[369, "sections"], [425, "sections"]], "Kernels": [[370, "kernels"], [426, "kernels"]], "Implementation Details": [[371, "implementation-details"], [427, "implementation-details"]], "Performance": [[372, "performance"], [395, "performance"], [398, "performance"], [428, "performance"]], "Neural Engine": [[373, "neural-engine"], [429, "neural-engine"]], "User Guide": [[374, "user-guide"], [422, "user-guide"], [430, "user-guide"]], "Contributor Covenant Code of Conduct": [[375, "contributor-covenant-code-of-conduct"], [376, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[375, "our-pledge"]], "Our Standards": [[375, "our-standards"]], "Our Responsibilities": [[375, "our-responsibilities"]], "Scope": [[375, "scope"]], "Enforcement": [[375, "enforcement"]], "Attribution": [[375, "attribution"]], "Contribution Guidelines": [[376, "contribution-guidelines"]], "Pull Request Checklist": [[376, "pull-request-checklist"]], "Pull Request Template": [[376, "pull-request-template"]], "Support": [[376, "support"], [378, "support"]], "Data Augmentation": [[377, "data-augmentation"], [377, "id1"]], "Getting Started": [[377, "getting-started"], [382, "getting-started"]], "Install Dependency": [[377, "install-dependency"]], "Install Intel Extension for Transformers": [[377, "install-intel-extension-for-transformers"], [383, "install-intel-extension-for-transformers"]], "Script": [[377, "script"]], "Parameters of Data Augmentation": [[377, "parameters-of-data-augmentation"]], "Supported Augmenter": [[377, "supported-augmenter"]], "Text Generation Augmenter": [[377, "text-generation-augmenter"]], "Augmenter Arguments:": [[377, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[378, "intel-extension-for-transformers"]], "Overview": [[378, "overview"]], "Recommended Hardware": [[378, "recommended-hardware"]], "Validated Hardware Environment": [[378, "validated-hardware-environment"], [383, "validated-hardware-environment"]], "How it Works": [[378, "how-it-works"]], "Get Started": [[378, "get-started"], [420, "get-started"]], "1. Prerequisites": [[378, "prerequisites"]], "2. Installation": [[378, "installation"]], "2.1 Install from PyPi": [[378, "install-from-pypi"]], "2.2 Install from Conda": [[378, "install-from-conda"]], "2.3 Install from Source": [[378, "install-from-source"]], "3. How To Run": [[378, "how-to-run"]], "3.1 Install Requirements": [[378, "install-requirements"]], "3.2 Prepare Datasets": [[378, "prepare-datasets"]], "3.3 Model Compression": [[378, "model-compression"]], "3.4 Model Inference": [[378, "model-inference"]], "Expected Output": [[378, "expected-output"]], "Summary and Next Steps": [[378, "summary-and-next-steps"]], "Learn More": [[378, "learn-more"]], "Distillation": [[379, "distillation"], [379, "id1"], [380, "distillation"], [382, "distillation"]], "Knowledge Distillation": [[379, "knowledge-distillation"], [380, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[379, "intermediate-layer-knowledge-distillation"]], "usage": [[379, "usage"]], "Pytorch Script:": [[379, "pytorch-script"]], "Tensorflow Script:": [[379, "tensorflow-script"]], "Create an Instance of Metric": [[379, "create-an-instance-of-metric"], [420, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[379, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[379, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[379, "distill-with-trainer"]], "Quantization": [[380, "quantization"], [382, "quantization"], [397, "quantization"], [420, "quantization"]], "Stock PyTorch Examples": [[380, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[380, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[380, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[380, "length-adaptive-transformers"]], "Pruning": [[380, "pruning"], [382, "pruning"], [419, "pruning"]], "Auto Distillation (NAS Based)": [[380, "auto-distillation-nas-based"]], "Orchestrate": [[380, "orchestrate"]], "Reference Deployment on Neural Engine": [[380, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[380, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[380, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[381, "export-to-onnx"]], "Supported Model Export Matrix": [[381, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[381, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[381, "export-to-bf16-onnx-model"]], "API usage": [[381, "api-usage"]], "Export to INT8 ONNX Model": [[381, "export-to-int8-onnx-model"]], "For executor backend": [[381, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[382, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[382, "transformers-accelerated-neural-engine"]], "Installation": [[383, "installation"], [384, "installation"], [398, "installation"]], "Install from Pypi": [[383, "install-from-pypi"]], "Install from Source": [[383, "install-from-source"]], "Prerequisites": [[383, "prerequisites"], [384, "prerequisites"]], "System Requirements": [[383, "system-requirements"]], "Validated Software Environment": [[383, "validated-software-environment"]], "Install": [[384, "install"]], "Install stable version intel_extension_for_transformers from pip": [[384, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[384, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[385, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[385, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[385, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[385, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[386, "deploy-and-integration"]], "1. Architecture": [[386, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[386, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[386, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[386, "run-the-inference-by-engine"], [386, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[386, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[386, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[386, "integrate-neural-engine-as-backend"]], "Profiling": [[387, "profiling"]], "Profling API": [[387, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[387, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[387, "profiling-examples"]], "Parts of CSV Profiling": [[387, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[387, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[387, "operator-profiling-part"]], "Total Profiling Part": [[387, "total-profiling-part"]], "Levels of JSON Profiling": [[387, "levels-of-json-profiling"]], "Model Level": [[387, "model-level"]], "Iteration Level": [[387, "iteration-level"]], "Operator Level": [[387, "operator-level"]], "Engine Tuning": [[388, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[388, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[388, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[388, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[388, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[388, "more-tuning-options"]], "Graph Fusion": [[389, "graph-fusion"]], "Pattern Mapping Dict": [[389, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[389, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[389, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[389, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[390, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[390, "supported-onnx-format"]], "Compile Examples": [[390, "compile-examples"]], "Prepare ONNX Model": [[390, "prepare-onnx-model"]], "Compile to IR": [[390, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[391, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[391, "design"]], "Prerequisite": [[391, "prerequisite"]], "Install environment": [[391, "install-environment"]], "Prepare Dataset": [[391, "prepare-dataset"]], "Prepare ONNX model": [[391, "prepare-onnx-model"]], "Run tuning and benchmark": [[391, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[391, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[391, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[392, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[392, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[392, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[393, "pattern-recognize"]], "Pattern Representation": [[393, "pattern-representation"]], "Parse Pattern Representation List": [[393, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[393, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[393, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Static Compressed Buffer": [[394, "static-compressed-buffer"]], "How to Turn on Static Compressed Buffer": [[394, "how-to-turn-on-static-compressed-buffer"]], "More Options": [[394, "more-options"]], "Neural Engine Support Matrix": [[395, "neural-engine-support-matrix"]], "platform configuration": [[395, "platform-configuration"]], "ITREX Graph": [[396, "itrex-graph"]], "Compile Graph": [[396, "compile-graph"]], "How to use": [[396, "how-to-use"]], "Convert model": [[396, "convert-model"]], "Run Models": [[396, "run-models"]], "Supported model": [[396, "supported-model"]], "Table of Contents": [[397, "table-of-contents"]], "Quick Start": [[397, "quick-start"]], "Unix-based systems (Linux, macOS, etc.):": [[397, "unix-based-systems-linux-macos-etc"]], "Common Options": [[397, "common-options"]], "Input Prompts": [[397, "input-prompts"]], "Interaction": [[397, "interaction"]], "Interaction Options": [[397, "interaction-options"]], "Reverse Prompts": [[397, "reverse-prompts"]], "In-Prefix": [[397, "in-prefix"]], "In-Suffix": [[397, "in-suffix"]], "Instruction Mode": [[397, "instruction-mode"]], "Context Management": [[397, "context-management"]], "Context Size": [[397, "context-size"]], "Keep Prompt": [[397, "keep-prompt"]], "Generation Flags": [[397, "generation-flags"]], "Number of Tokens to Predict": [[397, "number-of-tokens-to-predict"]], "Temperature": [[397, "temperature"]], "Repeat Penalty": [[397, "repeat-penalty"]], "Top-K Sampling": [[397, "top-k-sampling"]], "Top-P Sampling": [[397, "top-p-sampling"]], "Tail Free Sampling (TFS)": [[397, "tail-free-sampling-tfs"]], "Locally Typical Sampling": [[397, "locally-typical-sampling"]], "Mirostat Sampling": [[397, "mirostat-sampling"]], "Logit Bias": [[397, "logit-bias"]], "RNG Seed": [[397, "rng-seed"]], "Performance Tuning and Memory Options": [[397, "performance-tuning-and-memory-options"]], "Number of Threads": [[397, "number-of-threads"]], "Mlock": [[397, "mlock"]], "No Memory Mapping": [[397, "no-memory-mapping"]], "Memory Float 32": [[397, "memory-float-32"]], "Batch Size": [[397, "batch-size"]], "Prompt Caching": [[397, "prompt-caching"]], "Additional Options": [[397, "additional-options"]], "Transformers-Accelerated Libraries": [[398, "transformers-accelerated-libraries"]], "Build": [[398, "build"], [413, "build"]], "Test": [[398, "test"]], "API reference for users": [[398, "api-reference-for-users"]], "sparse_matmul kernel:": [[398, "sparse-matmul-kernel"]], "Supported Matrix": [[398, "supported-matrix"]], "3D Inference": [[399, "d-inference"]], "Memory Layout in SPMM_VNNI": [[399, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[399, "cache-issues"]], "SPMM_VNNI 3D Inference": [[399, "spmm-vnni-3d-inference"]], "Binary Injectors": [[400, "binary-injectors"]], "Framework Features": [[400, "framework-features"], [401, "framework-features"]], "param_type.hpp": [[400, "param-type-hpp"]], "operator_desc.hpp": [[400, "operator-desc-hpp"], [401, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[400, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[400, "developer-s-perspective"]], "User\u2019s Perspective": [[400, "user-s-perspective"], [401, "user-s-perspective"]], "Element-wise Injector": [[401, "element-wise-injector"]], "param_types.hpp": [[401, "param-types-hpp"]], "alpha,beta,scale meaning": [[401, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[401, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[401, "developer-s-perspective"]], "Dense and Sparse": [[402, "dense-and-sparse"]], "Naive": [[402, "naive"]], "Tile": [[402, "tile"]], "Efficient kernel": [[402, "efficient-kernel"]], "More work per thread": [[402, "more-work-per-thread"]], "Prefetch": [[402, "prefetch"]], "Sparse acceleration": [[402, "sparse-acceleration"]], "Sparse GEMM AMX": [[403, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[403, "brief-introduction-for-isas"]], "Pattern": [[403, "pattern"]], "Reorder": [[403, "reorder"]], "Sparse GEMM AVX512F": [[404, "sparse-gemm-avx512f"]], "Key Instruction": [[404, "key-instruction"]], "Sparse Pattern & Data Format": [[404, "sparse-pattern-data-format"]], "Loops": [[404, "loops"]], "Dynamic Quant Matmul": [[405, "dynamic-quant-matmul"]], "problem description": [[405, "problem-description"]], "Kernel details": [[405, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[405, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[405, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[405, "different-jit-paths-for-different-weight-size"]], "one-stage jit-path": [[405, "one-stage-jit-path"]], "two-stage jit-path": [[405, "two-stage-jit-path"]], "Sparse GEMM with Layer-Normalize": [[406, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[406, "problem-description"]], "layernormalized sparse matmul": [[406, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[406, "pre-compute-spmm"]], "Direct Layernorm_ba": [[406, "direct-layernorm-ba"]], "Transposed MatMul": [[407, "transposed-matmul"]], "Problem Statements": [[407, "problem-statements"]], "Matmul_p2031_2013": [[407, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[407, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[407, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[407, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[407, "reorder-beforehand"]], "Transposed MHA": [[408, "transposed-mha"]], "Problem description": [[408, "problem-description"]], "Details": [[408, "details"]], "Reordering": [[408, "reordering"]], "Calculation": [[408, "calculation"]], "Sparse GEMM VNNI": [[409, "sparse-gemm-vnni"]], "On the fly activation reordering": [[409, "on-the-fly-activation-reordering"]], "Candidate patterns": [[409, "candidate-patterns"]], "Performance and Profiling": [[410, "performance-and-profiling"]], "Verbose": [[410, "verbose"]], "VTune": [[410, "vtune"]], "SDE": [[410, "sde"]], "Validated Performance Data": [[411, "validated-performance-data"]], "Single Thread": [[411, "single-thread"]], "Multi Thread (Thread = 4)": [[411, "multi-thread-thread-4"]], "Platform Configuration": [[411, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[412, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[412, "setups"]], "1. Prepare the sparse model": [[412, "prepare-the-sparse-model"]], "2. Run below commands": [[412, "run-below-commands"]], "3. Analysis results": [[412, "analysis-results"]], "Benchmark for Kernels": [[413, "benchmark-for-kernels"]], "sparse_matmul": [[413, "sparse-matmul"]], "spmm_avx512f": [[413, "spmm-avx512f"]], "spmm_vnni": [[413, "spmm-vnni"]], "spmm_amx_bf16_x16": [[413, "spmm-amx-bf16-x16"]], "eltwiseop": [[413, "eltwiseop"]], "layernorm_ba": [[413, "layernorm-ba"]], "transpose_matmul": [[413, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[413, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[413, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[413, "softmax"]], "attention": [[413, "attention"]], "Static MHA": [[413, "static-mha"]], "dynamic_quant_matmul": [[413, "dynamic-quant-matmul"]], "dynamic_quant": [[413, "dynamic-quant"]], "For developers": [[413, "for-developers"]], "Inputs format": [[414, "inputs-format"]], "Legal Information": [[415, "legal-information"]], "License": [[415, "license"]], "Citation": [[415, "citation"]], "Trademarks": [[415, "trademarks"]], "Metrics": [[416, "metrics"]], "Supported Metric": [[416, "supported-metric"]], "Metric Class Summary": [[416, "metric-class-summary"]], "Get Start with Metrics": [[416, "get-start-with-metrics"]], "Objective": [[417, "objective"]], "Supported Objectives Matrix:": [[417, "supported-objectives-matrix"]], "Examples:": [[417, "examples"]], "Pipeline": [[418, "pipeline"]], "Pipeline Inference for INT8 Model": [[418, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[418, "pipeline-inference-for-executor-backend"]], "Pruning types": [[419, "pruning-types"]], "Script:": [[419, "script"], [420, "script"]], "Create an instance of Metric": [[419, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[419, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[419, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[419, "prune-with-trainer"]], "Quantization Fundamentals": [[420, "quantization-fundamentals"]], "Quantization Approach": [[420, "quantization-approach"]], "Post Training Dynamic Quantization": [[420, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[420, "post-training-static-quantization"]], "Quantization Aware Training": [[420, "quantization-aware-training"]], "Accuracy Aware Tuning": [[420, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[420, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[420, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[420, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[420, "quantization-with-trainer"]], "Release": [[421, "release"]], "Release Notes": [[421, "release-notes"]], "Contents:": [[424, null], [429, null]]}, "indexentries": {"clang-format": [[0, "module-clang-format"]], "module": [[0, "module-clang-format"], [1, "module-convert_falcon"], [2, "module-convert_gptj"], [3, "module-convert_gptj_wo_vocab"], [4, "module-convert_gptneox"], [5, "module-convert_llama"], [6, "module-convert_mpt"], [7, "module-gptj_binding"], [8, "module-intel_extension_for_transformers.backends"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"], [192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [205, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [206, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [207, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [208, "module-intel_extension_for_transformers.backends.neural_engine"], [209, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"], [210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"], [211, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"], [212, "module-intel_extension_for_transformers.evaluation.hf_eval"], [213, "module-intel_extension_for_transformers.evaluation"], [214, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"], [215, "module-intel_extension_for_transformers.evaluation.lm_code_eval"], [216, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"], [217, "module-intel_extension_for_transformers.evaluation.lm_eval"], [218, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"], [219, "module-intel_extension_for_transformers.evaluation.lm_eval.models"], [220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"], [221, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"], [222, "module-intel_extension_for_transformers"], [223, "module-intel_extension_for_transformers.optimization.benchmark"], [224, "module-intel_extension_for_transformers.optimization.config"], [225, "module-intel_extension_for_transformers.optimization.distillation"], [226, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [227, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [228, "module-intel_extension_for_transformers.optimization.dynamic"], [229, "module-intel_extension_for_transformers.optimization"], [230, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [231, "module-intel_extension_for_transformers.optimization.mixture"], [232, "module-intel_extension_for_transformers.optimization.model"], [233, "module-intel_extension_for_transformers.optimization.modeling"], [234, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"], [235, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"], [236, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [237, "module-intel_extension_for_transformers.optimization.nas"], [238, "module-intel_extension_for_transformers.optimization.nas.nas"], [239, "module-intel_extension_for_transformers.optimization.optimizer"], [240, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [241, "module-intel_extension_for_transformers.optimization.pipeline"], [242, "module-intel_extension_for_transformers.optimization.pruner"], [243, "module-intel_extension_for_transformers.optimization.pruner.pruning"], [244, "module-intel_extension_for_transformers.optimization.pruning"], [245, "module-intel_extension_for_transformers.optimization.quantization"], [246, "module-intel_extension_for_transformers.optimization.trainer"], [247, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [248, "module-intel_extension_for_transformers.optimization.utils"], [249, "module-intel_extension_for_transformers.optimization.utils.metrics"], [250, "module-intel_extension_for_transformers.optimization.utils.models"], [251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [252, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [253, "module-intel_extension_for_transformers.optimization.utils.objectives"], [254, "module-intel_extension_for_transformers.optimization.utils.utility"], [255, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [256, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [257, "module-intel_extension_for_transformers.preprocessing"], [258, "module-intel_extension_for_transformers.preprocessing.utils"], [259, "module-sparsity_all"], [260, "module-test_add_cls_token"], [261, "module-test_add_embeddings"], [262, "module-test_add_zeros"], [263, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [264, "module-test_attention_reshape"], [265, "module-test_baddbmm"], [266, "module-test_bert_mini_fp32"], [267, "module-test_binary_op"], [268, "module-test_binaryop"], [269, "module-test_cast_to"], [270, "module-test_concat"], [271, "module-test_conv"], [272, "module-test_conv_int8"], [273, "module-test_conv_reshape"], [274, "module-test_decoder_attn_reshape"], [275, "module-test_dispatcher_tuning_acc"], [276, "module-test_dispatcher_tuning_throughput"], [277, "module-test_dolly_pattern"], [278, "module-test_dynamic_quantization"], [279, "module-test_electra"], [280, "module-test_embedding"], [281, "module-test_embeddingbag"], [282, "module-test_execution_options"], [283, "module-test_fwk"], [284, "module-test_gather"], [285, "module-test_gelu"], [286, "module-test_gpt_int8"], [287, "module-test_graph_dispatch"], [288, "module-test_graph_optimizer"], [289, "module-test_insert_input_output_data"], [290, "module-test_is_supported_onnx_graph"], [291, "module-test_last_layer_shape"], [292, "module-test_layer_norm_with_reduce_mean"], [293, "module-test_layer_norm_with_transpose"], [294, "module-test_layernorm"], [295, "module-test_linear"], [296, "module-test_linear_int8"], [297, "module-test_llama_pattern"], [298, "module-test_main"], [299, "module-test_matmul"], [300, "module-test_matmul_int8"], [301, "module-test_matmul_with_bias_relu"], [302, "module-test_matmul_with_bias_sigmoid"], [303, "module-test_matmul_with_bias_tanh"], [304, "module-test_merged_embeddingbag"], [305, "module-test_model"], [306, "module-test_neox_rotary_pos_emb"], [307, "module-test_onnx_utils"], [308, "module-test_operator_adaptor"], [309, "module-test_ops"], [310, "module-test_padding_seq"], [311, "module-test_padding_sequence"], [312, "module-test_pattern_dispatch"], [313, "module-test_permute"], [314, "module-test_position_embeddings"], [315, "module-test_pow"], [316, "module-test_primitive_cache_acc"], [317, "module-test_primitive_cache_throughput"], [318, "module-test_qkv_merge"], [319, "module-test_qkv_reshape"], [320, "module-test_quant_onnx_execute"], [321, "module-test_reshape_after_restore_hidden_states"], [322, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [323, "module-test_reshape_before_restore_hidden_states"], [324, "module-test_size"], [325, "module-test_slice"], [326, "module-test_softmax"], [327, "module-test_start_end_logits"], [328, "module-test_static_compressed_buffer"], [329, "module-test_tanh"], [330, "module-test_text_encoder"], [331, "module-test_text_encoder_bf16"], [332, "module-test_tf_utils"], [333, "module-test_token_type_embeddings"], [334, "module-test_transpose"], [335, "module-test_transpose_batch_matmul"], [336, "module-test_two_linear"], [337, "module-test_unet"], [338, "module-test_unet_bf16"], [339, "module-test_unsqueeze"], [340, "module-test_vae_decoder"], [341, "module-test_vae_decoder_bf16"], [342, "module-test_weight_sharing_acc"], [343, "module-test_weight_sharing_dispatcher_tuning_acc"], [344, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [345, "module-test_weight_sharing_throughput"]], "bytes_to_unicode() (in module convert_falcon)": [[1, "convert_falcon.bytes_to_unicode"]], "convert_falcon": [[1, "module-convert_falcon"]], "bytes_to_unicode() (in module convert_gptj)": [[2, "convert_gptj.bytes_to_unicode"]], "convert_gptj": [[2, "module-convert_gptj"]], "lazyunpickler (class in convert_gptj_wo_vocab)": [[3, "convert_gptj_wo_vocab.LazyUnpickler"]], "nefiletype (class in convert_gptj_wo_vocab)": [[3, "convert_gptj_wo_vocab.NEFileType"]], "bounded_parallel_map() (in module convert_gptj_wo_vocab)": [[3, "convert_gptj_wo_vocab.bounded_parallel_map"]], "bytes_to_unicode() (in module convert_gptj_wo_vocab)": [[3, "convert_gptj_wo_vocab.bytes_to_unicode"]], "convert_gptj_wo_vocab": [[3, "module-convert_gptj_wo_vocab"]], "find_class() (convert_gptj_wo_vocab.lazyunpickler method)": [[3, "convert_gptj_wo_vocab.LazyUnpickler.find_class"]], "find_multifile_paths() (in module convert_gptj_wo_vocab)": [[3, "convert_gptj_wo_vocab.find_multifile_paths"]], "handle_quantization() (in module convert_gptj_wo_vocab)": [[3, "convert_gptj_wo_vocab.handle_quantization"]], "load_some_model() (in module convert_gptj_wo_vocab)": [[3, "convert_gptj_wo_vocab.load_some_model"]], "nth_multifile_path() (in module convert_gptj_wo_vocab)": [[3, "convert_gptj_wo_vocab.nth_multifile_path"]], "bytes_to_unicode() (in module convert_gptneox)": [[4, "convert_gptneox.bytes_to_unicode"]], "convert_gptneox": [[4, "module-convert_gptneox"]], "lazyunpickler (class in convert_llama)": [[5, "convert_llama.LazyUnpickler"]], "nefiletype (class in convert_llama)": [[5, "convert_llama.NEFileType"]], "bounded_parallel_map() (in module convert_llama)": [[5, "convert_llama.bounded_parallel_map"]], "convert_llama": [[5, "module-convert_llama"]], "find_class() (convert_llama.lazyunpickler method)": [[5, "convert_llama.LazyUnpickler.find_class"]], "find_multifile_paths() (in module convert_llama)": [[5, "convert_llama.find_multifile_paths"]], "handle_quantization() (in module convert_llama)": [[5, "convert_llama.handle_quantization"]], "load_some_model() (in module convert_llama)": [[5, "convert_llama.load_some_model"]], "nth_multifile_path() (in module convert_llama)": [[5, "convert_llama.nth_multifile_path"]], "bytes_to_unicode() (in module convert_mpt)": [[6, "convert_mpt.bytes_to_unicode"]], "convert_mpt": [[6, "module-convert_mpt"]], "gptj_binding": [[7, "module-gptj_binding"]], "intel_extension_for_transformers.backends": [[8, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[9, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[9, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[11, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "del_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_var"]], "del_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_vars"]], "environ_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.environ_info_init"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_environ_info"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_environ_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "remove_environ_info_item() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_item"]], "remove_environ_info_items() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_items"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "set_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_var"]], "set_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_vars"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "baddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.baddbmm method)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "binaryop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.binaryop method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "zeros (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernorm method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "resize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.resize)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.resize method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.slice method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice.set_attr"]], "slicepositionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.slicepositionids method)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.where)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.where.where method)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where.set_attr"]], "optimizer (class in intel_extension_for_transformers.backends.neural_engine.compile.optimizer)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "optimize() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.optimize"]], "weight_optimization() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.weight_optimization"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "embeddingsto2dbeforeinnerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product.EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "groupnormswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish.GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithbiasunsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze.MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "neoxreorderchange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change.NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "neoxroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb.NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeunusedoperator (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator.RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "removezeros (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros.RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "explicitnhwctransposeforconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose.ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "stablediffusion_mha (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA.StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "stablediffusion_mhareshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape.StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[188, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[190, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchunpackbaddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm.TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[192, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[193, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[194, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[195, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[196, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[197, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[198, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[199, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[200, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[201, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[202, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[205, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[206, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[206, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[206, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[206, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[206, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[206, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[207, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[207, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[208, "module-intel_extension_for_transformers.backends.neural_engine"]], "neural_engine_bin() (in module intel_extension_for_transformers.backends.neural_engine)": [[208, "intel_extension_for_transformers.backends.neural_engine.neural_engine_bin"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "datacollatorforsuperviseddataset (class in intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[210, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.DataCollatorForSupervisedDataset"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "preprocess() (in module intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[210, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.preprocess"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[211, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[212, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[213, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[214, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[214, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "pattern_match() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[214, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.pattern_match"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[215, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_eval.evaluator)": [[216, "intel_extension_for_transformers.evaluation.lm_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[218, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[218, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[218, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[219, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "lambadaopenai (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[221, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaOpenAI"]], "lambadastandard (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[221, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaStandard"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[221, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[222, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[223, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[223, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[223, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[223, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[223, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[224, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[224, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[224, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[225, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[225, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[225, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[226, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[226, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[226, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[227, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[227, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[228, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[229, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[230, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[230, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[230, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[230, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[230, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[230, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[230, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[231, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[232, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[232, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[232, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[233, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[234, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "incdecoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[235, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCDecoder"]], "incencoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[235, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCEncoder"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[235, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[236, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[236, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[236, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[236, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[236, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[237, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[238, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[238, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[239, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[239, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[239, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[239, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[240, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[240, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[241, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[241, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[242, "module-intel_extension_for_transformers.optimization.pruner"]], "pruning (class in intel_extension_for_transformers.optimization.pruner.pruning)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[243, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[243, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.update_config"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[244, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[244, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[244, "module-intel_extension_for_transformers.optimization.pruning"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[245, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[245, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[246, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[246, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[246, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[246, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[247, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[248, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[249, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[249, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[250, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[252, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[252, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[253, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[253, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[253, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[253, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[254, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[254, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[255, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[255, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[255, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[255, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[255, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[256, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[256, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[256, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[256, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[256, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[257, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[258, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[258, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[258, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[259, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[260, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[260, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[260, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[260, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[261, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[261, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[261, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[261, "module-test_add_embeddings"]], "testtorchop (class in test_add_zeros)": [[262, "test_add_zeros.TestTorchOP"]], "setupclass() (test_add_zeros.testtorchop class method)": [[262, "test_add_zeros.TestTorchOP.setUpClass"]], "teardownclass() (test_add_zeros.testtorchop class method)": [[262, "test_add_zeros.TestTorchOP.tearDownClass"]], "test_add_zeros": [[262, "module-test_add_zeros"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[263, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[263, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[263, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[263, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[264, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[264, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[264, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[264, "module-test_attention_reshape"]], "testtorchop (class in test_baddbmm)": [[265, "test_baddbmm.TestTorchOP"]], "setupclass() (test_baddbmm.testtorchop class method)": [[265, "test_baddbmm.TestTorchOP.setUpClass"]], "teardownclass() (test_baddbmm.testtorchop class method)": [[265, "test_baddbmm.TestTorchOP.tearDownClass"]], "test_baddbmm": [[265, "module-test_baddbmm"]], "testtorchmodel (class in test_bert_mini_fp32)": [[266, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[266, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[266, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[266, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[267, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[267, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[267, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[267, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[268, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[268, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[268, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[268, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[269, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[269, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[269, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[269, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[270, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[270, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[270, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[270, "module-test_concat"]], "testtorchop (class in test_conv)": [[271, "test_conv.TestTorchOP"]], "setupclass() (test_conv.testtorchop class method)": [[271, "test_conv.TestTorchOP.setUpClass"]], "teardownclass() (test_conv.testtorchop class method)": [[271, "test_conv.TestTorchOP.tearDownClass"]], "test_conv": [[271, "module-test_conv"]], "testtorchop (class in test_conv_int8)": [[272, "test_conv_int8.TestTorchOP"]], "setupclass() (test_conv_int8.testtorchop class method)": [[272, "test_conv_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_conv_int8.testtorchop class method)": [[272, "test_conv_int8.TestTorchOP.tearDownClass"]], "test_conv_int8": [[272, "module-test_conv_int8"]], "testconvreshape (class in test_conv_reshape)": [[273, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[273, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[273, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[273, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[274, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[274, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[274, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[274, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[275, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[275, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[275, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[275, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[276, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[276, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[276, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[276, "module-test_dispatcher_tuning_throughput"]], "testtorchop (class in test_dolly_pattern)": [[277, "test_dolly_pattern.TestTorchOP"]], "setupclass() (test_dolly_pattern.testtorchop class method)": [[277, "test_dolly_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_dolly_pattern.testtorchop class method)": [[277, "test_dolly_pattern.TestTorchOP.tearDownClass"]], "test_dolly_pattern": [[277, "module-test_dolly_pattern"]], "testdynamicquantization (class in test_dynamic_quantization)": [[278, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[278, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[278, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[278, "module-test_dynamic_quantization"]], "testelectra (class in test_electra)": [[279, "test_electra.TestElectra"]], "setupclass() (test_electra.testelectra class method)": [[279, "test_electra.TestElectra.setUpClass"]], "teardownclass() (test_electra.testelectra class method)": [[279, "test_electra.TestElectra.tearDownClass"]], "test_electra": [[279, "module-test_electra"]], "testtorchop (class in test_embedding)": [[280, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[280, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[280, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[280, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[281, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[281, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[281, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[281, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[282, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[282, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[282, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[282, "module-test_execution_options"]], "testfwk (class in test_fwk)": [[283, "test_fwk.TestFWK"]], "setupclass() (test_fwk.testfwk class method)": [[283, "test_fwk.TestFWK.setUpClass"]], "teardownclass() (test_fwk.testfwk class method)": [[283, "test_fwk.TestFWK.tearDownClass"]], "test_fwk": [[283, "module-test_fwk"]], "testtorchop (class in test_gather)": [[284, "test_gather.TestTorchOP"]], "setupclass() (test_gather.testtorchop class method)": [[284, "test_gather.TestTorchOP.setUpClass"]], "teardownclass() (test_gather.testtorchop class method)": [[284, "test_gather.TestTorchOP.tearDownClass"]], "test_gather": [[284, "module-test_gather"]], "testtorchop (class in test_gelu)": [[285, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[285, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[285, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[285, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[286, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[286, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[286, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[286, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[287, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[287, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[287, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[287, "module-test_graph_dispatch"]], "testexecutionoptions (class in test_graph_optimizer)": [[288, "test_graph_optimizer.TestExecutionOptions"]], "setupclass() (test_graph_optimizer.testexecutionoptions class method)": [[288, "test_graph_optimizer.TestExecutionOptions.setUpClass"]], "teardownclass() (test_graph_optimizer.testexecutionoptions class method)": [[288, "test_graph_optimizer.TestExecutionOptions.tearDownClass"]], "test_graph_optimizer": [[288, "module-test_graph_optimizer"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[289, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[289, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[289, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[289, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[290, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[290, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[290, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[290, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[290, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[291, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[291, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[291, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[291, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[292, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[292, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[292, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[292, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[293, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[293, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[293, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[293, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[294, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[294, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[294, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[294, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[295, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[295, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[295, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[295, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[296, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[296, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[296, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[296, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[297, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[297, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[297, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[297, "module-test_llama_pattern"]], "testmain (class in test_main)": [[298, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[298, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[298, "test_main.TestMain.tearDownClass"]], "test_main": [[298, "module-test_main"]], "testtorchop (class in test_matmul)": [[299, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[299, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[299, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[299, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[300, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[300, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[300, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[300, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[301, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[301, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[301, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[301, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[302, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[302, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[302, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[302, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[303, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[303, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[303, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[303, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[304, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[304, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[304, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[304, "module-test_merged_embeddingbag"]], "test_model": [[305, "module-test_model"]], "testtorchop (class in test_neox_rotary_pos_emb)": [[306, "test_neox_rotary_pos_emb.TestTorchOP"]], "setupclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[306, "test_neox_rotary_pos_emb.TestTorchOP.setUpClass"]], "teardownclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[306, "test_neox_rotary_pos_emb.TestTorchOP.tearDownClass"]], "test_neox_rotary_pos_emb": [[306, "module-test_neox_rotary_pos_emb"]], "testonnxutils (class in test_onnx_utils)": [[307, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[307, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[307, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[307, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[308, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[308, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[308, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[308, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[309, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[309, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[309, "test_ops.TestOps.tearDownClass"]], "test_ops": [[309, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[310, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[310, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[310, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[310, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[311, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[311, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[311, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[311, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[312, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[312, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[312, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[312, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[313, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[313, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[313, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[313, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[314, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[314, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[314, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[314, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[315, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[315, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[315, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[315, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[316, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[316, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[316, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[316, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[317, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[317, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[317, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[317, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[318, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[318, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[318, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[318, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[319, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[319, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[319, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[319, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[320, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[320, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[320, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[320, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[321, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[321, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[321, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[321, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[322, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[322, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[322, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[322, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[323, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[323, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[323, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[323, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[324, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[324, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[324, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[324, "module-test_size"]], "testtorchop (class in test_slice)": [[325, "test_slice.TestTorchOP"]], "setupclass() (test_slice.testtorchop class method)": [[325, "test_slice.TestTorchOP.setUpClass"]], "teardownclass() (test_slice.testtorchop class method)": [[325, "test_slice.TestTorchOP.tearDownClass"]], "test_slice": [[325, "module-test_slice"]], "testtorchop (class in test_softmax)": [[326, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[326, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[326, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[326, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[327, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[327, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[327, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[327, "module-test_start_end_logits"]], "testscbuffer (class in test_static_compressed_buffer)": [[328, "test_static_compressed_buffer.TestSCBuffer"]], "setupclass() (test_static_compressed_buffer.testscbuffer class method)": [[328, "test_static_compressed_buffer.TestSCBuffer.setUpClass"]], "teardownclass() (test_static_compressed_buffer.testscbuffer class method)": [[328, "test_static_compressed_buffer.TestSCBuffer.tearDownClass"]], "test_static_compressed_buffer": [[328, "module-test_static_compressed_buffer"]], "testtorchop (class in test_tanh)": [[329, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[329, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[329, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[329, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[330, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[330, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[330, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[330, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[331, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[331, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[331, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[331, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[332, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[332, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[332, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[332, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[333, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[333, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[333, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[333, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[334, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[334, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[334, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[334, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[335, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[335, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[335, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[335, "module-test_transpose_batch_matmul"]], "testtorchlinear (class in test_two_linear)": [[336, "test_two_linear.TestTorchLinear"]], "setupclass() (test_two_linear.testtorchlinear class method)": [[336, "test_two_linear.TestTorchLinear.setUpClass"]], "teardownclass() (test_two_linear.testtorchlinear class method)": [[336, "test_two_linear.TestTorchLinear.tearDownClass"]], "test_two_linear": [[336, "module-test_two_linear"]], "testunet (class in test_unet)": [[337, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[337, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[337, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[337, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[338, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[338, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[338, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[338, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[339, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[339, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[339, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[339, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[340, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[340, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[340, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[340, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[341, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[341, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[341, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[341, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[342, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[342, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[342, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[342, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[343, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[343, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[343, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[343, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[344, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[344, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[344, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[344, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[345, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[345, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[345, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[345, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[353, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[353, "c.NULL_INSTANCE"]], "jd (c++ type)": [[353, "_CPPv42jd"], [354, "_CPPv42jd"], [355, "_CPPv42jd"], [356, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[353, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[353, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_kernel (c++ function)": [[353, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[353, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::create_stream (c++ function)": [[353, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[353, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[353, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[353, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[353, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[353, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[353, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[353, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[353, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[353, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[353, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[353, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[353, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[353, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[353, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[354, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[354, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [354, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[354, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[354, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[354, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [354, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[354, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[354, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[354, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [354, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[354, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[354, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[354, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [354, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[354, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[354, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[354, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [354, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[354, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[354, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[354, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [354, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[354, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[354, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[354, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [354, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[354, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[354, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[354, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [354, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[354, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[354, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[354, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [354, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[354, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[354, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[354, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [354, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[354, "_CPPv4N2jd11gather_descD0Ev"]], "jd::groupnorm (c++ class)": [[354, "_CPPv4N2jd9groupnormE"]], "jd::groupnorm::groupnorm (c++ function)": [[354, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy"], [354, "_CPPv4N2jd9groupnorm9groupnormEv"]], "jd::groupnorm::~groupnorm (c++ function)": [[354, "_CPPv4N2jd9groupnormD0Ev"]], "jd::groupnorm_desc (c++ class)": [[354, "_CPPv4N2jd14groupnorm_descE"]], "jd::groupnorm_desc::groupnorm_desc (c++ function)": [[354, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc"], [354, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv"]], "jd::groupnorm_desc::~groupnorm_desc (c++ function)": [[354, "_CPPv4N2jd14groupnorm_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[354, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[354, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[354, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[354, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [354, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[354, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[354, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[354, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[354, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[354, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t"], [354, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[354, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[354, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[354, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [354, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[354, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[354, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[354, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [354, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[354, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[354, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[354, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [354, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[354, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[354, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[354, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [354, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[354, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[354, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[354, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [354, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[354, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[354, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[354, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [354, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[354, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[354, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[354, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [354, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[354, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[354, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[354, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [354, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[354, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[354, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[354, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [354, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[354, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[354, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[354, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[354, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[354, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[354, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[354, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[354, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[354, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[354, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [354, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[354, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[354, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[354, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [354, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[354, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[354, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[354, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [354, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[354, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[354, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[354, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [354, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[354, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[354, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[354, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [354, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[354, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[354, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[354, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [354, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[354, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[354, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[354, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [354, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[354, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[354, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[354, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [354, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[354, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[354, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[354, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [354, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[354, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[354, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[354, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [354, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[354, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[355, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[355, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[355, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[355, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[355, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[355, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[355, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[355, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[355, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[355, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [355, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [355, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[355, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[355, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[355, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::tensor_dtypes (c++ function)": [[355, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv"]], "jd::operator_desc::tensor_ftypes (c++ function)": [[355, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv"]], "jd::operator_desc::tensor_shapes (c++ function)": [[355, "_CPPv4NK2jd13operator_desc13tensor_shapesEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[355, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[355, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[356, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[356, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[356, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[356, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[356, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[356, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[356, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[356, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[356, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[356, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[356, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[356, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[356, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[356, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[356, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[356, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[356, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[356, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[356, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[356, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[356, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[356, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[356, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[356, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[356, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[356, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[356, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[356, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[356, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[356, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[356, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[356, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[356, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[356, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[356, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[356, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[356, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[356, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[356, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[356, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[356, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::mate (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_data_t::scale (c++ member)": [[356, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_append_sum (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE"]], "jd::ssd::matmul_fp8_param_t::has_scale0 (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_8bit (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3 (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2 (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[356, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_input (c++ type)": [[356, "_CPPv4N2jd3ssd12matmul_inputE"]], "jd::ssd::matmul_input::input (c++ enum)": [[356, "_CPPv4N2jd3ssd12matmul_input5inputE"]], "jd::ssd::matmul_input::input::append_sum (c++ enumerator)": [[356, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME"]], "jd::ssd::matmul_input::input::scale0 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E"]], "jd::ssd::matmul_input::input::src0 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E"]], "jd::ssd::matmul_input::input::src1 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E"]], "jd::ssd::matmul_input::input::src2 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E"]], "jd::ssd::matmul_input::input::zp0 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E"]], "jd::ssd::matmul_input::input::matmul_io_max (c++ enumerator)": [[356, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE"]], "jd::ssd::matmul_io (c++ type)": [[356, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[356, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::append_sum (c++ enumerator)": [[356, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[356, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_output (c++ type)": [[356, "_CPPv4N2jd3ssd13matmul_outputE"]], "jd::ssd::matmul_output::output (c++ enum)": [[356, "_CPPv4N2jd3ssd13matmul_output6outputE"]], "jd::ssd::matmul_output::output::dst0 (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13matmul_output6output4DST0E"]], "jd::ssd::matmul_param_t (c++ struct)": [[356, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[356, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[356, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[356, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[356, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[356, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[356, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[356, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[356, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[356, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[356, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[356, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[356, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[356, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[356, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[356, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[356, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[356, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[356, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[356, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[356, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[356, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[356, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[356, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[356, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[356, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[356, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[356, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[356, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[356, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[356, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[356, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[356, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[356, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[356, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[356, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[356, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[356, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[356, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[356, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[356, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[356, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[356, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[356, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[356, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[356, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[356, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[356, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[356, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[356, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[356, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[356, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[356, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[356, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[356, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[356, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[356, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[356, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[356, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[356, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[356, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[356, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[356, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[356, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[356, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[356, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})