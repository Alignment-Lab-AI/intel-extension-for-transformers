Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/api_doc_example/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_list_construct/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_c_engine", "docs/api_doc/api_engine", "docs/api_doc/api_example", "docs/api_doc/api_kernel", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/dispatcher", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/api_c", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization", "docs/api_doc/optimization/benchmark", "docs/api_doc/optimization/config", "docs/api_doc/optimization/distillation", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/optimizer_tf", "docs/api_doc/optimization/pipeline", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/intel_extension_for_transformers/api_doc_example/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_list_construct/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_c_engine.rst", "docs/api_doc/api_engine.rst", "docs/api_doc/api_example.rst", "docs/api_doc/api_kernel.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/dispatcher.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/api_c.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization.rst", "docs/api_doc/optimization/benchmark.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/distillation.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/optimizer_tf.rst", "docs/api_doc/optimization/pipeline.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.api_doc_example</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.criteria</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruners</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.regs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "C++ APIs", "Python APIs", "API Document Example", "C++ APIs", "Python APIs", "Compile", "Class dispatcher", "Graph", "Engine API", "Kernels C++ APIs", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Optimization APIs", "Benchmark", "Config", "Distillation", "Model", "PyTorch Optimizer", "Optimizer_tf", "Pipeline", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Neural Engine Support Matrix", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"thi": [0, 3, 10, 142, 155, 174, 175, 204, 205, 206, 207, 208, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 314, 328, 338, 339, 340, 341, 342, 344, 348, 349, 350, 351, 352, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 375, 376, 378, 380], "i": [0, 2, 3, 5, 6, 7, 10, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 191, 198, 201, 204, 205, 206, 207, 209, 211, 216, 217, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 304, 305, 309, 315, 316, 326, 328, 329, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 386], "onli": [0, 10, 185, 204, 205, 211, 216, 217, 221, 329, 346, 349, 351, 352, 353, 355, 358, 360, 361, 362, 365, 367, 368, 369, 373, 376, 378], "us": [0, 2, 10, 15, 48, 125, 142, 155, 174, 175, 180, 184, 185, 187, 191, 193, 194, 197, 198, 201, 204, 205, 208, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 338, 339, 340, 341, 342, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380], "refer": [0, 3, 5, 6, 201, 204, 206, 221, 223, 328, 340, 341, 342, 345, 352, 355, 363, 365, 368, 373, 375, 379, 380], "convert": [0, 2, 5, 6, 10, 15, 180, 184, 185, 344, 354, 368, 373, 380], "python": [0, 5, 6, 10, 216, 217, 309, 326, 339, 340, 341, 346, 347, 348, 349, 351, 353, 354, 372], "docstr": [0, 216, 217], "api": [0, 5, 6, 8, 221, 299, 339, 341, 349, 351, 352, 353, 355, 356, 360, 361, 378, 385], "document": [0, 211, 300, 339, 340, 341, 342, 345, 365, 367, 368, 369, 379, 380], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 188, 191, 193, 194, 196, 198, 201, 204, 205, 206, 207, 208, 209, 211, 214, 216, 217, 218, 220, 221, 223, 224, 299, 301, 302, 304, 305, 309, 312, 313, 315, 316, 326, 328, 329, 338, 340, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 373, 376, 378, 379, 380], "creat": [0, 180, 185, 191, 196, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 348, 354, 355, 364, 373, 376], "doc": [0, 143, 204, 221, 348, 352, 360, 369], "usag": [0, 341, 376, 377], "py": [0, 3, 205, 340, 341, 346, 348, 350, 354, 372], "exampl": [0, 8, 10, 122, 185, 206, 216, 217, 221, 299, 300, 332, 338, 340, 341, 342, 345, 348, 349, 351, 352, 354, 355, 356, 358, 360, 362, 376, 379, 380, 385], "def": [0, 185, 328, 329, 341, 348], "fun": 0, "return": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 187, 191, 193, 194, 196, 198, 199, 204, 205, 206, 207, 208, 209, 211, 216, 217, 328, 329, 340, 341, 348, 352, 356, 360, 361, 376], "1": [0, 10, 184, 185, 186, 200, 204, 205, 211, 216, 217, 219, 221, 314, 328, 329, 338, 340, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 356, 357, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 373, 376, 378, 379, 380], "x": [0, 143, 188, 216, 217, 351, 361, 364, 365, 367, 368, 373, 380], "2": [0, 10, 185, 187, 204, 205, 216, 314, 328, 329, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 356, 357, 362, 363, 364, 369, 370, 371, 373, 375, 376, 378], "print": [0, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 348, 356], "attribute1": 0, "sourc": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 349, 360, 367, 373, 375], "level": [0, 14, 217, 338, 349, 351, 361, 364, 372], "pleas": [0, 3, 5, 6, 201, 204, 206, 221, 223, 298, 328, 329, 340, 342, 343, 345, 348, 352, 355, 358, 359, 360, 361, 365, 368, 373, 379, 380], "set": [0, 10, 48, 186, 187, 197, 198, 204, 205, 209, 211, 216, 217, 220, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 338, 340, 341, 349, 351, 352, 353, 355, 356, 359, 360, 361, 364, 373], "100": [0, 185, 211, 216, 217, 341, 373, 380], "integ": [0, 204, 205, 208, 340, 344, 351, 352, 369, 373, 379, 380], "type": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 185, 187, 193, 198, 199, 204, 205, 207, 208, 209, 211, 216, 220, 221, 223, 307, 310, 315, 328, 339, 340, 341, 342, 343, 344, 349, 350, 351, 353, 356, 358, 360, 361, 366, 372, 373, 376, 377, 380], "int": [0, 10, 184, 185, 200, 204, 211, 216, 307, 314, 329, 348, 360, 361, 362, 365], "module_debug_level1": 0, "debug": [0, 14], "function1": 0, "param1": 0, "param2": 0, "paramet": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 185, 187, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 216, 217, 220, 221, 314, 328, 329, 342, 350, 356, 376, 379], "str": [0, 10, 48, 125, 184, 185, 186, 193, 197, 199, 200, 204, 211, 214, 216, 217, 218, 221, 223, 329, 340], "parameter1": 0, "float": [0, 185, 186, 198, 200, 204, 205, 206, 207, 208, 211, 214, 218, 307, 314, 340, 342, 344, 348, 354, 360, 361, 362, 376, 377, 379, 380], "parameter2": 0, "import": [0, 8, 10, 199, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 340, 341, 342, 345, 348, 349, 351, 353, 356, 360, 361, 365, 376, 377, 378, 379, 380], "o": [0, 10, 221, 328, 340, 341, 346, 357, 361, 366, 371], "rang": [0, 26, 185, 211, 328, 341, 348, 351, 373, 379, 380], "3": [0, 10, 314, 328, 329, 340, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 361, 363, 364, 369, 371, 373, 374, 376], "0": [0, 8, 10, 180, 185, 186, 188, 200, 204, 208, 214, 216, 217, 219, 220, 221, 307, 311, 312, 314, 328, 329, 340, 341, 342, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 361, 362, 363, 364, 365, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380], "valu": [0, 10, 15, 180, 181, 184, 185, 197, 201, 204, 206, 209, 211, 216, 217, 314, 340, 341, 342, 348, 349, 350, 351, 352, 360, 361, 362, 363, 365, 367, 368, 373, 376, 377, 379, 380], "true": [0, 8, 185, 204, 211, 214, 216, 217, 218, 307, 328, 341, 344, 345, 347, 348, 350, 351, 360, 361, 367, 370, 373, 376, 377, 380], "fals": [0, 185, 186, 188, 193, 204, 211, 216, 217, 307, 314, 328, 329, 342, 345, 348, 351, 360, 361, 373, 376], "bool": [0, 185, 186, 193, 204, 211, 214, 216, 217, 218, 307, 311, 312, 313, 314, 329, 342, 348, 360, 361, 376, 377], "function2": 0, "pep": 0, "484": [0, 357], "annot": 0, "style": [0, 339], "from": [0, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 180, 181, 184, 188, 191, 193, 201, 204, 205, 206, 207, 208, 209, 211, 216, 217, 221, 328, 329, 338, 340, 342, 343, 345, 348, 349, 350, 351, 352, 353, 355, 356, 360, 361, 364, 365, 366, 367, 368, 369, 376, 377, 378, 379, 380], "neural_compressor": [0, 185, 197, 211], "config": [0, 2, 8, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 184, 187, 190, 191, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 211, 216, 217, 326, 329, 340, 341, 342, 343, 345, 349, 350, 352, 355, 360, 373, 378, 379], "mixedprecisionconfig": 0, "eval_func": [0, 197, 198, 211, 328], "model": [0, 2, 5, 6, 7, 8, 10, 13, 15, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 159, 160, 161, 163, 164, 178, 179, 181, 184, 185, 188, 190, 191, 194, 197, 198, 199, 204, 205, 206, 208, 209, 211, 220, 221, 307, 326, 328, 340, 342, 343, 345, 347, 348, 351, 352, 356, 357, 360, 365, 366, 367, 368, 371, 375, 376, 377, 379, 380, 389], "accuraci": [0, 185, 191, 211, 328, 342, 343, 345, 365, 373, 376, 377, 379], "conf": [0, 8, 185, 307, 349, 350, 351, 355, 372], "output_model": 0, "mix_precis": 0, "fit": [0, 197, 204, 362], "function3": 0, "none": [0, 2, 8, 15, 47, 48, 73, 180, 181, 184, 185, 186, 187, 188, 191, 194, 197, 198, 199, 200, 209, 211, 214, 216, 217, 218, 219, 220, 314, 328, 340, 342, 343, 344, 350, 376, 377, 379, 380], "arg": [0, 14, 193, 198, 206, 211, 221, 312, 328, 350, 355], "kwarg": [0, 14, 185, 193, 206, 211, 216, 217], "an": [0, 3, 15, 180, 196, 204, 205, 208, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 338, 340, 341, 343, 344, 345, 348, 349, 350, 351, 352, 355, 356, 359, 360, 361, 365, 366, 369, 374, 376, 378, 389], "If": [0, 10, 187, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 339, 342, 344, 348, 349, 350, 351, 352, 353, 356, 360, 366, 373, 375, 376, 379, 380], "ar": [0, 10, 143, 187, 188, 204, 205, 206, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 338, 339, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 374, 375, 376, 377, 379, 380], "accept": [0, 211, 338, 378], "thei": [0, 10, 193, 204, 338, 342, 347, 356, 359, 360, 361, 363, 367, 373], "should": [0, 10, 193, 204, 205, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 348, 349, 351, 352, 355, 356, 359, 360, 361, 366, 373, 374, 376, 377, 380], "list": [0, 5, 6, 7, 8, 10, 15, 48, 180, 181, 185, 186, 197, 200, 204, 206, 211, 216, 217, 341, 342, 347, 348, 349, 352, 360, 361, 374, 380], "option": [0, 10, 184, 185, 193, 197, 199, 204, 211, 216, 217, 328, 329, 350, 356, 360, 369, 373], "argument": [0, 185, 206, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 342, 350, 374, 376, 377, 379, 380], "kei": [0, 8, 10, 15, 180, 204, 206, 209, 211, 216, 217, 299, 341, 350, 351, 352, 360, 361, 363], "dict": [0, 10, 15, 180, 181, 185, 194, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 216, 217, 221, 340, 348, 349, 379], "section": [0, 341, 358, 369, 370], "support": [0, 10, 15, 125, 185, 188, 199, 200, 204, 205, 210, 221, 314, 345, 346, 347, 348, 349, 350, 351, 355, 356, 361, 365, 366, 368, 370, 372, 373, 378, 379, 383], "ani": [0, 10, 193, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 339, 348, 356, 378], "restructuredtext": 0, "format": [0, 14, 211, 328, 350, 367, 368, 371, 372, 380], "includ": [0, 201, 204, 207, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 312, 313, 314, 338, 339, 341, 343, 349, 350, 351, 358, 361, 369, 373, 375, 380], "liter": 0, "block": [0, 204, 206, 216, 217, 343, 359, 362, 363, 364, 365, 366, 368, 369, 379], "rais": [0, 204, 205, 209, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "attributeerror": 0, "except": [0, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 351, 360], "valueerror": 0, "equal": [0, 10, 211, 352, 359, 360], "generator1": 0, "n": [0, 10, 188, 204, 216, 217, 314, 340, 342, 351, 352, 354, 357, 359, 362, 363, 364, 365, 368, 369, 371, 373], "gener": [0, 10, 143, 184, 185, 204, 206, 211, 216, 217, 221, 329, 341, 342, 348, 352, 356, 360, 361, 364, 365, 368, 370, 372, 373, 376, 377, 380], "have": [0, 2, 10, 180, 204, 205, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 339, 341, 348, 349, 350, 351, 352, 353, 356, 361, 365, 366, 367, 368, 372, 373, 375, 376, 377, 378, 379, 380], "yield": [0, 380], "next": [0, 2, 8, 208, 216, 217, 328, 352, 353, 360, 362, 364, 366, 367, 368, 369], "number": [0, 15, 185, 187, 188, 204, 205, 208, 217, 221, 329, 340, 351, 352, 356, 359, 362, 365, 368, 369, 373, 374, 380], "example_gener": 0, "4": [0, 10, 185, 200, 204, 211, 216, 217, 314, 328, 329, 338, 340, 342, 343, 346, 348, 350, 351, 352, 355, 356, 357, 363, 364, 365, 366, 369, 370, 373, 379], "exampleclass": 0, "param3": 0, "ha": [0, 5, 6, 7, 10, 204, 205, 221, 328, 339, 340, 341, 348, 351, 352, 354, 355, 356, 359, 361, 365, 373, 380], "public": [0, 307, 311, 312, 313, 314, 338, 355, 360, 361], "mai": [0, 2, 10, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 339, 341, 348, 351, 356, 362, 363, 364, 366, 367, 368, 369, 373, 375, 380], "here": [0, 10, 194, 211, 335, 341, 347, 348, 351, 352, 353, 355, 356, 361, 369, 380, 381, 388], "attr1": 0, "descript": [0, 211, 339, 340, 342, 350, 369, 376, 377, 379, 380], "attr2": 0, "attr5": 0, "after": [0, 10, 122, 142, 155, 174, 175, 201, 204, 205, 206, 207, 208, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 344, 347, 350, 351, 352, 353, 355, 356, 359, 361, 366, 368, 369, 372, 373, 374, 380], "specifi": [0, 10, 185, 187, 194, 196, 198, 200, 210, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 352, 353, 361, 365, 367, 373, 379, 380], "method1": 0, "execut": [0, 194, 205, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 312, 328, 341, 351, 355, 358, 360, 361, 365, 366, 368, 370, 373, 374, 380], "It": [0, 10, 193, 204, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 342, 348, 350, 351, 352, 355, 356, 364, 365, 367, 368, 373], "": [0, 10, 15, 48, 180, 185, 204, 205, 211, 217, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 312, 328, 338, 341, 342, 348, 349, 350, 352, 353, 355, 357, 362, 366, 368, 371, 373, 374, 378, 380], "neural": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 122, 150, 180, 181, 193, 198, 204, 206, 224, 299, 328, 329, 337, 341, 342, 348, 350, 351, 352, 353, 364, 372, 377, 380, 383, 390], "engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 122, 150, 180, 181, 191, 211, 224, 300, 304, 310, 315, 328, 337, 341, 348, 350, 352, 355, 360, 365, 368, 372, 383, 390], "start_pipelin": 2, "pipelin": [2, 190, 191, 194, 316, 384], "graph": [2, 3, 5, 6, 7, 10, 11, 12, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 305, 341, 342, 348, 353, 356, 364, 367, 369, 389], "interfac": [2, 185, 216, 217, 312, 344, 347, 358], "firstli": 2, "loader": [2, 11, 182, 351, 353, 356], "get": [2, 8, 10, 14, 15, 180, 181, 187, 188, 201, 204, 205, 207, 208, 211, 218, 220, 223, 344, 348, 351, 352, 353, 355, 356, 360, 367, 369, 374, 378, 385], "comput": [2, 10, 180, 211, 216, 217, 333, 341, 345, 356, 358, 359, 360, 361, 362, 365, 367, 368, 372, 378, 380, 386], "correspond": [2, 5, 6, 10, 205, 328, 348, 352, 356, 358, 365, 369, 372, 380], "framework": [2, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 122, 185, 191, 199, 211, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 333, 342, 343, 346, 348, 349, 353, 358, 378, 379, 380, 386], "contain": [2, 10, 15, 143, 180, 181, 204, 205, 206, 208, 209, 211, 216, 217, 221, 328, 333, 340, 342, 348, 349, 351, 352, 356, 358, 360, 372, 373, 374, 379, 380, 386], "node": [2, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 142, 155, 174, 175, 180, 181, 220, 344, 356, 357, 371], "edg": 2, "op": [2, 5, 6, 7, 10, 11, 15, 107, 122, 132, 180, 181, 182, 185, 211, 307, 314, 350, 355, 356, 360, 361, 373, 374, 380], "tensor": [2, 5, 6, 7, 8, 10, 11, 15, 36, 63, 122, 180, 181, 182, 184, 201, 204, 205, 207, 208, 211, 216, 217, 307, 314, 348, 349, 350, 352, 353, 355, 367, 372, 373, 379, 380], "Then": [2, 10, 342, 352, 353, 368, 369, 373, 379, 380], "extract": [2, 3, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 348, 351, 353], "pack": [2, 11, 36, 182, 369], "them": [2, 5, 6, 10, 348, 349, 352, 360, 363, 365, 368, 369, 380], "our": [2, 340, 344, 356, 360, 362, 363, 365, 367, 368, 369, 378], "form": [2, 10, 211, 342, 350, 356, 359, 364, 368, 373], "exploit": [2, 356], "abov": [2, 10, 216, 217, 347, 348, 351, 352, 356, 362, 363, 365, 366, 367, 372], "consist": [2, 339], "sub": [2, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 348, 351, 352, 360, 367, 368], "which": [2, 5, 6, 7, 10, 180, 185, 187, 191, 193, 201, 204, 205, 208, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 340, 342, 347, 348, 349, 351, 352, 356, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 372, 373, 376, 379, 380], "can": [2, 10, 107, 122, 143, 193, 204, 205, 206, 208, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 340, 341, 342, 344, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 377, 378, 379, 380], "see": [2, 10, 143, 216, 217, 298, 338, 341, 348, 350, 351, 352, 353, 356, 357, 359, 364, 368, 370, 371, 372, 373, 375], "new": [2, 5, 6, 7, 10, 15, 204, 208, 211, 339, 356, 360, 361, 374, 381], "big": [2, 351, 352], "like": [2, 5, 6, 7, 10, 143, 180, 204, 221, 340, 341, 342, 345, 348, 349, 350, 351, 352, 353, 356, 360, 361, 363, 370, 376, 377, 379, 380], "layernorm": [2, 10, 39, 110, 348, 352, 356, 358, 373], "There": [2, 342, 348, 349, 350, 366, 370, 373, 377, 379], "differ": [2, 8, 13, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 159, 160, 161, 163, 164, 178, 179, 187, 196, 204, 328, 338, 340, 341, 342, 345, 348, 349, 351, 352, 353, 356, 359, 366, 369, 376, 377, 379, 380], "flow": [2, 10, 348, 352], "one": [2, 5, 6, 10, 204, 206, 208, 216, 314, 328, 341, 342, 345, 347, 348, 350, 351, 352, 356, 360, 362, 363, 368, 372, 373, 378], "subgraph": [2, 10, 150, 351, 353], "final": [2, 204, 205, 351, 352, 353, 355, 356, 362, 365, 366, 368, 376], "yaml": [2, 8, 10, 194, 196, 209, 211, 350, 351, 353, 372], "file": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 125, 150, 185, 188, 191, 193, 194, 196, 206, 209, 211, 212, 221, 224, 340, 341, 348, 349, 350, 351, 353, 355, 360, 361, 372, 373, 374, 375], "bin": [2, 8, 197, 349, 350, 351, 353, 370, 372], "configur": [2, 89, 185, 187, 193, 194, 196, 198, 200, 204, 206, 209, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 314, 328, 340, 343, 344, 351, 359, 360, 364, 381], "infer": [2, 8, 13, 184, 198, 211, 217, 299, 343, 345, 347, 348, 350, 351, 352, 353, 363, 365, 366, 368, 377, 380, 387], "base": [3, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 193, 199, 201, 204, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 312, 328, 340, 341, 344, 345, 346, 353, 354, 355, 357, 362, 364, 365, 366, 367, 368, 370, 371, 378], "tensorflow": [3, 6, 16, 17, 18, 19, 20, 22, 27, 29, 34, 37, 38, 41, 42, 43, 45, 46, 49, 50, 52, 53, 56, 58, 59, 62, 71, 72, 76, 180, 185, 191, 198, 220, 326, 345, 346, 349, 356, 380], "onnx": [3, 5, 15, 181, 185, 211, 341, 345, 348, 350, 351, 367, 378, 384, 389], "onnx_extractor": [3, 4, 11, 182], "tf_extractor": [3, 4, 11, 182], "more": [3, 5, 6, 10, 143, 204, 298, 342, 345, 347, 348, 350, 352, 353, 355, 356, 357, 358, 359, 360, 363, 365, 366, 367, 369, 371, 372, 373], "detail": [3, 10, 328, 333, 335, 338, 339, 341, 342, 343, 345, 347, 348, 350, 351, 352, 355, 356, 357, 358, 363, 370, 371, 373, 379, 380, 386, 388], "A": [3, 10, 187, 194, 199, 201, 204, 205, 206, 207, 208, 209, 211, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 348, 349, 356, 357, 359, 362, 363, 369, 371, 372, 373], "super": [3, 348, 351], "oper": [3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 122, 180, 181, 204, 307, 310, 313, 315, 333, 343, 347, 348, 349, 351, 353, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 373, 380, 386, 389], "do": [3, 185, 188, 197, 198, 206, 211, 338, 344, 348, 349, 351, 352, 356, 360, 362, 379, 380], "addit": [3, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 343, 350, 362, 366, 374, 381], "attribut": [3, 5, 6, 7, 10, 48, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 311, 312, 328, 350, 352, 355, 361], "without": [3, 197, 205, 211, 338, 342, 348, 349, 366, 369, 370, 373], "modifi": [3, 8, 10, 107, 122, 206, 217, 349, 350, 353], "topologi": 3, "modul": [4, 9, 11, 12, 36, 100, 195, 203, 328, 353, 354], "torch_extractor": [4, 11, 182], "all": [5, 6, 7, 8, 10, 11, 36, 48, 122, 125, 182, 204, 205, 206, 211, 216, 217, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 328, 338, 341, 342, 347, 348, 349, 350, 352, 356, 357, 360, 361, 362, 363, 365, 368, 371, 372, 376, 379, 380], "input": [5, 6, 8, 10, 15, 26, 122, 143, 180, 181, 184, 198, 199, 204, 205, 211, 216, 217, 307, 314, 328, 329, 340, 341, 342, 344, 345, 349, 350, 351, 352, 355, 364, 366, 367, 369, 373, 378], "compos": [5, 6, 7, 191, 211, 328, 348, 353, 368], "order": [5, 6, 8, 10, 191, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 340, 348, 350, 356, 359, 365, 366, 368, 369], "origin": [5, 6, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 204, 205, 206, 209, 221, 340, 342, 348, 353, 366, 367, 380], "calcul": [5, 6, 143, 188, 201, 204, 206, 207, 328, 350, 356, 359, 361, 362, 365, 366, 369, 373, 380], "notic": [5, 6, 353, 360, 367, 368, 375], "map": [5, 6, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 204, 207, 211, 307, 328, 341, 342, 359, 380], "between": [5, 6, 205, 216, 217, 314, 328, 342, 366, 369, 373, 380], "For": [5, 6, 10, 15, 122, 204, 206, 298, 328, 338, 341, 345, 348, 351, 352, 356, 357, 358, 360, 363, 367, 368, 369, 370, 371, 378], "relat": [5, 6, 207, 211, 335, 342, 348, 352, 356, 363, 368, 379, 380, 388], "deatil": [5, 6], "onnxextractor": 5, "decor": [5, 6, 7, 15, 48, 125, 180, 181, 204, 205, 208], "graph_def": [5, 6, 7, 180], "input_tensor": [5, 6, 7, 10, 15, 48, 180, 181, 216, 217, 348, 352], "output_tensor": [5, 6, 7, 10, 15, 48, 180, 181, 348, 352], "record": [5, 6, 7, 328, 350, 351], "dest": [5, 6, 7, 10, 15, 180], "name": [5, 6, 7, 8, 10, 15, 48, 73, 125, 180, 185, 186, 193, 199, 200, 201, 204, 205, 207, 208, 214, 218, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 328, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 354, 356, 357, 361, 371, 372, 375, 376, 377, 378, 379, 380], "object": [5, 6, 7, 180, 185, 190, 194, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 211, 213, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 341, 342, 345, 348, 355, 379, 384], "onnxmodel": [5, 15], "tensorflowextractor": 6, "tensorflowmodel": [6, 180], "torch": [7, 143, 181, 184, 185, 204, 211, 216, 217, 329, 341, 378], "torchextractor": 7, "torchscript": [7, 67, 181, 184, 185, 211, 329], "defint": 8, "add_config_item": 8, "val": [8, 209], "add": [8, 10, 26, 185, 188, 206, 209, 342, 349, 350, 351, 352, 356, 358, 360, 361, 368, 373, 374, 389], "pair": [8, 185, 216, 349, 361, 369], "framework_modeling_config": 8, "inquire_config_item": 8, "insert_nod": 8, "index": [8, 216, 217, 220, 307, 314, 352, 355, 356], "insert": [8, 10, 353, 355, 356, 360, 361, 380], "ir": [8, 348, 349, 350, 351, 370, 372, 389], "remove_nod": 8, "node_nam": [8, 10, 15, 180, 348, 352], "remov": [8, 132, 217, 338, 339, 361, 379], "get_node_id": [8, 348], "id": [8, 10, 193, 217, 220, 361, 362], "accord": [8, 204, 208, 348, 351, 369], "get_node_by_nam": 8, "rename_nod": 8, "old_nam": 8, "new_nam": 8, "change_node_input_tensor": 8, "mode": [8, 184, 186, 200, 205, 210, 307, 328, 350, 354, 366, 368, 373, 374, 380], "change_node_output_tensor": 8, "output": [8, 10, 15, 26, 180, 181, 185, 197, 204, 205, 211, 216, 217, 307, 328, 340, 342, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 364, 365, 366, 367, 369, 373, 378], "get_pre_node_nam": 8, "previou": [8, 191, 204, 211, 341, 349, 381], "get_next_node_nam": 8, "get_tensor_idx": 8, "tensor_nam": [8, 15, 180], "from_output": 8, "modify_node_connect": 8, "dump_tensor": 8, "tensor_list": 8, "dump": [8, 380], "engine_init": 8, "net_info": 8, "weight_data": 8, "b": [8, 10, 15, 216, 314, 348, 356, 359, 362, 363, 364, 368, 369, 372, 373], "pybind": 8, "executor": [8, 307, 348, 349, 350], "input_data": [8, 10, 11, 100, 182, 349], "graph_init": [8, 349, 351], "initi": [8, 10, 15, 21, 39, 48, 185, 194, 205, 211, 216, 217, 314, 328, 360, 361, 365, 378, 379], "newgraph": 8, "out": [8, 10, 204, 211, 339, 341, 348, 349, 352, 358, 367, 380], "input_0": [8, 349, 351], "input_1": [8, 349, 351], "input_2": [8, 349, 351], "save": [8, 188, 197, 211, 340, 341, 348, 349, 350, 353, 363, 367, 369, 380], "output_dir": [8, 197, 211, 328, 340, 353, 354], "ymal": 8, "graph_dispatch": [8, 351], "tune": [8, 185, 211, 340, 342, 375, 376, 377, 379, 389], "inputs_shap": [8, 351], "dispatch": [8, 301], "get_sparse_nodes_nam": 8, "threshold": [8, 204, 373], "7": [8, 10, 314, 328, 341, 343, 346, 347, 348, 352, 354, 356, 357, 363, 371, 373, 376, 380], "sparsiti": [8, 185, 204, 205, 206, 208, 357, 372, 373, 379], "spars": [8, 205, 299, 314, 341, 351, 358, 359, 368, 373, 387], "transpose_mode_int8": 8, "node_name_list": 8, "transpos": [8, 11, 36, 61, 182, 204, 216, 217, 350, 351, 358, 359, 363, 365, 366, 369, 373, 387], "innerproduct": [8, 26, 107, 350, 351, 358], "reorder": [8, 11, 36, 182, 365, 366], "util": [10, 15, 180, 181, 185, 187, 190, 202, 222, 340, 348, 356, 359, 365, 366, 369, 373], "names_from_input": 10, "static": [10, 218, 311, 314, 350, 353, 360, 363, 365, 378], "method": [10, 188, 196, 200, 207, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 340, 343, 360, 363, 365, 368, 370, 379, 380], "valid": [10, 185, 198, 204, 205, 209, 211, 329, 339, 340, 342, 345, 356, 375, 381, 388], "string": [10, 15, 180, 181, 188, 194, 196, 204, 205, 206, 207, 208, 209, 220, 221, 307, 313, 340, 342, 348, 351, 352, 355, 361, 376, 377, 379, 380], "defin": [10, 185, 194, 196, 197, 204, 205, 206, 207, 208, 211, 311, 328, 338, 341, 342, 348, 349, 355, 356, 369, 374, 376, 379, 380], "field": [10, 185, 340, 360, 361, 380], "tupl": [10, 187, 199, 204, 216, 217], "In": [10, 191, 204, 205, 207, 211, 216, 328, 338, 341, 348, 349, 350, 351, 352, 353, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 376, 377, 380], "nodedef": [10, 180], "end": [10, 205, 206, 216, 217, 221, 299, 341, 350, 353, 355, 356, 361, 370], "also": [10, 204, 339, 341, 348, 349, 350, 352, 353, 355, 356, 359, 360, 361, 362, 365, 368, 369, 370, 377, 380], "get_data_dtyp": 10, "data": [10, 73, 184, 204, 221, 223, 314, 328, 341, 343, 348, 349, 351, 353, 354, 355, 359, 360, 361, 362, 365, 366, 369, 373, 380, 384, 388], "const": [10, 15, 180, 307, 311, 312, 313, 314, 355, 358, 360, 361, 362, 363], "dtype": [10, 15, 73, 180, 181, 211, 341, 344, 349, 350, 351, 355], "numpi": [10, 15, 341, 349], "dtypes_dict": 10, "autocast_init": 10, "quant": [10, 107, 185, 358, 373, 380, 387], "info": [10, 14, 15, 143, 180, 181, 204, 209, 328, 341, 348, 349, 370], "set_autocast": 10, "get_autocast_info": 10, "quant_info_init": 10, "insert_quant_info": 10, "get_quant_info": 10, "search_straight_pattern": [10, 356], "input_pattern": [10, 356], "search": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 185, 188, 191, 194, 211, 328, 343, 352], "user": [10, 205, 206, 209, 216, 217, 221, 299, 300, 328, 329, 332, 335, 341, 344, 348, 350, 352, 354, 365, 367, 370, 373, 377, 378, 385, 388], "pattern": [10, 11, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 190, 202, 205, 207, 312, 353, 359, 362, 372, 379, 389], "intern": [10, 352, 365], "grpah": [10, 15, 180], "structur": [10, 205, 343, 348, 349, 351, 364, 368, 372, 379], "attent": [10, 216, 217, 312, 328, 338, 350, 356, 367], "chain": [10, 360, 361], "call": [10, 205, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 344, 348, 351, 352, 359, 360, 361, 365, 368, 369, 380], "must": [10, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 346, 352, 356, 359, 360, 362, 369], "straight": 10, "sequenc": [10, 187, 204, 216, 217, 341, 345, 348, 352, 356, 364, 373], "mean": [10, 11, 36, 182, 185, 204, 216, 217, 221, 314, 340, 348, 349, 350, 351, 352, 356, 359, 360, 362, 366, 369, 373, 376, 379, 380], "otherwis": [10, 338, 348, 351, 365, 373], "op_typ": [10, 15, 48, 180, 181, 348, 351, 352, 361], "element": [10, 204, 206, 211, 348, 356, 358, 362, 364, 367, 369, 373, 387], "could": [10, 204, 206, 312, 338, 348, 349, 350, 352, 353, 356, 363, 372, 373, 379, 380], "mandatori": 10, "while": [10, 205, 349, 352, 356, 362, 365, 368, 373, 380], "stand": [10, 348], "mybe": 10, "mul": [10, 348, 352, 356, 360], "addv2": [10, 26, 356], "below": [10, 185, 299, 328, 339, 340, 341, 342, 348, 349, 351, 353, 356, 359, 364, 366, 367, 368, 369, 377], "extractor": [10, 11, 182, 351, 353, 356], "length": [10, 185, 187, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 341, 352, 356, 360, 373, 380], "match": [10, 328, 342, 351, 352, 356, 364, 367], "result": [10, 191, 198, 211, 328, 329, 338, 341, 343, 348, 351, 352, 357, 360, 361, 362, 365, 366, 367, 368, 369, 371, 375, 379, 380], "24": [10, 328, 356, 357, 363, 371], "layer": [10, 185, 187, 204, 206, 209, 216, 217, 328, 350, 356, 360, 364, 367, 379, 387], "each": [10, 143, 185, 191, 204, 205, 211, 216, 217, 221, 328, 340, 350, 351, 352, 359, 362, 364, 365, 366, 367, 368, 369, 372, 373, 374, 379], "still": [10, 206, 356, 362, 380], "last": [10, 185, 201, 204, 211, 216, 217, 352, 356, 359, 364, 365, 367, 380], "former": [10, 356], "search_pattern": [10, 356], "pattern_list": 10, "complet": [10, 348, 357, 362, 365, 368, 371], "represent": [10, 338, 345, 348, 352, 353], "its": [10, 122, 191, 204, 205, 211, 328, 338, 342, 348, 352, 353, 356, 364, 365, 366, 369, 372, 373, 375], "op_idx": 10, "howev": [10, 206, 351, 352, 356, 359, 363, 366, 369], "due": [10, 216, 352, 356, 359, 380], "few": [10, 364], "complic": [10, 348, 356], "therefor": [10, 344, 359, 364, 367, 369, 380], "fist": 10, "repres": [10, 204, 205, 206, 207, 208, 209, 338, 350, 352, 356, 359, 361, 362, 365, 380], "main": [10, 206, 211, 216, 217, 221, 352, 366, 373], "top": [10, 299, 340, 341, 364], "down": 10, "head": [10, 216, 217, 356, 361, 367, 368], "tail": [10, 356, 370], "left": [10, 204, 216, 217, 363, 367, 369], "bert_large_squad": 10, "pb": [10, 345], "squareddiffer": [10, 26, 356], "rsqrt": [10, 26, 356], "5": [10, 83, 84, 85, 86, 87, 151, 152, 153, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 185, 186, 314, 328, 329, 340, 342, 348, 350, 352, 355, 356, 357, 363, 371, 373], "8": [10, 314, 328, 341, 343, 344, 346, 348, 350, 352, 354, 356, 357, 361, 362, 363, 369, 370, 371, 373, 380], "9": [10, 185, 221, 328, 340, 341, 345, 346, 348, 356, 357, 363, 371, 373, 379], "6": [10, 314, 328, 342, 343, 347, 348, 352, 356, 357, 361, 363, 370, 371, 380], "same": [10, 204, 217, 342, 344, 348, 349, 350, 352, 353, 356, 359, 362, 365, 366, 369, 372, 373, 374], "func": [10, 328, 351], "follow": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 216, 217, 301, 302, 304, 305, 309, 315, 316, 326, 329, 338, 339, 340, 341, 342, 346, 348, 350, 351, 352, 353, 355, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 380], "frozen": [10, 349, 353], "you": [10, 185, 197, 216, 217, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 339, 340, 341, 342, 344, 348, 349, 351, 352, 353, 356, 360, 361, 363, 370, 372, 373, 375, 376, 378, 379, 380, 381], "had": [10, 348], "better": [10, 191, 198, 211, 328, 348, 350, 351, 359, 365, 366, 367, 368, 372, 376, 377, 380], "identifi": [10, 193, 362], "your": [10, 211, 221, 223, 339, 340, 341, 345, 348, 349, 350, 351, 352, 360, 361, 373, 375, 378], "own": [10, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 348, 352, 353, 360, 366, 377], "casual": 10, "tf": [10, 198, 216, 328], "control": [10, 184, 185, 328, 348], "start": [10, 205, 216, 217, 350, 356, 374, 385], "mostli": [10, 356], "longest": [10, 356], "path": [10, 185, 191, 193, 194, 196, 197, 206, 209, 211, 220, 221, 340, 341, 345, 349, 350, 351, 353, 370, 372, 373], "sometim": [10, 352, 380], "connect": [10, 201, 379], "But": [10, 349, 359, 378], "don": [10, 185, 204, 216, 217, 355, 360], "t": [10, 185, 204, 216, 217, 312, 314, 328, 340, 342, 355, 359, 360, 362, 367, 368, 369, 373, 379], "need": [10, 107, 185, 204, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 340, 341, 342, 348, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 373, 379, 380, 381], "least": [10, 204, 206, 366], "doesn": [10, 328, 360, 369, 373], "exist": [10, 193, 221, 328, 345, 348, 378], "relationship": 10, "sever": [10, 208, 340, 348, 353, 356, 359, 373, 380], "split": [10, 11, 36, 182, 329, 340, 351, 359, 363, 366], "representtaion": 10, "two": [10, 204, 205, 208, 211, 342, 348, 351, 352, 354, 355, 360, 361, 363, 365, 366, 367, 368, 369, 377, 378, 379, 380], "idx": [10, 314, 361], "some": [10, 122, 217, 341, 348, 349, 350, 351, 352, 355, 356, 360, 361, 365, 369, 380], "outsid": [10, 216, 217, 352, 356], "give": [10, 348, 352, 359], "just": [10, 217, 341, 348, 349, 350, 351, 352, 353, 356, 361, 369, 372, 376], "empti": [10, 26, 352, 356, 361, 374], "algorithm": [10, 48, 125, 185, 194, 314, 328, 340, 351, 352, 355, 356, 359, 360, 366, 373, 379, 380], "kind": [10, 89, 313, 355, 366, 373], "beaus": 10, "make": [10, 48, 122, 204, 205, 208, 211, 329, 338, 339, 347, 348, 349, 358, 359, 360, 361, 362, 364, 365, 366, 367, 370, 373], "sure": [10, 122, 204, 205, 208, 329, 348, 362, 373], "whole": [10, 191, 328, 343, 350, 351, 354, 364, 365, 366, 368, 370], "so": [10, 193, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 342, 347, 348, 351, 352, 355, 356, 360, 362, 363, 364, 365, 366, 368, 369, 370, 373, 376, 377, 379, 380], "check": [10, 15, 107, 185, 204, 205, 209, 211, 335, 339, 341, 348, 351, 352, 356, 361, 388], "symmetr": [10, 356, 365, 373, 380], "consecut": [10, 363, 369], "y": [10, 143, 361], "shape": [10, 11, 36, 73, 182, 204, 216, 217, 314, 328, 341, 349, 350, 351, 355, 359, 365, 367, 373], "df": [10, 356], "duplic": 10, "would": [10, 204, 348, 352, 353, 356, 370], "perform": [10, 185, 191, 194, 205, 207, 211, 216, 217, 218, 328, 329, 333, 341, 342, 344, 345, 349, 350, 351, 354, 359, 362, 363, 364, 365, 366, 367, 368, 369, 373, 376, 377, 379, 380, 386], "befor": [10, 185, 201, 204, 205, 206, 207, 208, 211, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 339, 342, 344, 348, 349, 351, 352, 353, 356, 360, 361, 362, 363, 365, 366, 368, 373, 380], "splice": 10, "de": 10, "total": [10, 185, 187, 204, 205, 208, 216, 328, 329, 340, 352, 356, 362, 369, 370], "step": [10, 185, 201, 204, 205, 206, 207, 208, 211, 347, 348, 350, 352, 353, 354, 355, 356, 360, 365, 367, 368, 373], "c": [10, 314, 315, 341, 346, 347, 348, 349, 351, 356, 357, 362, 364, 371, 373], "d": [10, 328, 340, 342, 359, 367], "e": [10, 143, 185, 191, 204, 211, 328, 338, 341, 342, 351, 360, 361, 365, 366, 367, 373, 374], "f": [10, 314, 342, 355, 370, 380], "c1": 10, "d1": [10, 373], "c2": 10, "d2": 10, "c3": [10, 370], "d3": [10, 370], "now": [10, 221, 347, 348, 349, 351, 352, 353, 360, 361, 368, 373, 378], "part": [10, 205, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 352, 355, 356, 368, 369], "As": [10, 342, 348, 350, 352, 353, 363, 367, 369], "appli": [10, 185, 204, 205, 338, 343, 345, 360, 361, 365, 366, 367, 369, 373, 379, 380], "everi": [10, 204, 205, 206, 348, 359, 373], "right": [10, 216, 217, 338, 363, 367, 369, 378], "construct_nod": 10, "attr": [10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 313, 348, 349, 360, 361], "ordereddict": [10, 48, 348], "construct": [10, 48, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 360, 361], "new_nod": 10, "insert_pattern": 10, "target_node_nam": 10, "replac": [10, 217, 341, 342, 345, 348, 352, 379, 380], "specif": [10, 193, 194, 209, 310, 313, 315, 328, 338, 342, 346, 348, 351, 352, 359, 364, 365, 366, 372, 373, 376, 377, 378, 380], "ccontain": 10, "insid": [10, 352, 355, 364, 366], "been": [10, 204, 205, 216, 217, 339, 342, 361, 365, 378], "pattern_map": [10, 348, 352], "pattern_nam": 10, "mapping_dict": 10, "custom": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 198, 211, 221, 328, 350, 352, 389], "mapping_config": 10, "first": [10, 185, 211, 340, 347, 348, 351, 352, 354, 356, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 380], "second": [10, 185, 216, 217, 329, 347, 352, 354, 355, 356, 363, 364, 367, 369, 370, 373, 380], "third": [10, 352, 364, 369, 375], "requir": [10, 122, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 345, 352, 354, 356, 357, 359, 362, 363, 365, 373, 380], "old": 10, "reshap": [10, 11, 36, 53, 142, 155, 174, 175, 182, 204, 307, 348, 349, 350, 355], "paddingsequ": [10, 51, 124, 349], "search_mod": [10, 348, 352], "embed": [10, 216, 217, 349, 352, 356, 360], "m": [10, 204, 314, 341, 342, 343, 350, 351, 357, 359, 362, 363, 364, 365, 366, 368, 369, 371, 373], "fusion": [10, 89, 122, 355, 356, 360, 361, 366, 389], "about": [10, 201, 338, 341, 348, 352, 355, 357, 361, 369, 371], "in_pattern": 10, "input_id": [10, 216, 217, 345, 349], "segment_id": [10, 345, 349], "input_mask": [10, 205, 345, 349], "out_pattern": 10, "th": [10, 352], "berfor": 10, "match_result": 10, "_n": 10, "reshape_0": [10, 352], "where": [10, 26, 204, 216, 217, 328, 342, 352, 359, 361, 364, 365, 367, 369, 373, 374], "go": [10, 362], "mayb": [10, 351, 369], "happen": [10, 350, 369], "sepcial": 10, "biasadd": [10, 20, 352, 356], "bia": [10, 15, 185, 314, 350, 373], "unfix": 10, "locat": [10, 73, 348, 349, 352, 356, 369, 373, 381], "other": [10, 63, 107, 193, 314, 338, 339, 340, 341, 348, 349, 350, 351, 352, 356, 357, 365, 368, 369, 371, 373, 375, 380], "write": [10, 340, 348, 356, 365, 366, 368], "note": [10, 204, 206, 329, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 360, 361, 367, 368, 369, 373, 380], "That": [10, 368, 369], "too": [10, 348, 359, 360, 365], "decompos": [10, 348], "list2str": [10, 348], "src_perm": 10, "emit": [10, 352], "ret": [10, 356, 370], "str2list": 10, "src_str": 10, "pattern_mapping_conf_valid": 10, "conf_dict": 10, "lazyimport": 10, "module_nam": [10, 201, 205, 207, 208], "lazi": 10, "till": 10, "later": [10, 348, 356], "get_model_fwk_nam": 10, "detect": 10, "belong": [10, 348, 380], "avail": [10, 301, 302, 304, 305, 309, 315, 316, 326, 341, 364], "fwk": 10, "na": [10, 185, 190, 211, 340, 358], "assert": [11, 36, 182, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328], "batch_matmul": [11, 36, 182], "batch_matmul_v2": [11, 36, 182], "bias_add": [11, 15, 36, 182], "cast": [11, 36, 182], "concat": [11, 36, 182, 348], "conv": [11, 36, 182, 185, 204, 350, 351, 361], "co": [11, 36, 182, 193, 341], "empty_op": [11, 36, 182, 348], "expand_dim": [11, 36, 182], "fused_batch_matmul_v2": [11, 36, 182], "fused_batch_norm_v3": [11, 36, 182], "fused_gemm": [11, 36, 182], "fused_matmul": [11, 36, 182], "gather": [11, 36, 182, 204, 211, 216, 217, 312, 348, 360], "gather_el": [11, 36, 182, 348], "gelu": [11, 36, 100, 182, 348, 355, 358, 361, 373], "gemm": [11, 36, 182, 185, 344, 359, 362, 368, 373, 387], "iterator_get_next": [11, 36, 182], "iterator_v2": [11, 36, 182, 348], "layer_norm": [11, 36, 100, 182, 348], "log_softmax": [11, 36, 182], "map_and_batch_dataset": [11, 36, 182, 348], "matmul": [11, 15, 26, 36, 107, 182, 185, 204, 344, 350, 352, 353, 356, 358, 368, 373, 387], "mkl_layer_norm": [11, 36, 182], "model_dataset": [11, 36, 182], "one_hot": [11, 36, 182], "onnx_input": [11, 36, 182], "optimize_dataset": [11, 36, 182, 348], "padding_sequ": [11, 36, 100, 182, 349], "placehold": [11, 36, 182], "pos_emb": [11, 36, 182], "pow": [11, 36, 182, 348, 352], "quantize_linear": [11, 36, 182, 348], "quantize_v2": [11, 36, 182], "quantized_fused_matmul_and_dequant": [11, 36, 182], "quantized_matmul_with_bias_and_dequant": [11, 36, 182], "reduce_mean": [11, 36, 182, 348], "reduce_sum": [11, 36, 182], "rsub": [11, 36, 182], "scatter_el": [11, 36, 182], "sin": [11, 36, 182], "size": [11, 36, 182, 184, 185, 204, 211, 216, 217, 328, 338, 341, 345, 349, 351, 359, 362, 364, 366, 367, 368, 373, 380], "softmax": [11, 36, 182, 216, 312, 328, 342, 358, 367, 368], "squeez": [11, 36, 182], "strided_slic": [11, 36, 182], "top_k": [11, 36, 182, 221], "unpack": [11, 36, 182, 211, 348], "unsqueez": [11, 36, 182, 348], "view": [11, 36, 182, 339, 350, 359, 381], "sub_graph": [11, 182, 348, 351], "innerproductreshapefus": [11, 96, 100, 182], "add_cls_token": [11, 100, 182], "add_embed": [11, 100, 182], "arangewithreciproc": [11, 100, 182], "attentionblock_attentionmaskaddreshap": [11, 100, 182], "attentionblock_constantofshapewithmul": [11, 100, 182], "attentionblock_qkvprereshap": [11, 100, 182], "attentionblock_qkvreshap": [11, 100, 182], "attentionblock_resize2gath": [11, 100, 182], "attentionblock_weightreshapeto4d": [11, 100, 182], "attention_mask_length_adaptive_keep_indic": [11, 100, 182], "attention_output_layer_norm_length_adaptive_keep_indic": [11, 100, 182], "attention_reshap": [11, 100, 182], "cast_to": [11, 100, 182], "collect_quant_info": [11, 100, 182], "conv_reshap": [11, 100, 182], "decoder_attn_reshap": [11, 100, 182], "einsumwitharang": [11, 100, 182], "embeddingbag": [11, 26, 100, 182], "generate_sequ": [11, 100, 182], "innerproductwithbiasgelu": [11, 100, 182], "innerproductwithslic": [11, 100, 182], "input_fil": [11, 100, 182], "insert_bf16_nod": [11, 100, 182], "insert_quant_nod": [11, 100, 182], "int8_bf16_mixed_precision_check": [11, 100, 182], "interact_featur": [11, 100, 182], "last_layer_shap": [11, 100, 182], "layer_norm_with_reduce_mean": [11, 100, 182, 348], "layer_norm_with_transpos": [11, 100, 182], "matmul_with_bia": [11, 100, 182], "matmul_with_bias_add": [11, 100, 182], "matmul_with_bias_gelu": [11, 100, 182], "matmul_with_bias_relu": [11, 100, 182], "matmul_with_bias_sigmoid": [11, 100, 182], "matmul_with_bias_tanh": [11, 100, 182], "matmul_with_transpos": [11, 100, 182], "merged_embeddingbag": [11, 100, 182], "operator_adaptor": [11, 100, 182], "output_data": [11, 100, 182, 349], "position_embed": [11, 100, 182], "position_embeddings_v1": [11, 100, 182], "qkv_merg": [11, 100, 182], "qkv_reshap": [11, 100, 182], "quantize_fus": [11, 100, 182], "quantized_graph_dtype_refactor": [11, 100, 182], "remove_constant_op": [11, 100, 182], "remove_last_view": [11, 100, 182], "remove_list_construct": [11, 100, 182], "remove_rang": [11, 100, 182], "removeslic": [11, 100, 182], "reshape_after_restore_hidden_st": [11, 100, 182], "reshape_before_and_after_attention_out_layer_norm_gather_el": [11, 100, 182], "reshape_before_restore_hidden_st": [11, 100, 182], "reshape_fus": [11, 100, 182], "resnetblock_instancenormreshapefromconv": [11, 100, 182], "resnetblock_instancenormreshapefromdiv": [11, 100, 182], "restore_hidden_states_in_length_adaptive_update_indic": [11, 100, 182], "rotary_pos_emb": [11, 100, 182], "slicemask": [11, 100, 182], "stablediffusion_reshapefus": [11, 100, 182], "stablediffusion_bf16convert": [11, 100, 182], "start_end_logit": [11, 100, 182], "subgraph_match": [11, 100, 182, 351], "textencdoer_word_embed": [11, 100, 182], "textencoder_attentionmaskaddreshap": [11, 100, 182], "textencoder_attentionreshap": [11, 100, 182], "textencoder_kvreshap": [11, 100, 182], "textencoder_mulreshap": [11, 100, 182], "textencoder_qreshap": [11, 100, 182], "textencoder_softmaxreshap": [11, 100, 182], "textencoder_causal_attention_mask": [11, 100, 182], "token_type_embed": [11, 100, 182, 348], "token_type_embeddings_v1": [11, 100, 182, 348], "torch_embed": [11, 100, 182], "torch_ip_insert_bia": [11, 100, 182], "torchinsertbf16nod": [11, 100, 182], "torchpaddingsqu": [11, 100, 182], "transformer2dmodel_attentionmaskaddreshap": [11, 100, 182], "transformer2dmodel_constantofshapewithmul": [11, 100, 182], "transformer2dmodel_ffnslic": [11, 100, 182], "transformer2dmodel_ffnslice_1": [11, 100, 182], "transformer2dmodel_qkvprereshap": [11, 100, 182], "transformer2dmodel_qkvreshap": [11, 100, 182], "transformer2dmodel_qkvreshape4d": [11, 100, 182], "transformer2dmodel_encoderhiddenstatesreshap": [11, 100, 182], "transformer2dmodel_getsamplebatch": [11, 100, 182], "transformer2dmodel_instancenormreshapefromadd": [11, 100, 182], "transformer2dmodel_instancenormreshapefromconcat": [11, 100, 182], "transformer2dmodel_sampleslic": [11, 100, 182], "transformer2dmodel_upblockres": [11, 100, 182], "transpose_batch_matmul": [11, 100, 182, 348], "word_embed": [11, 100, 182, 349], "graph_util": [11, 182, 348, 352, 356], "logger": [11, 182, 190, 202, 370], "onnx_util": [11, 182], "tf_util": [11, 182], "torch_util": [11, 182], "load": [13, 188, 191, 198, 199, 211, 216, 217, 341, 348, 349, 350, 351, 353, 359, 361, 362, 363, 364, 369], "frontend": [13, 364], "get_logg": 14, "log": [14, 341, 349, 355], "msg": 14, "error": [14, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 349, 355, 370], "fatal": 14, "warn": 14, "get_children": 15, "input_name_to_nod": 15, "get_node_children_nam": 15, "nodeproto": [15, 181], "get_initializer_children_nam": 15, "graph_node_names_detail": [15, 180, 181], "pars": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 180, 349, 355], "graph_nodes_dict": [15, 180], "Be": [15, 180], "class": [15, 180, 199, 301, 304, 310, 314, 315, 329, 340, 342, 348, 355, 360, 361], "cerat": 15, "output_nam": 15, "ouput": 15, "param": [15, 180, 211, 360, 361], "node_names_detail": [15, 180], "is_supported_onnx_graph": [15, 247], "is_supported_onnx_nod": 15, "change_num_nam": 15, "bias_to_int32": 15, "bias_nod": 15, "a_scal": 15, "b_scale": 15, "int8": [15, 185, 199, 211, 341, 343, 350, 351, 353, 358, 361, 366, 367, 373, 380, 389], "int32": [15, 341, 349], "matric": [15, 362, 367, 368], "scale": [15, 211, 314, 360, 365, 368, 380], "arrai": [15, 349], "fp32_bia": 15, "int8_bia": 15, "int8_bias_zero_point": 15, "int8_bias_scal": 15, "int32_bia": 15, "onnx_extract_oper": 15, "framework_model": [15, 47, 48, 180], "nodes_dict": [15, 47, 48, 180, 181], "engine_graph": [15, 47, 48, 180, 181], "tf_dtype": [15, 180, 181], "set_attr": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 307, 348], "batchmatmul": 18, "batchmatmulv2": 19, "binaryop": [21, 360], "onnxruntim": [23, 24, 25, 31, 33, 54, 55, 60, 61, 63, 64, 66, 70, 74, 75, 77, 78, 341, 344, 346, 348, 354], "regist": [26, 39, 48, 51, 54, 55, 63, 65, 78, 125, 201, 204, 205, 207, 208, 359, 360, 361, 362, 364, 365, 366, 367, 369, 389], "binaryadd": [26, 360], "constantofshap": 26, "dequantizelinear": [26, 353], "dequant": [26, 360, 361, 365, 373], "erf": [26, 355], "expand": [26, 216, 217], "fill": [26, 352, 367], "flatmapdataset": 26, "ident": [26, 204, 338, 342], "makeiter": 26, "matmulwithbiasadd": [26, 114], "matmulwithbiasgelu": [26, 115], "matmulwithbiastanh": [26, 118], "matmulwithbia": [26, 113], "qlinearmatmul": [26, 353], "qlinearadd": 26, "qlinearmul": 26, "realdiv": 26, "sqrt": [26, 348, 352, 367], "squar": [26, 216, 217], "stopgradi": 26, "tanh": [26, 355, 361, 373], "tensorslicedataset": 26, "transposebatchmatmul": [26, 178, 348], "relu": [26, 361, 373], "matmulwithbiasrelu": [26, 116], "cumsum": 26, "onehot": [26, 46], "tokentypeid": 26, "positionid": 26, "loop": [26, 211, 314, 328, 348, 360, 362, 367], "sigmoid": 26, "matmulwithbiassigmoid": [26, 117], "flatten": 26, "mergedembeddingbag": [26, 120], "convolut": [26, 342, 351], "expandindic": 26, "tile": [26, 63, 359, 363, 365, 367, 368, 369, 373], "opani": 26, "sequencelength": [26, 357], "arang": 26, "reciproc": 26, "einsum": 26, "repeat": [26, 362, 374], "stack": [26, 368], "constant": [26, 132, 211], "listconstruct": 26, "latrang": 26, "expanddim": 27, "fusedbatchnormv3": 29, "fusedgemm": 30, "fusedmatmul": 31, "gatherv2": [32, 348], "gatherel": [33, 348], "iteratorgetnext": 37, "iteratorv2": [38, 348], "logsoftmax": [40, 312], "mapandbatchdataset": [41, 348], "modeldataset": 45, "onnxinput": 47, "operator_registri": [48, 348], "operator_typ": [48, 348], "subclass": [48, 125, 204, 205, 208, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 311, 312], "cl": [48, 125, 204, 205, 207, 208, 328], "registr": [48, 125, 348], "optimizedataset": [49, 348], "packagepositionembed": 53, "quantizelinear": [55, 348, 353], "quantiz": [55, 185, 190, 193, 197, 198, 211, 299, 341, 344, 360, 361, 365, 366, 368, 373, 376, 384, 389], "quantizev2": 56, "quantizedmatmulwithbiasanddequant": 58, "reducemean": [59, 348, 352], "reducesum": 60, "aten": 63, "self": [63, 185, 216, 217, 221, 328, 340, 348, 350], "scalar": [63, 360], "alpha": [63, 201, 207, 314, 366, 373], "scatterel": 64, "primconst": 67, "stridedslic": 72, "source_op": 73, "dest_op": 73, "definit": [73, 361], "topk": 74, "fuse": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 353, 360, 361], "acceler": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 333, 341, 343, 344, 353, 360, 361, 365, 367, 380, 386], "strategi": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 198, 362], "addclstoken": [80, 89], "addembed": 81, "stabl": [83, 84, 85, 86, 87, 143, 151, 152, 153, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 299, 341, 346, 365], "diffusionv1": [83, 84, 85, 86, 87, 152, 153, 156, 157, 158, 165, 166, 169, 170, 171, 177], "attentionmasklengthadaptiveexpandindic": 89, "attentionoutputlayernormlengthadaptiveexpandindic": 90, "attentionreshap": 91, "castto": 92, "collectquantinfo": 93, "convreshap": 94, "decoderattnreshap": 95, "generatesequ": 99, "inputdata": [103, 348], "inputfil": 104, "insertbf16nod": 105, "insertquantnod": 106, "quantizedgraphdtyperefactor": [107, 131], "int8bf16mixedprecisioncheck": 107, "inferenc": 107, "under": [107, 211, 341, 348, 349, 350, 353, 365, 366, 373, 375], "in8": 107, "bf16": [107, 185, 211, 341, 343, 353, 358, 361, 363, 365, 368, 373], "mix": [107, 351], "precis": [107, 211, 344, 353, 377, 380, 389], "And": [107, 350, 351, 352, 353, 356, 360], "u8": [107, 353, 355, 361, 368, 373], "s8": [107, 353, 360, 361, 365, 373], "fp32": [107, 185, 211, 341, 343, 349, 350, 351, 353, 355, 360, 361, 363, 364, 366, 368, 373, 378, 380], "interactfeatur": 108, "lastlayershap": 109, "layernormwithreducemean": [111, 348], "layernormwithtranspos": 112, "matmulwithtranspos": 119, "multiheadattent": 121, "bass": [121, 125], "operatoradaptor": 122, "sweep": 122, "receiv": [122, 193, 352, 356], "outputdata": [123, 348], "pattern_registri": [125, 348], "pattern_typ": [125, 348], "positionembed": 126, "positionembeddingsv1": 127, "qkvmerg": 128, "qkvreshap": 129, "qunatizefus": 130, "quantizedgraphdtypecheck": 131, "removeconstantop": 132, "removelastview": 133, "removelistconstruct": 134, "removerang": 135, "reshapeafterrestorehiddenst": 137, "reshapebeforeandafterattentionoutlayernormgatherel": 138, "reshapebeforerestorehiddenst": 139, "reshapefus": 140, "qkv": [142, 155, 174, 175, 351, 353], "groupnorm": 143, "channel": [143, 204, 360, 364, 365, 369, 373, 379], "separ": [143, 338, 356, 369, 375], "num_group": 143, "group": [143, 207, 343, 348, 356, 362, 367, 369, 379], "num_channel": 143, "var": [143, 314], "epsilon": [143, 348], "gamma": 143, "beta": [143, 201, 314, 366, 373], "http": [143, 201, 204, 206, 216, 221, 223, 340, 341, 346, 347, 349, 355, 375, 381], "pytorch": [143, 185, 188, 191, 193, 197, 204, 206, 211, 216, 217, 219, 316, 326, 340, 341, 344, 346, 372, 378, 379, 380], "org": [143, 201, 216, 346], "nn": [143, 184, 211, 364], "html": [143, 355], "restorehiddenstatesinlengthadapt": 144, "roraryposemb": 145, "startendlogit": 149, "matcher": [150, 328, 353], "subgraphmatch": [150, 351], "textencoder_wordembed": 151, "textencoderv1": [151, 167, 168, 172, 173, 176], "textencoder_casualattentionmask": 158, "tokentypeembed": [159, 348], "tokentypeembeddingsv1": [160, 348], "torchembed": 161, "torchinnerproductinsertbia": 162, "torchpaddingsequ": 164, "transformer2dmodel_ffninputslic": 167, "transformer2dmodel_ffninputslice_1": 168, "transformer2dmodel_qkvreshapeto4d": 171, "wordembed": 179, "create_tf_nod": 180, "when": [180, 185, 204, 205, 209, 211, 216, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 338, 343, 348, 351, 352, 355, 356, 359, 361, 362, 364, 365, 366, 368, 369, 373, 376, 377, 380], "tendorflow": 180, "get_tensor_dest_op": 180, "someth": 180, "store": [180, 185, 188, 191, 193, 201, 204, 205, 207, 208, 328, 348, 352, 353, 356, 359, 360, 361, 362, 363, 366, 367, 369], "dest_op_nam": 180, "tf_extract_oper": 180, "tf_dtype_id": 180, "deal": [180, 328, 350], "multipl": [180, 205, 212, 216, 217, 221, 329, 343, 348, 350, 361, 362, 364, 365, 366, 367, 368, 369, 373, 376, 377], "indetermin": 180, "torch_extract_oper": 181, "compil": [182, 302, 305, 345, 347, 348, 349, 351, 352, 354, 356, 389], "api_doc_exampl": 183, "version": [183, 193, 211, 338, 341, 346, 351, 357, 371, 375], "provid": [184, 185, 188, 193, 197, 198, 211, 216, 217, 221, 223, 299, 328, 329, 341, 343, 344, 345, 348, 358, 361, 365, 366, 368, 376, 380], "pytorchbenchmark": 184, "executorbenchmark": 184, "refactor_batch_s": 184, "batch_siz": [184, 185, 216, 217, 220, 329, 341, 349, 350, 354, 367, 373], "old_batch_s": 184, "batch": [184, 211, 314, 341, 349, 364, 365, 367, 374], "target": [184, 185, 204, 208, 209, 211, 328, 350, 369, 379], "default": [184, 185, 193, 197, 199, 209, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 340, 341, 342, 348, 351, 357, 361, 365, 369, 370, 371, 373, 376, 377, 379, 380], "batched_valu": 184, "get_example_input": [184, 329], "dataload": [184, 197, 211, 220, 329, 341], "batched_data": 184, "preprocess_model": 184, "example_input": [184, 329], "additional_cmd": 184, "jit": [184, 185, 211, 329, 333, 358, 360, 361, 364, 368, 373, 386], "trace": [184, 185, 329, 350], "benchmarkconfig": [184, 185, 329], "process": [184, 185, 191, 194, 204, 205, 206, 208, 209, 211, 221, 328, 341, 343, 348, 349, 351, 352, 356, 359, 360, 362, 365, 366, 369, 379, 380], "raw_cmd": 184, "preprocess": [184, 185, 340, 341, 368], "scriptmodul": 184, "model_name_or_path": [184, 193, 211, 221, 329, 340], "build": [184, 194, 198, 211, 328, 341, 347, 359, 365, 366, 370, 377], "inc": [185, 193, 197, 198, 211, 354], "nncf": 185, "check_valu": 185, "src": [185, 314, 349, 361, 369, 373], "supported_typ": 185, "supported_valu": 185, "given": [185, 193, 204, 205, 216, 217, 340, 356, 361, 364, 367, 369, 379], "datatyp": [185, 343, 344], "uint8": [185, 367, 380], "_datatyp": 185, "dynamiclengthconfig": [185, 211, 345], "max_length": [185, 329, 341], "length_config": [185, 216, 217, 345], "const_rat": 185, "num_sandwich": 185, "length_drop_ratio_bound": [185, 187], "layer_dropout_prob": [185, 187], "layer_dropout_bound": [185, 187], "dynamic_train": 185, "load_store_fil": 185, "evo_it": 185, "30": [185, 363], "population_s": 185, "20": [185, 329, 341, 346, 349, 354, 357, 363, 370, 371], "mutation_s": 185, "mutation_prob": [185, 188], "crossover_s": 185, "num_cpu": 185, "48": [185, 357, 371], "distributed_world_s": 185, "latency_constraint": 185, "evo_eval_metr": 185, "eval_f1": [185, 188, 345, 376, 380], "dynam": [185, 190, 211, 355, 358, 360, 364, 366, 373, 387], "adapt": [185, 299, 338, 341], "transform": [185, 198, 199, 211, 216, 217, 221, 328, 329, 333, 339, 340, 342, 346, 347, 348, 360, 361, 366, 367, 368, 369, 375, 377, 378, 379, 380, 381, 386], "limit": [185, 342, 364, 368], "maximum": [185, 204, 205, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 357, 371, 380], "drop": [185, 187, 343, 366, 369, 376], "ratio": [185, 187, 188, 204, 205, 206, 208, 342, 371, 373, 376, 377, 379], "sandwich": 185, "num": [185, 328, 340, 350, 359, 361, 367], "train": [185, 191, 194, 197, 198, 205, 206, 211, 299, 328, 340, 341, 342, 345, 372, 379], "dropout": [185, 187], "probabl": [185, 187, 328, 366], "whether": [185, 193, 204, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 335, 348, 350, 356, 373, 388], "iter": [185, 191, 205, 208, 211, 328, 329, 341, 349, 351, 355, 360, 364, 367, 368, 373, 374], "evolut": [185, 189, 190, 343], "popul": [185, 188], "mutat": [185, 188], "crossov": [185, 188], "cpu": [185, 299, 313, 329, 340, 341, 345, 346, 349, 355, 357, 359, 361, 370, 371, 378], "distribut": [185, 220, 328, 342, 366, 380, 381], "world": 185, "latenc": [185, 307, 328, 329, 341, 343, 350, 357, 362, 380], "constraint": [185, 188, 380], "metric": [185, 190, 191, 194, 198, 211, 213, 328, 341, 345, 384], "quantizationconfig": [185, 197, 198, 211, 341, 345], "approach": [185, 194, 196, 340, 342, 343, 345, 361, 362], "posttrainingstat": [185, 343, 344, 345, 380], "timeout": [185, 380], "max_trial": [185, 328, 380], "config_fil": 185, "sampling_s": 185, "use_bf16": 185, "recip": [185, 211, 340, 351, 377], "earli": [185, 380], "stop": [185, 221, 340, 380], "combin": [185, 211, 328, 351, 356, 360, 361, 380], "decid": [185, 364, 380], "exit": [185, 380], "max": [185, 187, 211, 341, 357, 360, 362, 364, 369, 371, 380], "time": [185, 350, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 380], "evalu": [185, 188, 191, 194, 197, 198, 204, 205, 206, 211, 328, 342, 350, 367, 376, 377, 379, 380], "notraineroptim": [185, 197, 342, 379, 380], "guarante": [185, 380], "how": [185, 187, 201, 204, 205, 211, 298, 339, 348, 349, 350, 353, 354, 356, 361, 362, 363, 373, 376, 379], "mani": [185, 187, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 348, 350, 352, 360, 362, 363, 366, 368, 373], "sampl": [185, 187, 211, 221, 328, 329, 340, 341, 345, 357, 367, 380], "smooth_quant": 185, "smooth": 185, "smooth_quant_arg": 185, "fast_bias_correct": 185, "fast": [185, 299, 341, 345], "correct": [185, 209, 338, 352, 356, 367], "weight_correct": 185, "weight": [185, 201, 204, 205, 207, 208, 216, 217, 314, 328, 342, 344, 350, 351, 353, 359, 362, 363, 364, 368, 369, 373, 376, 377, 379, 380], "gemm_to_matmul": 185, "graph_optimization_level": 185, "disable_al": 185, "enable_bas": 185, "enable_extend": 185, "enable_al": 185, "first_conv_or_matmul_quant": 185, "last_conv_or_matmul_quant": 185, "pre_post_process_quant": 185, "postprocess": 185, "add_qdq_pair_to_weight": 185, "qdq": [185, 211, 344, 353], "vaild": 185, "onnxrt_trt_ep": 185, "optypes_to_exclude_output_qu": 185, "optyp": 185, "dedicated_qdq_pair": 185, "dedic": 185, "pruningconfig": [185, 345], "epoch": [185, 205, 206, 379], "epoch_rang": [185, 200], "initial_sparsity_ratio": [185, 200], "target_sparsity_ratio": [185, 200, 204, 205, 345, 379], "97": [185, 200, 371, 379], "pruner_config": [185, 345, 379], "pruner": [185, 190, 200, 201, 202, 206, 211, 342, 379], "prune": [185, 190, 197, 198, 201, 202, 204, 205, 207, 208, 209, 211, 216, 217, 299, 341, 384], "goal": [185, 211, 379], "behavior": [185, 211, 338, 339, 342, 359, 360, 365, 379, 380], "nlp": [185, 206, 211, 221, 223, 299, 340, 341, 343, 345, 349, 354, 379, 380], "wil": 185, "basicmagnitud": [185, 200, 343, 345, 379], "typel": 185, "init_prune_config": 185, "init": [185, 191, 197, 198, 202, 219, 220, 328, 340, 341, 346, 347, 349, 361], "distillationconfig": [185, 211, 345], "criterion": [185, 186, 198, 201, 204, 205, 214, 345, 376, 380], "distil": [185, 190, 191, 197, 198, 211, 316, 340, 341, 354, 384], "inc_config": 185, "knowledgeloss": [185, 186, 342], "tfdistillationconfig": [185, 328], "loss_typ": [185, 186, 328, 342], "loss_weight": [185, 328], "train_step": [185, 328], "temperatur": [185, 186, 221, 328, 340, 342], "loss": [185, 211, 216, 217, 328, 340, 342, 380], "knowledgedistillationloss": [185, 342], "flashdistillationconfig": 185, "block_nam": [185, 328], "layer_mappings_for_knowledge_transf": [185, 328], "add_origin_loss": [185, 186, 328, 342], "flash": [185, 191, 211], "autodistillationconfig": [185, 328], "search_spac": [185, 194, 328], "search_algorithm": [185, 328], "bo": [185, 328, 375], "seed": [185, 328], "knowledge_transf": [185, 328], "regular_distil": [185, 328], "auto": [185, 191, 198, 340, 350, 355, 361], "disil": 185, "space": [185, 191, 194, 205, 211, 328, 338, 339, 351, 359, 362], "g": [185, 191, 204, 211, 328, 342, 360, 361, 365, 366, 374], "bayesian": [185, 328], "architectur": [185, 191, 194, 198, 211, 216, 217, 328, 341, 346, 359, 366, 368], "candid": 185, "trial": [185, 211], "random": [185, 216, 328, 366], "knowledg": [185, 211, 328, 340], "transfer": [185, 211, 220, 342], "stage": [185, 191, 211, 307, 328], "autodistil": [185, 191, 198, 211, 384], "regular": [185, 191, 207, 379], "nasconfig": [185, 194, 196], "basic": [185, 194, 204, 217, 220, 341, 346, 355, 365], "parser": 185, "procedur": [185, 204, 373], "backend": [185, 211, 219, 329, 341, 343, 345, 346, 347, 348, 351, 353, 356, 358, 373, 380], "warmup": [185, 329, 351], "cores_per_inst": [185, 211, 329], "num_of_inst": [185, 211, 329], "benchmark": [185, 190, 211, 212, 316, 341, 351, 357, 358, 371, 374, 384], "skip": [185, 329, 362, 374], "collect": [185, 329, 348, 350, 380], "core": [185, 329, 349, 357, 359, 365, 366, 371, 374, 375], "instanc": [185, 191, 194, 211, 212, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 338, 349, 350, 357, 371, 374, 376, 377, 378], "enabl": [185, 205, 329, 344, 345, 357, 359, 365, 366, 370, 371], "want": [185, 197, 329, 335, 348, 349, 350, 351, 353, 356, 359, 360, 361, 373, 376, 388], "prunerv2": 185, "target_spars": [185, 204], "pruning_typ": 185, "op_nam": 185, "excluded_op_nam": 185, "start_step": [185, 205], "end_step": [185, 205], "pruning_scop": 185, "pruning_frequ": [185, 205], "min_sparsity_ratio_per_op": [185, 204], "max_sparsity_ratio_per_op": [185, 204, 205], "sparsity_decay_typ": 185, "pruning_op_typ": 185, "reg_typ": [185, 361], "criterion_reduce_typ": 185, "resume_from_pruned_checkpoint": 185, "similiar": 185, "weightpruningconfig": 185, "pruning_config": [185, 197, 198, 211, 345, 379], "snip_momentum": [185, 201], "4x1": [185, 204, 350, 359, 369], "global": [185, 204, 205], "98": [185, 371], "exp": [185, 361, 368, 373], "linear": [185, 204, 328, 342, 361, 364, 367], "ce": [186, 328, 342], "loss_weight_ratio": [186, 342], "layer_map": [186, 342], "distillationcriterionmod": 186, "restor": [187, 343], "sample_length_configur": 187, "max_seq_length": [187, 188], "num_hidden_lay": 187, "layer_config": [187, 216, 217], "length_drop_prob": 187, "length_drop_ratio": 187, "min_length": 187, "hidden": [187, 204, 216, 217, 328, 362], "truncat": [187, 341], "less": [187, 329, 342, 351, 365, 369, 379], "than": [187, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 350, 351, 352, 360, 365, 367, 372, 373, 380], "min": [187, 211, 380], "sample_layer_configur": 187, "layer_dropout": 187, "depend": [187, 194, 339, 341, 346, 347], "paramat": 187, "bound": 187, "kept": [187, 204], "evolust": 188, "evolustionari": 188, "approx_ratio": 188, "12": [188, 340, 346, 347, 350, 357, 363, 367, 370, 371, 373], "l": [188, 328, 342], "384": [188, 328, 351, 357, 371], "approxim": [188, 368], "invers": [188, 368], "store2str": 188, "gene": 188, "mac": 188, "score": [188, 201, 204, 205, 207, 216, 217, 378], "parent": [188, 205, 208], "parmat": 188, "devic": [188, 340, 342, 349, 351, 378], "lower_constraint": 188, "upper_constraint": 188, "eval_metr": 188, "evolutionari": [188, 211], "load_stor": 188, "store_fil": 188, "save_stor": 188, "get_stor": 188, "set_lower_constraint": 188, "setter": [188, 216, 217], "lower": [188, 221, 369, 377, 380], "set_upper_constraint": 188, "upper": [188, 361], "save_popul": 188, "population_fil": 188, "convex_hul": 188, "pareto_fronti": 188, "add_gen": 188, "rai": 188, "packag": [189, 192, 340, 341], "drop_and_restore_util": [189, 190], "mixtur": 190, "auto_distil": [190, 192, 328], "basic_na": [190, 195], "pytorch_prun": 190, "criteria": [190, 202, 377], "reg": [190, 202, 205, 360, 361], "schedul": [190, 197, 202, 205, 207, 211, 328, 333, 358, 386], "get_throughput": [190, 213], "utility_tf": [190, 213], "optimizer_tf": [190, 316], "trainer": [190, 197, 316, 326, 341, 343, 344, 345], "handl": [191, 211, 216, 217, 298, 312, 328, 355, 363, 364], "both": [191, 211, 216, 217, 338, 340, 345, 365, 367, 372, 373, 374, 376, 380], "model_build": [191, 194, 198, 211, 328], "conf_fname_or_obj": [191, 194, 196], "design": [191, 211, 348, 360, 361, 372, 384], "three": [191, 200, 206, 210, 211, 328, 341, 348, 352, 356, 367, 368, 379, 380], "major": [191, 211, 328, 359, 365, 366, 368, 369, 380], "explor": [191, 211, 328, 345], "compress": [191, 211, 299, 328, 342, 345, 359, 363, 365, 369, 372, 380], "discov": [191, 211, 328], "potenti": [191, 211, 314, 328, 339, 366], "measur": [191, 211, 328, 329, 342, 358, 376, 377, 379, 380], "predict": [191, 211, 216, 217, 328, 340, 341, 342], "hardwar": [191, 211, 328, 339, 342, 370, 372], "etc": [191, 211, 328, 342, 350], "select": [191, 207, 211, 216, 217, 328, 361, 373], "best": [191, 194, 211, 328, 338, 343], "res_save_path": [191, 194], "model_cl": [191, 198, 211, 328], "found": [191, 194, 341, 347, 348, 369], "estim": [191, 194, 350, 369], "load_search_result": 191, "init_by_cfg": [191, 194], "create_distil": 191, "optimizedmodel": 193, "from_pretrain": [193, 216, 217, 329, 341, 345, 378], "function": [193, 194, 197, 198, 206, 211, 307, 311, 312, 313, 314, 328, 342, 348, 351, 352, 355, 356, 360, 361, 373, 376, 379, 380], "classmethod": [193, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "instanti": [193, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "intel": [193, 204, 206, 221, 298, 329, 339, 340, 345, 346, 347, 348, 349, 357, 359, 370, 371, 375, 377, 378, 379, 380, 381], "compressor": [193, 198, 204, 206, 299, 329, 341, 377, 380], "repositori": [193, 341], "hug": [193, 299, 341, 353], "face": [193, 299, 300, 338, 341, 353], "hub": [193, 378], "local": [193, 204, 205, 211, 348, 359, 362, 365], "directori": [193, 197, 353, 372], "host": 193, "cache_dir": 193, "download": [193, 216, 217, 381], "cach": [193, 312, 355, 362, 365, 366, 367, 373], "standard": 193, "force_download": 193, "forc": 193, "re": [193, 363], "overrid": [193, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 311, 312, 355], "resume_download": 193, "delet": [193, 379], "incomplet": 193, "attempt": 193, "resum": [193, 211], "revis": 193, "branch": [193, 373], "tag": 193, "commit": [193, 338, 374], "sinc": [193, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 342, 365, 366, 368], "we": [193, 194, 217, 335, 338, 340, 341, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 376, 377, 378, 380, 388], "git": [193, 340, 341, 346, 347, 349], "system": [193, 341, 347], "artifact": 193, "huggingfac": [193, 221, 341, 376, 378], "allow": [193, 329], "q_model": 193, "basicna": 194, "conf_fnam": 194, "obj": [194, 196, 209], "dictionari": [194, 211], "common": [196, 204, 338, 341, 380], "nasbas": 196, "orchestr": [197, 211], "orchestrate_optim": [197, 211], "compon": [197, 211, 360, 375], "experiment": [197, 211, 361], "callabl": [197, 198, 211, 328], "train_func": [197, 198, 211, 328], "saved_result": [197, 341], "aggreg": 197, "run": [197, 205, 209, 211, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 340, 373, 374, 380], "save_model": [197, 220, 341], "token": [197, 216, 217, 221, 329, 340, 341, 343, 345, 353, 378], "json": [197, 221, 340], "pytorch_model": 197, "init_quant": [197, 198, 211, 360], "quant_config": [197, 198, 211, 341, 345, 380], "calib_func": 197, "calib_dataload": [197, 211], "prepar": [197, 198, 216, 217, 307, 340, 350, 352, 355, 360, 361, 369, 380], "invok": [197, 198], "_inc_quant": 197, "calibr": [197, 211, 380], "init_prun": [197, 198, 211], "init_distil": [197, 198, 211], "distillation_config": [197, 198, 211, 342, 345], "teacher_model": [197, 198, 211, 328, 342, 345], "teacher": [197, 198, 328, 342, 343], "tfoptim": [198, 328, 342], "pretrainedmodel": [198, 211, 328], "training_args_tf": 198, "tftrainingargu": 198, "train_dataset": [198, 328, 341, 345], "eval_dataset": [198, 328, 341, 345], "compute_metr": [198, 328, 341], "task_typ": [198, 220], "task_id": [198, 220], "entri": [198, 211, 216, 217, 375], "techniqu": [198, 341, 343, 345, 380], "builtin_eval_func": [198, 211], "dataset": [198, 211, 220, 221, 329, 340, 343, 376, 380], "saved_model": 198, "quantized_model_path": 198, "larger": [198, 204, 211], "model_builder_builtin": [198, 211, 328], "arch_para": [198, 211], "built": [198, 328, 377], "builder": [198, 328], "inform": [198, 201, 204, 205, 206, 207, 208, 298, 301, 302, 304, 305, 309, 315, 316, 326, 338, 339, 341, 342, 349, 350, 357, 361, 364, 371, 372, 373, 379, 380, 381, 385], "autodistillation_config": [198, 211, 328], "build_train_func": 198, "infer_framework_load_model": 199, "autoconfig": [199, 341, 345, 378], "model_class": 199, "task": [199, 217, 220, 328, 340, 341, 342, 343, 354, 361, 367, 370, 378], "model_kwarg": [199, 216, 217, 378], "pruningmod": 200, "current": [200, 201, 204, 205, 206, 208, 210, 350, 360, 361, 362, 364, 365, 367, 372, 373], "prunerconfig": [200, 345], "update_frequ": 200, "prune_typ": [200, 345, 379], "per_tensor": 200, "register_criterion": 201, "registri": [201, 204, 205, 207, 208], "get_criterion": 201, "pruningcriterion": 201, "on_step_begin": [201, 205, 206], "begin": [201, 205, 206, 217, 328, 360, 361], "on_before_optimizer_step": [201, 205, 206, 207], "on_after_optimizer_step": [201, 205, 206, 207], "magnitudecriterion": 201, "magnitud": [201, 379], "criterion_class": 201, "deriv": [201, 204, 205, 207, 208, 312, 366, 367], "determin": [201, 204, 205, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 351, 370], "magtinud": 201, "gradientcriterion": 201, "gradient": 201, "absolut": [201, 376, 379, 380], "snipcriterion": 201, "snip": 201, "product": [201, 341, 357, 367, 371, 377, 380], "singl": [201, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 362, 367], "shot": [201, 208], "network": [201, 204, 328, 342, 348, 349, 350, 352, 364, 379, 380], "sensit": 201, "arxiv": [201, 216], "ab": [201, 216, 380], "1810": 201, "02340": 201, "snipmomentumcriterion": 201, "momentum": 201, "mechan": 201, "much": [201, 353, 362], "preserv": 201, "updat": [201, 204, 205, 208, 209, 340, 341, 346, 347, 349, 366, 379], "register_pattern": 204, "get_pattern": 204, "assertionerror": [204, 205, 209], "basepattern": [204, 207], "unit": [204, 358, 365], "dure": [204, 208, 211, 349, 365, 369, 374, 377, 379, 380], "is_glob": 204, "take": [204, 338, 342, 350, 352, 355, 360, 368, 369], "contrast": 204, "individu": [204, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338], "keep_mask_lay": 204, "whose": [204, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 356], "mask": [204, 205, 208, 216, 217, 314, 343, 360, 361, 363, 365, 368], "invalid_lay": 204, "reach": [204, 208, 339, 341], "minimum": 204, "reduce_tensor": 204, "dim": [204, 216, 217, 349, 355, 359, 365, 369, 373], "reduc": [204, 341, 355, 359, 360, 362, 364, 365, 366, 368, 369, 380], "along": [204, 351, 364, 367, 369], "dimens": [204, 216, 217, 328, 342, 351, 364, 365, 367, 369, 373], "axi": [204, 341, 348, 350, 367, 368], "get_mask": 204, "pre_mask": 204, "layer_nam": 204, "unprun": 204, "abstract": [204, 208, 216, 217], "get_masks_glob": 204, "get_masks_loc": 204, "get_single_mask_per_target_ratio": 204, "exact_sparsity_ratio": 204, "get_block_size_dict": 204, "mainli": [204, 208, 351, 365, 366], "per": [204, 350, 357, 360, 363, 365, 371, 373, 374, 379], "To": [204, 208, 216, 217, 328, 339, 348, 362, 365, 367, 369, 373, 374], "implement": [204, 205, 206, 207, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 333, 341, 348, 351, 352, 356, 358, 359, 360, 362, 364, 365, 366, 367, 368, 370, 373, 386], "get_sparsity_ratio": [204, 206], "return_dict": [204, 216, 217], "zero": [204, 205, 206, 361, 362, 364, 365, 369, 379], "zero_cnt": 204, "total_cnt": 204, "get_pattern_lock_mask": 204, "obtain": [204, 207, 208, 209, 341, 343, 350, 368], "posit": [204, 216, 217, 338, 341, 345, 351, 356, 373, 378], "lock": [204, 379], "check_layer_valid": 204, "block_siz": 204, "get_reduced_masks_from_data": 204, "update_residual_cnt": 204, "yet": 204, "get_sparsity_ratio_each_lay": 204, "sparsity_ratio": 204, "zero_point": 204, "cnt": 204, "sparsityinfo": 204, "adjust_ratio": 204, "key_new_spars": 204, "max_sparsity_ratio": 204, "min_sparsity_ratio": 204, "final_target_sparsity_ratio": 204, "adjust": [204, 329, 355, 380], "examin": 204, "propos": [204, 328, 342, 359], "indic": [204, 216, 217, 314, 356, 360, 361, 367, 369, 373, 376], "adjust_sparsity_ratio": 204, "patternnxm": 204, "nxm": [204, 205, 359], "height": 204, "width": [204, 359, 360, 364, 366, 380], "vertic": 204, "direct": [204, 314], "becaus": [204, 348, 360, 363, 368, 380], "calul": 204, "ration": 204, "block_size_1": 204, "block_size_2": 204, "wise": [204, 358, 373, 387], "block_wis": 204, "get_sparsity_ratio_progress": 204, "reshape_orig_to_pattern": 204, "s1": 204, "s2": 204, "reshape_reduced_to_orig": 204, "orig_shap": 204, "permut": [204, 350, 363, 367, 373], "reduce_scor": 204, "recalcul": 204, "get_mask_per_threshold": 204, "cur_target_sparsity_ratio": 204, "keep_exact_sparsity_ratio": 204, "togeth": [204, 341], "keep_pre_mask": 204, "remain": [204, 314], "unchang": 204, "count_new_masked_cnt": 204, "new_added_mask": 204, "count": [204, 350, 355], "ad": [204, 205, 216, 217, 348, 352, 356, 360, 369, 373, 378], "update_new_added_mask": 204, "cur_mask": 204, "bacaus": 204, "update_progressive_mask": 204, "progressive_step": 204, "progressive_config": 204, "progress": [204, 205, 208], "update_progressive_masks_linear": 204, "update_progressive_masks_scor": 204, "update_progressive_masks_loc": 204, "domain": [204, 333, 358, 386], "update_progressive_masks_glob": 204, "patternninm": 204, "continu": [204, 216, 359, 362, 366, 367], "github": [204, 206, 221, 223, 339, 340, 341, 346, 347, 349, 355, 375, 381], "com": [204, 206, 221, 223, 340, 341, 346, 347, 349, 357, 371, 375, 381], "blob": [204, 221], "master": [204, 206], "md": [204, 221, 350, 353], "get_least_ninm_mask_from_data": 204, "elementwis": 204, "sparisti": 204, "get_ele_mask_per_threshold": 204, "least_ninm_mask": 204, "least_m_in_m_mask": 204, "register_prun": 205, "parse_valid_pruner_typ": 205, "get_prun": 205, "cuurent": 205, "baseprun": 205, "what": [205, 338, 360, 361, 367, 379], "current_sparsity_ratio": 205, "global_step": 205, "trigger": [205, 212, 339], "frequenc": [205, 357, 371, 379], "show": [205, 338, 341, 348, 349, 352, 353, 356, 363, 365, 367], "on_epoch_begin": [205, 206], "mask_weight": 205, "formal": [205, 216], "mask_weights_gener": 205, "local_step": [205, 206], "update_mask": 205, "on_epoch_end": [205, 206], "on_step_end": [205, 206], "on_train_begin": [205, 206], "phase": [205, 206, 342, 379], "on_train_end": [205, 206], "on_before_ev": [205, 206], "on_after_ev": [205, 206], "check_is_pruned_step": 205, "boolean": 205, "basicprun": 205, "arrang": 205, "within": [205, 328, 338, 364], "chang": [205, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 339, 348, 359, 360, 369, 374, 375], "proce": 205, "regul": 205, "term": [205, 207, 328, 342, 364, 367, 369, 375, 376, 377, 380], "set_global_step": 205, "patternlockprun": 205, "fix": [205, 339, 351, 363], "inherit": [205, 208, 329, 342, 348, 355, 378, 379, 380], "progressiveprun": 205, "interpol": 205, "fine": [205, 340, 379, 380], "grain": 205, "improv": [205, 339, 341, 350, 360, 362, 364, 365, 369, 380], "interv": [205, 373], "check_progressive_valid": 205, "check_is_pruned_progressive_step": 205, "update_masks_progress": 205, "print_progressive_spars": 205, "templat": [206, 312, 314], "tree": 206, "huggingface_model": 206, "text": [206, 221, 329, 341, 343, 361, 370, 375, 378], "classif": [206, 216, 217, 328, 342, 343, 378], "eager": [206, 380], "config_file_path": 206, "pruner_info": 206, "update_config": 206, "read": [206, 341, 349], "pass": [206, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 314, 360, 361, 378, 380], "elementwise_over_matmul_gemm_conv": 206, "elementwise_over_al": 206, "blockwise_over_matmul_gemm_conv": 206, "ensur": [206, 365], "register_reg": 207, "regulariz": 207, "get_reg_typ": 207, "get_reg": 207, "basereg": 207, "grouplasso": [207, 379], "coeff": 207, "lasso": [207, 343, 379], "variabl": [207, 314, 352, 355, 373, 374], "reg_term": 207, "coeffient": 207, "register_schedul": 208, "get_schedul": 208, "pruningschedul": 208, "dens": [208, 314, 350, 351, 356, 358, 369, 373, 379], "gradual": 208, "update_sparsity_ratio": 208, "target_ratio": 208, "current_prune_step": 208, "total_prune_step": 208, "init_ratio": 208, "oneshotschedul": 208, "onc": [208, 299, 341, 350, 368], "iterativeschedul": 208, "init_sparsity_ratio": 208, "check_config": 209, "prune_config": 209, "everyth": 209, "reset_none_to_default": 209, "undefin": 209, "item": [209, 329, 341, 345], "update_param": 209, "process_weight_config": 209, "global_config": 209, "local_config": 209, "default_config": 209, "pruners_info": 209, "process_yaml_config": 209, "check_key_valid": 209, "template_config": 209, "user_config": 209, "process_and_check_config": 209, "process_config": 209, "parse_to_prun": 209, "keep": [209, 352], "quantizationmod": 210, "easili": [211, 359, 360], "finetun": [211, 341, 343, 345, 378], "basetrain": 211, "builtin_train_func": 211, "automativ": 211, "low": [211, 341, 345, 359, 366, 368, 377, 380, 389], "achiev": [211, 341, 362, 377], "point": [211, 216, 217, 328, 352, 360, 361, 365, 368, 380], "automat": [211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 340, 350, 351, 352, 360, 373], "pruningconf": 211, "smaller": [211, 342, 365, 379], "config_list": 211, "optimizt": 211, "create_optimizer_builtin": 211, "resume_from_checkpoint": 211, "optuna": 211, "ignore_keys_for_ev": 211, "tor": 211, "checkpoint": [211, 216], "present": [211, 216, 368], "state": [211, 216, 217, 341, 357, 371], "hyperparamet": [211, 328], "ignor": [211, 216, 217, 348], "keyword": 211, "hide": [211, 216, 217], "deprec": [211, 216, 217], "training_step": 211, "inject": [211, 361], "union": [211, 314], "being": [211, 365], "fed": 211, "most": [211, 341, 352, 356, 360, 361, 362, 367, 378], "expect": [211, 216, 217, 338, 339, 369, 377], "label": [211, 216, 217, 221, 340, 374, 378], "training_step_length_adapt": 211, "compute_loss": 211, "return_output": 211, "By": [211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 349], "nas_config": 211, "baseic": 211, "callabel": 211, "auto_distil_evaluation_loop": 211, "prediction_loss_onli": 211, "ignore_kei": 211, "metric_key_prefix": 211, "eval": [211, 328, 376], "trainer_util": 211, "evalloopoutput": 211, "share": [211, 362], "work": [211, 298, 361, 378], "doe": [211, 348, 360, 361, 362, 363, 364, 367, 373], "avoid": [211, 216, 217, 356, 359, 361, 365, 367, 368, 373], "memori": [211, 355, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 377, 380], "huge": 211, "prefix": [211, 373], "export_to_onnx": [211, 341, 344], "tranfer": 211, "paramert": 211, "export_to_fp32_onnx": 211, "save_path": [211, 344], "opset_vers": [211, 344], "14": [211, 344, 357, 363, 370, 371], "do_constant_fold": [211, 344], "verbos": [211, 344], "export": [211, 341, 349, 350, 353, 378, 384], "fold": [211, 373], "export_to_bf16_onnx": 211, "export_to_int8_onnx": 211, "quant_format": [211, 344], "s8s8": [211, 344], "sample_s": 211, "calibrate_method": 211, "minmax": 211, "scale_map": [211, 341], "export_to_jit": 211, "set_dynamic_config": [211, 345], "dynamic_config": [211, 345], "run_evolutionary_search": 211, "nlptrainer": [211, 341, 342, 345, 379, 380], "nlpseq2seqtrain": 211, "seq2seq": [211, 216, 217], "special": [212, 361, 367], "greater_is_bett": [214, 218, 328, 345, 376, 377, 380], "is_rel": [214, 345, 376, 380], "01": [214, 345, 371, 376, 380], "weight_ratio": [214, 218, 376, 377, 380], "modeling_bert_dynam": 215, "modeling_roberta_dynam": 215, "bert": [216, 328, 341, 342, 343, 349, 350, 351, 354, 356, 357, 360, 365, 366, 367, 368], "load_tf_weights_in_bert": 216, "tf_checkpoint_path": 216, "bertembed": [216, 217], "word": [216, 217, 343, 369], "token_typ": 216, "forward": [216, 217, 307, 328, 350, 355, 380], "longtensor": [216, 217], "token_type_id": [216, 217], "position_id": [216, 217], "inputs_emb": [216, 217], "floattensor": [216, 217], "past_key_values_length": [216, 217], "bertselfattent": 216, "position_embedding_typ": [216, 217], "transpose_for_scor": [216, 217], "hidden_st": [216, 217], "attention_mask": [216, 217], "head_mask": [216, 217], "encoder_hidden_st": [216, 217], "encoder_attention_mask": [216, 217], "past_key_valu": [216, 217], "output_attent": [216, 217], "bertselfoutput": 216, "bertattent": 216, "prune_head": [216, 217], "bertintermedi": 216, "intermedi": [216, 328, 348, 353, 356, 369, 380], "bertoutput": 216, "bertlay": 216, "output_length": [216, 217], "always_keep_cls_token": [216, 217], "feed_forward_chunk": [216, 217], "attention_output": [216, 217], "feed": [216, 217, 342, 349], "chunk": 216, "bertencod": 216, "encod": [216, 217, 328, 350, 356], "use_cach": [216, 217], "output_hidden_st": [216, 217], "modeling_output": [216, 217], "basemodeloutputwithpastandcrossattent": [216, 217], "bertpool": 216, "pooler": [216, 217], "bertpredictionheadtransform": 216, "bertlmpredictionhead": 216, "languag": [216, 217, 299, 338, 340, 341, 343, 378], "bertonlymlmhead": 216, "sequence_output": 216, "bertonlynsphead": 216, "pooled_output": 216, "bertpretraininghead": 216, "pretrain": [216, 217, 348], "bertpretrainedmodel": 216, "simpl": [216, 217, 341, 346, 349, 360, 368, 378], "bertforpretrainingoutput": 216, "bertforpretrain": 216, "sum": [216, 329, 342, 350, 366, 368, 369, 373], "prediction_logit": [216, 217], "sequence_length": [216, 217], "vocab_s": [216, 217], "vocabulari": 216, "seq_relationship_logit": 216, "hidden_s": [216, 217, 328], "plu": 216, "num_head": [216, 217], "averag": [216, 329, 341, 350], "bertmodel": 216, "add_pooling_lay": [216, 217], "behav": [216, 217], "well": [216, 217, 344, 380, 381], "decod": [216, 217, 370], "case": [216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 342, 343, 350, 351, 359, 361, 362, 363, 373, 374], "cross": [216, 217], "describ": [216, 217, 313, 340, 362, 364, 367, 373, 376, 377], "1706": [216, 357, 371], "03762": 216, "ashish": [216, 217], "vaswani": [216, 217], "noam": [216, 217], "shazeer": [216, 217], "niki": [216, 217], "parmar": [216, 217], "jakob": [216, 217], "uszkoreit": [216, 217], "llion": [216, 217], "jone": [216, 217], "aidan": [216, 217], "gomez": [216, 217], "lukasz": [216, 217], "kaiser": [216, 217], "illia": [216, 217], "polosukhin": [216, 217], "is_decod": [216, 217], "add_cross_attent": [216, 217], "get_input_embed": [216, 217], "getter": [216, 217], "set_input_embed": [216, 217], "set_length_config": [216, 217], "set_output_attent": [216, 217], "basemodeloutputwithpoolingandcrossattent": [216, 217], "pad": [216, 217, 329, 341, 350, 365, 369, 373], "n_layer": [216, 217], "embed_size_per_head": [216, 217], "precomput": [216, 217], "speed": [216, 217, 348, 352], "up": [216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 348, 350, 352, 361, 373], "decoder_input_id": [216, 217], "those": [216, 217, 367, 379, 380], "past": [216, 217], "instead": [216, 217, 362], "get_output_embed": [216, 217], "set_output_embed": [216, 217], "new_embed": [216, 217], "next_sentence_label": 216, "legaci": [216, 217], "berttoken": 216, "uncas": [216, 328, 341, 343, 345, 353, 378], "hello": [216, 217], "my": [216, 217], "dog": [216, 217], "cute": [216, 217], "return_tensor": [216, 217, 329, 341, 345], "pt": [216, 217, 329, 341, 345, 378], "bertlmheadmodel": 216, "causallmoutputwithcrossattent": [216, 217], "prepare_inputs_for_gener": [216, 217], "bertformaskedlm": 216, "maskedlmoutput": [216, 217], "bertfornextsentencepredict": 216, "sentenc": [216, 217, 221, 329, 340, 341], "nextsentencepredictoroutput": 216, "prompt": 216, "itali": 216, "pizza": 216, "serv": 216, "restaur": 216, "unslic": 216, "next_sent": 216, "sky": 216, "blue": 216, "shorter": 216, "wavelength": 216, "light": 216, "logit": [216, 217, 328, 341, 342, 345, 349], "wa": 216, "bertforsequenceclassif": 216, "sequenceclassifieroutput": [216, 217], "regress": [216, 217, 340], "num_label": [216, 217, 341, 345], "entropi": [216, 217, 328], "bertformultiplechoic": 216, "choic": [216, 217, 343], "multiplechoicemodeloutput": [216, 217], "num_choic": [216, 217], "bertfortokenclassif": 216, "tokenclassifieroutput": [216, 217], "bertforquestionansw": 216, "question": [216, 338, 339, 341, 343, 363], "answer": [216, 217, 338, 343], "start_posit": [216, 217], "end_posit": [216, 217], "questionansweringmodeloutput": [216, 217], "span": [216, 217], "clamp": [216, 217], "taken": [216, 217], "account": [216, 217, 338], "expand_gath": [216, 217], "roberta": [217, 343], "robertaembed": 217, "tini": [217, 343], "tweak": 217, "create_position_ids_from_inputs_emb": 217, "directli": [217, 360, 363, 365, 366], "cannot": [217, 359, 365, 369, 374], "sequenti": [217, 352, 360, 361, 364], "robertaselfattent": 217, "robertaselfoutput": 217, "robertaattent": 217, "attenion": 217, "robertaintermedi": 217, "intermidi": 217, "robertaoutput": 217, "robertalay": 217, "robertaencod": 217, "roberata": 217, "robertapool": 217, "robertapretrainedmodel": 217, "update_keys_to_ignor": 217, "del_keys_to_ignor": 217, "robertamodel": 217, "_": [217, 328, 340, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 365, 366, 367, 368, 372, 373, 376, 377, 378, 379, 380], "robertaforcausallm": 217, "causal": [217, 340], "robertatoken": 217, "robertaconfig": 217, "robertaformaskedlm": 217, "robertalmhead": 217, "featur": [217, 299, 328, 337, 339, 341, 342, 353, 356, 359, 366, 370, 378, 381, 390], "robertaforsequenceclassif": 217, "robertaformultiplechoic": 217, "robertafortokenclassif": 217, "robertaclassificationhead": 217, "robertaforquestionansw": 217, "quanstion": 217, "create_position_ids_from_input_id": 217, "padding_idx": 217, "non": [217, 364, 367, 369, 373, 374], "symbol": 217, "fairseq": 217, "make_posit": 217, "models": [218, 343, 377], "distributed_init": [219, 220], "gloo": 219, "world_siz": 219, "rank": 219, "init_method": 219, "master_addr": 219, "127": [219, 350, 370, 371, 380], "master_port": 219, "12345": 219, "distibut": 219, "environ": [219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 373, 374], "tfdataload": 220, "worker_address": 220, "worker": 220, "address": [220, 299, 338, 360, 366], "treat": [220, 348], "chief": 220, "get_filepath": 220, "base_dirpath": 220, "folder": [220, 347, 348, 349, 350, 351, 353], "keras2savedmodel": 220, "kera": 220, "augment": [221, 223, 384], "extens": [221, 339, 340, 345, 346, 347, 348, 375, 377, 378, 379, 381], "dataaugment": [221, 340], "augmenter_typ": [221, 340], "wai": [221, 341, 350, 351, 352, 356, 359, 361, 365, 367, 370], "enhanc": [221, 345, 364], "textgenerationaug": [221, 340], "keyboardaug": [221, 340], "aug": [221, 299, 340], "input_dataset": [221, 340], "origin_data": 221, "output_path": [221, 340], "join": [221, 340], "result_path": [221, 340], "test1": [221, 340], "cv": [221, 340], "augmenter_argu": [221, 340], "gpt2": [221, 340], "medium": [221, 299, 340, 341, 374], "data_aug": [221, 340], "text_generation_augment": 221, "raw_dataset": [221, 340, 341, 345], "No": [221, 343], "glue": [221, 340, 341], "sst2": [221, 329, 340, 341, 343, 350, 354], "eo": [221, 340], "k": [221, 314, 340, 351, 360, 362, 363, 364, 365, 367, 368, 369, 371, 373], "p": [221, 340, 341], "top_p": 221, "effect": [221, 299, 340, 341, 348, 373], "tend": 221, "toward": [221, 338], "greedi": 221, "repetition_penalti": 221, "primarili": 221, "ctrl": [221, 340, 343], "num_return_sent": 221, "entir": [221, 350, 359, 365, 366, 379], "num_sampl": 221, "condit": [221, 340, 351, 352, 375], "stop_token": 221, "mit_data_augment": 221, "nlpaug": [221, 223, 340], "librari": [221, 223, 333, 339, 360, 361, 365, 386], "help": [221, 223, 340, 341, 356, 360, 372], "machin": [221, 223, 340, 373], "learn": [221, 223, 299, 340, 353, 361, 377, 380], "project": [221, 223, 338, 339, 340], "makcedward": [221, 223], "suffix": 221, "csv": [221, 340], "column_nam": 221, "sentence1": 221, "sentence2": 221, "data_augment": [222, 340], "augmentertyp": 223, "enumer": [223, 314], "get_augmenter_from_typ": 223, "aug_typ": 223, "augment_typ": 223, "testaddclstoken": 226, "methodnam": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "runtest": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "test": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 339, 341, 343, 346, 357, 371, 373, 374], "code": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 345, 346, 348, 351, 361, 362, 363, 364, 365, 370, 373, 375], "itself": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 370], "place": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 361, 366, 379], "fixtur": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "testcas": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "constructor": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 355], "author": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 375], "deconstruct": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "setup": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 340, 341, 346, 348], "teardown": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "respect": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 352, 353], "necessari": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 355, 369, 373], "__init__": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 348], "alwai": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 356, 365, 374], "signatur": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "failureexcept": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "fail": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "deem": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338], "rather": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 352, 360], "longmessag": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "long": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 356], "messag": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "repr": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "failur": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "explicit": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 312, 338, 355, 361], "maxdiff": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "diff": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "difflib": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "look": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 348, 350, 361, 362], "setupclass": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "hook": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "teardownclass": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "testaddembed": 227, "testattentionreshap": [228, 229, 274, 277], "testtorchmodel": [230, 244], "testbinaryop": 231, "testtorchop": [232, 234, 240, 243, 251, 252, 255, 256, 265, 268, 270, 279, 280, 282, 287, 291], "testcastto": 233, "testconvreshap": 235, "testdecoderattnreshap": 236, "testdispatchertuningacc": 237, "testdispatchertuningthroughput": 238, "testdynamicquant": 239, "testembeddingbag": 241, "testexecutionopt": 242, "testgraphdispatch": 245, "testinsertinputouputdata": 246, "testissupportedonnxgraph": 247, "testlastlayershap": 248, "testlayernormwithreducemean": [249, 276, 278], "testlayernormwithtranspos": 250, "testtorchlinear": 253, "testmain": 254, "testmatmulwithbiasrelu": 257, "testmatmulwithbiassigmoid": 258, "testmatmulwithbiastanh": 259, "testmergedembeddingbag": 260, "testonnxutil": 262, "testoperatoradaptor": 263, "testop": 264, "testpaddingsequ": 266, "testpatterndispatch": 267, "testpositionembed": 269, "testprimitivecacheacc": 271, "testprimitivecachethroughput": 272, "testqkvmerg": 273, "testquantonnxexecut": 275, "teststartendlogit": 281, "testtextencod": 283, "testtextencoderbf16": 284, "testtfutil": 285, "testtokentypeembed": 286, "testtransposebatchmatmul": 288, "testunet": 289, "testunetbf16": 290, "testvaedecod": 292, "testvaedecoderbf16": 293, "testweightsharingacc": 294, "testweightsharingdispatchertuningacc": 295, "testweightsharingdispatchertuningthroughput": 296, "testweightsharingthroughput": 297, "issu": [298, 328, 335, 338, 339, 341, 366, 380, 388], "center": 298, "resolv": 298, "guidelin": 298, "innov": [299, 341], "toolkit": [299, 341, 343, 349], "particular": 299, "4th": [299, 341], "xeon": [299, 341, 343, 346, 359, 368, 371, 375, 380], "scalabl": [299, 341, 343, 346, 360], "processor": [299, 341, 343, 346, 357, 371], "sapphir": [299, 341, 346], "rapid": [299, 341, 346], "codenam": 299, "seamless": [299, 341], "experi": [299, 338, 341, 363, 368, 369], "extend": [299, 341, 362], "leverag": [299, 328, 341, 342, 345], "advanc": [299, 328, 338, 341, 358, 370], "softwar": [299, 341, 375], "optim": [299, 326, 328, 329, 341, 342, 343, 344, 345, 346, 349, 352, 353, 354, 360, 361, 362, 364, 376, 377, 378, 379, 380], "uniqu": [299, 341], "awar": [299, 341], "runtim": [299, 314, 341, 370, 373, 380], "releas": [299, 341, 385], "neurip": [299, 341], "2022": [299, 341, 357, 371], "paper": [299, 341, 345], "distilbert": [299, 328, 341, 343, 345, 353, 378], "quala": [299, 341, 343, 345], "minilm": [299, 341, 343, 345], "2021": [299, 341], "pre": [299, 341, 352, 362, 372], "applic": [299, 341], "diffus": [299, 341, 343, 365], "gpt": [299, 340, 341, 343], "j": [299, 341, 343, 347, 348, 349, 358, 364, 369, 370, 373], "6b": [299, 341, 343], "bloom": [299, 341], "176b": [299, 341], "t5": [299, 341, 343], "setfit": [299, 341], "blog": [299, 341], "publish": [299, 338, 341, 375], "mleffici": [299, 341], "effici": [299, 341, 345], "dec": [299, 341], "nov": [299, 341], "coher": [299, 366], "novemb": 299, "alibaba": 299, "deep": [299, 340, 341, 353, 361, 377, 380], "purif": 299, "kernel": [300, 314, 337, 349, 350, 355, 357, 359, 360, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 390], "namespac": [307, 311, 312, 313, 314], "typedef": [307, 314], "std": [307, 311, 312, 313, 314, 358, 360, 361], "unordered_map": [307, 313, 361], "shared_ptr": [307, 311, 312, 355], "kernelhandl": 307, "operatorconfig": [307, 355], "executionopt": [307, 351], "e_ptr": 307, "m_ptr": 307, "inlin": [307, 311, 312, 313, 314, 360], "void": [307, 312, 313, 314, 355, 358, 360, 361, 362], "vector": [307, 311, 312, 313, 314, 355, 358, 360, 361, 362, 364, 367, 369], "adaptattr": 307, "adapttensor": 307, "resetopstatu": 307, "getexecutekernel": 307, "reshape_model": 307, "has_dispatch_table_fil": 307, "set_tuning_mod": 307, "do_tun": 307, "operator_conf": 307, "execute_kernel": 307, "no_tuning_spac": 307, "set_post_op": 307, "post_op": 307, "set_lat": 307, "set_enable_spars": 307, "enable_spars": 307, "kernel_typ": [307, 373, 374], "weight_zero_ratio": 307, "set_weight_shap": 307, "int64_t": [307, 314], "weight_shap": 307, "set_table_id": 307, "table_id": 307, "set_perf_ratio_id": 307, "perf_ratio_id": 307, "append_it_shap": 307, "input_shap": [307, 350, 351, 373], "append_ot_shap": 307, "output_shap": [307, 350], "set_it_shap": 307, "get_it_shap": 307, "get_ot_shap": 307, "set_reshape_tim": 307, "reshape_time_": 307, "get_reshape_tim": 307, "input_attr": 307, "get_attr": 307, "protect": [307, 311, 312], "size_t": [307, 312, 314, 351, 361], "gethash": 307, "name_": 307, "type_": 307, "operator_conf_": [307, 355], "isa": [307, 351, 358, 360, 365, 368, 369, 370], "cpu_isa_": 307, "kernel_handler_": 307, "execute_kernel_": 307, "do_tuning_": 307, "no_tuning_space_": 307, "iter_cnt_": 307, "sparselib_available_": 307, "tune_dense_in_sparse_": 307, "monopoly_kernel_": 307, "dispatch_table_file_exists_": 307, "execution_options_ptr_": 307, "nullptr": [307, 312, 360], "adapt_action_": 307, "model_": 307, "operator_desc": [310, 311, 312, 315, 358], "jd": [311, 312, 313, 314, 361], "engine_t": 311, "cpu_engine_t": 311, "gpu_ocl_engine_t": 311, "engine_kind": [311, 313, 361], "runtime_kind": [311, 313], "virtual": [311, 312, 313, 355, 360, 361], "get_engine_kind": 311, "get_runtime_kind": 311, "impl_list_item_t": [311, 312], "get_implementation_list": 311, "op_desc": [311, 312, 358, 361], "create_kernel": 311, "kernel_t": [311, 312], "stream_t": 311, "create_stream": 311, "create_memory_storag": 311, "memory_storage_t": 311, "engine_kind_": [311, 313], "runtime_kind_": [311, 313], "cpu_inst": 311, "null_inst": 311, "storag": 311, "empty_list": 311, "typenam": [312, 314], "arg_t": 312, "proxy_bas": 312, "hpp": [312, 313, 314, 351, 358, 373], "proxi": [312, 333, 358, 365, 386], "anyth": 312, "similar": [312, 352, 360, 363, 364, 366, 367, 379], "onednn": [312, 355], "struct": [312, 314, 360, 361], "oneapi": [312, 355, 370], "dnnl": [312, 351, 355], "136": 312, "reset_sp": 312, "sp": 312, "get_sp": 312, "create_proxy_object": 312, "result_ref": 312, "privat": [312, 313, 338, 349, 355, 359, 360, 361, 366], "member": [312, 313, 314, 338, 355, 360, 361], "data_handle_": 312, "kernel_desc_proxi": 312, "kernel_desc_t": 312, "real": [312, 351, 366, 367, 370], "attention_desc": 312, "dyn_quantize_mha_desc": 312, "dynamic_quant_desc": 312, "dynamic_quant_matmul_desc": 312, "eltwiseop_desc": 312, "gather_desc": 312, "layernorm_ba_desc": [312, 360], "layernormalized_spmm_desc": 312, "logsoftmax_desc": 312, "mha_dense_desc": 312, "slice_desc": 312, "softmax_desc": 312, "sparse_matmul_desc": [312, 358], "transpose_matmul_desc": 312, "transpose_mha_desc": 312, "kernel_kind": [312, 313, 361], "impl_list_": 312, "kernel_proxi": 312, "dyn_quantize_mha": 312, "dynamic_qu": 312, "dynamic_quant_matmul": 312, "eltwiseop": [312, 360, 361], "layernorm_ba": 312, "layernormalized_spmm": 312, "mha_dens": [312, 373], "slice": [312, 365], "sparse_matmul": [312, 370], "transpose_matmul": 312, "transpose_mha": 312, "kdp": 312, "rt_data": [312, 358], "get_workspace_s": 312, "kd": [312, 328, 342], "sparse_matmul_desc_t": 312, "sparse_matmul_t": 312, "descriptor": [313, 355, 373], "ker_kind": [313, 358, 361], "kernel_prop": [313, 361], "ker_prop": [313, 358, 361], "eng_kind": [313, 358, 361], "tensor_desc": [313, 361], "ts_desc": [313, 358, 361], "postop_attr": [313, 314, 361], "apply_postops_list": [313, 361], "rh": [313, 367], "set_binaryop_list": [313, 360], "binaryop_attr": [313, 314, 360], "binaryop_list": [313, 360], "uint64_t": 313, "impl_nthr": 313, "get_binaryop_list": [313, 360], "ker_kind_": [313, 361], "ker_prop_": [313, 361], "forward_infer": [313, 355, 361], "undef": [313, 314, 360, 361], "impl_nthr_": [313, 361], "ts_descs_": [313, 361], "attrs_": [313, 361], "apply_postops_list_": [313, 361], "binaryop_list_": [313, 360], "enum": [314, 360, 361], "attention_io": 314, "merge_src": 314, "merge_dst": 314, "q_weight": 314, "k_weight": 314, "v_weight": 314, "q_bia": 314, "k_bia": 314, "v_bia": 314, "q_scale": 314, "k_scale": 314, "v_scale": 314, "reshape_input": 314, "q_k_src2": 314, "q_k_scale": 314, "qk_v_output_zero_point": 314, "qk_v_output_scal": 314, "ssd": [314, 361, 373], "eltwiseop_param_t": [314, 361], "element_num": [314, 361], "data_typ": [314, 355, 360, 361, 373], "in_dt": 314, "out_dt": 314, "element_num_each_th": 314, "remain_el": 314, "eltwiseop_data_t": 314, "dst": [314, 355, 360, 361, 363, 364, 365, 368, 369, 373], "gather_param_t": 314, "dt": [314, 360, 361], "dt_size": 314, "extend_mask": 314, "src_axis_s": 314, "dst_axis_s": 314, "src_size": 314, "idx_siz": 314, "outer_s": 314, "inner_s": 314, "binary_ts_s": 314, "gather_data_t": 314, "binaryop_addr": [314, 360], "16": [314, 329, 343, 344, 349, 357, 363, 364, 365, 366, 369, 370, 371, 373, 380], "spec_translnorm_typ": 314, "normal": [314, 360, 368, 387], "layernorm_ba_param_t": 314, "input_dt": [314, 360, 373], "output_dt": [314, 373], "output2_dt": 314, "spec_typ": [314, 373], "row_num": 314, "col_num": 314, "process_col": [314, 360], "direct_process_row": 314, "process_batch_per_k": 314, "ker_per_batch": 314, "batch_num": 314, "thread_elt_offset": [314, 360], "split_output": 314, "layernorm_ba_data_t": 314, "dst2": 314, "process_row": 314, "anonym": 314, "ep": 314, "1e": 314, "matmul_param_t": 314, "dim_t": 314, "m_tile": 314, "n_tile": 314, "matmul_data_t": 314, "src0": [314, 373], "src1": [314, 350, 360, 373], "src2": [314, 360, 373], "matmul_u8_data_t": 314, "uint8_t": [314, 360, 361], "int8_t": 314, "zp": [314, 360], "matmul_io": 314, "io": [314, 355], "dst0": 314, "scale0": 314, "zp0": 314, "matmul_io_max": 314, "mean_var_reduce_param_t": 314, "bm": 314, "bn": 314, "mean_var_reduce_data_t": 314, "mean_in": 314, "var_in": 314, "mean_out": 314, "var_out": 314, "spec_softmax_typ": 314, "lut": [314, 358, 360, 361, 373], "softmax_param_t": 314, "sepc_typ": 314, "scalar_num": 314, "vec_align_len": 314, "vec_tail_len": 314, "vec_num_per_thr": 314, "vec_num_tail_thr": 314, "get_lut_exp_attr": 314, "softmax_data_t": 314, "tmp": [314, 361, 363, 365, 368], "process_vec_num": 314, "bfloat16_t": 314, "amx_params_t": 314, "amx_bf16_params_t": 314, "amx_int8_params_t": 314, "amx_inputs_t": 314, "amx_bf16f32_inputs_t": 314, "amx_bf16bf16_inputs_t": 314, "sparse_schem": 314, "scenario": [314, 340, 365], "spmm_vnni": 314, "sparse_x_dens": 314, "dense_x_spars": 314, "sparse_x_spars": 314, "subfunc_level": [314, 373], "non_kdim": 314, "kdim": 314, "subfunc_level_max": [314, 373], "constexpr": 314, "wei": [314, 365, 373], "todo": [314, 382], "yi": 314, "conflict": 314, "dst_m1": 314, "dst_m2": 314, "work_spac": 314, "vnni_param_t": 314, "spmm_type": 314, "primit": [314, 355], "jit_domain": 314, "has_bia": 314, "append_sum": 314, "output_typ": [314, 350], "tile_w": 314, "sub_func": 314, "im_start": 314, "blocksiz": 314, "indptr": 314, "welford": [314, 366], "dst_t": 314, "vnni_data_t": 314, "ptr_dens": 314, "int32_t": 314, "ptr_bia": 314, "ptr_dst": 314, "ptr_scale": 314, "ptr_dst_m1": 314, "ptr_dst_m2": 314, "num_tilem": 314, "tilem": 314, "tilen": 314, "blocks_per_group": 314, "64": [314, 328, 346, 350, 357, 365, 367, 368, 370, 371, 373], "sizeof": 314, "nnz_group": 314, "nrowptr": 314, "colidx": 314, "group_rowptr": 314, "same_src_dtyp": 314, "src_t": 314, "wgt_t": 314, "bia_t": 314, "avx512_fp32_params_t": 314, "bsc_data_t": 314, "sparse_ptr": 314, "im_end": 314, "in_start": 314, "in_end": 314, "avx512_data_t": 314, "transpose_copy_param": 314, "srcptr": 314, "dstptr": 314, "srcstride": 314, "dststride": 314, "seq_vnni_copy_param": 314, "transpose_mha_step1_param": 314, "mata": 314, "matb": 314, "matc": 314, "matd": 314, "expsum": 314, "cfg": 314, "batchk": [314, 368], "astep": 314, "cstep": 314, "sumstep": 314, "cbatchstep": 314, "scaleab": 314, "transpose_mha_step2_param": 314, "sumptr": 314, "transpose_mha_step3_param": 314, "scalec": 314, "zeropointc": 314, "transpose_mha_io": 314, "src_k": 314, "src_q": 314, "src_v": 314, "tmp2m": 314, "sl_pad": 314, "head_num": [314, 367, 373], "head_siz": [314, 367, 373], "seq_len": [314, 341, 350, 354, 367, 373], "scale_q": 314, "scale_k": 314, "scale_v": 314, "scale_dst": 314, "zp_dst": 314, "transpose_mha_io_max": 314, "arch": 328, "proposit": 328, "promis": [328, 364], "assess": 328, "128": [328, 341, 350, 354, 357, 371, 373, 380], "advisor": 328, "ever": 328, "find": [328, 348, 351, 355, 356, 364, 379], "student": [328, 342, 343], "minim": [328, 342, 369], "done": [328, 342, 351, 365, 373, 380], "z": [328, 342], "distanc": [328, 342], "euclidean": [328, 342], "kullback": [328, 342], "leibler": [328, 342], "diverg": [328, 342], "assign": 328, "cal": 328, "sloss": 328, "mismatch": 328, "512": [328, 350, 364, 366, 369, 371, 373], "desir": [328, 350], "unmatch": 328, "agent": 328, "train_func_builtin": 328, "flash_distil": 328, "eval_func_builtin": 328, "els": [328, 329, 348, 355], "search_loop": 328, "model_arch_para": 328, "oob": 328, "246": 328, "intra_bottleneck_s": 328, "96": [328, 357, 371], "160": [328, 357, 370], "num_attention_head": 328, "intermediate_s": 328, "640": 328, "num_feedforward_network": 328, "mobilebert": [328, 342, 343], "kl": 328, "mse": 328, "best_model_arch": 328, "automodelforpretrain": 328, "higher_is_bett": 328, "10": [328, 340, 341, 346, 350, 357, 363, 371, 373], "42": [328, 357, 371], "500": 328, "25000": 328, "mobilebert_distil": 328, "sgd": 328, "learning_r": 328, "001": 328, "mobilebert_na": 328, "5000": 328, "partial": 328, "pylint": [328, 339], "disabl": [328, 338, 357, 371, 373], "e1101": 328, "makedir": 328, "exist_ok": 328, "120": [328, 370], "240": 328, "256": [328, 350, 371, 373], "eval_loss": [328, 345], "tfautomodelforsequenceclassif": 328, "capabl": [329, 366, 369], "through": [329, 341, 348, 360, 363, 364, 365, 370], "physic": [329, 338, 367], "model_nam": [329, 378], "dataset_nam": 329, "autotoken": [329, 341, 378], "load_dataset": [329, 340, 341], "lambada": 329, "195": 329, "intel_extension_for_transform": [329, 341, 342, 345, 346, 348, 349, 351, 353, 356, 358, 373, 376, 377, 378, 379, 380], "summari": 329, "003": 329, "throughput": [329, 341, 357, 365], "5071": 329, "933": [329, 357], "guid": [332, 341, 342, 348, 361, 363, 385], "formerli": [333, 341, 346, 358, 386], "known": [333, 341, 358, 386], "sparselib": [333, 351, 358, 386], "high": [333, 341, 349, 358, 365, 366, 369, 386], "assembli": [333, 358, 362, 364, 369, 370, 386], "introduc": [335, 339, 359, 360, 361, 362, 363, 365, 367, 368, 369, 380, 388], "who": [335, 338, 361, 388], "might": [335, 352, 388], "profil": [335, 388, 389], "intruct": [335, 388], "met": [335, 388], "request": [335, 341, 388], "interest": 338, "foster": 338, "open": [338, 340, 349, 353], "welcom": [338, 339], "maintain": [338, 339, 341, 352, 381], "particip": [338, 362], "commun": 338, "harass": 338, "free": [338, 360, 373], "everyon": 338, "regardless": 338, "ag": 338, "bodi": [338, 367], "ethnic": 338, "sex": 338, "characterist": 338, "gender": 338, "express": 338, "educ": 338, "socio": 338, "econom": 338, "statu": [338, 377, 380], "nation": 338, "person": 338, "appear": 338, "race": 338, "religion": 338, "sexual": 338, "orient": 338, "contribut": 338, "inclus": 338, "Being": 338, "viewpoint": 338, "gracefulli": 338, "critic": 338, "focus": 338, "empathi": 338, "unaccept": 338, "imageri": 338, "unwelcom": 338, "troll": 338, "insult": 338, "derogatori": 338, "comment": 338, "polit": 338, "attack": 338, "electron": 338, "permiss": 338, "reason": [338, 352, 355, 366], "consid": [338, 351, 359, 361, 363, 374], "inappropri": 338, "profession": 338, "clarifi": 338, "appropri": [338, 348, 360, 368], "fair": 338, "action": 338, "edit": 338, "reject": 338, "wiki": 338, "align": [338, 359, 361, 369], "ban": 338, "temporarili": 338, "perman": 338, "threaten": 338, "offens": 338, "harm": [338, 369], "offici": 338, "mail": 338, "post": [338, 350, 373], "via": [338, 360, 363, 370], "social": 338, "media": 338, "act": [338, 364], "appoint": 338, "onlin": [338, 341, 366], "offlin": [338, 363, 369, 380], "event": 338, "further": [338, 345, 351, 364], "abus": 338, "report": [338, 339, 341], "contact": [338, 381], "complaint": 338, "review": [338, 339], "investig": [338, 369], "circumst": 338, "team": 338, "oblig": 338, "confidenti": 338, "regard": 338, "incid": 338, "polici": [338, 385], "good": [338, 362, 363], "faith": 338, "temporari": [338, 367], "repercuss": 338, "leadership": 338, "faq": 338, "page": [338, 339, 341, 345], "send": 339, "flake8": 339, "autopep8": 339, "clean": 339, "bug": [339, 341], "jira": 339, "ticket": 339, "xxx": [339, 341], "risk": 339, "pr": [339, 373], "reproduc": 339, "submit": [339, 341], "intend": 339, "safe": 339, "collabor": 339, "adher": 339, "tool": [340, 341, 343, 350, 358, 373], "integr": [340, 389], "lab": 340, "pip": [340, 341, 346, 354], "clone": [340, 341, 346, 347, 348], "cd": [340, 341, 346, 347, 348, 354, 358, 370, 373], "submodul": [340, 341, 346, 347, 349], "recurs": [340, 341, 346, 347, 349, 356], "dev": 340, "data_fil": 340, "delimit": [340, 373], "asserttru": 340, "len": [340, 348, 349, 356, 367], "column": [340, 359, 364, 366, 369, 379], "conduct": 340, "deploy": [340, 341, 345, 351], "cuda": 340, "ocraug": 340, "spellingaug": 340, "contextualwordembsforsentenceaug": 340, "xl": 340, "xlnet": [340, 343], "Not": [340, 364], "enough": [340, 365, 380], "rescu": 340, "natur": [340, 341, 343, 366], "sst": [340, 341, 343, 345, 378], "txt": [340, 341, 346, 349, 351, 354, 370], "w": [340, 350, 351, 359, 362, 368], "fw": 340, "clm": [340, 343], "train_fil": 340, "validation_fil": 340, "model_dir": 340, "python3": [340, 347], "run_clm": 340, "do_train": 340, "do_ev": 340, "overwrite_output_dir": 340, "secondli": 340, "training_set": 340, "line": [340, 348, 351, 359, 366, 367, 369, 374], "repetit": 340, "penalti": 340, "platform": [341, 372, 380], "particularli": 341, "gen": [341, 361], "imag": [341, 343, 353, 356, 363, 369], "sentiment": 341, "analysi": 341, "becom": [341, 352, 369], "wide": [341, 342, 361, 362, 380], "art": 341, "popular": 341, "ai": [341, 349], "visit": [341, 357, 371], "skylak": 341, "cascad": [341, 346], "lake": [341, 346], "ic": 341, "cooper": [341, 365], "seri": [341, 360, 363, 373], "hbm": 341, "develop": [341, 355], "easi": [341, 351, 353], "rich": 341, "demonstr": [341, 343, 345, 367, 369], "extrem": [341, 345], "significantli": [341, 366, 368], "cento": [341, 346], "ubuntu": [341, 346, 357, 371], "04": [341, 343, 346, 357, 371], "window": [341, 347], "r": [341, 346, 354, 357, 371, 380], "succeed": 341, "grep": 341, "matrix": [341, 345, 359, 362, 363, 364, 366, 367, 368, 369, 373, 379, 383], "23": [341, 363, 371], "load_metr": 341, "np": 341, "automodelforsequenceclassif": [341, 345], "evalpredict": 341, "english": [341, 343, 345, 378], "lambda": 341, "label2id": [341, 345], "id2label": [341, 345], "neg": [341, 345, 373], "pred": 341, "argmax": [341, 345], "label_id": 341, "q_config": [341, 345, 380], "eval_accuraci": [341, 342, 345, 379], "tmp_trainer": 341, "enable_executor": [341, 344], "neural_engin": [341, 345, 347, 348, 349, 350, 351, 353, 356, 358, 373], "set_log_fil": 341, "load_graph": 341, "dummydataload": 341, "compute_perform": 341, "glog_minloglevel": [341, 349, 354], "input_model": [341, 350, 353, 354], "warm_up": 341, "p50": 341, "50": [341, 370], "p90": 341, "90": [341, 343, 350, 357], "p99": 341, "99": [341, 343, 371], "sec": [341, 357], "workflow": [341, 342, 351, 353, 367], "tutori": [341, 349], "relev": 341, "resourc": [341, 342, 362], "catalog": 341, "brand": [341, 375], "claim": [341, 375], "properti": [341, 375], "trademark": 341, "larg": [342, 343, 356, 357, 359, 362, 365, 366, 367, 373], "signific": 342, "expens": 342, "deploi": [342, 389], "power": [342, 343], "mobil": 342, "shown": [342, 351, 364, 368, 369], "produc": [342, 369], "instruct": [342, 352, 360, 363, 365, 368, 369, 370, 373, 380], "besid": [342, 361], "often": 342, "patient": 342, "compact": 342, "agnost": 342, "summar": [342, 343], "usual": [342, 352, 359, 369, 380], "1x1": [342, 351], "d_conf": [342, 345], "tune_metr": [342, 379], "metric_": 342, "classifi": 342, "distillation_conf": 342, "distilled_model": 342, "intermediatelayersloss": 342, "meanwhil": [343, 359], "posttrainingdynam": [343, 344, 380], "wikitext": 343, "10004": [343, 344], "xsum": 343, "cnn": 343, "cnn_dailymail": 343, "dm": 343, "lambdalab": 343, "sd": 343, "pokemon": 343, "mlm": 343, "plm": 343, "eleutherai": 343, "neo": 343, "125m": 343, "sshleifer": 343, "wip": [343, 363], "star": 343, "ehdwns1516": 343, "uncased_swag": 343, "swag": 343, "squad": 343, "valhalla": 343, "longform": 343, "4096": [343, 371], "squadv1": 343, "lvwerra": 343, "pegasu": 343, "samsum": 343, "textattack": [343, 353], "mrpc": [343, 353, 354], "echarlaix": 343, "acc91": 343, "d37": 343, "hybrid": 343, "elast": 343, "conll03": 343, "conll2003": 343, "small": [343, 351, 365, 367], "translat": 343, "wmt16": 343, "helsinki": 343, "opu": 343, "mt": [343, 372], "en": 343, "ro": 343, "quantizationawaretrain": [343, 344], "maskinun": 343, "distilgpt2": 343, "rocketknight1": 343, "dslim": 343, "ner": 343, "mb": 343, "f1": [343, 376], "gflop": [343, 371, 374], "speedup": 343, "compar": [343, 359, 362, 373, 380], "415": [343, 357], "47": [343, 357, 371], "88": [343, 357, 370, 371], "58": [343, 371], "56": [343, 370, 371], "35": [343, 357, 371], "1x": 343, "la": [343, 362], "minilmv2": 343, "115": 343, "89": [343, 371], "28": [343, 357, 363, 371], "76": [343, 370, 371], "33x": 343, "269": 343, "253": 343, "252": [343, 370], "202": 343, "104": 343, "34": [343, 371], "87": [343, 371], "11": [343, 346, 354, 363, 371], "44": [343, 350, 357, 370, 371], "49": [343, 356, 357, 371], "94x": 343, "84": [343, 371], "85": [343, 357, 371], "21x": 343, "315": 343, "251": [343, 371], "242": [343, 357, 371], "159": [343, 370], "142": [343, 371], "33": [343, 371], "86": [343, 371], "68": [343, 370, 371], "41": [343, 357, 371], "55": [343, 370, 371], "82x": 343, "amount": [343, 362], "torchprofil": 343, "platinum": [343, 357, 371], "8280": 343, "unstructur": [343, 379], "nbsp": [343, 357, 371], "qnli": 343, "qqp": 343, "mnli": 343, "v1": 343, "tinybert_general_4l_312d": 343, "distilroberta": 343, "cola": 343, "krishna2020": 343, "googl": 343, "wikipedia": 343, "prajjwal1": 343, "approch": 343, "pruneofa": 343, "patternlock": [343, 379], "bhadresh": 343, "savani": 343, "emot": 343, "fac": 343, "mini": [343, 350, 354, 357], "gchhablani": 343, "philschmid": 343, "l6": 343, "h384": 343, "moshew": [343, 354], "80": [343, 350, 357, 371], "1x4": [343, 369], "desigh": 344, "32": [344, 349, 357, 363, 364, 366, 367, 368, 369, 370, 371, 373], "bit": [344, 345, 359, 360, 366, 369, 380], "bfloat": 344, "fetch": [344, 359, 362], "flag": 344, "enable_bf16": 344, "bfloat16": 344, "qlinear": [344, 353], "u8s8": 344, "u8u8": 344, "highli": 344, "suggest": [344, 360], "quick": [345, 348], "p_conf": [345, 379], "reduct": [345, 364, 367], "accommod": 345, "budget": 345, "tradeoff": [345, 363], "dynamic_length_config": 345, "aim": [345, 348, 350, 352], "opportun": 345, "hw": 345, "sw": 345, "satisfi": [346, 356, 365], "success": 346, "recommend": [346, 348, 351, 354, 356, 366, 370], "protobuf": [346, 354], "nightli": 346, "conda": [346, 354], "visual": 346, "studio": 346, "compat": 346, "icelak": 346, "futur": [346, 353, 360, 361, 370], "ipex": [346, 380], "13": [346, 357, 363, 371], "linux": 347, "gcc": 347, "cmake": [347, 349, 358, 370, 373], "repo_path": 347, "mkdir": [347, 349, 358, 370, 373], "dpython_execut": 347, "dne_with_sparselib": [347, 373], "neural_engine_bin": 347, "neural_engine_pi": [347, 351], "cpython": 347, "37m": 347, "x86_64": 347, "gnu": 347, "libkernellib": 347, "libneural_engin": 347, "pure": [347, 361], "certain": [348, 356], "simplifi": [348, 352], "attach": [348, 356], "distilbert_bas": 348, "assum": [348, 356, 362], "command": [348, 349, 353, 374], "repo": [348, 373], "instal": [348, 385], "These": [348, 352, 356, 362, 368], "roughli": [348, 365], "divid": [348, 356, 359, 364, 365, 368, 374], "categori": [348, 350], "dst_shape": [348, 349, 355], "father": 348, "keep_dim": 348, "ax": [348, 367], "come": 348, "rewrit": 348, "_attr": 348, "successfulli": [348, 356], "forget": [348, 352, 355], "reinstal": 348, "enter": 348, "you_work_dir": 348, "noth": [348, 356], "wrong": [348, 356], "anoth": [348, 352, 370], "correctli": 348, "distil_bert_bas": 348, "pattern_mapping_config": 348, "div": [348, 352], "even": [348, 359], "delv": 348, "recogn": [348, 389], "put": [348, 352], "namedtupl": 348, "__call__": 348, "retriev": 348, "actual": [348, 349, 366], "equival": [348, 369], "supported_pattern": 348, "influenc": [348, 352], "arbitrari": 348, "pattern_dict": 348, "new_node_nam": 348, "ret_old_nod": 348, "talk": 348, "denomin": 348, "numer": [348, 380], "stabil": 348, "_set_attr": 348, "ln_node_idx": 348, "meet": [348, 363, 365, 369], "finish": [348, 352, 354], "yourself": [348, 356], "multi": [349, 350, 351], "seq": [349, 367], "bert_model": 349, "30522": 349, "1024": [349, 350, 351, 371, 373], "125018112": 349, "slightli": 349, "activ": [349, 353, 354, 359, 363, 364, 365, 368, 373, 380], "throught": 349, "numactl": 349, "bind": 349, "omp_num_thread": 349, "session": 349, "close": 349, "again": [349, 366], "nerual": 349, "cc": 349, "cmakelist": 349, "reus": [349, 365], "engine_integr": 349, "innersourc": 349, "xtransform": 349, "submoudl": 349, "cp": 349, "nlp_executor": 349, "neural_engine_exampl": 349, "ne": 349, "root": 349, "ne_root": 349, "project_source_dir": 349, "link": [349, 355, 379], "lib": 349, "add_execut": 349, "target_include_directori": 349, "boost_inc_dir": 349, "target_link_librari": 349, "cmake_thread_libs_init": 349, "gflag": 349, "analyz": 350, "let": [350, 355, 362, 363], "readm": [350, 353], "run_executor": [350, 354], "model_and_token": [350, 353, 354], "Of": [350, 356, 362], "cours": [350, 356, 362], "proflil": 350, "latanc": 350, "perf": [350, 369, 373, 374], "perfrom": 350, "chrome": 350, "tell": [350, 352, 360, 361], "inst": 350, "pref": 350, "semi": 350, "70": [350, 357], "256x256": [350, 373], "settabl": 350, "256x1024": 350, "1024x256": 350, "gelu_tanh": [350, 355], "add_37": 350, "116": [350, 371], "641": 350, "00": 350, "075": 350, "0375": 350, "comparison": [350, 369], "185": 350, "801": 350, "693": 350, "366": 350, "content": 350, "part1": [350, 355], "modif": 350, "xlsx": 350, "titl": [350, 375], "model_infer": 350, "friendli": [350, 365, 366], "000": 350, "wall": 350, "durat": 350, "17": [350, 357, 363, 371], "138": 350, "iteration4": 350, "726": 350, "phrase": 350, "0m": 350, "perm": [350, 367], "add_284": 350, "028": [350, 371], "044": 350, "reshape_tim": 350, "004m": 350, "forward_tim": 350, "044m": 350, "input_tensor_nam": 350, "matmul_357": 350, "matmul_358": 350, "matmul_346": 350, "input_typ": 350, "f32": [350, 355], "output_tensor_nam": 350, "append_op": 350, "src1_perm": 350, "try": [351, 380], "pictur": [351, 359, 372], "bring": [351, 364, 368, 369], "merg": [351, 356], "off": 351, "model_path": 351, "int8_model_path": 351, "shape_0": 351, "shape_1": 351, "shape_2": 351, "enlarg": 351, "subsequ": [351, 365, 368], "remark": 351, "micro": [351, 359, 364, 369], "oc": [351, 373], "mk": 351, "kn": 351, "nhwc": 351, "nxhxw": 351, "h": 351, "nk": 351, "km": 351, "mmkmb": 351, "mmxmb": 351, "fulfil": 351, "omp": 351, "higher": [351, 367, 369, 373, 380], "unrol": [351, 362, 364], "know": [351, 363], "disk": [351, 353], "dp": 351, "enable_op_tun": 351, "execution_opt": 351, "engine_dispatch_t": 351, "workspac": 351, "tabl": [351, 361, 369], "row": [351, 362, 363, 365, 369, 379], "rest": [351, 352, 356, 367, 369], "hash": [351, 360], "kernel_config": [351, 373], "kernel_nam": [351, 373], "3025159985633461085": 351, "40": [351, 357], "14124194128933833351": 351, "thing": 351, "affect": [351, 365, 368, 374], "simul": [351, 369, 370], "warmup_it": 351, "num_iter": 351, "dispatch_table_file_root": 351, "file_root": 351, "script": [351, 353, 372], "prevent": 351, "imprecis": 351, "purpos": [352, 356, 360, 365], "realiz": 352, "suppli": [352, 356], "recognit": [352, 356], "embeddings_reshap": 352, "said": 352, "thought": 352, "st": 352, "nd": 352, "copi": [352, 367], "greater": [352, 376, 377], "sent": 352, "written": 352, "phenomenon": 352, "Its": 352, "situat": [352, 366], "nod": 352, "leav": [352, 367, 369, 373], "old_node_index": 352, "_get_pattern_info": 352, "_create_out_pattern": 352, "_replace_pattern": 352, "emitt": 353, "netron": 353, "bash": [353, 354], "prepare_model": [353, 354], "sh": [353, 354, 374], "task_nam": [353, 354], "ptq": 353, "ir_path": 353, "focu": [354, 367, 376], "nc_folder": 354, "deepengin": 354, "distilbert_base_uncased_mrpc": 354, "env": 354, "prepare_dataset": 354, "shell": 354, "tokenizer_dir": 354, "data_dir": 354, "geluoper": 355, "destructor": 355, "algorithm_": 355, "eng_": 355, "eltwise_forward": 355, "gelu_p_": 355, "src_m_": 355, "dst_m_": 355, "attrs_map": 355, "becuas": 355, "src_shape": 355, "dst_tensor_ptr": 355, "set_shap": 355, "stride": [355, 359], "src_stride": 355, "getstrid": 355, "dst_stride": 355, "desc": [355, 360, 361], "src_md": 355, "dst_md": 355, "part2": 355, "gelu_algorithm": 355, "gelu_erf": 355, "eltwise_gelu_erf": 355, "eltwise_gelu_tanh": 355, "gelu_d": 355, "prop_kind": 355, "primitive_desc": 355, "gelu_pd": 355, "unrefernc": 355, "manag": 355, "strictli": 355, "alia": 355, "src_data": 355, "dst_data": 355, "mutable_data": 355, "data_ptr": 355, "stream": 355, "set_data_handl": 355, "const_cast": 355, "reinterpret_cast": 355, "memory_args_": 355, "dnnl_arg_src": 355, "dnnl_arg_dst": 355, "unref": 355, "unref_tensor": 355, "especi": [355, 369], "int8_lut_optim": 355, "int8_lut_acc_test": 355, "set_dtyp": 355, "register_operator_class": 355, "rule": 356, "recruit": 356, "ln_pattern": 356, "grow": 356, "concis": 356, "intuit": [356, 365], "choos": 356, "prefer": [356, 367], "longer": 356, "ones": 356, "op_type1": 356, "op_type2": 356, "type1": 356, "type2": 356, "elig": 356, "a_node_name_1": 356, "b_node_name_1": 356, "c_node_name_1": 356, "a_node_name_2": 356, "b_node_name_2": 356, "c_node_name_2": 356, "a_node_name_n": 356, "b_node_name_n": 356, "c_node_name_n": 356, "bert_large_model_path": 356, "layer_0": 356, "layer_1": 356, "layer_2": 356, "afterward": 356, "volatil": 356, "incorrect": 356, "outcom": 356, "Or": 356, "exactli": 356, "screen": 356, "occur": [356, 359, 366], "alreadi": 356, "moment": 356, "varianc": [356, 366], "batchnorm": 356, "mul_1": 356, "mul_2": 356, "add_1": 356, "07": [357, 371], "8375c": [357, 371], "aw": [357, 371], "c6i": [357, 371], "12xlarg": [357, 371], "vari": [357, 371], "factor": [357, 371], "www": [357, 371], "batchsiz": 357, "2652": 357, "36": [357, 371], "513": 357, "lt": [357, 371], "50m": 357, "2181": 357, "43": [357, 371], "628": 357, "1719": 357, "91": [357, 371], "75": [357, 371], "1487": [357, 371], "255": [357, 368, 380], "1220": 357, "39": [357, 371], "143": 357, "1304": 357, "46": [357, 371], "066": 357, "1102": [357, 371], "870": 357, "487": 357, "750": 357, "82": [357, 370, 371], "690": [357, 371], "188": 357, "910": [357, 371], "921": [357, 371], "729": 357, "71": [357, 370, 371], "619": 357, "38": [357, 370, 371], "821": [357, 371], "499": 357, "429": [357, 370], "936": [357, 371], "680": 357, "318": [357, 371], "557": 357, "262": 357, "467": 357, "589": 357, "405": 357, "339": 357, "473": 357, "119": [357, 371], "389": 357, "945": [357, 371], "360": 357, "274": 357, "843": 357, "259": [357, 370, 371], "442": 357, "241": 357, "364": 357, "016": [357, 371], "303": 357, "266": 357, "45": [357, 371], "05": [357, 371], "221": 357, "973": 357, "112": [357, 371], "349": 357, "938": [357, 371], "275": [357, 370], "614": 357, "217": 357, "37": [357, 371], "039": 357, "301": 357, "166": 357, "033": 357, "320": 357, "769": 357, "263": 357, "724": [357, 371], "207": 357, "819": [357, 371], "181": 357, "021": 357, "979": [357, 371], "74": [357, 371], "235": 357, "63": [357, 371], "091": 357, "51": [357, 371], "914": [357, 371], "698": [357, 371], "905": [357, 371], "8972": 357, "076": [357, 371], "20m": 357, "7192": 357, "19": [357, 363, 371], "906": 357, "5482": 357, "509": 357, "4808": 357, "952": 357, "3678": 357, "409": 357, "4750": 357, "975": [357, 371], "3647": 357, "867": 357, "2921": 357, "587": [357, 371], "2576": 357, "18": [357, 363, 371], "768": [357, 371], "2131": [357, 371], "913": [357, 371], "2804": 357, "096": 357, "2263": 357, "037": 357, "1938": 357, "756": [357, 371], "1581": 357, "15": [357, 363, 364, 369, 371], "1409": 357, "015": 357, "2116": 357, "113": 357, "1777": 357, "972": [357, 371], "1474": 357, "392": 357, "1278": 357, "1137": 357, "752": 357, "1594": 357, "124": 357, "1347": [357, 371], "1126": 357, "993": [357, 371], "258": 357, "890": [357, 371], "877": [357, 371], "1319": 357, "1086": 357, "931": [357, 371], "545": 357, "833": 357, "332": [357, 371], "747": [357, 371], "141": 357, "1106": [357, 371], "31": [357, 363, 364, 371], "924": 357, "446": 357, "719": 357, "633": 357, "501": 357, "816": 357, "961": 357, "549": 357, "807": 357, "868": [357, 371], "701": [357, 371], "117": 357, "613": 357, "618": 357, "515": 357, "75384": 357, "989": 357, "1m": 357, "55628": 357, "917": 357, "49120": 357, "957": [357, 371], "41598": 357, "39218": 357, "31211": 357, "788": [357, 371], "28399": 357, "848": 357, "24910": 357, "966": 357, "20505": 357, "18575": 357, "865": 357, "25485": 357, "987": 357, "17468": 357, "16771": 357, "971": [357, 371], "16004": 357, "996": [357, 371], "13381": 357, "894": [357, 371], "13990": 357, "863": [357, 371], "13154": 357, "12535": 357, "12102": 357, "998": 357, "8426": [357, 371], "8736": 357, "8282": 357, "967": 357, "6659": 357, "898": [357, 371], "6477": 357, "6290": 357, "974": [357, 371], "8598": 357, "6449": 357, "935": [357, 371], "6263": [357, 371], "965": [357, 371], "6080": 357, "988": 357, "3684": 357, "817": [357, 371], "6246": 357, "978": 357, "6374": 357, "947": [357, 371], "6026": 357, "3300": [357, 371], "926": 357, "3226": 357, "6221": 357, "958": 357, "6322": 357, "6081": 357, "985": [357, 371], "3368": 357, "3264": 357, "distillbert": 357, "15460": 357, "296": 357, "10m": 357, "13129": 357, "363": 357, "11323": 357, "578": [357, 371], "10072": 357, "599": 357, "8689": 357, "7901": 357, "205": [357, 371], "6737": 357, "562": 357, "5440": 357, "904": [357, 371], "4920": 357, "786": [357, 371], "4460": 357, "053": 357, "5280": 357, "179": 357, "4339": 357, "244": [357, 370], "3634": [357, 371], "928": 357, "3255": 357, "211": [357, 371], "2928": 357, "197": [357, 371], "3681": 357, "527": [357, 371], "2965": [357, 371], "106": [357, 371], "2741": 357, "862": [357, 371], "2351": 357, "2150": 357, "282": 357, "2918": 357, "316": 357, "2505": [357, 371], "602": 357, "2010": [357, 371], "995": 357, "1872": 357, "609": [357, 371], "2409": 357, "983": 357, "1993": 357, "013": 357, "1671": [357, 371], "627": 357, "1484": 357, "131": 357, "1342": [357, 371], "1910": 357, "456": [357, 371], "1659": 357, "687": 357, "1293": 357, "245": [357, 371], "1230": 357, "798": 357, "1091": 357, "261": 357, "1627": 357, "908": 357, "1397": 357, "684": 357, "1130": 357, "1081": 357, "353": 357, "982": [357, 371], "187": [357, 370], "manufactur": [357, 371], "amazon": [357, 371], "ec2": [357, 371], "bio": [357, 371], "1021": [357, 371], "microcod": [357, 371], "0xd000331": [357, 371], "irq": [357, 371], "balanc": [357, 371], "xeonplatinum": 357, "90ghz": [357, 371], "9ghz": [357, 371], "5ghz": [357, 371], "thread": 357, "socket": [357, 371], "numa": [357, 371], "turbo": [357, 371], "frequencygovern": [357, 371], "workdir": 358, "dne_with_test": 358, "ON": [358, 373], "ut": [358, 361], "dne_with_sparselib_onli": [358, 373], "dne_with_sparselib_benchmark": [358, 373], "test_spmm_vnni_kernel": 358, "box": 358, "profl": [358, 370], "op_attr": [358, 360, 361, 367], "spmm_desc": 358, "spmm_kern": 358, "data0": 358, "data1": 358, "data2": 358, "data3": 358, "data4": 358, "vnni": [358, 359, 363, 367, 368, 371, 373, 380, 387], "amx": [358, 365, 368, 373, 387], "residu": 358, "avx512": [358, 359, 363, 380], "mha": [358, 387], "avx512f": [358, 367, 373, 387], "spmm": [359, 367, 373], "deeplearn": 359, "multipli": [359, 365, 369, 380], "adopt": [359, 364, 369], "modern": 359, "spatial": [359, 365], "program": [359, 375], "64byte": 359, "organ": 359, "associ": 359, "access": [359, 364, 365], "b1": 359, "b2": 359, "simd": [359, 360, 364], "evenli": 359, "discontinu": 359, "fulli": [359, 368, 369], "worst": 359, "veri": [359, 361, 362, 365], "miss": [359, 369], "frequent": 359, "destin": [359, 364, 367, 373], "l1": 359, "l2": [359, 365, 373], "perhap": 359, "mxk": [359, 373], "bxm": 359, "xk": 359, "bxkxm": 359, "2d": [359, 373], "respons": [359, 365, 366, 368], "frac": [359, 367], "dl": 360, "changeabl": 360, "operand": [360, 364], "horizont": 360, "overhead": [360, 366, 367, 368, 369], "move": 360, "binaryop_injector": 360, "postop": [360, 361, 373], "quit": 360, "eltwise_injector": [360, 361], "escap": [360, 361], "compute_vector": 360, "expos": [360, 361], "arithmet": 360, "brows": 360, "vpaddb": 360, "vaddp": 360, "unlik": 360, "ptr": [360, 361, 370], "static_addr": 360, "addr": 360, "binaryop_alg": 360, "per_channel_qu": 360, "per_channel_dequ": 360, "op_alg": [360, 361], "op_dt": 360, "alg": 360, "set_scal": 360, "set_zp": 360, "binary_injector_init": 360, "set_mask": 360, "reg64": [360, 361], "zmm": [360, 361, 364, 366, 369], "get_addr": 360, "broadcast": [360, 364, 369, 370, 373], "enable_mask": 360, "vector_comput": [360, 361], "bianryop": 360, "comput_vector": 360, "wrapper": 360, "jit_binary_injector": 360, "addr_typ": 360, "jit_gener": [360, 361], "opmask": [360, 361], "mov": [360, 370], "addr_ptr": 360, "zmm_src1": 360, "regexp": 360, "step1": [360, 361, 368], "binary_injector": 360, "step2": [360, 361, 368], "data_param": 360, "param_": [360, 361], "front": 360, "append_loop_len": 360, "zmm_byte_s": 360, "get_data_s": 360, "offset_exp": 360, "bianryop_attr_list": 360, "append_vec": 360, "binary_add": 360, "eltwis": 361, "tradit": 361, "obvious": [361, 362, 366], "useless": 361, "idea": [361, 369, 379], "xbyak": 361, "binari": [361, 368, 373, 387], "algo": 361, "aplha": 361, "sacl": 361, "postop_alg": 361, "int8_lut": 361, "postop_typ": 361, "mathemat": 361, "satur": 361, "round": [361, 380], "unus": 361, "\u03b1x": 361, "\u03b2": 361, "le": 361, "gt": 361, "eng_kind_": 361, "omp_get_max_thread": 361, "omp_get_num_proc": 361, "eltwise_injector_init": 361, "chian": 361, "escape_reg": 361, "escape_eras": 361, "eras": 361, "prepare_t": 361, "zmm_src": 361, "postop_idx": 361, "reg_idx": 361, "step0": 361, "jit_eltwiseop_t": 361, "assign_reg": 361, "eltwiseop_kd_t": 361, "op_desc_": 361, "params_": 361, "remain_task_mask": 361, "scratch_": 361, "r10": 361, "reg_src": 361, "addr_src": 361, "r15": [361, 370], "addr_dst": 361, "r14": [361, 370], "reg_param": 361, "rdi": [361, 370], "remain_element_num": 361, "rsi": 361, "getidx": 361, "alloc": [361, 362, 365], "rcx": 361, "rdx": 361, "rsp": 361, "step3": [361, 368], "preambl": 361, "load_param": 361, "vmovup": [361, 370], "postambl": 361, "fp32_gelu_attr": 361, "bf16_gelu_attr": 361, "push_back": 361, "gen_cas": 361, "data0_desc": 361, "postop_list": 361, "fp32_gelu": [361, 373], "fp32_exp": 361, "mask_mock1": 361, "reg64_mock1": 361, "zmm_mock1": 361, "fp32_exp_attr": 361, "data1_desc": 361, "bf16_gelu": 361, "bf16_exp": [361, 373], "bf16_exp_attr": 361, "dt1op1": 361, "dt2op2": 361, "hase": 361, "get_true_data": 361, "rf_data": 361, "your_kernel_log": 361, "apply_postop_list": 361, "unit_test_util": 361, "articl": [362, 380], "gpu": 362, "opencl": 362, "snippet": 362, "unintellig": 362, "understand": [362, 365], "__kernel": 362, "naive_gemm": 362, "__global": 362, "globalrow": 362, "get_global_id": 362, "globalcol": 362, "col": [362, 363, 366, 368], "over": [362, 364, 367], "acc": [362, 373, 374], "0f": 362, "mxn": [362, 368, 373], "2xk": 362, "redund": [362, 379], "asub": 362, "bsub": 362, "tile_gemm": 362, "get_local_id": 362, "get_group_id": 362, "__local": 362, "initialis": 362, "accumul": [362, 367, 369], "numtil": 362, "tiledrow": 362, "tiledcol": 362, "synchronis": 362, "barrier": 362, "clk_local_mem_f": 362, "full": [362, 375, 380], "white": 362, "figur": [362, 365, 366, 367, 369, 372], "half": [362, 368], "correspondingli": 362, "increas": 362, "workload": [362, 367], "localmemori": 362, "tight": 362, "ll": 362, "twice": [362, 368], "ping": 362, "pong": 362, "tidm": 362, "tidn": 362, "offsetm": 362, "offset": [362, 366, 367], "offsetn": 362, "areg": 362, "breg": 362, "wm": 362, "wn": 362, "lpta": 362, "tid": 362, "mod2": 362, "div2": 362, "tiledindex": 362, "indexa": 362, "indexb": 362, "veca": 362, "vecb": 362, "tt": 362, "pragma": 362, "tdpbf16p": 363, "16x32": 363, "32x16": 363, "FOR": [363, 364, 369], "TO": 363, "colsb": 363, "byte": [363, 369], "endfor": [363, 364, 369], "write_row_and_zero": 363, "zero_upper_row": 363, "zero_tileconfig_start": 363, "layout": [363, 366, 367, 368], "successor": 363, "1x16": [363, 369], "concaten": [363, 369, 373], "intrins": 363, "tileloadd": 363, "nonzero": 363, "vmovdqu32": 363, "consum": 363, "altern": [363, 369], "lot": 363, "disast": 363, "16x1": [363, 367], "greatli": [363, 368], "impact": 363, "fly": 363, "__m512i": 363, "_mm512_set_epi16": 363, "29": [363, 371], "27": [363, 371], "26": [363, 370, 371], "25": [363, 371, 373], "22": [363, 371], "21": [363, 371], "__m256i": 363, "lo": 363, "_mm256_loadu_epi": 363, "li": 363, "vec": 363, "_mm512_inserti32x8": 363, "_mm512_castsi256_si512": 363, "_mm512_permutexvar_epi16": 363, "_mm512_storeu_epi32": 363, "vfmadd": 364, "vfmadd231p": [364, 370], "degre": 364, "parallel": [364, 365, 366, 369, 373], "conting": 364, "bsc": 364, "variant": 364, "bsr": 364, "openmp": 364, "thu": [364, 380], "relief": 364, "bottleneck": [364, 366], "microkernel": 364, "peripher": 364, "implicit": 364, "technologi": 365, "among": [365, 368], "satisfactori": 365, "inevit": 365, "solv": [365, 366, 380], "facilit": [365, 368], "At": [365, 366, 368], "flexibl": 365, "divis": 365, "tdpbssd": 365, "tile_k": 365, "formula": 365, "max_tile_k": 365, "back": [365, 366, 367, 368], "extra": 365, "hope": 365, "large_wei_threshold": 365, "16xpad_n": 365, "buffer": [365, 366, 368], "tilestor": 365, "pseudo": 365, "tile_m": [365, 373], "16xn": 365, "dp_tile_n": 365, "k_dim_dp": 365, "write_tile_to_tmp_buf": 365, "dequantize_tile_on_tmp_buf": 365, "calculate_scale_on_tmp_buf": 365, "write_back_scal": 365, "quant_tile_n": 365, "quantize_on_tmp_buf": 365, "write_tile_to_dst": 365, "per_channel_dynamic_quant": 365, "s8s8bf16": 365, "desid": 365, "du": 365, "principl": 365, "possibl": 365, "premis": 365, "rate": [365, 366], "therebi": 365, "feel": [365, 373], "benefit": [365, 369, 380], "suitabl": 365, "chart": 365, "naiv": 366, "solut": [366, 369], "gap": 366, "layernrom": 366, "3d": [366, 387], "poor": 366, "fewer": 366, "wast": 366, "inconsist": 366, "scene": 366, "quarter": 366, "depict": 366, "protocol": 366, "bandwidth": [366, 368, 380], "gain": [366, 380], "brought": [366, 380], "majotr": 366, "layternorm": 366, "encapsul": 366, "ba": [366, 370, 373], "discret": 366, "append": [366, 373, 374], "overal": 366, "p2031": [367, 373], "2013": 367, "noperm": [367, 373], "p1302": [367, 373], "p2013": [367, 373], "equat": [367, 380], "dot": [367, 380], "rm": 367, "q": [367, 368], "v": [367, 368], "qk": 367, "textunderscor": 367, "nativ": 367, "sparelib": 367, "axis": 367, "conceptu": 367, "head_nun": 367, "perm2031": 367, "perm2013": 367, "perm1302": 367, "concept": [367, 369], "lh": 367, "float32": [367, 380], "illustr": 367, "inner": 367, "16x16": 367, "drawn": 367, "lighter": 367, "cell": [367, 369], "respectfulli": 367, "vnni_noperm_p2013_p1302": 367, "transpose_4b_8x8": 367, "legend": 367, "explan": 367, "contigu": 367, "ellipsi": 367, "thinner": 367, "border": 367, "bolder": 367, "color": [367, 369], "16x32x16": 367, "lead": [367, 369], "suboptim": 367, "piec": 367, "turn": 367, "abl": [367, 380], "boost": 367, "twofold": 367, "unifi": 367, "roll": 367, "logic": [368, 370], "worth": 368, "clear": 368, "fact": [368, 380], "With": [368, 380], "spr": 368, "latter": 368, "2nd": 368, "clx": 368, "4x16": [368, 369], "launch": 368, "prior": 368, "iteraion": 368, "polynomi": 368, "essenti": 368, "incom": 368, "far": 368, "four": 369, "adjac": 369, "unsign": [369, 373], "sign": [369, 380], "tmp1": 369, "zeroextend16": 369, "signextend16": 369, "tmp2": 369, "tmp3": 369, "tmp4": 369, "dword": [369, 370], "transposit": 369, "discuss": 369, "typic": 369, "sai": 369, "4x4": 369, "pick": 369, "mxkxn": 369, "problem": [369, 373], "densiti": 369, "fma": 369, "bubbl": 369, "16x4": 369, "highlight": 369, "4x": 369, "talent": 369, "smart": 369, "gui": [369, 370], "swizzl": 369, "workaround": 369, "unfortun": 369, "difficulti": 369, "bad": 369, "cost": 369, "2x1": 369, "conclus": 369, "against": 369, "brief": 370, "sparse_lib_verbos": 370, "sparselib_verbos": 370, "nthr": 370, "224": [370, 371], "exec": 370, "shape_256_256_128": 370, "4658": [370, 371], "56982": 370, "itt": 370, "dne_with_sparselib_vtun": 370, "opt": 370, "latest": [370, 381], "manual": 370, "dcmake_vtune_hom": 370, "sparse_lib_vtun": 370, "ssh": 370, "analys": 370, "verifi": 370, "sparse_lib_dump": 370, "xed64": 370, "click": 370, "xdi": 370, "push": 370, "53": [370, 371], "rbx": 370, "rbp": 370, "4154": 370, "r12": 370, "4155": 370, "r13": 370, "4156": 370, "4157": 370, "dataxf": 370, "bd00040000": 370, "ebp": 370, "0x400": 370, "4c8b3f": 370, "qword": 370, "4c8b7708": 370, "0x8": 370, "4c8b6f10": 370, "0x10": 370, "1a": 370, "avx512evex": 370, "62f17d48efc0": 370, "vpxord": 370, "zmm0": 370, "62f15d48efe4": 370, "zmm4": 370, "62513d48efc0": 370, "zmm8": 370, "2c": 370, "62511d48efe4": 370, "zmm12": 370, "62f17548efc9": 370, "zmm1": 370, "62f15548efe": 370, "zmm5": 370, "3e": 370, "62513548efc9": 370, "zmm9": 370, "62511548efe": 370, "zmm13": 370, "4a": 370, "62f16d48efd2": 370, "zmm2": 370, "62f14d48eff6": 370, "zmm6": 370, "62512d48efd2": 370, "zmm10": 370, "5c": 370, "62510d48eff6": 370, "zmm14": 370, "62": [370, 371], "62c17c481006": 370, "zmm16": 370, "zmmword": 370, "62c17c48104e01": 370, "zmm17": 370, "0x40": 370, "6f": 370, "62c17c48105602": 370, "zmm18": 370, "0x80": 370, "62427d48183f": 370, "vbroadcastss": 370, "zmm31": 370, "7c": 370, "vfma": 370, "62927d40b8c7": 370, "62927540b8cf": 370, "62926d40b8d7": 370, "8e": 370, "62427d48187f04": 370, "95": [370, 371], "62927d40b8e7": 370, "9b": 370, "62927540b8ef": 370, "a1": 370, "62926d40b8f7": 370, "a7": 370, "62427d48187f08": 370, "0x20": 370, "ae": 370, "62127d40b8c7": 370, "b4": 370, "62127540b8cf": 370, "62126d40b8d7": 370, "c0": 370, "62427d48187f0c": 370, "0x30": 370, "c7": 370, "62127d40b8e7": 370, "62127540b8ef": 370, "62126d40b8f7": 370, "d9": 370, "62c17c48104603": 370, "0xc0": 370, "e0": 370, "62c17c48104e04": 370, "0x100": 370, "e7": 370, "62c17c48105605": 370, "0x140": 370, "ee": 370, "62427d48187f01": 370, "0x4": 370, "f5": 370, "fb": 370, "101": 370, "107": 370, "62427d48187f05": 370, "0x14": 370, "10e": 370, "114": 370, "11a": 370, "62427d48187f09": 370, "0x24": 370, "12d": 370, "133": 370, "139": 370, "62427d48187f0d": 370, "0x34": 370, "140": 370, "146": 370, "14c": 370, "152": 370, "62c17c48104606": 370, "0x180": 370, "62c17c48104e07": 370, "0x1c0": 370, "62c17c48105608": 370, "0x200": 370, "167": [370, 371], "62427d48187f02": 370, "16e": 370, "174": 370, "17a": 370, "180": 370, "62427d48187f06": 370, "0x18": 370, "18d": 370, "193": 370, "199": 370, "62427d48187f0a": 370, "0x28": 370, "1a0": 370, "1a6": 370, "1ac": 370, "1b2": 370, "62427d48187f0e": 370, "0x38": 370, "1b9": 370, "1bf": 370, "1c5": 370, "1cb": 370, "62c17c48104609": 370, "0x240": 370, "1d2": 370, "62c17c48104e0a": 370, "0x280": 370, "1d9": 370, "62c17c4810560b": 370, "0x2c0": 370, "1e0": 370, "62427d48187f03": 370, "0xc": 370, "1e7": 370, "1ed": 370, "1f3": 370, "1f9": 370, "62427d48187f07": 370, "0x1c": 370, "200": 370, "206": 370, "20c": 370, "212": 370, "62427d48187f0b": 370, "0x2c": 370, "219": [370, 371], "21f": 370, "225": 370, "22b": 370, "62427d48187f0f": 370, "0x3c": 370, "232": [370, 371], "238": 370, "23e": 370, "62d17c48114500": 370, "24b": 370, "62d17c48116503": 370, "62517c48114506": 370, "62517c48116509": 370, "260": 370, "62d17c48114d01": 370, "267": 370, "62d17c48116d04": 370, "26e": 370, "62517c48114d07": 370, "62517c48116d0a": 370, "27c": 370, "62d17c48115502": 370, "283": 370, "62d17c48117505": 370, "28a": 370, "62517c48115508": 370, "291": 370, "62517c4811750b": 370, "298": [370, 371], "pop": 370, "415f": 370, "29a": 370, "415e": 370, "29c": 370, "415d": 370, "29e": 370, "415c": 370, "2a0": 370, "5d": 370, "2a1": 370, "5b": 370, "2a2": 370, "avx": 370, "c5f877": 370, "vzeroupp": 370, "2a5": 370, "xed3": 370, "stat": 370, "cycl": 370, "29220": 370, "236418": 370, "118": 370, "2003": 370, "54": [370, 371], "00348609": 371, "601": 371, "00310676": 371, "675": 371, "00261406": 371, "802": 371, "00216633": 371, "968": 371, "068": 371, "00164658": 371, "1273": 371, "0112255": 371, "284": 371, "00947462": 371, "885": 371, "377": 371, "00764146": 371, "1097": 371, "78": 371, "0058452": 371, "1435": 371, "00407149": 371, "2060": 371, "0127448": 371, "658": 371, "198": 371, "0111132": 371, "754": 371, "835": 371, "00940157": 371, "892": 371, "00760217": 371, "1103": 371, "0054935": 371, "1527": 371, "044202": 371, "759": 371, "0364227": 371, "0292454": 371, "1147": 371, "0223472": 371, "1501": 371, "0149058": 371, "2251": 371, "216338": 371, "620": 371, "408": 371, "179593": 371, "345": 371, "135054": 371, "806": 371, "0946983": 371, "1417": 371, "0609701": 371, "2201": 371, "190508": 371, "704": 371, "526": 371, "159566": 371, "841": 371, "130863": 371, "1025": 371, "103927": 371, "1291": 371, "0739962": 371, "1813": 371, "0250395": 371, "753": 371, "784": 371, "0210726": 371, "895": 371, "682": 371, "0170987": 371, "0130778": 371, "1443": 371, "00923343": 371, "2044": 371, "3072": 371, "112882": 371, "668": 371, "818": 371, "0879386": 371, "858": 371, "525": 371, "068835": 371, "1096": 371, "79": 371, "0487342": 371, "1549": 371, "0317559": 371, "2377": 371, "109308": 371, "679": 371, "0922471": 371, "805": 371, "638": 371, "0759107": 371, "0558945": 371, "1329": 371, "61": 371, "0358752": 371, "2071": 371, "57": 371, "00565044": 371, "742": 371, "297": 371, "00503604": 371, "832": 371, "00447544": 371, "937": 371, "182": 371, "00368479": 371, "1138": 371, "00270954": 371, "1547": 371, "0183481": 371, "386": 371, "0154121": 371, "1088": 371, "0125696": 371, "1334": 371, "00959948": 371, "1747": 371, "72": 371, "00677631": 371, "2475": 371, "0206321": 371, "813": 371, "162": 371, "0184267": 371, "483": 371, "0164699": 371, "1018": 371, "66": 371, "0135801": 371, "1235": 371, "010552": 371, "1589": 371, "0721208": 371, "930": 371, "506": 371, "059613": 371, "1125": 371, "0483781": 371, "1387": 371, "0366748": 371, "1829": 371, "83": 371, "0248571": 371, "2699": 371, "376539": 371, "712": 371, "902": 371, "31929": 371, "840": 371, "727": 371, "261265": 371, "1027": 371, "193579": 371, "1386": 371, "118429": 371, "2266": 371, "309195": 371, "177": 371, "256619": 371, "1046": 371, "213454": 371, "1257": 371, "165192": 371, "1624": 371, "118402": 371, "2267": 371, "0402931": 371, "855": 371, "0341169": 371, "0275282": 371, "1371": 371, "0211298": 371, "1786": 371, "0150693": 371, "218765": 371, "215": 371, "180921": 371, "834": 371, "592": 371, "142778": 371, "1057": 371, "097692": 371, "1545": 371, "0620034": 371, "2435": 371, "174101": 371, "853": 371, "73": 371, "148369": 371, "1001": 371, "123554": 371, "1203": 371, "0923655": 371, "1609": 371, "0591283": 371, "2513": 371, "0074474": 371, "844": 371, "00657187": 371, "00570175": 371, "00483104": 371, "1302": 371, "00367406": 371, "1712": 371, "0247063": 371, "0207462": 371, "1213": 371, "03": 371, "0169214": 371, "0129936": 371, "1936": 371, "0090376": 371, "2784": 371, "0275881": 371, "912": 371, "0240415": 371, "77": 371, "0207876": 371, "1210": 371, "0177873": 371, "1414": 371, "0140129": 371, "1795": 371, "0994565": 371, "1012": 371, "0819725": 371, "1228": 371, "0660571": 371, "1523": 371, "0497077": 371, "2025": 371, "0341912": 371, "2944": 371, "500698": 371, "804": 371, "184": 371, "420619": 371, "287": 371, "337529": 371, "1192": 371, "94": 371, "251221": 371, "1602": 371, "158668": 371, "2537": 371, "412912": 371, "155": 371, "346369": 371, "1162": 371, "2831": 371, "1422": 371, "220585": 371, "1825": 371, "156168": 371, "2578": 371, "0538395": 371, "1051": 371, "0455066": 371, "1244": 371, "036978": 371, "1531": 371, "028483": 371, "1987": 371, "0200457": 371, "2824": 371, "283445": 371, "799": 371, "069": 371, "236101": 371, "959": 371, "302": 371, "188745": 371, "1199": 371, "135532": 371, "0845544": 371, "2678": 371, "227976": 371, "977": 371, "19463": 371, "1145": 371, "161251": 371, "1382": 371, "65": 371, "123585": 371, "1804": 371, "0840322": 371, "2653": 371, "00940534": 371, "891": 371, "00821985": 371, "1020": 371, "00701343": 371, "1196": 371, "08": 371, "00579899": 371, "1446": 371, "00464705": 371, "1805": 371, "0336342": 371, "997": 371, "629": 371, "0276086": 371, "1215": 371, "0224431": 371, "1495": 371, "09": 371, "0170807": 371, "1964": 371, "0117535": 371, "2854": 371, "0358603": 371, "0310083": 371, "1082": 371, "0260486": 371, "1288": 371, "0215163": 371, "1559": 371, "0170105": 371, "1972": 371, "133295": 371, "1006": 371, "92": 371, "111186": 371, "1207": 371, "0881114": 371, "0665519": 371, "2016": 371, "0454416": 371, "2953": 371, "611718": 371, "645": 371, "533329": 371, "430288": 371, "1247": 371, "307141": 371, "198987": 371, "2698": 371, "02": [371, 376], "556249": 371, "163": 371, "462737": 371, "1160": 371, "37537": 371, "1430": 371, "28321": 371, "1895": 371, "203901": 371, "2633": 371, "0716356": 371, "1053": 371, "0603517": 371, "1250": 371, "0490096": 371, "1540": 371, "0375683": 371, "2009": 371, "0267483": 371, "2822": 371, "3572": 371, "845": 371, "437": 371, "299561": 371, "1008": 371, "228752": 371, "1320": 371, "165648": 371, "1823": 371, "105656": 371, "2858": 371, "298907": 371, "994": 371, "529": 371, "255598": 371, "1163": 371, "20824": 371, "1427": 371, "159911": 371, "1858": 371, "111211": 371, "2673": 371, "0152997": 371, "685": 371, "358": 371, "0131446": 371, "797": 371, "0109669": 371, "956": 371, "132": 371, "00921101": 371, "00755406": 371, "1388": 371, "0553082": 371, "758": 371, "351": 371, "0458481": 371, "826": 371, "0367258": 371, "1142": 371, "06": 371, "027535": 371, "018464": 371, "2271": 371, "0597882": 371, "0510217": 371, "822": 371, "062": 371, "0421644": 371, "0333436": 371, "0296385": 371, "1415": 371, "22241": 371, "337": 371, "18324": 371, "915": 371, "145322": 371, "1154": 371, "1083": 371, "0728843": 371, "2301": 371, "11793": 371, "600": 371, "929398": 371, "722": 371, "720963": 371, "823": 371, "510039": 371, "1315": 371, "336519": 371, "1994": 371, "909941": 371, "737": 371, "508": 371, "753487": 371, "644": 371, "606477": 371, "459915": 371, "1459": 371, "303455": 371, "2211": 371, "123429": 371, "764": 371, "586": 371, "103035": 371, "923": 371, "0825026": 371, "1143": 371, "0625579": 371, "1508": 371, "0426942": 371, "2210": 371, "60813": 371, "734": 371, "483053": 371, "781": 371, "462": 371, "357348": 371, "1056": 371, "256715": 371, "1470": 371, "169119": 371, "2232": 371, "503341": 371, "738": 371, "42134": 371, "881": 371, "342843": 371, "255199": 371, "1456": 371, "174091": 371, "2134": 371, "0142667": 371, "0123966": 371, "1015": 371, "0105865": 371, "1188": 371, "00860835": 371, "1461": 371, "00655363": 371, "1919": 371, "0532543": 371, "0447548": 371, "1124": 371, "0348388": 371, "1444": 371, "0266886": 371, "1885": 371, "0177431": 371, "2836": 371, "69": 371, "0549107": 371, "916": 371, "608": 371, "0475549": 371, "1058": 371, "0401657": 371, "1253": 371, "0326952": 371, "1539": 371, "025032": 371, "220947": 371, "911": 371, "178324": 371, "1128": 371, "137361": 371, "1465": 371, "103126": 371, "1952": 371, "0701429": 371, "2870": 371, "06648": 371, "755": 371, "893959": 371, "900": 371, "831": 371, "718893": 371, "1120": 371, "537405": 371, "1498": 371, "280686": 371, "2869": 371, "902588": 371, "730678": 371, "582871": 371, "1381": 371, "444133": 371, "298489": 371, "2697": 371, "581": 371, "0955952": 371, "1184": 371, "078109": 371, "1449": 371, "0596185": 371, "1899": 371, "0414047": 371, "2735": 371, "596568": 371, "497127": 371, "396634": 371, "286973": 371, "1578": 371, "167473": 371, "2704": 371, "472466": 371, "943": 371, "787": 371, "391055": 371, "1140": 371, "319865": 371, "1394": 371, "247491": 371, "1801": 371, "169874": 371, "2624": 371, "93": 371, "0213786": 371, "686": 371, "67": 371, "018228": 371, "0152068": 371, "0120525": 371, "1218": 371, "0103961": 371, "1412": 371, "0771592": 371, "761": 371, "0642402": 371, "074": 371, "0514668": 371, "0387886": 371, "1513": 371, "0256871": 371, "2285": 371, "0836219": 371, "702": 371, "0712915": 371, "664": 371, "0589148": 371, "697": 371, "0484067": 371, "0411331": 371, "311691": 371, "569": 371, "256635": 371, "204973": 371, "153086": 371, "1534": 371, "101206": 371, "2320": 371, "59625": 371, "588": 371, "583": 371, "33246": 371, "705": 371, "03849": 371, "703": 371, "738939": 371, "1271": 371, "480308": 371, "1956": 371, "26056": 371, "745": 371, "324": 371, "04874": 371, "842936": 371, "1114": 371, "59": 371, "635554": 371, "1478": 371, "42145": 371, "2229": 371, "174215": 371, "375": 371, "145836": 371, "116701": 371, "1132": 371, "0876727": 371, "1506": 371, "0595001": 371, "2220": 371, "883258": 371, "598": 371, "333": 371, "711146": 371, "743": 371, "543634": 371, "129": 371, "402406": 371, "1313": 371, "266945": 371, "1979": 371, "70404": 371, "592043": 371, "878": 371, "695": 371, "475444": 371, "1094": 371, "358932": 371, "240739": 371, "2160": 371, "0184384": 371, "909": 371, "907": 371, "0158714": 371, "013504": 371, "1242": 371, "0109927": 371, "1526": 371, "00826017": 371, "2031": 371, "061272": 371, "1095": 371, "0609618": 371, "1100": 371, "0467291": 371, "1436": 371, "0340362": 371, "1971": 371, "0231282": 371, "2901": 371, "0717247": 371, "0616923": 371, "1087": 371, "0521595": 371, "1286": 371, "0423267": 371, "1585": 371, "0321109": 371, "2089": 371, "286461": 371, "242512": 371, "181783": 371, "1476": 371, "139021": 371, "1930": 371, "0870121": 371, "3085": 371, "36322": 371, "652": 371, "08991": 371, "880185": 371, "1219": 371, "694533": 371, "366328": 371, "2931": 371, "15748": 371, "927": 371, "937824": 371, "1144": 371, "745357": 371, "1440": 371, "558061": 371, "1924": 371, "391387": 371, "2743": 371, "157349": 371, "616": 371, "129806": 371, "103083": 371, "1464": 371, "0784417": 371, "053639": 371, "2815": 371, "767569": 371, "874": 371, "641585": 371, "941": 371, "387": 371, "488558": 371, "1236": 371, "355651": 371, "1698": 371, "230945": 371, "2615": 371, "611059": 371, "514108": 371, "1156": 371, "416571": 371, "318094": 371, "1869": 371, "225023": 371, "2642": 371, "0375093": 371, "564": 371, "0317602": 371, "0261888": 371, "1281": 371, "0211151": 371, "0158951": 371, "2110": 371, "141333": 371, "949": 371, "133647": 371, "1004": 371, "0999998": 371, "0710327": 371, "1889": 371, "52": 371, "0429916": 371, "3121": 371, "147474": 371, "125344": 371, "1070": 371, "104294": 371, "0849766": 371, "1579": 371, "0624729": 371, "2148": 371, "701639": 371, "765": 371, "534615": 371, "359791": 371, "1492": 371, "2612": 371, "2055": 371, "183193": 371, "2930": 371, "92067": 371, "735": 371, "271": 371, "4402": 371, "880": 371, "046": 371, "69186": 371, "1269": 371, "17436": 371, "1828": 371, "880179": 371, "2439": 371, "62123": 371, "264": 371, "14905": 371, "999": 371, "64253": 371, "1307": 371, "1413": 371, "1881": 371, "771439": 371, "2783": 371, "369429": 371, "451": 371, "288236": 371, "1047": 371, "209526": 371, "1441": 371, "148115": 371, "2038": 371, "106089": 371, "2846": 371, "53204": 371, "465": 371, "28593": 371, "939": 371, "368": 371, "0852": 371, "1113": 371, "685382": 371, "1762": 371, "408357": 371, "2958": 371, "4521": 371, "13466": 371, "853916": 371, "1392": 371, "642672": 371, "1850": 371, "446442": 371, "2663": 371, "0574189": 371, "876": 371, "0460811": 371, "1092": 371, "0389357": 371, "1292": 371, "031279": 371, "0234498": 371, "2146": 371, "204966": 371, "17364": 371, "1159": 371, "141097": 371, "1426": 371, "105192": 371, "1913": 371, "0677766": 371, "2970": 371, "21269": 371, "946": 371, "573": 371, "191564": 371, "1050": 371, "156368": 371, "1287": 371, "1565": 371, "0933565": 371, "2156": 371, "84983": 371, "789777": 371, "1019": 371, "598168": 371, "1346": 371, "433492": 371, "1857": 371, "269504": 371, "2988": 371, "74845": 371, "859": 371, "348": 371, "96945": 371, "811": 371, "505": 371, "77082": 371, "76407": 371, "1826": 371, "09719": 371, "2935": 371, "73162": 371, "00241": 371, "1072": 371, "39024": 371, "77317": 371, "1816": 371, "19536": 371, "2694": 371, "517278": 371, "875": 371, "708": 371, "382208": 371, "1185": 371, "317837": 371, "1425": 371, "233231": 371, "1942": 371, "152925": 371, "2962": 371, "44309": 371, "741": 371, "62409": 371, "1115": 371, "64963": 371, "1098": 371, "03923": 371, "1743": 371, "625089": 371, "2898": 371, "07006": 371, "861": 371, "632": 371, "64247": 371, "1085": 371, "33386": 371, "1337": 371, "994935": 371, "1792": 371, "68383": 371, "2608": 371, "0713578": 371, "940": 371, "0612457": 371, "0516788": 371, "1298": 371, "0414834": 371, "1617": 371, "0309886": 371, "2165": 371, "282241": 371, "951": 371, "085": 371, "238855": 371, "1123": 371, "193713": 371, "1385": 371, "146781": 371, "81": 371, "0938959": 371, "286141": 371, "122": 371, "257138": 371, "1043": 371, "214208": 371, "167575": 371, "1601": 371, "124072": 371, "2163": 371, "21431": 371, "884": 371, "237": 371, "955251": 371, "775294": 371, "1384": 371, "63282": 371, "1696": 371, "37333": 371, "2876": 371, "87335": 371, "317": 371, "65059": 371, "1176": 371, "94733": 371, "1457": 371, "62241": 371, "1637": 371, "47752": 371, "2906": 371, "75786": 371, "83024": 371, "889": 371, "87429": 371, "1108": 371, "87685": 371, "75328": 371, "2449": 371, "718776": 371, "289": 371, "561317": 371, "1076": 371, "429166": 371, "1407": 371, "317204": 371, "1904": 371, "208555": 371, "2896": 371, "94057": 371, "30458": 371, "1048": 371, "6702": 371, "25799": 371, "1920": 371, "84121": 371, "2871": 371, "34423": 371, "711": 371, "77444": 371, "857": 371, "10049": 371, "52509": 371, "926038": 371, "2568": 371, "00203027": 371, "1032": 371, "00198061": 371, "00179382": 371, "1169": 371, "00163713": 371, "1280": [371, 373], "00171023": 371, "1226": 371, "00395783": 371, "2119": 371, "00340452": 371, "2463": 371, "00308582": 371, "2718": 371, "00292684": 371, "2866": 371, "00217889": 371, "3849": 371, "00437142": 371, "1918": 371, "00418212": 371, "2005": 371, "00344785": 371, "2433": 371, "00291005": 371, "2882": 371, "00293671": 371, "2856": 371, "0120946": 371, "2774": 371, "0103377": 371, "3245": 371, "00850778": 371, "3943": 371, "00659512": 371, "5087": 371, "00484669": 371, "6923": 371, "0524509": 371, "2558": 371, "0428737": 371, "3130": 371, "0323642": 371, "4147": 371, "0231199": 371, "5805": 371, "0152199": 371, "8818": 371, "0451228": 371, "2974": 371, "0373823": 371, "3590": 371, "0302746": 371, "4433": 371, "023182": 371, "5789": 371, "0161696": 371, "8300": 371, "00731429": 371, "2580": 371, "00633179": 371, "2980": 371, "00535855": 371, "3522": 371, "00449335": 371, "4200": 371, "00341811": 371, "5521": 371, "0270028": 371, "2795": 371, "02197": 371, "3436": 371, "0177477": 371, "4253": 371, "0131335": 371, "5748": 371, "00897444": 371, "8412": 371, "0257188": 371, "2889": 371, "0218969": 371, "3393": 371, "0180933": 371, "4107": 371, "013742": 371, "5408": 371, "00992419": 371, "7488": 371, "00289114": 371, "1450": 371, "00245821": 371, "00252331": 371, "1662": 371, "00226557": 371, "1851": 371, "00180316": 371, "2326": 371, "00578904": 371, "00500361": 371, "3353": 371, "0042401": 371, "3956": 371, "00350486": 371, "4786": 371, "00297233": 371, "5644": 371, "00693265": 371, "2420": 371, "00593063": 371, "2828": 371, "00526697": 371, "3185": 371, "00480098": 371, "3494": 371, "00385131": 371, "4356": 371, "0193516": 371, "3467": 371, "0166254": 371, "4036": 371, "0132869": 371, "5050": 371, "0106293": 371, "6313": 371, "00759056": 371, "8841": 371, "0977256": 371, "2746": 371, "0813271": 371, "0656322": 371, "4090": 371, "0476463": 371, "5633": 371, "0295362": 371, "9088": 371, "0736189": 371, "3646": 371, "0603789": 371, "4445": 371, "0489938": 371, "5478": 371, "036992": 371, "7256": 371, "0258802": 371, "10372": 371, "0116589": 371, "3237": 371, "00979113": 371, "3855": 371, "00811779": 371, "4650": 371, "00667871": 371, "5652": 371, "00493861": 371, "7643": 371, "0537768": 371, "2807": 371, "0459135": 371, "3288": 371, "03588": 371, "4208": 371, "0252901": 371, "5970": 371, "0167419": 371, "9018": 371, "0407051": 371, "3651": 371, "0342908": 371, "4334": 371, "028568": 371, "5202": 371, "0218703": 371, "6796": 371, "016186": 371, "9183": 371, "0031551": 371, "0029515": 371, "00265488": 371, "2369": 371, "00243581": 371, "2582": 371, "00223598": 371, "2813": 371, "00745008": 371, "3377": 371, "00656544": 371, "3833": 371, "00542595": 371, "4638": 371, "00425647": 371, "5912": 371, "0034657": 371, "7261": 371, "00835933": 371, "3010": 371, "00741956": 371, "3391": 371, "0065352": 371, "3850": 371, "00555918": 371, "4526": 371, "00488058": 371, "5156": 371, "0257262": 371, "3912": 371, "0217468": 371, "4628": 371, "0176505": 371, "5703": 371, "0137122": 371, "7341": 371, "00980134": 371, "10270": 371, "124749": 371, "3227": 371, "103385": 371, "3894": 371, "0832193": 371, "4838": 371, "0626013": 371, "6432": 371, "0397992": 371, "10117": 371, "101071": 371, "3983": 371, "0825665": 371, "4876": 371, "0668515": 371, "6023": 371, "0487727": 371, "8255": 371, "0354192": 371, "11368": 371, "0147718": 371, "0127799": 371, "4430": 371, "0105324": 371, "5376": 371, "00869796": 371, "6509": 371, "00643591": 371, "8798": 371, "0698868": 371, "3240": 371, "0588583": 371, "3848": 371, "0473412": 371, "4784": 371, "0346142": 371, "6543": 371, "0222947": 371, "10159": 371, "0538146": 371, "4142": 371, "0454583": 371, "4904": 371, "0373579": 371, "5968": 371, "0291396": 371, "7651": 371, "0208901": 371, "10672": 371, "00393589": 371, "00332212": 371, "2525": 371, "00317296": 371, "2643": 371, "00269113": 371, "3117": 371, "00235812": 371, "3557": 371, "009382": 371, "3576": 371, "00828943": 371, "4047": 371, "00672351": 371, "4990": 371, "00514768": 371, "6518": 371, "0040612": 371, "8262": 371, "0107115": 371, "3132": 371, "00920252": 371, "00794258": 371, "4224": 371, "00698123": 371, "4806": 371, "00561026": 371, "5980": 371, "0345669": 371, "3882": 371, "0289719": 371, "4632": 371, "0232584": 371, "5770": 371, "0179766": 371, "7466": 371, "0128144": 371, "10474": 371, "158162": 371, "3394": 371, "132552": 371, "4050": 371, "101844": 371, "5271": 371, "080936": 371, "6633": 371, "0530097": 371, "10127": 371, "135839": 371, "3952": 371, "11116": 371, "4829": 371, "0899513": 371, "0633017": 371, "8481": 371, "0467462": 371, "11484": 371, "0192628": 371, "3919": 371, "0164591": 371, "4586": 371, "0135348": 371, "5578": 371, "0107712": 371, "7009": 371, "00761117": 371, "9919": 371, "0854876": 371, "3532": 371, "0747271": 371, "4041": 371, "0604759": 371, "4993": 371, "0417964": 371, "7225": 371, "0275467": 371, "10962": 371, "0713821": 371, "4164": 371, "0600772": 371, "4948": 371, "0496581": 371, "5986": 371, "0381385": 371, "7794": 371, "027025": 371, "10999": 371, "00502473": 371, "2086": 371, "00451855": 371, "00396819": 371, "00338962": 371, "3093": 371, "00315343": 371, "3325": 371, "0147951": 371, "2834": 371, "0126225": 371, "3322": 371, "010269": 371, "4084": 371, "00785878": 371, "5337": 371, "00570293": 371, "7354": 371, "0161691": 371, "2594": 371, "0144483": 371, "2902": 371, "011705": 371, "3583": 371, "0101487": 371, "4132": 371, "00879332": 371, "4769": 371, "0560297": 371, "2994": 371, "0467998": 371, "3584": 371, "0374397": 371, "4481": 371, "028166": 371, "5956": 371, "0192593": 371, "8711": 371, "277815": 371, "2415": 371, "229837": 371, "2919": 371, "1787": 371, "3755": 371, "126545": 371, "5303": 371, "0835321": 371, "8033": 371, "224925": 371, "2983": 371, "184256": 371, "3642": 371, "146452": 371, "4582": 371, "108899": 371, "6162": 371, "0740655": 371, "9060": 371, "0319455": 371, "2954": 371, "0268136": 371, "3519": 371, "0217062": 371, "4347": 371, "0166666": 371, "5662": 371, "0116466": 371, "8102": 371, "150549": 371, "2507": 371, "119951": 371, "3147": 371, "0893092": 371, "4226": 371, "0637226": 371, "5923": 371, "0427839": 371, "8823": 371, "122421": 371, "3035": 371, "102244": 371, "0822007": 371, "4520": 371, "0622484": 371, "5969": 371, "0429436": 371, "8652": 371, "00481074": 371, "00443796": 371, "2835": 371, "00389863": 371, "00343822": 371, "3659": 371, "00297784": 371, "4225": 371, "0145757": 371, "3453": 371, "012078": 371, "4167": 371, "00896329": 371, "5615": 371, "00727645": 371, "6917": 371, "00548478": 371, "9176": 371, "0150624": 371, "3341": 371, "0132428": 371, "3800": 371, "011443": 371, "4398": 371, "0092883": 371, "5418": 371, "00744553": 371, "6759": 371, "0543977": 371, "3701": 371, "0445693": 371, "4517": 371, "0363329": 371, "5541": 371, "0270492": 371, "7442": 371, "0187415": 371, "10742": 371, "267367": 371, "3011": 371, "223615": 371, "3601": 371, "1797": 371, "134716": 371, "5977": 371, "0692752": 371, "11624": 371, "222661": 371, "3616": 371, "179525": 371, "4485": 371, "139298": 371, "5781": 371, "0958787": 371, "8399": 371, "176292": 371, "4568": 371, "0700283": 371, "0258341": 371, "4383": 371, "0207504": 371, "5457": 371, "0161277": 371, "7021": 371, "0116008": 371, "9761": 371, "148512": 371, "3050": 371, "124238": 371, "0995304": 371, "4551": 371, "0714324": 371, "6341": 371, "044154": 371, "10259": 371, "113174": 371, "3940": 371, "0961662": 371, "4636": 371, "0765841": 371, "5822": 371, "0592912": 371, "7520": 371, "0416614": 371, "10703": 371, "00655654": 371, "2239": 371, "00584761": 371, "2510": 371, "00502113": 371, "2923": 371, "00466269": 371, "3148": 371, "00393276": 371, "3732": 371, "0203923": 371, "2879": 371, "0171018": 371, "3433": 371, "0137027": 371, "4285": 371, "0109527": 371, "5361": 371, "00749636": 371, "7833": 371, "0221319": 371, "0193761": 371, "3030": 371, "0158773": 371, "3698": 371, "0134367": 371, "4370": 371, "0116365": 371, "5046": 371, "0780751": 371, "3008": 371, "0651551": 371, "3604": 371, "0521945": 371, "4500": 371, "0394101": 371, "5959": 371, "0262706": 371, "8940": 371, "398509": 371, "2357": 371, "332153": 371, "259051": 371, "3626": 371, "184412": 371, "5094": 371, "119678": 371, "7850": 371, "313656": 371, "2995": 371, "257989": 371, "3641": 371, "206049": 371, "4559": 371, "152848": 371, "6146": 371, "103125": 371, "9110": 371, "0444861": 371, "2969": 371, "037334": 371, "3538": 371, "0302293": 371, "0231979": 371, "5695": 371, "0158702": 371, "8325": 371, "219777": 371, "2404": 371, "17764": 371, "2975": 371, "135864": 371, "3889": 371, "100424": 371, "5262": 371, "0677547": 371, "7799": 371, "172356": 371, "3018": 371, "144231": 371, "3606": 371, "116019": 371, "4483": 371, "0873881": 371, "5953": 371, "0596004": 371, "8728": 371, "00609695": 371, "2751": 371, "00517637": 371, "3241": 371, "00448956": 371, "3736": 371, "00394876": 371, "4248": 371, "00317463": 371, "5284": 371, "0204832": 371, "3276": 371, "0137691": 371, "4873": 371, "0114194": 371, "5876": 371, "00893304": 371, "7512": 371, "00653312": 371, "10272": 371, "0192409": 371, "3487": 371, "0168348": 371, "3986": 371, "0142343": 371, "4714": 371, "0119455": 371, "5617": 371, "00910648": 371, "7369": 371, "0781101": 371, "0614806": 371, "4366": 371, "046201": 371, "5810": 371, "0357023": 371, "7518": 371, "0222103": 371, "12086": 371, "326917": 371, "3284": 371, "273363": 371, "3927": 371, "220994": 371, "4858": 371, "166153": 371, "6462": 371, "0854403": 371, "12567": 371, "311348": 371, "3448": 371, "243012": 371, "4418": 371, "187933": 371, "5713": 371, "126819": 371, "8466": 371, "0855686": 371, "12548": 371, "0404778": 371, "3730": 371, "0329699": 371, "4579": 371, "0265272": 371, "5692": 371, "0207815": 371, "7265": 371, "0139037": 371, "10860": 371, "183003": 371, "161443": 371, "3741": 371, "129767": 371, "4654": 371, "0893345": 371, "6760": 371, "0610684": 371, "9890": 371, "15525": 371, "3829": 371, "125772": 371, "4727": 371, "101434": 371, "5861": 371, "0765083": 371, "7770": 371, "0537321": 371, "11064": 371, "0104209": 371, "3219": 371, "00908195": 371, "3694": 371, "00781277": 371, "4294": 371, "00651108": 371, "5153": 371, "0051719": 371, "6487": 371, "0321377": 371, "4176": 371, "0269904": 371, "4972": 371, "0220014": 371, "6100": 371, "016901": 371, "7941": 371, "0120042": 371, "11180": 371, "0373802": 371, "0314895": 371, "4262": 371, "0266731": 371, "5031": 371, "0217822": 371, "6161": 371, "0168219": 371, "7978": 371, "176031": 371, "3049": 371, "134442": 371, "3993": 371, "0843776": 371, "6362": 371, "0640577": 371, "8381": 371, "043787": 371, "12261": 371, "697876": 371, "3077": 371, "615338": 371, "3489": 371, "350147": 371, "6133": 371, "267289": 371, "8034": 371, "179695": 371, "11950": 371, "703207": 371, "3053": 371, "561805": 371, "3822": 371, "423052": 371, "5076": 371, "254835": 371, "171434": 371, "12526": 371, "0933483": 371, "3235": 371, "0725632": 371, "4161": 371, "0539197": 371, "5600": 371, "0376119": 371, "8029": 371, "0263137": 371, "11476": 371, "407388": 371, "340939": 371, "3543": 371, "261028": 371, "4627": 371, "151649": 371, "7965": 371, "103379": 371, "11684": 371, "358769": 371, "3314": 371, "283046": 371, "4201": 371, "212152": 371, "5604": 371, "158502": 371, "7502": 371, "107514": 371, "11059": 371, "0148329": 371, "0129116": 371, "3898": 371, "0110537": 371, "4553": 371, "00925277": 371, "5439": 371, "00716987": 371, "7019": 371, "0526609": 371, "3823": 371, "0447282": 371, "4501": 371, "0365834": 371, "5503": 371, "0274874": 371, "7324": 371, "0183895": 371, "10947": 371, "0556653": 371, "0465882": 371, "4321": 371, "039411": 371, "5108": 371, "0318745": 371, "6316": 371, "024706": 371, "8148": 371, "263316": 371, "3058": 371, "198303": 371, "4061": 371, "141966": 371, "5672": 371, "105849": 371, "7608": 371, "0687866": 371, "11707": 371, "793822": 371, "4057": 371, "996979": 371, "3230": 371, "54288": 371, "5933": 371, "412174": 371, "7815": 371, "274441": 371, "11737": 371, "03474": 371, "3113": 371, "832701": 371, "3868": 371, "564787": 371, "421781": 371, "7637": 371, "271587": 371, "11860": 371, "130834": 371, "3462": 371, "0943305": 371, "4802": 371, "0760123": 371, "0580473": 371, "7803": 371, "0395342": 371, "11458": 371, "635729": 371, "2850": 371, "379899": 371, "307908": 371, "5884": 371, "233057": 371, "7774": 371, "157518": 371, "11503": 371, "518276": 371, "3441": 371, "422517": 371, "4221": 371, "323476": 371, "5513": 371, "247251": 371, "7213": 371, "163369": 371, "10917": 371, "0192313": 371, "0168147": 371, "3991": 371, "0143274": 371, "4683": 371, "011932": 371, "5624": 371, "00914975": 371, "7334": 371, "0723144": 371, "3712": 371, "0613803": 371, "4373": 371, "050021": 371, "5366": 371, "0376949": 371, "7121": 371, "0249397": 371, "10763": 371, "0796627": 371, "3369": 371, "0616695": 371, "4352": 371, "0521326": 371, "5149": 371, "042188": 371, "0325741": 371, "8240": 371, "380582": 371, "2821": 371, "24038": 371, "4466": 371, "195271": 371, "5498": 371, "146935": 371, "7307": 371, "0948318": 371, "11322": 371, "08794": 371, "3947": 371, "913626": 371, "4701": 371, "737943": 371, "5820": 371, "558473": 371, "7690": 371, "369466": 371, "51009": 371, "2844": 371, "26974": 371, "3382": 371, "778244": 371, "5518": 371, "589803": 371, "7282": 371, "375284": 371, "11444": 371, "160705": 371, "3758": 371, "135495": 371, "4457": 371, "108718": 371, "5555": 371, "0811198": 371, "7445": 371, "0533513": 371, "11320": 371, "614109": 371, "3934": 371, "518614": 371, "418491": 371, "5772": 371, "31592": 371, "7647": 371, "211893": 371, "11401": 371, "836616": 371, "2842": 371, "699579": 371, "3399": 371, "544194": 371, "379699": 371, "228043": 371, "10428": 371, "un": 372, "u": 372, "hotmap": 372, "jpg": 372, "x16": 373, "environment_vari": 373, "perfom": 373, "introduct": 373, "benchmark_it": 373, "benchmark_no_refresh": 373, "refresh": 373, "kxn": 373, "sparse_ratio": 373, "micro_b": 373, "output_fp32": 373, "has_append_sum": 373, "micro_oc": 373, "sub_func_level": 373, "3d_infer": 373, "automaticlli": 373, "dsparse_lib_use_amx": 373, "amx_bf16_x16": 373, "output_bf16": 373, "lower_bound": 373, "upper_bound": 373, "invalid": 373, "fp32_relu": 373, "src_dt": 373, "dst_dt": 373, "tanspos": 373, "4d": 373, "distinguish": 373, "bs0": 373, "bs1": 373, "scr2": 373, "avx512f_p2031_p2013": 373, "has_binary_add": 373, "tile_n": 373, "coeffici": 373, "vnni_noperm_p2031_p1302": 373, "suuport": 373, "d0xd1x": 373, "d0": 373, "dst_type": 373, "padding_mask": 373, "badd_dim": 373, "blank": 373, "2048": 373, "large_weight_threshold": 373, "add_bia": 373, "channel_num": 373, "quantize_dim_elt_num": 373, "src_data_typ": 373, "newli": 373, "subdir": 373, "benchmark_dir": 373, "bench_": 373, "cpp": 373, "test_": 373, "entranc": 373, "get_true_data_": 373, "check_result_": 373, "gen_case_": 373, "run_bench_": 373, "calc_flop": 373, "get_refresh_data_idx": 373, "benchmark_util": 373, "whitespac": 374, "labl": 374, "run_ci": 374, "overwrit": 374, "it_per_cor": 374, "discard": 374, "new_input_fil": 374, "medium_n": 374, "ci": 374, "apach": 375, "copyright": 375, "subject": 375, "parti": 375, "accompani": 375, "research": 375, "wish": 375, "bibtex": 375, "misc": 375, "hanwen": 375, "haihao": 375, "shen": 375, "dong": 375, "hengyu": 375, "meng": 375, "wenxin": 375, "zhang": 375, "howpublish": 375, "url": 375, "year": 375, "2023": 375, "logo": 375, "atom": 375, "phi": 375, "pentium": 375, "vtune": 375, "corpor": 375, "subsidiari": 375, "toler": 376, "rel": 376, "conjunct": 376, "proport": [376, 377], "vision": 378, "speech": 378, "multimod": 378, "text_classifi": 378, "great": 378, "9998425245285034": 378, "believ": 378, "beauti": 378, "evoc": 378, "ve": 378, "seen": 378, "9998886585235596": 378, "bear": 379, "brain": 379, "damag": 379, "hypothesi": 379, "yann": 379, "lecun": 379, "salient": 379, "anywher": 379, "filter": 379, "lowest": 379, "freez": 379, "hyper": 379, "didn": 379, "pruning_conf": 379, "littl": 380, "degrad": 380, "ex": 380, "affin": 380, "convers": 380, "math": 380, "zeropoint": 380, "asymmetr": 380, "overflow": 380, "fp16": 380, "unseen": 380, "peopl": 380, "emul": 380, "fake": 380, "backward": 380, "mimic": 380, "made": 380, "ultim": 380, "either": 380, "pain": 380, "lossi": 380, "fx": 380, "qat": 380, "site": 381, "assist": 381, "secur": 385, "legal": 385, "injector": 387}, "objects": {"": [[311, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [311, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [307, 1, 1, "_CPPv48executor", "executor"], [307, 2, 1, "_CPPv4N8executor10DispatcherE", "executor::Dispatcher"], [307, 3, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::input"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::output"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptAttrs::stage"], [307, 3, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors"], [307, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::input"], [307, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::output"], [307, 4, 1, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string", "executor::Dispatcher::AdaptTensors::stage"], [307, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [307, 3, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::conf"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::e_ptr"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::m_ptr"], [307, 4, 1, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model", "executor::Dispatcher::Dispatcher::op"], [307, 3, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward"], [307, 4, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::input"], [307, 4, 1, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Forward::output"], [307, 3, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel"], [307, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::has_dispatch_table_file"], [307, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::input"], [307, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::output"], [307, 4, 1, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb", "executor::Dispatcher::GetExecuteKernel::reshape_model"], [307, 3, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash"], [307, 4, 1, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE", "executor::Dispatcher::GetHash::input"], [307, 1, 1, "_CPPv4N8executor10Dispatcher13KernelHandlerE", "executor::Dispatcher::KernelHandler"], [307, 3, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare"], [307, 4, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::input"], [307, 4, 1, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Prepare::output"], [307, 3, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus"], [307, 4, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::input"], [307, 4, 1, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::ResetOpStatus::output"], [307, 3, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape"], [307, 4, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::input"], [307, 4, 1, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE", "executor::Dispatcher::Reshape::output"], [307, 5, 1, "_CPPv4N8executor10Dispatcher13adapt_action_E", "executor::Dispatcher::adapt_action_"], [307, 3, 1, "_CPPv4N8executor10Dispatcher15append_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::append_it_shape"], [307, 4, 1, "_CPPv4N8executor10Dispatcher15append_it_shapeEK6vectorI7int64_tE", "executor::Dispatcher::append_it_shape::input_shape"], [307, 3, 1, "_CPPv4N8executor10Dispatcher15append_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::append_ot_shape"], [307, 4, 1, "_CPPv4N8executor10Dispatcher15append_ot_shapeEK6vectorI7int64_tE", "executor::Dispatcher::append_ot_shape::output_shape"], [307, 5, 1, "_CPPv4N8executor10Dispatcher8cpu_isa_E", "executor::Dispatcher::cpu_isa_"], [307, 5, 1, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E", "executor::Dispatcher::dispatch_table_file_exists_"], [307, 3, 1, "_CPPv4NK8executor10Dispatcher9do_tuningEv", "executor::Dispatcher::do_tuning"], [307, 5, 1, "_CPPv4N8executor10Dispatcher10do_tuning_E", "executor::Dispatcher::do_tuning_"], [307, 3, 1, "_CPPv4N8executor10Dispatcher13enable_sparseEv", "executor::Dispatcher::enable_sparse"], [307, 3, 1, "_CPPv4NK8executor10Dispatcher14execute_kernelEv", "executor::Dispatcher::execute_kernel"], [307, 5, 1, "_CPPv4N8executor10Dispatcher15execute_kernel_E", "executor::Dispatcher::execute_kernel_"], [307, 5, 1, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E", "executor::Dispatcher::execution_options_ptr_"], [307, 3, 1, "_CPPv4N8executor10Dispatcher9get_attrsEv", "executor::Dispatcher::get_attrs"], [307, 3, 1, "_CPPv4N8executor10Dispatcher12get_it_shapeEv", "executor::Dispatcher::get_it_shape"], [307, 3, 1, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv", "executor::Dispatcher::get_ot_shape"], [307, 3, 1, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv", "executor::Dispatcher::get_reshape_time"], [307, 5, 1, "_CPPv4N8executor10Dispatcher9iter_cnt_E", "executor::Dispatcher::iter_cnt_"], [307, 5, 1, "_CPPv4N8executor10Dispatcher15kernel_handler_E", "executor::Dispatcher::kernel_handler_"], [307, 3, 1, "_CPPv4N8executor10Dispatcher11kernel_typeEv", "executor::Dispatcher::kernel_type"], [307, 3, 1, "_CPPv4N8executor10Dispatcher7latencyEv", "executor::Dispatcher::latency"], [307, 5, 1, "_CPPv4N8executor10Dispatcher6model_E", "executor::Dispatcher::model_"], [307, 5, 1, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E", "executor::Dispatcher::monopoly_kernel_"], [307, 3, 1, "_CPPv4NK8executor10Dispatcher4nameEv", "executor::Dispatcher::name"], [307, 5, 1, "_CPPv4N8executor10Dispatcher5name_E", "executor::Dispatcher::name_"], [307, 3, 1, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv", "executor::Dispatcher::no_tuning_space"], [307, 5, 1, "_CPPv4N8executor10Dispatcher16no_tuning_space_E", "executor::Dispatcher::no_tuning_space_"], [307, 3, 1, "_CPPv4NK8executor10Dispatcher13operator_confEv", "executor::Dispatcher::operator_conf"], [307, 5, 1, "_CPPv4N8executor10Dispatcher14operator_conf_E", "executor::Dispatcher::operator_conf_"], [307, 3, 1, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv", "executor::Dispatcher::perf_ratio_id"], [307, 3, 1, "_CPPv4N8executor10Dispatcher7post_opEv", "executor::Dispatcher::post_op"], [307, 3, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs"], [307, 4, 1, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE", "executor::Dispatcher::set_attrs::input_attrs"], [307, 3, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse"], [307, 4, 1, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb", "executor::Dispatcher::set_enable_sparse::enable_sparse"], [307, 3, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tEi", "executor::Dispatcher::set_it_shape"], [307, 4, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tEi", "executor::Dispatcher::set_it_shape::index"], [307, 4, 1, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tEi", "executor::Dispatcher::set_it_shape::output_shape"], [307, 3, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency"], [307, 4, 1, "_CPPv4N8executor10Dispatcher11set_latencyEKf", "executor::Dispatcher::set_latency::latency"], [307, 3, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id"], [307, 4, 1, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string", "executor::Dispatcher::set_perf_ratio_id::perf_ratio_id"], [307, 3, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op"], [307, 4, 1, "_CPPv4N8executor10Dispatcher11set_post_opERK6string", "executor::Dispatcher::set_post_op::post_op"], [307, 3, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time"], [307, 4, 1, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf", "executor::Dispatcher::set_reshape_time::reshape_time_"], [307, 3, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id"], [307, 4, 1, "_CPPv4N8executor10Dispatcher12set_table_idE6string", "executor::Dispatcher::set_table_id::table_id"], [307, 3, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode"], [307, 4, 1, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb", "executor::Dispatcher::set_tuning_mode::mode"], [307, 3, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape"], [307, 4, 1, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE", "executor::Dispatcher::set_weight_shape::weight_shape"], [307, 5, 1, "_CPPv4N8executor10Dispatcher20sparselib_available_E", "executor::Dispatcher::sparselib_available_"], [307, 3, 1, "_CPPv4N8executor10Dispatcher8table_idEv", "executor::Dispatcher::table_id"], [307, 5, 1, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E", "executor::Dispatcher::tune_dense_in_sparse_"], [307, 3, 1, "_CPPv4NK8executor10Dispatcher4typeEv", "executor::Dispatcher::type"], [307, 5, 1, "_CPPv4N8executor10Dispatcher5type_E", "executor::Dispatcher::type_"], [307, 3, 1, "_CPPv4N8executor10Dispatcher12weight_shapeEv", "executor::Dispatcher::weight_shape"], [307, 3, 1, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv", "executor::Dispatcher::weight_zero_ratio"], [307, 3, 1, "_CPPv4N8executor10DispatcherD0Ev", "executor::Dispatcher::~Dispatcher"], [311, 1, 1, "_CPPv42jd", "jd"], [311, 1, 1, "_CPPv42jd", "jd"], [312, 1, 1, "_CPPv42jd", "jd"], [313, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 6, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [314, 6, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [314, 6, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [314, 6, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [314, 6, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [314, 6, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [314, 6, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [314, 6, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [314, 6, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [314, 6, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [314, 6, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [312, 2, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [312, 3, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [312, 3, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [312, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [312, 3, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [312, 2, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [312, 3, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [312, 3, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [312, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [314, 7, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [314, 6, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [314, 6, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [314, 6, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [314, 6, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [314, 6, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [314, 6, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [314, 6, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [314, 6, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [314, 6, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [314, 6, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [314, 6, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [314, 6, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [311, 2, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [311, 3, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [311, 3, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [311, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [311, 5, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [311, 3, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [311, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [311, 3, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [312, 2, 1, "_CPPv4N2jd16dyn_quantize_mhaE", "jd::dyn_quantize_mha"], [312, 3, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha"], [312, 3, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv", "jd::dyn_quantize_mha::dyn_quantize_mha"], [312, 4, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha::kdp"], [312, 3, 1, "_CPPv4N2jd16dyn_quantize_mhaD0Ev", "jd::dyn_quantize_mha::~dyn_quantize_mha"], [312, 2, 1, "_CPPv4N2jd21dyn_quantize_mha_descE", "jd::dyn_quantize_mha_desc"], [312, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [312, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [312, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev", "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc"], [312, 2, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [312, 3, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [312, 3, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [312, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [312, 3, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [312, 2, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [312, 3, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [312, 3, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [312, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [312, 2, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [312, 3, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [312, 3, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [312, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [312, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [312, 2, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [312, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [312, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [312, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [312, 2, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [312, 3, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [312, 3, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [312, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [312, 3, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [312, 2, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [312, 3, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [312, 3, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [312, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [311, 2, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [311, 3, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [311, 3, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [311, 3, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [311, 5, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [311, 3, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [311, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [311, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [311, 3, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [311, 3, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [311, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [311, 3, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [311, 5, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [311, 3, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [312, 2, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [312, 3, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [312, 3, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [312, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [312, 3, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [312, 2, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [312, 3, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [312, 3, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [312, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [312, 2, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [312, 3, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [312, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [312, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [312, 5, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [312, 3, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [312, 3, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [312, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [312, 3, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [312, 3, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [312, 2, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [312, 3, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [312, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [312, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [312, 3, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [312, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [312, 3, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [312, 3, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [312, 3, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [312, 3, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [312, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [312, 3, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [312, 2, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [312, 3, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [312, 3, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [312, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [312, 3, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [312, 2, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [312, 3, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [312, 3, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [312, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [312, 2, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [312, 3, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [312, 3, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [312, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [312, 3, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [312, 2, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [312, 3, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [312, 3, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [312, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [312, 2, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [312, 3, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [312, 3, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [312, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [312, 3, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [312, 2, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [312, 3, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [312, 3, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [312, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [312, 2, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [312, 3, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [312, 3, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [312, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [312, 3, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [312, 2, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [312, 3, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [312, 3, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [312, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [313, 2, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [313, 3, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [313, 5, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [313, 3, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [313, 5, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [313, 5, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [313, 3, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [313, 5, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [313, 3, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [313, 3, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [313, 5, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [313, 5, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [313, 5, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [313, 3, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [313, 3, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [313, 3, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [313, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [313, 3, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [313, 3, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [313, 3, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [313, 3, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [313, 5, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [313, 3, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [313, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [313, 3, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [313, 5, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [313, 3, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [312, 2, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [312, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [312, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [312, 3, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [312, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [312, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [312, 5, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [312, 3, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [312, 3, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [312, 3, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [312, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [312, 3, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [312, 2, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [312, 3, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [312, 3, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [312, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [312, 3, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [312, 2, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [312, 3, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [312, 3, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [312, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [312, 2, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [312, 3, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [312, 3, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [312, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [312, 3, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [312, 2, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [312, 3, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [312, 3, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [312, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [312, 2, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [312, 3, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [312, 3, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [312, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [312, 3, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [312, 2, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [312, 3, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [312, 3, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [312, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 5, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [314, 5, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [314, 5, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [314, 5, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [314, 5, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [314, 5, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [314, 5, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [314, 5, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [314, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [314, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [314, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [314, 2, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [314, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [314, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [314, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [314, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [314, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [314, 2, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [314, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [314, 5, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [314, 2, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [314, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [314, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [314, 5, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [314, 2, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [314, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [314, 2, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [314, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [314, 5, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [314, 2, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [314, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [314, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [314, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [314, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [314, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [314, 2, 1, "_CPPv4N2jd3ssd13gather_data_tE", "jd::ssd::gather_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE", "jd::ssd::gather_data_t::binaryop_addrs"], [314, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3dstE", "jd::ssd::gather_data_t::dst"], [314, 3, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t"], [314, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::a"], [314, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::b"], [314, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::c"], [314, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3idxE", "jd::ssd::gather_data_t::idx"], [314, 5, 1, "_CPPv4N2jd3ssd13gather_data_t3srcE", "jd::ssd::gather_data_t::src"], [314, 2, 1, "_CPPv4N2jd3ssd14gather_param_tE", "jd::ssd::gather_param_t"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE", "jd::ssd::gather_param_t::binary_ts_sizes"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE", "jd::ssd::gather_param_t::binaryop_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE", "jd::ssd::gather_param_t::dst_axis_size"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t2dtE", "jd::ssd::gather_param_t::dt"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE", "jd::ssd::gather_param_t::dt_size"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE", "jd::ssd::gather_param_t::extend_mask"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE", "jd::ssd::gather_param_t::idx_size"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE", "jd::ssd::gather_param_t::inner_size"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t5loopsE", "jd::ssd::gather_param_t::loops"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t4maskE", "jd::ssd::gather_param_t::mask"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE", "jd::ssd::gather_param_t::outer_size"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t6remainE", "jd::ssd::gather_param_t::remain"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE", "jd::ssd::gather_param_t::src_axis_size"], [314, 5, 1, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE", "jd::ssd::gather_param_t::src_size"], [314, 2, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [314, 5, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [314, 2, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [314, 5, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [314, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [314, 2, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [314, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [314, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [314, 5, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [314, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [314, 7, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [314, 2, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [314, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [314, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [314, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [314, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [314, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [314, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [314, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [314, 5, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [314, 2, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [314, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [314, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [314, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [314, 5, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [314, 2, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [314, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [314, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [314, 5, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [314, 2, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [314, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [314, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [314, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [314, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [314, 5, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [314, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [314, 2, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [314, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [314, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [314, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [314, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [314, 5, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [314, 2, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [314, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [314, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [314, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [314, 5, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [314, 2, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [314, 5, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [314, 7, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [314, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [314, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [314, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [314, 6, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [314, 7, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [314, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [314, 7, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [314, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [314, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [314, 7, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [314, 6, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [314, 6, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [314, 6, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [314, 6, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [314, 2, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [314, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [314, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [314, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [314, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [314, 5, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [314, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [314, 7, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [314, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [314, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [314, 2, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [314, 5, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [314, 2, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [314, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [314, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [314, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [314, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [314, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [314, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [314, 5, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [314, 2, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [314, 5, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [312, 2, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [312, 3, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [312, 3, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [312, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [312, 3, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [312, 2, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [312, 3, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [312, 3, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [312, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [312, 2, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [312, 3, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [312, 3, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [312, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [312, 3, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [312, 2, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [312, 3, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [312, 3, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [312, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [312, 3, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [183, 9, 0, "-", "intel_extension_for_transformers"], [225, 9, 0, "-", "sparsity_all"], [226, 9, 0, "-", "test_add_cls_token"], [227, 9, 0, "-", "test_add_embeddings"], [228, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [229, 9, 0, "-", "test_attention_reshape"], [230, 9, 0, "-", "test_bert_mini_fp32"], [231, 9, 0, "-", "test_binary_op"], [232, 9, 0, "-", "test_binaryop"], [233, 9, 0, "-", "test_cast_to"], [234, 9, 0, "-", "test_concat"], [235, 9, 0, "-", "test_conv_reshape"], [236, 9, 0, "-", "test_decoder_attn_reshape"], [237, 9, 0, "-", "test_dispatcher_tuning_acc"], [238, 9, 0, "-", "test_dispatcher_tuning_throughput"], [239, 9, 0, "-", "test_dynamic_quantization"], [240, 9, 0, "-", "test_embedding"], [241, 9, 0, "-", "test_embeddingbag"], [242, 9, 0, "-", "test_execution_options"], [243, 9, 0, "-", "test_gelu"], [244, 9, 0, "-", "test_gpt_int8"], [245, 9, 0, "-", "test_graph_dispatch"], [246, 9, 0, "-", "test_insert_input_output_data"], [247, 9, 0, "-", "test_is_supported_onnx_graph"], [248, 9, 0, "-", "test_last_layer_shape"], [249, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [250, 9, 0, "-", "test_layer_norm_with_transpose"], [251, 9, 0, "-", "test_layernorm"], [252, 9, 0, "-", "test_linear"], [253, 9, 0, "-", "test_linear_int8"], [254, 9, 0, "-", "test_main"], [255, 9, 0, "-", "test_matmul"], [256, 9, 0, "-", "test_matmul_int8"], [257, 9, 0, "-", "test_matmul_with_bias_relu"], [258, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [259, 9, 0, "-", "test_matmul_with_bias_tanh"], [260, 9, 0, "-", "test_merged_embeddingbag"], [261, 9, 0, "-", "test_model"], [262, 9, 0, "-", "test_onnx_utils"], [263, 9, 0, "-", "test_operator_adaptor"], [264, 9, 0, "-", "test_ops"], [265, 9, 0, "-", "test_padding_seq"], [266, 9, 0, "-", "test_padding_sequence"], [267, 9, 0, "-", "test_pattern_dispatch"], [268, 9, 0, "-", "test_permute"], [269, 9, 0, "-", "test_position_embeddings"], [270, 9, 0, "-", "test_pow"], [271, 9, 0, "-", "test_primitive_cache_acc"], [272, 9, 0, "-", "test_primitive_cache_throughput"], [273, 9, 0, "-", "test_qkv_merge"], [274, 9, 0, "-", "test_qkv_reshape"], [275, 9, 0, "-", "test_quant_onnx_execute"], [276, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [277, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [278, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [279, 9, 0, "-", "test_size"], [280, 9, 0, "-", "test_softmax"], [281, 9, 0, "-", "test_start_end_logits"], [282, 9, 0, "-", "test_tanh"], [283, 9, 0, "-", "test_text_encoder"], [284, 9, 0, "-", "test_text_encoder_bf16"], [285, 9, 0, "-", "test_tf_utils"], [286, 9, 0, "-", "test_token_type_embeddings"], [287, 9, 0, "-", "test_transpose"], [288, 9, 0, "-", "test_transpose_batch_matmul"], [289, 9, 0, "-", "test_unet"], [290, 9, 0, "-", "test_unet_bf16"], [291, 9, 0, "-", "test_unsqueeze"], [292, 9, 0, "-", "test_vae_decoder"], [293, 9, 0, "-", "test_vae_decoder_bf16"], [294, 9, 0, "-", "test_weight_sharing_acc"], [295, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [296, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [297, 9, 0, "-", "test_weight_sharing_throughput"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "api_doc_example"], [1, 9, 0, "-", "backends"], [190, 9, 0, "-", "optimization"], [222, 9, 0, "-", "preprocessing"], [224, 9, 0, "-", "version"]], "intel_extension_for_transformers.api_doc_example": [[0, 10, 1, "", "ExampleClass"], [0, 11, 1, "", "attribute1"], [0, 13, 1, "", "function1"], [0, 13, 1, "", "function2"], [0, 13, 1, "", "function3"], [0, 13, 1, "", "generator1"], [0, 14, 1, "", "module_debug_level1"]], "intel_extension_for_transformers.api_doc_example.ExampleClass": [[0, 11, 1, "", "attr1"], [0, 11, 1, "", "attr2"], [0, 11, 1, "", "attr5"], [0, 12, 1, "", "method1"]], "intel_extension_for_transformers.backends": [[182, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[11, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[2, 9, 0, "-", "compile"], [4, 9, 0, "-", "extractors"], [9, 9, 0, "-", "graph"], [10, 9, 0, "-", "graph_utils"], [12, 9, 0, "-", "loaders"], [14, 9, 0, "-", "logger"], [15, 9, 0, "-", "onnx_utils"], [36, 9, 0, "-", "ops"], [100, 9, 0, "-", "sub_graph"], [180, 9, 0, "-", "tf_utils"], [181, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, 13, 1, "", "compile"], [2, 13, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 9, 0, "-", "extractor"], [5, 9, 0, "-", "onnx_extractor"], [6, 9, 0, "-", "tf_extractor"], [7, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, 10, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, 10, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, 10, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, 10, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[8, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, 10, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[8, 12, 1, "", "add_config_item"], [8, 12, 1, "", "change_node_input_tensors"], [8, 12, 1, "", "change_node_output_tensors"], [8, 12, 1, "", "dump_tensor"], [8, 12, 1, "", "engine_init"], [8, 12, 1, "", "get_next_node_names"], [8, 12, 1, "", "get_node_by_name"], [8, 12, 1, "", "get_node_id"], [8, 12, 1, "", "get_pre_node_names"], [8, 12, 1, "", "get_sparse_nodes_name"], [8, 12, 1, "", "get_tensor_idx"], [8, 12, 1, "", "graph_dispatch"], [8, 12, 1, "", "graph_init"], [8, 12, 1, "", "inference"], [8, 12, 1, "", "inquire_config_item"], [8, 12, 1, "", "insert_nodes"], [8, 12, 1, "", "modify_node_connections"], [8, 12, 1, "", "remove_nodes"], [8, 12, 1, "", "rename_node"], [8, 12, 1, "", "save"], [8, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, 10, 1, "", "LazyImport"], [10, 13, 1, "", "autocast_init"], [10, 13, 1, "", "construct_node"], [10, 13, 1, "", "get_autocast_info"], [10, 13, 1, "", "get_data_dtype"], [10, 13, 1, "", "get_model_fwk_name"], [10, 13, 1, "", "get_quant_info"], [10, 13, 1, "", "insert_pattern"], [10, 13, 1, "", "insert_quant_info"], [10, 13, 1, "", "list2str"], [10, 13, 1, "", "names_from_input"], [10, 13, 1, "", "pattern_mapping"], [10, 13, 1, "", "pattern_mapping_conf_validation"], [10, 13, 1, "", "quant_info_init"], [10, 13, 1, "", "search_pattern"], [10, 13, 1, "", "search_straight_pattern"], [10, 13, 1, "", "set_autocast"], [10, 13, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[13, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, 10, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, 10, 1, "", "Logger"], [14, 13, 1, "", "debug"], [14, 13, 1, "", "error"], [14, 13, 1, "", "fatal"], [14, 13, 1, "", "info"], [14, 13, 1, "", "log"], [14, 13, 1, "", "warn"], [14, 13, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[14, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, 13, 1, "", "bias_to_int32"], [15, 13, 1, "", "change_num_name"], [15, 13, 1, "", "get_children"], [15, 13, 1, "", "get_initializer_children_names"], [15, 13, 1, "", "get_node_children_names"], [15, 13, 1, "", "graph_node_names_details"], [15, 13, 1, "", "is_supported_onnx_graph"], [15, 13, 1, "", "is_supported_onnx_node"], [15, 13, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[16, 9, 0, "-", "all"], [17, 9, 0, "-", "assert"], [18, 9, 0, "-", "batch_matmul"], [19, 9, 0, "-", "batch_matmul_v2"], [20, 9, 0, "-", "bias_add"], [21, 9, 0, "-", "binary_op"], [22, 9, 0, "-", "cast"], [23, 9, 0, "-", "concat"], [24, 9, 0, "-", "conv"], [25, 9, 0, "-", "cos"], [26, 9, 0, "-", "empty_ops"], [27, 9, 0, "-", "expand_dims"], [28, 9, 0, "-", "fused_batch_matmul_v2"], [29, 9, 0, "-", "fused_batch_norm_v3"], [30, 9, 0, "-", "fused_gemm"], [31, 9, 0, "-", "fused_matmul"], [32, 9, 0, "-", "gather"], [33, 9, 0, "-", "gather_elements"], [34, 9, 0, "-", "gelu"], [35, 9, 0, "-", "gemm"], [37, 9, 0, "-", "iterator_get_next"], [38, 9, 0, "-", "iterator_v2"], [39, 9, 0, "-", "layer_normalization"], [40, 9, 0, "-", "log_softmax"], [41, 9, 0, "-", "map_and_batch_dataset"], [42, 9, 0, "-", "matmul"], [43, 9, 0, "-", "mean"], [44, 9, 0, "-", "mkl_layer_norm"], [45, 9, 0, "-", "model_dataset"], [46, 9, 0, "-", "one_hot"], [47, 9, 0, "-", "onnx_input"], [48, 9, 0, "-", "op"], [49, 9, 0, "-", "optimize_dataset"], [50, 9, 0, "-", "pack"], [51, 9, 0, "-", "padding_sequence"], [52, 9, 0, "-", "placeholder"], [53, 9, 0, "-", "pos_embed"], [54, 9, 0, "-", "pow"], [55, 9, 0, "-", "quantize_linear"], [56, 9, 0, "-", "quantize_v2"], [57, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [58, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [59, 9, 0, "-", "reduce_mean"], [60, 9, 0, "-", "reduce_sum"], [61, 9, 0, "-", "reorder"], [62, 9, 0, "-", "reshape"], [63, 9, 0, "-", "rsub"], [64, 9, 0, "-", "scatter_elements"], [65, 9, 0, "-", "shape"], [66, 9, 0, "-", "sin"], [67, 9, 0, "-", "size"], [68, 9, 0, "-", "slice"], [69, 9, 0, "-", "softmax"], [70, 9, 0, "-", "split"], [71, 9, 0, "-", "squeeze"], [72, 9, 0, "-", "strided_slice"], [73, 9, 0, "-", "tensor"], [74, 9, 0, "-", "top_k"], [75, 9, 0, "-", "transpose"], [76, 9, 0, "-", "unpack"], [77, 9, 0, "-", "unsqueeze"], [78, 9, 0, "-", "view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, 10, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, 10, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, 10, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, 10, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[19, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, 10, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, 10, 1, "", "BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp": [[21, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, 10, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, 10, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, 10, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, 10, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, 10, 1, "", "Add"], [26, 10, 1, "", "AddV2"], [26, 10, 1, "", "Arange"], [26, 10, 1, "", "BinaryAdd"], [26, 10, 1, "", "Constant"], [26, 10, 1, "", "ConstantOfShape"], [26, 10, 1, "", "Convolution"], [26, 10, 1, "", "CumSum"], [26, 10, 1, "", "Dequantize"], [26, 10, 1, "", "DequantizeLinear"], [26, 10, 1, "", "Einsum"], [26, 10, 1, "", "EmbeddingBag"], [26, 10, 1, "", "Erf"], [26, 10, 1, "", "Expand"], [26, 10, 1, "", "ExpandIndices"], [26, 10, 1, "", "Fill"], [26, 10, 1, "", "FlatMapDataset"], [26, 10, 1, "", "Flatten"], [26, 10, 1, "", "Identity"], [26, 10, 1, "", "InnerProduct"], [26, 10, 1, "", "Input"], [26, 10, 1, "", "LatRange"], [26, 10, 1, "", "ListConstruct"], [26, 10, 1, "", "Loop"], [26, 10, 1, "", "MakeIterator"], [26, 10, 1, "", "MatMulWithBias"], [26, 10, 1, "", "MatMulWithBiasAdd"], [26, 10, 1, "", "MatMulWithBiasGelu"], [26, 10, 1, "", "MatMulWithBiasRelu"], [26, 10, 1, "", "MatMulWithBiasSigmoid"], [26, 10, 1, "", "MatMulWithBiasTanh"], [26, 10, 1, "", "Matmul"], [26, 10, 1, "", "MergedEmbeddingbag"], [26, 10, 1, "", "Onehot"], [26, 10, 1, "", "OpAny"], [26, 10, 1, "", "Output"], [26, 10, 1, "", "PositionIds"], [26, 10, 1, "", "QLinearAdd"], [26, 10, 1, "", "QLinearMatMul"], [26, 10, 1, "", "QLinearMul"], [26, 10, 1, "", "Range"], [26, 10, 1, "", "RealDiv"], [26, 10, 1, "", "Reciprocal"], [26, 10, 1, "", "Relu"], [26, 10, 1, "", "Repeat"], [26, 10, 1, "", "Rsqrt"], [26, 10, 1, "", "SequenceLength"], [26, 10, 1, "", "Sigmoid"], [26, 10, 1, "", "Sqrt"], [26, 10, 1, "", "Square"], [26, 10, 1, "", "SquaredDifference"], [26, 10, 1, "", "Stack"], [26, 10, 1, "", "StopGradient"], [26, 10, 1, "", "Tanh"], [26, 10, 1, "", "TensorSliceDataset"], [26, 10, 1, "", "Tile"], [26, 10, 1, "", "TokenTypeIds"], [26, 10, 1, "", "TransposeBatchMatMul"], [26, 10, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, 10, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, 10, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, 10, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, 10, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, 10, 1, "", "Gather"], [32, 10, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, 10, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, 10, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, 10, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, 10, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, 10, 1, "", "LayerNorm"], [39, 10, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, 10, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, 10, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, 10, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, 10, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, 10, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, 10, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, 10, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[47, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, 10, 1, "", "Operator"], [48, 13, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[48, 12, 1, "", "construct"], [48, 12, 1, "", "extract"], [48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, 10, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, 10, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, 10, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, 10, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, 10, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, 10, 1, "", "Quantize"], [55, 10, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, 10, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, 10, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, 10, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, 10, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, 10, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, 10, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, 10, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, 10, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, 10, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, 10, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, 10, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, 10, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, 10, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, 10, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, 10, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, 10, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, 10, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, 10, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, 10, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, 10, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, 10, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[79, 9, 0, "-", "InnerproductReshapeFusion"], [80, 9, 0, "-", "add_cls_token"], [81, 9, 0, "-", "add_embeddings"], [82, 9, 0, "-", "arangewithreciprocal"], [83, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [84, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [85, 9, 0, "-", "attentionBlock_QKVPreReshape"], [86, 9, 0, "-", "attentionBlock_QKVReshape"], [87, 9, 0, "-", "attentionBlock_Resize2Gather"], [88, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [89, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [90, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [91, 9, 0, "-", "attention_reshape"], [92, 9, 0, "-", "cast_to"], [93, 9, 0, "-", "collect_quant_info"], [94, 9, 0, "-", "conv_reshape"], [95, 9, 0, "-", "decoder_attn_reshape"], [96, 9, 0, "-", "einsumwitharange"], [97, 9, 0, "-", "embeddingbag"], [98, 9, 0, "-", "gelu"], [99, 9, 0, "-", "generate_sequence"], [101, 9, 0, "-", "innerproductwithbiasgelu"], [102, 9, 0, "-", "innerproductwithslice"], [103, 9, 0, "-", "input_data"], [104, 9, 0, "-", "input_file"], [105, 9, 0, "-", "insert_bf16_node"], [106, 9, 0, "-", "insert_quant_node"], [107, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [108, 9, 0, "-", "interact_features"], [109, 9, 0, "-", "last_layer_shape"], [110, 9, 0, "-", "layer_norm"], [111, 9, 0, "-", "layer_norm_with_reduce_mean"], [112, 9, 0, "-", "layer_norm_with_transpose"], [113, 9, 0, "-", "matmul_with_bias"], [114, 9, 0, "-", "matmul_with_bias_add"], [115, 9, 0, "-", "matmul_with_bias_gelu"], [116, 9, 0, "-", "matmul_with_bias_relu"], [117, 9, 0, "-", "matmul_with_bias_sigmoid"], [118, 9, 0, "-", "matmul_with_bias_tanh"], [119, 9, 0, "-", "matmul_with_transpose"], [120, 9, 0, "-", "merged_embeddingbag"], [121, 9, 0, "-", "multi_head_attention"], [122, 9, 0, "-", "operator_adaptor"], [123, 9, 0, "-", "output_data"], [124, 9, 0, "-", "padding_sequence"], [125, 9, 0, "-", "pattern"], [126, 9, 0, "-", "position_embeddings"], [127, 9, 0, "-", "position_embeddings_v1"], [128, 9, 0, "-", "qkv_merge"], [129, 9, 0, "-", "qkv_reshape"], [130, 9, 0, "-", "quantize_fusion"], [131, 9, 0, "-", "quantized_graph_dtype_refactor"], [132, 9, 0, "-", "remove_constant_op"], [133, 9, 0, "-", "remove_last_view"], [134, 9, 0, "-", "remove_list_construct"], [135, 9, 0, "-", "remove_range"], [136, 9, 0, "-", "removeslice"], [137, 9, 0, "-", "reshape_after_restore_hidden_states"], [138, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [139, 9, 0, "-", "reshape_before_restore_hidden_states"], [140, 9, 0, "-", "reshape_fusion"], [141, 9, 0, "-", "resnetBlock_instancenormReshapeFromConv"], [142, 9, 0, "-", "resnetBlock_instancenormReshapeFromdiv"], [143, 9, 0, "-", "restnetBlock_groupNorm"], [144, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [145, 9, 0, "-", "rotary_pos_emb"], [146, 9, 0, "-", "slicemask"], [147, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [148, 9, 0, "-", "stableDiffusion_bf16Convert"], [149, 9, 0, "-", "start_end_logits"], [150, 9, 0, "-", "subgraph_matcher"], [151, 9, 0, "-", "textEncdoer_word_embedding"], [152, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [153, 9, 0, "-", "textEncoder_AttentionReshape"], [154, 9, 0, "-", "textEncoder_KVReshape"], [155, 9, 0, "-", "textEncoder_MulReshape"], [156, 9, 0, "-", "textEncoder_QReshape"], [157, 9, 0, "-", "textEncoder_SoftmaxReshape"], [158, 9, 0, "-", "textEncoder_causal_attention_mask"], [159, 9, 0, "-", "token_type_embeddings"], [160, 9, 0, "-", "token_type_embeddings_v1"], [161, 9, 0, "-", "torch_embedding"], [162, 9, 0, "-", "torch_ip_insert_bias"], [163, 9, 0, "-", "torchinsertbf16node"], [164, 9, 0, "-", "torchpaddingsquence"], [165, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [166, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [167, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [168, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [169, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [170, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [171, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [172, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [173, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [174, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromAdd"], [175, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromConcat"], [176, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [177, 9, 0, "-", "transformer2Dmodel_upBlockResize"], [178, 9, 0, "-", "transpose_batch_matmul"], [179, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, 10, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, 10, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, 10, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, 10, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, 10, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, 10, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, 10, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, 10, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, 10, 1, "", "AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, 10, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, 10, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, 10, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, 10, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, 10, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, 10, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, 10, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, 10, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, 10, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, 10, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, 10, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, 10, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, 10, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, 10, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, 10, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, 10, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, 10, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, 10, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, 10, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, 10, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, 10, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, 10, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, 10, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, 10, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, 10, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, 10, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, 10, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, 10, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, 10, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, 10, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, 10, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, 10, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, 10, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, 10, 1, "", "Pattern"], [125, 13, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, 10, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, 10, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, 10, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, 10, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, 10, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, 10, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, 10, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, 10, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, 10, 1, "", "RemoveListConstruct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, 10, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, 10, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, 10, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, 10, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, 10, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, 10, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[141, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[142, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[143, 10, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, 10, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, 10, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, 10, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[147, 10, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[148, 10, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, 10, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, 10, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[151, 10, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[152, 10, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[153, 10, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[154, 10, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[155, 10, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[156, 10, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[157, 10, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[158, 10, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, 10, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, 10, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, 10, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, 10, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, 10, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[165, 10, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[166, 10, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[167, 10, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[168, 10, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[169, 10, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[170, 10, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[171, 10, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[172, 10, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[173, 10, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[174, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[175, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[176, 10, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[177, 10, 1, "", "Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, 10, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, 10, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, 14, 1, "", "TF_DTYPE_ID"], [180, 13, 1, "", "create_tf_node"], [180, 13, 1, "", "get_tensor_dest_op"], [180, 13, 1, "", "graph_node_names_details"], [180, 13, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, 13, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.optimization": [[184, 9, 0, "-", "benchmark"], [185, 9, 0, "-", "config"], [186, 9, 0, "-", "distillation"], [189, 9, 0, "-", "dynamic"], [192, 9, 0, "-", "mixture"], [193, 9, 0, "-", "model"], [195, 9, 0, "-", "nas"], [197, 9, 0, "-", "optimizer"], [198, 9, 0, "-", "optimizer_tf"], [199, 9, 0, "-", "pipeline"], [200, 9, 0, "-", "pruning"], [202, 9, 0, "-", "pytorch_pruner"], [210, 9, 0, "-", "quantization"], [211, 9, 0, "-", "trainer"], [213, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[184, 13, 1, "", "benchmark"], [184, 13, 1, "", "get_example_inputs"], [184, 13, 1, "", "preprocess_model"], [184, 13, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[185, 10, 1, "", "AutoDistillationConfig"], [185, 10, 1, "", "BenchmarkConfig"], [185, 10, 1, "", "DistillationConfig"], [185, 10, 1, "", "DynamicLengthConfig"], [185, 10, 1, "", "FlashDistillationConfig"], [185, 10, 1, "", "NASConfig"], [185, 10, 1, "", "Provider"], [185, 10, 1, "", "PrunerV2"], [185, 10, 1, "", "PruningConfig"], [185, 10, 1, "", "QuantizationConfig"], [185, 10, 1, "", "TFDistillationConfig"], [185, 10, 1, "", "WeightPruningConfig"], [185, 13, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[185, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[186, 10, 1, "", "Criterion"], [186, 10, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[187, 9, 0, "-", "drop_and_restore_utils"], [188, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, 13, 1, "", "sample_layer_configuration"], [187, 13, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, 10, 1, "", "Evolution"], [188, 13, 1, "", "approx_ratio"], [188, 13, 1, "", "inverse"], [188, 13, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[188, 12, 1, "", "add_gene"], [188, 12, 1, "", "convex_hull"], [188, 12, 1, "", "crossover"], [188, 12, 1, "", "get_store"], [188, 12, 1, "", "load_store"], [188, 12, 1, "", "mutate"], [188, 12, 1, "", "pareto_frontier"], [188, 12, 1, "", "save_population"], [188, 12, 1, "", "save_store"], [188, 12, 1, "", "set_lower_constraint"], [188, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[191, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, 10, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[191, 12, 1, "", "create_distillers"], [191, 12, 1, "", "estimate"], [191, 12, 1, "", "init_by_cfg"], [191, 12, 1, "", "load_search_results"], [191, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[193, 10, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[193, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[194, 9, 0, "-", "basic_nas"], [196, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, 10, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[194, 12, 1, "", "estimate"], [194, 12, 1, "", "execute"], [194, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, 10, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[197, 10, 1, "", "NoTrainerOptimizer"], [197, 10, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[197, 12, 1, "", "distill"], [197, 12, 1, "", "init_distiller"], [197, 12, 1, "", "init_pruner"], [197, 12, 1, "", "init_quantizer"], [197, 12, 1, "", "prune"], [197, 12, 1, "", "quantize"], [197, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[197, 12, 1, "", "fit"], [197, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, 10, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[198, 12, 1, "", "autodistill"], [198, 12, 1, "", "build_train_func"], [198, 12, 1, "", "builtin_eval_func"], [198, 12, 1, "", "distill"], [198, 12, 1, "", "init_distiller"], [198, 12, 1, "", "init_pruner"], [198, 12, 1, "", "init_quantizer"], [198, 12, 1, "", "model_builder_builtin"], [198, 12, 1, "", "prune"], [198, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[199, 13, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[200, 10, 1, "", "PrunerConfig"], [200, 10, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[201, 9, 0, "-", "criteria"], [203, 9, 0, "-", "logger"], [204, 9, 0, "-", "patterns"], [205, 9, 0, "-", "pruners"], [206, 9, 0, "-", "pruning"], [207, 9, 0, "-", "regs"], [208, 9, 0, "-", "schedulers"], [209, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, 10, 1, "", "GradientCriterion"], [201, 10, 1, "", "MagnitudeCriterion"], [201, 10, 1, "", "PruningCriterion"], [201, 10, 1, "", "SnipCriterion"], [201, 10, 1, "", "SnipMomentumCriterion"], [201, 13, 1, "", "get_criterion"], [201, 13, 1, "", "register_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion": [[201, 12, 1, "", "on_step_begin"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion": [[201, 12, 1, "", "on_after_optimizer_step"], [201, 12, 1, "", "on_before_optimizer_step"], [201, 12, 1, "", "on_step_begin"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, 10, 1, "", "BasePattern"], [204, 10, 1, "", "PatternNInM"], [204, 10, 1, "", "PatternNxM"], [204, 13, 1, "", "get_pattern"], [204, 13, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern": [[204, 12, 1, "", "adjust_ratio"], [204, 12, 1, "", "check_layer_validity"], [204, 11, 1, "", "config"], [204, 12, 1, "", "get_block_size_dict"], [204, 12, 1, "", "get_masks"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_masks_local"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_single_mask_per_target_ratio"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "get_sparsity_ratio_each_layer"], [204, 11, 1, "", "invalid_layers"], [204, 11, 1, "", "is_global"], [204, 11, 1, "", "keep_mask_layers"], [204, 11, 1, "", "max_sparsity_ratio_per_op"], [204, 11, 1, "", "min_sparsity_ratio_per_op"], [204, 11, 1, "", "modules"], [204, 11, 1, "", "pattern"], [204, 12, 1, "", "reduce_tensor"], [204, 11, 1, "", "target_sparsity"], [204, 12, 1, "", "update_residual_cnt"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM": [[204, 11, 1, "", "M"], [204, 11, 1, "", "N"], [204, 12, 1, "", "check_layer_validity"], [204, 12, 1, "", "get_ele_mask_per_threshold"], [204, 12, 1, "", "get_least_ninm_mask_from_data"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "reduce_scores"], [204, 12, 1, "", "reshape_orig_to_pattern"], [204, 12, 1, "", "reshape_reduced_to_orig"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM": [[204, 11, 1, "", "block_size"], [204, 12, 1, "", "check_layer_validity"], [204, 12, 1, "", "count_new_masked_cnts"], [204, 12, 1, "", "get_block_size_dict"], [204, 12, 1, "", "get_mask_per_threshold"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "get_sparsity_ratio_progressive"], [204, 12, 1, "", "reduce_scores"], [204, 12, 1, "", "reshape_orig_to_pattern"], [204, 12, 1, "", "reshape_reduced_to_orig"], [204, 12, 1, "", "update_new_added_masks"], [204, 12, 1, "", "update_progressive_masks"], [204, 12, 1, "", "update_progressive_masks_global"], [204, 12, 1, "", "update_progressive_masks_linear"], [204, 12, 1, "", "update_progressive_masks_local"], [204, 12, 1, "", "update_progressive_masks_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[205, 10, 1, "", "BasePruner"], [205, 10, 1, "", "BasicPruner"], [205, 10, 1, "", "PatternLockPruner"], [205, 10, 1, "", "ProgressivePruner"], [205, 13, 1, "", "get_pruner"], [205, 13, 1, "", "parse_valid_pruner_types"], [205, 13, 1, "", "register_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner": [[205, 12, 1, "", "check_is_pruned_step"], [205, 11, 1, "", "config"], [205, 11, 1, "", "current_sparsity_ratio"], [205, 11, 1, "", "end_step"], [205, 11, 1, "", "global_step"], [205, 12, 1, "", "mask_weights"], [205, 12, 1, "", "mask_weights_general"], [205, 11, 1, "", "masks"], [205, 11, 1, "", "max_sparsity_ratio_per_op"], [205, 11, 1, "", "modules"], [205, 12, 1, "", "on_after_eval"], [205, 12, 1, "", "on_after_optimizer_step"], [205, 12, 1, "", "on_before_eval"], [205, 12, 1, "", "on_before_optimizer_step"], [205, 12, 1, "", "on_epoch_begin"], [205, 12, 1, "", "on_epoch_end"], [205, 12, 1, "", "on_step_begin"], [205, 12, 1, "", "on_step_end"], [205, 12, 1, "", "on_train_begin"], [205, 12, 1, "", "on_train_end"], [205, 11, 1, "", "pattern"], [205, 11, 1, "", "pruning_frequency"], [205, 11, 1, "", "scheduler"], [205, 11, 1, "", "scores"], [205, 11, 1, "", "start_step"], [205, 11, 1, "", "target_sparsity_ratio"], [205, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner": [[205, 11, 1, "", "criterion"], [205, 12, 1, "", "on_after_optimizer_step"], [205, 12, 1, "", "on_before_optimizer_step"], [205, 11, 1, "", "pattern"], [205, 11, 1, "", "reg"], [205, 11, 1, "", "scheduler"], [205, 12, 1, "", "set_global_step"], [205, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner": [[205, 12, 1, "", "on_after_optimizer_step"], [205, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner": [[205, 12, 1, "", "check_is_pruned_progressive_step"], [205, 12, 1, "", "check_progressive_validity"], [205, 12, 1, "", "on_after_optimizer_step"], [205, 12, 1, "", "on_before_optimizer_step"], [205, 12, 1, "", "on_step_begin"], [205, 12, 1, "", "print_progressive_sparsity"], [205, 12, 1, "", "update_masks_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[206, 10, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning": [[206, 11, 1, "", "config_file_path"], [206, 12, 1, "", "get_sparsity_ratio"], [206, 11, 1, "", "model"], [206, 12, 1, "", "on_after_eval"], [206, 12, 1, "", "on_after_optimizer_step"], [206, 12, 1, "", "on_before_eval"], [206, 12, 1, "", "on_before_optimizer_step"], [206, 12, 1, "", "on_epoch_begin"], [206, 12, 1, "", "on_epoch_end"], [206, 12, 1, "", "on_step_begin"], [206, 12, 1, "", "on_step_end"], [206, 12, 1, "", "on_train_begin"], [206, 12, 1, "", "on_train_end"], [206, 11, 1, "", "pruner_info"], [206, 11, 1, "", "pruners"], [206, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[207, 10, 1, "", "BaseReg"], [207, 10, 1, "", "GroupLasso"], [207, 13, 1, "", "get_reg"], [207, 13, 1, "", "get_reg_type"], [207, 13, 1, "", "register_reg"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg": [[207, 12, 1, "", "on_after_optimizer_step"], [207, 12, 1, "", "on_before_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso": [[207, 11, 1, "", "alpha"], [207, 12, 1, "", "on_after_optimizer_step"], [207, 12, 1, "", "on_before_optimizer_step"], [207, 11, 1, "", "reg_terms"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[208, 10, 1, "", "IterativeScheduler"], [208, 10, 1, "", "OneshotScheduler"], [208, 10, 1, "", "PruningScheduler"], [208, 13, 1, "", "get_scheduler"], [208, 13, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler": [[208, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler": [[208, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler": [[208, 11, 1, "", "config"], [208, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[209, 13, 1, "", "check_config"], [209, 13, 1, "", "check_key_validity"], [209, 13, 1, "", "parse_to_prune"], [209, 13, 1, "", "process_and_check_config"], [209, 13, 1, "", "process_config"], [209, 13, 1, "", "process_weight_config"], [209, 13, 1, "", "process_yaml_config"], [209, 13, 1, "", "reset_none_to_default"], [209, 13, 1, "", "update_params"]], "intel_extension_for_transformers.optimization.quantization": [[210, 10, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[211, 10, 1, "", "BaseTrainer"], [211, 10, 1, "", "NLPSeq2SeqTrainer"], [211, 10, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[211, 12, 1, "", "auto_distil_evaluation_loop"], [211, 12, 1, "", "autodistillation"], [211, 12, 1, "", "benchmark"], [211, 12, 1, "", "builtin_eval_func"], [211, 12, 1, "", "builtin_train_func"], [211, 12, 1, "", "compute_loss"], [211, 12, 1, "", "create_optimizer_builtin"], [211, 12, 1, "", "distill"], [211, 12, 1, "", "export_to_bf16_onnx"], [211, 12, 1, "", "export_to_fp32_onnx"], [211, 12, 1, "", "export_to_int8_onnx"], [211, 12, 1, "", "export_to_jit"], [211, 12, 1, "", "export_to_onnx"], [211, 12, 1, "", "init_distiller"], [211, 12, 1, "", "init_pruner"], [211, 12, 1, "", "init_quantizer"], [211, 12, 1, "", "model_builder_builtin"], [211, 12, 1, "", "nas"], [211, 12, 1, "", "orchestrate_optimizations"], [211, 12, 1, "", "prune"], [211, 12, 1, "", "quantize"], [211, 12, 1, "", "run_evolutionary_search"], [211, 12, 1, "", "set_dynamic_config"], [211, 12, 1, "", "train"], [211, 12, 1, "", "training_step"], [211, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[211, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[212, 9, 0, "-", "get_throughput"], [214, 9, 0, "-", "metrics"], [215, 9, 0, "-", "models"], [218, 9, 0, "-", "objectives"], [219, 9, 0, "-", "utility"], [220, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[214, 10, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[216, 9, 0, "-", "modeling_bert_dynamic"], [217, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[216, 10, 1, "", "BertAttention"], [216, 10, 1, "", "BertEmbeddings"], [216, 10, 1, "", "BertEncoder"], [216, 10, 1, "", "BertForMaskedLM"], [216, 10, 1, "", "BertForMultipleChoice"], [216, 10, 1, "", "BertForNextSentencePrediction"], [216, 10, 1, "", "BertForPreTraining"], [216, 10, 1, "", "BertForPreTrainingOutput"], [216, 10, 1, "", "BertForQuestionAnswering"], [216, 10, 1, "", "BertForSequenceClassification"], [216, 10, 1, "", "BertForTokenClassification"], [216, 10, 1, "", "BertIntermediate"], [216, 10, 1, "", "BertLMHeadModel"], [216, 10, 1, "", "BertLMPredictionHead"], [216, 10, 1, "", "BertLayer"], [216, 10, 1, "", "BertModel"], [216, 10, 1, "", "BertOnlyMLMHead"], [216, 10, 1, "", "BertOnlyNSPHead"], [216, 10, 1, "", "BertOutput"], [216, 10, 1, "", "BertPooler"], [216, 10, 1, "", "BertPreTrainedModel"], [216, 10, 1, "", "BertPreTrainingHeads"], [216, 10, 1, "", "BertPredictionHeadTransform"], [216, 10, 1, "", "BertSelfAttention"], [216, 10, 1, "", "BertSelfOutput"], [216, 13, 1, "", "expand_gather"], [216, 13, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "get_output_embeddings"], [216, 12, 1, "", "prepare_inputs_for_generation"], [216, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "get_output_embeddings"], [216, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "get_output_embeddings"], [216, 12, 1, "", "prepare_inputs_for_generation"], [216, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[216, 12, 1, "", "feed_forward_chunk"], [216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "get_input_embeddings"], [216, 12, 1, "", "set_input_embeddings"], [216, 12, 1, "", "set_length_config"], [216, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[217, 10, 1, "", "RobertaAttention"], [217, 10, 1, "", "RobertaClassificationHead"], [217, 10, 1, "", "RobertaEmbeddings"], [217, 10, 1, "", "RobertaEncoder"], [217, 10, 1, "", "RobertaForCausalLM"], [217, 10, 1, "", "RobertaForMaskedLM"], [217, 10, 1, "", "RobertaForMultipleChoice"], [217, 10, 1, "", "RobertaForQuestionAnswering"], [217, 10, 1, "", "RobertaForSequenceClassification"], [217, 10, 1, "", "RobertaForTokenClassification"], [217, 10, 1, "", "RobertaIntermediate"], [217, 10, 1, "", "RobertaLMHead"], [217, 10, 1, "", "RobertaLayer"], [217, 10, 1, "", "RobertaModel"], [217, 10, 1, "", "RobertaOutput"], [217, 10, 1, "", "RobertaPooler"], [217, 10, 1, "", "RobertaPreTrainedModel"], [217, 10, 1, "", "RobertaSelfAttention"], [217, 10, 1, "", "RobertaSelfOutput"], [217, 13, 1, "", "create_position_ids_from_input_ids"], [217, 13, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[217, 12, 1, "", "create_position_ids_from_inputs_embeds"], [217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "get_output_embeddings"], [217, 12, 1, "", "prepare_inputs_for_generation"], [217, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "get_output_embeddings"], [217, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[217, 12, 1, "", "feed_forward_chunk"], [217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "get_input_embeddings"], [217, 12, 1, "", "set_input_embeddings"], [217, 12, 1, "", "set_length_config"], [217, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[217, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[218, 10, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[218, 12, 1, "", "modelsize"], [218, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[219, 13, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[220, 10, 1, "", "TFDataloader"], [220, 13, 1, "", "distributed_init"], [220, 13, 1, "", "get_filepath"], [220, 13, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[221, 9, 0, "-", "data_augmentation"], [223, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[221, 10, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[221, 12, 1, "", "data_augment"], [221, 12, 1, "", "mit_data_augmentation"], [221, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[223, 10, 1, "", "AugmenterType"], [223, 13, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[226, 10, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[226, 12, 1, "", "setUpClass"], [226, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[227, 10, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[227, 12, 1, "", "setUpClass"], [227, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[228, 10, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[228, 12, 1, "", "setUpClass"], [228, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[229, 10, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[229, 12, 1, "", "setUpClass"], [229, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[230, 10, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[230, 12, 1, "", "setUpClass"], [230, 12, 1, "", "tearDownClass"]], "test_binary_op": [[231, 10, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[231, 12, 1, "", "setUpClass"], [231, 12, 1, "", "tearDownClass"]], "test_binaryop": [[232, 10, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[232, 12, 1, "", "setUpClass"], [232, 12, 1, "", "tearDownClass"]], "test_cast_to": [[233, 10, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[233, 12, 1, "", "setUpClass"], [233, 12, 1, "", "tearDownClass"]], "test_concat": [[234, 10, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[234, 12, 1, "", "setUpClass"], [234, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[235, 10, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[235, 12, 1, "", "setUpClass"], [235, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[236, 10, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[236, 12, 1, "", "setUpClass"], [236, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[237, 10, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[237, 12, 1, "", "setUpClass"], [237, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[238, 10, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[238, 12, 1, "", "setUpClass"], [238, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[239, 10, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[239, 12, 1, "", "setUpClass"], [239, 12, 1, "", "tearDownClass"]], "test_embedding": [[240, 10, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[240, 12, 1, "", "setUpClass"], [240, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[241, 10, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[241, 12, 1, "", "setUpClass"], [241, 12, 1, "", "tearDownClass"]], "test_execution_options": [[242, 10, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[242, 12, 1, "", "setUpClass"], [242, 12, 1, "", "tearDownClass"]], "test_gelu": [[243, 10, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[243, 12, 1, "", "setUpClass"], [243, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[244, 10, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[244, 12, 1, "", "setUpClass"], [244, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[245, 10, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[245, 12, 1, "", "setUpClass"], [245, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[246, 10, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[246, 12, 1, "", "setUpClass"], [246, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[247, 10, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[247, 12, 1, "", "setUpClass"], [247, 12, 1, "", "tearDownClass"], [247, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[248, 10, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[248, 12, 1, "", "setUpClass"], [248, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[249, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[249, 12, 1, "", "setUpClass"], [249, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[250, 10, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[250, 12, 1, "", "setUpClass"], [250, 12, 1, "", "tearDownClass"]], "test_layernorm": [[251, 10, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[251, 12, 1, "", "setUpClass"], [251, 12, 1, "", "tearDownClass"]], "test_linear": [[252, 10, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[252, 12, 1, "", "setUpClass"], [252, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[253, 10, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[253, 12, 1, "", "setUpClass"], [253, 12, 1, "", "tearDownClass"]], "test_main": [[254, 10, 1, "", "TestMain"]], "test_main.TestMain": [[254, 12, 1, "", "setUpClass"], [254, 12, 1, "", "tearDownClass"]], "test_matmul": [[255, 10, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[255, 12, 1, "", "setUpClass"], [255, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[256, 10, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[256, 12, 1, "", "setUpClass"], [256, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[257, 10, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[258, 10, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[259, 10, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[260, 10, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[262, 10, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[263, 10, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_ops": [[264, 10, 1, "", "TestOps"]], "test_ops.TestOps": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[265, 10, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[266, 10, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[267, 10, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_permute": [[268, 10, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[269, 10, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_pow": [[270, 10, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[271, 10, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[272, 10, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[273, 10, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[274, 10, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[275, 10, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[276, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[277, 10, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[278, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_size": [[279, 10, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_softmax": [[280, 10, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[281, 10, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_tanh": [[282, 10, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[283, 10, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[284, 10, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[285, 10, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[286, 10, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_transpose": [[287, 10, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[288, 10, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_unet": [[289, 10, 1, "", "TestUnet"]], "test_unet.TestUnet": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[290, 10, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[291, 10, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[292, 10, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[293, 10, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[294, 10, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[295, 10, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[296, 10, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[297, 10, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:class", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:member", "6": "cpp:enumerator", "7": "cpp:enum", "8": "cpp:templateParam", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:method", "13": "py:function", "14": "py:data"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "class", "C++ class"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "member", "C++ member"], "6": ["cpp", "enumerator", "C++ enumerator"], "7": ["cpp", "enum", "C++ enum"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "method", "Python method"], "13": ["py", "function", "Python function"], "14": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 340, 347], "api_doc_exampl": 0, "modul": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "content": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 384, 389], "class": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 188, 191, 193, 194, 196, 197, 198, 200, 201, 204, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 311, 312, 313, 328, 376], "function": [0, 2, 10, 14, 15, 36, 48, 100, 125, 180, 181, 184, 185, 187, 188, 199, 201, 204, 205, 207, 208, 209, 216, 217, 219, 220, 223], "attribut": [0, 36, 100, 180, 338, 348], "backend": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 344, 349, 378], "neural_engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "compil": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 306, 353], "extractor": [3, 4, 5, 6, 7], "submodul": [4, 9, 11, 12, 36, 100, 183, 189, 190, 192, 195, 202, 213, 215, 222], "onnx_extractor": 5, "tf_extractor": 6, "torch_extractor": 7, "graph": [8, 9, 308, 349, 351, 352], "graph_util": 10, "subpackag": [11, 182, 190], "loader": [12, 13], "logger": [14, 203], "onnx_util": 15, "op": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 348, 351], "all": 16, "assert": 17, "batch_matmul": 18, "batch_matmul_v2": 19, "bias_add": 20, "binary_op": 21, "cast": 22, "concat": 23, "conv": 24, "co": 25, "empty_op": 26, "expand_dim": 27, "fused_batch_matmul_v2": 28, "fused_batch_norm_v3": 29, "fused_gemm": 30, "fused_matmul": 31, "gather": 32, "gather_el": 33, "gelu": [34, 98], "gemm": [35, 363, 364, 366, 369], "packag": [36, 100], "iterator_get_next": 37, "iterator_v2": 38, "layer_norm": [39, 110], "log_softmax": 40, "map_and_batch_dataset": 41, "matmul": [42, 365, 366, 367], "mean": [43, 361], "mkl_layer_norm": 44, "model_dataset": 45, "one_hot": 46, "onnx_input": 47, "optimize_dataset": 49, "pack": 50, "padding_sequ": [51, 124], "placehold": 52, "pos_emb": 53, "pow": 54, "quantize_linear": 55, "quantize_v2": 56, "quantized_fused_matmul_and_dequant": 57, "quantized_matmul_with_bias_and_dequant": 58, "reduce_mean": 59, "reduce_sum": 60, "reorder": [61, 363, 367, 368, 369], "reshap": 62, "rsub": 63, "scatter_el": 64, "shape": 65, "sin": 66, "size": [67, 365], "slice": 68, "softmax": [69, 373], "split": 70, "squeez": 71, "strided_slic": 72, "tensor": 73, "top_k": 74, "transpos": [75, 367, 368], "unpack": 76, "unsqueez": 77, "view": 78, "sub_graph": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "innerproductreshapefus": 79, "add_cls_token": 80, "add_embed": 81, "arangewithreciproc": 82, "attentionblock_attentionmaskaddreshap": 83, "attentionblock_constantofshapewithmul": 84, "attentionblock_qkvprereshap": 85, "attentionblock_qkvreshap": 86, "attentionblock_resize2gath": 87, "attentionblock_weightreshapeto4d": 88, "attention_mask_length_adaptive_keep_indic": 89, "attention_output_layer_norm_length_adaptive_keep_indic": 90, "attention_reshap": 91, "cast_to": 92, "collect_quant_info": 93, "conv_reshap": 94, "decoder_attn_reshap": 95, "einsumwitharang": 96, "embeddingbag": 97, "generate_sequ": 99, "innerproductwithbiasgelu": 101, "innerproductwithslic": 102, "input_data": 103, "input_fil": 104, "insert_bf16_nod": 105, "insert_quant_nod": 106, "int8_bf16_mixed_precision_check": 107, "interact_featur": 108, "last_layer_shap": 109, "layer_norm_with_reduce_mean": 111, "layer_norm_with_transpos": 112, "matmul_with_bia": 113, "matmul_with_bias_add": 114, "matmul_with_bias_gelu": 115, "matmul_with_bias_relu": 116, "matmul_with_bias_sigmoid": 117, "matmul_with_bias_tanh": 118, "matmul_with_transpos": 119, "merged_embeddingbag": 120, "multi_head_attent": 121, "operator_adaptor": 122, "output_data": 123, "pattern": [125, 204, 348, 351, 352, 356, 363, 364, 369], "position_embed": 126, "position_embeddings_v1": 127, "qkv_merg": 128, "qkv_reshap": 129, "quantize_fus": 130, "quantized_graph_dtype_refactor": 131, "remove_constant_op": 132, "remove_last_view": 133, "remove_list_construct": 134, "remove_rang": 135, "removeslic": 136, "reshape_after_restore_hidden_st": 137, "reshape_before_and_after_attention_out_layer_norm_gather_el": 138, "reshape_before_restore_hidden_st": 139, "reshape_fus": 140, "resnetblock_instancenormreshapefromconv": 141, "resnetblock_instancenormreshapefromdiv": 142, "restnetblock_groupnorm": 143, "restore_hidden_states_in_length_adaptive_update_indic": 144, "rotary_pos_emb": 145, "slicemask": 146, "stablediffusion_reshapefus": 147, "stablediffusion_bf16convert": 148, "start_end_logit": 149, "subgraph_match": 150, "textencdoer_word_embed": 151, "textencoder_attentionmaskaddreshap": 152, "textencoder_attentionreshap": 153, "textencoder_kvreshap": 154, "textencoder_mulreshap": 155, "textencoder_qreshap": 156, "textencoder_softmaxreshap": 157, "textencoder_causal_attention_mask": 158, "token_type_embed": 159, "token_type_embeddings_v1": 160, "torch_embed": 161, "torch_ip_insert_bia": 162, "torchinsertbf16nod": 163, "torchpaddingsqu": 164, "transformer2dmodel_attentionmaskaddreshap": 165, "transformer2dmodel_constantofshapewithmul": 166, "transformer2dmodel_ffnslic": 167, "transformer2dmodel_ffnslice_1": 168, "transformer2dmodel_qkvprereshap": 169, "transformer2dmodel_qkvreshap": 170, "transformer2dmodel_qkvreshape4d": 171, "transformer2dmodel_encoderhiddenstatesreshap": 172, "transformer2dmodel_getsamplebatch": 173, "transformer2dmodel_instancenormreshapefromadd": 174, "transformer2dmodel_instancenormreshapefromconcat": 175, "transformer2dmodel_sampleslic": 176, "transformer2dmodel_upblockres": 177, "transpose_batch_matmul": 178, "word_embed": 179, "tf_util": 180, "torch_util": 181, "optim": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 316, 321, 324], "benchmark": [184, 317, 329, 354, 373], "config": [185, 318, 328, 348, 351], "distil": [186, 319, 328, 342, 343, 345], "dynam": [187, 188, 189, 365, 380], "drop_and_restore_util": 187, "evolut": 188, "mixtur": [191, 192], "auto_distil": 191, "model": [193, 215, 216, 217, 299, 320, 329, 341, 344, 349, 350, 353, 354, 372, 378], "na": [194, 195, 196, 343], "basic_na": 194, "optimizer_tf": [198, 322, 328], "pipelin": [199, 323, 328, 378], "prune": [200, 206, 343, 345, 379], "pytorch_prun": [201, 202, 203, 204, 205, 206, 207, 208, 209], "criteria": 201, "pruner": 205, "reg": 207, "schedul": 208, "util": [209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223], "quantiz": [210, 343, 345, 354, 380], "trainer": [211, 325, 328, 342, 379, 380], "get_throughput": 212, "metric": [214, 342, 376, 379, 380], "modeling_bert_dynam": 216, "modeling_roberta_dynam": 217, "object": [218, 377, 380], "utility_tf": 220, "preprocess": [221, 222, 223, 365], "data_augment": 221, "version": [224, 347], "sparsity_al": 225, "test_add_cls_token": 226, "test_add_embed": 227, "test_attention_output_layer_norm_length_adaptive_keep_indic": 228, "test_attention_reshap": 229, "test_bert_mini_fp32": 230, "test_binary_op": 231, "test_binaryop": 232, "test_cast_to": 233, "test_concat": 234, "test_conv_reshap": 235, "test_decoder_attn_reshap": 236, "test_dispatcher_tuning_acc": 237, "test_dispatcher_tuning_throughput": 238, "test_dynamic_quant": 239, "test_embed": 240, "test_embeddingbag": 241, "test_execution_opt": 242, "test_gelu": 243, "test_gpt_int8": 244, "test_graph_dispatch": 245, "test_insert_input_output_data": 246, "test_is_supported_onnx_graph": 247, "test_last_layer_shap": 248, "test_layer_norm_with_reduce_mean": 249, "test_layer_norm_with_transpos": 250, "test_layernorm": 251, "test_linear": 252, "test_linear_int8": 253, "test_main": 254, "test_matmul": 255, "test_matmul_int8": 256, "test_matmul_with_bias_relu": 257, "test_matmul_with_bias_sigmoid": 258, "test_matmul_with_bias_tanh": 259, "test_merged_embeddingbag": 260, "test_model": 261, "test_onnx_util": 262, "test_operator_adaptor": 263, "test_op": 264, "test_padding_seq": 265, "test_padding_sequ": 266, "test_pattern_dispatch": 267, "test_permut": 268, "test_position_embed": 269, "test_pow": 270, "test_primitive_cache_acc": 271, "test_primitive_cache_throughput": 272, "test_qkv_merg": 273, "test_qkv_reshap": 274, "test_quant_onnx_execut": 275, "test_reshape_after_restore_hidden_st": 276, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 277, "test_reshape_before_restore_hidden_st": 278, "test_siz": 279, "test_softmax": 280, "test_start_end_logit": 281, "test_tanh": 282, "test_text_encod": 283, "test_text_encoder_bf16": 284, "test_tf_util": 285, "test_token_type_embed": 286, "test_transpos": 287, "test_transpose_batch_matmul": 288, "test_unet": 289, "test_unet_bf16": 290, "test_unsqueez": 291, "test_vae_decod": 292, "test_vae_decoder_bf16": 293, "test_weight_sharing_acc": 294, "test_weight_sharing_dispatcher_tuning_acc": 295, "test_weight_sharing_dispatcher_tuning_throughtput": 296, "test_weight_sharing_throughput": 297, "secur": 298, "polici": 298, "report": 298, "vulner": 298, "intel": [299, 327, 332, 341, 343, 385], "extens": [299, 327, 332, 341, 343, 385], "transform": [299, 327, 332, 341, 343, 345, 358, 385], "acceler": [299, 345, 358, 362], "base": [299, 343], "platform": [299, 357, 371], "select": 299, "public": 299, "event": 299, "api": [300, 301, 302, 303, 304, 305, 309, 310, 315, 316, 326, 328, 329, 344, 350, 358], "c": [301, 304, 310, 350], "python": [302, 305, 350], "document": [303, 332, 385], "exampl": [303, 328, 329, 330, 343, 344, 350, 353, 373, 377, 378, 383], "dispatch": [307, 351], "engin": [309, 311, 336, 343, 345, 347, 349, 351, 353, 354, 357, 389], "kernel": [310, 312, 315, 333, 351, 358, 362, 365, 373, 386], "operator_desc": [313, 360, 361], "oper": [314, 350, 355], "specif": 314, "type": [314, 348, 379], "pytorch": [321, 328, 329, 342, 343], "tensorflow": [324, 328, 342, 343], "user": [326, 337, 358, 360, 361, 382, 390], "face": 326, "architectur": [327, 349], "autodistil": 328, "design": [328, 354], "framework": [328, 360, 361], "criterion": [328, 342], "knowledgedistillationloss": 328, "intermediatelayersknowledgedistillationloss": 328, "usag": [328, 342, 344, 360, 361, 373, 379], "flash": 328, "regular": 328, "introduct": [329, 340, 342, 344, 348, 350, 351, 352, 353, 356, 358, 360, 361, 362, 363, 367, 372, 376, 377, 378, 379, 380], "get": [329, 340, 341, 345, 350, 354, 376, 380], "start": [329, 340, 341, 345, 376, 380], "stock": [329, 343], "ipex": [329, 343], "output": [329, 341], "featur": [331, 360, 361, 380, 384], "welcom": [332, 385], "section": [332, 385], "implement": [334, 387], "detail": [334, 365, 368, 387], "perform": [335, 357, 358, 370, 371, 388], "neural": [336, 343, 345, 347, 349, 357, 389], "guid": [337, 382, 390], "contributor": [338, 339], "coven": [338, 339], "code": [338, 339], "conduct": [338, 339], "our": 338, "pledg": 338, "standard": 338, "respons": 338, "scope": 338, "enforc": 338, "contribut": 339, "guidelin": 339, "pull": 339, "request": 339, "checklist": 339, "templat": 339, "support": [339, 340, 341, 344, 353, 357, 358, 376, 377, 380], "data": [340, 364, 371], "augment": 340, "instal": [340, 341, 346, 347, 354, 358], "depend": 340, "script": [340, 342, 379, 380], "paramet": 340, "text": 340, "gener": [340, 349], "argument": 340, "overview": 341, "recommend": 341, "hardwar": [341, 346], "valid": [341, 346, 371], "environ": [341, 346, 354], "how": [341, 351, 372], "work": [341, 362], "1": [341, 349, 350, 354, 355, 372], "prerequisit": [341, 346, 347, 354, 365], "2": [341, 349, 354, 355, 372], "from": [341, 346, 347], "pypi": [341, 346], "conda": 341, "3": [341, 349, 372], "sourc": [341, 346], "To": [341, 354], "run": [341, 349, 350, 354, 372], "requir": [341, 346], "prepar": [341, 353, 354, 372], "dataset": [341, 354], "compress": 341, "4": [341, 349, 371], "infer": [341, 349, 359, 378], "expect": 341, "summari": [341, 376], "next": 341, "step": 341, "learn": 341, "more": [341, 351, 362], "knowledg": [342, 343], "intermedi": 342, "layer": [342, 366], "creat": [342, 352, 379, 380], "an": [342, 353, 379, 380], "instanc": [342, 379, 380], "option": [342, 351, 379, 380], "distillationconfig": 342, "length": [343, 345], "adapt": [343, 345], "auto": 343, "orchestr": 343, "refer": [343, 358], "deploy": 343, "dens": [343, 362], "spars": [343, 350, 362, 363, 364, 366, 369, 372], "export": 344, "onnx": [344, 349, 353, 354], "matrix": [344, 357, 358, 365, 377, 380], "fp32": 344, "bf16": 344, "int8": [344, 354, 378], "For": [344, 373], "executor": [344, 355, 378], "linux": 346, "window": 346, "system": 346, "softwar": 346, "stabl": 347, "pip": 347, "binari": [347, 349, 360], "deploi": [347, 349], "bare": 347, "metal": 347, "add": [348, 355], "custom": [348, 349, 355], "regist": [348, 355], "node": [348, 352], "set": [348, 350], "map": [348, 352], "fuse": 348, "new": [348, 352], "after": 348, "fusion": [348, 352], "integr": 349, "tf": 349, "us": [349, 365], "through": 349, "manual": 349, "yaml": 349, "weight": [349, 365, 372], "build": [349, 358, 373], "profil": [350, 370], "profl": 350, "you": 350, "can": 350, "onli": 350, "engine_profil": 350, "befor": 350, "part": 350, "csv": 350, "ratio": 350, "total": 350, "level": 350, "json": 350, "iter": 350, "tune": [351, 354, 380], "best": 351, "relat": 351, "runtim": 351, "turn": 351, "mechan": 351, "dict": 352, "obtain": 352, "necessari": 352, "inform": [352, 375], "construct": 352, "establish": 352, "connect": 352, "remov": [352, 356], "old": 352, "insert": 352, "ir": [353, 354], "format": [353, 364, 374], "low": 354, "precis": 354, "its": 354, "accuraci": [354, 380], "h": 355, "includ": 355, "cpp": 355, "src": 355, "recogn": 356, "represent": 356, "pars": 356, "list": [356, 379], "search": 356, "each": 356, "straight": 356, "chain": 356, "splice": 356, "sub": 356, "main": 356, "duplic": 356, "result": [356, 372], "configur": [357, 371], "librari": 358, "test": 358, "sparse_matmul": [358, 373], "3d": 359, "memori": 359, "layout": 359, "spmm_vnni": [359, 373], "cach": 359, "issu": 359, "injector": [360, 361], "param_typ": [360, 361], "hpp": [360, 361], "jit_binaryop_injector": 360, "develop": [360, 361, 373], "": [360, 361], "perspect": [360, 361], "element": 361, "wise": 361, "alpha": 361, "beta": 361, "scale": 361, "jit_eltwise_injector": 361, "naiv": 362, "tile": 362, "effici": 362, "per": 362, "thread": [362, 371], "prefetch": 362, "amx": 363, "brief": 363, "isa": 363, "avx512f": 364, "kei": 364, "instruct": 364, "loop": 364, "quant": 365, "problem": [365, 366, 367, 368], "descript": [365, 366, 368], "differ": 365, "jit": 365, "path": 365, "small_wei": 365, "large_wei": 365, "normal": 366, "layernorm": 366, "pre": 366, "comput": 366, "spmm": 366, "direct": 366, "layernorm_ba": [366, 373], "statement": 367, "matmul_p2031_2013": 367, "matmul_avx512f_p2031_p2013": [367, 373], "matmul_noperm_p2031_p1302": 367, "matmul_vnni_noperm_p2013_p1302": 367, "beforehand": 367, "mha": [368, 373], "calcul": 368, "vnni": 369, "On": 369, "fly": 369, "activ": 369, "candid": 369, "verbos": 370, "vtune": 370, "sde": 370, "singl": 371, "multi": 371, "visual": 372, "distribut": 372, "setup": 372, "below": 372, "command": 372, "analysi": 372, "spmm_avx512f": 373, "spmm_amx_bf16_x16": 373, "eltwiseop": 373, "transpose_matmul": 373, "matmul_vnni_noperm_p2031_p1302": 373, "attent": 373, "static": [373, 380], "dynamic_quant_matmul": 373, "dynamic_qu": 373, "input": 374, "legal": 375, "licens": 375, "citat": 375, "trademark": 375, "prunerconfig": 379, "pruningconfig": 379, "fundament": 380, "approach": 380, "post": 380, "train": 380, "awar": 380, "quantizationconfig": 380, "releas": 381, "note": 381}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [191, "module-contents"], [193, "module-contents"], [194, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [200, "module-contents"], [201, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [207, "module-contents"], [208, "module-contents"], [209, "module-contents"], [210, "module-contents"], [211, "module-contents"], [214, "module-contents"], [216, "module-contents"], [217, "module-contents"], [218, "module-contents"], [219, "module-contents"], [220, "module-contents"], [221, "module-contents"], [223, "module-contents"], [226, "module-contents"], [227, "module-contents"], [228, "module-contents"], [229, "module-contents"], [230, "module-contents"], [231, "module-contents"], [232, "module-contents"], [233, "module-contents"], [234, "module-contents"], [235, "module-contents"], [236, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [241, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [247, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [185, "classes"], [186, "classes"], [188, "classes"], [191, "classes"], [193, "classes"], [194, "classes"], [196, "classes"], [197, "classes"], [198, "classes"], [200, "classes"], [201, "classes"], [204, "classes"], [205, "classes"], [206, "classes"], [207, "classes"], [208, "classes"], [210, "classes"], [211, "classes"], [214, "classes"], [216, "classes"], [217, "classes"], [218, "classes"], [220, "classes"], [221, "classes"], [223, "classes"], [226, "classes"], [227, "classes"], [228, "classes"], [229, "classes"], [230, "classes"], [231, "classes"], [232, "classes"], [233, "classes"], [234, "classes"], [235, "classes"], [236, "classes"], [237, "classes"], [238, "classes"], [239, "classes"], [240, "classes"], [241, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [247, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [254, "classes"], [255, "classes"], [256, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [10, "functions"], [14, "functions"], [15, "functions"], [36, "functions"], [48, "functions"], [100, "functions"], [125, "functions"], [180, "functions"], [181, "functions"], [184, "functions"], [185, "functions"], [187, "functions"], [188, "functions"], [199, "functions"], [201, "functions"], [204, "functions"], [205, "functions"], [207, "functions"], [208, "functions"], [209, "functions"], [216, "functions"], [217, "functions"], [219, "functions"], [220, "functions"], [223, "functions"]], "Attributes": [[0, "attributes"], [36, "attributes"], [100, "attributes"], [180, "attributes"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [36, "submodules"], [100, "submodules"], [183, "submodules"], [189, "submodules"], [190, "submodules"], [192, "submodules"], [195, "submodules"], [202, "submodules"], [213, "submodules"], [215, "submodules"], [222, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[11, "subpackages"], [182, "subpackages"], [190, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[36, "package-contents"], [100, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[182, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[183, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[184, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[185, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[186, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[189, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[190, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[192, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[193, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[195, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[197, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[199, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[200, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "intel_extension_for_transformers.optimization.quantization": [[210, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[211, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[212, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[213, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[214, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[215, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[216, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[217, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[218, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[219, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[220, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[221, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[222, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[223, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[224, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[225, "module-sparsity_all"]], "test_add_cls_token": [[226, "module-test_add_cls_token"]], "test_add_embeddings": [[227, "module-test_add_embeddings"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[228, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[229, "module-test_attention_reshape"]], "test_bert_mini_fp32": [[230, "module-test_bert_mini_fp32"]], "test_binary_op": [[231, "module-test_binary_op"]], "test_binaryop": [[232, "module-test_binaryop"]], "test_cast_to": [[233, "module-test_cast_to"]], "test_concat": [[234, "module-test_concat"]], "test_conv_reshape": [[235, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[236, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[237, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[238, "module-test_dispatcher_tuning_throughput"]], "test_dynamic_quantization": [[239, "module-test_dynamic_quantization"]], "test_embedding": [[240, "module-test_embedding"]], "test_embeddingbag": [[241, "module-test_embeddingbag"]], "test_execution_options": [[242, "module-test_execution_options"]], "test_gelu": [[243, "module-test_gelu"]], "test_gpt_int8": [[244, "module-test_gpt_int8"]], "test_graph_dispatch": [[245, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[246, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[247, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[248, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[249, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[250, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[251, "module-test_layernorm"]], "test_linear": [[252, "module-test_linear"]], "test_linear_int8": [[253, "module-test_linear_int8"]], "test_main": [[254, "module-test_main"]], "test_matmul": [[255, "module-test_matmul"]], "test_matmul_int8": [[256, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[257, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[258, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[259, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[260, "module-test_merged_embeddingbag"]], "test_model": [[261, "module-test_model"]], "test_onnx_utils": [[262, "module-test_onnx_utils"]], "test_operator_adaptor": [[263, "module-test_operator_adaptor"]], "test_ops": [[264, "module-test_ops"]], "test_padding_seq": [[265, "module-test_padding_seq"]], "test_padding_sequence": [[266, "module-test_padding_sequence"]], "test_pattern_dispatch": [[267, "module-test_pattern_dispatch"]], "test_permute": [[268, "module-test_permute"]], "test_position_embeddings": [[269, "module-test_position_embeddings"]], "test_pow": [[270, "module-test_pow"]], "test_primitive_cache_acc": [[271, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[272, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[273, "module-test_qkv_merge"]], "test_qkv_reshape": [[274, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[275, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[276, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[277, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[278, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[279, "module-test_size"]], "test_softmax": [[280, "module-test_softmax"]], "test_start_end_logits": [[281, "module-test_start_end_logits"]], "test_tanh": [[282, "module-test_tanh"]], "test_text_encoder": [[283, "module-test_text_encoder"]], "test_text_encoder_bf16": [[284, "module-test_text_encoder_bf16"]], "test_tf_utils": [[285, "module-test_tf_utils"]], "test_token_type_embeddings": [[286, "module-test_token_type_embeddings"]], "test_transpose": [[287, "module-test_transpose"]], "test_transpose_batch_matmul": [[288, "module-test_transpose_batch_matmul"]], "test_unet": [[289, "module-test_unet"]], "test_unet_bf16": [[290, "module-test_unet_bf16"]], "test_unsqueeze": [[291, "module-test_unsqueeze"]], "test_vae_decoder": [[292, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[293, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[294, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[295, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[296, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[297, "module-test_weight_sharing_throughput"]], "Security Policy": [[298, "security-policy"]], "Report a Vulnerability": [[298, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[299, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[299, "selected-publications-events"]], "API": [[300, "api"]], "C++ APIs": [[301, "c-apis"], [304, "c-apis"]], "Python APIs": [[302, "python-apis"], [305, "python-apis"]], "API Document Example": [[303, "api-document-example"]], "Compile": [[306, "compile"]], "Class dispatcher": [[307, "class-dispatcher"]], "Graph": [[308, "graph"]], "Engine API": [[309, "engine-api"]], "Kernels C++ APIs": [[310, "kernels-c-apis"]], "Class engine": [[311, "class-engine"]], "Class Kernel": [[312, "class-kernel"]], "Class operator_desc": [[313, "class-operator-desc"]], "Operator Specific Types": [[314, "operator-specific-types"]], "Kernel APIs": [[315, "kernel-apis"]], "Optimization APIs": [[316, "optimization-apis"]], "Benchmark": [[317, "benchmark"], [329, "benchmark"]], "Config": [[318, "config"]], "Distillation": [[319, "distillation"], [342, "distillation"], [342, "id1"], [343, "distillation"], [345, "distillation"]], "Model": [[320, "model"]], "PyTorch Optimizer": [[321, "pytorch-optimizer"]], "Optimizer_tf": [[322, "optimizer-tf"]], "Pipeline": [[323, "pipeline"], [378, "pipeline"]], "TensorFlow Optimizer": [[324, "tensorflow-optimizer"]], "Trainer": [[325, "trainer"]], "User-facing API": [[326, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[327, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[328, "autodistillation-design"]], "AutoDistillation Pipeline": [[328, "autodistillation-pipeline"]], "Framework Class Design": [[328, "framework-class-design"]], "Criterion Class Design": [[328, "criterion-class-design"]], "KnowledgeDistillationLoss": [[328, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[328, "intermediatelayersknowledgedistillationloss"]], "Usage": [[328, "usage"], [360, "usage"], [361, "usage"], [373, "usage"], [379, "usage"]], "Pytorch": [[328, "pytorch"]], "AutoDistillation API in Trainer": [[328, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[328, "flash-distillation-config-example"]], "Regular distillation config example": [[328, "regular-distillation-config-example"]], "AutoDistillation config example": [[328, "autodistillation-config-example"], [328, "id1"]], "Tensorflow": [[328, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[328, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[328, "distillation-config-example"]], "Introduction": [[329, "introduction"], [340, "introduction"], [342, "introduction"], [344, "introduction"], [348, "introduction"], [350, "introduction"], [351, "introduction"], [352, "introduction"], [353, "introduction"], [356, "introduction"], [358, "introduction"], [360, "introduction"], [361, "introduction"], [362, "introduction"], [367, "introduction"], [372, "introduction"], [376, "introduction"], [377, "introduction"], [378, "introduction"], [379, "introduction"], [380, "introduction"]], "Get Started with Benchmark API": [[329, "get-started-with-benchmark-api"]], "Examples": [[329, "examples"], [343, "examples"], [344, "examples"], [373, "examples"], [373, "id1"], [373, "id2"], [373, "id3"], [373, "id4"], [373, "id5"], [373, "id6"], [373, "id7"], [373, "id8"], [373, "id9"], [373, "id10"], [373, "id11"], [378, "examples"]], "Stock Pytorch Model": [[329, "stock-pytorch-model"]], "IPEX Model": [[329, "ipex-model"]], "Benchmark Output": [[329, "benchmark-output"]], "Example": [[330, "example"], [383, "example"]], "Features": [[331, "features"], [384, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[332, "welcome-to-intel-extension-for-transformers-documentation"], [385, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[332, "sections"], [385, "sections"]], "Kernels": [[333, "kernels"], [386, "kernels"]], "Implementation Details": [[334, "implementation-details"], [387, "implementation-details"]], "Performance": [[335, "performance"], [357, "performance"], [358, "performance"], [388, "performance"]], "Neural Engine": [[336, "neural-engine"], [389, "neural-engine"]], "User Guide": [[337, "user-guide"], [382, "user-guide"], [390, "user-guide"]], "Contributor Covenant Code of Conduct": [[338, "contributor-covenant-code-of-conduct"], [339, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[338, "our-pledge"]], "Our Standards": [[338, "our-standards"]], "Our Responsibilities": [[338, "our-responsibilities"]], "Scope": [[338, "scope"]], "Enforcement": [[338, "enforcement"]], "Attribution": [[338, "attribution"]], "Contribution Guidelines": [[339, "contribution-guidelines"]], "Pull Request Checklist": [[339, "pull-request-checklist"]], "Pull Request Template": [[339, "pull-request-template"]], "Support": [[339, "support"], [341, "support"]], "Data Augmentation": [[340, "data-augmentation"], [340, "id1"]], "Getting Started": [[340, "getting-started"], [345, "getting-started"]], "Install Dependency": [[340, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[340, "install-intel-extension-for-transformers"]], "Script": [[340, "script"]], "Parameters of Data Augmentation": [[340, "parameters-of-data-augmentation"]], "Supported Augmenter": [[340, "supported-augmenter"]], "Text Generation Augmenter": [[340, "text-generation-augmenter"]], "Augmenter Arguments:": [[340, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[341, "intel-extension-for-transformers"]], "Overview": [[341, "overview"]], "Recommended Hardware": [[341, "recommended-hardware"]], "Validated Hardware Environment": [[341, "validated-hardware-environment"], [346, "validated-hardware-environment"]], "How it Works": [[341, "how-it-works"]], "Get Started": [[341, "get-started"], [380, "get-started"]], "1. Prerequisites": [[341, "prerequisites"]], "2. Installation": [[341, "installation"]], "2.1 Install from PyPi": [[341, "install-from-pypi"]], "2.2 Install from Conda": [[341, "install-from-conda"]], "2.3 Install from Source": [[341, "install-from-source"]], "3. How To Run": [[341, "how-to-run"]], "3.1 Install Requirements": [[341, "install-requirements"]], "3.2 Prepare Datasets": [[341, "prepare-datasets"]], "3.3 Model Compression": [[341, "model-compression"]], "3.4 Model Inference": [[341, "model-inference"]], "Expected Output": [[341, "expected-output"]], "Summary and Next Steps": [[341, "summary-and-next-steps"]], "Learn More": [[341, "learn-more"]], "Knowledge Distillation": [[342, "knowledge-distillation"], [343, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[342, "intermediate-layer-knowledge-distillation"]], "usage": [[342, "usage"]], "Pytorch Script:": [[342, "pytorch-script"]], "Tensorflow Script:": [[342, "tensorflow-script"]], "Create an Instance of Metric": [[342, "create-an-instance-of-metric"], [380, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[342, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[342, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[342, "distill-with-trainer"]], "Quantization": [[343, "quantization"], [345, "quantization"], [380, "quantization"]], "Stock PyTorch Examples": [[343, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[343, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[343, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[343, "length-adaptive-transformers"]], "Pruning": [[343, "pruning"], [345, "pruning"], [379, "pruning"]], "Auto Distillation (NAS Based)": [[343, "auto-distillation-nas-based"]], "Orchestrate": [[343, "orchestrate"]], "Reference Deployment on Neural Engine": [[343, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[343, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[343, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[344, "export-to-onnx"]], "Supported Model Export Matrix": [[344, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[344, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[344, "export-to-bf16-onnx-model"]], "API usage": [[344, "api-usage"]], "Export to INT8 ONNX Model": [[344, "export-to-int8-onnx-model"]], "For executor backend": [[344, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[345, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[345, "transformers-accelerated-neural-engine"]], "Installation": [[346, "installation"], [347, "installation"], [358, "installation"]], "Linux Installation": [[346, "linux-installation"]], "Prerequisites": [[346, "prerequisites"], [346, "id1"], [347, "prerequisites"]], "Install from Pypi": [[346, "install-from-pypi"], [346, "id2"]], "Install from Source": [[346, "install-from-source"], [346, "id3"]], "Windows Installation": [[346, "windows-installation"]], "System Requirements": [[346, "system-requirements"]], "Validated Software Environment": [[346, "validated-software-environment"]], "Install": [[347, "install"]], "Install stable version intel_extension_for_transformers from pip": [[347, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[347, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[348, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[348, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[348, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[348, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[349, "deploy-and-integration"]], "1. Architecture": [[349, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[349, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[349, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[349, "run-the-inference-by-engine"], [349, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[349, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[349, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[349, "integrate-neural-engine-as-backend"]], "Profiling": [[350, "profiling"]], "Profling API": [[350, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[350, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[350, "profiling-examples"]], "Parts of CSV Profiling": [[350, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[350, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[350, "operator-profiling-part"]], "Total Profiling Part": [[350, "total-profiling-part"]], "Levels of JSON Profiling": [[350, "levels-of-json-profiling"]], "Model Level": [[350, "model-level"]], "Iteration Level": [[350, "iteration-level"]], "Operator Level": [[350, "operator-level"]], "Engine Tuning": [[351, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[351, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[351, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[351, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[351, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[351, "more-tuning-options"]], "Graph Fusion": [[352, "graph-fusion"]], "Pattern Mapping Dict": [[352, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[352, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[352, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[352, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[353, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[353, "supported-onnx-format"]], "Compile Examples": [[353, "compile-examples"]], "Prepare ONNX Model": [[353, "prepare-onnx-model"]], "Compile to IR": [[353, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[354, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[354, "design"]], "Prerequisite": [[354, "prerequisite"]], "Install environment": [[354, "install-environment"]], "Prepare Dataset": [[354, "prepare-dataset"]], "Prepare ONNX model": [[354, "prepare-onnx-model"]], "Run tuning and benchmark": [[354, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[354, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[354, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[355, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[355, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[355, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[356, "pattern-recognize"]], "Pattern Representation": [[356, "pattern-representation"]], "Parse Pattern Representation List": [[356, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[356, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[356, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Neural Engine Support Matrix": [[357, "neural-engine-support-matrix"]], "platform configuration": [[357, "platform-configuration"]], "Transformers-Accelerated Libraries": [[358, "transformers-accelerated-libraries"]], "Build": [[358, "build"], [373, "build"]], "Test": [[358, "test"]], "API reference for users": [[358, "api-reference-for-users"]], "sparse_matmul kernel:": [[358, "sparse-matmul-kernel"]], "Supported Matrix": [[358, "supported-matrix"]], "3D Inference": [[359, "d-inference"]], "Memory Layout in SPMM_VNNI": [[359, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[359, "cache-issues"]], "SPMM_VNNI 3D Inference": [[359, "spmm-vnni-3d-inference"]], "Binary Injectors": [[360, "binary-injectors"]], "Framework Features": [[360, "framework-features"], [361, "framework-features"]], "param_type.hpp": [[360, "param-type-hpp"]], "operator_desc.hpp": [[360, "operator-desc-hpp"], [361, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[360, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[360, "developer-s-perspective"]], "User\u2019s Perspective": [[360, "user-s-perspective"], [361, "user-s-perspective"]], "Element-wise Injector": [[361, "element-wise-injector"]], "param_types.hpp": [[361, "param-types-hpp"]], "alpha,beta,scale meaning": [[361, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[361, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[361, "developer-s-perspective"]], "Dense and Sparse": [[362, "dense-and-sparse"]], "Naive": [[362, "naive"]], "Tile": [[362, "tile"]], "Efficient kernel": [[362, "efficient-kernel"]], "More work per thread": [[362, "more-work-per-thread"]], "Prefetch": [[362, "prefetch"]], "Sparse acceleration": [[362, "sparse-acceleration"]], "Sparse GEMM AMX": [[363, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[363, "brief-introduction-for-isas"]], "Pattern": [[363, "pattern"]], "Reorder": [[363, "reorder"]], "Sparse GEMM AVX512F": [[364, "sparse-gemm-avx512f"]], "Key Instruction": [[364, "key-instruction"]], "Sparse Pattern & Data Format": [[364, "sparse-pattern-data-format"]], "Loops": [[364, "loops"]], "Dynamic Quant Matmul": [[365, "dynamic-quant-matmul"]], "problem description": [[365, "problem-description"]], "Kernel details": [[365, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[365, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[365, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[365, "different-jit-paths-for-different-weight-size"]], "small_wei jit-path": [[365, "small-wei-jit-path"]], "large_wei jit-path": [[365, "large-wei-jit-path"]], "Sparse GEMM with Layer-Normalize": [[366, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[366, "problem-description"]], "layernormalized sparse matmul": [[366, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[366, "pre-compute-spmm"]], "Direct Layernorm_ba": [[366, "direct-layernorm-ba"]], "Transposed MatMul": [[367, "transposed-matmul"]], "Problem Statements": [[367, "problem-statements"]], "Matmul_p2031_2013": [[367, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[367, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[367, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[367, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[367, "reorder-beforehand"]], "Transposed MHA": [[368, "transposed-mha"]], "Problem description": [[368, "problem-description"]], "Details": [[368, "details"]], "Reordering": [[368, "reordering"]], "Calculation": [[368, "calculation"]], "Sparse GEMM VNNI": [[369, "sparse-gemm-vnni"]], "On the fly activation reordering": [[369, "on-the-fly-activation-reordering"]], "Candidate patterns": [[369, "candidate-patterns"]], "Performance and Profiling": [[370, "performance-and-profiling"]], "Verbose": [[370, "verbose"]], "VTune": [[370, "vtune"]], "SDE": [[370, "sde"]], "Validated Performance Data": [[371, "validated-performance-data"]], "Single Thread": [[371, "single-thread"]], "Multi Thread (Thread = 4)": [[371, "multi-thread-thread-4"]], "Platform Configuration": [[371, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[372, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[372, "setups"]], "1. Prepare the sparse model": [[372, "prepare-the-sparse-model"]], "2. Run below commands": [[372, "run-below-commands"]], "3. Analysis results": [[372, "analysis-results"]], "Benchmark for Kernels": [[373, "benchmark-for-kernels"]], "sparse_matmul": [[373, "sparse-matmul"]], "spmm_avx512f": [[373, "spmm-avx512f"]], "spmm_vnni": [[373, "spmm-vnni"]], "spmm_amx_bf16_x16": [[373, "spmm-amx-bf16-x16"]], "eltwiseop": [[373, "eltwiseop"]], "layernorm_ba": [[373, "layernorm-ba"]], "transpose_matmul": [[373, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[373, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[373, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[373, "softmax"]], "attention": [[373, "attention"]], "Static MHA": [[373, "static-mha"]], "dynamic_quant_matmul": [[373, "dynamic-quant-matmul"]], "dynamic_quant": [[373, "dynamic-quant"]], "For developers": [[373, "for-developers"]], "Inputs format": [[374, "inputs-format"]], "Legal Information": [[375, "legal-information"]], "License": [[375, "license"]], "Citation": [[375, "citation"]], "Trademarks": [[375, "trademarks"]], "Metrics": [[376, "metrics"]], "Supported Metric": [[376, "supported-metric"]], "Metric Class Summary": [[376, "metric-class-summary"]], "Get Start with Metrics": [[376, "get-start-with-metrics"]], "Objective": [[377, "objective"]], "Supported Objectives Matrix:": [[377, "supported-objectives-matrix"]], "Examples:": [[377, "examples"]], "Pipeline Inference for INT8 Model": [[378, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[378, "pipeline-inference-for-executor-backend"]], "Pruning types": [[379, "pruning-types"]], "Script:": [[379, "script"], [380, "script"]], "Create an instance of Metric": [[379, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[379, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[379, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[379, "prune-with-trainer"]], "Quantization Fundamentals": [[380, "quantization-fundamentals"]], "Quantization Approach": [[380, "quantization-approach"]], "Post Training Dynamic Quantization": [[380, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[380, "post-training-static-quantization"]], "Quantization Aware Training": [[380, "quantization-aware-training"]], "Accuracy Aware Tuning": [[380, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[380, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[380, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[380, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[380, "quantization-with-trainer"]], "Release": [[381, "release"]], "Release Notes": [[381, "release-notes"]], "Contents:": [[384, null], [389, null]]}, "indexentries": {"exampleclass (class in intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass"]], "attr1 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr1"]], "attr2 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr2"]], "attr5 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr5"]], "attribute1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.attribute1"]], "function1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function1"]], "function2() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function2"]], "function3() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function3"]], "generator1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.generator1"]], "intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "method1() (intel_extension_for_transformers.api_doc_example.exampleclass method)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.method1"]], "module": [[0, "module-intel_extension_for_transformers.api_doc_example"], [1, "module-intel_extension_for_transformers.backends"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [182, "module-intel_extension_for_transformers.backends.neural_engine"], [183, "module-intel_extension_for_transformers"], [184, "module-intel_extension_for_transformers.optimization.benchmark"], [185, "module-intel_extension_for_transformers.optimization.config"], [186, "module-intel_extension_for_transformers.optimization.distillation"], [187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [189, "module-intel_extension_for_transformers.optimization.dynamic"], [190, "module-intel_extension_for_transformers.optimization"], [191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [192, "module-intel_extension_for_transformers.optimization.mixture"], [193, "module-intel_extension_for_transformers.optimization.model"], [194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [195, "module-intel_extension_for_transformers.optimization.nas"], [196, "module-intel_extension_for_transformers.optimization.nas.nas"], [197, "module-intel_extension_for_transformers.optimization.optimizer"], [198, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [199, "module-intel_extension_for_transformers.optimization.pipeline"], [200, "module-intel_extension_for_transformers.optimization.pruning"], [201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"], [202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"], [204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"], [206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"], [208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"], [209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"], [210, "module-intel_extension_for_transformers.optimization.quantization"], [211, "module-intel_extension_for_transformers.optimization.trainer"], [212, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [213, "module-intel_extension_for_transformers.optimization.utils"], [214, "module-intel_extension_for_transformers.optimization.utils.metrics"], [215, "module-intel_extension_for_transformers.optimization.utils.models"], [216, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [217, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [218, "module-intel_extension_for_transformers.optimization.utils.objectives"], [219, "module-intel_extension_for_transformers.optimization.utils.utility"], [220, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [221, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [222, "module-intel_extension_for_transformers.preprocessing"], [223, "module-intel_extension_for_transformers.preprocessing.utils"], [224, "module-intel_extension_for_transformers.version"], [225, "module-sparsity_all"], [226, "module-test_add_cls_token"], [227, "module-test_add_embeddings"], [228, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [229, "module-test_attention_reshape"], [230, "module-test_bert_mini_fp32"], [231, "module-test_binary_op"], [232, "module-test_binaryop"], [233, "module-test_cast_to"], [234, "module-test_concat"], [235, "module-test_conv_reshape"], [236, "module-test_decoder_attn_reshape"], [237, "module-test_dispatcher_tuning_acc"], [238, "module-test_dispatcher_tuning_throughput"], [239, "module-test_dynamic_quantization"], [240, "module-test_embedding"], [241, "module-test_embeddingbag"], [242, "module-test_execution_options"], [243, "module-test_gelu"], [244, "module-test_gpt_int8"], [245, "module-test_graph_dispatch"], [246, "module-test_insert_input_output_data"], [247, "module-test_is_supported_onnx_graph"], [248, "module-test_last_layer_shape"], [249, "module-test_layer_norm_with_reduce_mean"], [250, "module-test_layer_norm_with_transpose"], [251, "module-test_layernorm"], [252, "module-test_linear"], [253, "module-test_linear_int8"], [254, "module-test_main"], [255, "module-test_matmul"], [256, "module-test_matmul_int8"], [257, "module-test_matmul_with_bias_relu"], [258, "module-test_matmul_with_bias_sigmoid"], [259, "module-test_matmul_with_bias_tanh"], [260, "module-test_merged_embeddingbag"], [261, "module-test_model"], [262, "module-test_onnx_utils"], [263, "module-test_operator_adaptor"], [264, "module-test_ops"], [265, "module-test_padding_seq"], [266, "module-test_padding_sequence"], [267, "module-test_pattern_dispatch"], [268, "module-test_permute"], [269, "module-test_position_embeddings"], [270, "module-test_pow"], [271, "module-test_primitive_cache_acc"], [272, "module-test_primitive_cache_throughput"], [273, "module-test_qkv_merge"], [274, "module-test_qkv_reshape"], [275, "module-test_quant_onnx_execute"], [276, "module-test_reshape_after_restore_hidden_states"], [277, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [278, "module-test_reshape_before_restore_hidden_states"], [279, "module-test_size"], [280, "module-test_softmax"], [281, "module-test_start_end_logits"], [282, "module-test_tanh"], [283, "module-test_text_encoder"], [284, "module-test_text_encoder_bf16"], [285, "module-test_tf_utils"], [286, "module-test_token_type_embeddings"], [287, "module-test_transpose"], [288, "module-test_transpose_batch_matmul"], [289, "module-test_unet"], [290, "module-test_unet_bf16"], [291, "module-test_unsqueeze"], [292, "module-test_vae_decoder"], [293, "module-test_vae_decoder_bf16"], [294, "module-test_weight_sharing_acc"], [295, "module-test_weight_sharing_dispatcher_tuning_acc"], [296, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [297, "module-test_weight_sharing_throughput"]], "module_debug_level1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.module_debug_level1"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "binaryop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.binaryop method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernorm method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_resize2gather (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather.AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removelistconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct.RemoveListConstruct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "resnetblock_instancenormreshapefromconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv.ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "resnetblock_instancenormreshapefromdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv.ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_instancenormreshapefromadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd.Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "transformer2dmodel_instancenormreshapefromconcat (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat.Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transformer2dmodel_upblockresize (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize.Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[182, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[183, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[184, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[185, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[185, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[186, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[186, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[186, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[187, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[187, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[189, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[190, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[192, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[193, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[193, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[193, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[195, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[196, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[197, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[199, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[199, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[200, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[200, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[200, "module-intel_extension_for_transformers.optimization.pruning"]], "gradientcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion"]], "magnitudecriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion"]], "pruningcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion"]], "snipcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion"]], "snipmomentumcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion"]], "get_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.get_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.on_before_optimizer_step"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_step_begin"]], "register_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.register_criterion"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "basepattern (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern"]], "m (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.M"]], "n (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.N"]], "patternninm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM"]], "patternnxm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM"]], "adjust_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.adjust_ratio"]], "block_size (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.block_size"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.check_layer_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.config"]], "count_new_masked_cnts() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.count_new_masked_cnts"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_block_size_dict"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_block_size_dict"]], "get_ele_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_ele_mask_per_threshold"]], "get_least_ninm_mask_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_least_ninm_mask_from_data"]], "get_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_mask_per_threshold"]], "get_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_masks_global"]], "get_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_local"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_pattern_lock_masks"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_reduced_masks_from_data"]], "get_single_mask_per_target_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_single_mask_per_target_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio"]], "get_sparsity_ratio_each_layer() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio_each_layer"]], "get_sparsity_ratio_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "invalid_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.invalid_layers"]], "is_global (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.is_global"]], "keep_mask_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.keep_mask_layers"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.max_sparsity_ratio_per_op"]], "min_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.min_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.modules"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.pattern"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reduce_scores"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reduce_scores"]], "reduce_tensor() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.reduce_tensor"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_orig_to_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_orig_to_pattern"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_reduced_to_orig"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_reduced_to_orig"]], "target_sparsity (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.target_sparsity"]], "update_new_added_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_new_added_masks"]], "update_progressive_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks"]], "update_progressive_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_global"]], "update_progressive_masks_linear() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_linear"]], "update_progressive_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_local"]], "update_progressive_masks_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_scores"]], "update_residual_cnt() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.update_residual_cnt"]], "basepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner"]], "basicpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner"]], "progressivepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner"]], "check_is_pruned_progressive_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_is_pruned_progressive_step"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.check_is_pruned_step"]], "check_progressive_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_progressive_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.config"]], "criterion (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.criterion"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights"]], "mask_weights_general() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights_general"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.masks"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.max_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_end"]], "parse_valid_pruner_types() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.parse_valid_pruner_types"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pattern"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.pattern"]], "print_progressive_sparsity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.print_progressive_sparsity"]], "pruning_frequency (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pruning_frequency"]], "reg (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.reg"]], "register_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.register_pruner"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scheduler"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scores"]], "set_global_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.set_global_step"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.target_sparsity_ratio"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.update_masks"]], "update_masks_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.update_masks_progressive"]], "pruning (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruning)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.update_config"]], "basereg (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg"]], "grouplasso (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso"]], "alpha (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.alpha"]], "get_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg"]], "get_reg_type() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg_type"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_before_optimizer_step"]], "reg_terms (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.reg_terms"]], "register_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.register_reg"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler"]], "pruningscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler attribute)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.iterativescheduler method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.oneshotscheduler method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.update_sparsity_ratio"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_config"]], "check_key_validity() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_key_validity"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_config"]], "process_weight_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_weight_config"]], "process_yaml_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_yaml_config"]], "reset_none_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.reset_none_to_default"]], "update_params() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.update_params"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[210, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[210, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[211, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[211, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[211, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[212, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[213, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[214, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[214, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[215, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[216, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[217, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[218, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[218, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[218, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[218, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[219, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[219, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[220, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[220, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[220, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[220, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[220, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[221, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[221, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[221, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[221, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[221, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[222, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[223, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[223, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[223, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[224, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[225, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[226, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[226, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[226, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[226, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[227, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[227, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[227, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[227, "module-test_add_embeddings"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[228, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[228, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[228, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[228, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[229, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[229, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[229, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[229, "module-test_attention_reshape"]], "testtorchmodel (class in test_bert_mini_fp32)": [[230, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[230, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[230, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[230, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[231, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[231, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[231, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[231, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[232, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[232, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[232, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[232, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[233, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[233, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[233, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[233, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[234, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[234, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[234, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[234, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[235, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[235, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[235, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[235, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[236, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[236, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[236, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[236, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[237, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[237, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[237, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[237, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[238, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[238, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[238, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[238, "module-test_dispatcher_tuning_throughput"]], "testdynamicquantization (class in test_dynamic_quantization)": [[239, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[239, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[239, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[239, "module-test_dynamic_quantization"]], "testtorchop (class in test_embedding)": [[240, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[240, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[240, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[240, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[241, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[241, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[241, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[241, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[242, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[242, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[242, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[242, "module-test_execution_options"]], "testtorchop (class in test_gelu)": [[243, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[243, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[243, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[243, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[244, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[244, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[244, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[244, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[245, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[245, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[245, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[245, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[246, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[246, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[246, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[246, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[247, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[247, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[247, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[247, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[247, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[248, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[248, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[248, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[248, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[249, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[249, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[249, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[249, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[250, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[250, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[250, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[250, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[251, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[251, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[251, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[251, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[252, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[252, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[252, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[252, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[253, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[253, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[253, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[253, "module-test_linear_int8"]], "testmain (class in test_main)": [[254, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[254, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[254, "test_main.TestMain.tearDownClass"]], "test_main": [[254, "module-test_main"]], "testtorchop (class in test_matmul)": [[255, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[255, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[255, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[255, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[256, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[256, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[256, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[256, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[257, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[257, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[257, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[257, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[258, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[258, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[258, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[258, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[259, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[259, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[259, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[259, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[260, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[260, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[260, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[260, "module-test_merged_embeddingbag"]], "test_model": [[261, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[262, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[262, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[262, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[262, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[263, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[263, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[263, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[263, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[264, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[264, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[264, "test_ops.TestOps.tearDownClass"]], "test_ops": [[264, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[265, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[265, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[265, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[265, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[266, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[266, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[266, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[266, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[267, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[267, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[267, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[267, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[268, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[268, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[268, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[268, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[269, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[269, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[269, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[269, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[270, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[270, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[270, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[270, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[271, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[271, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[271, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[271, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[272, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[272, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[272, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[272, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[273, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[273, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[273, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[273, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[274, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[274, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[274, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[274, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[275, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[275, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[275, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[275, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[276, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[276, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[276, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[276, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[277, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[277, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[277, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[277, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[278, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[278, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[278, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[278, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[279, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[279, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[279, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[279, "module-test_size"]], "testtorchop (class in test_softmax)": [[280, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[280, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[280, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[280, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[281, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[281, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[281, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[281, "module-test_start_end_logits"]], "testtorchop (class in test_tanh)": [[282, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[282, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[282, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[282, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[283, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[283, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[283, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[283, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[284, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[284, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[284, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[284, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[285, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[285, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[285, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[285, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[286, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[286, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[286, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[286, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[287, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[287, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[287, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[287, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[288, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[288, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[288, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[288, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[289, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[289, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[289, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[289, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[290, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[290, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[290, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[290, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[291, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[291, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[291, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[291, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[292, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[292, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[292, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[292, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[293, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[293, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[293, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[293, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[294, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[294, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[294, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[294, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[295, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[295, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[295, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[295, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[296, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[296, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[296, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[296, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[297, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[297, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[297, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[297, "module-test_weight_sharing_throughput"]], "executor (c++ type)": [[307, "_CPPv48executor"]], "executor::dispatcher (c++ class)": [[307, "_CPPv4N8executor10DispatcherE"]], "executor::dispatcher::adaptattrs (c++ function)": [[307, "_CPPv4N8executor10Dispatcher10AdaptAttrsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::adapttensors (c++ function)": [[307, "_CPPv4N8executor10Dispatcher12AdaptTensorsERK6vectorIP6TensorERK6vectorIP6TensorERK6string"]], "executor::dispatcher::dispatcher (c++ function)": [[307, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI14OperatorConfigEPK16ExecutionOptionsPK5Model"], [307, "_CPPv4N8executor10Dispatcher10DispatcherERK10shared_ptrI8OperatorEPK16ExecutionOptionsPK5Model"]], "executor::dispatcher::forward (c++ function)": [[307, "_CPPv4N8executor10Dispatcher7ForwardERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::getexecutekernel (c++ function)": [[307, "_CPPv4N8executor10Dispatcher16GetExecuteKernelERK6vectorIP6TensorERK6vectorIP6TensorERKbRKb"]], "executor::dispatcher::gethash (c++ function)": [[307, "_CPPv4N8executor10Dispatcher7GetHashERK6vectorIP6TensorE"]], "executor::dispatcher::kernelhandler (c++ type)": [[307, "_CPPv4N8executor10Dispatcher13KernelHandlerE"]], "executor::dispatcher::prepare (c++ function)": [[307, "_CPPv4N8executor10Dispatcher7PrepareERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::resetopstatus (c++ function)": [[307, "_CPPv4N8executor10Dispatcher13ResetOpStatusERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::reshape (c++ function)": [[307, "_CPPv4N8executor10Dispatcher7ReshapeERK6vectorIP6TensorERK6vectorIP6TensorE"]], "executor::dispatcher::adapt_action_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher13adapt_action_E"]], "executor::dispatcher::append_it_shape (c++ function)": [[307, "_CPPv4N8executor10Dispatcher15append_it_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::append_ot_shape (c++ function)": [[307, "_CPPv4N8executor10Dispatcher15append_ot_shapeEK6vectorI7int64_tE"]], "executor::dispatcher::cpu_isa_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher8cpu_isa_E"]], "executor::dispatcher::dispatch_table_file_exists_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher27dispatch_table_file_exists_E"]], "executor::dispatcher::do_tuning (c++ function)": [[307, "_CPPv4NK8executor10Dispatcher9do_tuningEv"]], "executor::dispatcher::do_tuning_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher10do_tuning_E"]], "executor::dispatcher::enable_sparse (c++ function)": [[307, "_CPPv4N8executor10Dispatcher13enable_sparseEv"]], "executor::dispatcher::execute_kernel (c++ function)": [[307, "_CPPv4NK8executor10Dispatcher14execute_kernelEv"]], "executor::dispatcher::execute_kernel_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher15execute_kernel_E"]], "executor::dispatcher::execution_options_ptr_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher22execution_options_ptr_E"]], "executor::dispatcher::get_attrs (c++ function)": [[307, "_CPPv4N8executor10Dispatcher9get_attrsEv"]], "executor::dispatcher::get_it_shape (c++ function)": [[307, "_CPPv4N8executor10Dispatcher12get_it_shapeEv"]], "executor::dispatcher::get_ot_shape (c++ function)": [[307, "_CPPv4N8executor10Dispatcher12get_ot_shapeEv"]], "executor::dispatcher::get_reshape_time (c++ function)": [[307, "_CPPv4N8executor10Dispatcher16get_reshape_timeEv"]], "executor::dispatcher::iter_cnt_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher9iter_cnt_E"]], "executor::dispatcher::kernel_handler_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher15kernel_handler_E"]], "executor::dispatcher::kernel_type (c++ function)": [[307, "_CPPv4N8executor10Dispatcher11kernel_typeEv"]], "executor::dispatcher::latency (c++ function)": [[307, "_CPPv4N8executor10Dispatcher7latencyEv"]], "executor::dispatcher::model_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher6model_E"]], "executor::dispatcher::monopoly_kernel_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher16monopoly_kernel_E"]], "executor::dispatcher::name (c++ function)": [[307, "_CPPv4NK8executor10Dispatcher4nameEv"]], "executor::dispatcher::name_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher5name_E"]], "executor::dispatcher::no_tuning_space (c++ function)": [[307, "_CPPv4NK8executor10Dispatcher15no_tuning_spaceEv"]], "executor::dispatcher::no_tuning_space_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher16no_tuning_space_E"]], "executor::dispatcher::operator_conf (c++ function)": [[307, "_CPPv4NK8executor10Dispatcher13operator_confEv"]], "executor::dispatcher::operator_conf_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher14operator_conf_E"]], "executor::dispatcher::perf_ratio_id (c++ function)": [[307, "_CPPv4N8executor10Dispatcher13perf_ratio_idEv"]], "executor::dispatcher::post_op (c++ function)": [[307, "_CPPv4N8executor10Dispatcher7post_opEv"]], "executor::dispatcher::set_attrs (c++ function)": [[307, "_CPPv4N8executor10Dispatcher9set_attrsEKNSt3mapI6string6stringEE"]], "executor::dispatcher::set_enable_sparse (c++ function)": [[307, "_CPPv4N8executor10Dispatcher17set_enable_sparseEKb"]], "executor::dispatcher::set_it_shape (c++ function)": [[307, "_CPPv4N8executor10Dispatcher12set_it_shapeEK6vectorI7int64_tEi"]], "executor::dispatcher::set_latency (c++ function)": [[307, "_CPPv4N8executor10Dispatcher11set_latencyEKf"]], "executor::dispatcher::set_perf_ratio_id (c++ function)": [[307, "_CPPv4N8executor10Dispatcher17set_perf_ratio_idE6string"]], "executor::dispatcher::set_post_op (c++ function)": [[307, "_CPPv4N8executor10Dispatcher11set_post_opERK6string"]], "executor::dispatcher::set_reshape_time (c++ function)": [[307, "_CPPv4N8executor10Dispatcher16set_reshape_timeEKf"]], "executor::dispatcher::set_table_id (c++ function)": [[307, "_CPPv4N8executor10Dispatcher12set_table_idE6string"]], "executor::dispatcher::set_tuning_mode (c++ function)": [[307, "_CPPv4N8executor10Dispatcher15set_tuning_modeERKb"]], "executor::dispatcher::set_weight_shape (c++ function)": [[307, "_CPPv4N8executor10Dispatcher16set_weight_shapeERK6vectorI7int64_tE"]], "executor::dispatcher::sparselib_available_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher20sparselib_available_E"]], "executor::dispatcher::table_id (c++ function)": [[307, "_CPPv4N8executor10Dispatcher8table_idEv"]], "executor::dispatcher::tune_dense_in_sparse_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher21tune_dense_in_sparse_E"]], "executor::dispatcher::type (c++ function)": [[307, "_CPPv4NK8executor10Dispatcher4typeEv"]], "executor::dispatcher::type_ (c++ member)": [[307, "_CPPv4N8executor10Dispatcher5type_E"]], "executor::dispatcher::weight_shape (c++ function)": [[307, "_CPPv4N8executor10Dispatcher12weight_shapeEv"]], "executor::dispatcher::weight_zero_ratio (c++ function)": [[307, "_CPPv4N8executor10Dispatcher17weight_zero_ratioEv"]], "executor::dispatcher::~dispatcher (c++ function)": [[307, "_CPPv4N8executor10DispatcherD0Ev"]], "cpu_instance (c macro)": [[311, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[311, "c.NULL_INSTANCE"]], "jd (c++ type)": [[311, "_CPPv42jd"], [312, "_CPPv42jd"], [313, "_CPPv42jd"], [314, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[311, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[311, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[311, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[311, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[311, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[311, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[311, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[311, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[311, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[311, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[311, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[311, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[311, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[311, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[311, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[311, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[311, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[312, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[312, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [312, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[312, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[312, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[312, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [312, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[312, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dyn_quantize_mha (c++ class)": [[312, "_CPPv4N2jd16dyn_quantize_mhaE"]], "jd::dyn_quantize_mha::dyn_quantize_mha (c++ function)": [[312, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy"], [312, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv"]], "jd::dyn_quantize_mha::~dyn_quantize_mha (c++ function)": [[312, "_CPPv4N2jd16dyn_quantize_mhaD0Ev"]], "jd::dyn_quantize_mha_desc (c++ class)": [[312, "_CPPv4N2jd21dyn_quantize_mha_descE"]], "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc (c++ function)": [[312, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc"], [312, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv"]], "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc (c++ function)": [[312, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[312, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[312, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [312, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[312, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[312, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[312, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [312, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[312, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[312, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[312, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [312, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[312, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[312, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[312, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [312, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[312, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[312, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[312, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [312, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[312, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[312, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[312, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [312, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[312, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[312, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[312, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [312, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[312, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[312, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[312, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [312, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[312, "_CPPv4N2jd11gather_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[312, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[312, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[312, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[312, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [312, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[312, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[312, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[312, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[312, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[312, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[312, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[312, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[312, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [312, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[312, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[312, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[312, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [312, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[312, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[312, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[312, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [312, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[312, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[312, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[312, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [312, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[312, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[312, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[312, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [312, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[312, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[312, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[312, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [312, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[312, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[312, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[312, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [312, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[312, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[312, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[312, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [312, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[312, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[312, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[312, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [312, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[312, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[312, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[312, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[312, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[312, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[312, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[312, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[312, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[312, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[312, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [312, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[312, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[312, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[312, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [312, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[312, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[312, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[312, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [312, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[312, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[312, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[312, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [312, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[312, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[312, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[312, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [312, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[312, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[312, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[312, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [312, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[312, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[312, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[312, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [312, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[312, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[312, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[312, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [312, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[312, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[312, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[312, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [312, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[312, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[312, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[312, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [312, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[312, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[313, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[313, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[313, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[313, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[313, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[313, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[313, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[313, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[313, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[313, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [313, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [313, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[313, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[313, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[313, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[313, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[314, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[314, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[314, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[314, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[314, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[314, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[314, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[314, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[314, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[314, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[314, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[314, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[314, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[314, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[314, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[314, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[314, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[314, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[314, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[314, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::gather_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd13gather_data_tE"]], "jd::ssd::gather_data_t::binaryop_addrs (c++ member)": [[314, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE"]], "jd::ssd::gather_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd13gather_data_t3dstE"]], "jd::ssd::gather_data_t::gather_data_t (c++ function)": [[314, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv"]], "jd::ssd::gather_data_t::idx (c++ member)": [[314, "_CPPv4N2jd3ssd13gather_data_t3idxE"]], "jd::ssd::gather_data_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd13gather_data_t3srcE"]], "jd::ssd::gather_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd14gather_param_tE"]], "jd::ssd::gather_param_t::binary_ts_sizes (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE"]], "jd::ssd::gather_param_t::binaryop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE"]], "jd::ssd::gather_param_t::dst_axis_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE"]], "jd::ssd::gather_param_t::dt (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t2dtE"]], "jd::ssd::gather_param_t::dt_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE"]], "jd::ssd::gather_param_t::extend_mask (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE"]], "jd::ssd::gather_param_t::idx_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE"]], "jd::ssd::gather_param_t::inner_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE"]], "jd::ssd::gather_param_t::loops (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t5loopsE"]], "jd::ssd::gather_param_t::mask (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t4maskE"]], "jd::ssd::gather_param_t::outer_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE"]], "jd::ssd::gather_param_t::remain (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t6remainE"]], "jd::ssd::gather_param_t::src_axis_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE"]], "jd::ssd::gather_param_t::src_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[314, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[314, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[314, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_io (c++ type)": [[314, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[314, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[314, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[314, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[314, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[314, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[314, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[314, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[314, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[314, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[314, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[314, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})