Search.setIndex({"docnames": ["autoapi/clangformat/index", "autoapi/convert_falcon/index", "autoapi/convert_gptneox/index", "autoapi/convert_llama/index", "autoapi/convert_mpt/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/modeling/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_add_zeros/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_baddbmm/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dolly_pattern/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_electra/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_fwk/index", "autoapi/test_gather/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_graph_optimizer/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_neox_rotary_pos_emb/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_slice/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_static_compressed_buffer/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/clangformat/index.rst", "autoapi/convert_falcon/index.rst", "autoapi/convert_gptneox/index.rst", "autoapi/convert_llama/index.rst", "autoapi/convert_mpt/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_add_zeros/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_baddbmm/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dolly_pattern/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_electra/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_fwk/index.rst", "autoapi/test_gather/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_graph_optimizer/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_neox_rotary_pos_emb/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_slice/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_static_compressed_buffer/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">clang-format</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_falcon</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptneox</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_llama</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_mpt</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.resize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.where</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dolly_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_electra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_fwk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_static_compressed_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Static Compressed Buffer", "Neural Engine Support Matrix", "ITREX Graph", "Table of Contents", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"bytes_to_unicod": [1, 2, 4], "sourc": [1, 2, 3, 4, 6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 213, 215, 218, 220, 221, 222, 223, 224, 227, 229, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 380, 394, 401, 407, 409], "return": [1, 2, 3, 4, 10, 11, 12, 15, 20, 54, 147, 203, 204, 211, 213, 220, 223, 227, 229, 233, 235, 237, 238, 240, 243, 248, 249, 359, 360, 371, 372, 379, 383, 387, 391, 394, 395, 410], "list": [1, 2, 3, 4, 10, 11, 12, 13, 15, 20, 54, 203, 204, 211, 213, 221, 222, 236, 240, 241, 243, 248, 249, 372, 373, 378, 379, 380, 383, 388, 394, 395, 408, 414], "utf": [1, 2, 4], "8": [1, 2, 3, 4, 15, 243, 350, 359, 372, 374, 375, 377, 379, 381, 383, 385, 387, 389, 391, 395, 396, 397, 403, 404, 405, 407, 414], "byte": [1, 2, 3, 4, 397, 403], "correspond": [1, 2, 4, 6, 10, 11, 15, 359, 379, 383, 387, 392, 399, 403, 406, 414], "unicod": [1, 2, 4], "string": [1, 2, 3, 4, 15, 20, 203, 204, 213, 224, 233, 235, 240, 252, 253, 349, 371, 373, 379, 382, 383, 386, 391, 395, 410, 411, 413, 414], "The": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 218, 221, 223, 224, 227, 229, 232, 233, 235, 237, 240, 243, 246, 248, 249, 250, 252, 253, 255, 341, 343, 346, 348, 349, 351, 357, 359, 360, 369, 371, 372, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 407, 410, 412, 413, 414], "revers": [1, 2, 4], "bpe": [1, 2, 4], "code": [1, 2, 4, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 348, 349, 350, 372, 376, 377, 379, 382, 390, 391, 395, 396, 397, 398, 399, 404, 407, 409], "work": [1, 2, 4, 243, 340, 388, 391, 395, 412], "thi": [1, 2, 3, 4, 8, 15, 180, 213, 232, 240, 243, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 348, 349, 350, 359, 369, 370, 371, 372, 373, 375, 379, 380, 381, 382, 383, 386, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 409, 410, 412, 414], "mean": [1, 2, 4, 15, 16, 42, 205, 218, 221, 248, 249, 253, 350, 371, 379, 380, 381, 382, 383, 387, 388, 391, 393, 394, 396, 400, 403, 407, 410, 413, 414], "you": [1, 2, 4, 15, 215, 221, 236, 248, 249, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 360, 370, 371, 372, 373, 375, 379, 380, 382, 383, 384, 387, 388, 390, 391, 394, 395, 397, 404, 406, 407, 409, 410, 412, 413, 414, 415], "needlarg": [1, 2, 4, 373, 374, 387, 388, 389, 390, 391, 393, 396, 399, 400, 401, 407], "charact": [1, 2, 4, 391], "your": [1, 2, 4, 15, 243, 253, 255, 341, 370, 371, 372, 376, 379, 380, 381, 382, 383, 390, 391, 394, 395, 407, 409, 412], "vocab": [1, 2, 4], "want": [1, 2, 4, 221, 236, 360, 366, 379, 381, 382, 384, 387, 388, 391, 393, 394, 395, 407, 410, 422], "avoid": [1, 2, 4, 243, 248, 249, 387, 391, 393, 395, 399, 401, 402, 407], "unk": [1, 2, 4], "when": [1, 2, 4, 203, 221, 243, 248, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 360, 369, 374, 379, 380, 382, 383, 386, 387, 388, 391, 393, 395, 396, 398, 399, 400, 402, 403, 407, 410, 411, 414], "re": [1, 2, 4, 229, 391, 397], "someth": [1, 2, 4, 203], "like": [1, 2, 4, 6, 10, 11, 12, 15, 110, 111, 203, 253, 371, 372, 373, 376, 379, 380, 381, 382, 383, 384, 387, 388, 391, 394, 395, 397, 404, 410, 411, 413, 414], "10b": [1, 2, 4], "token": [1, 2, 4, 207, 211, 215, 236, 248, 249, 253, 360, 371, 372, 374, 376, 384, 388, 390, 412], "dataset": [1, 2, 4, 218, 237, 243, 252, 253, 360, 371, 374, 410, 414], "end": [1, 2, 4, 15, 240, 248, 249, 253, 341, 372, 381, 384, 386, 387, 391, 395, 404], "up": [1, 2, 3, 4, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 379, 381, 383, 388, 391, 395, 407], "around": [1, 2, 4], "5k": [1, 2, 4], "decent": [1, 2, 4], "coverag": [1, 2, 4], "i": [1, 2, 3, 4, 6, 8, 10, 11, 12, 15, 20, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 213, 218, 221, 227, 237, 240, 243, 248, 249, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 346, 347, 348, 349, 350, 351, 357, 359, 360, 364, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 420], "signific": [1, 2, 373, 391], "percentag": [1, 2, 4], "normal": [1, 2, 4, 350, 394, 402, 421], "sai": [1, 2, 4, 403], "32k": [1, 2, 4], "To": [1, 2, 4, 218, 248, 249, 359, 370, 379, 391, 396, 399, 401, 403, 407, 408], "we": [1, 2, 4, 229, 233, 249, 366, 369, 371, 372, 375, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 410, 411, 412, 414, 422], "lookup": [1, 2, 4], "tabl": [1, 2, 4, 382, 395, 403], "between": [1, 2, 4, 10, 11, 248, 249, 350, 359, 373, 391, 400, 403, 407, 414], "And": [1, 2, 4, 120, 381, 382, 383, 384, 387, 394], "map": [1, 2, 3, 4, 10, 11, 15, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 243, 359, 372, 373, 388, 393, 414], "whitespac": [1, 2, 4, 408], "control": [1, 2, 3, 4, 15, 220, 221, 359, 379, 391], "barf": [1, 2, 4], "nefiletyp": 3, "gener": [3, 15, 110, 111, 220, 221, 240, 243, 248, 249, 253, 360, 372, 373, 379, 383, 387, 394, 395, 398, 399, 402, 404, 406, 407, 410, 411, 414], "enumer": [3, 255, 350], "deriv": [3, 348, 400, 401], "from": [3, 13, 15, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 203, 204, 220, 224, 227, 229, 240, 243, 248, 249, 253, 359, 360, 369, 371, 373, 374, 376, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 391, 394, 395, 398, 400, 401, 402, 403, 410, 411, 412, 413, 414], "defin": [3, 15, 213, 221, 233, 235, 236, 240, 243, 347, 359, 369, 372, 373, 379, 380, 386, 387, 403, 408, 410, 413, 414], "new": [3, 6, 10, 11, 12, 15, 20, 243, 370, 387, 388, 391, 394, 395, 408, 415], "handle_quant": 3, "model": [3, 6, 10, 11, 12, 13, 15, 18, 20, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 184, 185, 186, 188, 189, 190, 201, 202, 204, 211, 213, 218, 220, 221, 224, 226, 227, 233, 236, 237, 238, 240, 243, 252, 253, 357, 359, 371, 373, 374, 376, 378, 379, 382, 383, 387, 388, 389, 391, 394, 399, 400, 401, 402, 405, 409, 410, 411, 413, 414, 423], "lazymodel": 3, "convert": [3, 6, 10, 11, 15, 20, 203, 220, 221, 375, 385, 388, 402, 407, 414], "entri": [3, 205, 237, 243, 248, 249, 409], "foo": 3, "qweight": 3, "scale": [3, 20, 243, 350, 394, 399, 402, 414], "etc": [3, 227, 243, 359, 373, 381], "which": [3, 6, 10, 11, 12, 15, 158, 203, 221, 223, 227, 229, 243, 248, 249, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369, 371, 373, 378, 379, 380, 382, 383, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406, 407, 410, 413, 414], "resolv": [3, 340], "unquantizedtensor": 3, "raw": 3, "data": [3, 15, 81, 207, 220, 253, 255, 350, 359, 372, 374, 379, 380, 382, 384, 385, 386, 388, 393, 394, 395, 396, 399, 400, 403, 407, 414, 418, 422], "one": [3, 6, 10, 11, 15, 211, 240, 248, 350, 359, 372, 373, 376, 378, 379, 381, 382, 383, 387, 388, 390, 391, 394, 396, 397, 402, 406, 407, 412], "weight": [3, 88, 221, 248, 249, 350, 359, 373, 375, 381, 382, 384, 393, 396, 397, 398, 402, 403, 407, 410, 411, 413, 414], "quantizedtensor": 3, "lazyunpickl": 3, "fp": 3, "io": [3, 350, 386], "data_base_path": 3, "str": [3, 15, 54, 147, 207, 213, 215, 220, 221, 222, 229, 232, 236, 238, 241, 243, 246, 248, 249, 250, 253, 255, 360, 371], "zip_fil": 3, "zipfil": 3, "take": [3, 369, 373, 381, 383, 386, 394, 402, 403], "binari": [3, 377, 395, 402, 407, 421], "file": [3, 6, 8, 10, 11, 12, 13, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 147, 175, 221, 224, 227, 229, 233, 235, 240, 243, 244, 253, 347, 348, 349, 350, 371, 372, 379, 380, 381, 382, 384, 386, 390, 391, 394, 395, 406, 407, 408, 409], "read": [3, 240, 372, 380, 390], "pickl": 3, "stream": [3, 386], "protocol": [3, 400], "version": [3, 218, 229, 243, 369, 372, 377, 382, 389, 405, 409], "detect": [3, 15], "automat": [3, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 360, 371, 381, 382, 383, 391, 394, 407], "so": [3, 15, 229, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 373, 378, 379, 382, 383, 386, 387, 394, 396, 397, 398, 399, 400, 402, 403, 404, 407, 410, 411, 413, 414], "argument": [3, 213, 221, 240, 243, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 373, 381, 408, 410, 411, 413, 414], "past": [3, 248, 249], "object": [3, 10, 11, 12, 203, 213, 221, 226, 233, 235, 236, 237, 238, 240, 243, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 360, 372, 373, 376, 379, 386, 413, 418], "": [3, 15, 20, 54, 107, 203, 221, 243, 249, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 348, 359, 369, 372, 373, 379, 380, 381, 383, 384, 386, 388, 389, 391, 396, 400, 402, 405, 407, 408, 412, 414], "represent": [3, 15, 369, 376, 379, 383, 384], "ar": [3, 15, 110, 111, 158, 218, 223, 224, 240, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 359, 369, 370, 372, 373, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 413, 414], "ignor": [3, 213, 243, 248, 249, 379, 391], "must": [3, 15, 218, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 360, 377, 383, 387, 393, 394, 396, 403], "have": [3, 6, 15, 203, 213, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369, 370, 372, 379, 380, 381, 382, 383, 384, 387, 388, 391, 395, 399, 400, 401, 402, 406, 407, 409, 410, 411, 412, 413, 414], "two": [3, 15, 243, 373, 379, 382, 383, 385, 386, 388, 394, 395, 397, 400, 401, 402, 403, 411, 412, 413, 414], "method": [3, 15, 224, 235, 241, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 371, 374, 391, 394, 397, 399, 402, 404, 413, 414], "an": [3, 8, 15, 20, 203, 235, 243, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 369, 371, 372, 374, 375, 376, 379, 380, 381, 382, 383, 386, 387, 388, 390, 391, 393, 394, 395, 399, 400, 403, 408, 410, 412, 423], "integ": [3, 371, 375, 382, 383, 403, 407, 413, 414], "readlin": 3, "requir": [3, 15, 144, 218, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 360, 376, 383, 385, 387, 389, 391, 393, 396, 397, 399, 406, 407, 414], "both": [3, 227, 243, 248, 249, 369, 371, 376, 391, 399, 401, 406, 407, 408, 410, 414], "should": [3, 15, 229, 243, 248, 249, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 379, 380, 382, 383, 386, 387, 393, 394, 395, 400, 407, 408, 410, 411, 414], "thu": [3, 398, 414], "can": [3, 6, 15, 110, 111, 120, 144, 215, 229, 240, 243, 248, 249, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 371, 372, 373, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 407, 411, 412, 413, 414], "open": [3, 369, 371, 380, 384, 390], "bytesio": 3, "ani": [3, 15, 229, 243, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369, 370, 379, 387, 391, 412], "other": [3, 15, 70, 120, 229, 350, 369, 370, 371, 372, 379, 380, 381, 382, 383, 387, 388, 389, 391, 399, 402, 403, 405, 407, 409, 414], "custom": [3, 15, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 213, 237, 243, 253, 341, 359, 372, 381, 383, 391, 423], "meet": [3, 347, 348, 349, 350, 379, 397, 399, 403], "interfac": [3, 6, 205, 221, 248, 249, 348, 375, 378, 392], "option": [3, 15, 213, 220, 221, 229, 236, 238, 243, 248, 249, 359, 360, 381, 387, 394, 403, 407], "keyword": [3, 243], "fix_import": 3, "encod": [3, 232, 248, 249, 359, 381, 387], "error": [3, 19, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 386, 404], "us": [3, 6, 15, 20, 54, 147, 158, 180, 203, 213, 218, 220, 221, 223, 227, 229, 232, 233, 236, 237, 243, 248, 249, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 360, 369, 370, 371, 372, 373, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414], "compat": [3, 377], "support": [3, 15, 20, 147, 213, 215, 221, 224, 238, 241, 242, 253, 350, 376, 377, 378, 379, 380, 381, 382, 386, 387, 395, 399, 400, 402, 404, 406, 407, 412, 413, 417], "python": [3, 10, 11, 15, 248, 249, 346, 357, 370, 371, 372, 377, 378, 379, 380, 382, 384, 385, 390, 406], "2": [3, 15, 218, 221, 223, 248, 350, 359, 360, 371, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 387, 388, 389, 391, 396, 397, 398, 403, 404, 405, 407, 409, 410, 412], "If": [3, 15, 223, 243, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 370, 373, 375, 379, 381, 382, 383, 384, 387, 391, 394, 400, 407, 409, 410, 413, 414], "true": [3, 13, 213, 221, 243, 246, 248, 249, 250, 359, 372, 375, 376, 378, 379, 381, 382, 388, 394, 395, 401, 404, 407, 410, 411, 414], "try": [3, 382, 414], "old": [3, 15], "name": [3, 10, 11, 12, 13, 15, 20, 54, 81, 147, 203, 213, 221, 222, 229, 238, 241, 246, 250, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 385, 387, 389, 395, 405, 406, 409, 410, 411, 412, 413, 414], "3": [3, 15, 350, 359, 360, 371, 373, 374, 375, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 395, 397, 398, 403, 405, 407, 408, 410], "tell": [3, 381, 383, 394, 395], "how": [3, 221, 223, 243, 340, 370, 379, 380, 381, 384, 385, 387, 391, 395, 396, 397, 407, 410, 413], "decod": [3, 232, 248, 249, 388, 404], "bit": [3, 375, 376, 391, 393, 394, 400, 403, 414], "instanc": [3, 221, 227, 233, 243, 244, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 360, 369, 380, 381, 389, 405, 408, 410, 411, 412], "default": [3, 220, 221, 229, 236, 238, 243, 248, 249, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 360, 371, 372, 373, 379, 382, 388, 389, 391, 395, 399, 403, 404, 405, 407, 410, 411, 413, 414], "ascii": 3, "strict": 3, "respect": [3, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369, 380, 383, 384], "find_class": 3, "specifi": [3, 15, 215, 221, 223, 233, 235, 237, 241, 242, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 383, 384, 388, 391, 395, 399, 401, 407, 413, 414], "necessari": [3, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369, 386, 391, 403, 407], "import": [3, 13, 15, 238, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 360, 371, 372, 373, 376, 379, 380, 382, 384, 387, 388, 391, 394, 395, 399, 410, 411, 412, 413, 414], "subclass": [3, 54, 147, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 348], "mai": [3, 6, 15, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 348, 349, 350, 369, 370, 372, 379, 382, 387, 388, 390, 391, 396, 397, 398, 400, 401, 402, 403, 407, 409, 414], "overrid": [3, 229, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 348, 386], "e": [3, 15, 110, 111, 213, 221, 227, 243, 359, 369, 372, 373, 382, 391, 394, 395, 400, 401, 407, 408], "g": [3, 213, 221, 227, 243, 359, 373, 390, 391, 394, 395, 400, 408], "restrict": 3, "unpickl": 3, "arbitrari": [3, 379], "call": [3, 15, 107, 139, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 375, 379, 382, 383, 388, 393, 394, 395, 402, 403, 414], "whenev": [3, 391], "pass": [3, 240, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 350, 388, 394, 395, 412, 414], "bounded_parallel_map": 3, "func": [3, 15, 359, 382], "callabl": [3, 236, 237, 243, 359], "In": [3, 15, 227, 243, 248, 359, 369, 372, 379, 380, 381, 382, 383, 384, 387, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 410, 411, 414], "out": [3, 13, 15, 243, 370, 372, 379, 380, 383, 391, 392, 401, 414], "iter": [3, 213, 221, 227, 243, 359, 360, 372, 380, 382, 386, 388, 394, 398, 401, 402, 407, 408], "concurr": 3, "int": [3, 15, 213, 215, 220, 221, 241, 243, 248, 350, 360, 379, 394, 395, 396, 399], "parallel": [3, 398, 399, 400, 403, 407], "backpressur": 3, "caller": 3, "doesn": [3, 15, 359, 391, 394, 403, 407], "t": [3, 15, 221, 248, 249, 348, 350, 359, 371, 373, 386, 388, 390, 391, 393, 394, 396, 399, 401, 402, 403, 407, 413], "next": [3, 6, 13, 248, 249, 359, 383, 384, 391, 394, 396, 398, 400, 401, 402, 403], "fast": [3, 221, 341, 372, 376], "enough": [3, 371, 388, 399, 414], "stop": [3, 215, 221, 253, 371, 391, 414], "some": [3, 15, 144, 158, 249, 372, 379, 380, 381, 382, 383, 386, 387, 388, 391, 394, 395, 399, 403, 414], "point": [3, 205, 243, 248, 249, 359, 383, 394, 395, 399, 402, 414], "rather": [3, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 383, 394], "than": [3, 223, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 360, 381, 382, 383, 391, 394, 399, 401, 406, 407, 414], "let": [3, 381, 386, 396, 397], "result": [3, 15, 213, 227, 237, 243, 341, 359, 360, 369, 372, 374, 379, 382, 383, 389, 391, 394, 395, 396, 399, 400, 401, 402, 403, 405, 409, 413, 414], "pile": 3, "memori": [3, 243, 386, 388, 394, 395, 396, 397, 398, 400, 401, 402, 403, 411, 414], "specif": [3, 15, 229, 233, 349, 351, 359, 369, 373, 377, 379, 382, 383, 391, 393, 398, 399, 400, 406, 407, 410, 411, 412, 414], "max": [3, 32, 221, 223, 243, 372, 388, 389, 394, 396, 398, 403, 405, 414], "output": [3, 13, 15, 20, 32, 203, 204, 221, 236, 243, 248, 249, 350, 359, 371, 373, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 398, 399, 400, 401, 403, 407, 412], "valu": [3, 15, 20, 203, 204, 211, 220, 221, 236, 240, 243, 248, 249, 350, 371, 372, 373, 379, 380, 381, 382, 383, 391, 394, 395, 396, 397, 399, 401, 402, 407, 410, 411, 413, 414], "buffer": [3, 399, 400, 402], "per": [3, 213, 381, 389, 394, 397, 405, 407, 408, 413], "thread": [3, 389], "nth_multifile_path": 3, "path": [3, 15, 213, 221, 227, 229, 233, 235, 236, 240, 243, 252, 253, 371, 372, 376, 380, 381, 382, 384, 388, 391, 404, 406, 407], "pathlib": 3, "n": [3, 15, 224, 248, 249, 350, 371, 373, 382, 383, 385, 389, 390, 391, 393, 396, 397, 398, 399, 402, 403, 405, 407], "none": [3, 6, 13, 15, 20, 53, 54, 81, 88, 203, 204, 213, 220, 221, 222, 223, 224, 227, 233, 236, 237, 238, 241, 243, 246, 248, 249, 250, 251, 252, 350, 359, 371, 373, 374, 375, 381, 410, 411, 413, 414], "given": [3, 221, 229, 248, 249, 371, 387, 395, 398, 401, 403, 413], "belong": [3, 15, 379, 414], "multi": [3, 215, 380, 381, 382], "bin": [3, 6, 13, 236, 380, 381, 382, 384, 390, 391, 404, 406], "1": [3, 15, 220, 221, 222, 241, 243, 248, 249, 251, 253, 350, 359, 360, 369, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 410, 412, 413, 414], "nth": 3, "find_multifile_path": 3, "whole": [3, 15, 218, 227, 359, 374, 381, 382, 398, 399, 400, 402, 404], "load_some_model": 3, "modelplu": 3, "load": [3, 18, 224, 227, 237, 238, 243, 248, 249, 372, 379, 380, 381, 382, 384, 388, 391, 393, 395, 396, 397, 398, 403], "format": [3, 19, 88, 213, 243, 359, 381, 390, 391, 401, 402, 405, 406, 414], "signfic": 4, "neural_engin": [5, 372, 376, 378, 379, 380, 381, 382, 384, 387, 388, 392, 407], "compil": [5, 205, 343, 376, 378, 379, 380, 382, 383, 385, 387, 388, 423], "extractor": [5, 15, 16, 205, 382, 384, 387], "graph": [5, 6, 8, 10, 11, 12, 15, 16, 17, 20, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 343, 372, 373, 379, 384, 387, 388, 398, 401, 403, 423], "loader": [5, 6, 16, 205, 382, 384, 387], "op": [5, 6, 10, 11, 12, 15, 16, 20, 120, 144, 155, 203, 204, 205, 221, 243, 350, 381, 386, 387, 388, 394, 395, 407, 408, 414], "sub_graph": [5, 16, 205, 379, 382], "graph_util": [5, 16, 205, 379, 383, 387], "logger": [5, 16, 205, 404], "onnx_util": [5, 16, 205], "optim": [5, 16, 205, 341, 357, 359, 360, 372, 373, 374, 375, 376, 377, 380, 383, 384, 385, 388, 391, 394, 395, 396, 398, 410, 411, 412, 413, 414], "tf_util": [5, 16, 205], "torch_util": [5, 16, 205], "neural": [6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 112, 144, 175, 203, 204, 205, 229, 232, 237, 341, 359, 360, 368, 372, 373, 379, 381, 382, 383, 384, 388, 398, 406, 411, 414, 417, 424], "engin": [6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 112, 144, 175, 203, 204, 205, 227, 243, 342, 351, 359, 368, 372, 379, 381, 383, 386, 388, 394, 399, 402, 406, 417, 424], "start_pipelin": 6, "config": [6, 13, 15, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 220, 223, 226, 227, 232, 236, 237, 238, 240, 243, 248, 249, 357, 360, 371, 372, 373, 374, 376, 380, 381, 383, 386, 394, 407, 412, 413], "pipelin": [6, 226, 227, 233, 418], "firstli": 6, "get": [6, 13, 15, 19, 20, 203, 204, 223, 224, 243, 250, 252, 255, 375, 379, 382, 383, 384, 386, 387, 391, 394, 401, 403, 408, 412, 419], "comput": [6, 15, 203, 218, 243, 248, 249, 364, 372, 376, 387, 391, 392, 393, 394, 395, 396, 399, 401, 402, 406, 412, 414, 420], "framework": [6, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 144, 221, 227, 238, 243, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 364, 373, 374, 377, 379, 380, 384, 388, 392, 412, 413, 414, 420], "contain": [6, 15, 20, 110, 111, 203, 204, 211, 240, 243, 248, 249, 253, 359, 364, 371, 373, 379, 380, 382, 383, 387, 391, 392, 394, 406, 407, 408, 413, 414, 420], "node": [6, 10, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 180, 203, 204, 252, 375, 387, 389, 405], "edg": 6, "tensor": [6, 10, 11, 12, 13, 15, 16, 20, 42, 70, 144, 203, 204, 205, 220, 243, 248, 249, 350, 379, 380, 381, 383, 384, 386, 388, 401, 406, 407, 413, 414], "Then": [6, 15, 373, 383, 384, 402, 403, 407, 413, 414], "extract": [6, 8, 10, 11, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 379, 382, 384], "pack": [6, 16, 42, 205, 403], "them": [6, 10, 11, 15, 379, 380, 383, 391, 394, 397, 399, 402, 403, 414], "our": [6, 371, 375, 387, 394, 396, 397, 399, 401, 402, 403, 412], "form": [6, 15, 213, 243, 373, 381, 387, 393, 398, 402, 407], "exploit": [6, 387], "abov": [6, 15, 248, 249, 378, 379, 382, 383, 387, 391, 396, 397, 399, 400, 401, 406], "consist": [6, 370, 391], "sub": [6, 15, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 379, 382, 383, 394, 401, 402], "see": [6, 15, 110, 111, 213, 218, 248, 249, 340, 369, 372, 379, 381, 382, 383, 384, 387, 389, 390, 391, 393, 398, 402, 404, 405, 406, 407, 409], "big": [6, 382, 383, 388], "layernorm": [6, 15, 45, 123, 379, 383, 387, 392, 407], "There": [6, 373, 379, 380, 381, 400, 404, 407, 411, 413], "differ": [6, 13, 18, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 184, 185, 186, 188, 189, 190, 201, 202, 223, 235, 359, 369, 371, 372, 373, 376, 379, 380, 382, 383, 384, 387, 391, 393, 400, 403, 410, 411, 413, 414], "flow": [6, 15, 379, 383, 391], "subgraph": [6, 15, 175, 382, 384], "final": [6, 382, 383, 384, 386, 387, 391, 396, 399, 400, 402, 410], "yaml": [6, 13, 15, 233, 235, 243, 381, 382, 384, 388, 406], "configur": [6, 98, 221, 223, 229, 233, 235, 237, 240, 241, 243, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 350, 359, 371, 374, 375, 382, 393, 394, 398, 415], "infer": [6, 13, 18, 220, 232, 237, 243, 249, 341, 374, 376, 378, 379, 381, 382, 383, 384, 388, 390, 391, 397, 399, 400, 402, 411, 414, 421], "base": [8, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 229, 238, 243, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 348, 359, 371, 372, 375, 376, 377, 384, 386, 389, 396, 398, 399, 400, 401, 402, 404, 405, 412], "tensorflow": [8, 11, 21, 22, 24, 25, 26, 28, 33, 35, 40, 43, 44, 47, 48, 49, 51, 52, 55, 56, 58, 59, 62, 64, 65, 68, 79, 80, 84, 203, 221, 227, 237, 252, 357, 376, 377, 380, 387, 414], "onnx": [8, 10, 20, 204, 213, 221, 243, 372, 376, 379, 381, 382, 401, 412, 418, 423], "pleas": [8, 10, 11, 240, 253, 255, 340, 359, 360, 371, 373, 374, 376, 379, 383, 386, 390, 391, 392, 393, 394, 395, 399, 402, 407, 413, 414], "refer": [8, 10, 11, 218, 240, 253, 255, 359, 371, 372, 373, 376, 383, 386, 390, 391, 397, 399, 402, 407, 409, 413, 414], "onnx_extractor": [8, 9, 16, 205], "py": [8, 371, 379, 381, 385, 390, 406], "tf_extractor": [8, 9, 16, 205], "more": [8, 10, 11, 15, 110, 111, 340, 373, 376, 378, 379, 381, 383, 384, 386, 387, 389, 390, 391, 392, 393, 394, 397, 399, 400, 401, 403, 405, 406, 407], "detail": [8, 15, 359, 364, 366, 369, 370, 372, 373, 374, 376, 378, 379, 381, 382, 383, 386, 387, 389, 390, 391, 392, 397, 404, 405, 407, 413, 414, 420, 422], "A": [8, 15, 223, 233, 238, 240, 243, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 379, 380, 387, 389, 391, 393, 396, 397, 403, 405, 407], "super": [8, 379, 382], "oper": [8, 10, 11, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 144, 158, 203, 204, 349, 351, 364, 374, 378, 379, 380, 382, 384, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 407, 414, 420, 423], "do": [8, 221, 224, 236, 237, 240, 243, 369, 375, 379, 380, 382, 383, 387, 388, 391, 394, 396, 399, 413, 414], "addit": [8, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 372, 374, 381, 396, 400, 408, 415], "attribut": [8, 10, 11, 12, 15, 54, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 348, 359, 381, 383, 386, 395], "without": [8, 236, 243, 369, 373, 379, 380, 391, 400, 403, 404, 407], "modifi": [8, 13, 15, 120, 144, 218, 240, 249, 380, 381, 384, 390, 391], "topologi": 8, "modul": [9, 14, 16, 17, 42, 112, 205, 234, 359, 384, 385], "torch_extractor": [9, 16, 205], "all": [10, 11, 12, 13, 15, 16, 42, 54, 144, 147, 158, 205, 211, 240, 243, 248, 249, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 359, 369, 372, 373, 378, 379, 380, 381, 383, 387, 389, 390, 391, 394, 395, 396, 397, 399, 402, 405, 410, 413, 414], "input": [10, 11, 13, 15, 20, 32, 110, 111, 144, 203, 204, 220, 237, 238, 243, 248, 249, 350, 359, 360, 371, 372, 373, 375, 376, 380, 381, 382, 383, 386, 388, 398, 400, 401, 403, 407, 412], "compos": [10, 11, 12, 227, 243, 359, 379, 384, 402], "order": [10, 11, 13, 15, 227, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 371, 379, 381, 387, 393, 399, 400, 402, 403], "origin": [10, 11, 15, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 218, 220, 240, 253, 371, 373, 379, 384, 390, 391, 400, 401, 414], "calcul": [10, 11, 110, 111, 224, 240, 359, 381, 387, 393, 395, 396, 399, 400, 403, 407, 414], "notic": [10, 11, 384, 394, 401, 402, 409], "For": [10, 11, 15, 20, 144, 340, 359, 369, 372, 376, 379, 382, 383, 387, 388, 389, 391, 392, 394, 397, 401, 402, 403, 404, 405, 412], "relat": [10, 11, 243, 366, 373, 379, 383, 387, 388, 397, 402, 413, 414, 422], "deatil": [10, 11], "api": [10, 11, 13, 253, 341, 370, 372, 380, 382, 383, 384, 386, 387, 394, 395, 412, 419], "onnxextractor": 10, "decor": [10, 11, 12, 20, 54, 147, 203, 204], "graph_def": [10, 11, 12, 203], "ha": [10, 11, 12, 15, 253, 359, 370, 371, 372, 379, 382, 383, 385, 386, 387, 390, 391, 393, 395, 399, 407, 414], "input_tensor": [10, 11, 12, 15, 20, 54, 203, 204, 248, 249, 379, 383], "output_tensor": [10, 11, 12, 15, 20, 54, 203, 204, 379, 383], "record": [10, 11, 12, 218, 359, 381, 382], "dest": [10, 11, 12, 15, 20, 203], "paramet": [10, 11, 12, 15, 20, 54, 147, 203, 204, 213, 220, 221, 223, 227, 229, 232, 233, 235, 236, 237, 238, 241, 243, 248, 249, 252, 253, 341, 350, 359, 360, 372, 373, 381, 387, 391, 410, 413], "onnxmodel": [10, 20], "type": [10, 11, 12, 15, 20, 54, 147, 203, 204, 213, 220, 221, 223, 229, 232, 237, 238, 243, 248, 252, 253, 255, 351, 359, 370, 371, 372, 373, 374, 375, 380, 381, 382, 384, 387, 390, 391, 392, 394, 395, 400, 406, 407, 410, 411, 414], "tensorflowextractor": 11, "tensorflowmodel": [11, 203], "torch": [12, 87, 110, 111, 204, 213, 220, 221, 232, 243, 248, 249, 360, 372, 412], "torchextractor": 12, "torchscript": [12, 74, 204, 220, 221, 243, 360], "defint": [13, 88], "add_config_item": 13, "kei": [13, 15, 20, 203, 240, 243, 248, 249, 341, 372, 381, 382, 383, 391, 394, 395, 397], "val": [13, 15], "add": [13, 15, 32, 221, 224, 240, 373, 380, 381, 382, 383, 387, 390, 391, 392, 394, 395, 402, 407, 408, 423], "pair": [13, 221, 248, 380, 395, 403], "framework_modeling_config": 13, "inquire_config_item": 13, "insert_nod": 13, "index": [13, 248, 249, 252, 350, 383, 386, 387], "insert": [13, 15, 384, 386, 387, 391, 394, 395, 414], "ir": [13, 379, 380, 381, 382, 388, 404, 406, 423], "remove_nod": 13, "node_nam": [13, 15, 20, 203, 379, 383], "remov": [13, 15, 155, 158, 249, 369, 370, 395, 413], "get_node_id": [13, 379], "id": [13, 15, 229, 249, 252, 391, 395, 396], "accord": [13, 379, 382, 391, 403], "get_node_by_nam": 13, "rename_nod": 13, "old_nam": 13, "new_nam": 13, "change_node_input_tensor": 13, "mode": [13, 220, 222, 241, 242, 359, 381, 385, 400, 402, 407, 408, 414], "change_node_output_tensor": 13, "get_pre_node_nam": 13, "previou": [13, 227, 243, 372, 380, 399, 415], "get_next_node_nam": 13, "get_tensor_idx": 13, "tensor_nam": [13, 20, 203], "from_output": 13, "modify_node_connect": 13, "dump_tensor": 13, "tensor_list": 13, "dump": [13, 414], "engine_init": 13, "net_info": 13, "weight_data": 13, "b": [13, 15, 20, 248, 379, 387, 390, 391, 393, 396, 397, 398, 402, 403, 407], "refresh_model": 13, "pybind": 13, "executor": [13, 379, 380, 381], "input_data": [13, 15, 16, 112, 205, 380], "graph_init": [13, 380, 382], "load_weight": 13, "fals": [13, 213, 221, 222, 224, 229, 243, 248, 249, 350, 359, 360, 373, 376, 379, 382, 394, 395, 407, 410], "initi": [13, 15, 20, 23, 27, 45, 54, 75, 221, 233, 243, 248, 249, 350, 359, 390, 391, 394, 395, 399, 412, 413], "exampl": [13, 15, 144, 207, 213, 221, 248, 249, 253, 341, 342, 363, 369, 371, 372, 373, 376, 379, 380, 382, 383, 385, 386, 387, 388, 391, 392, 394, 396, 410, 413, 414, 419], "newgraph": 13, "conf": [13, 221, 380, 381, 382, 386, 406], "input_0": [13, 380, 382], "input_1": [13, 380, 382], "input_2": [13, 380, 382], "save": [13, 213, 224, 236, 243, 371, 372, 379, 380, 381, 384, 388, 397, 401, 403, 414], "output_dir": [13, 213, 236, 243, 359, 371, 384, 385], "ymal": 13, "graph_dispatch": [13, 382], "tune": [13, 207, 221, 243, 341, 371, 372, 373, 409, 410, 411, 413, 423], "inputs_shap": [13, 382], "dispatch": 13, "get_sparse_nodes_nam": 13, "threshold": [13, 391, 407], "0": [13, 15, 203, 213, 221, 222, 224, 241, 246, 248, 249, 251, 252, 253, 347, 348, 350, 359, 360, 371, 372, 373, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414], "7": [13, 15, 350, 359, 372, 374, 377, 378, 379, 383, 385, 387, 389, 397, 405, 407, 410, 414], "sparsiti": [13, 221, 240, 389, 407, 413], "spars": [13, 341, 350, 372, 382, 392, 393, 402, 407, 421], "transpose_mode_int8": 13, "node_name_list": 13, "transpos": [13, 16, 42, 67, 205, 248, 249, 381, 382, 392, 393, 397, 399, 400, 403, 407, 421], "innerproduct": [13, 32, 120, 381, 382, 392], "reorder": [13, 16, 42, 205, 399, 400], "util": [15, 20, 203, 204, 221, 223, 226, 254, 371, 379, 387, 390, 391, 393, 400, 403, 407], "names_from_input": 15, "static": [15, 250, 347, 350, 381, 384, 394, 397, 399, 412], "valid": [15, 221, 237, 243, 360, 370, 371, 373, 376, 387, 409, 415, 422], "field": [15, 221, 371, 394, 395, 414], "tupl": [15, 223, 238, 248, 249], "nodedef": [15, 203], "also": [15, 370, 372, 379, 380, 381, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 396, 399, 402, 403, 404, 411, 414], "get_data_dtyp": 15, "const": [15, 20, 203, 347, 348, 349, 350, 386, 392, 394, 395, 396, 397], "dtype": [15, 20, 81, 203, 204, 243, 372, 375, 380, 381, 382, 386], "numpi": [15, 20, 372, 380], "dtypes_dict": 15, "autocast_init": 15, "quant": [15, 120, 221, 392, 407, 414, 421], "info": [15, 19, 20, 110, 111, 203, 204, 359, 372, 379, 404], "set_autocast": 15, "get_autocast_info": 15, "quant_info_init": 15, "insert_quant_info": 15, "get_quant_info": 15, "environ_info_init": 15, "environ": [15, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369, 380, 407, 408], "insert_environ_info": 15, "remove_environ_info_item": 15, "item": [15, 360, 372, 376], "get_environ_info": 15, "search_straight_pattern": [15, 387], "input_pattern": [15, 387], "search": [15, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 221, 224, 227, 233, 243, 359, 374, 383], "user": [15, 213, 240, 248, 249, 253, 341, 342, 359, 360, 363, 366, 372, 375, 379, 381, 383, 385, 388, 391, 399, 401, 404, 407, 411, 412, 419, 422], "pattern": [15, 16, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 211, 221, 348, 384, 393, 396, 406, 413, 423], "intern": [15, 383, 391, 399], "grpah": [15, 20, 203], "structur": [15, 374, 379, 380, 382, 390, 391, 398, 402, 406, 413], "attent": [15, 248, 249, 348, 359, 369, 381, 387, 401], "chain": [15, 394, 395], "straight": 15, "sequenc": [15, 207, 215, 223, 248, 249, 372, 376, 379, 383, 387, 391, 398, 407], "It": [15, 107, 229, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 360, 373, 379, 381, 382, 383, 386, 387, 388, 391, 398, 399, 401, 402, 407], "otherwis": [15, 213, 369, 379, 382, 399, 407], "op_typ": [15, 20, 54, 203, 204, 379, 382, 383, 395], "element": [15, 240, 243, 379, 387, 392, 396, 398, 401, 403, 407, 421], "could": [15, 240, 348, 369, 379, 380, 381, 383, 384, 387, 397, 406, 407, 413, 414], "mandatori": 15, "while": [15, 380, 383, 387, 391, 396, 399, 402, 407, 414], "stand": [15, 379], "mybe": 15, "mul": [15, 379, 383, 387, 394], "addv2": [15, 32, 387], "equal": [15, 243, 383, 391, 393, 394], "below": [15, 221, 341, 359, 370, 371, 372, 373, 379, 380, 382, 384, 387, 391, 393, 398, 400, 401, 402, 403, 411], "length": [15, 221, 223, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 372, 383, 387, 391, 394, 407, 414], "match": [15, 211, 359, 373, 382, 383, 387, 398, 401], "24": [15, 359, 387, 389, 397, 405], "layer": [15, 221, 223, 240, 248, 249, 359, 381, 387, 391, 394, 398, 401, 413, 421], "each": [15, 110, 111, 213, 221, 227, 243, 248, 249, 253, 359, 371, 381, 382, 383, 391, 393, 396, 398, 399, 400, 401, 402, 403, 406, 407, 408, 413], "still": [15, 240, 341, 387, 396, 414], "last": [15, 218, 221, 243, 248, 249, 383, 387, 388, 391, 393, 398, 399, 401, 414], "former": [15, 387], "here": [15, 233, 243, 366, 372, 378, 379, 382, 383, 384, 386, 387, 391, 395, 403, 414, 415, 422], "search_pattern": [15, 387], "pattern_list": 15, "complet": [15, 379, 389, 391, 396, 399, 402, 405], "its": [15, 144, 227, 243, 359, 369, 373, 379, 380, 383, 384, 387, 391, 398, 399, 400, 403, 406, 407, 409], "op_idx": 15, "howev": [15, 240, 382, 383, 387, 388, 391, 393, 397, 400, 403], "due": [15, 248, 383, 387, 391, 393, 414], "few": [15, 213, 398], "complic": [15, 379, 387], "thei": [15, 218, 229, 369, 373, 378, 387, 388, 391, 393, 394, 395, 397, 401, 407], "therefor": [15, 375, 393, 398, 401, 403, 414], "fist": 15, "repres": [15, 240, 369, 381, 383, 387, 391, 393, 395, 396, 399, 414], "main": [15, 215, 240, 243, 248, 249, 253, 383, 391, 400, 407], "top": [15, 341, 371, 372, 398], "down": [15, 391], "head": [15, 248, 249, 387, 395, 401, 402], "tail": [15, 387, 404], "left": [15, 248, 249, 397, 401, 403], "bert_large_squad": 15, "pb": [15, 376], "squareddiffer": [15, 32, 387], "4": [15, 221, 241, 243, 248, 249, 350, 359, 360, 369, 371, 373, 374, 377, 379, 381, 382, 383, 386, 387, 388, 389, 390, 391, 397, 398, 399, 400, 403, 404, 407, 413], "rsqrt": [15, 32, 387], "5": [15, 93, 94, 95, 96, 176, 177, 178, 181, 182, 183, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 221, 222, 350, 359, 360, 371, 373, 379, 380, 381, 383, 386, 387, 389, 391, 397, 405, 407], "9": [15, 221, 253, 359, 371, 372, 376, 377, 379, 387, 389, 391, 397, 405, 407, 413], "6": [15, 350, 359, 373, 374, 378, 379, 383, 387, 389, 395, 397, 404, 405, 414], "same": [15, 249, 373, 375, 379, 380, 381, 383, 384, 387, 390, 391, 393, 396, 399, 400, 403, 406, 407, 408], "follow": [15, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 215, 248, 249, 343, 346, 351, 357, 360, 369, 370, 371, 372, 373, 377, 379, 381, 382, 383, 384, 386, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 414], "frozen": [15, 380, 384], "had": [15, 379], "better": [15, 107, 227, 237, 243, 359, 379, 380, 381, 382, 391, 393, 399, 400, 401, 402, 406, 410, 411, 414], "identifi": [15, 229, 396], "own": [15, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 379, 383, 384, 390, 391, 394, 400, 411], "casual": 15, "tf": [15, 237, 248, 359], "start": [15, 248, 249, 381, 387, 408, 419], "mostli": [15, 387], "longest": [15, 387], "sometim": [15, 383, 414], "connect": [15, 391, 413], "But": [15, 380, 393, 412], "don": [15, 221, 248, 249, 386, 388, 391, 394], "least": [15, 211, 240, 391, 400], "exist": [15, 229, 253, 359, 376, 379, 412], "relationship": 15, "sever": [15, 371, 379, 384, 387, 388, 391, 393, 407, 414], "split": [15, 16, 42, 205, 360, 371, 382, 393, 397, 399, 400], "representtaion": 15, "idx": [15, 395], "outsid": [15, 248, 249, 383, 387], "give": [15, 379, 383, 393], "just": [15, 249, 372, 379, 380, 381, 382, 383, 384, 387, 391, 395, 403, 406, 410], "empti": [15, 32, 383, 387, 395, 408], "algorithm": [15, 54, 147, 221, 233, 350, 359, 371, 382, 383, 386, 387, 391, 393, 394, 400, 407, 413, 414], "kind": [15, 98, 349, 386, 400, 407], "beaus": 15, "make": [15, 54, 144, 243, 360, 369, 370, 378, 379, 380, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 407], "sure": [15, 144, 360, 379, 391, 396, 407], "check": [15, 20, 120, 221, 243, 366, 370, 372, 379, 382, 383, 387, 391, 395, 422], "symmetr": [15, 387, 399, 407, 414], "consecut": [15, 397, 403], "y": [15, 110, 111, 395], "o": [15, 253, 359, 371, 372, 377, 389, 395, 400, 405], "shape": [15, 16, 42, 81, 205, 248, 249, 350, 359, 372, 380, 381, 382, 386, 388, 393, 399, 401, 407], "df": [15, 387], "duplic": 15, "would": [15, 379, 383, 384, 387, 388, 391, 404], "perform": [15, 221, 227, 233, 243, 248, 249, 250, 359, 360, 364, 372, 373, 375, 376, 380, 381, 382, 385, 390, 393, 396, 397, 398, 399, 400, 401, 402, 403, 407, 410, 411, 413, 414, 420], "befor": [15, 221, 240, 243, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 360, 370, 373, 375, 379, 382, 383, 384, 387, 391, 394, 395, 396, 397, 399, 400, 402, 407, 414], "splice": 15, "de": 15, "total": [15, 221, 223, 248, 359, 360, 371, 383, 387, 391, 396, 403, 404], "step": [15, 221, 240, 243, 378, 379, 381, 383, 384, 385, 386, 387, 388, 394, 399, 401, 402, 407], "c": [15, 205, 351, 372, 377, 378, 379, 380, 382, 387, 389, 390, 391, 396, 398, 405, 407], "d": [15, 359, 371, 373, 393, 401], "f": [15, 350, 373, 386, 404, 414], "c1": 15, "d1": [15, 407], "c2": 15, "d2": 15, "c3": [15, 404], "d3": [15, 404], "now": [15, 253, 378, 379, 380, 382, 383, 384, 390, 394, 395, 402, 407, 412], "set": [15, 54, 213, 215, 222, 223, 236, 237, 243, 248, 249, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 360, 369, 371, 372, 380, 382, 383, 384, 386, 387, 388, 390, 391, 393, 394, 395, 398, 407], "part": [15, 213, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 383, 386, 387, 388, 391, 402, 403], "As": [15, 373, 379, 381, 383, 384, 397, 401, 403], "appli": [15, 221, 369, 374, 376, 390, 391, 394, 395, 399, 400, 401, 403, 407, 413, 414], "everi": [15, 240, 379, 393, 407], "right": [15, 248, 249, 369, 391, 397, 401, 403, 412], "construct_nod": 15, "attr": [15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 349, 379, 380, 394, 395], "construct": [15, 54, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369, 394, 395], "new_nod": 15, "insert_pattern": 15, "target_node_nam": 15, "replac": [15, 249, 372, 373, 376, 379, 383, 413, 414], "ccontain": 15, "insid": [15, 383, 386, 398, 400], "been": [15, 248, 249, 370, 373, 395, 399, 412], "pattern_map": [15, 379, 383], "pattern_nam": 15, "mapping_dict": 15, "mapping_config": 15, "first": [15, 139, 221, 243, 371, 378, 379, 382, 383, 385, 387, 388, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 414], "second": [15, 221, 248, 249, 360, 378, 383, 385, 386, 387, 397, 398, 401, 403, 404, 407, 414], "third": [15, 383, 398, 403, 409], "reshap": [15, 16, 42, 59, 180, 205, 379, 380, 381, 386], "paddingsequ": [15, 57, 146, 380], "search_mod": [15, 379, 383], "embed": [15, 248, 249, 380, 383, 387, 394], "m": [15, 350, 372, 373, 374, 381, 382, 389, 390, 391, 393, 396, 397, 398, 399, 400, 402, 403, 405, 407], "after": [15, 107, 144, 158, 180, 240, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 375, 378, 381, 382, 383, 384, 386, 387, 391, 393, 395, 400, 402, 403, 406, 407, 408, 414], "fusion": [15, 98, 144, 158, 386, 387, 394, 395, 400, 423], "about": [15, 369, 372, 379, 383, 386, 389, 391, 395, 403, 405], "in_pattern": 15, "input_id": [15, 248, 249, 376, 380, 388], "segment_id": [15, 376, 380], "input_mask": [15, 376, 380], "out_pattern": 15, "th": [15, 383], "berfor": 15, "match_result": 15, "_n": 15, "reshape_0": [15, 383], "dict": [15, 20, 203, 204, 207, 213, 221, 233, 238, 240, 241, 243, 248, 249, 253, 371, 379, 380, 413], "where": [15, 16, 42, 205, 248, 249, 359, 373, 383, 391, 393, 395, 398, 399, 401, 403, 407, 408], "go": [15, 391, 396], "mayb": [15, 382, 403], "happen": [15, 381, 403], "sepcial": 15, "biasadd": [15, 26, 383, 387], "bia": [15, 20, 221, 350, 381, 407], "unfix": 15, "locat": [15, 81, 379, 380, 383, 387, 403, 407, 415], "onli": [15, 213, 218, 221, 243, 248, 249, 253, 341, 360, 377, 380, 382, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 399, 401, 402, 403, 407, 410, 412], "write": [15, 371, 379, 387, 399, 400, 402], "note": [15, 240, 360, 374, 377, 379, 380, 381, 382, 383, 385, 386, 387, 391, 394, 395, 401, 402, 403, 407, 414], "That": [15, 402, 403], "too": [15, 379, 393, 394, 399], "decompos": [15, 379], "list2str": [15, 379], "src_perm": 15, "emit": [15, 383], "ret": [15, 387, 404], "str2list": 15, "src_str": 15, "pattern_mapping_conf_valid": 15, "conf_dict": 15, "lazyimport": 15, "module_nam": 15, "lazi": 15, "till": 15, "later": [15, 379, 387], "get_model_fwk_nam": 15, "avail": [15, 343, 346, 351, 357, 372, 377, 380, 391, 398], "fwk": 15, "na": [15, 221, 226, 243, 371, 392], "set_environ_var": 15, "env": [15, 385], "var": [15, 110, 111, 350], "kv": 15, "del_environ_var": 15, "delet": [15, 229, 413], "assert": [16, 42, 205, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359], "baddbmm": [16, 42, 205], "batch_matmul": [16, 42, 205], "batch_matmul_v2": [16, 42, 205], "bias_add": [16, 20, 42, 205], "cast": [16, 42, 205], "concat": [16, 42, 205, 379], "conv": [16, 42, 205, 221, 381, 382, 395], "co": [16, 42, 87, 205, 215, 229, 372], "empty_op": [16, 42, 205, 379], "expand_dim": [16, 42, 205], "fused_batch_matmul_v2": [16, 42, 205], "fused_batch_norm_v3": [16, 42, 205], "fused_gemm": [16, 42, 205], "fused_matmul": [16, 42, 205], "gather": [16, 42, 205, 243, 248, 249, 348, 379, 394], "gather_el": [16, 42, 205, 379], "gelu": [16, 42, 112, 205, 379, 386, 392, 395, 407], "gemm": [16, 42, 205, 221, 375, 393, 396, 399, 402, 407, 421], "iterator_get_next": [16, 42, 205], "iterator_v2": [16, 42, 205, 379], "layer_norm": [16, 42, 112, 205, 379], "log_softmax": [16, 42, 205], "map_and_batch_dataset": [16, 42, 205, 379], "matmul": [16, 20, 32, 42, 120, 205, 221, 375, 381, 383, 384, 387, 392, 402, 407, 421], "mkl_layer_norm": [16, 42, 205], "model_dataset": [16, 42, 205], "one_hot": [16, 42, 205], "onnx_input": [16, 42, 205], "optimize_dataset": [16, 42, 205, 379], "padding_sequ": [16, 42, 112, 205, 380], "placehold": [16, 42, 205], "pos_emb": [16, 42, 205], "pow": [16, 42, 205, 379, 383], "quantize_linear": [16, 42, 205, 379], "quantize_v2": [16, 42, 205], "quantized_fused_matmul_and_dequant": [16, 42, 205], "quantized_matmul_with_bias_and_dequant": [16, 42, 205], "reduce_mean": [16, 42, 205, 379], "reduce_sum": [16, 42, 205], "resiz": [16, 42, 205], "rsub": [16, 42, 205], "scatter_el": [16, 42, 205], "sin": [16, 42, 205], "size": [16, 42, 205, 213, 220, 221, 243, 248, 249, 359, 369, 372, 376, 380, 382, 388, 393, 396, 398, 400, 401, 402, 407, 414], "slice_position_id": [16, 42, 205], "softmax": [16, 42, 205, 248, 348, 359, 373, 392, 401, 402], "squeez": [16, 42, 205], "strided_slic": [16, 42, 205], "top_k": [16, 42, 205, 253, 391], "unpack": [16, 42, 205, 243, 379], "unsqueez": [16, 42, 205, 379], "view": [16, 42, 205, 370, 381, 393, 415], "innerproductreshapefus": [16, 105, 112, 205], "add_cls_token": [16, 112, 205], "add_embed": [16, 112, 205], "arangewithreciproc": [16, 112, 205], "attentionblock_attentionmaskaddreshap": [16, 112, 205], "attentionblock_constantofshapewithmul": [16, 112, 205], "attentionblock_qkvprereshap": [16, 112, 205], "attentionblock_qkvreshap": [16, 112, 205], "attentionblock_weightreshapeto4d": [16, 112, 205], "attention_mask_length_adaptive_keep_indic": [16, 112, 205], "attention_output_layer_norm_length_adaptive_keep_indic": [16, 112, 205], "attention_reshap": [16, 112, 205], "cast_to": [16, 112, 205], "collect_quant_info": [16, 112, 205], "conv_reshap": [16, 112, 205], "decoder_attn_reshap": [16, 112, 205], "einsumwitharang": [16, 112, 205], "embeddingbag": [16, 32, 112, 205], "embeddings_to_2d_before_inner_product": [16, 112, 205], "generate_sequ": [16, 112, 205], "innerproductwithbiasgelu": [16, 112, 205], "innerproductwithslic": [16, 112, 205], "innerproductwithswish": [16, 112, 205], "input_fil": [16, 112, 205], "insert_bf16_nod": [16, 112, 205], "insert_quant_nod": [16, 112, 205], "int8_bf16_mixed_precision_check": [16, 112, 205], "interact_featur": [16, 112, 205], "last_layer_shap": [16, 112, 205], "layer_norm_with_reduce_mean": [16, 112, 205, 379], "layer_norm_with_transpos": [16, 112, 205], "llama_embed": [16, 112, 205], "llama_matmulwithtranspos": [16, 112, 205], "llama_postprocess": [16, 112, 205], "llama_rotary_pos_emb": [16, 112, 205], "lower_all_tupl": [16, 112, 205], "matmul_with_bia": [16, 112, 205], "matmul_with_bias_add": [16, 112, 205], "matmul_with_bias_gelu": [16, 112, 205], "matmul_with_bias_relu": [16, 112, 205], "matmul_with_bias_sigmoid": [16, 112, 205], "matmul_with_bias_tanh": [16, 112, 205], "matmul_with_bias_unsqueez": [16, 112, 205], "matmul_with_transpos": [16, 112, 205], "matmul_with_transpose_scale_add": [16, 112, 205], "merged_embeddingbag": [16, 112, 205], "neox_reorder_chang": [16, 112, 205], "neox_rotary_pos_emb": [16, 112, 205], "operator_adaptor": [16, 112, 205], "output_data": [16, 112, 205, 380], "position_embed": [16, 112, 205], "position_embeddings_v1": [16, 112, 205], "qkv_merg": [16, 112, 205], "qkv_reshap": [16, 112, 205], "quant_gather_to_bf16": [16, 112, 205], "quantize_fus": [16, 112, 205], "quantized_graph_dtype_refactor": [16, 112, 205], "remove_constant_op": [16, 112, 205], "remove_last_view": [16, 112, 205], "remove_rang": [16, 112, 205], "remove_unused_oper": [16, 112, 205], "remove_zero": [16, 112, 205], "removeslic": [16, 112, 205], "reshape_after_restore_hidden_st": [16, 112, 205], "reshape_before_and_after_attention_out_layer_norm_gather_el": [16, 112, 205], "reshape_before_restore_hidden_st": [16, 112, 205], "reshape_fus": [16, 112, 205], "restore_hidden_states_in_length_adaptive_update_indic": [16, 112, 205], "rms_norm": [16, 112, 205], "rotary_pos_emb": [16, 112, 205], "slicemask": [16, 112, 205], "stablediffusion_explicitnhwctranspos": [16, 112, 205], "stablediffusion_mhareshap": [16, 112, 205], "stablediffusion_reshapefus": [16, 112, 205], "stablediffusion_bf16convert": [16, 112, 205], "start_end_logit": [16, 112, 205], "subgraph_match": [16, 112, 205, 382], "textencdoer_word_embed": [16, 112, 205], "textencoder_attentionmaskaddreshap": [16, 112, 205], "textencoder_attentionreshap": [16, 112, 205], "textencoder_kvreshap": [16, 112, 205], "textencoder_mulreshap": [16, 112, 205], "textencoder_qreshap": [16, 112, 205], "textencoder_softmaxreshap": [16, 112, 205], "textencoder_causal_attention_mask": [16, 112, 205], "token_type_embed": [16, 112, 205, 379], "token_type_embeddings_v1": [16, 112, 205, 379], "torch_embed": [16, 112, 205], "torch_ip_insert_bia": [16, 112, 205], "torch_unpack_baddbmm": [16, 112, 205], "torchinsertbf16nod": [16, 112, 152, 205], "torchpaddingsqu": [16, 112, 205], "transformer2dmodel_attentionmaskaddreshap": [16, 112, 205], "transformer2dmodel_constantofshapewithmul": [16, 112, 205], "transformer2dmodel_ffnslic": [16, 112, 205], "transformer2dmodel_ffnslice_1": [16, 112, 205], "transformer2dmodel_qkvprereshap": [16, 112, 205], "transformer2dmodel_qkvreshap": [16, 112, 205], "transformer2dmodel_qkvreshape4d": [16, 112, 205], "transformer2dmodel_encoderhiddenstatesreshap": [16, 112, 205], "transformer2dmodel_getsamplebatch": [16, 112, 205], "transformer2dmodel_sampleslic": [16, 112, 205], "transpose_batch_matmul": [16, 112, 205, 379], "word_embed": [16, 112, 205, 380], "frontend": [18, 398], "get_logg": 19, "log": [19, 372, 380, 386], "level": [19, 249, 341, 369, 372, 382, 395, 398, 406], "msg": 19, "arg": [19, 88, 211, 215, 229, 237, 240, 243, 253, 348, 359, 381, 386], "kwarg": [19, 88, 215, 221, 229, 240, 243, 248, 249], "debug": [19, 380, 388, 391], "fatal": 19, "warn": 19, "get_children": 20, "input_name_to_nod": 20, "get_node_children_nam": 20, "nodeproto": [20, 204], "get_initializer_children_nam": 20, "graph_node_names_detail": [20, 203, 204], "pars": [20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 87, 203, 380, 386], "graph_nodes_dict": [20, 203], "Be": [20, 203], "class": [20, 203, 213, 230, 238, 350, 351, 360, 371, 373, 379, 386, 394, 395], "cerat": 20, "output_nam": [20, 380], "ouput": 20, "param": [20, 203, 243, 394, 395], "node_names_detail": [20, 203], "is_supported_onnx_graph": [20, 285], "is_supported_onnx_nod": 20, "change_num_nam": 20, "number": [20, 213, 221, 223, 224, 249, 253, 360, 371, 382, 383, 387, 390, 393, 396, 402, 403, 407, 408, 414], "bias_to_int32": 20, "bias_nod": 20, "a_scal": 20, "b_scale": 20, "int8": [20, 221, 238, 243, 372, 374, 381, 382, 384, 390, 392, 395, 400, 401, 407, 414, 423], "int32": [20, 372, 380], "matric": [20, 396, 401, 402], "arrai": [20, 380], "fp32_bia": 20, "int8_bia": 20, "int8_bias_zero_point": 20, "int8_bias_scal": 20, "int32_bia": 20, "onnx_extract_oper": 20, "framework_model": [20, 53, 54, 203], "nodes_dict": [20, 53, 54, 203, 204], "engine_graph": [20, 53, 54, 203, 204], "tf_dtype": [20, 203, 204], "set_attr": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 379], "regist": [23, 32, 45, 54, 57, 60, 61, 70, 72, 76, 86, 147, 393, 394, 395, 396, 398, 399, 400, 401, 403, 423], "tile": [23, 32, 70, 393, 397, 399, 401, 402, 403, 407], "batchmatmul": 24, "batchmatmulv2": 25, "binaryop": [27, 394], "onnxruntim": [29, 30, 31, 37, 39, 60, 61, 66, 67, 69, 70, 71, 73, 78, 82, 83, 85, 86, 372, 375, 377, 379, 385], "multiheadattenion": 32, "binaryadd": [32, 394], "constantofshap": 32, "dequantizelinear": [32, 384], "dequant": [32, 394, 395, 399, 407], "erf": [32, 386], "expand": [32, 248, 249], "fill": [32, 383, 391, 401], "flatmapdataset": 32, "ident": [32, 369, 373, 391], "makeiter": 32, "matmulwithbiasadd": [32, 132], "matmulwithbiasgelu": [32, 133], "matmulwithbiastanh": [32, 136], "matmulwithbia": [32, 131], "qlinearmatmul": [32, 384], "qlinearadd": 32, "qlinearmul": 32, "realdiv": 32, "sqrt": [32, 379, 383, 401], "squar": [32, 248, 249], "stopgradi": 32, "tanh": [32, 386, 395, 407], "tensorslicedataset": 32, "transposebatchmatmul": [32, 201, 379], "rang": [32, 221, 243, 359, 372, 379, 382, 388, 391, 407, 413, 414], "relu": [32, 395, 407], "matmulwithbiasrelu": [32, 134], "cumsum": 32, "onehot": [32, 52], "tokentypeid": 32, "positionid": 32, "loop": [32, 243, 359, 379, 394, 396, 401], "sigmoid": 32, "matmulwithbiassigmoid": [32, 135], "flatten": 32, "mergedembeddingbag": [32, 140], "convolut": [32, 373, 382], "expandindic": 32, "opani": 32, "sequencelength": [32, 389], "arang": 32, "reciproc": 32, "einsum": 32, "repeat": [32, 390, 396, 408], "stack": [32, 402], "constant": [32, 155, 243], "listconstruct": 32, "latrang": 32, "masked_fil": 32, "floor_divid": 32, "listunpack": 32, "silu": 32, "zero": [32, 240, 395, 396, 398, 399, 403, 413], "expanddim": 33, "fusedbatchnormv3": 35, "fusedgemm": 36, "fusedmatmul": 37, "gatherv2": [38, 379], "gatherel": [39, 379], "iteratorgetnext": 43, "iteratorv2": [44, 379], "logsoftmax": [46, 348], "mapandbatchdataset": [47, 379], "modeldataset": 51, "onnxinput": 53, "operator_registri": [54, 379], "operator_typ": [54, 379], "cl": [54, 147, 359], "registr": [54, 147, 379], "ordereddict": [54, 379], "optimizedataset": [55, 379], "packagepositionembed": 59, "quantizelinear": [61, 379, 384], "quantiz": [61, 221, 226, 229, 236, 237, 243, 341, 372, 375, 390, 394, 395, 399, 400, 402, 407, 410, 418, 423], "quantizev2": 62, "quantizedmatmulwithbiasanddequant": 64, "reducemean": [65, 379, 383], "reducesum": 66, "aten": 70, "self": [70, 221, 248, 249, 253, 359, 371, 379, 381], "scalar": [70, 394], "alpha": [70, 350, 400, 407], "scatterel": 71, "primconst": 74, "slicepositionid": 76, "stridedslic": 80, "source_op": 81, "dest_op": 81, "definit": [81, 395], "topk": 82, "input_shap": [88, 381, 382, 407], "weight_optim": 88, "fuse": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 384, 394, 395], "acceler": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 364, 372, 374, 375, 384, 394, 395, 399, 401, 414, 420], "strategi": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 221, 237, 396], "addclstoken": [90, 98], "addembed": 91, "stabl": [93, 94, 95, 96, 110, 111, 176, 177, 178, 181, 182, 183, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 341, 372, 377, 388, 399], "diffusionv1": [93, 94, 95, 96, 177, 178, 181, 182, 183, 191, 192, 195, 196, 197], "attentionmasklengthadaptiveexpandindic": 98, "attentionoutputlayernormlengthadaptiveexpandindic": 99, "attentionreshap": 100, "castto": 101, "collectquantinfo": 102, "convreshap": 103, "decoderattnreshap": 104, "gatherwithadd": 107, "embeddingsto2dbeforeinnerproduct": 107, "operatoradaptor": [107, 144], "quantgathertobf16": [107, 152], "generatesequ": 109, "channel": [110, 111, 394, 398, 403, 407, 413], "separ": [110, 111, 369, 387, 403, 409], "num_group": [110, 111], "group": [110, 111, 374, 379, 387, 396, 401, 403, 413], "num_channel": [110, 111], "x": [110, 111, 224, 248, 249, 382, 395, 398, 399, 401, 402, 407, 414], "epsilon": [110, 111, 379], "gamma": [110, 111], "beta": [110, 111, 350, 400, 407], "http": [110, 111, 215, 218, 248, 253, 255, 371, 372, 377, 378, 380, 386, 409, 415], "pytorch": [110, 111, 213, 221, 224, 227, 229, 232, 236, 243, 248, 249, 251, 357, 371, 372, 375, 377, 385, 390, 406, 412, 413, 414], "org": [110, 111, 218, 248, 377], "doc": [110, 111, 215, 253, 379, 383, 394, 403], "nn": [110, 111, 220, 243, 398], "html": [110, 111, 386], "groupnorm": [111, 348], "inputdata": [116, 379], "inputfil": 117, "insertbf16nod": 118, "insertquantnod": 119, "quantizedgraphdtyperefactor": [120, 154], "int8bf16mixedprecisioncheck": 120, "inferenc": 120, "under": [120, 243, 372, 379, 380, 381, 384, 400, 407, 409], "in8": 120, "bf16": [120, 221, 243, 372, 374, 384, 392, 395, 397, 399, 402, 407], "mix": [120, 382], "precis": [120, 243, 375, 384, 411, 414, 423], "u8": [120, 384, 386, 395, 402, 407], "s8": [120, 384, 394, 395, 399, 407], "fp32": [120, 221, 243, 372, 374, 380, 381, 382, 384, 386, 390, 394, 395, 397, 398, 400, 402, 407, 412, 414], "interactfeatur": 121, "lastlayershap": 122, "layernormwithreducemean": [124, 379], "layernormwithtranspos": 125, "llamaembed": 126, "llamamatmulwithtranspos": 127, "llamapostprocess": 128, "roraryposemb": [129, 143, 167], "llamaroraryposemb": 129, "loweralltupl": 130, "matmulwithbiasunsqueez": 137, "matmulwithtranspos": [138, 139], "matmulwithtransposescaleadd": 139, "multiheadattent": 141, "bass": [141, 147, 170], "neoxreorderchang": 142, "neoxroraryposemb": 143, "sweep": 144, "receiv": [144, 229, 383, 387, 388, 391], "outputdata": [145, 379], "pattern_registri": [147, 379], "pattern_typ": [147, 379], "positionembed": 148, "positionembeddingsv1": 149, "qkvmerg": 150, "qkvreshap": 151, "qunatizefus": 153, "quantizedgraphdtypecheck": 154, "removeconstantop": 155, "removelastview": 156, "removerang": 157, "removeunusedoper": 158, "removezero": 159, "reshapeafterrestorehiddenst": 161, "reshapebeforeandafterattentionoutlayernormgatherel": 162, "reshapebeforerestorehiddenst": 163, "reshapefus": 164, "restorehiddenstatesinlengthadapt": 165, "rmsnorm": 166, "explicitnhwctransposeforconv": 169, "startendlogit": 174, "matcher": [175, 359, 384], "subgraphmatch": [175, 382], "textencoder_wordembed": 176, "textencoderv1": [176, 193, 194, 198, 199, 200], "qkv": [180, 382, 384], "textencoder_casualattentionmask": 183, "tokentypeembed": [184, 379], "tokentypeembeddingsv1": [185, 379], "torchembed": 186, "torchinnerproductinsertbia": 187, "torchunpackbaddbmm": 188, "torchpaddingsequ": 190, "transformer2dmodel_ffninputslic": 193, "transformer2dmodel_ffninputslice_1": 194, "transformer2dmodel_qkvreshapeto4d": 197, "wordembed": 202, "create_tf_nod": 203, "creat": [203, 218, 221, 227, 235, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 369, 379, 385, 386, 391, 398, 407, 410], "tendorflow": 203, "get_tensor_dest_op": 203, "store": [203, 221, 224, 227, 229, 359, 379, 383, 384, 387, 388, 393, 394, 395, 396, 397, 399, 400, 401, 403], "dest_op_nam": 203, "tf_extract_oper": 203, "tf_dtype_id": 203, "deal": [203, 359, 381], "multipl": [203, 244, 248, 249, 253, 360, 374, 379, 381, 391, 395, 396, 398, 399, 400, 401, 402, 403, 407, 410, 411], "indetermin": 203, "torch_extract_oper": 204, "neural_engine_bin": [205, 378], "datacollatorforsuperviseddataset": 207, "transform": [207, 215, 221, 237, 238, 243, 248, 249, 253, 359, 360, 364, 370, 373, 378, 379, 380, 394, 395, 400, 401, 402, 403, 409, 411, 412, 413, 414, 415, 420], "pretrainedtoken": [207, 215], "collat": 207, "supervis": 207, "fine": [207, 341, 371, 372, 391, 413, 414], "preprocess": [207, 220, 221, 371, 372, 402], "target": [207, 218, 220, 221, 243, 359, 381, 391, 403, 413], "pattern_match": 211, "source_list": 211, "task": [211, 213, 238, 249, 252, 359, 371, 372, 373, 374, 385, 391, 395, 401, 404, 412], "batch_siz": [211, 213, 215, 220, 221, 243, 248, 249, 252, 360, 372, 380, 381, 385, 391, 401, 407], "instanti": [211, 213, 229, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "model_arg": 213, "new_fewshot": 213, "devic": [213, 224, 232, 371, 373, 380, 382, 412], "cpu": [213, 221, 341, 349, 360, 371, 372, 376, 377, 380, 386, 389, 391, 393, 395, 404, 405, 412], "no_cach": 213, "limit": [213, 221, 373, 391, 398, 402], "bootstrap_it": 213, "100000": 213, "description_dict": 213, "check_integr": 213, "decontamination_ngrams_path": 213, "seed": [213, 221, 359, 390], "1234": 213, "user_model": 213, "model_format": [213, 215], "union": [213, 243, 350], "lm": 213, "get_model": 213, "create_from_arg_str": 213, "taken": [213, 248, 249], "eval_harness_nam": 213, "__name__": 213, "num_fewshot": 213, "shot": 213, "context": [213, 218], "batch": [213, 220, 243, 350, 372, 380, 398, 399, 401, 408], "cuda": [213, 371], "run": [213, 236, 243, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 360, 371, 391, 407, 408, 414], "bool": [213, 221, 222, 229, 243, 246, 248, 249, 250, 347, 348, 349, 350, 360, 373, 379, 394, 395, 410, 411], "whether": [213, 221, 229, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 366, 379, 381, 387, 407, 422], "cach": [213, 229, 348, 386, 396, 399, 400, 401, 407], "test": [213, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 370, 372, 374, 377, 389, 391, 405, 407, 408], "bootstrap": 213, "statist": 213, "dictionari": [213, 233, 243], "descript": [213, 243, 370, 371, 373, 381, 403, 410, 411, 413, 414], "task_nam": [213, 384, 385], "relev": [213, 372, 391], "suit": [213, 391], "provid": [213, 220, 221, 224, 229, 236, 237, 243, 248, 249, 253, 255, 341, 359, 360, 372, 374, 375, 376, 379, 388, 391, 392, 395, 400, 402, 410, 414], "autocausallm": 215, "pretrain": [215, 248, 249, 379, 391], "causal": [215, 249, 371], "languag": [215, 248, 249, 341, 369, 371, 372, 374, 412], "find": [215, 350, 359, 379, 382, 386, 387, 391, 398, 413], "hf": 215, "document": [215, 243, 341, 342, 370, 371, 372, 373, 376, 390, 391, 399, 401, 402, 403, 413, 414], "model_doc": 215, "auto": [215, 221, 227, 237, 371, 381, 386, 395], "automodelforcausallm": 215, "autoseq2seqlm": 215, "seq2seq": [215, 243, 248, 249], "automodelforseq2seqlm": 215, "multitokeneoscriteria": 215, "initial_decoder_input_length": 215, "criteria": [215, 411], "lambada": [217, 360], "word": [218, 248, 249, 374, 403], "predict": [218, 227, 243, 248, 249, 359, 371, 372, 373], "broad": 218, "discours": 218, "arxiv": [218, 248], "pdf": 218, "1606": 218, "06031": 218, "capabl": [218, 360, 391, 400, 403], "text": [218, 253, 341, 360, 372, 374, 385, 391, 395, 404, 409, 412], "understand": [218, 391, 396, 399], "collect": [218, 221, 360, 379, 381, 414], "narr": 218, "passag": 218, "share": [218, 243, 396], "characterist": [218, 369], "human": 218, "subject": [218, 409], "abl": [218, 401, 414], "guess": 218, "expos": [218, 394, 395], "sentenc": [218, 248, 249, 253, 360, 371, 372], "preced": 218, "succe": 218, "cannot": [218, 249, 350, 393, 399, 403, 408], "simpli": 218, "reli": 218, "local": [218, 229, 243, 379, 393, 396, 399], "keep": [218, 383, 390], "track": 218, "inform": [218, 237, 240, 340, 343, 346, 351, 357, 369, 370, 372, 373, 380, 381, 389, 391, 395, 398, 405, 406, 407, 413, 414, 415, 419], "broader": 218, "homepag": 218, "zenodo": 218, "2630551": 218, "x4xzn5nkjui": 218, "lambadastandard": 218, "standard": [218, 229], "lambadaopenai": 218, "openai": 218, "gpt": [218, 341, 371, 372, 374, 390], "github": [218, 253, 255, 370, 371, 372, 377, 378, 380, 386, 409, 415], "com": [218, 253, 255, 371, 372, 377, 378, 380, 389, 405, 409, 415], "issu": [218, 340, 359, 366, 369, 370, 372, 400, 414, 422], "131": [218, 389], "issuecom": 218, "497136199": 218, "pytorchbenchmark": 220, "executorbenchmark": 220, "refactor_batch_s": 220, "old_batch_s": 220, "batched_valu": 220, "get_example_input": [220, 360], "dataload": [220, 236, 243, 252, 360, 372], "batched_data": 220, "preprocess_model": 220, "example_input": [220, 360], "additional_cmd": 220, "jit": [220, 221, 243, 347, 348, 349, 350, 360, 364, 392, 394, 395, 398, 402, 407, 420], "trace": [220, 221, 360, 381], "benchmarkconfig": [220, 221, 360], "process": [220, 221, 227, 232, 233, 240, 243, 253, 359, 372, 374, 379, 380, 382, 383, 387, 388, 391, 393, 394, 396, 399, 400, 403, 413, 414], "raw_cmd": 220, "scriptmodul": 220, "model_name_or_path": [220, 229, 243, 253, 360, 371], "build": [220, 233, 237, 243, 359, 372, 377, 378, 390, 391, 393, 399, 400, 404, 411], "inc": [221, 229, 236, 237, 243, 385], "nncf": 221, "check_valu": 221, "src": [221, 350, 380, 395, 403, 407], "supported_typ": 221, "supported_valu": 221, "def": [221, 359, 360, 372, 379], "datatyp": [221, 374, 375], "uint8": [221, 401, 414], "_datatyp": 221, "dynamiclengthconfig": [221, 243, 376], "max_length": [221, 360, 372], "length_config": [221, 248, 249, 376], "const_rat": 221, "float": [221, 222, 237, 240, 241, 243, 246, 250, 350, 371, 373, 375, 379, 385, 394, 395, 396, 410, 411, 413, 414], "num_sandwich": 221, "length_drop_ratio_bound": [221, 223], "layer_dropout_prob": [221, 223], "layer_dropout_bound": [221, 223], "dynamic_train": 221, "load_store_fil": 221, "evo_it": 221, "30": [221, 391, 397], "population_s": 221, "20": [221, 360, 372, 377, 380, 385, 389, 397, 404, 405], "mutation_s": 221, "mutation_prob": [221, 224], "crossover_s": 221, "num_cpu": 221, "48": [221, 389, 390, 405], "distributed_world_s": 221, "latency_constraint": 221, "evo_eval_metr": 221, "eval_f1": [221, 224, 376, 410, 414], "dynam": [221, 226, 243, 386, 388, 391, 392, 394, 398, 400, 407, 421], "adapt": [221, 341, 369, 372, 391], "maximum": [221, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 388, 389, 405, 414], "drop": [221, 223, 374, 400, 403, 410], "ratio": [221, 223, 224, 240, 373, 405, 407, 410, 411, 413], "sandwich": 221, "num": [221, 359, 371, 381, 393, 395, 401], "train": [221, 227, 233, 236, 237, 240, 243, 341, 359, 371, 372, 373, 376, 406, 413], "dropout": [221, 223], "probabl": [221, 223, 359, 391, 400], "evolut": [221, 225, 226, 374], "popul": [221, 224], "mutat": [221, 224], "crossov": [221, 224], "distribut": [221, 252, 359, 373, 391, 400, 414, 415], "world": 221, "latenc": [221, 359, 360, 372, 374, 381, 389, 396, 414], "constraint": [221, 224, 414], "metric": [221, 226, 227, 233, 237, 243, 245, 359, 372, 376, 418], "quantizationconfig": [221, 236, 237, 243, 372, 376], "approach": [221, 233, 235, 371, 373, 374, 376, 395, 396], "posttrainingstat": [221, 374, 375, 376, 414], "basic": [221, 233, 249, 252, 372, 377, 386, 399], "timeout": [221, 414], "max_trial": [221, 359, 414], "100": [221, 243, 248, 249, 372, 391, 407, 414], "config_fil": 221, "sampling_s": 221, "use_bf16": 221, "recip": [221, 243, 371, 382, 411], "earli": [221, 414], "combin": [221, 243, 359, 382, 387, 391, 394, 395, 414], "decid": [221, 398, 414], "exit": [221, 414], "time": [221, 381, 388, 391, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 414], "evalu": [221, 224, 227, 233, 236, 237, 240, 243, 359, 373, 381, 391, 401, 410, 411, 413, 414], "accuraci": [221, 227, 243, 359, 373, 374, 376, 390, 399, 407, 410, 411, 413], "notraineroptim": [221, 236, 373, 413, 414], "guarante": [221, 414], "mani": [221, 223, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 379, 381, 383, 394, 396, 397, 400, 402, 407], "sampl": [221, 223, 243, 253, 359, 360, 371, 372, 376, 389, 401, 414], "neural_compressor": [221, 236, 243], "smooth_quant": 221, "smooth": 221, "smooth_quant_arg": 221, "fast_bias_correct": 221, "correct": [221, 369, 383, 387, 391, 401], "weight_correct": 221, "gemm_to_matmul": 221, "graph_optimization_level": 221, "disable_al": 221, "enable_bas": 221, "enable_extend": 221, "enable_al": 221, "first_conv_or_matmul_quant": 221, "last_conv_or_matmul_quant": 221, "pre_post_process_quant": 221, "postprocess": 221, "add_qdq_pair_to_weight": 221, "qdq": [221, 243, 375, 384], "vaild": 221, "onnxrt_trt_ep": 221, "optypes_to_exclude_output_qu": 221, "optyp": 221, "dedicated_qdq_pair": 221, "dedic": 221, "pruningconfig": [221, 376], "epoch": [221, 240, 413], "epoch_rang": [221, 241], "initial_sparsity_ratio": [221, 241], "target_sparsity_ratio": [221, 241, 376, 413], "97": [221, 241, 405, 413], "pruner_config": [221, 376, 413], "pruner": [221, 226, 241, 243, 373, 413], "prune": [221, 226, 236, 237, 239, 243, 248, 249, 341, 372, 418], "goal": [221, 243, 413], "behavior": [221, 243, 369, 370, 373, 391, 393, 394, 399, 413, 414], "nlp": [221, 243, 253, 255, 341, 371, 372, 374, 376, 380, 413, 414], "wil": 221, "basicmagnitud": [221, 241, 374, 376, 413], "typel": 221, "init_prune_config": 221, "init": [221, 227, 236, 237, 239, 251, 252, 359, 378, 380, 395], "distillationconfig": [221, 243, 376], "criterion": [221, 222, 237, 246, 376, 410, 414], "distil": [221, 226, 227, 236, 237, 243, 371, 372, 385, 418], "inc_config": 221, "knowledgeloss": [221, 222, 373], "tfdistillationconfig": [221, 359], "loss_typ": [221, 222, 359, 373], "loss_weight": [221, 359], "train_step": [221, 359], "temperatur": [221, 222, 253, 359, 371, 373], "loss": [221, 243, 248, 249, 359, 371, 373, 414], "knowledgedistillationloss": [221, 373], "flashdistillationconfig": 221, "block_nam": [221, 359], "layer_mappings_for_knowledge_transf": [221, 359], "add_origin_loss": [221, 222, 359, 373], "flash": [221, 227, 243], "autodistillationconfig": [221, 359], "search_spac": [221, 233, 359], "search_algorithm": [221, 359], "bo": [221, 359, 409], "knowledge_transf": [221, 359], "regular_distil": [221, 359], "disil": 221, "space": [221, 227, 233, 243, 359, 369, 370, 382, 391, 393, 396], "bayesian": [221, 359], "architectur": [221, 227, 233, 237, 243, 248, 249, 359, 372, 377, 393, 400, 402], "candid": 221, "trial": [221, 243], "random": [221, 248, 359, 391, 400], "knowledg": [221, 243, 341, 359, 371, 372], "transfer": [221, 243, 252, 373], "stage": [221, 227, 243, 359], "autodistil": [221, 227, 237, 243, 418], "regular": [221, 227, 413], "nasconfig": [221, 233, 235], "parser": 221, "procedur": [221, 407], "backend": [221, 243, 251, 360, 372, 374, 376, 377, 378, 379, 382, 384, 387, 388, 392, 407, 414], "warmup": [221, 360, 382, 388], "cores_per_inst": [221, 243, 360], "num_of_inst": [221, 243, 360], "benchmark": [221, 226, 243, 244, 372, 382, 389, 392, 405, 408, 418], "skip": [221, 360, 396, 408], "core": [221, 360, 380, 389, 390, 391, 393, 399, 400, 405, 408, 409], "enabl": [221, 360, 375, 376, 389, 391, 393, 399, 400, 404, 405], "prunerv2": 221, "target_spars": 221, "pruning_typ": 221, "op_nam": 221, "excluded_op_nam": 221, "start_step": 221, "end_step": 221, "pruning_scop": 221, "pruning_frequ": 221, "min_sparsity_ratio_per_op": 221, "max_sparsity_ratio_per_op": 221, "sparsity_decay_typ": 221, "pruning_op_typ": 221, "reg_typ": [221, 395], "criterion_reduce_typ": 221, "resume_from_pruned_checkpoint": 221, "similiar": 221, "weightpruningconfig": 221, "pruning_config": [221, 236, 237, 243, 376, 413], "snip_momentum": 221, "4x1": [221, 381, 393, 403], "global": 221, "98": [221, 405], "exp": [221, 395, 402, 407], "linear": [221, 359, 373, 395, 398, 401], "ce": [222, 359, 373], "loss_weight_ratio": [222, 373], "layer_map": [222, 373], "distillationcriterionmod": 222, "restor": [223, 374], "sample_length_configur": 223, "max_seq_length": [223, 224], "num_hidden_lay": 223, "layer_config": [223, 248, 249], "length_drop_prob": 223, "length_drop_ratio": 223, "min_length": 223, "hidden": [223, 248, 249, 359, 396], "truncat": [223, 372], "less": [223, 360, 373, 382, 391, 399, 403, 413], "min": [223, 243, 414], "sample_layer_configur": 223, "layer_dropout": 223, "depend": [223, 233, 370, 378], "paramat": 223, "bound": 223, "kept": [223, 391], "evolust": 224, "evolustionari": 224, "approx_ratio": 224, "12": [224, 377, 378, 381, 389, 390, 397, 401, 404, 405, 407], "l": [224, 359, 373, 390, 391], "384": [224, 359, 382, 389, 405], "approxim": [224, 402], "invers": [224, 402], "store2str": 224, "gene": 224, "mac": 224, "score": [224, 248, 249, 412], "parent": 224, "parmat": 224, "lower_constraint": 224, "upper_constraint": 224, "eval_metr": 224, "evolutionari": [224, 243], "load_stor": 224, "store_fil": 224, "save_stor": 224, "get_stor": 224, "set_lower_constraint": 224, "setter": [224, 248, 249], "lower": [224, 253, 391, 403, 411, 414], "set_upper_constraint": 224, "upper": [224, 395], "save_popul": 224, "population_fil": 224, "convex_hul": 224, "pareto_fronti": 224, "add_gen": 224, "rai": 224, "packag": [225, 228, 341, 371, 372], "drop_and_restore_util": [225, 226], "mixtur": 226, "auto_distil": [226, 228, 359], "basic_na": [226, 234], "get_throughput": [226, 245], "utility_tf": [226, 245], "optimizer_tf": 226, "trainer": [226, 236, 357, 372, 374, 375, 376], "handl": [227, 243, 248, 249, 340, 348, 359, 386, 397, 398], "model_build": [227, 233, 237, 243, 359], "conf_fname_or_obj": [227, 233, 235], "design": [227, 243, 379, 391, 394, 395, 406, 418], "three": [227, 240, 241, 242, 243, 359, 372, 379, 383, 387, 401, 402, 413, 414], "major": [227, 243, 359, 393, 399, 400, 402, 403, 414], "explor": [227, 243, 359, 376], "compress": [227, 243, 341, 359, 373, 376, 393, 397, 399, 403, 406, 414], "discov": [227, 243, 359], "potenti": [227, 243, 350, 359, 370, 391, 400], "measur": [227, 243, 359, 360, 373, 392, 410, 411, 413, 414], "hardwar": [227, 243, 359, 370, 373, 404, 406], "select": [227, 243, 248, 249, 359, 391, 395, 407], "best": [227, 233, 243, 359, 369, 374, 391], "res_save_path": [227, 233], "model_cl": [227, 237, 243, 359], "found": [227, 233, 372, 378, 379, 403], "estim": [227, 233, 381, 403], "load_search_result": 227, "init_by_cfg": [227, 233], "create_distil": 227, "optimizedmodel": 229, "from_pretrain": [229, 248, 249, 360, 372, 376, 412], "function": [229, 233, 236, 237, 240, 243, 347, 348, 349, 359, 373, 379, 382, 383, 386, 387, 388, 391, 394, 395, 407, 410, 413, 414], "classmethod": [229, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "intel": [229, 253, 340, 360, 370, 376, 378, 379, 380, 389, 390, 393, 404, 405, 409, 411, 412, 413, 414, 415], "compressor": [229, 232, 237, 341, 360, 372, 411, 414], "repositori": [229, 372], "hug": [229, 341, 372, 384], "face": [229, 341, 342, 369, 372, 384], "hub": [229, 412], "directori": [229, 236, 384, 406], "host": 229, "cache_dir": 229, "download": [229, 248, 249, 415], "force_download": 229, "forc": 229, "resume_download": 229, "incomplet": 229, "attempt": 229, "resum": [229, 243], "revis": 229, "branch": [229, 407], "tag": 229, "commit": [229, 369, 408], "sinc": [229, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 373, 399, 400, 402], "git": [229, 371, 372, 377, 378, 380], "system": [229, 372, 378], "artifact": 229, "huggingfac": [229, 253, 372, 385, 410, 412], "allow": [229, 360, 391], "q_model": 229, "incencod": 232, "incdecod": 232, "pretrainedconfig": 232, "basicna": 233, "conf_fnam": 233, "obj": [233, 235], "execut": [233, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 348, 359, 372, 382, 386, 392, 394, 395, 399, 400, 402, 404, 407, 408, 414], "common": [235, 369, 372, 414], "nasbas": 235, "orchestr": [236, 243], "orchestrate_optim": [236, 243], "compon": [236, 243, 394, 409], "experiment": [236, 243, 390, 395], "eval_func": [236, 237, 243, 359], "train_func": [236, 237, 243, 359], "saved_result": [236, 372], "aggreg": 236, "fit": [236, 396], "schedul": [236, 243, 359, 364, 392, 420], "save_model": [236, 252, 372], "json": [236, 253, 371], "pytorch_model": 236, "init_quant": [236, 237, 243, 394], "quant_config": [236, 237, 243, 372, 376, 414], "calib_func": 236, "calib_dataload": [236, 243], "prepar": [236, 237, 248, 249, 371, 381, 383, 386, 394, 395, 403, 414], "invok": [236, 237], "_inc_quant": 236, "calibr": [236, 243, 414], "init_prun": [236, 237, 243], "init_distil": [236, 237, 243], "distillation_config": [236, 237, 243, 373, 376], "teacher_model": [236, 237, 243, 359, 373, 376], "teacher": [236, 237, 359, 373, 374], "tfoptim": [237, 359, 373], "pretrainedmodel": [237, 243, 359], "training_args_tf": 237, "tftrainingargu": 237, "train_dataset": [237, 359, 372, 376], "eval_dataset": [237, 359, 372, 376], "compute_metr": [237, 359, 372], "task_typ": [237, 252], "task_id": [237, 252], "techniqu": [237, 372, 374, 376, 391, 414], "builtin_eval_func": [237, 243], "saved_model": 237, "quantized_model_path": 237, "larger": [237, 243, 391], "model_builder_builtin": [237, 243, 359], "arch_para": [237, 243], "built": [237, 359, 391, 411], "builder": [237, 359], "autodistillation_config": [237, 243, 359], "build_train_func": 237, "infer_framework_load_model": 238, "autoconfig": [238, 372, 376, 412], "model_class": 238, "model_kwarg": [238, 248, 249, 412], "config_file_path": 240, "pruner_info": 240, "update_config": 240, "current": [240, 241, 242, 381, 390, 391, 394, 395, 396, 398, 399, 401, 406, 407], "get_sparsity_ratio": 240, "elementwise_over_matmul_gemm_conv": 240, "elementwise_over_al": 240, "blockwise_over_matmul_gemm_conv": 240, "block": [240, 248, 249, 374, 388, 393, 396, 397, 398, 399, 400, 402, 403, 413], "on_train_begin": 240, "implement": [240, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 364, 372, 379, 382, 383, 387, 390, 392, 393, 394, 396, 398, 399, 400, 401, 402, 404, 407, 420], "begin": [240, 249, 359, 391, 394, 395], "ensur": [240, 391, 399], "on_epoch_begin": 240, "on_step_begin": 240, "local_step": 240, "on_before_optimizer_step": 240, "on_step_end": 240, "on_epoch_end": 240, "on_train_end": 240, "phase": [240, 373, 413], "on_before_ev": 240, "on_after_ev": 240, "on_after_optimizer_step": 240, "pruningmod": 241, "prunerconfig": [241, 376], "update_frequ": 241, "prune_typ": [241, 376, 413], "per_tensor": 241, "quantizationmod": 242, "easili": [243, 393, 394], "finetun": [243, 372, 374, 376, 412], "basetrain": 243, "builtin_train_func": 243, "automativ": 243, "low": [243, 372, 376, 391, 393, 400, 402, 411, 414, 423], "achiev": [243, 372, 391, 396, 411], "pruningconf": 243, "smaller": [243, 373, 391, 413], "config_list": 243, "optimizt": 243, "create_optimizer_builtin": 243, "resume_from_checkpoint": 243, "optuna": 243, "ignore_keys_for_ev": 243, "tor": 243, "checkpoint": [243, 248], "present": [243, 248, 402], "state": [243, 248, 249, 372, 389, 391, 405], "hyperparamet": [243, 359, 391], "dure": [243, 380, 388, 391, 399, 403, 408, 411, 413, 414], "hide": [243, 248, 249], "deprec": [243, 248, 249], "training_step": 243, "inject": [243, 391, 395], "being": [243, 391], "fed": 243, "most": [243, 372, 383, 387, 388, 391, 394, 395, 396, 399, 401, 412], "expect": [243, 248, 249, 369, 370, 391, 403, 411], "label": [243, 248, 249, 253, 371, 408, 412], "accept": [243, 369, 412], "training_step_length_adapt": 243, "compute_loss": 243, "return_output": 243, "By": [243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 391], "nas_config": 243, "baseic": 243, "callabel": 243, "auto_distil_evaluation_loop": 243, "prediction_loss_onli": 243, "ignore_kei": 243, "metric_key_prefix": 243, "eval": [243, 359, 410], "trainer_util": 243, "evalloopoutput": 243, "doe": [243, 379, 394, 395, 396, 397, 398, 401, 407], "huge": 243, "prefix": [243, 407], "export_to_onnx": [243, 372, 375], "tranfer": 243, "paramert": 243, "export_to_fp32_onnx": 243, "save_path": [243, 375], "opset_vers": [243, 375], "14": [243, 375, 389, 397, 404, 405], "do_constant_fold": [243, 375], "verbos": [243, 375, 391], "export": [243, 372, 381, 384, 412, 418], "fold": [243, 407], "export_to_bf16_onnx": 243, "export_to_int8_onnx": 243, "quant_format": [243, 375], "s8s8": [243, 375, 399], "sample_s": 243, "calibrate_method": 243, "minmax": 243, "scale_map": [243, 372], "export_to_jit": 243, "set_dynamic_config": [243, 376], "dynamic_config": [243, 376], "run_evolutionary_search": 243, "nlptrainer": [243, 372, 373, 376, 413, 414], "nlpseq2seqtrain": 243, "special": [244, 395, 401], "trigger": [244, 370, 391], "greater_is_bett": [246, 250, 359, 376, 410, 411, 414], "is_rel": [246, 376, 410, 414], "01": [246, 376, 405, 410, 414], "weight_ratio": [246, 250, 410, 411, 414], "modeling_bert_dynam": 247, "modeling_roberta_dynam": 247, "bert": [248, 359, 372, 373, 374, 380, 381, 382, 385, 387, 388, 389, 394, 399, 400, 401, 402], "load_tf_weights_in_bert": 248, "tf_checkpoint_path": 248, "bertembed": [248, 249], "posit": [248, 249, 369, 372, 376, 382, 387, 391, 407, 412], "token_typ": 248, "forward": [248, 249, 359, 381, 386, 414], "longtensor": [248, 249], "token_type_id": [248, 249, 388], "position_id": [248, 249], "inputs_emb": [248, 249], "floattensor": [248, 249], "past_key_values_length": [248, 249], "bertselfattent": 248, "position_embedding_typ": [248, 249], "transpose_for_scor": [248, 249], "hidden_st": [248, 249], "attention_mask": [248, 249, 388], "head_mask": [248, 249], "encoder_hidden_st": [248, 249], "encoder_attention_mask": [248, 249], "past_key_valu": [248, 249], "output_attent": [248, 249], "bertselfoutput": 248, "bertattent": 248, "prune_head": [248, 249], "bertintermedi": 248, "intermedi": [248, 359, 379, 384, 387, 403, 414], "bertoutput": 248, "bertlay": 248, "output_length": [248, 249], "always_keep_cls_token": [248, 249], "feed_forward_chunk": [248, 249], "attention_output": [248, 249], "feed": [248, 249, 373, 380], "chunk": 248, "bertencod": 248, "use_cach": [248, 249], "output_hidden_st": [248, 249], "return_dict": [248, 249], "modeling_output": [248, 249], "basemodeloutputwithpastandcrossattent": [248, 249], "bertpool": 248, "pooler": [248, 249], "bertpredictionheadtransform": 248, "bertlmpredictionhead": 248, "bertonlymlmhead": 248, "mask": [248, 249, 350, 374, 394, 395, 397, 399, 402], "sequence_output": 248, "bertonlynsphead": 248, "pooled_output": 248, "bertpretraininghead": 248, "bertpretrainedmodel": 248, "abstract": [248, 249], "simpl": [248, 249, 372, 377, 380, 390, 394, 402, 412], "bertforpretrainingoutput": 248, "bertforpretrain": 248, "sum": [248, 360, 373, 381, 400, 402, 403, 407], "classif": [248, 249, 341, 359, 372, 373, 374, 385, 412], "prediction_logit": [248, 249], "sequence_length": [248, 249], "vocab_s": [248, 249], "vocabulari": 248, "seq_relationship_logit": 248, "continu": [248, 391, 393, 396, 400, 401], "hidden_s": [248, 249, 359], "plu": 248, "num_head": [248, 249], "averag": [248, 360, 372, 381], "bertmodel": 248, "add_pooling_lay": [248, 249], "behav": [248, 249], "well": [248, 249, 375, 414, 415], "case": [248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 373, 374, 381, 382, 388, 391, 393, 395, 396, 397, 407, 408], "cross": [248, 249], "ad": [248, 249, 379, 383, 387, 391, 394, 403, 407, 412], "describ": [248, 249, 349, 371, 396, 398, 401, 407, 410, 411], "ab": [248, 414], "1706": [248, 389, 405], "03762": 248, "ashish": [248, 249], "vaswani": [248, 249], "noam": [248, 249], "shazeer": [248, 249], "niki": [248, 249], "parmar": [248, 249], "jakob": [248, 249], "uszkoreit": [248, 249], "llion": [248, 249], "jone": [248, 249], "aidan": [248, 249], "gomez": [248, 249], "lukasz": [248, 249], "kaiser": [248, 249], "illia": [248, 249], "polosukhin": [248, 249], "is_decod": [248, 249], "add_cross_attent": [248, 249], "get_input_embed": [248, 249], "getter": [248, 249], "set_input_embed": [248, 249], "set_length_config": [248, 249], "set_output_attent": [248, 249], "basemodeloutputwithpoolingandcrossattent": [248, 249], "pad": [248, 249, 360, 372, 381, 399, 403, 407], "indic": [248, 249, 350, 387, 394, 395, 401, 403, 407, 410], "n_layer": [248, 249], "embed_size_per_head": [248, 249], "precomput": [248, 249], "speed": [248, 249, 379, 383, 391], "decoder_input_id": [248, 249], "those": [248, 249, 401, 413, 414], "instead": [248, 249, 391, 396], "get_output_embed": [248, 249], "set_output_embed": [248, 249], "new_embed": [248, 249], "next_sentence_label": 248, "docstr": [248, 249], "legaci": [248, 249], "berttoken": 248, "uncas": [248, 359, 372, 374, 376, 384, 412], "hello": [248, 249, 391], "my": [248, 249], "dog": [248, 249], "cute": [248, 249], "return_tensor": [248, 249, 360, 372, 376], "pt": [248, 249, 360, 372, 376, 412], "bertlmheadmodel": 248, "causallmoutputwithcrossattent": [248, 249], "prepare_inputs_for_gener": [248, 249], "bertformaskedlm": 248, "maskedlmoutput": [248, 249], "bertfornextsentencepredict": 248, "nextsentencepredictoroutput": 248, "prompt": 248, "itali": 248, "pizza": 248, "serv": 248, "formal": 248, "restaur": 248, "unslic": 248, "next_sent": 248, "sky": 248, "blue": 248, "shorter": [248, 391], "wavelength": 248, "light": 248, "logit": [248, 249, 359, 372, 373, 376, 380], "wa": 248, "bertforsequenceclassif": 248, "sequenceclassifieroutput": [248, 249], "regress": [248, 249, 371], "num_label": [248, 249, 372, 376], "entropi": [248, 249, 359, 391], "bertformultiplechoic": 248, "choic": [248, 249, 374, 388], "multiplechoicemodeloutput": [248, 249], "num_choic": [248, 249], "dimens": [248, 249, 359, 373, 382, 398, 399, 401, 403, 407], "bertfortokenclassif": 248, "tokenclassifieroutput": [248, 249], "bertforquestionansw": 248, "question": [248, 369, 370, 372, 374, 397], "answer": [248, 249, 369, 374], "start_posit": [248, 249], "end_posit": [248, 249], "questionansweringmodeloutput": [248, 249], "span": [248, 249], "clamp": [248, 249], "account": [248, 249, 369], "expand_gath": [248, 249], "dim": [248, 249, 380, 386, 393, 399, 403, 407], "roberta": [249, 374], "robertaembed": 249, "tini": [249, 374], "tweak": 249, "create_position_ids_from_inputs_emb": 249, "directli": [249, 391, 394, 397, 400], "sequenti": [249, 383, 394, 395, 398], "robertaselfattent": 249, "robertaselfoutput": 249, "robertaattent": 249, "attenion": 249, "robertaintermedi": 249, "intermidi": 249, "robertaoutput": 249, "robertalay": 249, "robertaencod": 249, "roberata": 249, "robertapool": 249, "robertapretrainedmodel": 249, "update_keys_to_ignor": 249, "del_keys_to_ignor": 249, "robertamodel": 249, "_": [249, 359, 371, 373, 378, 379, 380, 381, 382, 383, 384, 386, 387, 391, 392, 393, 394, 395, 399, 400, 401, 402, 407, 410, 411, 412, 413, 414], "robertaforcausallm": 249, "robertatoken": 249, "robertaconfig": 249, "robertaformaskedlm": 249, "robertalmhead": 249, "featur": [249, 341, 359, 368, 370, 372, 373, 384, 387, 390, 393, 400, 404, 412, 415, 424], "robertaforsequenceclassif": 249, "robertaformultiplechoic": 249, "robertafortokenclassif": 249, "robertaclassificationhead": 249, "robertaforquestionansw": 249, "quanstion": 249, "create_position_ids_from_input_id": 249, "padding_idx": 249, "non": [249, 391, 398, 401, 403, 407, 408], "symbol": 249, "fairseq": 249, "make_posit": 249, "models": [250, 374, 411], "distributed_init": [251, 252], "gloo": 251, "world_siz": 251, "rank": [251, 391], "init_method": 251, "master_addr": 251, "127": [251, 381, 404, 405, 414], "master_port": 251, "12345": 251, "distibut": 251, "tfdataload": 252, "worker_address": 252, "worker": 252, "address": [252, 341, 369, 394, 399, 400], "treat": [252, 379], "chief": 252, "get_filepath": 252, "base_dirpath": 252, "folder": [252, 378, 379, 380, 381, 382, 384], "keras2savedmodel": 252, "kera": 252, "augment": [253, 255, 418], "extens": [253, 370, 376, 378, 379, 380, 409, 411, 412, 413, 415], "blob": 253, "md": [253, 381, 384], "dataaugment": [253, 371], "augmenter_typ": [253, 371], "wai": [253, 372, 381, 382, 383, 387, 390, 391, 393, 395, 401, 404], "enhanc": [253, 376, 398], "textgenerationaug": [253, 371], "keyboardaug": [253, 371], "aug": [253, 341, 371], "input_dataset": [253, 371], "origin_data": 253, "output_path": [253, 371, 390], "join": [253, 371], "result_path": [253, 371], "test1": [253, 371], "cv": [253, 371], "augmenter_argu": [253, 371], "gpt2": [253, 371], "medium": [253, 341, 371, 372, 408], "data_aug": [253, 371], "text_generation_augment": 253, "raw_dataset": [253, 371, 372, 376], "No": [253, 374], "glue": [253, 371, 372], "sst2": [253, 360, 371, 372, 374, 381, 385], "eo": [253, 371, 391], "k": [253, 350, 371, 382, 394, 396, 397, 398, 399, 401, 402, 403, 405, 407], "p": [253, 371, 372, 390], "top_p": [253, 391], "effect": [253, 341, 371, 372, 379, 391, 407], "tend": 253, "toward": [253, 369], "greedi": 253, "repetition_penalti": 253, "primarili": [253, 391], "ctrl": [253, 371, 374, 391], "num_return_sent": 253, "entir": [253, 381, 393, 399, 400, 413], "num_sampl": 253, "condit": [253, 371, 382, 383, 409], "stop_token": 253, "mit_data_augment": 253, "nlpaug": [253, 255, 371], "librari": [253, 255, 364, 370, 394, 395, 420], "help": [253, 255, 371, 372, 387, 391, 394, 406], "machin": [253, 255, 371, 407], "learn": [253, 255, 341, 371, 384, 391, 395, 411, 414], "project": [253, 255, 369, 370, 371, 390], "makcedward": [253, 255], "suffix": 253, "csv": [253, 371], "column_nam": 253, "sentence1": 253, "sentence2": 253, "data_augment": [254, 371], "augmentertyp": 255, "get_augmenter_from_typ": 255, "aug_typ": 255, "augment_typ": 255, "testaddclstoken": 257, "methodnam": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "runtest": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "whose": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 359, 387], "singl": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 390, 396, 401], "itself": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 404], "place": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 388, 395, 400, 413], "fixtur": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "testcas": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "constructor": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 386], "author": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 409], "deconstruct": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "setup": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "teardown": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "__init__": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 379], "alwai": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 387, 391, 399, 408], "chang": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 370, 379, 390, 391, 393, 394, 403, 408, 409], "signatur": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "failureexcept": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "determin": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369, 382, 391, 404], "except": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 382, 391, 394], "rais": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 391], "fail": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "deem": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369], "longmessag": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "long": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 387], "messag": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 391], "includ": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 348, 349, 350, 369, 370, 372, 374, 380, 381, 382, 391, 392, 395, 403, 407, 409, 414], "repr": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "print": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 379, 387, 391], "failur": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "explicit": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 348, 369, 386, 395], "maxdiff": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "diff": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "difflib": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "look": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 379, 381, 391, 395, 396], "individu": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 369], "setupclass": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "hook": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "teardownclass": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "testaddembed": 258, "testtorchop": [259, 262, 265, 267, 272, 275, 279, 280, 289, 290, 292, 294, 295, 301, 305, 308, 310, 319, 320, 321, 324, 329, 333], "testattentionreshap": [260, 261, 314, 317], "testtorchmodel": [263, 281], "testbinaryop": 264, "testcastto": 266, "testconvreshap": 268, "testdecoderattnreshap": 269, "testdispatchertuningacc": 270, "testdispatchertuningthroughput": 271, "testdynamicquant": 273, "testelectra": 274, "testembeddingbag": 276, "testexecutionopt": [277, 283], "testfwk": 278, "testgraphdispatch": 282, "testinsertinputouputdata": 284, "testissupportedonnxgraph": 285, "testlastlayershap": 286, "testlayernormwithreducemean": [287, 316, 318], "testlayernormwithtranspos": 288, "testtorchlinear": 291, "testmain": 293, "testmatmulwithbiasrelu": 296, "testmatmulwithbiassigmoid": 297, "testmatmulwithbiastanh": 298, "testmergedembeddingbag": 299, "testonnxutil": 302, "testoperatoradaptor": 303, "testop": 304, "testpaddingsequ": 306, "testpatterndispatch": 307, "testpositionembed": 309, "testprimitivecacheacc": 311, "testprimitivecachethroughput": 312, "testqkvmerg": 313, "testquantonnxexecut": 315, "teststartendlogit": 322, "testscbuff": 323, "testtextencod": 325, "testtextencoderbf16": 326, "testtfutil": 327, "testtokentypeembed": 328, "testtransposebatchmatmul": 330, "testunet": 331, "testunetbf16": 332, "testvaedecod": 334, "testvaedecoderbf16": 335, "testweightsharingacc": 336, "testweightsharingdispatchertuningacc": 337, "testweightsharingdispatchertuningthroughput": 338, "testweightsharingthroughput": 339, "center": 340, "guidelin": 340, "innov": [341, 372], "toolkit": [341, 372, 374], "particular": 341, "4th": [341, 372], "xeon": [341, 372, 374, 377, 393, 402, 405, 409, 414], "scalabl": [341, 372, 374, 377, 394], "processor": [341, 372, 374, 377, 389, 405], "sapphir": [341, 372, 377], "rapid": [341, 372, 377], "codenam": 341, "seamless": [341, 372, 391], "experi": [341, 369, 372, 391, 397, 402, 403], "extend": [341, 372, 396], "leverag": [341, 359, 372, 373, 376, 391], "advanc": [341, 359, 369, 372, 392, 404], "softwar": [341, 372, 409], "uniqu": [341, 372], "awar": [341, 372], "runtim": [341, 350, 372, 404, 407, 414], "releas": [341, 372, 419], "neurip": [341, 372], "2022": [341, 372, 389, 405], "paper": [341, 372, 376], "distilbert": [341, 359, 372, 374, 376, 384, 412], "quala": [341, 372, 374, 376], "minilm": [341, 372, 374, 376], "2021": [341, 372], "onc": [341, 372, 381, 391, 402], "pre": [341, 372, 383, 396, 406], "diffus": [341, 372, 374, 399], "j": [341, 372, 374, 378, 379, 380, 392, 398, 403, 404, 407], "6b": [341, 372, 374], "neox": [341, 372, 390], "bloom": [341, 372], "176b": [341, 372], "t5": [341, 372, 374], "flan": [341, 372], "workflow": [341, 372, 373, 382, 384, 401], "setfit": [341, 372], "sentiment": [341, 372], "analysi": [341, 372], "dlsa": [341, 372], "neuralchat": [341, 372], "chatbot": [341, 372], "through": [341, 360, 372, 379, 394, 397, 398, 399, 404], "effici": [341, 372, 376, 388], "peft": [341, 372], "domain": [341, 364, 372, 391, 392, 420], "blog": [341, 372], "publish": [341, 369, 372, 409], "april": 341, "2023": [341, 409], "tech": 341, "artifici": 341, "intellig": 341, "ai": [341, 372], "With": [341, 402, 414], "mlperf": 341, "bar": 341, "5x": 341, "commun": [341, 369], "mleffici": [341, 372], "dec": [341, 372], "nov": [341, 372], "coher": [341, 391, 400], "novemb": 341, "alibaba": 341, "deep": [341, 371, 372, 384, 395, 411, 414], "purif": 341, "kernel": [342, 350, 368, 380, 381, 386, 389, 390, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 424], "namespac": [347, 348, 349, 350], "jd": [347, 348, 349, 350, 395, 407], "convent": [347, 348, 349, 350], "refactor": [347, 348, 349, 350], "engine_t": 347, "cpu_engine_t": 347, "gpu_ocl_engine_t": 347, "public": [347, 348, 349, 350, 369, 386, 394, 395], "inlin": [347, 348, 349, 394], "engine_kind": [347, 349, 395], "runtime_kind": [347, 349], "virtual": [347, 348, 349, 386, 394, 395], "get_engine_kind": 347, "get_runtime_kind": 347, "std": [347, 348, 349, 350, 392, 394, 395], "vector": [347, 348, 349, 350, 386, 392, 394, 395, 396, 398, 401, 403], "impl_list_item_t": [347, 348], "get_implementation_list": 347, "operator_desc": [347, 348, 351, 392], "op_desc": [347, 348, 392, 395], "create_kernel": 347, "shared_ptr": [347, 348, 386], "kernel_t": [347, 348], "stream_t": 347, "create_stream": 347, "create_memory_storag": 347, "memory_storage_t": 347, "protect": [347, 348], "engine_kind_": [347, 349], "runtime_kind_": [347, 349], "cpu_inst": 347, "null_inst": 347, "storag": 347, "empty_list": 347, "templat": [348, 350], "typenam": [348, 350], "arg_t": 348, "void": [348, 349, 350, 386, 392, 394, 395, 396], "proxy_bas": 348, "hpp": [348, 349, 350, 382, 392, 407], "proxi": [348, 364, 392, 420], "anyth": 348, "similar": [348, 383, 394, 397, 398, 400, 401, 413], "onednn": [348, 386], "struct": [348, 350, 394, 395], "oneapi": [348, 386, 404], "dnnl": [348, 382, 386], "136": 348, "reset_sp": 348, "sp": 348, "get_sp": 348, "create_proxy_object": 348, "result_ref": 348, "privat": [348, 349, 369, 380, 386, 393, 394, 395, 399, 400], "member": [348, 349, 350, 369, 386, 394, 395], "data_handle_": 348, "kernel_desc_proxi": 348, "kernel_desc_t": 348, "real": [348, 382, 391, 399, 400, 401, 404], "attention_desc": 348, "dynamic_quant_desc": 348, "dynamic_quant_matmul_desc": 348, "eltwiseop_desc": 348, "gather_desc": 348, "groupnorm_desc": 348, "layernorm_ba_desc": [348, 394], "layernormalized_spmm_desc": 348, "logsoftmax_desc": 348, "mha_dense_desc": 348, "slice_desc": 348, "softmax_desc": 348, "sparse_matmul_desc": [348, 392], "transpose_matmul_desc": 348, "transpose_mha_desc": 348, "kernel_kind": [348, 349, 395], "impl_list_": 348, "nullptr": [348, 350, 394], "kernel_proxi": 348, "dynamic_qu": 348, "dynamic_quant_matmul": 348, "eltwiseop": [348, 394, 395], "layernorm_ba": 348, "layernormalized_spmm": 348, "mha_dens": [348, 407], "slice": [348, 388], "sparse_matmul": [348, 404], "transpose_matmul": 348, "transpose_mha": 348, "kdp": 348, "rt_data": [348, 392], "exec_context_t": 348, "ctx": [348, 391], "size_t": [348, 350, 382, 395], "get_workspace_s": 348, "kd": [348, 359, 373], "sparse_matmul_desc_t": 348, "sparse_matmul_t": 348, "descriptor": [349, 386, 407], "ker_kind": [349, 392, 395], "kernel_prop": [349, 395], "ker_prop": [349, 392, 395], "eng_kind": [349, 392, 395], "tensor_desc": [349, 395], "ts_desc": [349, 392, 395], "unordered_map": [349, 395], "postop_attr": [349, 350, 395], "apply_postops_list": [349, 395], "rh": [349, 401], "set_binaryop_list": [349, 394], "binaryop_attr": [349, 350, 394], "binaryop_list": [349, 394], "uint64_t": 349, "impl_nthr": 349, "get_binaryop_list": [349, 394], "dim_t": [349, 350], "tensor_shap": 349, "data_typ": [349, 350, 386, 394, 395, 407], "tensor_dtyp": 349, "format_typ": 349, "tensor_ftyp": 349, "ker_kind_": [349, 395], "ker_prop_": [349, 395], "forward_infer": [349, 386, 395], "undef": [349, 350, 394, 395], "impl_nthr_": [349, 395], "ts_descs_": [349, 395], "attrs_": [349, 395], "apply_postops_list_": [349, 395], "binaryop_list_": [349, 394], "enum": [350, 394, 395], "attention_io": 350, "merge_src": 350, "merge_dst": 350, "q_weight": 350, "k_weight": 350, "v_weight": 350, "q_bia": 350, "k_bia": 350, "v_bia": 350, "q_scale": 350, "k_scale": 350, "v_scale": 350, "reshape_input": 350, "q_k_src2": 350, "q_k_scale": 350, "qk_v_output_zero_point": 350, "qk_v_output_scal": 350, "ssd": [350, 395, 407], "eltwiseop_param_t": [350, 395], "element_num": [350, 395], "in_dt": 350, "out_dt": 350, "element_num_each_th": 350, "remain_el": 350, "eltwiseop_data_t": 350, "dst": [350, 386, 394, 395, 397, 398, 399, 402, 403, 407], "doxygenfil": 350, "gather_typ": 350, "spec_translnorm_typ": 350, "direct": 350, "layernorm_ba_param_t": 350, "input_dt": [350, 394, 407], "output_dt": [350, 407], "output2_dt": 350, "spec_typ": [350, 407], "row_num": 350, "col_num": 350, "process_col": [350, 394], "direct_process_row": 350, "process_batch_per_k": 350, "ker_per_batch": 350, "batch_num": 350, "thread_elt_offset": [350, 394], "split_output": 350, "layernorm_ba_data_t": 350, "dst2": 350, "process_row": 350, "anonym": 350, "ep": 350, "1e": 350, "matmul_param_t": 350, "m_tile": 350, "n_tile": 350, "matmul_fp8_param_t": 350, "bfloat16_t": 350, "weight_bf16": 350, "int8_t": 350, "weight_int8": 350, "float8_e4m3_t": 350, "weight_f8_e4m3": 350, "float8_e5m2_t": 350, "weight_f8_e5m2": 350, "uint8_t": [350, 394, 395], "weight_8bit": 350, "weight_typ": 350, "has_scale0": 350, "has_append_sum": [350, 407], "thread_num": 350, "matmul_data_t": 350, "src0": [350, 407], "src1": [350, 381, 394, 407], "src2": [350, 394, 407], "matmul_u8_data_t": 350, "zp": [350, 394], "matmul_fp8_data_t": 350, "mata": 350, "matb": 350, "matc": 350, "matd": 350, "mate": 350, "astep": 350, "bstep": 350, "cstep": 350, "dstep": 350, "kpo": 350, "matmul_input": 350, "scale0": 350, "zp0": 350, "append_sum": 350, "matmul_io_max": 350, "matmul_io": 350, "dst0": 350, "matmul_output": 350, "mean_var_reduce_param_t": 350, "bm": 350, "bn": 350, "mean_var_reduce_data_t": 350, "mean_in": 350, "var_in": 350, "mean_out": 350, "var_out": 350, "spec_softmax_typ": 350, "lut": [350, 392, 394, 395, 407], "softmax_param_t": 350, "sepc_typ": 350, "scalar_num": 350, "vec_align_len": 350, "vec_tail_len": 350, "vec_num_per_thr": 350, "vec_num_tail_thr": 350, "get_lut_exp_attr": 350, "softmax_data_t": 350, "tmp": [350, 395, 397, 399, 402], "process_vec_num": 350, "typedef": 350, "amx_params_t": 350, "amx_bf16_params_t": 350, "amx_int8_params_t": 350, "amx_inputs_t": 350, "amx_bf16f32_inputs_t": 350, "amx_bf16bf16_inputs_t": 350, "sparse_schem": 350, "scenario": [350, 371, 399], "spmm_vnni": 350, "sparse_x_dens": 350, "dense_x_spars": 350, "sparse_x_spars": 350, "subfunc_level": [350, 407], "non_kdim": 350, "kdim": 350, "subfunc_level_max": [350, 407], "variabl": [350, 380, 383, 386, 407, 408], "constexpr": 350, "wei": [350, 407], "todo": [350, 416], "yi": 350, "conflict": 350, "dst_m1": 350, "dst_m2": 350, "work_spac": 350, "vnni_param_t": 350, "spmm_type": 350, "primit": [350, 386], "jit_domain": 350, "has_bia": 350, "output_typ": [350, 381], "tile_w": 350, "sub_func": 350, "im_start": 350, "blocksiz": 350, "indptr": 350, "welford": [350, 400], "dst_t": 350, "vnni_data_t": 350, "ptr_dens": 350, "int32_t": 350, "ptr_bia": 350, "ptr_dst": 350, "ptr_scale": 350, "ptr_dst_m1": 350, "ptr_dst_m2": 350, "num_tilem": 350, "tilem": 350, "tilen": 350, "16": [350, 360, 374, 375, 380, 389, 391, 397, 398, 399, 400, 403, 404, 405, 407, 414], "blocks_per_group": 350, "64": [350, 359, 377, 381, 388, 389, 391, 399, 401, 402, 404, 405, 407], "sizeof": 350, "nnz_group": 350, "nrowptr": 350, "colidx": 350, "group_rowptr": 350, "same_src_dtyp": 350, "src_t": 350, "wgt_t": 350, "bia_t": 350, "avx512_fp32_params_t": 350, "int64_t": 350, "bsc_data_t": 350, "sparse_ptr": 350, "im_end": 350, "in_start": 350, "in_end": 350, "avx512_data_t": 350, "dens": [350, 381, 382, 387, 392, 403, 407, 413], "transpose_copy_param": 350, "srcptr": 350, "dstptr": 350, "srcstride": 350, "dststride": 350, "seq_vnni_copy_param": 350, "transpose_mha_step1_param": 350, "expsum": 350, "cfg": 350, "batchk": [350, 402], "sumstep": 350, "cbatchstep": 350, "scaleab": 350, "transpose_mha_step2_param": 350, "sumptr": 350, "transpose_mha_step3_param": 350, "scalec": 350, "zeropointc": 350, "transpose_mha_io": 350, "src_k": 350, "src_q": 350, "src_v": 350, "tmp2m": 350, "sl_pad": 350, "head_num": [350, 401, 407], "head_siz": [350, 401, 407], "seq_len": [350, 372, 380, 381, 385, 401, 407], "scale_q": 350, "scale_k": 350, "scale_v": 350, "scale_dst": 350, "zp_dst": 350, "transpose_mha_io_max": 350, "within": [359, 369, 391, 398], "arch": 359, "proposit": 359, "propos": [359, 373, 393], "promis": [359, 398, 399], "assess": 359, "128": [359, 372, 380, 381, 385, 388, 389, 391, 405, 407, 414], "advisor": 359, "ever": [359, 391], "network": [359, 373, 379, 380, 381, 383, 398, 413, 414], "student": [359, 373, 374], "minim": [359, 373, 403], "done": [359, 373, 382, 399, 407, 414], "z": [359, 373, 391], "distanc": [359, 373], "euclidean": [359, 373], "kullback": [359, 373], "leibler": [359, 373], "diverg": [359, 373, 391], "term": [359, 373, 398, 401, 403, 409, 410, 411, 414], "assign": [359, 399], "cal": 359, "sloss": 359, "mismatch": 359, "512": [359, 381, 390, 391, 398, 400, 403, 405, 407], "desir": [359, 381, 391], "unmatch": 359, "agent": 359, "train_func_builtin": 359, "flash_distil": 359, "eval_func_builtin": 359, "els": [359, 360, 379, 386], "search_loop": 359, "model_arch_para": 359, "oob": 359, "246": 359, "intra_bottleneck_s": 359, "96": [359, 389, 405], "160": [359, 389, 404], "num_attention_head": 359, "intermediate_s": 359, "640": 359, "num_feedforward_network": 359, "mobilebert": [359, 373, 374], "kl": 359, "mse": 359, "best_model_arch": 359, "automodelforpretrain": 359, "higher_is_bett": 359, "10": [359, 371, 372, 377, 380, 381, 389, 391, 397, 405, 407], "42": [359, 389, 405], "500": 359, "25000": 359, "mobilebert_distil": 359, "sgd": 359, "learning_r": 359, "001": 359, "mobilebert_na": 359, "5000": 359, "partial": 359, "pylint": [359, 370], "disabl": [359, 369, 389, 391, 405, 407], "e1101": 359, "makedir": 359, "exist_ok": 359, "120": [359, 404], "240": 359, "256": [359, 381, 390, 405, 407], "eval_loss": [359, 376], "tfautomodelforsequenceclassif": 359, "inherit": [360, 373, 379, 386, 412, 413, 414], "adjust": [360, 386, 391, 414], "physic": [360, 369, 391, 401], "model_nam": [360, 412], "dataset_nam": 360, "autotoken": [360, 372, 412], "load_dataset": [360, 371, 372], "195": 360, "intel_extension_for_transform": [360, 371, 372, 373, 376, 377, 379, 380, 382, 384, 387, 388, 392, 407, 410, 411, 412, 413, 414], "summari": 360, "003": 360, "throughput": [360, 372, 389, 399], "5071": 360, "933": [360, 389], "guid": [363, 372, 373, 379, 395, 397, 419], "formerli": [364, 372, 377, 392, 420], "known": [364, 372, 391, 392, 420], "sparselib": [364, 382, 392, 420], "high": [364, 372, 380, 388, 390, 392, 399, 400, 403, 420], "assembli": [364, 392, 396, 398, 403, 404, 420], "introduc": [366, 370, 393, 394, 395, 396, 397, 399, 401, 402, 403, 414, 422], "who": [366, 369, 391, 395, 422], "might": [366, 383, 391, 422], "profil": [366, 422, 423], "intruct": [366, 422], "met": [366, 422], "request": [366, 372, 422], "interest": 369, "foster": 369, "welcom": [369, 370], "maintain": [369, 370, 372, 383, 388, 391, 415], "particip": [369, 391, 396], "harass": 369, "free": [369, 394, 407], "everyon": 369, "regardless": 369, "ag": 369, "bodi": [369, 401], "ethnic": 369, "sex": 369, "gender": 369, "express": 369, "educ": 369, "socio": 369, "econom": [369, 388], "statu": [369, 411, 414], "nation": 369, "person": 369, "appear": [369, 391], "race": 369, "religion": 369, "sexual": 369, "orient": 369, "contribut": 369, "inclus": 369, "Being": 369, "viewpoint": 369, "gracefulli": 369, "critic": 369, "focus": [369, 391], "what": [369, 394, 395, 401, 413], "show": [369, 372, 379, 380, 383, 384, 387, 391, 397, 399, 401], "empathi": 369, "unaccept": 369, "imageri": 369, "unwelcom": 369, "troll": 369, "insult": 369, "derogatori": 369, "comment": 369, "polit": 369, "attack": 369, "electron": 369, "permiss": 369, "reason": [369, 383, 386, 400], "consid": [369, 382, 391, 393, 395, 397, 408], "inappropri": 369, "profession": 369, "clarifi": 369, "appropri": [369, 379, 394, 402], "fair": 369, "action": 369, "edit": 369, "reject": 369, "wiki": 369, "align": [369, 393, 395, 403], "ban": 369, "temporarili": 369, "perman": 369, "threaten": 369, "offens": 369, "harm": [369, 403], "offici": 369, "mail": 369, "post": [369, 381, 407], "via": [369, 394, 397, 404], "social": 369, "media": 369, "act": [369, 398], "appoint": 369, "onlin": [369, 372, 400], "offlin": [369, 397, 403, 414], "event": 369, "further": [369, 376, 382, 391, 398], "abus": 369, "report": [369, 370, 372], "contact": [369, 415], "complaint": 369, "review": [369, 370], "investig": [369, 403], "circumst": 369, "team": 369, "oblig": 369, "confidenti": 369, "regard": 369, "incid": 369, "polici": [369, 419], "good": [369, 396, 397], "faith": 369, "temporari": [369, 401], "repercuss": 369, "leadership": 369, "faq": 369, "page": [369, 370, 372, 376], "improv": [370, 372, 381, 391, 394, 396, 398, 399, 403, 414], "send": 370, "style": 370, "flake8": 370, "autopep8": 370, "clean": 370, "bug": [370, 372], "fix": [370, 382, 397], "jira": 370, "ticket": 370, "xxx": [370, 372], "risk": [370, 391], "pr": [370, 407], "reproduc": [370, 391], "submit": [370, 372, 391], "reach": [370, 372, 391], "intend": [370, 391], "safe": 370, "collabor": 370, "adher": 370, "tool": [371, 372, 374, 381, 388, 392, 407], "integr": [371, 423], "lab": 371, "pip": [371, 372, 377, 379, 385, 406], "clone": [371, 372, 377, 378, 379], "itrex": [371, 372, 377, 378, 380], "cd": [371, 372, 377, 378, 379, 380, 385, 390, 392, 404, 407], "v": [371, 372, 377, 379, 401, 402], "dev": 371, "data_fil": 371, "delimit": [371, 407], "asserttru": 371, "len": [371, 379, 380, 387, 401], "column": [371, 393, 398, 400, 403, 413], "conduct": 371, "deploy": [371, 372, 376, 382, 385], "ocraug": 371, "spellingaug": 371, "contextualwordembsforsentenceaug": 371, "xl": 371, "xlnet": [371, 374], "Not": [371, 398], "rescu": 371, "natur": [371, 372, 374, 391, 400], "sst": [371, 372, 374, 376, 412], "txt": [371, 380, 382, 385, 404, 406], "w": [371, 380, 381, 382, 393, 396, 402], "fw": 371, "clm": [371, 374], "train_fil": 371, "validation_fil": 371, "model_dir": 371, "python3": [371, 378], "run_clm": 371, "do_train": 371, "do_ev": 371, "overwrite_output_dir": 371, "secondli": 371, "training_set": 371, "line": [371, 379, 382, 391, 393, 400, 401, 403, 408], "repetit": [371, 391], "penalti": [371, 390], "platform": [372, 390, 406, 414], "particularli": [372, 391], "gen": [372, 395], "imag": [372, 374, 384, 387, 397, 403], "becom": [372, 383, 388, 391, 403], "wide": [372, 373, 395, 396, 414], "art": 372, "popular": 372, "visit": [372, 389, 405], "skylak": 372, "cascad": [372, 377], "lake": [372, 377], "ic": 372, "cooper": [372, 399], "seri": [372, 391, 394, 397, 407], "hbm": 372, "develop": [372, 386, 390], "product": [372, 389, 401, 405, 411, 414], "easi": [372, 382, 384], "rich": 372, "demonstr": [372, 374, 376, 401, 403], "extrem": [372, 376, 391], "togeth": [372, 391], "significantli": [372, 391, 400, 402], "cento": [372, 377], "ubuntu": [372, 377, 389, 405], "04": [372, 374, 377, 389, 405], "window": [372, 377, 378], "succeed": 372, "grep": 372, "matrix": [372, 376, 393, 396, 397, 398, 400, 401, 402, 403, 407, 413, 417], "load_metr": 372, "np": 372, "automodelforsequenceclassif": [372, 376], "evalpredict": 372, "english": [372, 374, 376, 412], "lambda": 372, "usag": [372, 391, 410, 411], "label2id": [372, 376], "id2label": [372, 376], "neg": [372, 376, 391, 407], "pred": 372, "argmax": [372, 376], "axi": [372, 379, 381, 401, 402], "label_id": 372, "q_config": [372, 376, 414], "eval_accuraci": [372, 373, 376, 413], "tmp_trainer": 372, "enable_executor": [372, 375], "set_log_fil": 372, "load_graph": 372, "dummydataload": 372, "compute_perform": 372, "reduc": [372, 386, 391, 393, 394, 396, 398, 399, 400, 402, 403, 414], "glog_minloglevel": [372, 380, 385], "obtain": [372, 374, 381, 391, 402], "section": [372, 391, 392, 403, 404], "input_model": [372, 381, 384, 385], "warm_up": 372, "p50": 372, "50": [372, 404], "p90": 372, "90": [372, 374, 381, 389], "p99": 372, "99": [372, 374, 405], "sec": [372, 389], "tutori": [372, 380], "resourc": [372, 373, 396], "catalog": 372, "brand": [372, 409], "claim": [372, 409], "properti": [372, 380, 409], "trademark": 372, "expens": 373, "deploi": [373, 423], "power": [373, 374, 391], "mobil": 373, "shown": [373, 382, 398, 402, 403], "produc": [373, 391, 403], "instruct": [373, 383, 390, 394, 397, 399, 402, 403, 404, 407, 414], "besid": [373, 395], "often": 373, "patient": 373, "compact": 373, "agnost": 373, "summar": [373, 374], "usual": [373, 383, 393, 403, 414], "1x1": [373, 382], "d_conf": [373, 376], "tune_metr": [373, 413], "metric_": 373, "classifi": 373, "distillation_conf": 373, "distilled_model": 373, "intermediatelayersloss": 373, "meanwhil": [374, 393, 399], "posttrainingdynam": [374, 375, 414], "wikitext": 374, "10004": [374, 375], "xsum": 374, "cnn": 374, "cnn_dailymail": 374, "dm": 374, "lambdalab": 374, "sd": 374, "pokemon": 374, "mlm": 374, "plm": 374, "eleutherai": 374, "neo": 374, "125m": 374, "sshleifer": 374, "wip": [374, 397], "star": 374, "ehdwns1516": 374, "uncased_swag": 374, "swag": 374, "squad": 374, "valhalla": 374, "longform": 374, "4096": [374, 405], "squadv1": 374, "lvwerra": 374, "pegasu": 374, "samsum": 374, "textattack": [374, 384], "mrpc": [374, 384, 385], "echarlaix": 374, "acc91": 374, "d37": 374, "hybrid": 374, "elast": 374, "conll03": 374, "conll2003": 374, "small": [374, 382, 399, 401], "translat": 374, "wmt16": 374, "helsinki": 374, "opu": 374, "mt": [374, 406], "en": 374, "ro": 374, "quantizationawaretrain": [374, 375], "maskinun": 374, "distilgpt2": 374, "rocketknight1": 374, "dslim": 374, "ner": 374, "mb": 374, "f1": [374, 410], "gflop": [374, 405, 408], "speedup": 374, "compar": [374, 390, 391, 393, 396, 407, 414], "415": [374, 389], "47": [374, 389, 405], "88": [374, 389, 404, 405], "58": [374, 405], "56": [374, 390, 404, 405], "35": [374, 389, 405], "1x": 374, "la": [374, 396], "minilmv2": 374, "115": 374, "89": [374, 405], "28": [374, 389, 397, 405], "76": [374, 404, 405], "33x": 374, "269": 374, "253": 374, "252": [374, 404], "202": 374, "104": 374, "34": [374, 405], "87": [374, 405], "11": [374, 377, 385, 397, 405], "44": [374, 381, 389, 404, 405], "49": [374, 387, 389, 405], "94x": 374, "84": [374, 405], "85": [374, 389, 405], "21x": 374, "315": 374, "251": [374, 405], "242": [374, 389, 405], "159": [374, 404], "142": [374, 405], "33": [374, 388, 405], "86": [374, 405], "68": [374, 404, 405], "41": [374, 389, 405], "55": [374, 390, 404, 405], "82x": 374, "amount": [374, 391, 396], "torchprofil": 374, "platinum": [374, 389, 405], "8280": 374, "unstructur": [374, 413], "lasso": [374, 413], "nbsp": [374, 389, 405], "qnli": 374, "qqp": 374, "mnli": 374, "v1": 374, "tinybert_general_4l_312d": 374, "distilroberta": 374, "cola": 374, "krishna2020": 374, "googl": 374, "wikipedia": 374, "prajjwal1": 374, "approch": 374, "pruneofa": 374, "patternlock": [374, 413], "bhadresh": 374, "savani": 374, "emot": 374, "fac": 374, "mini": [374, 381, 385, 389], "gchhablani": 374, "philschmid": 374, "l6": 374, "h384": 374, "moshew": [374, 385], "80": [374, 381, 389, 405], "1x4": [374, 403], "desigh": 375, "32": [375, 380, 388, 389, 397, 398, 400, 401, 402, 403, 404, 405, 407], "bfloat": 375, "fetch": [375, 393, 396], "flag": 375, "enable_bf16": 375, "bfloat16": 375, "qlinear": [375, 384], "u8s8": 375, "u8u8": 375, "highli": 375, "suggest": [375, 394], "quick": [376, 379], "p_conf": [376, 413], "reduct": [376, 398, 401], "accommod": 376, "budget": 376, "tradeoff": [376, 397], "dynamic_length_config": 376, "aim": [376, 379, 381, 383, 391], "opportun": 376, "hw": 376, "sw": 376, "recommend": [377, 379, 382, 385, 387, 388, 390, 391, 400, 404], "protobuf": [377, 385], "nightli": 377, "conda": [377, 385], "satisfi": [377, 387, 399], "success": 377, "gcc": [377, 378], "linux": [377, 378], "visual": [377, 391], "studio": 377, "icelak": 377, "futur": [377, 384, 394, 395, 404], "ipex": [377, 414], "13": [377, 389, 397, 405], "cmake": [378, 380, 390, 392, 404, 407], "submodul": [378, 380], "updat": [378, 380, 391, 400, 413], "recurs": [378, 380, 387], "mkdir": [378, 380, 390, 392, 404, 407], "dpython_execut": 378, "dne_with_sparselib": [378, 407], "neural_engine_pi": 378, "cpython": 378, "37m": 378, "x86_64": 378, "gnu": 378, "libkernellib": 378, "libneural_engin": 378, "lib": [378, 380], "subdirectori": 378, "pure": [378, 395], "certain": [379, 387, 391], "simplifi": [379, 383], "attach": [379, 387], "distilbert_bas": 379, "assum": [379, 387, 396], "command": [379, 380, 384, 391, 408], "repo": [379, 407], "instal": [379, 391, 406, 419], "These": [379, 383, 387, 391, 396, 402], "roughli": [379, 399], "divid": [379, 387, 393, 398, 399, 402, 408], "categori": [379, 381], "dst_shape": [379, 380, 386], "father": 379, "keep_dim": 379, "ax": [379, 401], "come": 379, "rewrit": 379, "_attr": 379, "successfulli": [379, 387], "forget": [379, 383, 386], "reinstal": 379, "enter": 379, "you_work_dir": 379, "noth": [379, 387], "wrong": [379, 387], "anoth": [379, 383, 388, 391, 404], "correctli": 379, "distil_bert_bas": 379, "pattern_mapping_config": 379, "div": [379, 383], "becaus": [379, 394, 397, 402, 414], "even": [379, 393], "delv": 379, "recogn": [379, 423], "put": [379, 380, 383, 390], "namedtupl": 379, "__call__": 379, "retriev": 379, "actual": [379, 380, 400], "equival": [379, 403], "supported_pattern": 379, "influenc": [379, 383, 391], "pattern_dict": 379, "new_node_nam": 379, "ret_old_nod": 379, "talk": 379, "denomin": 379, "numer": [379, 414], "stabil": 379, "_set_attr": 379, "ln_node_idx": 379, "finish": [379, 383, 385], "yourself": [379, 387, 390], "seq": [380, 401], "bert_model": 380, "30522": 380, "1024": [380, 381, 382, 390, 405, 407], "125018112": 380, "slightli": 380, "activ": [380, 384, 385, 388, 391, 393, 397, 398, 399, 402, 407, 414], "throught": 380, "numactl": [380, 390], "bind": 380, "omp_num_thread": [380, 390], "session": [380, 388], "glog": 380, "nerual": 380, "cc": 380, "cmakelist": 380, "reus": [380, 388, 391, 399], "engine_integr": 380, "cp": 380, "nlp_executor": 380, "neural_engine_exampl": 380, "ne": [380, 390], "root": 380, "ne_root": 380, "project_source_dir": 380, "link": [380, 386, 413], "runtime_output_directori": 380, "add_execut": 380, "target_include_directori": 380, "boost_inc_dir": 380, "target_link_librari": 380, "cmake_thread_libs_init": 380, "gflag": 380, "dir": 380, "set_target_properti": 380, "analyz": 381, "readm": [381, 384, 391], "run_executor": [381, 385], "model_and_token": [381, 384, 385], "Of": [381, 387, 396], "cours": [381, 387, 396], "proflil": 381, "latanc": 381, "perf": [381, 403, 407, 408], "perfrom": 381, "chrome": 381, "inst": 381, "count": [381, 386, 388], "pref": 381, "semi": 381, "70": [381, 389], "256x256": [381, 407], "settabl": 381, "256x1024": 381, "1024x256": 381, "gelu_tanh": [381, 386], "add_37": 381, "116": [381, 405], "641": 381, "00": 381, "075": 381, "0375": 381, "comparison": [381, 403], "185": 381, "801": 381, "693": 381, "366": 381, "content": 381, "part1": [381, 386], "modif": 381, "xlsx": 381, "titl": [381, 409], "model_infer": 381, "friendli": [381, 399, 400], "000": 381, "wall": 381, "durat": 381, "17": [381, 389, 397, 405], "138": 381, "iteration4": 381, "726": 381, "phrase": 381, "0m": 381, "permut": [381, 397, 401, 407], "perm": [381, 401], "add_284": 381, "028": [381, 405], "044": 381, "reshape_tim": 381, "004m": 381, "forward_tim": 381, "044m": 381, "input_tensor_nam": 381, "matmul_357": 381, "matmul_358": 381, "matmul_346": 381, "input_typ": 381, "f32": [381, 386, 390], "output_tensor_nam": 381, "output_shap": 381, "append_op": 381, "src1_perm": 381, "pictur": [382, 393, 406], "bring": [382, 398, 402, 403], "mainli": [382, 390, 399, 400], "merg": [382, 387], "off": [382, 391], "model_path": [382, 388], "isa": [382, 392, 394, 399, 402, 403, 404], "int8_model_path": 382, "shape_0": 382, "shape_1": 382, "shape_2": 382, "enlarg": 382, "subsequ": [382, 391, 399, 402], "remark": 382, "micro": [382, 393, 398, 403], "oc": [382, 407], "mk": 382, "kn": 382, "nhwc": 382, "nxhxw": 382, "h": [382, 391], "nk": 382, "km": 382, "mmkmb": 382, "mmxmb": 382, "fulfil": 382, "along": [382, 398, 401, 403], "omp": 382, "higher": [382, 390, 391, 401, 403, 407, 414], "unrol": [382, 396, 398], "know": [382, 388, 397], "disk": [382, 384, 388], "enable_op_tun": 382, "execution_opt": [382, 388], "engine_dispatch_t": 382, "workspac": 382, "row": [382, 396, 397, 399, 403, 413], "rest": [382, 383, 387, 401, 403], "hash": [382, 394], "kernel_config": [382, 407], "kernel_nam": [382, 407], "3025159985633461085": 382, "40": [382, 389, 391], "14124194128933833351": 382, "thing": 382, "affect": [382, 391, 399, 402, 408], "simul": [382, 403, 404], "warmup_it": 382, "num_iter": 382, "dispatch_table_file_root": 382, "file_root": 382, "script": [382, 384, 390, 406], "prevent": [382, 391], "imprecis": 382, "purpos": [383, 387, 394, 399], "realiz": 383, "suppli": [383, 387, 388], "recognit": [383, 387], "embeddings_reshap": 383, "said": 383, "thought": 383, "st": 383, "nd": 383, "copi": [383, 401], "greater": [383, 410, 411], "sent": 383, "written": 383, "phenomenon": 383, "Its": 383, "situat": [383, 391, 400], "nod": 383, "leav": [383, 401, 403, 407], "old_node_index": 383, "_get_pattern_info": 383, "_create_out_pattern": 383, "_replace_pattern": 383, "emitt": 384, "netron": 384, "bash": [384, 385], "prepare_model": [384, 385], "sh": [384, 385, 408], "ptq": 384, "much": [384, 391, 396], "ir_path": 384, "focu": [385, 391, 401, 410], "home": 385, "distilbert_base_uncas": 385, "r": [385, 389, 391, 405, 406, 414], "prepare_dataset": 385, "shell": 385, "tokenizer_dir": 385, "data_dir": 385, "geluoper": 386, "destructor": 386, "operatorconfig": 386, "algorithm_": 386, "eng_": 386, "eltwise_forward": 386, "gelu_p_": 386, "src_m_": 386, "dst_m_": 386, "attrs_map": 386, "operator_conf_": 386, "becuas": 386, "src_shape": 386, "dst_tensor_ptr": 386, "set_shap": 386, "stride": [386, 393], "src_stride": 386, "getstrid": 386, "dst_stride": 386, "desc": [386, 394, 395], "src_md": 386, "dst_md": 386, "part2": 386, "gelu_algorithm": 386, "gelu_erf": 386, "eltwise_gelu_erf": 386, "eltwise_gelu_tanh": 386, "gelu_d": 386, "prop_kind": 386, "primitive_desc": 386, "gelu_pd": 386, "unrefernc": 386, "manag": [386, 388], "strictli": 386, "alia": 386, "src_data": 386, "dst_data": 386, "mutable_data": 386, "data_ptr": 386, "set_data_handl": 386, "const_cast": 386, "reinterpret_cast": 386, "memory_args_": 386, "dnnl_arg_src": 386, "dnnl_arg_dst": 386, "unref": 386, "unref_tensor": 386, "especi": [386, 403], "int8_lut_optim": 386, "int8_lut_acc_test": 386, "set_dtyp": 386, "register_operator_class": 386, "rule": 387, "recruit": 387, "ln_pattern": 387, "grow": 387, "concis": 387, "intuit": [387, 399], "choos": 387, "prefer": [387, 401], "longer": [387, 391], "ones": 387, "op_type1": 387, "op_type2": 387, "type1": 387, "type2": 387, "elig": 387, "a_node_name_1": 387, "b_node_name_1": 387, "c_node_name_1": 387, "a_node_name_2": 387, "b_node_name_2": 387, "c_node_name_2": 387, "a_node_name_n": 387, "b_node_name_n": 387, "c_node_name_n": 387, "bert_large_model_path": 387, "layer_0": 387, "layer_1": 387, "layer_2": 387, "afterward": 387, "volatil": 387, "incorrect": 387, "outcom": 387, "Or": 387, "exactli": 387, "screen": 387, "occur": [387, 393, 400], "alreadi": 387, "moment": 387, "varianc": [387, 400], "batchnorm": 387, "mul_1": 387, "mul_2": 387, "add_1": 387, "cycl": [388, 404], "pointer": 388, "life": 388, "malloc": 388, "getmemori": 388, "consum": [388, 397], "lead": [388, 391, 401, 403], "wast": [388, 399, 400], "veri": [388, 393, 395, 396, 399], "alloc": [388, 395, 396], "faster": 388, "setp": 388, "activation_mem_compress": 388, "max_input_shapes_list": 388, "warm": 388, "quit": [388, 394], "llama": [388, 390, 391], "7b": [388, 390, 391], "past_k_v_0": 388, "past_k_v_1": 388, "63": [388, 389, 405], "beam": 388, "extra": [388, 391, 399], "dag": 388, "activation_dag": 388, "dump_activation_dag": 388, "execution_mod": 388, "07": [389, 405], "8375c": [389, 405], "aw": [389, 405], "c6i": [389, 405], "12xlarg": [389, 405], "vari": [389, 405], "factor": [389, 405], "www": [389, 405], "batchsiz": 389, "2652": 389, "36": [389, 405], "513": 389, "lt": [389, 405], "50m": 389, "2181": 389, "43": [389, 405], "628": 389, "1719": 389, "91": [389, 405], "75": [389, 405], "1487": [389, 405], "255": [389, 402, 414], "1220": 389, "39": [389, 405], "143": 389, "1304": 389, "46": [389, 405], "066": 389, "1102": [389, 405], "870": 389, "487": 389, "750": 389, "82": [389, 404, 405], "690": [389, 405], "188": 389, "910": [389, 405], "921": [389, 405], "729": 389, "71": [389, 404, 405], "619": 389, "38": [389, 404, 405], "821": [389, 405], "499": 389, "429": [389, 404], "936": [389, 405], "680": 389, "318": [389, 405], "557": 389, "262": 389, "467": 389, "589": 389, "405": 389, "339": 389, "473": 389, "119": [389, 405], "389": 389, "945": [389, 405], "360": 389, "274": 389, "843": 389, "259": [389, 404, 405], "442": 389, "241": 389, "364": 389, "016": [389, 405], "303": 389, "266": 389, "45": [389, 405], "05": [389, 391, 405], "221": 389, "973": 389, "112": [389, 405], "349": 389, "938": [389, 405], "275": [389, 404], "614": 389, "217": 389, "37": [389, 405], "039": 389, "301": 389, "166": 389, "033": 389, "320": 389, "769": 389, "263": 389, "724": [389, 405], "207": 389, "819": [389, 405], "181": 389, "021": 389, "979": [389, 405], "74": [389, 405], "235": 389, "091": 389, "51": [389, 405], "914": [389, 405], "698": [389, 405], "905": [389, 405], "8972": 389, "076": [389, 405], "20m": 389, "7192": 389, "19": [389, 397, 405], "906": 389, "5482": 389, "509": 389, "4808": 389, "952": 389, "3678": 389, "409": 389, "4750": 389, "975": [389, 405], "3647": 389, "867": 389, "2921": 389, "587": [389, 405], "2576": 389, "18": [389, 397, 405], "768": [389, 405], "2131": [389, 405], "913": [389, 405], "2804": 389, "096": 389, "2263": 389, "037": 389, "1938": 389, "756": [389, 405], "1581": 389, "15": [389, 391, 397, 398, 403, 405], "1409": 389, "015": 389, "2116": 389, "113": 389, "1777": 389, "972": [389, 405], "1474": 389, "392": 389, "1278": 389, "1137": 389, "752": 389, "1594": 389, "124": 389, "1347": [389, 405], "1126": 389, "993": [389, 405], "258": 389, "890": [389, 405], "877": [389, 405], "1319": 389, "1086": 389, "931": [389, 405], "545": 389, "833": 389, "332": [389, 405], "747": [389, 405], "141": 389, "1106": [389, 405], "31": [389, 397, 398, 405], "924": 389, "446": 389, "719": 389, "633": 389, "501": 389, "816": 389, "961": 389, "549": 389, "807": 389, "868": [389, 405], "701": [389, 405], "117": 389, "613": 389, "618": 389, "515": 389, "484": 389, "75384": 389, "989": 389, "1m": 389, "55628": 389, "917": 389, "49120": 389, "957": [389, 405], "41598": 389, "39218": 389, "31211": 389, "788": [389, 405], "28399": 389, "848": 389, "24910": 389, "966": 389, "20505": 389, "18575": 389, "865": 389, "25485": 389, "987": 389, "17468": 389, "16771": 389, "971": [389, 405], "16004": 389, "996": [389, 405], "13381": 389, "894": [389, 405], "13990": 389, "863": [389, 405], "13154": 389, "12535": 389, "12102": 389, "998": 389, "8426": [389, 405], "8736": 389, "8282": 389, "967": 389, "6659": 389, "898": [389, 405], "6477": 389, "6290": 389, "974": [389, 405], "8598": 389, "6449": 389, "935": [389, 405], "6263": [389, 405], "965": [389, 405], "6080": 389, "988": 389, "3684": 389, "817": [389, 405], "6246": 389, "978": 389, "6374": 389, "947": [389, 405], "6026": 389, "3300": [389, 405], "926": 389, "3226": 389, "6221": 389, "958": 389, "6322": 389, "6081": 389, "985": [389, 405], "3368": 389, "3264": 389, "distillbert": 389, "15460": 389, "296": 389, "10m": 389, "13129": 389, "363": 389, "11323": 389, "578": [389, 405], "10072": 389, "599": 389, "8689": 389, "7901": 389, "205": [389, 405], "6737": 389, "562": 389, "5440": 389, "904": [389, 405], "4920": 389, "786": [389, 405], "4460": 389, "053": 389, "5280": 389, "179": 389, "4339": 389, "244": [389, 404], "3634": [389, 405], "928": 389, "3255": 389, "211": [389, 405], "2928": 389, "197": [389, 405], "3681": 389, "527": [389, 405], "2965": [389, 405], "106": [389, 405], "2741": 389, "862": [389, 405], "2351": 389, "2150": 389, "282": 389, "2918": 389, "316": 389, "2505": [389, 405], "602": 389, "2010": [389, 405], "995": 389, "1872": 389, "609": [389, 405], "2409": 389, "983": 389, "1993": 389, "013": 389, "1671": [389, 405], "627": 389, "1484": 389, "1342": [389, 405], "1910": 389, "456": [389, 405], "1659": 389, "687": 389, "1293": 389, "245": [389, 405], "1230": 389, "798": 389, "1091": 389, "261": 389, "1627": 389, "908": 389, "1397": 389, "684": 389, "1130": 389, "1081": 389, "353": 389, "982": [389, 405], "187": [389, 404], "manufactur": [389, 405], "amazon": [389, 405], "ec2": [389, 405], "bio": [389, 405], "1021": [389, 405], "microcod": [389, 405], "0xd000331": [389, 405], "irq": [389, 405], "balanc": [389, 391, 405], "xeonplatinum": 389, "90ghz": [389, 405], "frequenc": [389, 405, 413], "9ghz": [389, 405], "5ghz": [389, 405], "socket": [389, 405], "numa": [389, 405], "turbo": [389, 405], "frequencygovern": [389, 405], "bare": 390, "metal": 390, "llm": 390, "solut": [390, 400, 403], "borrow": 390, "cpp": [390, 391, 407], "almost": 390, "macro": 390, "difficult": 390, "hierarch": 390, "bitsfrom": 390, "avx512f": [390, 392, 401, 407, 421], "x86": 390, "gpu": [390, 396], "short": 390, "ninja": 390, "65b": 390, "30b": 390, "13b": 390, "tokenizer_checklist": 390, "chk": 390, "convert_llama": 390, "outtyp": 390, "outfil": 390, "quant_llama": 390, "q4_j": 390, "q4_j_vnni_b128": 390, "q8_0": 390, "int4": 390, "gptneox": 390, "convert_gptneox": 390, "input_model_name_or_path": 390, "quant_gptneox": 390, "q8": 390, "q4_0": 390, "mpt": 390, "convert_mpt": 390, "quant_mpt": 390, "falcon": 390, "convert_falcon": 390, "quant_falcon": 390, "main_llama": [390, 391], "color": [390, 391, 401, 403], "she": 390, "door": 390, "main_gptneox": 390, "main_mpt": 390, "main_falcon": 390, "awai": 391, "path_to_model": 391, "upon": 391, "cover": 391, "commonli": 391, "program": [391, 393, 409], "fname": 391, "ggml": 391, "respons": [391, 393, 399, 400, 402], "ins": 391, "alpaca": 391, "n_predict": 391, "ctx_size": 391, "were": 391, "2048": [391, 407], "wait": 391, "offer": 391, "engag": 391, "convers": [391, 414], "variou": 391, "press": 391, "interject": 391, "backslash": 391, "immedi": 391, "excel": 391, "differenti": 391, "distinguish": [391, 407], "tailor": 391, "chat": 391, "paus": 391, "encount": 391, "switch": 391, "jump": 391, "back": [391, 399, 400, 401, 402], "turn": [391, 401], "speak": 391, "overcom": 391, "conjunct": [391, 410], "assist": [391, 415], "technic": 391, "reset": 391, "lose": 391, "comprehend": 391, "yield": [391, 414], "increas": [391, 396], "beyond": 391, "unpredict": 391, "retain": 391, "topic": 391, "remain": 391, "divers": 391, "creativ": 391, "qualiti": 391, "infin": 391, "caus": 391, "temp": 391, "determinist": 391, "conserv": 391, "At": [391, 399, 400, 402], "pick": [391, 403], "repeat_penalti": 391, "repeat_last_n": 391, "penal": 391, "nl": 391, "newlin": 391, "monoton": 391, "strongli": 391, "lenient": 391, "histori": 391, "recent": 391, "dialogu": 391, "poetri": 391, "plai": 391, "role": 391, "nonsens": 391, "subset": 391, "cumul": 391, "nucleu": 391, "95": [391, 404, 405], "impact": [391, 397], "suppress": 391, "promot": 391, "contextu": 391, "surround": 391, "closer": 391, "perplex": 391, "mirostat_lr": 391, "rate": [391, 400], "eta": 391, "mirostat_": 391, "tau": 391, "strike": 391, "excess": 391, "boredom": 391, "trap": 391, "incoher": 391, "confus": 391, "quickli": 391, "respond": 391, "feedback": 391, "slower": 391, "token_id": 391, "likelihood": 391, "manual": [391, 404], "decreas": 391, "15043": 391, "inf": 391, "never": 391, "practic": 391, "29905": 391, "preval": 391, "latex": 391, "across": 391, "oppos": 391, "logic": [391, 402, 404], "greatli": [391, 397, 402], "lock": [391, 413], "swap": 391, "trade": 391, "advantag": 391, "ram": 391, "slow": 391, "mmap": 391, "pageout": 391, "memory_f32": 391, "cost": [391, 403], "benefit": [391, 399, 403, 414], "bla": 391, "progress": 391, "startup": 391, "primari": 391, "displai": 391, "latest": [391, 404, 415], "frequent": [391, 393], "outdat": 391, "mtest": 391, "properli": 391, "lora": 391, "impli": 391, "workdir": 392, "dne_with_test": 392, "ON": [392, 407], "ut": [392, 395], "dne_with_sparselib_onli": [392, 407], "dne_with_sparselib_benchmark": [392, 407], "test_spmm_vnni_kernel": 392, "box": 392, "profl": [392, 404], "op_attr": [392, 394, 395, 401], "spmm_desc": 392, "spmm_kern": 392, "data0": 392, "data1": 392, "data2": 392, "data3": 392, "data4": 392, "unit": [392, 399], "vnni": [392, 393, 397, 401, 402, 405, 407, 414, 421], "amx": [392, 399, 402, 407, 421], "wise": [392, 407, 421], "residu": 392, "avx512": [392, 393, 397, 414], "mha": [392, 421], "spmm": [393, 401, 407], "deeplearn": 393, "multipli": [393, 399, 403, 414], "adopt": [393, 398, 403], "modern": 393, "spatial": [393, 399], "64byte": 393, "organ": 393, "associ": 393, "access": [393, 398, 399], "b1": 393, "b2": 393, "simd": [393, 394, 398], "width": [393, 394, 398, 400, 414], "evenli": 393, "discontinu": 393, "fulli": [393, 402, 403], "worst": 393, "miss": [393, 403], "destin": [393, 398, 401, 407], "l1": 393, "l2": [393, 399, 407], "perhap": 393, "mxk": [393, 407], "bxm": 393, "xk": 393, "bxkxm": 393, "nxm": 393, "2d": [393, 407], "frac": [393, 401], "dl": 394, "changeabl": 394, "operand": [394, 398], "horizont": 394, "overhead": [394, 400, 401, 402, 403], "move": 394, "binaryop_injector": 394, "postop": [394, 395, 407], "eltwise_injector": [394, 395], "escap": [394, 395], "compute_vector": 394, "arithmet": 394, "brows": 394, "dt": [394, 395], "vpaddb": 394, "vaddp": 394, "unlik": 394, "ptr": [394, 395, 404], "static_addr": 394, "addr": 394, "binaryop_alg": 394, "per_channel_qu": 394, "per_channel_dequ": 394, "op_alg": [394, 395], "op_dt": 394, "alg": 394, "set_scal": 394, "set_zp": 394, "binary_injector_init": 394, "set_mask": 394, "reg64": [394, 395], "zmm": [394, 395, 398, 400, 403], "get_addr": 394, "broadcast": [394, 398, 403, 404, 407], "enable_mask": 394, "vector_comput": [394, 395], "bianryop": 394, "comput_vector": 394, "wrapper": 394, "jit_binary_injector": 394, "addr_typ": 394, "jit_gener": [394, 395], "opmask": [394, 395], "reg": [394, 395], "mov": [394, 404], "addr_ptr": 394, "zmm_src1": 394, "regexp": 394, "step1": [394, 395, 402], "binary_injector": 394, "step2": [394, 395, 402], "data_param": 394, "binaryop_addr": 394, "param_": [394, 395], "front": 394, "append_loop_len": 394, "zmm_byte_s": 394, "get_data_s": 394, "offset_exp": 394, "bianryop_attr_list": 394, "append_vec": 394, "binary_add": 394, "eltwis": 395, "tradit": 395, "obvious": [395, 396, 400], "useless": 395, "idea": [395, 403, 413], "xbyak": 395, "algo": 395, "aplha": 395, "sacl": 395, "postop_alg": 395, "int8_lut": 395, "postop_typ": 395, "mathemat": 395, "satur": 395, "round": [395, 414], "unus": 395, "\u03b1x": 395, "\u03b2": 395, "le": 395, "gt": 395, "eng_kind_": 395, "omp_get_max_thread": 395, "omp_get_num_proc": 395, "eltwise_injector_init": 395, "chian": 395, "escape_reg": 395, "escape_eras": 395, "eras": 395, "prepare_t": 395, "zmm_src": 395, "postop_idx": 395, "reg_idx": 395, "step0": 395, "jit_eltwiseop_t": 395, "assign_reg": 395, "eltwiseop_kd_t": 395, "op_desc_": 395, "params_": 395, "remain_task_mask": 395, "scratch_": 395, "r10": 395, "reg_src": 395, "addr_src": 395, "r15": [395, 404], "addr_dst": 395, "r14": [395, 404], "reg_param": 395, "rdi": [395, 404], "remain_element_num": 395, "rsi": 395, "getidx": 395, "rcx": 395, "rdx": 395, "rsp": 395, "step3": [395, 402], "preambl": 395, "load_param": 395, "vmovup": [395, 404], "postambl": 395, "fp32_gelu_attr": 395, "bf16_gelu_attr": 395, "push_back": 395, "gen_cas": 395, "data0_desc": 395, "postop_list": 395, "fp32_gelu": [395, 407], "fp32_exp": 395, "mask_mock1": 395, "reg64_mock1": 395, "zmm_mock1": 395, "fp32_exp_attr": 395, "data1_desc": 395, "bf16_gelu": 395, "bf16_exp": [395, 407], "bf16_exp_attr": 395, "dt1op1": 395, "dt2op2": 395, "hase": 395, "get_true_data": 395, "rf_data": 395, "your_kernel_log": 395, "apply_postop_list": 395, "unit_test_util": 395, "articl": [396, 414], "opencl": 396, "snippet": 396, "unintellig": 396, "__kernel": 396, "naive_gemm": 396, "__global": 396, "globalrow": 396, "get_global_id": 396, "globalcol": 396, "col": [396, 397, 400, 402], "over": [396, 398, 401], "acc": [396, 407, 408], "0f": 396, "mxn": [396, 402, 407], "2xk": 396, "redund": [396, 413], "asub": 396, "bsub": 396, "tile_gemm": 396, "get_local_id": 396, "get_group_id": 396, "__local": 396, "initialis": 396, "accumul": [396, 401, 403], "numtil": 396, "tiledrow": 396, "tiledcol": 396, "synchronis": 396, "barrier": 396, "clk_local_mem_f": 396, "full": [396, 409, 414], "white": 396, "figur": [396, 399, 400, 401, 403, 406], "half": [396, 402], "correspondingli": 396, "workload": [396, 401], "localmemori": 396, "tight": 396, "ll": 396, "twice": [396, 402], "ping": 396, "pong": 396, "tidm": 396, "tidn": 396, "offsetm": 396, "offset": [396, 400, 401], "offsetn": 396, "areg": 396, "breg": 396, "wm": 396, "wn": 396, "lpta": 396, "tid": 396, "mod2": 396, "div2": 396, "tiledindex": 396, "indexa": 396, "indexb": 396, "veca": 396, "vecb": 396, "tt": 396, "pragma": 396, "tdpbf16p": 397, "16x32": 397, "32x16": 397, "FOR": [397, 398, 403], "TO": 397, "colsb": 397, "endfor": [397, 398, 403], "write_row_and_zero": 397, "zero_upper_row": 397, "zero_tileconfig_start": 397, "layout": [397, 400, 401, 402], "successor": 397, "1x16": [397, 403], "concaten": [397, 403, 407], "intrins": 397, "tileloadd": 397, "nonzero": 397, "vmovdqu32": 397, "altern": [397, 403], "lot": 397, "disast": 397, "16x1": [397, 401], "fly": 397, "__m512i": 397, "_mm512_set_epi16": 397, "29": [397, 405], "27": [397, 405], "26": [397, 404, 405], "25": [397, 405, 407], "23": [397, 405], "22": [397, 405], "21": [397, 405], "__m256i": 397, "lo": 397, "_mm256_loadu_epi": 397, "li": 397, "vec": 397, "_mm512_inserti32x8": 397, "_mm512_castsi256_si512": 397, "_mm512_permutexvar_epi16": 397, "_mm512_storeu_epi32": 397, "vfmadd": 398, "vfmadd231p": [398, 404], "degre": 398, "conting": 398, "bsc": 398, "variant": 398, "bsr": 398, "openmp": 398, "relief": 398, "bottleneck": [398, 400], "microkernel": 398, "peripher": 398, "implicit": 398, "technologi": 399, "among": [399, 402], "satisfactori": 399, "inevit": 399, "solv": [399, 400, 414], "facilit": [399, 402], "flexibl": 399, "divis": 399, "tdpbssd": 399, "tile_k": 399, "formula": 399, "max_tile_k": 399, "hope": 399, "large_wei_threshold": 399, "16xpad_n": 399, "tilestor": 399, "pseudo": 399, "tile_m": [399, 407], "16xn": 399, "dp_tile_n": 399, "k_dim_dp": 399, "write_tile_to_tmp_buf": 399, "dequantize_tile_on_tmp_buf": 399, "calculate_scale_on_tmp_buf": 399, "write_back_scal": 399, "quant_tile_n": 399, "quantize_on_tmp_buf": 399, "write_tile_to_dst": 399, "scale_reduce_quant": 399, "needn": 399, "sync": 399, "2nd": [399, 402], "s8s8bf16": 399, "desid": 399, "du": 399, "until": 399, "feel": [399, 407], "suitabl": 399, "chart": 399, "again": 400, "naiv": 400, "gap": 400, "layernrom": 400, "3d": [400, 421], "poor": 400, "fewer": 400, "inconsist": 400, "scene": 400, "quarter": 400, "depict": 400, "bandwidth": [400, 402, 414], "gain": [400, 414], "brought": [400, 414], "majotr": 400, "layternorm": 400, "encapsul": 400, "ba": [400, 404, 407], "discret": 400, "append": [400, 407, 408], "overal": 400, "p2031": [401, 407], "2013": 401, "noperm": [401, 407], "p1302": [401, 407], "p2013": [401, 407], "equat": [401, 414], "dot": [401, 414], "rm": 401, "q": [401, 402], "qk": 401, "textunderscor": 401, "nativ": 401, "sparelib": 401, "axis": 401, "conceptu": 401, "head_nun": 401, "perm2031": 401, "perm2013": 401, "perm1302": 401, "concept": [401, 403], "lh": 401, "float32": [401, 414], "illustr": 401, "inner": 401, "16x16": 401, "drawn": 401, "lighter": 401, "cell": [401, 403], "respectfulli": 401, "vnni_noperm_p2013_p1302": 401, "transpose_4b_8x8": 401, "legend": 401, "explan": 401, "contigu": 401, "ellipsi": 401, "thinner": 401, "border": 401, "bolder": 401, "16x32x16": 401, "suboptim": 401, "piec": 401, "boost": 401, "twofold": 401, "unifi": 401, "roll": 401, "worth": 402, "clear": 402, "fact": [402, 414], "spr": 402, "latter": 402, "clx": 402, "4x16": [402, 403], "launch": 402, "prior": 402, "iteraion": 402, "polynomi": 402, "essenti": 402, "incom": 402, "far": 402, "four": 403, "adjac": 403, "unsign": [403, 407], "sign": [403, 414], "tmp1": 403, "zeroextend16": 403, "signextend16": 403, "tmp2": 403, "tmp3": 403, "tmp4": 403, "dword": [403, 404], "transposit": 403, "discuss": 403, "typic": 403, "4x4": 403, "mxkxn": 403, "problem": [403, 407], "densiti": 403, "fma": 403, "bubbl": 403, "16x4": 403, "highlight": 403, "4x": 403, "talent": 403, "smart": 403, "gui": [403, 404], "swizzl": 403, "workaround": 403, "unfortun": 403, "difficulti": 403, "bad": 403, "2x1": 403, "conclus": 403, "against": 403, "brief": 404, "sparse_lib_verbos": 404, "sparselib_verbos": 404, "nthr": 404, "224": [404, 405], "exec": 404, "shape_256_256_128": 404, "4658": [404, 405], "56982": 404, "itt": 404, "dne_with_sparselib_vtun": 404, "opt": 404, "dcmake_vtune_hom": 404, "sparse_lib_vtun": 404, "ssh": 404, "analys": 404, "verifi": 404, "sparse_lib_dump": 404, "xed64": 404, "click": 404, "xdi": 404, "push": 404, "53": [404, 405], "rbx": 404, "rbp": 404, "4154": 404, "r12": 404, "4155": 404, "r13": 404, "4156": 404, "4157": 404, "dataxf": 404, "bd00040000": 404, "ebp": 404, "0x400": 404, "4c8b3f": 404, "qword": 404, "4c8b7708": 404, "0x8": 404, "4c8b6f10": 404, "0x10": 404, "1a": 404, "avx512evex": 404, "62f17d48efc0": 404, "vpxord": 404, "zmm0": 404, "62f15d48efe4": 404, "zmm4": 404, "62513d48efc0": 404, "zmm8": 404, "2c": 404, "62511d48efe4": 404, "zmm12": 404, "62f17548efc9": 404, "zmm1": 404, "62f15548efe": 404, "zmm5": 404, "3e": 404, "62513548efc9": 404, "zmm9": 404, "62511548efe": 404, "zmm13": 404, "4a": 404, "62f16d48efd2": 404, "zmm2": 404, "62f14d48eff6": 404, "zmm6": 404, "62512d48efd2": 404, "zmm10": 404, "5c": 404, "62510d48eff6": 404, "zmm14": 404, "62": [404, 405], "62c17c481006": 404, "zmm16": 404, "zmmword": 404, "62c17c48104e01": 404, "zmm17": 404, "0x40": 404, "6f": 404, "62c17c48105602": 404, "zmm18": 404, "0x80": 404, "62427d48183f": 404, "vbroadcastss": 404, "zmm31": 404, "7c": 404, "vfma": 404, "62927d40b8c7": 404, "62927540b8cf": 404, "62926d40b8d7": 404, "8e": 404, "62427d48187f04": 404, "62927d40b8e7": 404, "9b": 404, "62927540b8ef": 404, "a1": 404, "62926d40b8f7": 404, "a7": 404, "62427d48187f08": 404, "0x20": 404, "ae": 404, "62127d40b8c7": 404, "b4": 404, "62127540b8cf": 404, "62126d40b8d7": 404, "c0": 404, "62427d48187f0c": 404, "0x30": 404, "c7": 404, "62127d40b8e7": 404, "62127540b8ef": 404, "62126d40b8f7": 404, "d9": 404, "62c17c48104603": 404, "0xc0": 404, "e0": 404, "62c17c48104e04": 404, "0x100": 404, "e7": 404, "62c17c48105605": 404, "0x140": 404, "ee": 404, "62427d48187f01": 404, "0x4": 404, "f5": 404, "fb": 404, "101": 404, "107": 404, "62427d48187f05": 404, "0x14": 404, "10e": 404, "114": 404, "11a": 404, "62427d48187f09": 404, "0x24": 404, "12d": 404, "133": 404, "139": 404, "62427d48187f0d": 404, "0x34": 404, "140": 404, "146": 404, "14c": 404, "152": 404, "62c17c48104606": 404, "0x180": 404, "62c17c48104e07": 404, "0x1c0": 404, "62c17c48105608": 404, "0x200": 404, "167": [404, 405], "62427d48187f02": 404, "16e": 404, "174": 404, "17a": 404, "180": 404, "62427d48187f06": 404, "0x18": 404, "18d": 404, "193": 404, "199": 404, "62427d48187f0a": 404, "0x28": 404, "1a0": 404, "1a6": 404, "1ac": 404, "1b2": 404, "62427d48187f0e": 404, "0x38": 404, "1b9": 404, "1bf": 404, "1c5": 404, "1cb": 404, "62c17c48104609": 404, "0x240": 404, "1d2": 404, "62c17c48104e0a": 404, "0x280": 404, "1d9": 404, "62c17c4810560b": 404, "0x2c0": 404, "1e0": 404, "62427d48187f03": 404, "0xc": 404, "1e7": 404, "1ed": 404, "1f3": 404, "1f9": 404, "62427d48187f07": 404, "0x1c": 404, "200": 404, "206": 404, "20c": 404, "212": 404, "62427d48187f0b": 404, "0x2c": 404, "219": [404, 405], "21f": 404, "225": 404, "22b": 404, "62427d48187f0f": 404, "0x3c": 404, "232": [404, 405], "238": 404, "23e": 404, "62d17c48114500": 404, "24b": 404, "62d17c48116503": 404, "62517c48114506": 404, "62517c48116509": 404, "260": 404, "62d17c48114d01": 404, "267": 404, "62d17c48116d04": 404, "26e": 404, "62517c48114d07": 404, "62517c48116d0a": 404, "27c": 404, "62d17c48115502": 404, "283": 404, "62d17c48117505": 404, "28a": 404, "62517c48115508": 404, "291": 404, "62517c4811750b": 404, "298": [404, 405], "pop": 404, "415f": 404, "29a": 404, "415e": 404, "29c": 404, "415d": 404, "29e": 404, "415c": 404, "2a0": 404, "5d": 404, "2a1": 404, "5b": 404, "2a2": 404, "avx": 404, "c5f877": 404, "vzeroupp": 404, "2a5": 404, "xed3": 404, "stat": 404, "29220": 404, "236418": 404, "118": 404, "2003": 404, "54": [404, 405], "00348609": 405, "601": 405, "00310676": 405, "675": 405, "00261406": 405, "802": 405, "00216633": 405, "968": 405, "068": 405, "00164658": 405, "1273": 405, "0112255": 405, "284": 405, "00947462": 405, "885": 405, "377": 405, "00764146": 405, "1097": 405, "78": 405, "0058452": 405, "1435": 405, "00407149": 405, "2060": 405, "0127448": 405, "658": 405, "198": 405, "0111132": 405, "754": 405, "835": 405, "00940157": 405, "892": 405, "00760217": 405, "1103": 405, "0054935": 405, "1527": 405, "044202": 405, "759": 405, "0364227": 405, "0292454": 405, "1147": 405, "0223472": 405, "1501": 405, "0149058": 405, "2251": 405, "216338": 405, "620": 405, "408": 405, "179593": 405, "345": 405, "135054": 405, "806": 405, "0946983": 405, "1417": 405, "0609701": 405, "2201": 405, "190508": 405, "704": 405, "526": 405, "159566": 405, "841": 405, "130863": 405, "1025": 405, "103927": 405, "1291": 405, "0739962": 405, "1813": 405, "0250395": 405, "753": 405, "784": 405, "0210726": 405, "895": 405, "682": 405, "0170987": 405, "0130778": 405, "1443": 405, "00923343": 405, "2044": 405, "3072": 405, "112882": 405, "668": 405, "818": 405, "0879386": 405, "858": 405, "525": 405, "068835": 405, "1096": 405, "79": 405, "0487342": 405, "1549": 405, "0317559": 405, "2377": 405, "109308": 405, "679": 405, "0922471": 405, "805": 405, "638": 405, "0759107": 405, "0558945": 405, "1329": 405, "61": 405, "0358752": 405, "2071": 405, "57": 405, "00565044": 405, "742": 405, "297": 405, "00503604": 405, "832": 405, "00447544": 405, "937": 405, "182": 405, "00368479": 405, "1138": 405, "00270954": 405, "1547": 405, "0183481": 405, "386": 405, "0154121": 405, "1088": 405, "0125696": 405, "1334": 405, "00959948": 405, "1747": 405, "72": 405, "00677631": 405, "2475": 405, "0206321": 405, "813": 405, "162": 405, "0184267": 405, "483": 405, "0164699": 405, "1018": 405, "66": 405, "0135801": 405, "1235": 405, "010552": 405, "1589": 405, "0721208": 405, "930": 405, "506": 405, "059613": 405, "1125": 405, "0483781": 405, "1387": 405, "0366748": 405, "1829": 405, "83": 405, "0248571": 405, "2699": 405, "376539": 405, "712": 405, "902": 405, "31929": 405, "840": 405, "727": 405, "261265": 405, "1027": 405, "193579": 405, "1386": 405, "118429": 405, "2266": 405, "309195": 405, "177": 405, "256619": 405, "1046": 405, "213454": 405, "1257": 405, "165192": 405, "1624": 405, "118402": 405, "2267": 405, "0402931": 405, "855": 405, "0341169": 405, "0275282": 405, "1371": 405, "0211298": 405, "1786": 405, "0150693": 405, "218765": 405, "215": 405, "180921": 405, "834": 405, "592": 405, "142778": 405, "1057": 405, "097692": 405, "1545": 405, "0620034": 405, "2435": 405, "174101": 405, "853": 405, "73": 405, "148369": 405, "1001": 405, "123554": 405, "1203": 405, "0923655": 405, "1609": 405, "0591283": 405, "2513": 405, "0074474": 405, "844": 405, "00657187": 405, "00570175": 405, "00483104": 405, "1302": 405, "00367406": 405, "1712": 405, "0247063": 405, "0207462": 405, "1213": 405, "03": 405, "0169214": 405, "0129936": 405, "1936": 405, "0090376": 405, "2784": 405, "0275881": 405, "912": 405, "0240415": 405, "77": 405, "0207876": 405, "1210": 405, "0177873": 405, "1414": 405, "0140129": 405, "1795": 405, "0994565": 405, "1012": 405, "0819725": 405, "1228": 405, "0660571": 405, "1523": 405, "0497077": 405, "2025": 405, "0341912": 405, "2944": 405, "500698": 405, "804": 405, "184": 405, "420619": 405, "287": 405, "337529": 405, "1192": 405, "94": 405, "251221": 405, "1602": 405, "158668": 405, "2537": 405, "412912": 405, "155": 405, "346369": 405, "1162": 405, "2831": 405, "1422": 405, "220585": 405, "1825": 405, "156168": 405, "2578": 405, "0538395": 405, "1051": 405, "0455066": 405, "1244": 405, "036978": 405, "1531": 405, "028483": 405, "1987": 405, "0200457": 405, "2824": 405, "283445": 405, "799": 405, "069": 405, "236101": 405, "959": 405, "302": 405, "188745": 405, "1199": 405, "135532": 405, "0845544": 405, "2678": 405, "227976": 405, "977": 405, "19463": 405, "1145": 405, "161251": 405, "1382": 405, "65": 405, "123585": 405, "1804": 405, "0840322": 405, "2653": 405, "00940534": 405, "891": 405, "00821985": 405, "1020": 405, "00701343": 405, "1196": 405, "08": 405, "00579899": 405, "1446": 405, "00464705": 405, "1805": 405, "0336342": 405, "997": 405, "629": 405, "0276086": 405, "1215": 405, "0224431": 405, "1495": 405, "09": 405, "0170807": 405, "1964": 405, "0117535": 405, "2854": 405, "0358603": 405, "0310083": 405, "1082": 405, "0260486": 405, "1288": 405, "0215163": 405, "1559": 405, "0170105": 405, "1972": 405, "133295": 405, "1006": 405, "92": 405, "111186": 405, "1207": 405, "0881114": 405, "0665519": 405, "2016": 405, "0454416": 405, "2953": 405, "611718": 405, "645": 405, "533329": 405, "430288": 405, "1247": 405, "307141": 405, "198987": 405, "2698": 405, "02": [405, 410], "556249": 405, "163": 405, "462737": 405, "1160": 405, "37537": 405, "1430": 405, "28321": 405, "1895": 405, "203901": 405, "2633": 405, "0716356": 405, "1053": 405, "0603517": 405, "1250": 405, "0490096": 405, "1540": 405, "0375683": 405, "2009": 405, "0267483": 405, "2822": 405, "3572": 405, "845": 405, "437": 405, "299561": 405, "1008": 405, "228752": 405, "1320": 405, "165648": 405, "1823": 405, "105656": 405, "2858": 405, "298907": 405, "994": 405, "529": 405, "255598": 405, "1163": 405, "20824": 405, "1427": 405, "159911": 405, "1858": 405, "111211": 405, "2673": 405, "0152997": 405, "685": 405, "358": 405, "0131446": 405, "797": 405, "0109669": 405, "956": 405, "132": 405, "00921101": 405, "00755406": 405, "1388": 405, "0553082": 405, "758": 405, "351": 405, "0458481": 405, "826": 405, "0367258": 405, "1142": 405, "06": 405, "027535": 405, "018464": 405, "2271": 405, "0597882": 405, "0510217": 405, "822": 405, "062": 405, "0421644": 405, "0333436": 405, "0296385": 405, "1415": 405, "22241": 405, "337": 405, "18324": 405, "915": 405, "145322": 405, "1154": 405, "1083": 405, "0728843": 405, "2301": 405, "11793": 405, "600": 405, "929398": 405, "722": 405, "720963": 405, "823": 405, "510039": 405, "1315": 405, "336519": 405, "1994": 405, "909941": 405, "737": 405, "508": 405, "753487": 405, "644": 405, "606477": 405, "459915": 405, "1459": 405, "303455": 405, "2211": 405, "123429": 405, "764": 405, "586": 405, "103035": 405, "923": 405, "0825026": 405, "1143": 405, "0625579": 405, "1508": 405, "0426942": 405, "2210": 405, "60813": 405, "734": 405, "483053": 405, "781": 405, "462": 405, "357348": 405, "1056": 405, "256715": 405, "1470": 405, "169119": 405, "2232": 405, "503341": 405, "738": 405, "42134": 405, "881": 405, "342843": 405, "255199": 405, "1456": 405, "174091": 405, "2134": 405, "0142667": 405, "0123966": 405, "1015": 405, "0105865": 405, "1188": 405, "00860835": 405, "1461": 405, "00655363": 405, "1919": 405, "0532543": 405, "0447548": 405, "1124": 405, "0348388": 405, "1444": 405, "0266886": 405, "1885": 405, "0177431": 405, "2836": 405, "69": 405, "0549107": 405, "916": 405, "608": 405, "0475549": 405, "1058": 405, "0401657": 405, "1253": 405, "0326952": 405, "1539": 405, "025032": 405, "220947": 405, "911": 405, "178324": 405, "1128": 405, "137361": 405, "1465": 405, "103126": 405, "1952": 405, "0701429": 405, "2870": 405, "06648": 405, "755": 405, "893959": 405, "900": 405, "831": 405, "718893": 405, "1120": 405, "537405": 405, "1498": 405, "280686": 405, "2869": 405, "902588": 405, "730678": 405, "582871": 405, "1381": 405, "444133": 405, "298489": 405, "2697": 405, "581": 405, "0955952": 405, "1184": 405, "078109": 405, "1449": 405, "0596185": 405, "1899": 405, "0414047": 405, "2735": 405, "596568": 405, "497127": 405, "396634": 405, "286973": 405, "1578": 405, "167473": 405, "2704": 405, "472466": 405, "943": 405, "787": 405, "391055": 405, "1140": 405, "319865": 405, "1394": 405, "247491": 405, "1801": 405, "169874": 405, "2624": 405, "93": 405, "0213786": 405, "686": 405, "67": 405, "018228": 405, "0152068": 405, "0120525": 405, "1218": 405, "0103961": 405, "1412": 405, "0771592": 405, "761": 405, "0642402": 405, "074": 405, "0514668": 405, "0387886": 405, "1513": 405, "0256871": 405, "2285": 405, "0836219": 405, "702": 405, "0712915": 405, "664": 405, "0589148": 405, "697": 405, "0484067": 405, "0411331": 405, "311691": 405, "569": 405, "256635": 405, "204973": 405, "153086": 405, "1534": 405, "101206": 405, "2320": 405, "59625": 405, "588": 405, "583": 405, "33246": 405, "705": 405, "03849": 405, "703": 405, "738939": 405, "1271": 405, "480308": 405, "1956": 405, "26056": 405, "745": 405, "324": 405, "04874": 405, "842936": 405, "1114": 405, "59": 405, "635554": 405, "1478": 405, "42145": 405, "2229": 405, "174215": 405, "375": 405, "145836": 405, "116701": 405, "1132": 405, "0876727": 405, "1506": 405, "0595001": 405, "2220": 405, "883258": 405, "598": 405, "333": 405, "711146": 405, "743": 405, "543634": 405, "129": 405, "402406": 405, "1313": 405, "266945": 405, "1979": 405, "70404": 405, "592043": 405, "878": 405, "695": 405, "475444": 405, "1094": 405, "358932": 405, "240739": 405, "2160": 405, "0184384": 405, "909": 405, "907": 405, "0158714": 405, "013504": 405, "1242": 405, "0109927": 405, "1526": 405, "00826017": 405, "2031": 405, "061272": 405, "1095": 405, "0609618": 405, "1100": 405, "0467291": 405, "1436": 405, "0340362": 405, "1971": 405, "0231282": 405, "2901": 405, "0717247": 405, "0616923": 405, "1087": 405, "0521595": 405, "1286": 405, "0423267": 405, "1585": 405, "0321109": 405, "2089": 405, "286461": 405, "242512": 405, "181783": 405, "1476": 405, "139021": 405, "1930": 405, "0870121": 405, "3085": 405, "36322": 405, "652": 405, "08991": 405, "880185": 405, "1219": 405, "694533": 405, "366328": 405, "2931": 405, "15748": 405, "927": 405, "937824": 405, "1144": 405, "745357": 405, "1440": 405, "558061": 405, "1924": 405, "391387": 405, "2743": 405, "157349": 405, "616": 405, "129806": 405, "103083": 405, "1464": 405, "0784417": 405, "053639": 405, "2815": 405, "767569": 405, "874": 405, "641585": 405, "941": 405, "387": 405, "488558": 405, "1236": 405, "355651": 405, "1698": 405, "230945": 405, "2615": 405, "611059": 405, "514108": 405, "1156": 405, "416571": 405, "318094": 405, "1869": 405, "225023": 405, "2642": 405, "0375093": 405, "564": 405, "0317602": 405, "0261888": 405, "1281": 405, "0211151": 405, "0158951": 405, "2110": 405, "141333": 405, "949": 405, "133647": 405, "1004": 405, "0999998": 405, "0710327": 405, "1889": 405, "52": 405, "0429916": 405, "3121": 405, "147474": 405, "125344": 405, "1070": 405, "104294": 405, "0849766": 405, "1579": 405, "0624729": 405, "2148": 405, "701639": 405, "765": 405, "534615": 405, "359791": 405, "1492": 405, "2612": 405, "2055": 405, "183193": 405, "2930": 405, "92067": 405, "735": 405, "271": 405, "4402": 405, "880": 405, "046": 405, "69186": 405, "1269": 405, "17436": 405, "1828": 405, "880179": 405, "2439": 405, "62123": 405, "264": 405, "14905": 405, "999": 405, "64253": 405, "1307": 405, "1413": 405, "1881": 405, "771439": 405, "2783": 405, "369429": 405, "451": 405, "288236": 405, "1047": 405, "209526": 405, "1441": 405, "148115": 405, "2038": 405, "106089": 405, "2846": 405, "53204": 405, "465": 405, "28593": 405, "939": 405, "368": 405, "0852": 405, "1113": 405, "685382": 405, "1762": 405, "408357": 405, "2958": 405, "4521": 405, "13466": 405, "853916": 405, "1392": 405, "642672": 405, "1850": 405, "446442": 405, "2663": 405, "0574189": 405, "876": 405, "0460811": 405, "1092": 405, "0389357": 405, "1292": 405, "031279": 405, "0234498": 405, "2146": 405, "204966": 405, "17364": 405, "1159": 405, "141097": 405, "1426": 405, "105192": 405, "1913": 405, "0677766": 405, "2970": 405, "21269": 405, "946": 405, "573": 405, "191564": 405, "1050": 405, "156368": 405, "1287": 405, "1565": 405, "0933565": 405, "2156": 405, "84983": 405, "789777": 405, "1019": 405, "598168": 405, "1346": 405, "433492": 405, "1857": 405, "269504": 405, "2988": 405, "74845": 405, "859": 405, "348": 405, "96945": 405, "811": 405, "505": 405, "77082": 405, "76407": 405, "1826": 405, "09719": 405, "2935": 405, "73162": 405, "00241": 405, "1072": 405, "39024": 405, "77317": 405, "1816": 405, "19536": 405, "2694": 405, "517278": 405, "875": 405, "708": 405, "382208": 405, "1185": 405, "317837": 405, "1425": 405, "233231": 405, "1942": 405, "152925": 405, "2962": 405, "44309": 405, "741": 405, "62409": 405, "1115": 405, "64963": 405, "1098": 405, "03923": 405, "1743": 405, "625089": 405, "2898": 405, "07006": 405, "861": 405, "632": 405, "64247": 405, "1085": 405, "33386": 405, "1337": 405, "994935": 405, "1792": 405, "68383": 405, "2608": 405, "0713578": 405, "940": 405, "0612457": 405, "0516788": 405, "1298": 405, "0414834": 405, "1617": 405, "0309886": 405, "2165": 405, "282241": 405, "951": 405, "085": 405, "238855": 405, "1123": 405, "193713": 405, "1385": 405, "146781": 405, "81": 405, "0938959": 405, "286141": 405, "122": 405, "257138": 405, "1043": 405, "214208": 405, "167575": 405, "1601": 405, "124072": 405, "2163": 405, "21431": 405, "884": 405, "237": 405, "955251": 405, "775294": 405, "1384": 405, "63282": 405, "1696": 405, "37333": 405, "2876": 405, "87335": 405, "317": 405, "65059": 405, "1176": 405, "94733": 405, "1457": 405, "62241": 405, "1637": 405, "47752": 405, "2906": 405, "75786": 405, "83024": 405, "889": 405, "87429": 405, "1108": 405, "87685": 405, "75328": 405, "2449": 405, "718776": 405, "289": 405, "561317": 405, "1076": 405, "429166": 405, "1407": 405, "317204": 405, "1904": 405, "208555": 405, "2896": 405, "94057": 405, "30458": 405, "1048": 405, "6702": 405, "25799": 405, "1920": 405, "84121": 405, "2871": 405, "34423": 405, "711": 405, "77444": 405, "857": 405, "10049": 405, "52509": 405, "926038": 405, "2568": 405, "00203027": 405, "1032": 405, "00198061": 405, "00179382": 405, "1169": 405, "00163713": 405, "1280": [405, 407], "00171023": 405, "1226": 405, "00395783": 405, "2119": 405, "00340452": 405, "2463": 405, "00308582": 405, "2718": 405, "00292684": 405, "2866": 405, "00217889": 405, "3849": 405, "00437142": 405, "1918": 405, "00418212": 405, "2005": 405, "00344785": 405, "2433": 405, "00291005": 405, "2882": 405, "00293671": 405, "2856": 405, "0120946": 405, "2774": 405, "0103377": 405, "3245": 405, "00850778": 405, "3943": 405, "00659512": 405, "5087": 405, "00484669": 405, "6923": 405, "0524509": 405, "2558": 405, "0428737": 405, "3130": 405, "0323642": 405, "4147": 405, "0231199": 405, "5805": 405, "0152199": 405, "8818": 405, "0451228": 405, "2974": 405, "0373823": 405, "3590": 405, "0302746": 405, "4433": 405, "023182": 405, "5789": 405, "0161696": 405, "8300": 405, "00731429": 405, "2580": 405, "00633179": 405, "2980": 405, "00535855": 405, "3522": 405, "00449335": 405, "4200": 405, "00341811": 405, "5521": 405, "0270028": 405, "2795": 405, "02197": 405, "3436": 405, "0177477": 405, "4253": 405, "0131335": 405, "5748": 405, "00897444": 405, "8412": 405, "0257188": 405, "2889": 405, "0218969": 405, "3393": 405, "0180933": 405, "4107": 405, "013742": 405, "5408": 405, "00992419": 405, "7488": 405, "00289114": 405, "1450": 405, "00245821": 405, "00252331": 405, "1662": 405, "00226557": 405, "1851": 405, "00180316": 405, "2326": 405, "00578904": 405, "00500361": 405, "3353": 405, "0042401": 405, "3956": 405, "00350486": 405, "4786": 405, "00297233": 405, "5644": 405, "00693265": 405, "2420": 405, "00593063": 405, "2828": 405, "00526697": 405, "3185": 405, "00480098": 405, "3494": 405, "00385131": 405, "4356": 405, "0193516": 405, "3467": 405, "0166254": 405, "4036": 405, "0132869": 405, "5050": 405, "0106293": 405, "6313": 405, "00759056": 405, "8841": 405, "0977256": 405, "2746": 405, "0813271": 405, "0656322": 405, "4090": 405, "0476463": 405, "5633": 405, "0295362": 405, "9088": 405, "0736189": 405, "3646": 405, "0603789": 405, "4445": 405, "0489938": 405, "5478": 405, "036992": 405, "7256": 405, "0258802": 405, "10372": 405, "0116589": 405, "3237": 405, "00979113": 405, "3855": 405, "00811779": 405, "4650": 405, "00667871": 405, "5652": 405, "00493861": 405, "7643": 405, "0537768": 405, "2807": 405, "0459135": 405, "3288": 405, "03588": 405, "4208": 405, "0252901": 405, "5970": 405, "0167419": 405, "9018": 405, "0407051": 405, "3651": 405, "0342908": 405, "4334": 405, "028568": 405, "5202": 405, "0218703": 405, "6796": 405, "016186": 405, "9183": 405, "0031551": 405, "0029515": 405, "00265488": 405, "2369": 405, "00243581": 405, "2582": 405, "00223598": 405, "2813": 405, "00745008": 405, "3377": 405, "00656544": 405, "3833": 405, "00542595": 405, "4638": 405, "00425647": 405, "5912": 405, "0034657": 405, "7261": 405, "00835933": 405, "3010": 405, "00741956": 405, "3391": 405, "0065352": 405, "3850": 405, "00555918": 405, "4526": 405, "00488058": 405, "5156": 405, "0257262": 405, "3912": 405, "0217468": 405, "4628": 405, "0176505": 405, "5703": 405, "0137122": 405, "7341": 405, "00980134": 405, "10270": 405, "124749": 405, "3227": 405, "103385": 405, "3894": 405, "0832193": 405, "4838": 405, "0626013": 405, "6432": 405, "0397992": 405, "10117": 405, "101071": 405, "3983": 405, "0825665": 405, "4876": 405, "0668515": 405, "6023": 405, "0487727": 405, "8255": 405, "0354192": 405, "11368": 405, "0147718": 405, "0127799": 405, "4430": 405, "0105324": 405, "5376": 405, "00869796": 405, "6509": 405, "00643591": 405, "8798": 405, "0698868": 405, "3240": 405, "0588583": 405, "3848": 405, "0473412": 405, "4784": 405, "0346142": 405, "6543": 405, "0222947": 405, "10159": 405, "0538146": 405, "4142": 405, "0454583": 405, "4904": 405, "0373579": 405, "5968": 405, "0291396": 405, "7651": 405, "0208901": 405, "10672": 405, "00393589": 405, "00332212": 405, "2525": 405, "00317296": 405, "2643": 405, "00269113": 405, "3117": 405, "00235812": 405, "3557": 405, "009382": 405, "3576": 405, "00828943": 405, "4047": 405, "00672351": 405, "4990": 405, "00514768": 405, "6518": 405, "0040612": 405, "8262": 405, "0107115": 405, "3132": 405, "00920252": 405, "00794258": 405, "4224": 405, "00698123": 405, "4806": 405, "00561026": 405, "5980": 405, "0345669": 405, "3882": 405, "0289719": 405, "4632": 405, "0232584": 405, "5770": 405, "0179766": 405, "7466": 405, "0128144": 405, "10474": 405, "158162": 405, "3394": 405, "132552": 405, "4050": 405, "101844": 405, "5271": 405, "080936": 405, "6633": 405, "0530097": 405, "10127": 405, "135839": 405, "3952": 405, "11116": 405, "4829": 405, "0899513": 405, "0633017": 405, "8481": 405, "0467462": 405, "11484": 405, "0192628": 405, "3919": 405, "0164591": 405, "4586": 405, "0135348": 405, "5578": 405, "0107712": 405, "7009": 405, "00761117": 405, "9919": 405, "0854876": 405, "3532": 405, "0747271": 405, "4041": 405, "0604759": 405, "4993": 405, "0417964": 405, "7225": 405, "0275467": 405, "10962": 405, "0713821": 405, "4164": 405, "0600772": 405, "4948": 405, "0496581": 405, "5986": 405, "0381385": 405, "7794": 405, "027025": 405, "10999": 405, "00502473": 405, "2086": 405, "00451855": 405, "00396819": 405, "00338962": 405, "3093": 405, "00315343": 405, "3325": 405, "0147951": 405, "2834": 405, "0126225": 405, "3322": 405, "010269": 405, "4084": 405, "00785878": 405, "5337": 405, "00570293": 405, "7354": 405, "0161691": 405, "2594": 405, "0144483": 405, "2902": 405, "011705": 405, "3583": 405, "0101487": 405, "4132": 405, "00879332": 405, "4769": 405, "0560297": 405, "2994": 405, "0467998": 405, "3584": 405, "0374397": 405, "4481": 405, "028166": 405, "5956": 405, "0192593": 405, "8711": 405, "277815": 405, "2415": 405, "229837": 405, "2919": 405, "1787": 405, "3755": 405, "126545": 405, "5303": 405, "0835321": 405, "8033": 405, "224925": 405, "2983": 405, "184256": 405, "3642": 405, "146452": 405, "4582": 405, "108899": 405, "6162": 405, "0740655": 405, "9060": 405, "0319455": 405, "2954": 405, "0268136": 405, "3519": 405, "0217062": 405, "4347": 405, "0166666": 405, "5662": 405, "0116466": 405, "8102": 405, "150549": 405, "2507": 405, "119951": 405, "3147": 405, "0893092": 405, "4226": 405, "0637226": 405, "5923": 405, "0427839": 405, "8823": 405, "122421": 405, "3035": 405, "102244": 405, "0822007": 405, "4520": 405, "0622484": 405, "5969": 405, "0429436": 405, "8652": 405, "00481074": 405, "00443796": 405, "2835": 405, "00389863": 405, "00343822": 405, "3659": 405, "00297784": 405, "4225": 405, "0145757": 405, "3453": 405, "012078": 405, "4167": 405, "00896329": 405, "5615": 405, "00727645": 405, "6917": 405, "00548478": 405, "9176": 405, "0150624": 405, "3341": 405, "0132428": 405, "3800": 405, "011443": 405, "4398": 405, "0092883": 405, "5418": 405, "00744553": 405, "6759": 405, "0543977": 405, "3701": 405, "0445693": 405, "4517": 405, "0363329": 405, "5541": 405, "0270492": 405, "7442": 405, "0187415": 405, "10742": 405, "267367": 405, "3011": 405, "223615": 405, "3601": 405, "1797": 405, "134716": 405, "5977": 405, "0692752": 405, "11624": 405, "222661": 405, "3616": 405, "179525": 405, "4485": 405, "139298": 405, "5781": 405, "0958787": 405, "8399": 405, "176292": 405, "4568": 405, "0700283": 405, "0258341": 405, "4383": 405, "0207504": 405, "5457": 405, "0161277": 405, "7021": 405, "0116008": 405, "9761": 405, "148512": 405, "3050": 405, "124238": 405, "0995304": 405, "4551": 405, "0714324": 405, "6341": 405, "044154": 405, "10259": 405, "113174": 405, "3940": 405, "0961662": 405, "4636": 405, "0765841": 405, "5822": 405, "0592912": 405, "7520": 405, "0416614": 405, "10703": 405, "00655654": 405, "2239": 405, "00584761": 405, "2510": 405, "00502113": 405, "2923": 405, "00466269": 405, "3148": 405, "00393276": 405, "3732": 405, "0203923": 405, "2879": 405, "0171018": 405, "3433": 405, "0137027": 405, "4285": 405, "0109527": 405, "5361": 405, "00749636": 405, "7833": 405, "0221319": 405, "0193761": 405, "3030": 405, "0158773": 405, "3698": 405, "0134367": 405, "4370": 405, "0116365": 405, "5046": 405, "0780751": 405, "3008": 405, "0651551": 405, "3604": 405, "0521945": 405, "4500": 405, "0394101": 405, "5959": 405, "0262706": 405, "8940": 405, "398509": 405, "2357": 405, "332153": 405, "259051": 405, "3626": 405, "184412": 405, "5094": 405, "119678": 405, "7850": 405, "313656": 405, "2995": 405, "257989": 405, "3641": 405, "206049": 405, "4559": 405, "152848": 405, "6146": 405, "103125": 405, "9110": 405, "0444861": 405, "2969": 405, "037334": 405, "3538": 405, "0302293": 405, "0231979": 405, "5695": 405, "0158702": 405, "8325": 405, "219777": 405, "2404": 405, "17764": 405, "2975": 405, "135864": 405, "3889": 405, "100424": 405, "5262": 405, "0677547": 405, "7799": 405, "172356": 405, "3018": 405, "144231": 405, "3606": 405, "116019": 405, "4483": 405, "0873881": 405, "5953": 405, "0596004": 405, "8728": 405, "00609695": 405, "2751": 405, "00517637": 405, "3241": 405, "00448956": 405, "3736": 405, "00394876": 405, "4248": 405, "00317463": 405, "5284": 405, "0204832": 405, "3276": 405, "0137691": 405, "4873": 405, "0114194": 405, "5876": 405, "00893304": 405, "7512": 405, "00653312": 405, "10272": 405, "0192409": 405, "3487": 405, "0168348": 405, "3986": 405, "0142343": 405, "4714": 405, "0119455": 405, "5617": 405, "00910648": 405, "7369": 405, "0781101": 405, "0614806": 405, "4366": 405, "046201": 405, "5810": 405, "0357023": 405, "7518": 405, "0222103": 405, "12086": 405, "326917": 405, "3284": 405, "273363": 405, "3927": 405, "220994": 405, "4858": 405, "166153": 405, "6462": 405, "0854403": 405, "12567": 405, "311348": 405, "3448": 405, "243012": 405, "4418": 405, "187933": 405, "5713": 405, "126819": 405, "8466": 405, "0855686": 405, "12548": 405, "0404778": 405, "3730": 405, "0329699": 405, "4579": 405, "0265272": 405, "5692": 405, "0207815": 405, "7265": 405, "0139037": 405, "10860": 405, "183003": 405, "161443": 405, "3741": 405, "129767": 405, "4654": 405, "0893345": 405, "6760": 405, "0610684": 405, "9890": 405, "15525": 405, "3829": 405, "125772": 405, "4727": 405, "101434": 405, "5861": 405, "0765083": 405, "7770": 405, "0537321": 405, "11064": 405, "0104209": 405, "3219": 405, "00908195": 405, "3694": 405, "00781277": 405, "4294": 405, "00651108": 405, "5153": 405, "0051719": 405, "6487": 405, "0321377": 405, "4176": 405, "0269904": 405, "4972": 405, "0220014": 405, "6100": 405, "016901": 405, "7941": 405, "0120042": 405, "11180": 405, "0373802": 405, "0314895": 405, "4262": 405, "0266731": 405, "5031": 405, "0217822": 405, "6161": 405, "0168219": 405, "7978": 405, "176031": 405, "3049": 405, "134442": 405, "3993": 405, "0843776": 405, "6362": 405, "0640577": 405, "8381": 405, "043787": 405, "12261": 405, "697876": 405, "3077": 405, "615338": 405, "3489": 405, "350147": 405, "6133": 405, "267289": 405, "8034": 405, "179695": 405, "11950": 405, "703207": 405, "3053": 405, "561805": 405, "3822": 405, "423052": 405, "5076": 405, "254835": 405, "171434": 405, "12526": 405, "0933483": 405, "3235": 405, "0725632": 405, "4161": 405, "0539197": 405, "5600": 405, "0376119": 405, "8029": 405, "0263137": 405, "11476": 405, "407388": 405, "340939": 405, "3543": 405, "261028": 405, "4627": 405, "151649": 405, "7965": 405, "103379": 405, "11684": 405, "358769": 405, "3314": 405, "283046": 405, "4201": 405, "212152": 405, "5604": 405, "158502": 405, "7502": 405, "107514": 405, "11059": 405, "0148329": 405, "0129116": 405, "3898": 405, "0110537": 405, "4553": 405, "00925277": 405, "5439": 405, "00716987": 405, "7019": 405, "0526609": 405, "3823": 405, "0447282": 405, "4501": 405, "0365834": 405, "5503": 405, "0274874": 405, "7324": 405, "0183895": 405, "10947": 405, "0556653": 405, "0465882": 405, "4321": 405, "039411": 405, "5108": 405, "0318745": 405, "6316": 405, "024706": 405, "8148": 405, "263316": 405, "3058": 405, "198303": 405, "4061": 405, "141966": 405, "5672": 405, "105849": 405, "7608": 405, "0687866": 405, "11707": 405, "793822": 405, "4057": 405, "996979": 405, "3230": 405, "54288": 405, "5933": 405, "412174": 405, "7815": 405, "274441": 405, "11737": 405, "03474": 405, "3113": 405, "832701": 405, "3868": 405, "564787": 405, "421781": 405, "7637": 405, "271587": 405, "11860": 405, "130834": 405, "3462": 405, "0943305": 405, "4802": 405, "0760123": 405, "0580473": 405, "7803": 405, "0395342": 405, "11458": 405, "635729": 405, "2850": 405, "379899": 405, "307908": 405, "5884": 405, "233057": 405, "7774": 405, "157518": 405, "11503": 405, "518276": 405, "3441": 405, "422517": 405, "4221": 405, "323476": 405, "5513": 405, "247251": 405, "7213": 405, "163369": 405, "10917": 405, "0192313": 405, "0168147": 405, "3991": 405, "0143274": 405, "4683": 405, "011932": 405, "5624": 405, "00914975": 405, "7334": 405, "0723144": 405, "3712": 405, "0613803": 405, "4373": 405, "050021": 405, "5366": 405, "0376949": 405, "7121": 405, "0249397": 405, "10763": 405, "0796627": 405, "3369": 405, "0616695": 405, "4352": 405, "0521326": 405, "5149": 405, "042188": 405, "0325741": 405, "8240": 405, "380582": 405, "2821": 405, "24038": 405, "4466": 405, "195271": 405, "5498": 405, "146935": 405, "7307": 405, "0948318": 405, "11322": 405, "08794": 405, "3947": 405, "913626": 405, "4701": 405, "737943": 405, "5820": 405, "558473": 405, "7690": 405, "369466": 405, "51009": 405, "2844": 405, "26974": 405, "3382": 405, "778244": 405, "5518": 405, "589803": 405, "7282": 405, "375284": 405, "11444": 405, "160705": 405, "3758": 405, "135495": 405, "4457": 405, "108718": 405, "5555": 405, "0811198": 405, "7445": 405, "0533513": 405, "11320": 405, "614109": 405, "3934": 405, "518614": 405, "418491": 405, "5772": 405, "31592": 405, "7647": 405, "211893": 405, "11401": 405, "836616": 405, "2842": 405, "699579": 405, "3399": 405, "544194": 405, "379699": 405, "228043": 405, "10428": 405, "un": 406, "u": 406, "sparsity_al": 406, "hotmap": 406, "jpg": 406, "x16": 407, "environment_vari": 407, "kernel_typ": [407, 408], "perfom": 407, "introduct": 407, "benchmark_it": 407, "benchmark_no_refresh": 407, "refresh": 407, "kxn": 407, "sparse_ratio": 407, "micro_b": 407, "output_fp32": 407, "micro_oc": 407, "sub_func_level": 407, "3d_infer": 407, "automaticlli": 407, "dsparse_lib_use_amx": 407, "amx_bf16_x16": 407, "output_bf16": 407, "interv": 407, "lower_bound": 407, "upper_bound": 407, "invalid": 407, "fp32_relu": 407, "src_dt": 407, "dst_dt": 407, "tanspos": 407, "4d": 407, "bs0": 407, "bs1": 407, "scr2": 407, "avx512f_p2031_p2013": 407, "has_binary_add": 407, "tile_n": 407, "coeffici": 407, "vnni_noperm_p2031_p1302": 407, "suuport": 407, "d0xd1x": 407, "d0": 407, "dst_type": 407, "padding_mask": 407, "badd_dim": 407, "blank": 407, "large_weight_threshold": 407, "add_bia": 407, "channel_num": 407, "quantize_dim_elt_num": 407, "src_data_typ": 407, "newli": 407, "subdir": 407, "benchmark_dir": 407, "bench_": 407, "test_": 407, "entranc": 407, "get_true_data_": 407, "check_result_": 407, "gen_case_": 407, "run_bench_": 407, "calc_flop": 407, "get_refresh_data_idx": 407, "benchmark_util": 407, "labl": 408, "run_ci": 408, "overwrit": 408, "it_per_cor": 408, "discard": 408, "new_input_fil": 408, "medium_n": 408, "ci": 408, "apach": 409, "copyright": 409, "parti": 409, "accompani": 409, "research": 409, "wish": 409, "bibtex": 409, "misc": 409, "hanwen": 409, "haihao": 409, "shen": 409, "dong": 409, "hengyu": 409, "meng": 409, "wenxin": 409, "zhang": 409, "howpublish": 409, "url": 409, "year": 409, "logo": 409, "atom": 409, "phi": 409, "pentium": 409, "vtune": 409, "corpor": 409, "subsidiari": 409, "toler": 410, "rel": 410, "absolut": [410, 413, 414], "proport": [410, 411], "vision": 412, "speech": 412, "multimod": 412, "text_classifi": 412, "great": 412, "9998425245285034": 412, "believ": 412, "beauti": 412, "evoc": 412, "ve": 412, "seen": 412, "9998886585235596": 412, "bear": 413, "brain": 413, "damag": 413, "hypothesi": 413, "yann": 413, "lecun": 413, "salient": 413, "anywher": 413, "filter": 413, "magnitud": 413, "lowest": 413, "freez": 413, "grouplasso": 413, "hyper": 413, "didn": 413, "pruning_conf": 413, "littl": 414, "degrad": 414, "ex": 414, "affin": 414, "math": 414, "zeropoint": 414, "asymmetr": 414, "overflow": 414, "fp16": 414, "unseen": 414, "peopl": 414, "emul": 414, "fake": 414, "backward": 414, "mimic": 414, "made": 414, "ultim": 414, "either": 414, "pain": 414, "lossi": 414, "fx": 414, "eager": 414, "qat": 414, "site": 415, "secur": 419, "legal": 419, "injector": 421}, "objects": {"": [[347, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [347, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [347, 1, 1, "_CPPv42jd", "jd"], [347, 1, 1, "_CPPv42jd", "jd"], [348, 1, 1, "_CPPv42jd", "jd"], [349, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [350, 1, 1, "_CPPv42jd", "jd"], [350, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [350, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [350, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [350, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [350, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [350, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [350, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [350, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [350, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [350, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [350, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [348, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [348, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [348, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [348, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [348, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [348, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [348, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [348, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [348, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [350, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [350, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [350, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [350, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [350, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [350, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [350, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [350, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [350, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [350, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [350, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [350, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [350, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [347, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [347, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [347, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::cpu_engine_t::create_kernel"], [347, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [347, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [347, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t", "jd::cpu_engine_t::create_stream"], [347, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [347, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [347, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [347, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [348, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [348, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [348, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [348, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [348, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [348, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [348, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [348, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [348, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [348, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [348, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [348, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [348, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [348, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [348, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [348, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [348, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [348, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [348, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [348, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [348, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [348, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [348, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [348, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [348, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [348, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [348, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [347, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [347, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [347, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [347, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [347, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [347, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [347, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [347, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [347, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [347, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [347, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [347, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [347, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [347, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [348, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [348, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [348, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [348, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [348, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [348, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [348, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [348, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [348, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [348, 3, 1, "_CPPv4N2jd9groupnormE", "jd::groupnorm"], [348, 4, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm"], [348, 4, 1, "_CPPv4N2jd9groupnorm9groupnormEv", "jd::groupnorm::groupnorm"], [348, 5, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm::kdp"], [348, 4, 1, "_CPPv4N2jd9groupnormD0Ev", "jd::groupnorm::~groupnorm"], [348, 3, 1, "_CPPv4N2jd14groupnorm_descE", "jd::groupnorm_desc"], [348, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc"], [348, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv", "jd::groupnorm_desc::groupnorm_desc"], [348, 5, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd14groupnorm_descD0Ev", "jd::groupnorm_desc::~groupnorm_desc"], [348, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [348, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [348, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [348, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [348, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [348, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [348, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [348, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [348, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [348, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [348, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [348, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [348, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [348, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [348, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute"], [348, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [348, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute::ctx"], [348, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [348, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [348, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [348, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [348, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [348, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [348, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [348, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [348, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [348, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [348, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [348, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [348, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [348, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [348, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [348, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [348, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [348, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [348, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [348, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [348, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [348, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [348, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [348, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [348, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [348, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [348, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [348, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [348, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [348, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [348, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [348, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [348, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [348, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [348, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [348, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [348, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [348, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [348, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [348, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [348, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [348, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [348, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [349, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [349, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [349, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [349, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [349, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [349, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [349, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [349, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [349, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [349, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [349, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [349, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [349, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [349, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [349, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [349, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [349, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [349, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [349, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [349, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [349, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [349, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [349, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [349, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [349, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [349, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [349, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv", "jd::operator_desc::tensor_dtypes"], [349, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv", "jd::operator_desc::tensor_ftypes"], [349, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_shapesEv", "jd::operator_desc::tensor_shapes"], [349, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [349, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [348, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [348, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [348, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [348, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [348, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [348, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [348, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [348, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [348, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [348, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [348, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [348, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [348, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [348, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [348, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [348, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [348, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [348, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [348, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [348, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [348, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [348, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [348, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [348, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [348, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [348, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [348, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [348, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [348, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [348, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [348, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [348, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [348, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [348, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [348, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [348, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [348, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [348, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [348, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [350, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [350, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [350, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [350, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [350, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [350, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [350, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [350, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [350, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [350, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [350, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [350, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [350, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [350, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [350, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [350, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [350, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [350, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [350, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [350, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [350, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [350, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [350, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [350, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [350, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [350, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [350, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [350, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [350, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [350, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [350, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [350, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [350, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [350, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [350, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [350, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [350, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [350, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [350, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [350, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [350, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [350, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [350, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [350, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [350, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [350, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [350, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [350, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [350, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [350, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [350, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [350, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [350, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [350, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [350, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE", "jd::ssd::matmul_fp8_data_t::matE"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [350, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE", "jd::ssd::matmul_fp8_data_t::scale"], [350, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE", "jd::ssd::matmul_fp8_param_t::has_append_sum"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E", "jd::ssd::matmul_fp8_param_t::has_scale0"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE", "jd::ssd::matmul_fp8_param_t::weight_8bit"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E", "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E", "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [350, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [350, 1, 1, "_CPPv4N2jd3ssd12matmul_inputE", "jd::ssd::matmul_input"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::APPEND_SUM"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::SCALE0"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::SRC0"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::SRC1"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::SRC2"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::ZP0"], [350, 6, 1, "_CPPv4N2jd3ssd12matmul_input5inputE", "jd::ssd::matmul_input::input"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::input::APPEND_SUM"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::input::SCALE0"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::input::SRC0"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::input::SRC1"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::input::SRC2"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::input::ZP0"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::input::matmul_io_MAX"], [350, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::matmul_io_MAX"], [350, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::APPEND_SUM"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [350, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::io::APPEND_SUM"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [350, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [350, 1, 1, "_CPPv4N2jd3ssd13matmul_outputE", "jd::ssd::matmul_output"], [350, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::DST0"], [350, 6, 1, "_CPPv4N2jd3ssd13matmul_output6outputE", "jd::ssd::matmul_output::output"], [350, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::output::DST0"], [350, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [350, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [350, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [350, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [350, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [350, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [350, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [350, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [350, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [350, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [350, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [350, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [350, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [350, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [350, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [350, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [350, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [350, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [350, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [350, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [350, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [350, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [350, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [350, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [350, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [350, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [350, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [350, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [350, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [350, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [350, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [350, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [350, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [350, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [350, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [350, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [350, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [350, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [350, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [350, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [350, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [350, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [350, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [350, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [350, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [350, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [350, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [350, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [350, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [350, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [350, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [350, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [350, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [350, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [350, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [350, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [350, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [350, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [350, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [350, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [350, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [350, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [350, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [350, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [350, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [350, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [350, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [350, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [350, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [350, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [350, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [350, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [350, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [350, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [350, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [350, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [350, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [350, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [350, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [348, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [348, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [348, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [348, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [348, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [348, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [348, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [348, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [348, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [348, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [348, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [348, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [348, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [348, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [348, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [348, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [348, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [348, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [348, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [0, 9, 0, "-", "clang-format"], [1, 9, 0, "-", "convert_falcon"], [2, 9, 0, "-", "convert_gptneox"], [3, 9, 0, "-", "convert_llama"], [4, 9, 0, "-", "convert_mpt"], [219, 9, 0, "-", "intel_extension_for_transformers"], [256, 9, 0, "-", "sparsity_all"], [257, 9, 0, "-", "test_add_cls_token"], [258, 9, 0, "-", "test_add_embeddings"], [259, 9, 0, "-", "test_add_zeros"], [260, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [261, 9, 0, "-", "test_attention_reshape"], [262, 9, 0, "-", "test_baddbmm"], [263, 9, 0, "-", "test_bert_mini_fp32"], [264, 9, 0, "-", "test_binary_op"], [265, 9, 0, "-", "test_binaryop"], [266, 9, 0, "-", "test_cast_to"], [267, 9, 0, "-", "test_concat"], [268, 9, 0, "-", "test_conv_reshape"], [269, 9, 0, "-", "test_decoder_attn_reshape"], [270, 9, 0, "-", "test_dispatcher_tuning_acc"], [271, 9, 0, "-", "test_dispatcher_tuning_throughput"], [272, 9, 0, "-", "test_dolly_pattern"], [273, 9, 0, "-", "test_dynamic_quantization"], [274, 9, 0, "-", "test_electra"], [275, 9, 0, "-", "test_embedding"], [276, 9, 0, "-", "test_embeddingbag"], [277, 9, 0, "-", "test_execution_options"], [278, 9, 0, "-", "test_fwk"], [279, 9, 0, "-", "test_gather"], [280, 9, 0, "-", "test_gelu"], [281, 9, 0, "-", "test_gpt_int8"], [282, 9, 0, "-", "test_graph_dispatch"], [283, 9, 0, "-", "test_graph_optimizer"], [284, 9, 0, "-", "test_insert_input_output_data"], [285, 9, 0, "-", "test_is_supported_onnx_graph"], [286, 9, 0, "-", "test_last_layer_shape"], [287, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [288, 9, 0, "-", "test_layer_norm_with_transpose"], [289, 9, 0, "-", "test_layernorm"], [290, 9, 0, "-", "test_linear"], [291, 9, 0, "-", "test_linear_int8"], [292, 9, 0, "-", "test_llama_pattern"], [293, 9, 0, "-", "test_main"], [294, 9, 0, "-", "test_matmul"], [295, 9, 0, "-", "test_matmul_int8"], [296, 9, 0, "-", "test_matmul_with_bias_relu"], [297, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [298, 9, 0, "-", "test_matmul_with_bias_tanh"], [299, 9, 0, "-", "test_merged_embeddingbag"], [300, 9, 0, "-", "test_model"], [301, 9, 0, "-", "test_neox_rotary_pos_emb"], [302, 9, 0, "-", "test_onnx_utils"], [303, 9, 0, "-", "test_operator_adaptor"], [304, 9, 0, "-", "test_ops"], [305, 9, 0, "-", "test_padding_seq"], [306, 9, 0, "-", "test_padding_sequence"], [307, 9, 0, "-", "test_pattern_dispatch"], [308, 9, 0, "-", "test_permute"], [309, 9, 0, "-", "test_position_embeddings"], [310, 9, 0, "-", "test_pow"], [311, 9, 0, "-", "test_primitive_cache_acc"], [312, 9, 0, "-", "test_primitive_cache_throughput"], [313, 9, 0, "-", "test_qkv_merge"], [314, 9, 0, "-", "test_qkv_reshape"], [315, 9, 0, "-", "test_quant_onnx_execute"], [316, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [317, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [318, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [319, 9, 0, "-", "test_size"], [320, 9, 0, "-", "test_slice"], [321, 9, 0, "-", "test_softmax"], [322, 9, 0, "-", "test_start_end_logits"], [323, 9, 0, "-", "test_static_compressed_buffer"], [324, 9, 0, "-", "test_tanh"], [325, 9, 0, "-", "test_text_encoder"], [326, 9, 0, "-", "test_text_encoder_bf16"], [327, 9, 0, "-", "test_tf_utils"], [328, 9, 0, "-", "test_token_type_embeddings"], [329, 9, 0, "-", "test_transpose"], [330, 9, 0, "-", "test_transpose_batch_matmul"], [331, 9, 0, "-", "test_unet"], [332, 9, 0, "-", "test_unet_bf16"], [333, 9, 0, "-", "test_unsqueeze"], [334, 9, 0, "-", "test_vae_decoder"], [335, 9, 0, "-", "test_vae_decoder_bf16"], [336, 9, 0, "-", "test_weight_sharing_acc"], [337, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [338, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [339, 9, 0, "-", "test_weight_sharing_throughput"]], "convert_falcon": [[1, 10, 1, "", "bytes_to_unicode"]], "convert_gptneox": [[2, 10, 1, "", "bytes_to_unicode"]], "convert_llama": [[3, 11, 1, "", "LazyUnpickler"], [3, 11, 1, "", "NEFileType"], [3, 10, 1, "", "bounded_parallel_map"], [3, 10, 1, "", "find_multifile_paths"], [3, 10, 1, "", "handle_quantization"], [3, 10, 1, "", "load_some_model"], [3, 10, 1, "", "nth_multifile_path"]], "convert_llama.LazyUnpickler": [[3, 12, 1, "", "find_class"]], "convert_mpt": [[4, 10, 1, "", "bytes_to_unicode"]], "intel_extension_for_transformers": [[5, 9, 0, "-", "backends"], [210, 9, 0, "-", "evaluation"], [226, 9, 0, "-", "optimization"], [254, 9, 0, "-", "preprocessing"]], "intel_extension_for_transformers.backends": [[205, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[16, 9, 0, "-", "compile"], [205, 10, 1, "", "neural_engine_bin"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[6, 9, 0, "-", "compile"], [7, 9, 0, "-", "dynamic_quantize"], [9, 9, 0, "-", "extractors"], [14, 9, 0, "-", "graph"], [15, 9, 0, "-", "graph_utils"], [17, 9, 0, "-", "loaders"], [19, 9, 0, "-", "logger"], [20, 9, 0, "-", "onnx_utils"], [42, 9, 0, "-", "ops"], [88, 9, 0, "-", "optimizer"], [112, 9, 0, "-", "sub_graph"], [203, 9, 0, "-", "tf_utils"], [204, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[6, 10, 1, "", "compile"], [6, 10, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[8, 9, 0, "-", "extractor"], [10, 9, 0, "-", "onnx_extractor"], [11, 9, 0, "-", "tf_extractor"], [12, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[8, 11, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[10, 11, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[11, 11, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[12, 11, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[13, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[13, 11, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[13, 12, 1, "", "add_config_item"], [13, 12, 1, "", "change_node_input_tensors"], [13, 12, 1, "", "change_node_output_tensors"], [13, 12, 1, "", "dump_tensor"], [13, 12, 1, "", "engine_init"], [13, 12, 1, "", "get_next_node_names"], [13, 12, 1, "", "get_node_by_name"], [13, 12, 1, "", "get_node_id"], [13, 12, 1, "", "get_pre_node_names"], [13, 12, 1, "", "get_sparse_nodes_name"], [13, 12, 1, "", "get_tensor_idx"], [13, 12, 1, "", "graph_dispatch"], [13, 12, 1, "", "graph_init"], [13, 12, 1, "", "inference"], [13, 12, 1, "", "inquire_config_item"], [13, 12, 1, "", "insert_nodes"], [13, 12, 1, "", "modify_node_connections"], [13, 12, 1, "", "remove_nodes"], [13, 12, 1, "", "rename_node"], [13, 12, 1, "", "save"], [13, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[15, 11, 1, "", "LazyImport"], [15, 10, 1, "", "autocast_init"], [15, 10, 1, "", "construct_node"], [15, 10, 1, "", "del_environ_var"], [15, 10, 1, "", "del_environ_vars"], [15, 10, 1, "", "environ_info_init"], [15, 10, 1, "", "get_autocast_info"], [15, 10, 1, "", "get_data_dtype"], [15, 10, 1, "", "get_environ_info"], [15, 10, 1, "", "get_model_fwk_name"], [15, 10, 1, "", "get_quant_info"], [15, 10, 1, "", "insert_environ_info"], [15, 10, 1, "", "insert_pattern"], [15, 10, 1, "", "insert_quant_info"], [15, 10, 1, "", "list2str"], [15, 10, 1, "", "names_from_input"], [15, 10, 1, "", "pattern_mapping"], [15, 10, 1, "", "pattern_mapping_conf_validation"], [15, 10, 1, "", "quant_info_init"], [15, 10, 1, "", "remove_environ_info_item"], [15, 10, 1, "", "remove_environ_info_items"], [15, 10, 1, "", "search_pattern"], [15, 10, 1, "", "search_straight_pattern"], [15, 10, 1, "", "set_autocast"], [15, 10, 1, "", "set_environ_var"], [15, 10, 1, "", "set_environ_vars"], [15, 10, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[18, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[18, 11, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[19, 11, 1, "", "Logger"], [19, 10, 1, "", "debug"], [19, 10, 1, "", "error"], [19, 10, 1, "", "fatal"], [19, 10, 1, "", "info"], [19, 10, 1, "", "log"], [19, 10, 1, "", "warn"], [19, 10, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[19, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[20, 10, 1, "", "bias_to_int32"], [20, 10, 1, "", "change_num_name"], [20, 10, 1, "", "get_children"], [20, 10, 1, "", "get_initializer_children_names"], [20, 10, 1, "", "get_node_children_names"], [20, 10, 1, "", "graph_node_names_details"], [20, 10, 1, "", "is_supported_onnx_graph"], [20, 10, 1, "", "is_supported_onnx_node"], [20, 10, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[21, 9, 0, "-", "all"], [22, 9, 0, "-", "assert"], [23, 9, 0, "-", "baddbmm"], [24, 9, 0, "-", "batch_matmul"], [25, 9, 0, "-", "batch_matmul_v2"], [26, 9, 0, "-", "bias_add"], [27, 9, 0, "-", "binary_op"], [28, 9, 0, "-", "cast"], [29, 9, 0, "-", "concat"], [30, 9, 0, "-", "conv"], [31, 9, 0, "-", "cos"], [32, 9, 0, "-", "empty_ops"], [33, 9, 0, "-", "expand_dims"], [34, 9, 0, "-", "fused_batch_matmul_v2"], [35, 9, 0, "-", "fused_batch_norm_v3"], [36, 9, 0, "-", "fused_gemm"], [37, 9, 0, "-", "fused_matmul"], [38, 9, 0, "-", "gather"], [39, 9, 0, "-", "gather_elements"], [40, 9, 0, "-", "gelu"], [41, 9, 0, "-", "gemm"], [43, 9, 0, "-", "iterator_get_next"], [44, 9, 0, "-", "iterator_v2"], [45, 9, 0, "-", "layer_normalization"], [46, 9, 0, "-", "log_softmax"], [47, 9, 0, "-", "map_and_batch_dataset"], [48, 9, 0, "-", "matmul"], [49, 9, 0, "-", "mean"], [50, 9, 0, "-", "mkl_layer_norm"], [51, 9, 0, "-", "model_dataset"], [52, 9, 0, "-", "one_hot"], [53, 9, 0, "-", "onnx_input"], [54, 9, 0, "-", "op"], [55, 9, 0, "-", "optimize_dataset"], [56, 9, 0, "-", "pack"], [57, 9, 0, "-", "padding_sequence"], [58, 9, 0, "-", "placeholder"], [59, 9, 0, "-", "pos_embed"], [60, 9, 0, "-", "pow"], [61, 9, 0, "-", "quantize_linear"], [62, 9, 0, "-", "quantize_v2"], [63, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [64, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [65, 9, 0, "-", "reduce_mean"], [66, 9, 0, "-", "reduce_sum"], [67, 9, 0, "-", "reorder"], [68, 9, 0, "-", "reshape"], [69, 9, 0, "-", "resize"], [70, 9, 0, "-", "rsub"], [71, 9, 0, "-", "scatter_elements"], [72, 9, 0, "-", "shape"], [73, 9, 0, "-", "sin"], [74, 9, 0, "-", "size"], [75, 9, 0, "-", "slice"], [76, 9, 0, "-", "slice_position_ids"], [77, 9, 0, "-", "softmax"], [78, 9, 0, "-", "split"], [79, 9, 0, "-", "squeeze"], [80, 9, 0, "-", "strided_slice"], [81, 9, 0, "-", "tensor"], [82, 9, 0, "-", "top_k"], [83, 9, 0, "-", "transpose"], [84, 9, 0, "-", "unpack"], [85, 9, 0, "-", "unsqueeze"], [86, 9, 0, "-", "view"], [87, 9, 0, "-", "where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[21, 11, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[21, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[22, 11, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[23, 11, 1, "", "Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[24, 11, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[25, 11, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[26, 11, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[26, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[27, 11, 1, "", "BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[28, 11, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[28, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[29, 11, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[30, 11, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[31, 11, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[32, 11, 1, "", "Add"], [32, 11, 1, "", "AddV2"], [32, 11, 1, "", "Arange"], [32, 11, 1, "", "BinaryAdd"], [32, 11, 1, "", "Constant"], [32, 11, 1, "", "ConstantOfShape"], [32, 11, 1, "", "Convolution"], [32, 11, 1, "", "CumSum"], [32, 11, 1, "", "Dequantize"], [32, 11, 1, "", "DequantizeLinear"], [32, 11, 1, "", "Einsum"], [32, 11, 1, "", "EmbeddingBag"], [32, 11, 1, "", "Erf"], [32, 11, 1, "", "Expand"], [32, 11, 1, "", "ExpandIndices"], [32, 11, 1, "", "Fill"], [32, 11, 1, "", "FlatMapDataset"], [32, 11, 1, "", "Flatten"], [32, 11, 1, "", "Floor_divide"], [32, 11, 1, "", "Identity"], [32, 11, 1, "", "InnerProduct"], [32, 11, 1, "", "Input"], [32, 11, 1, "", "LatRange"], [32, 11, 1, "", "ListConstruct"], [32, 11, 1, "", "ListUnpack"], [32, 11, 1, "", "Loop"], [32, 11, 1, "", "MakeIterator"], [32, 11, 1, "", "Masked_fill"], [32, 11, 1, "", "MatMulWithBias"], [32, 11, 1, "", "MatMulWithBiasAdd"], [32, 11, 1, "", "MatMulWithBiasGelu"], [32, 11, 1, "", "MatMulWithBiasRelu"], [32, 11, 1, "", "MatMulWithBiasSigmoid"], [32, 11, 1, "", "MatMulWithBiasTanh"], [32, 11, 1, "", "Matmul"], [32, 11, 1, "", "Max"], [32, 11, 1, "", "MergedEmbeddingbag"], [32, 11, 1, "", "MultiHeadAttenion"], [32, 11, 1, "", "Onehot"], [32, 11, 1, "", "OpAny"], [32, 11, 1, "", "Output"], [32, 11, 1, "", "PositionIds"], [32, 11, 1, "", "QLinearAdd"], [32, 11, 1, "", "QLinearMatMul"], [32, 11, 1, "", "QLinearMul"], [32, 11, 1, "", "Range"], [32, 11, 1, "", "RealDiv"], [32, 11, 1, "", "Reciprocal"], [32, 11, 1, "", "Relu"], [32, 11, 1, "", "Repeat"], [32, 11, 1, "", "Rsqrt"], [32, 11, 1, "", "SequenceLength"], [32, 11, 1, "", "Sigmoid"], [32, 11, 1, "", "Silu"], [32, 11, 1, "", "Sqrt"], [32, 11, 1, "", "Square"], [32, 11, 1, "", "SquaredDifference"], [32, 11, 1, "", "Stack"], [32, 11, 1, "", "StopGradient"], [32, 11, 1, "", "Tanh"], [32, 11, 1, "", "TensorSliceDataset"], [32, 11, 1, "", "Tile"], [32, 11, 1, "", "TokenTypeIds"], [32, 11, 1, "", "TransposeBatchMatMul"], [32, 11, 1, "", "Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[33, 11, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[35, 11, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[36, 11, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[36, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[37, 11, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[38, 11, 1, "", "Gather"], [38, 11, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[39, 11, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[40, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[41, 11, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[43, 11, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[44, 11, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[44, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[45, 11, 1, "", "LayerNorm"], [45, 11, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[46, 11, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[47, 11, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[47, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[48, 11, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[49, 11, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[51, 11, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[52, 11, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[53, 11, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[53, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[54, 11, 1, "", "Operator"], [54, 10, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[54, 12, 1, "", "construct"], [54, 12, 1, "", "extract"], [54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[55, 11, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[56, 11, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[57, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[57, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[58, 11, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[59, 11, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[60, 11, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[61, 11, 1, "", "Quantize"], [61, 11, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[62, 11, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[64, 11, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[65, 11, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[66, 11, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[67, 11, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[68, 11, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[68, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[69, 11, 1, "", "Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[70, 11, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[71, 11, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[72, 11, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[73, 11, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[73, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[74, 11, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[75, 11, 1, "", "Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[76, 11, 1, "", "SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[77, 11, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[78, 11, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[79, 11, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[79, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[80, 11, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[80, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[81, 11, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[82, 11, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[82, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[83, 11, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[83, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[84, 11, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[84, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[85, 11, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[85, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[86, 11, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[86, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[87, 11, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where": [[87, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[88, 11, 1, "", "Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer": [[88, 12, 1, "", "optimize"], [88, 12, 1, "", "weight_optimization"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[89, 9, 0, "-", "InnerproductReshapeFusion"], [90, 9, 0, "-", "add_cls_token"], [91, 9, 0, "-", "add_embeddings"], [92, 9, 0, "-", "arangewithreciprocal"], [93, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [94, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [95, 9, 0, "-", "attentionBlock_QKVPreReshape"], [96, 9, 0, "-", "attentionBlock_QKVReshape"], [97, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [98, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [99, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [100, 9, 0, "-", "attention_reshape"], [101, 9, 0, "-", "cast_to"], [102, 9, 0, "-", "collect_quant_info"], [103, 9, 0, "-", "conv_reshape"], [104, 9, 0, "-", "decoder_attn_reshape"], [105, 9, 0, "-", "einsumwitharange"], [106, 9, 0, "-", "embeddingbag"], [107, 9, 0, "-", "embeddings_to_2d_before_inner_product"], [108, 9, 0, "-", "gelu"], [109, 9, 0, "-", "generate_sequence"], [110, 9, 0, "-", "groupNorm"], [111, 9, 0, "-", "groupNormSwish"], [113, 9, 0, "-", "innerproductwithbiasgelu"], [114, 9, 0, "-", "innerproductwithslice"], [115, 9, 0, "-", "innerproductwithswish"], [116, 9, 0, "-", "input_data"], [117, 9, 0, "-", "input_file"], [118, 9, 0, "-", "insert_bf16_node"], [119, 9, 0, "-", "insert_quant_node"], [120, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [121, 9, 0, "-", "interact_features"], [122, 9, 0, "-", "last_layer_shape"], [123, 9, 0, "-", "layer_norm"], [124, 9, 0, "-", "layer_norm_with_reduce_mean"], [125, 9, 0, "-", "layer_norm_with_transpose"], [126, 9, 0, "-", "llama_embeding"], [127, 9, 0, "-", "llama_matmulwithtranspose"], [128, 9, 0, "-", "llama_postprocess"], [129, 9, 0, "-", "llama_rotary_pos_emb"], [130, 9, 0, "-", "lower_all_tuples"], [131, 9, 0, "-", "matmul_with_bias"], [132, 9, 0, "-", "matmul_with_bias_add"], [133, 9, 0, "-", "matmul_with_bias_gelu"], [134, 9, 0, "-", "matmul_with_bias_relu"], [135, 9, 0, "-", "matmul_with_bias_sigmoid"], [136, 9, 0, "-", "matmul_with_bias_tanh"], [137, 9, 0, "-", "matmul_with_bias_unsqueeze"], [138, 9, 0, "-", "matmul_with_transpose"], [139, 9, 0, "-", "matmul_with_transpose_scale_add"], [140, 9, 0, "-", "merged_embeddingbag"], [141, 9, 0, "-", "multi_head_attention"], [142, 9, 0, "-", "neox_reorder_change"], [143, 9, 0, "-", "neox_rotary_pos_emb"], [144, 9, 0, "-", "operator_adaptor"], [145, 9, 0, "-", "output_data"], [146, 9, 0, "-", "padding_sequence"], [147, 9, 0, "-", "pattern"], [148, 9, 0, "-", "position_embeddings"], [149, 9, 0, "-", "position_embeddings_v1"], [150, 9, 0, "-", "qkv_merge"], [151, 9, 0, "-", "qkv_reshape"], [152, 9, 0, "-", "quant_gather_to_bf16"], [153, 9, 0, "-", "quantize_fusion"], [154, 9, 0, "-", "quantized_graph_dtype_refactor"], [155, 9, 0, "-", "remove_constant_op"], [156, 9, 0, "-", "remove_last_view"], [157, 9, 0, "-", "remove_range"], [158, 9, 0, "-", "remove_unused_operator"], [159, 9, 0, "-", "remove_zeros"], [160, 9, 0, "-", "removeslice"], [161, 9, 0, "-", "reshape_after_restore_hidden_states"], [162, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [163, 9, 0, "-", "reshape_before_restore_hidden_states"], [164, 9, 0, "-", "reshape_fusion"], [165, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [166, 9, 0, "-", "rms_norm"], [167, 9, 0, "-", "rotary_pos_emb"], [168, 9, 0, "-", "slicemask"], [169, 9, 0, "-", "stableDiffusion_ExplicitNHWCTranspose"], [170, 9, 0, "-", "stableDiffusion_MHA"], [171, 9, 0, "-", "stableDiffusion_MHAReshape"], [172, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [173, 9, 0, "-", "stableDiffusion_bf16Convert"], [174, 9, 0, "-", "start_end_logits"], [175, 9, 0, "-", "subgraph_matcher"], [176, 9, 0, "-", "textEncdoer_word_embedding"], [177, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [178, 9, 0, "-", "textEncoder_AttentionReshape"], [179, 9, 0, "-", "textEncoder_KVReshape"], [180, 9, 0, "-", "textEncoder_MulReshape"], [181, 9, 0, "-", "textEncoder_QReshape"], [182, 9, 0, "-", "textEncoder_SoftmaxReshape"], [183, 9, 0, "-", "textEncoder_causal_attention_mask"], [184, 9, 0, "-", "token_type_embeddings"], [185, 9, 0, "-", "token_type_embeddings_v1"], [186, 9, 0, "-", "torch_embedding"], [187, 9, 0, "-", "torch_ip_insert_bias"], [188, 9, 0, "-", "torch_unpack_baddbmm"], [189, 9, 0, "-", "torchinsertbf16node"], [190, 9, 0, "-", "torchpaddingsquence"], [191, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [192, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [193, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [194, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [195, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [196, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [197, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [198, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [199, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [200, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [201, 9, 0, "-", "transpose_batch_matmul"], [202, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[89, 11, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[90, 11, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[91, 11, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[92, 11, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[93, 11, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[94, 11, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[95, 11, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[96, 11, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[97, 11, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[98, 11, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[99, 11, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[100, 11, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[101, 11, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[102, 11, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[103, 11, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[104, 11, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[105, 11, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[106, 11, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[107, 11, 1, "", "EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[108, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[109, 11, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[110, 11, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[111, 11, 1, "", "GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[113, 11, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[114, 11, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[115, 11, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[116, 11, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[117, 11, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[118, 11, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[119, 11, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[120, 11, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[121, 11, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[122, 11, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[123, 11, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[124, 11, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[125, 11, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[126, 11, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[127, 11, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[128, 11, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[129, 11, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[130, 11, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[131, 11, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[132, 11, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[133, 11, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[134, 11, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[135, 11, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[136, 11, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[137, 11, 1, "", "MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[138, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[139, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[140, 11, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[141, 11, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[142, 11, 1, "", "NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[143, 11, 1, "", "NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[144, 11, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[145, 11, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[146, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[147, 11, 1, "", "Pattern"], [147, 10, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[148, 11, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[149, 11, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[150, 11, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[151, 11, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[152, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[153, 11, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[154, 11, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[155, 11, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[156, 11, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[157, 11, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[158, 11, 1, "", "RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[159, 11, 1, "", "RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[160, 11, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[161, 11, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[162, 11, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[163, 11, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[164, 11, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[165, 11, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[166, 11, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[167, 11, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[168, 11, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[169, 11, 1, "", "ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[170, 11, 1, "", "StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[171, 11, 1, "", "StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[172, 11, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[173, 11, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[174, 11, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[175, 11, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[176, 11, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[177, 11, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[178, 11, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[179, 11, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[180, 11, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[181, 11, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[182, 11, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[183, 11, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[184, 11, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[185, 11, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[186, 11, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[187, 11, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[188, 11, 1, "", "TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[189, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[190, 11, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[191, 11, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[192, 11, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[193, 11, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[194, 11, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[195, 11, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[196, 11, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[197, 11, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[198, 11, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[199, 11, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[200, 11, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[201, 11, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[202, 11, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[203, 13, 1, "", "TF_DTYPE_ID"], [203, 10, 1, "", "create_tf_node"], [203, 10, 1, "", "get_tensor_dest_op"], [203, 10, 1, "", "graph_node_names_details"], [203, 10, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[204, 10, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[209, 9, 0, "-", "hf_eval"], [212, 9, 0, "-", "lm_code_eval"], [214, 9, 0, "-", "lm_eval"]], "intel_extension_for_transformers.evaluation.hf_eval": [[206, 9, 0, "-", "evaluator"], [208, 9, 0, "-", "hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[207, 9, 0, "-", "cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[207, 11, 1, "", "DataCollatorForSupervisedDataset"], [207, 10, 1, "", "preprocess"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[211, 9, 0, "-", "evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[211, 10, 1, "", "evaluate"], [211, 10, 1, "", "pattern_match"]], "intel_extension_for_transformers.evaluation.lm_eval": [[213, 9, 0, "-", "evaluator"], [216, 9, 0, "-", "models"], [217, 9, 0, "-", "tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[213, 10, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[215, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[215, 11, 1, "", "AutoCausalLM"], [215, 11, 1, "", "AutoSeq2SeqLM"], [215, 11, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[218, 9, 0, "-", "lambada"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[218, 11, 1, "", "LambadaOpenAI"], [218, 11, 1, "", "LambadaStandard"]], "intel_extension_for_transformers.optimization": [[220, 9, 0, "-", "benchmark"], [221, 9, 0, "-", "config"], [222, 9, 0, "-", "distillation"], [225, 9, 0, "-", "dynamic"], [228, 9, 0, "-", "mixture"], [229, 9, 0, "-", "model"], [230, 9, 0, "-", "modeling"], [234, 9, 0, "-", "nas"], [236, 9, 0, "-", "optimizer"], [237, 9, 0, "-", "optimizer_tf"], [238, 9, 0, "-", "pipeline"], [239, 9, 0, "-", "pruner"], [241, 9, 0, "-", "pruning"], [242, 9, 0, "-", "quantization"], [243, 9, 0, "-", "trainer"], [245, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[220, 10, 1, "", "benchmark"], [220, 10, 1, "", "get_example_inputs"], [220, 10, 1, "", "preprocess_model"], [220, 10, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[221, 11, 1, "", "AutoDistillationConfig"], [221, 11, 1, "", "BenchmarkConfig"], [221, 11, 1, "", "DistillationConfig"], [221, 11, 1, "", "DynamicLengthConfig"], [221, 11, 1, "", "FlashDistillationConfig"], [221, 11, 1, "", "NASConfig"], [221, 11, 1, "", "Provider"], [221, 11, 1, "", "PrunerV2"], [221, 11, 1, "", "PruningConfig"], [221, 11, 1, "", "QuantizationConfig"], [221, 11, 1, "", "TFDistillationConfig"], [221, 11, 1, "", "WeightPruningConfig"], [221, 10, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[221, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[222, 11, 1, "", "Criterion"], [222, 11, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[223, 9, 0, "-", "drop_and_restore_utils"], [224, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[223, 10, 1, "", "sample_layer_configuration"], [223, 10, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[224, 11, 1, "", "Evolution"], [224, 10, 1, "", "approx_ratio"], [224, 10, 1, "", "inverse"], [224, 10, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[224, 12, 1, "", "add_gene"], [224, 12, 1, "", "convex_hull"], [224, 12, 1, "", "crossover"], [224, 12, 1, "", "get_store"], [224, 12, 1, "", "load_store"], [224, 12, 1, "", "mutate"], [224, 12, 1, "", "pareto_frontier"], [224, 12, 1, "", "save_population"], [224, 12, 1, "", "save_store"], [224, 12, 1, "", "set_lower_constraint"], [224, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[227, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[227, 11, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[227, 12, 1, "", "create_distillers"], [227, 12, 1, "", "estimate"], [227, 12, 1, "", "init_by_cfg"], [227, 12, 1, "", "load_search_results"], [227, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[229, 11, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[229, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.modeling": [[231, 9, 0, "-", "modeling_base_seq2seq"], [232, 9, 0, "-", "modeling_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[232, 11, 1, "", "INCDecoder"], [232, 11, 1, "", "INCEncoder"]], "intel_extension_for_transformers.optimization.nas": [[233, 9, 0, "-", "basic_nas"], [235, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[233, 11, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[233, 12, 1, "", "estimate"], [233, 12, 1, "", "execute"], [233, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[235, 11, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[236, 11, 1, "", "NoTrainerOptimizer"], [236, 11, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[236, 12, 1, "", "distill"], [236, 12, 1, "", "init_distiller"], [236, 12, 1, "", "init_pruner"], [236, 12, 1, "", "init_quantizer"], [236, 12, 1, "", "prune"], [236, 12, 1, "", "quantize"], [236, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[236, 12, 1, "", "fit"], [236, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[237, 11, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[237, 12, 1, "", "autodistill"], [237, 12, 1, "", "build_train_func"], [237, 12, 1, "", "builtin_eval_func"], [237, 12, 1, "", "distill"], [237, 12, 1, "", "init_distiller"], [237, 12, 1, "", "init_pruner"], [237, 12, 1, "", "init_quantizer"], [237, 12, 1, "", "model_builder_builtin"], [237, 12, 1, "", "prune"], [237, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[238, 10, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruner": [[240, 9, 0, "-", "pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[240, 11, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning.Pruning": [[240, 14, 1, "", "config_file_path"], [240, 12, 1, "", "get_sparsity_ratio"], [240, 14, 1, "", "model"], [240, 12, 1, "", "on_after_eval"], [240, 12, 1, "", "on_after_optimizer_step"], [240, 12, 1, "", "on_before_eval"], [240, 12, 1, "", "on_before_optimizer_step"], [240, 12, 1, "", "on_epoch_begin"], [240, 12, 1, "", "on_epoch_end"], [240, 12, 1, "", "on_step_begin"], [240, 12, 1, "", "on_step_end"], [240, 12, 1, "", "on_train_begin"], [240, 12, 1, "", "on_train_end"], [240, 14, 1, "", "pruner_info"], [240, 14, 1, "", "pruners"], [240, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pruning": [[241, 11, 1, "", "PrunerConfig"], [241, 11, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.quantization": [[242, 11, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[243, 11, 1, "", "BaseTrainer"], [243, 11, 1, "", "NLPSeq2SeqTrainer"], [243, 11, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[243, 12, 1, "", "auto_distil_evaluation_loop"], [243, 12, 1, "", "autodistillation"], [243, 12, 1, "", "benchmark"], [243, 12, 1, "", "builtin_eval_func"], [243, 12, 1, "", "builtin_train_func"], [243, 12, 1, "", "compute_loss"], [243, 12, 1, "", "create_optimizer_builtin"], [243, 12, 1, "", "distill"], [243, 12, 1, "", "export_to_bf16_onnx"], [243, 12, 1, "", "export_to_fp32_onnx"], [243, 12, 1, "", "export_to_int8_onnx"], [243, 12, 1, "", "export_to_jit"], [243, 12, 1, "", "export_to_onnx"], [243, 12, 1, "", "init_distiller"], [243, 12, 1, "", "init_pruner"], [243, 12, 1, "", "init_quantizer"], [243, 12, 1, "", "model_builder_builtin"], [243, 12, 1, "", "nas"], [243, 12, 1, "", "orchestrate_optimizations"], [243, 12, 1, "", "prune"], [243, 12, 1, "", "quantize"], [243, 12, 1, "", "run_evolutionary_search"], [243, 12, 1, "", "set_dynamic_config"], [243, 12, 1, "", "train"], [243, 12, 1, "", "training_step"], [243, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[243, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[244, 9, 0, "-", "get_throughput"], [246, 9, 0, "-", "metrics"], [247, 9, 0, "-", "models"], [250, 9, 0, "-", "objectives"], [251, 9, 0, "-", "utility"], [252, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[246, 11, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[248, 9, 0, "-", "modeling_bert_dynamic"], [249, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[248, 11, 1, "", "BertAttention"], [248, 11, 1, "", "BertEmbeddings"], [248, 11, 1, "", "BertEncoder"], [248, 11, 1, "", "BertForMaskedLM"], [248, 11, 1, "", "BertForMultipleChoice"], [248, 11, 1, "", "BertForNextSentencePrediction"], [248, 11, 1, "", "BertForPreTraining"], [248, 11, 1, "", "BertForPreTrainingOutput"], [248, 11, 1, "", "BertForQuestionAnswering"], [248, 11, 1, "", "BertForSequenceClassification"], [248, 11, 1, "", "BertForTokenClassification"], [248, 11, 1, "", "BertIntermediate"], [248, 11, 1, "", "BertLMHeadModel"], [248, 11, 1, "", "BertLMPredictionHead"], [248, 11, 1, "", "BertLayer"], [248, 11, 1, "", "BertModel"], [248, 11, 1, "", "BertOnlyMLMHead"], [248, 11, 1, "", "BertOnlyNSPHead"], [248, 11, 1, "", "BertOutput"], [248, 11, 1, "", "BertPooler"], [248, 11, 1, "", "BertPreTrainedModel"], [248, 11, 1, "", "BertPreTrainingHeads"], [248, 11, 1, "", "BertPredictionHeadTransform"], [248, 11, 1, "", "BertSelfAttention"], [248, 11, 1, "", "BertSelfOutput"], [248, 10, 1, "", "expand_gather"], [248, 10, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[248, 12, 1, "", "forward"], [248, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[248, 12, 1, "", "forward"], [248, 12, 1, "", "get_output_embeddings"], [248, 12, 1, "", "prepare_inputs_for_generation"], [248, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[248, 12, 1, "", "forward"], [248, 12, 1, "", "get_output_embeddings"], [248, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[248, 12, 1, "", "forward"], [248, 12, 1, "", "get_output_embeddings"], [248, 12, 1, "", "prepare_inputs_for_generation"], [248, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[248, 12, 1, "", "feed_forward_chunk"], [248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[248, 12, 1, "", "forward"], [248, 12, 1, "", "get_input_embeddings"], [248, 12, 1, "", "set_input_embeddings"], [248, 12, 1, "", "set_length_config"], [248, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[248, 12, 1, "", "forward"], [248, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[248, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[249, 11, 1, "", "RobertaAttention"], [249, 11, 1, "", "RobertaClassificationHead"], [249, 11, 1, "", "RobertaEmbeddings"], [249, 11, 1, "", "RobertaEncoder"], [249, 11, 1, "", "RobertaForCausalLM"], [249, 11, 1, "", "RobertaForMaskedLM"], [249, 11, 1, "", "RobertaForMultipleChoice"], [249, 11, 1, "", "RobertaForQuestionAnswering"], [249, 11, 1, "", "RobertaForSequenceClassification"], [249, 11, 1, "", "RobertaForTokenClassification"], [249, 11, 1, "", "RobertaIntermediate"], [249, 11, 1, "", "RobertaLMHead"], [249, 11, 1, "", "RobertaLayer"], [249, 11, 1, "", "RobertaModel"], [249, 11, 1, "", "RobertaOutput"], [249, 11, 1, "", "RobertaPooler"], [249, 11, 1, "", "RobertaPreTrainedModel"], [249, 11, 1, "", "RobertaSelfAttention"], [249, 11, 1, "", "RobertaSelfOutput"], [249, 10, 1, "", "create_position_ids_from_input_ids"], [249, 10, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[249, 12, 1, "", "create_position_ids_from_inputs_embeds"], [249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "get_output_embeddings"], [249, 12, 1, "", "prepare_inputs_for_generation"], [249, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "get_output_embeddings"], [249, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[249, 12, 1, "", "feed_forward_chunk"], [249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "get_input_embeddings"], [249, 12, 1, "", "set_input_embeddings"], [249, 12, 1, "", "set_length_config"], [249, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[249, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[249, 12, 1, "", "forward"], [249, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[249, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[250, 11, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[250, 12, 1, "", "modelsize"], [250, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[251, 10, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[252, 11, 1, "", "TFDataloader"], [252, 10, 1, "", "distributed_init"], [252, 10, 1, "", "get_filepath"], [252, 10, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[253, 9, 0, "-", "data_augmentation"], [255, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[253, 11, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[253, 12, 1, "", "data_augment"], [253, 12, 1, "", "mit_data_augmentation"], [253, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[255, 11, 1, "", "AugmenterType"], [255, 10, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[257, 11, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[258, 11, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_add_zeros": [[259, 11, 1, "", "TestTorchOP"]], "test_add_zeros.TestTorchOP": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[260, 11, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[261, 11, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_baddbmm": [[262, 11, 1, "", "TestTorchOP"]], "test_baddbmm.TestTorchOP": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[263, 11, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_binary_op": [[264, 11, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_binaryop": [[265, 11, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_cast_to": [[266, 11, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_concat": [[267, 11, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[268, 11, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[269, 11, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[270, 11, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[271, 11, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_dolly_pattern": [[272, 11, 1, "", "TestTorchOP"]], "test_dolly_pattern.TestTorchOP": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[273, 11, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_electra": [[274, 11, 1, "", "TestElectra"]], "test_electra.TestElectra": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_embedding": [[275, 11, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[276, 11, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_execution_options": [[277, 11, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_fwk": [[278, 11, 1, "", "TestFWK"]], "test_fwk.TestFWK": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_gather": [[279, 11, 1, "", "TestTorchOP"]], "test_gather.TestTorchOP": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_gelu": [[280, 11, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[281, 11, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[282, 11, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_graph_optimizer": [[283, 11, 1, "", "TestExecutionOptions"]], "test_graph_optimizer.TestExecutionOptions": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[284, 11, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[285, 11, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"], [285, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[286, 11, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[287, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[288, 11, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_layernorm": [[289, 11, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_linear": [[290, 11, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[291, 11, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[292, 11, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_main": [[293, 11, 1, "", "TestMain"]], "test_main.TestMain": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_matmul": [[294, 11, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[295, 11, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[296, 11, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[297, 11, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[298, 11, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[299, 11, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_neox_rotary_pos_emb": [[301, 11, 1, "", "TestTorchOP"]], "test_neox_rotary_pos_emb.TestTorchOP": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[302, 11, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[303, 11, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[303, 12, 1, "", "setUpClass"], [303, 12, 1, "", "tearDownClass"]], "test_ops": [[304, 11, 1, "", "TestOps"]], "test_ops.TestOps": [[304, 12, 1, "", "setUpClass"], [304, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[305, 11, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[305, 12, 1, "", "setUpClass"], [305, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[306, 11, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[307, 11, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_permute": [[308, 11, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[309, 11, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]], "test_pow": [[310, 11, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[310, 12, 1, "", "setUpClass"], [310, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[311, 11, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[311, 12, 1, "", "setUpClass"], [311, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[312, 11, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[312, 12, 1, "", "setUpClass"], [312, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[313, 11, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[313, 12, 1, "", "setUpClass"], [313, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[314, 11, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[314, 12, 1, "", "setUpClass"], [314, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[315, 11, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[315, 12, 1, "", "setUpClass"], [315, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[316, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[316, 12, 1, "", "setUpClass"], [316, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[317, 11, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[317, 12, 1, "", "setUpClass"], [317, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[318, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[318, 12, 1, "", "setUpClass"], [318, 12, 1, "", "tearDownClass"]], "test_size": [[319, 11, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[319, 12, 1, "", "setUpClass"], [319, 12, 1, "", "tearDownClass"]], "test_slice": [[320, 11, 1, "", "TestTorchOP"]], "test_slice.TestTorchOP": [[320, 12, 1, "", "setUpClass"], [320, 12, 1, "", "tearDownClass"]], "test_softmax": [[321, 11, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[321, 12, 1, "", "setUpClass"], [321, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[322, 11, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[322, 12, 1, "", "setUpClass"], [322, 12, 1, "", "tearDownClass"]], "test_static_compressed_buffer": [[323, 11, 1, "", "TestSCBuffer"]], "test_static_compressed_buffer.TestSCBuffer": [[323, 12, 1, "", "setUpClass"], [323, 12, 1, "", "tearDownClass"]], "test_tanh": [[324, 11, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[324, 12, 1, "", "setUpClass"], [324, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[325, 11, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[325, 12, 1, "", "setUpClass"], [325, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[326, 11, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[326, 12, 1, "", "setUpClass"], [326, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[327, 11, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[327, 12, 1, "", "setUpClass"], [327, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[328, 11, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[328, 12, 1, "", "setUpClass"], [328, 12, 1, "", "tearDownClass"]], "test_transpose": [[329, 11, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[329, 12, 1, "", "setUpClass"], [329, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[330, 11, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[330, 12, 1, "", "setUpClass"], [330, 12, 1, "", "tearDownClass"]], "test_unet": [[331, 11, 1, "", "TestUnet"]], "test_unet.TestUnet": [[331, 12, 1, "", "setUpClass"], [331, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[332, 11, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[332, 12, 1, "", "setUpClass"], [332, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[333, 11, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[333, 12, 1, "", "setUpClass"], [333, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[334, 11, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[334, 12, 1, "", "setUpClass"], [334, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[335, 11, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[335, 12, 1, "", "setUpClass"], [335, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[336, 11, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[336, 12, 1, "", "setUpClass"], [336, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[337, 11, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[337, 12, 1, "", "setUpClass"], [337, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[338, 11, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[338, 12, 1, "", "setUpClass"], [338, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[339, 11, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[339, 12, 1, "", "setUpClass"], [339, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:function", "11": "py:class", "12": "py:method", "13": "py:data", "14": "py:attribute"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "function", "Python function"], "11": ["py", "class", "Python class"], "12": ["py", "method", "Python method"], "13": ["py", "data", "Python data"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"clang": 0, "format": [0, 384, 398, 408], "convert_falcon": 1, "modul": [1, 2, 3, 4, 6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 211, 213, 215, 218, 220, 221, 222, 223, 224, 227, 229, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339], "content": [1, 2, 3, 4, 6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 213, 215, 218, 220, 221, 222, 223, 224, 227, 229, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 246, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 391, 418, 423], "function": [1, 2, 3, 4, 6, 15, 19, 20, 42, 54, 112, 147, 203, 204, 205, 207, 211, 213, 220, 221, 223, 224, 238, 248, 249, 251, 252, 255], "convert_gptneox": 2, "convert_llama": 3, "class": [3, 8, 10, 11, 12, 13, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 215, 218, 221, 222, 224, 227, 229, 232, 233, 235, 236, 237, 240, 241, 242, 243, 246, 248, 249, 250, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 347, 348, 349, 359, 410], "convert_mpt": 4, "intel_extension_for_transform": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 378], "backend": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 375, 380, 412], "subpackag": [5, 16, 205, 226], "neural_engin": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "compil": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 344, 384, 390], "dynamic_quant": 7, "extractor": [8, 9, 10, 11, 12], "submodul": [9, 14, 16, 17, 42, 112, 217, 225, 226, 228, 234, 239, 245, 247, 254], "onnx_extractor": 10, "tf_extractor": 11, "torch_extractor": 12, "graph": [13, 14, 345, 380, 382, 383, 390], "graph_util": 15, "loader": [17, 18], "logger": 19, "onnx_util": 20, "op": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 379, 382], "all": 21, "assert": 22, "baddbmm": 23, "batch_matmul": 24, "batch_matmul_v2": 25, "bias_add": 26, "binary_op": 27, "cast": 28, "concat": 29, "conv": 30, "co": 31, "empty_op": 32, "expand_dim": 33, "fused_batch_matmul_v2": 34, "fused_batch_norm_v3": 35, "fused_gemm": 36, "fused_matmul": 37, "gather": 38, "gather_el": 39, "gelu": [40, 108], "gemm": [41, 397, 398, 400, 403], "packag": [42, 112, 205], "attribut": [42, 112, 203, 369, 379], "iterator_get_next": 43, "iterator_v2": 44, "layer_norm": [45, 123], "log_softmax": 46, "map_and_batch_dataset": 47, "matmul": [48, 399, 400, 401], "mean": [49, 395], "mkl_layer_norm": 50, "model_dataset": 51, "one_hot": 52, "onnx_input": 53, "optimize_dataset": 55, "pack": 56, "padding_sequ": [57, 146], "placehold": 58, "pos_emb": 59, "pow": 60, "quantize_linear": 61, "quantize_v2": 62, "quantized_fused_matmul_and_dequant": 63, "quantized_matmul_with_bias_and_dequant": 64, "reduce_mean": 65, "reduce_sum": 66, "reorder": [67, 397, 401, 402, 403], "reshap": 68, "resiz": 69, "rsub": 70, "scatter_el": 71, "shape": 72, "sin": 73, "size": [74, 391, 399], "slice": 75, "slice_position_id": 76, "softmax": [77, 407], "split": 78, "squeez": 79, "strided_slic": 80, "tensor": 81, "top_k": 82, "transpos": [83, 401, 402], "unpack": 84, "unsqueez": 85, "view": 86, "where": 87, "optim": [88, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 354, 355], "sub_graph": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "innerproductreshapefus": 89, "add_cls_token": 90, "add_embed": 91, "arangewithreciproc": 92, "attentionblock_attentionmaskaddreshap": 93, "attentionblock_constantofshapewithmul": 94, "attentionblock_qkvprereshap": 95, "attentionblock_qkvreshap": 96, "attentionblock_weightreshapeto4d": 97, "attention_mask_length_adaptive_keep_indic": 98, "attention_output_layer_norm_length_adaptive_keep_indic": 99, "attention_reshap": 100, "cast_to": 101, "collect_quant_info": 102, "conv_reshap": 103, "decoder_attn_reshap": 104, "einsumwitharang": 105, "embeddingbag": 106, "embeddings_to_2d_before_inner_product": 107, "generate_sequ": 109, "groupnorm": 110, "groupnormswish": 111, "innerproductwithbiasgelu": 113, "innerproductwithslic": 114, "innerproductwithswish": 115, "input_data": 116, "input_fil": 117, "insert_bf16_nod": 118, "insert_quant_nod": 119, "int8_bf16_mixed_precision_check": 120, "interact_featur": 121, "last_layer_shap": 122, "layer_norm_with_reduce_mean": 124, "layer_norm_with_transpos": 125, "llama_embed": 126, "llama_matmulwithtranspos": 127, "llama_postprocess": 128, "llama_rotary_pos_emb": 129, "lower_all_tupl": 130, "matmul_with_bia": 131, "matmul_with_bias_add": 132, "matmul_with_bias_gelu": 133, "matmul_with_bias_relu": 134, "matmul_with_bias_sigmoid": 135, "matmul_with_bias_tanh": 136, "matmul_with_bias_unsqueez": 137, "matmul_with_transpos": 138, "matmul_with_transpose_scale_add": 139, "merged_embeddingbag": 140, "multi_head_attent": 141, "neox_reorder_chang": 142, "neox_rotary_pos_emb": 143, "operator_adaptor": 144, "output_data": 145, "pattern": [147, 379, 382, 383, 387, 397, 398, 403], "position_embed": 148, "position_embeddings_v1": 149, "qkv_merg": 150, "qkv_reshap": 151, "quant_gather_to_bf16": 152, "quantize_fus": 153, "quantized_graph_dtype_refactor": 154, "remove_constant_op": 155, "remove_last_view": 156, "remove_rang": 157, "remove_unused_oper": 158, "remove_zero": 159, "removeslic": 160, "reshape_after_restore_hidden_st": 161, "reshape_before_and_after_attention_out_layer_norm_gather_el": 162, "reshape_before_restore_hidden_st": 163, "reshape_fus": 164, "restore_hidden_states_in_length_adaptive_update_indic": 165, "rms_norm": 166, "rotary_pos_emb": 167, "slicemask": 168, "stablediffusion_explicitnhwctranspos": 169, "stablediffusion_mha": 170, "stablediffusion_mhareshap": 171, "stablediffusion_reshapefus": 172, "stablediffusion_bf16convert": 173, "start_end_logit": 174, "subgraph_match": 175, "textencdoer_word_embed": 176, "textencoder_attentionmaskaddreshap": 177, "textencoder_attentionreshap": 178, "textencoder_kvreshap": 179, "textencoder_mulreshap": 180, "textencoder_qreshap": 181, "textencoder_softmaxreshap": 182, "textencoder_causal_attention_mask": 183, "token_type_embed": 184, "token_type_embeddings_v1": 185, "torch_embed": 186, "torch_ip_insert_bia": 187, "torch_unpack_baddbmm": 188, "torchinsertbf16nod": 189, "torchpaddingsqu": 190, "transformer2dmodel_attentionmaskaddreshap": 191, "transformer2dmodel_constantofshapewithmul": 192, "transformer2dmodel_ffnslic": 193, "transformer2dmodel_ffnslice_1": 194, "transformer2dmodel_qkvprereshap": 195, "transformer2dmodel_qkvreshap": 196, "transformer2dmodel_qkvreshape4d": 197, "transformer2dmodel_encoderhiddenstatesreshap": 198, "transformer2dmodel_getsamplebatch": 199, "transformer2dmodel_sampleslic": 200, "transpose_batch_matmul": 201, "word_embed": 202, "tf_util": 203, "torch_util": 204, "evalu": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "hf_eval": [206, 207, 208, 209], "hf_dataset": [207, 208], "cnn_dailymail": 207, "lm_code_ev": [211, 212], "lm_eval": [213, 214, 215, 216, 217, 218], "model": [215, 216, 229, 230, 231, 232, 247, 248, 249, 341, 353, 360, 372, 375, 380, 381, 384, 385, 390, 406, 412], "huggingfac": 215, "task": [217, 218], "lambada": 218, "benchmark": [220, 360, 385, 407], "config": [221, 352, 359, 379, 382], "distil": [222, 359, 373, 374, 376], "dynam": [223, 224, 225, 399, 414], "drop_and_restore_util": 223, "evolut": 224, "mixtur": [227, 228], "auto_distil": 227, "modeling_base_seq2seq": 231, "modeling_seq2seq": 232, "na": [233, 234, 235, 374], "basic_na": 233, "optimizer_tf": [237, 359], "pipelin": [238, 359, 412], "pruner": [239, 240], "prune": [240, 241, 374, 376, 413], "quantiz": [242, 374, 376, 385, 391, 414], "trainer": [243, 356, 359, 373, 413, 414], "util": [244, 245, 246, 247, 248, 249, 250, 251, 252, 255], "get_throughput": 244, "metric": [246, 373, 410, 413, 414], "modeling_bert_dynam": 248, "modeling_roberta_dynam": 249, "object": [250, 411, 414], "utility_tf": 252, "preprocess": [253, 254, 255, 399], "data_augment": 253, "sparsity_al": 256, "test_add_cls_token": 257, "test_add_embed": 258, "test_add_zero": 259, "test_attention_output_layer_norm_length_adaptive_keep_indic": 260, "test_attention_reshap": 261, "test_baddbmm": 262, "test_bert_mini_fp32": 263, "test_binary_op": 264, "test_binaryop": 265, "test_cast_to": 266, "test_concat": 267, "test_conv_reshap": 268, "test_decoder_attn_reshap": 269, "test_dispatcher_tuning_acc": 270, "test_dispatcher_tuning_throughput": 271, "test_dolly_pattern": 272, "test_dynamic_quant": 273, "test_electra": 274, "test_embed": 275, "test_embeddingbag": 276, "test_execution_opt": 277, "test_fwk": 278, "test_gath": 279, "test_gelu": 280, "test_gpt_int8": 281, "test_graph_dispatch": 282, "test_graph_optim": 283, "test_insert_input_output_data": 284, "test_is_supported_onnx_graph": 285, "test_last_layer_shap": 286, "test_layer_norm_with_reduce_mean": 287, "test_layer_norm_with_transpos": 288, "test_layernorm": 289, "test_linear": 290, "test_linear_int8": 291, "test_llama_pattern": 292, "test_main": 293, "test_matmul": 294, "test_matmul_int8": 295, "test_matmul_with_bias_relu": 296, "test_matmul_with_bias_sigmoid": 297, "test_matmul_with_bias_tanh": 298, "test_merged_embeddingbag": 299, "test_model": 300, "test_neox_rotary_pos_emb": 301, "test_onnx_util": 302, "test_operator_adaptor": 303, "test_op": 304, "test_padding_seq": 305, "test_padding_sequ": 306, "test_pattern_dispatch": 307, "test_permut": 308, "test_position_embed": 309, "test_pow": 310, "test_primitive_cache_acc": 311, "test_primitive_cache_throughput": 312, "test_qkv_merg": 313, "test_qkv_reshap": 314, "test_quant_onnx_execut": 315, "test_reshape_after_restore_hidden_st": 316, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 317, "test_reshape_before_restore_hidden_st": 318, "test_siz": 319, "test_slic": 320, "test_softmax": 321, "test_start_end_logit": 322, "test_static_compressed_buff": 323, "test_tanh": 324, "test_text_encod": 325, "test_text_encoder_bf16": 326, "test_tf_util": 327, "test_token_type_embed": 328, "test_transpos": 329, "test_transpose_batch_matmul": 330, "test_unet": 331, "test_unet_bf16": 332, "test_unsqueez": 333, "test_vae_decod": 334, "test_vae_decoder_bf16": 335, "test_weight_sharing_acc": 336, "test_weight_sharing_dispatcher_tuning_acc": 337, "test_weight_sharing_dispatcher_tuning_throughtput": 338, "test_weight_sharing_throughput": 339, "secur": 340, "polici": 340, "report": 340, "vulner": 340, "intel": [341, 358, 363, 371, 372, 374, 377, 419], "extens": [341, 358, 363, 371, 372, 374, 377, 419], "transform": [341, 358, 363, 371, 372, 374, 376, 377, 392, 419], "acceler": [341, 376, 392, 396], "base": [341, 374, 391], "platform": [341, 389, 405], "select": 341, "public": 341, "event": 341, "api": [342, 343, 346, 351, 357, 359, 360, 375, 381, 392], "python": [343, 381], "engin": [346, 347, 367, 374, 376, 378, 380, 382, 384, 385, 389, 423], "kernel": [348, 351, 364, 382, 392, 396, 399, 407, 420], "operator_desc": [349, 394, 395], "oper": [350, 381, 386], "specif": 350, "type": [350, 379, 413], "pytorch": [354, 359, 360, 373, 374], "tensorflow": [355, 359, 373, 374], "user": [357, 368, 392, 394, 395, 416, 424], "face": 357, "architectur": [358, 380], "autodistil": 359, "design": [359, 385], "framework": [359, 394, 395], "criterion": [359, 373], "knowledgedistillationloss": 359, "intermediatelayersknowledgedistillationloss": 359, "usag": [359, 373, 375, 394, 395, 407, 413], "flash": 359, "exampl": [359, 360, 361, 374, 375, 381, 384, 407, 411, 412, 417], "regular": 359, "introduct": [360, 371, 373, 375, 379, 381, 382, 383, 384, 387, 388, 392, 394, 395, 396, 397, 401, 406, 410, 411, 412, 413, 414], "get": [360, 371, 372, 376, 381, 385, 410, 414], "start": [360, 371, 372, 376, 391, 410, 414], "stock": [360, 374], "ipex": [360, 374], "output": [360, 372], "featur": [362, 394, 395, 414, 418], "welcom": [363, 419], "document": [363, 419], "section": [363, 419], "implement": [365, 421], "detail": [365, 399, 402, 421], "perform": [366, 389, 391, 392, 404, 405, 422], "neural": [367, 374, 376, 378, 380, 389, 423], "guid": [368, 416, 424], "contributor": [369, 370], "coven": [369, 370], "code": [369, 370], "conduct": [369, 370], "our": 369, "pledg": 369, "standard": 369, "respons": 369, "scope": 369, "enforc": 369, "contribut": 370, "guidelin": 370, "pull": 370, "request": 370, "checklist": 370, "templat": 370, "support": [370, 371, 372, 375, 384, 389, 390, 392, 410, 411, 414], "data": [371, 398, 405], "augment": 371, "instal": [371, 372, 377, 378, 385, 392], "depend": 371, "script": [371, 373, 413, 414], "paramet": 371, "text": 371, "gener": [371, 380, 391], "argument": 371, "overview": 372, "recommend": 372, "hardwar": [372, 377], "valid": [372, 377, 405], "environ": [372, 377, 385], "how": [372, 382, 388, 390, 406], "work": [372, 396], "1": [372, 380, 381, 385, 386, 406], "prerequisit": [372, 377, 378, 385, 399], "2": [372, 380, 385, 386, 406], "from": [372, 377, 378], "pypi": [372, 377], "conda": 372, "3": [372, 380, 406], "sourc": [372, 377], "To": [372, 385], "run": [372, 380, 381, 385, 390, 406], "requir": [372, 377], "prepar": [372, 384, 385, 406], "dataset": [372, 385], "compress": [372, 388], "4": [372, 380, 405], "infer": [372, 380, 393, 412], "expect": 372, "summari": [372, 410], "next": 372, "step": 372, "learn": 372, "more": [372, 382, 388, 396], "knowledg": [373, 374], "intermedi": 373, "layer": [373, 400], "creat": [373, 383, 413, 414], "an": [373, 384, 413, 414], "instanc": [373, 413, 414], "option": [373, 382, 388, 391, 413, 414], "distillationconfig": 373, "length": [374, 376], "adapt": [374, 376], "auto": 374, "orchestr": 374, "refer": [374, 392], "deploy": 374, "dens": [374, 396], "spars": [374, 381, 396, 397, 398, 400, 403, 406], "export": 375, "onnx": [375, 380, 384, 385], "matrix": [375, 389, 392, 399, 411, 414], "fp32": 375, "bf16": 375, "int8": [375, 385, 412], "For": [375, 407], "executor": [375, 386, 412], "system": [377, 391], "softwar": 377, "stabl": 378, "version": 378, "pip": 378, "binari": [378, 380, 394], "deploi": [378, 380], "bare": 378, "metal": 378, "add": [379, 386], "custom": [379, 380, 386], "regist": [379, 386], "node": [379, 383], "set": [379, 381], "map": [379, 383, 391], "fuse": 379, "new": [379, 383], "after": 379, "fusion": [379, 383], "integr": 380, "tf": [380, 391], "us": [380, 390, 399], "through": 380, "manual": 380, "yaml": 380, "weight": [380, 399, 406], "build": [380, 392, 407], "profil": [381, 404], "profl": 381, "you": 381, "can": 381, "onli": 381, "engine_profil": 381, "befor": 381, "c": 381, "part": 381, "csv": 381, "ratio": 381, "total": 381, "level": 381, "json": 381, "iter": 381, "tune": [382, 385, 391, 414], "dispatch": 382, "best": 382, "relat": 382, "runtim": 382, "turn": [382, 388], "mechan": 382, "dict": 383, "obtain": 383, "necessari": 383, "inform": [383, 409], "construct": 383, "establish": 383, "connect": 383, "remov": [383, 387], "old": 383, "insert": 383, "ir": [384, 385], "low": 385, "precis": 385, "its": 385, "accuraci": [385, 414], "h": 386, "includ": 386, "cpp": 386, "src": 386, "recogn": 387, "represent": 387, "pars": 387, "list": [387, 413], "search": 387, "each": 387, "straight": 387, "chain": 387, "splice": 387, "sub": 387, "main": 387, "duplic": 387, "result": [387, 406], "static": [388, 407, 414], "buffer": 388, "configur": [389, 405], "itrex": 390, "convert": 390, "tabl": 391, "quick": 391, "unix": 391, "linux": 391, "maco": 391, "etc": 391, "common": 391, "input": [391, 408], "prompt": 391, "interact": 391, "revers": 391, "In": 391, "prefix": 391, "suffix": 391, "instruct": [391, 398], "mode": 391, "context": 391, "manag": 391, "keep": 391, "flag": 391, "number": 391, "token": 391, "predict": 391, "temperatur": 391, "repeat": 391, "penalti": 391, "top": 391, "k": 391, "sampl": 391, "p": 391, "tail": 391, "free": 391, "local": 391, "typic": 391, "mirostat": 391, "logit": 391, "bia": 391, "rng": 391, "seed": 391, "memori": [391, 393], "thread": [391, 396, 405], "mlock": 391, "No": 391, "float": 391, "32": 391, "batch": 391, "cach": [391, 393], "addit": 391, "librari": 392, "test": 392, "sparse_matmul": [392, 407], "3d": 393, "layout": 393, "spmm_vnni": [393, 407], "issu": 393, "injector": [394, 395], "param_typ": [394, 395], "hpp": [394, 395], "jit_binaryop_injector": 394, "develop": [394, 395, 407], "": [394, 395], "perspect": [394, 395], "element": 395, "wise": 395, "alpha": 395, "beta": 395, "scale": 395, "jit_eltwise_injector": 395, "naiv": 396, "tile": 396, "effici": 396, "per": 396, "prefetch": 396, "amx": 397, "brief": 397, "isa": 397, "avx512f": 398, "kei": 398, "loop": 398, "quant": 399, "problem": [399, 400, 401, 402], "descript": [399, 400, 402], "differ": 399, "jit": 399, "path": 399, "one": 399, "stage": 399, "two": 399, "normal": 400, "layernorm": 400, "pre": 400, "comput": 400, "spmm": 400, "direct": 400, "layernorm_ba": [400, 407], "statement": 401, "matmul_p2031_2013": 401, "matmul_avx512f_p2031_p2013": [401, 407], "matmul_noperm_p2031_p1302": 401, "matmul_vnni_noperm_p2013_p1302": 401, "beforehand": 401, "mha": [402, 407], "calcul": 402, "vnni": 403, "On": 403, "fly": 403, "activ": 403, "candid": 403, "verbos": 404, "vtune": 404, "sde": 404, "singl": 405, "multi": 405, "visual": 406, "distribut": 406, "setup": 406, "below": 406, "command": 406, "analysi": 406, "spmm_avx512f": 407, "spmm_amx_bf16_x16": 407, "eltwiseop": 407, "transpose_matmul": 407, "matmul_vnni_noperm_p2031_p1302": 407, "attent": 407, "dynamic_quant_matmul": 407, "dynamic_qu": 407, "legal": 409, "licens": 409, "citat": 409, "trademark": 409, "prunerconfig": 413, "pruningconfig": 413, "fundament": 414, "approach": 414, "post": 414, "train": 414, "awar": 414, "quantizationconfig": 414, "releas": 415, "note": 415}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"clang-format": [[0, "module-clang-format"]], "convert_falcon": [[1, "module-convert_falcon"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [15, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [189, "module-contents"], [190, "module-contents"], [191, "module-contents"], [192, "module-contents"], [193, "module-contents"], [194, "module-contents"], [195, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [200, "module-contents"], [201, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [207, "module-contents"], [211, "module-contents"], [213, "module-contents"], [215, "module-contents"], [218, "module-contents"], [220, "module-contents"], [221, "module-contents"], [222, "module-contents"], [223, "module-contents"], [224, "module-contents"], [227, "module-contents"], [229, "module-contents"], [232, "module-contents"], [233, "module-contents"], [235, "module-contents"], [236, "module-contents"], [237, "module-contents"], [238, "module-contents"], [240, "module-contents"], [241, "module-contents"], [242, "module-contents"], [243, "module-contents"], [246, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [255, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [301, "module-contents"], [302, "module-contents"], [303, "module-contents"], [304, "module-contents"], [305, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"], [310, "module-contents"], [311, "module-contents"], [312, "module-contents"], [313, "module-contents"], [314, "module-contents"], [315, "module-contents"], [316, "module-contents"], [317, "module-contents"], [318, "module-contents"], [319, "module-contents"], [320, "module-contents"], [321, "module-contents"], [322, "module-contents"], [323, "module-contents"], [324, "module-contents"], [325, "module-contents"], [326, "module-contents"], [327, "module-contents"], [328, "module-contents"], [329, "module-contents"], [330, "module-contents"], [331, "module-contents"], [332, "module-contents"], [333, "module-contents"], [334, "module-contents"], [335, "module-contents"], [336, "module-contents"], [337, "module-contents"], [338, "module-contents"], [339, "module-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [6, "functions"], [15, "functions"], [19, "functions"], [20, "functions"], [42, "functions"], [54, "functions"], [112, "functions"], [147, "functions"], [203, "functions"], [204, "functions"], [205, "functions"], [207, "functions"], [211, "functions"], [213, "functions"], [220, "functions"], [221, "functions"], [223, "functions"], [224, "functions"], [238, "functions"], [248, "functions"], [249, "functions"], [251, "functions"], [252, "functions"], [255, "functions"]], "convert_gptneox": [[2, "module-convert_gptneox"]], "convert_llama": [[3, "module-convert_llama"]], "Classes": [[3, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [15, "classes"], [18, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"], [187, "classes"], [188, "classes"], [189, "classes"], [190, "classes"], [191, "classes"], [192, "classes"], [193, "classes"], [194, "classes"], [195, "classes"], [196, "classes"], [197, "classes"], [198, "classes"], [199, "classes"], [200, "classes"], [201, "classes"], [202, "classes"], [207, "classes"], [215, "classes"], [218, "classes"], [221, "classes"], [222, "classes"], [224, "classes"], [227, "classes"], [229, "classes"], [232, "classes"], [233, "classes"], [235, "classes"], [236, "classes"], [237, "classes"], [240, "classes"], [241, "classes"], [242, "classes"], [243, "classes"], [246, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [252, "classes"], [253, "classes"], [255, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [301, "classes"], [302, "classes"], [303, "classes"], [304, "classes"], [305, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"], [310, "classes"], [311, "classes"], [312, "classes"], [313, "classes"], [314, "classes"], [315, "classes"], [316, "classes"], [317, "classes"], [318, "classes"], [319, "classes"], [320, "classes"], [321, "classes"], [322, "classes"], [323, "classes"], [324, "classes"], [325, "classes"], [326, "classes"], [327, "classes"], [328, "classes"], [329, "classes"], [330, "classes"], [331, "classes"], [332, "classes"], [333, "classes"], [334, "classes"], [335, "classes"], [336, "classes"], [337, "classes"], [338, "classes"], [339, "classes"]], "convert_mpt": [[4, "module-convert_mpt"]], "intel_extension_for_transformers.backends": [[5, "module-intel_extension_for_transformers.backends"]], "Subpackages": [[5, "subpackages"], [16, "subpackages"], [205, "subpackages"], [226, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[9, "submodules"], [14, "submodules"], [16, "submodules"], [17, "submodules"], [42, "submodules"], [112, "submodules"], [217, "submodules"], [225, "submodules"], [226, "submodules"], [228, "submodules"], [234, "submodules"], [239, "submodules"], [245, "submodules"], [247, "submodules"], [254, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[42, "package-contents"], [112, "package-contents"], [205, "package-contents"]], "Attributes": [[42, "attributes"], [112, "attributes"], [203, "attributes"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[205, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[206, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[207, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[208, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[210, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[211, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[212, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[213, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[214, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[215, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[219, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[220, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[221, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[222, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[223, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[224, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[225, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[226, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[227, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[228, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[229, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[230, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[231, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[232, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[233, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[234, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[235, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[236, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[237, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[238, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[239, "module-intel_extension_for_transformers.optimization.pruner"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[240, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "intel_extension_for_transformers.optimization.pruning": [[241, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.quantization": [[242, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[243, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[244, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[245, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[246, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[247, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[248, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[249, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[250, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[251, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[252, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[253, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[254, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[255, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[256, "module-sparsity_all"]], "test_add_cls_token": [[257, "module-test_add_cls_token"]], "test_add_embeddings": [[258, "module-test_add_embeddings"]], "test_add_zeros": [[259, "module-test_add_zeros"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[260, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[261, "module-test_attention_reshape"]], "test_baddbmm": [[262, "module-test_baddbmm"]], "test_bert_mini_fp32": [[263, "module-test_bert_mini_fp32"]], "test_binary_op": [[264, "module-test_binary_op"]], "test_binaryop": [[265, "module-test_binaryop"]], "test_cast_to": [[266, "module-test_cast_to"]], "test_concat": [[267, "module-test_concat"]], "test_conv_reshape": [[268, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[269, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[270, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[271, "module-test_dispatcher_tuning_throughput"]], "test_dolly_pattern": [[272, "module-test_dolly_pattern"]], "test_dynamic_quantization": [[273, "module-test_dynamic_quantization"]], "test_electra": [[274, "module-test_electra"]], "test_embedding": [[275, "module-test_embedding"]], "test_embeddingbag": [[276, "module-test_embeddingbag"]], "test_execution_options": [[277, "module-test_execution_options"]], "test_fwk": [[278, "module-test_fwk"]], "test_gather": [[279, "module-test_gather"]], "test_gelu": [[280, "module-test_gelu"]], "test_gpt_int8": [[281, "module-test_gpt_int8"]], "test_graph_dispatch": [[282, "module-test_graph_dispatch"]], "test_graph_optimizer": [[283, "module-test_graph_optimizer"]], "test_insert_input_output_data": [[284, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[285, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[286, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[287, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[288, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[289, "module-test_layernorm"]], "test_linear": [[290, "module-test_linear"]], "test_linear_int8": [[291, "module-test_linear_int8"]], "test_llama_pattern": [[292, "module-test_llama_pattern"]], "test_main": [[293, "module-test_main"]], "test_matmul": [[294, "module-test_matmul"]], "test_matmul_int8": [[295, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[296, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[297, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[298, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[299, "module-test_merged_embeddingbag"]], "test_model": [[300, "module-test_model"]], "test_neox_rotary_pos_emb": [[301, "module-test_neox_rotary_pos_emb"]], "test_onnx_utils": [[302, "module-test_onnx_utils"]], "test_operator_adaptor": [[303, "module-test_operator_adaptor"]], "test_ops": [[304, "module-test_ops"]], "test_padding_seq": [[305, "module-test_padding_seq"]], "test_padding_sequence": [[306, "module-test_padding_sequence"]], "test_pattern_dispatch": [[307, "module-test_pattern_dispatch"]], "test_permute": [[308, "module-test_permute"]], "test_position_embeddings": [[309, "module-test_position_embeddings"]], "test_pow": [[310, "module-test_pow"]], "test_primitive_cache_acc": [[311, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[312, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[313, "module-test_qkv_merge"]], "test_qkv_reshape": [[314, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[315, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[316, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[317, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[318, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[319, "module-test_size"]], "test_slice": [[320, "module-test_slice"]], "test_softmax": [[321, "module-test_softmax"]], "test_start_end_logits": [[322, "module-test_start_end_logits"]], "test_static_compressed_buffer": [[323, "module-test_static_compressed_buffer"]], "test_tanh": [[324, "module-test_tanh"]], "test_text_encoder": [[325, "module-test_text_encoder"]], "test_text_encoder_bf16": [[326, "module-test_text_encoder_bf16"]], "test_tf_utils": [[327, "module-test_tf_utils"]], "test_token_type_embeddings": [[328, "module-test_token_type_embeddings"]], "test_transpose": [[329, "module-test_transpose"]], "test_transpose_batch_matmul": [[330, "module-test_transpose_batch_matmul"]], "test_unet": [[331, "module-test_unet"]], "test_unet_bf16": [[332, "module-test_unet_bf16"]], "test_unsqueeze": [[333, "module-test_unsqueeze"]], "test_vae_decoder": [[334, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[335, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[336, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[337, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[338, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[339, "module-test_weight_sharing_throughput"]], "Security Policy": [[340, "security-policy"]], "Report a Vulnerability": [[340, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[341, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[341, "selected-publications-events"]], "API": [[342, "api"]], "Python APIs": [[343, "python-apis"]], "Compile": [[344, "compile"]], "Graph": [[345, "graph"]], "Engine API": [[346, "engine-api"]], "Class engine": [[347, "class-engine"]], "Class Kernel": [[348, "class-kernel"]], "Class operator_desc": [[349, "class-operator-desc"]], "Operator Specific Types": [[350, "operator-specific-types"]], "Kernel APIs": [[351, "kernel-apis"]], "Config": [[352, "config"]], "Model": [[353, "model"]], "PyTorch Optimizer": [[354, "pytorch-optimizer"]], "TensorFlow Optimizer": [[355, "tensorflow-optimizer"]], "Trainer": [[356, "trainer"]], "User-facing API": [[357, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[358, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[359, "autodistillation-design"]], "AutoDistillation Pipeline": [[359, "autodistillation-pipeline"]], "Framework Class Design": [[359, "framework-class-design"]], "Criterion Class Design": [[359, "criterion-class-design"]], "KnowledgeDistillationLoss": [[359, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[359, "intermediatelayersknowledgedistillationloss"]], "Usage": [[359, "usage"], [394, "usage"], [395, "usage"], [407, "usage"], [413, "usage"]], "Pytorch": [[359, "pytorch"]], "AutoDistillation API in Trainer": [[359, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[359, "flash-distillation-config-example"]], "Regular distillation config example": [[359, "regular-distillation-config-example"]], "AutoDistillation config example": [[359, "autodistillation-config-example"], [359, "id1"]], "Tensorflow": [[359, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[359, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[359, "distillation-config-example"]], "Benchmark": [[360, "benchmark"]], "Introduction": [[360, "introduction"], [371, "introduction"], [373, "introduction"], [375, "introduction"], [379, "introduction"], [381, "introduction"], [382, "introduction"], [383, "introduction"], [384, "introduction"], [387, "introduction"], [388, "introduction"], [392, "introduction"], [394, "introduction"], [395, "introduction"], [396, "introduction"], [401, "introduction"], [406, "introduction"], [410, "introduction"], [411, "introduction"], [412, "introduction"], [413, "introduction"], [414, "introduction"]], "Get Started with Benchmark API": [[360, "get-started-with-benchmark-api"]], "Examples": [[360, "examples"], [374, "examples"], [375, "examples"], [407, "examples"], [407, "id1"], [407, "id2"], [407, "id3"], [407, "id4"], [407, "id5"], [407, "id6"], [407, "id7"], [407, "id8"], [407, "id9"], [407, "id10"], [407, "id11"], [412, "examples"]], "Stock Pytorch Model": [[360, "stock-pytorch-model"]], "IPEX Model": [[360, "ipex-model"]], "Benchmark Output": [[360, "benchmark-output"]], "Example": [[361, "example"], [417, "example"]], "Features": [[362, "features"], [418, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[363, "welcome-to-intel-extension-for-transformers-documentation"], [419, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[363, "sections"], [419, "sections"]], "Kernels": [[364, "kernels"], [420, "kernels"]], "Implementation Details": [[365, "implementation-details"], [421, "implementation-details"]], "Performance": [[366, "performance"], [389, "performance"], [392, "performance"], [422, "performance"]], "Neural Engine": [[367, "neural-engine"], [423, "neural-engine"]], "User Guide": [[368, "user-guide"], [416, "user-guide"], [424, "user-guide"]], "Contributor Covenant Code of Conduct": [[369, "contributor-covenant-code-of-conduct"], [370, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[369, "our-pledge"]], "Our Standards": [[369, "our-standards"]], "Our Responsibilities": [[369, "our-responsibilities"]], "Scope": [[369, "scope"]], "Enforcement": [[369, "enforcement"]], "Attribution": [[369, "attribution"]], "Contribution Guidelines": [[370, "contribution-guidelines"]], "Pull Request Checklist": [[370, "pull-request-checklist"]], "Pull Request Template": [[370, "pull-request-template"]], "Support": [[370, "support"], [372, "support"]], "Data Augmentation": [[371, "data-augmentation"], [371, "id1"]], "Getting Started": [[371, "getting-started"], [376, "getting-started"]], "Install Dependency": [[371, "install-dependency"]], "Install Intel Extension for Transformers": [[371, "install-intel-extension-for-transformers"], [377, "install-intel-extension-for-transformers"]], "Script": [[371, "script"]], "Parameters of Data Augmentation": [[371, "parameters-of-data-augmentation"]], "Supported Augmenter": [[371, "supported-augmenter"]], "Text Generation Augmenter": [[371, "text-generation-augmenter"]], "Augmenter Arguments:": [[371, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[372, "intel-extension-for-transformers"]], "Overview": [[372, "overview"]], "Recommended Hardware": [[372, "recommended-hardware"]], "Validated Hardware Environment": [[372, "validated-hardware-environment"], [377, "validated-hardware-environment"]], "How it Works": [[372, "how-it-works"]], "Get Started": [[372, "get-started"], [414, "get-started"]], "1. Prerequisites": [[372, "prerequisites"]], "2. Installation": [[372, "installation"]], "2.1 Install from PyPi": [[372, "install-from-pypi"]], "2.2 Install from Conda": [[372, "install-from-conda"]], "2.3 Install from Source": [[372, "install-from-source"]], "3. How To Run": [[372, "how-to-run"]], "3.1 Install Requirements": [[372, "install-requirements"]], "3.2 Prepare Datasets": [[372, "prepare-datasets"]], "3.3 Model Compression": [[372, "model-compression"]], "3.4 Model Inference": [[372, "model-inference"]], "Expected Output": [[372, "expected-output"]], "Summary and Next Steps": [[372, "summary-and-next-steps"]], "Learn More": [[372, "learn-more"]], "Distillation": [[373, "distillation"], [373, "id1"], [374, "distillation"], [376, "distillation"]], "Knowledge Distillation": [[373, "knowledge-distillation"], [374, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[373, "intermediate-layer-knowledge-distillation"]], "usage": [[373, "usage"]], "Pytorch Script:": [[373, "pytorch-script"]], "Tensorflow Script:": [[373, "tensorflow-script"]], "Create an Instance of Metric": [[373, "create-an-instance-of-metric"], [414, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[373, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[373, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[373, "distill-with-trainer"]], "Quantization": [[374, "quantization"], [376, "quantization"], [391, "quantization"], [414, "quantization"]], "Stock PyTorch Examples": [[374, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[374, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[374, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[374, "length-adaptive-transformers"]], "Pruning": [[374, "pruning"], [376, "pruning"], [413, "pruning"]], "Auto Distillation (NAS Based)": [[374, "auto-distillation-nas-based"]], "Orchestrate": [[374, "orchestrate"]], "Reference Deployment on Neural Engine": [[374, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[374, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[374, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[375, "export-to-onnx"]], "Supported Model Export Matrix": [[375, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[375, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[375, "export-to-bf16-onnx-model"]], "API usage": [[375, "api-usage"]], "Export to INT8 ONNX Model": [[375, "export-to-int8-onnx-model"]], "For executor backend": [[375, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[376, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[376, "transformers-accelerated-neural-engine"]], "Installation": [[377, "installation"], [378, "installation"], [392, "installation"]], "Install from Pypi": [[377, "install-from-pypi"]], "Install from Source": [[377, "install-from-source"]], "Prerequisites": [[377, "prerequisites"], [378, "prerequisites"]], "System Requirements": [[377, "system-requirements"]], "Validated Software Environment": [[377, "validated-software-environment"]], "Install": [[378, "install"]], "Install stable version intel_extension_for_transformers from pip": [[378, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[378, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[379, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[379, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[379, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[379, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[380, "deploy-and-integration"]], "1. Architecture": [[380, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[380, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[380, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[380, "run-the-inference-by-engine"], [380, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[380, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[380, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[380, "integrate-neural-engine-as-backend"]], "Profiling": [[381, "profiling"]], "Profling API": [[381, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[381, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[381, "profiling-examples"]], "Parts of CSV Profiling": [[381, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[381, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[381, "operator-profiling-part"]], "Total Profiling Part": [[381, "total-profiling-part"]], "Levels of JSON Profiling": [[381, "levels-of-json-profiling"]], "Model Level": [[381, "model-level"]], "Iteration Level": [[381, "iteration-level"]], "Operator Level": [[381, "operator-level"]], "Engine Tuning": [[382, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[382, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[382, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[382, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[382, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[382, "more-tuning-options"]], "Graph Fusion": [[383, "graph-fusion"]], "Pattern Mapping Dict": [[383, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[383, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[383, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[383, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[384, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[384, "supported-onnx-format"]], "Compile Examples": [[384, "compile-examples"]], "Prepare ONNX Model": [[384, "prepare-onnx-model"]], "Compile to IR": [[384, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[385, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[385, "design"]], "Prerequisite": [[385, "prerequisite"]], "Install environment": [[385, "install-environment"]], "Prepare Dataset": [[385, "prepare-dataset"]], "Prepare ONNX model": [[385, "prepare-onnx-model"]], "Run tuning and benchmark": [[385, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[385, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[385, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[386, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[386, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[386, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[387, "pattern-recognize"]], "Pattern Representation": [[387, "pattern-representation"]], "Parse Pattern Representation List": [[387, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[387, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[387, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Static Compressed Buffer": [[388, "static-compressed-buffer"]], "How to Turn on Static Compressed Buffer": [[388, "how-to-turn-on-static-compressed-buffer"]], "More Options": [[388, "more-options"]], "Neural Engine Support Matrix": [[389, "neural-engine-support-matrix"]], "platform configuration": [[389, "platform-configuration"]], "ITREX Graph": [[390, "itrex-graph"]], "Compile Graph": [[390, "compile-graph"]], "How to use": [[390, "how-to-use"]], "Convert model": [[390, "convert-model"]], "Run Models": [[390, "run-models"]], "Supported model": [[390, "supported-model"]], "Table of Contents": [[391, "table-of-contents"]], "Quick Start": [[391, "quick-start"]], "Unix-based systems (Linux, macOS, etc.):": [[391, "unix-based-systems-linux-macos-etc"]], "Common Options": [[391, "common-options"]], "Input Prompts": [[391, "input-prompts"]], "Interaction": [[391, "interaction"]], "Interaction Options": [[391, "interaction-options"]], "Reverse Prompts": [[391, "reverse-prompts"]], "In-Prefix": [[391, "in-prefix"]], "In-Suffix": [[391, "in-suffix"]], "Instruction Mode": [[391, "instruction-mode"]], "Context Management": [[391, "context-management"]], "Context Size": [[391, "context-size"]], "Keep Prompt": [[391, "keep-prompt"]], "Generation Flags": [[391, "generation-flags"]], "Number of Tokens to Predict": [[391, "number-of-tokens-to-predict"]], "Temperature": [[391, "temperature"]], "Repeat Penalty": [[391, "repeat-penalty"]], "Top-K Sampling": [[391, "top-k-sampling"]], "Top-P Sampling": [[391, "top-p-sampling"]], "Tail Free Sampling (TFS)": [[391, "tail-free-sampling-tfs"]], "Locally Typical Sampling": [[391, "locally-typical-sampling"]], "Mirostat Sampling": [[391, "mirostat-sampling"]], "Logit Bias": [[391, "logit-bias"]], "RNG Seed": [[391, "rng-seed"]], "Performance Tuning and Memory Options": [[391, "performance-tuning-and-memory-options"]], "Number of Threads": [[391, "number-of-threads"]], "Mlock": [[391, "mlock"]], "No Memory Mapping": [[391, "no-memory-mapping"]], "Memory Float 32": [[391, "memory-float-32"]], "Batch Size": [[391, "batch-size"]], "Prompt Caching": [[391, "prompt-caching"]], "Additional Options": [[391, "additional-options"]], "Transformers-Accelerated Libraries": [[392, "transformers-accelerated-libraries"]], "Build": [[392, "build"], [407, "build"]], "Test": [[392, "test"]], "API reference for users": [[392, "api-reference-for-users"]], "sparse_matmul kernel:": [[392, "sparse-matmul-kernel"]], "Supported Matrix": [[392, "supported-matrix"]], "3D Inference": [[393, "d-inference"]], "Memory Layout in SPMM_VNNI": [[393, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[393, "cache-issues"]], "SPMM_VNNI 3D Inference": [[393, "spmm-vnni-3d-inference"]], "Binary Injectors": [[394, "binary-injectors"]], "Framework Features": [[394, "framework-features"], [395, "framework-features"]], "param_type.hpp": [[394, "param-type-hpp"]], "operator_desc.hpp": [[394, "operator-desc-hpp"], [395, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[394, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[394, "developer-s-perspective"]], "User\u2019s Perspective": [[394, "user-s-perspective"], [395, "user-s-perspective"]], "Element-wise Injector": [[395, "element-wise-injector"]], "param_types.hpp": [[395, "param-types-hpp"]], "alpha,beta,scale meaning": [[395, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[395, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[395, "developer-s-perspective"]], "Dense and Sparse": [[396, "dense-and-sparse"]], "Naive": [[396, "naive"]], "Tile": [[396, "tile"]], "Efficient kernel": [[396, "efficient-kernel"]], "More work per thread": [[396, "more-work-per-thread"]], "Prefetch": [[396, "prefetch"]], "Sparse acceleration": [[396, "sparse-acceleration"]], "Sparse GEMM AMX": [[397, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[397, "brief-introduction-for-isas"]], "Pattern": [[397, "pattern"]], "Reorder": [[397, "reorder"]], "Sparse GEMM AVX512F": [[398, "sparse-gemm-avx512f"]], "Key Instruction": [[398, "key-instruction"]], "Sparse Pattern & Data Format": [[398, "sparse-pattern-data-format"]], "Loops": [[398, "loops"]], "Dynamic Quant Matmul": [[399, "dynamic-quant-matmul"]], "problem description": [[399, "problem-description"]], "Kernel details": [[399, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[399, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[399, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[399, "different-jit-paths-for-different-weight-size"]], "one-stage jit-path": [[399, "one-stage-jit-path"]], "two-stage jit-path": [[399, "two-stage-jit-path"]], "Sparse GEMM with Layer-Normalize": [[400, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[400, "problem-description"]], "layernormalized sparse matmul": [[400, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[400, "pre-compute-spmm"]], "Direct Layernorm_ba": [[400, "direct-layernorm-ba"]], "Transposed MatMul": [[401, "transposed-matmul"]], "Problem Statements": [[401, "problem-statements"]], "Matmul_p2031_2013": [[401, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[401, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[401, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[401, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[401, "reorder-beforehand"]], "Transposed MHA": [[402, "transposed-mha"]], "Problem description": [[402, "problem-description"]], "Details": [[402, "details"]], "Reordering": [[402, "reordering"]], "Calculation": [[402, "calculation"]], "Sparse GEMM VNNI": [[403, "sparse-gemm-vnni"]], "On the fly activation reordering": [[403, "on-the-fly-activation-reordering"]], "Candidate patterns": [[403, "candidate-patterns"]], "Performance and Profiling": [[404, "performance-and-profiling"]], "Verbose": [[404, "verbose"]], "VTune": [[404, "vtune"]], "SDE": [[404, "sde"]], "Validated Performance Data": [[405, "validated-performance-data"]], "Single Thread": [[405, "single-thread"]], "Multi Thread (Thread = 4)": [[405, "multi-thread-thread-4"]], "Platform Configuration": [[405, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[406, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[406, "setups"]], "1. Prepare the sparse model": [[406, "prepare-the-sparse-model"]], "2. Run below commands": [[406, "run-below-commands"]], "3. Analysis results": [[406, "analysis-results"]], "Benchmark for Kernels": [[407, "benchmark-for-kernels"]], "sparse_matmul": [[407, "sparse-matmul"]], "spmm_avx512f": [[407, "spmm-avx512f"]], "spmm_vnni": [[407, "spmm-vnni"]], "spmm_amx_bf16_x16": [[407, "spmm-amx-bf16-x16"]], "eltwiseop": [[407, "eltwiseop"]], "layernorm_ba": [[407, "layernorm-ba"]], "transpose_matmul": [[407, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[407, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[407, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[407, "softmax"]], "attention": [[407, "attention"]], "Static MHA": [[407, "static-mha"]], "dynamic_quant_matmul": [[407, "dynamic-quant-matmul"]], "dynamic_quant": [[407, "dynamic-quant"]], "For developers": [[407, "for-developers"]], "Inputs format": [[408, "inputs-format"]], "Legal Information": [[409, "legal-information"]], "License": [[409, "license"]], "Citation": [[409, "citation"]], "Trademarks": [[409, "trademarks"]], "Metrics": [[410, "metrics"]], "Supported Metric": [[410, "supported-metric"]], "Metric Class Summary": [[410, "metric-class-summary"]], "Get Start with Metrics": [[410, "get-start-with-metrics"]], "Objective": [[411, "objective"]], "Supported Objectives Matrix:": [[411, "supported-objectives-matrix"]], "Examples:": [[411, "examples"]], "Pipeline": [[412, "pipeline"]], "Pipeline Inference for INT8 Model": [[412, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[412, "pipeline-inference-for-executor-backend"]], "Pruning types": [[413, "pruning-types"]], "Script:": [[413, "script"], [414, "script"]], "Create an instance of Metric": [[413, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[413, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[413, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[413, "prune-with-trainer"]], "Quantization Fundamentals": [[414, "quantization-fundamentals"]], "Quantization Approach": [[414, "quantization-approach"]], "Post Training Dynamic Quantization": [[414, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[414, "post-training-static-quantization"]], "Quantization Aware Training": [[414, "quantization-aware-training"]], "Accuracy Aware Tuning": [[414, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[414, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[414, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[414, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[414, "quantization-with-trainer"]], "Release": [[415, "release"]], "Release Notes": [[415, "release-notes"]], "Contents:": [[418, null], [423, null]]}, "indexentries": {"clang-format": [[0, "module-clang-format"]], "module": [[0, "module-clang-format"], [1, "module-convert_falcon"], [2, "module-convert_gptneox"], [3, "module-convert_llama"], [4, "module-convert_mpt"], [5, "module-intel_extension_for_transformers.backends"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"], [189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [203, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [204, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [205, "module-intel_extension_for_transformers.backends.neural_engine"], [206, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"], [207, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"], [208, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"], [209, "module-intel_extension_for_transformers.evaluation.hf_eval"], [210, "module-intel_extension_for_transformers.evaluation"], [211, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"], [212, "module-intel_extension_for_transformers.evaluation.lm_code_eval"], [213, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"], [214, "module-intel_extension_for_transformers.evaluation.lm_eval"], [215, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"], [216, "module-intel_extension_for_transformers.evaluation.lm_eval.models"], [217, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"], [218, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"], [219, "module-intel_extension_for_transformers"], [220, "module-intel_extension_for_transformers.optimization.benchmark"], [221, "module-intel_extension_for_transformers.optimization.config"], [222, "module-intel_extension_for_transformers.optimization.distillation"], [223, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [224, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [225, "module-intel_extension_for_transformers.optimization.dynamic"], [226, "module-intel_extension_for_transformers.optimization"], [227, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [228, "module-intel_extension_for_transformers.optimization.mixture"], [229, "module-intel_extension_for_transformers.optimization.model"], [230, "module-intel_extension_for_transformers.optimization.modeling"], [231, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"], [232, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"], [233, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [234, "module-intel_extension_for_transformers.optimization.nas"], [235, "module-intel_extension_for_transformers.optimization.nas.nas"], [236, "module-intel_extension_for_transformers.optimization.optimizer"], [237, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [238, "module-intel_extension_for_transformers.optimization.pipeline"], [239, "module-intel_extension_for_transformers.optimization.pruner"], [240, "module-intel_extension_for_transformers.optimization.pruner.pruning"], [241, "module-intel_extension_for_transformers.optimization.pruning"], [242, "module-intel_extension_for_transformers.optimization.quantization"], [243, "module-intel_extension_for_transformers.optimization.trainer"], [244, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [245, "module-intel_extension_for_transformers.optimization.utils"], [246, "module-intel_extension_for_transformers.optimization.utils.metrics"], [247, "module-intel_extension_for_transformers.optimization.utils.models"], [248, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [249, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [250, "module-intel_extension_for_transformers.optimization.utils.objectives"], [251, "module-intel_extension_for_transformers.optimization.utils.utility"], [252, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [253, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [254, "module-intel_extension_for_transformers.preprocessing"], [255, "module-intel_extension_for_transformers.preprocessing.utils"], [256, "module-sparsity_all"], [257, "module-test_add_cls_token"], [258, "module-test_add_embeddings"], [259, "module-test_add_zeros"], [260, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [261, "module-test_attention_reshape"], [262, "module-test_baddbmm"], [263, "module-test_bert_mini_fp32"], [264, "module-test_binary_op"], [265, "module-test_binaryop"], [266, "module-test_cast_to"], [267, "module-test_concat"], [268, "module-test_conv_reshape"], [269, "module-test_decoder_attn_reshape"], [270, "module-test_dispatcher_tuning_acc"], [271, "module-test_dispatcher_tuning_throughput"], [272, "module-test_dolly_pattern"], [273, "module-test_dynamic_quantization"], [274, "module-test_electra"], [275, "module-test_embedding"], [276, "module-test_embeddingbag"], [277, "module-test_execution_options"], [278, "module-test_fwk"], [279, "module-test_gather"], [280, "module-test_gelu"], [281, "module-test_gpt_int8"], [282, "module-test_graph_dispatch"], [283, "module-test_graph_optimizer"], [284, "module-test_insert_input_output_data"], [285, "module-test_is_supported_onnx_graph"], [286, "module-test_last_layer_shape"], [287, "module-test_layer_norm_with_reduce_mean"], [288, "module-test_layer_norm_with_transpose"], [289, "module-test_layernorm"], [290, "module-test_linear"], [291, "module-test_linear_int8"], [292, "module-test_llama_pattern"], [293, "module-test_main"], [294, "module-test_matmul"], [295, "module-test_matmul_int8"], [296, "module-test_matmul_with_bias_relu"], [297, "module-test_matmul_with_bias_sigmoid"], [298, "module-test_matmul_with_bias_tanh"], [299, "module-test_merged_embeddingbag"], [300, "module-test_model"], [301, "module-test_neox_rotary_pos_emb"], [302, "module-test_onnx_utils"], [303, "module-test_operator_adaptor"], [304, "module-test_ops"], [305, "module-test_padding_seq"], [306, "module-test_padding_sequence"], [307, "module-test_pattern_dispatch"], [308, "module-test_permute"], [309, "module-test_position_embeddings"], [310, "module-test_pow"], [311, "module-test_primitive_cache_acc"], [312, "module-test_primitive_cache_throughput"], [313, "module-test_qkv_merge"], [314, "module-test_qkv_reshape"], [315, "module-test_quant_onnx_execute"], [316, "module-test_reshape_after_restore_hidden_states"], [317, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [318, "module-test_reshape_before_restore_hidden_states"], [319, "module-test_size"], [320, "module-test_slice"], [321, "module-test_softmax"], [322, "module-test_start_end_logits"], [323, "module-test_static_compressed_buffer"], [324, "module-test_tanh"], [325, "module-test_text_encoder"], [326, "module-test_text_encoder_bf16"], [327, "module-test_tf_utils"], [328, "module-test_token_type_embeddings"], [329, "module-test_transpose"], [330, "module-test_transpose_batch_matmul"], [331, "module-test_unet"], [332, "module-test_unet_bf16"], [333, "module-test_unsqueeze"], [334, "module-test_vae_decoder"], [335, "module-test_vae_decoder_bf16"], [336, "module-test_weight_sharing_acc"], [337, "module-test_weight_sharing_dispatcher_tuning_acc"], [338, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [339, "module-test_weight_sharing_throughput"]], "bytes_to_unicode() (in module convert_falcon)": [[1, "convert_falcon.bytes_to_unicode"]], "convert_falcon": [[1, "module-convert_falcon"]], "bytes_to_unicode() (in module convert_gptneox)": [[2, "convert_gptneox.bytes_to_unicode"]], "convert_gptneox": [[2, "module-convert_gptneox"]], "lazyunpickler (class in convert_llama)": [[3, "convert_llama.LazyUnpickler"]], "nefiletype (class in convert_llama)": [[3, "convert_llama.NEFileType"]], "bounded_parallel_map() (in module convert_llama)": [[3, "convert_llama.bounded_parallel_map"]], "convert_llama": [[3, "module-convert_llama"]], "find_class() (convert_llama.lazyunpickler method)": [[3, "convert_llama.LazyUnpickler.find_class"]], "find_multifile_paths() (in module convert_llama)": [[3, "convert_llama.find_multifile_paths"]], "handle_quantization() (in module convert_llama)": [[3, "convert_llama.handle_quantization"]], "load_some_model() (in module convert_llama)": [[3, "convert_llama.load_some_model"]], "nth_multifile_path() (in module convert_llama)": [[3, "convert_llama.nth_multifile_path"]], "bytes_to_unicode() (in module convert_mpt)": [[4, "convert_mpt.bytes_to_unicode"]], "convert_mpt": [[4, "module-convert_mpt"]], "intel_extension_for_transformers.backends": [[5, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[11, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "del_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_var"]], "del_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_vars"]], "environ_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.environ_info_init"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_environ_info"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_environ_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "remove_environ_info_item() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_item"]], "remove_environ_info_items() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_items"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "set_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_var"]], "set_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_vars"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "baddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.baddbmm method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "binaryop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.binaryop method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "zeros (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[36, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[44, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernorm method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "resize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.resize)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.resize method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.slice method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice.set_attr"]], "slicepositionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.slicepositionids method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.where)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.where.where method)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where.set_attr"]], "optimizer (class in intel_extension_for_transformers.backends.neural_engine.compile.optimizer)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "optimize() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.optimize"]], "weight_optimization() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.weight_optimization"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "embeddingsto2dbeforeinnerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product.EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "groupnormswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish.GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithbiasunsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze.MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "neoxreorderchange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change.NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "neoxroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb.NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeunusedoperator (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator.RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "removezeros (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros.RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "explicitnhwctransposeforconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose.ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "stablediffusion_mha (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA.StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "stablediffusion_mhareshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape.StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchunpackbaddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm)": [[188, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm.TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[190, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[192, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[193, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[194, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[195, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[196, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[197, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[198, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[199, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[200, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[201, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[202, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[205, "module-intel_extension_for_transformers.backends.neural_engine"]], "neural_engine_bin() (in module intel_extension_for_transformers.backends.neural_engine)": [[205, "intel_extension_for_transformers.backends.neural_engine.neural_engine_bin"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[206, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "datacollatorforsuperviseddataset (class in intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[207, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.DataCollatorForSupervisedDataset"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[207, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "preprocess() (in module intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[207, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.preprocess"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[208, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[210, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[211, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[211, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "pattern_match() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[211, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.pattern_match"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[212, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_eval.evaluator)": [[213, "intel_extension_for_transformers.evaluation.lm_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[213, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[214, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[215, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[215, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[215, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[215, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "lambadaopenai (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[218, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaOpenAI"]], "lambadastandard (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[218, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaStandard"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[219, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[220, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[220, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[220, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[220, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[220, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[221, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[221, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[221, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[222, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[222, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[222, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[223, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[223, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[223, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[224, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[224, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[225, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[226, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[227, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[227, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[227, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[227, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[227, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[227, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[227, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[228, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[229, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[229, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[229, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[230, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[231, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "incdecoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[232, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCDecoder"]], "incencoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[232, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCEncoder"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[232, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[233, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[233, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[233, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[233, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[233, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[234, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[235, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[235, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[236, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[236, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[236, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[236, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[237, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[237, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[238, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[238, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[239, "module-intel_extension_for_transformers.optimization.pruner"]], "pruning (class in intel_extension_for_transformers.optimization.pruner.pruning)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[240, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[240, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.update_config"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[241, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[241, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[241, "module-intel_extension_for_transformers.optimization.pruning"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[242, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[242, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[243, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[243, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[243, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[243, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[244, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[245, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[246, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[246, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[247, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[248, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[248, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[249, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[249, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[250, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[250, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[250, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[250, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[251, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[251, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[252, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[252, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[252, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[252, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[252, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[253, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[253, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[253, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[253, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[253, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[254, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[255, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[255, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[255, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[256, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[257, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[257, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[257, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[257, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[258, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[258, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[258, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[258, "module-test_add_embeddings"]], "testtorchop (class in test_add_zeros)": [[259, "test_add_zeros.TestTorchOP"]], "setupclass() (test_add_zeros.testtorchop class method)": [[259, "test_add_zeros.TestTorchOP.setUpClass"]], "teardownclass() (test_add_zeros.testtorchop class method)": [[259, "test_add_zeros.TestTorchOP.tearDownClass"]], "test_add_zeros": [[259, "module-test_add_zeros"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[260, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[260, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[260, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[260, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[261, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[261, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[261, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[261, "module-test_attention_reshape"]], "testtorchop (class in test_baddbmm)": [[262, "test_baddbmm.TestTorchOP"]], "setupclass() (test_baddbmm.testtorchop class method)": [[262, "test_baddbmm.TestTorchOP.setUpClass"]], "teardownclass() (test_baddbmm.testtorchop class method)": [[262, "test_baddbmm.TestTorchOP.tearDownClass"]], "test_baddbmm": [[262, "module-test_baddbmm"]], "testtorchmodel (class in test_bert_mini_fp32)": [[263, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[263, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[263, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[263, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[264, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[264, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[264, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[264, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[265, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[265, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[265, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[265, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[266, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[266, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[266, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[266, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[267, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[267, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[267, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[267, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[268, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[268, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[268, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[268, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[269, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[269, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[269, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[269, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[270, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[270, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[270, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[270, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[271, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[271, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[271, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[271, "module-test_dispatcher_tuning_throughput"]], "testtorchop (class in test_dolly_pattern)": [[272, "test_dolly_pattern.TestTorchOP"]], "setupclass() (test_dolly_pattern.testtorchop class method)": [[272, "test_dolly_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_dolly_pattern.testtorchop class method)": [[272, "test_dolly_pattern.TestTorchOP.tearDownClass"]], "test_dolly_pattern": [[272, "module-test_dolly_pattern"]], "testdynamicquantization (class in test_dynamic_quantization)": [[273, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[273, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[273, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[273, "module-test_dynamic_quantization"]], "testelectra (class in test_electra)": [[274, "test_electra.TestElectra"]], "setupclass() (test_electra.testelectra class method)": [[274, "test_electra.TestElectra.setUpClass"]], "teardownclass() (test_electra.testelectra class method)": [[274, "test_electra.TestElectra.tearDownClass"]], "test_electra": [[274, "module-test_electra"]], "testtorchop (class in test_embedding)": [[275, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[275, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[275, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[275, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[276, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[276, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[276, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[276, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[277, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[277, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[277, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[277, "module-test_execution_options"]], "testfwk (class in test_fwk)": [[278, "test_fwk.TestFWK"]], "setupclass() (test_fwk.testfwk class method)": [[278, "test_fwk.TestFWK.setUpClass"]], "teardownclass() (test_fwk.testfwk class method)": [[278, "test_fwk.TestFWK.tearDownClass"]], "test_fwk": [[278, "module-test_fwk"]], "testtorchop (class in test_gather)": [[279, "test_gather.TestTorchOP"]], "setupclass() (test_gather.testtorchop class method)": [[279, "test_gather.TestTorchOP.setUpClass"]], "teardownclass() (test_gather.testtorchop class method)": [[279, "test_gather.TestTorchOP.tearDownClass"]], "test_gather": [[279, "module-test_gather"]], "testtorchop (class in test_gelu)": [[280, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[280, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[280, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[280, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[281, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[281, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[281, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[281, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[282, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[282, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[282, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[282, "module-test_graph_dispatch"]], "testexecutionoptions (class in test_graph_optimizer)": [[283, "test_graph_optimizer.TestExecutionOptions"]], "setupclass() (test_graph_optimizer.testexecutionoptions class method)": [[283, "test_graph_optimizer.TestExecutionOptions.setUpClass"]], "teardownclass() (test_graph_optimizer.testexecutionoptions class method)": [[283, "test_graph_optimizer.TestExecutionOptions.tearDownClass"]], "test_graph_optimizer": [[283, "module-test_graph_optimizer"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[284, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[284, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[284, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[284, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[285, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[285, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[285, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[285, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[285, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[286, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[286, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[286, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[286, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[287, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[287, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[287, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[287, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[288, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[288, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[288, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[288, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[289, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[289, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[289, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[289, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[290, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[290, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[290, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[290, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[291, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[291, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[291, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[291, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[292, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[292, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[292, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[292, "module-test_llama_pattern"]], "testmain (class in test_main)": [[293, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[293, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[293, "test_main.TestMain.tearDownClass"]], "test_main": [[293, "module-test_main"]], "testtorchop (class in test_matmul)": [[294, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[294, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[294, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[294, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[295, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[295, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[295, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[295, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[296, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[296, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[296, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[296, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[297, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[297, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[297, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[297, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[298, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[298, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[298, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[298, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[299, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[299, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[299, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[299, "module-test_merged_embeddingbag"]], "test_model": [[300, "module-test_model"]], "testtorchop (class in test_neox_rotary_pos_emb)": [[301, "test_neox_rotary_pos_emb.TestTorchOP"]], "setupclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[301, "test_neox_rotary_pos_emb.TestTorchOP.setUpClass"]], "teardownclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[301, "test_neox_rotary_pos_emb.TestTorchOP.tearDownClass"]], "test_neox_rotary_pos_emb": [[301, "module-test_neox_rotary_pos_emb"]], "testonnxutils (class in test_onnx_utils)": [[302, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[302, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[302, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[302, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[303, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[303, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[303, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[303, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[304, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[304, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[304, "test_ops.TestOps.tearDownClass"]], "test_ops": [[304, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[305, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[305, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[305, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[305, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[306, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[306, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[306, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[306, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[307, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[307, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[307, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[307, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[308, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[308, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[308, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[308, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[309, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[309, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[309, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[309, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[310, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[310, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[310, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[310, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[311, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[311, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[311, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[311, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[312, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[312, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[312, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[312, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[313, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[313, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[313, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[313, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[314, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[314, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[314, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[314, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[315, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[315, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[315, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[315, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[316, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[316, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[316, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[316, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[317, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[317, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[317, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[317, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[318, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[318, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[318, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[318, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[319, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[319, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[319, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[319, "module-test_size"]], "testtorchop (class in test_slice)": [[320, "test_slice.TestTorchOP"]], "setupclass() (test_slice.testtorchop class method)": [[320, "test_slice.TestTorchOP.setUpClass"]], "teardownclass() (test_slice.testtorchop class method)": [[320, "test_slice.TestTorchOP.tearDownClass"]], "test_slice": [[320, "module-test_slice"]], "testtorchop (class in test_softmax)": [[321, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[321, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[321, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[321, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[322, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[322, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[322, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[322, "module-test_start_end_logits"]], "testscbuffer (class in test_static_compressed_buffer)": [[323, "test_static_compressed_buffer.TestSCBuffer"]], "setupclass() (test_static_compressed_buffer.testscbuffer class method)": [[323, "test_static_compressed_buffer.TestSCBuffer.setUpClass"]], "teardownclass() (test_static_compressed_buffer.testscbuffer class method)": [[323, "test_static_compressed_buffer.TestSCBuffer.tearDownClass"]], "test_static_compressed_buffer": [[323, "module-test_static_compressed_buffer"]], "testtorchop (class in test_tanh)": [[324, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[324, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[324, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[324, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[325, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[325, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[325, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[325, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[326, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[326, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[326, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[326, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[327, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[327, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[327, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[327, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[328, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[328, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[328, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[328, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[329, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[329, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[329, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[329, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[330, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[330, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[330, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[330, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[331, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[331, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[331, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[331, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[332, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[332, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[332, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[332, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[333, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[333, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[333, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[333, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[334, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[334, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[334, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[334, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[335, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[335, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[335, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[335, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[336, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[336, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[336, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[336, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[337, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[337, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[337, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[337, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[338, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[338, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[338, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[338, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[339, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[339, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[339, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[339, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[347, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[347, "c.NULL_INSTANCE"]], "jd (c++ type)": [[347, "_CPPv42jd"], [348, "_CPPv42jd"], [349, "_CPPv42jd"], [350, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[347, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[347, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_kernel (c++ function)": [[347, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[347, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::create_stream (c++ function)": [[347, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[347, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[347, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[347, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[347, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[347, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[347, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[347, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[347, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[347, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[347, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[347, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[347, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[347, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[347, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[348, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[348, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [348, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[348, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[348, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[348, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [348, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[348, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[348, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[348, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [348, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[348, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[348, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[348, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [348, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[348, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[348, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[348, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [348, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[348, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[348, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[348, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [348, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[348, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[348, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[348, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [348, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[348, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[348, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[348, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [348, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[348, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[348, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[348, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [348, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[348, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[348, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[348, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [348, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[348, "_CPPv4N2jd11gather_descD0Ev"]], "jd::groupnorm (c++ class)": [[348, "_CPPv4N2jd9groupnormE"]], "jd::groupnorm::groupnorm (c++ function)": [[348, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy"], [348, "_CPPv4N2jd9groupnorm9groupnormEv"]], "jd::groupnorm::~groupnorm (c++ function)": [[348, "_CPPv4N2jd9groupnormD0Ev"]], "jd::groupnorm_desc (c++ class)": [[348, "_CPPv4N2jd14groupnorm_descE"]], "jd::groupnorm_desc::groupnorm_desc (c++ function)": [[348, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc"], [348, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv"]], "jd::groupnorm_desc::~groupnorm_desc (c++ function)": [[348, "_CPPv4N2jd14groupnorm_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[348, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[348, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[348, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[348, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [348, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[348, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[348, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[348, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[348, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[348, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t"], [348, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[348, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[348, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[348, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [348, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[348, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[348, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[348, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [348, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[348, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[348, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[348, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [348, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[348, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[348, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[348, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [348, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[348, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[348, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[348, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [348, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[348, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[348, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[348, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [348, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[348, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[348, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[348, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [348, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[348, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[348, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[348, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [348, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[348, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[348, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[348, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [348, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[348, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[348, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[348, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[348, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[348, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[348, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[348, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[348, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[348, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[348, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [348, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[348, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[348, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[348, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [348, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[348, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[348, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[348, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [348, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[348, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[348, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[348, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [348, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[348, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[348, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[348, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [348, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[348, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[348, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[348, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [348, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[348, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[348, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[348, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [348, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[348, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[348, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[348, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [348, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[348, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[348, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[348, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [348, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[348, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[348, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[348, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [348, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[348, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[349, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[349, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[349, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[349, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[349, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[349, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[349, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[349, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[349, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[349, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [349, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [349, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[349, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[349, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[349, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::tensor_dtypes (c++ function)": [[349, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv"]], "jd::operator_desc::tensor_ftypes (c++ function)": [[349, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv"]], "jd::operator_desc::tensor_shapes (c++ function)": [[349, "_CPPv4NK2jd13operator_desc13tensor_shapesEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[349, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[349, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[350, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[350, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[350, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[350, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[350, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[350, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[350, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[350, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[350, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[350, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[350, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[350, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[350, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[350, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[350, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[350, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[350, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[350, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[350, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[350, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[350, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[350, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[350, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[350, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[350, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[350, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[350, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[350, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[350, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[350, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[350, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[350, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[350, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[350, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[350, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[350, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[350, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[350, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[350, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[350, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[350, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::mate (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_data_t::scale (c++ member)": [[350, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_append_sum (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE"]], "jd::ssd::matmul_fp8_param_t::has_scale0 (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_8bit (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3 (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2 (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[350, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_input (c++ type)": [[350, "_CPPv4N2jd3ssd12matmul_inputE"]], "jd::ssd::matmul_input::input (c++ enum)": [[350, "_CPPv4N2jd3ssd12matmul_input5inputE"]], "jd::ssd::matmul_input::input::append_sum (c++ enumerator)": [[350, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME"]], "jd::ssd::matmul_input::input::scale0 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E"]], "jd::ssd::matmul_input::input::src0 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E"]], "jd::ssd::matmul_input::input::src1 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E"]], "jd::ssd::matmul_input::input::src2 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E"]], "jd::ssd::matmul_input::input::zp0 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E"]], "jd::ssd::matmul_input::input::matmul_io_max (c++ enumerator)": [[350, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE"]], "jd::ssd::matmul_io (c++ type)": [[350, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[350, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::append_sum (c++ enumerator)": [[350, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[350, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_output (c++ type)": [[350, "_CPPv4N2jd3ssd13matmul_outputE"]], "jd::ssd::matmul_output::output (c++ enum)": [[350, "_CPPv4N2jd3ssd13matmul_output6outputE"]], "jd::ssd::matmul_output::output::dst0 (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13matmul_output6output4DST0E"]], "jd::ssd::matmul_param_t (c++ struct)": [[350, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[350, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[350, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[350, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[350, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[350, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[350, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[350, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[350, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[350, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[350, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[350, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[350, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[350, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[350, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[350, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[350, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[350, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[350, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[350, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[350, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[350, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[350, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[350, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[350, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[350, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[350, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[350, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[350, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[350, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[350, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[350, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[350, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[350, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[350, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[350, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[350, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[350, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[350, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[350, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[350, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[350, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[350, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[350, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[350, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[350, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[350, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[350, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[350, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[350, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[350, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[350, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[350, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[350, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[350, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[350, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[350, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[350, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[350, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[350, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[350, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[350, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[350, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[350, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[350, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[350, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})