Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/api_doc_example/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_list_construct/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_example", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/intel_extension_for_transformers/api_doc_example/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_list_construct/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_example.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.api_doc_example</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.criteria</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruners</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.regs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "API Document Example", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Neural Engine Support Matrix", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"thi": [0, 3, 10, 142, 155, 174, 175, 204, 205, 206, 207, 208, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 309, 318, 328, 329, 330, 331, 332, 334, 338, 339, 340, 341, 342, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 365, 366, 368, 370], "i": [0, 2, 3, 5, 6, 7, 10, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 191, 198, 201, 204, 205, 206, 207, 209, 211, 216, 217, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 302, 305, 310, 316, 318, 319, 323, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376], "onli": [0, 10, 185, 204, 205, 211, 216, 217, 221, 319, 336, 339, 341, 342, 343, 345, 348, 350, 351, 352, 355, 357, 358, 359, 363, 366, 368], "us": [0, 2, 10, 15, 48, 125, 142, 155, 174, 175, 180, 184, 185, 187, 191, 193, 194, 197, 198, 201, 204, 205, 208, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 328, 329, 330, 331, 332, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370], "refer": [0, 3, 5, 6, 201, 204, 206, 221, 223, 318, 330, 331, 332, 335, 342, 345, 353, 355, 358, 363, 365, 369, 370], "convert": [0, 2, 5, 6, 10, 15, 180, 184, 185, 334, 344, 358, 363, 370], "python": [0, 5, 6, 10, 216, 217, 305, 316, 329, 330, 331, 336, 337, 338, 339, 341, 343, 344, 362], "docstr": [0, 216, 217], "api": [0, 5, 6, 8, 221, 299, 329, 331, 339, 341, 342, 343, 345, 346, 350, 351, 368, 375], "document": [0, 211, 300, 329, 330, 331, 332, 335, 355, 357, 358, 359, 369, 370], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 188, 191, 193, 194, 196, 198, 201, 204, 205, 206, 207, 208, 209, 211, 214, 216, 217, 218, 220, 221, 223, 224, 299, 302, 305, 307, 308, 310, 316, 318, 319, 328, 330, 331, 332, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 363, 366, 368, 369, 370], "creat": [0, 180, 185, 191, 196, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 338, 344, 345, 354, 363, 366], "doc": [0, 143, 204, 221, 338, 342, 350, 359], "usag": [0, 331, 366, 367], "py": [0, 3, 205, 330, 331, 336, 338, 340, 344, 362], "exampl": [0, 8, 10, 122, 185, 206, 216, 217, 221, 299, 300, 322, 328, 330, 331, 332, 335, 338, 339, 341, 342, 344, 345, 346, 348, 350, 352, 366, 369, 370, 375], "def": [0, 185, 318, 319, 331, 338], "fun": 0, "return": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 187, 191, 193, 194, 196, 198, 199, 204, 205, 206, 207, 208, 209, 211, 216, 217, 318, 319, 330, 331, 338, 342, 346, 350, 351, 366], "1": [0, 10, 184, 185, 186, 200, 204, 205, 211, 216, 217, 219, 221, 309, 318, 319, 328, 330, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 366, 368, 369, 370], "x": [0, 143, 188, 216, 217, 341, 351, 354, 355, 357, 358, 363, 370], "2": [0, 10, 185, 187, 204, 205, 216, 309, 318, 319, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 346, 347, 352, 353, 354, 359, 360, 361, 363, 365, 366, 368], "print": [0, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 346], "attribute1": 0, "sourc": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 339, 350, 357, 363, 365], "level": [0, 14, 217, 328, 339, 341, 351, 354, 362], "pleas": [0, 3, 5, 6, 201, 204, 206, 221, 223, 298, 318, 319, 330, 332, 333, 335, 338, 342, 345, 348, 349, 350, 351, 355, 358, 363, 369, 370], "set": [0, 10, 48, 186, 187, 197, 198, 204, 205, 209, 211, 216, 217, 220, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 319, 328, 330, 331, 339, 341, 342, 343, 345, 346, 349, 350, 351, 354, 363], "100": [0, 185, 211, 216, 217, 331, 363, 370], "integ": [0, 204, 205, 208, 330, 334, 341, 342, 359, 363, 369, 370], "type": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 185, 187, 193, 198, 199, 204, 205, 207, 208, 209, 211, 216, 220, 221, 223, 310, 318, 329, 330, 331, 332, 333, 334, 339, 340, 341, 343, 346, 348, 350, 351, 356, 362, 363, 366, 367, 370], "int": [0, 10, 184, 185, 200, 204, 211, 216, 309, 319, 338, 350, 351, 352, 355], "module_debug_level1": 0, "debug": [0, 14], "function1": 0, "param1": 0, "param2": 0, "paramet": [0, 5, 6, 7, 10, 15, 48, 125, 180, 181, 184, 185, 187, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 216, 217, 220, 221, 309, 318, 319, 332, 340, 346, 366, 369], "str": [0, 10, 48, 125, 184, 185, 186, 193, 197, 199, 200, 204, 211, 214, 216, 217, 218, 221, 223, 319, 330], "parameter1": 0, "float": [0, 185, 186, 198, 200, 204, 205, 206, 207, 208, 211, 214, 218, 309, 330, 332, 334, 338, 344, 350, 351, 352, 366, 367, 369, 370], "parameter2": 0, "import": [0, 8, 10, 199, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 319, 330, 331, 332, 335, 338, 339, 341, 343, 346, 350, 351, 355, 366, 367, 368, 369, 370], "o": [0, 10, 221, 318, 330, 331, 336, 347, 351, 356, 361], "rang": [0, 26, 185, 211, 318, 331, 338, 341, 363, 369, 370], "3": [0, 10, 309, 318, 319, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 351, 353, 354, 359, 361, 363, 364, 366], "0": [0, 8, 10, 180, 185, 186, 188, 200, 204, 208, 214, 216, 217, 219, 220, 221, 306, 307, 309, 318, 319, 330, 331, 332, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 351, 352, 353, 354, 355, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370], "valu": [0, 10, 15, 180, 181, 184, 185, 197, 201, 204, 206, 209, 211, 216, 217, 309, 330, 331, 332, 338, 339, 340, 341, 342, 350, 351, 352, 353, 355, 357, 358, 363, 366, 367, 369, 370], "true": [0, 8, 185, 204, 211, 214, 216, 217, 218, 318, 331, 334, 335, 337, 338, 340, 341, 350, 351, 357, 360, 363, 366, 367, 370], "fals": [0, 185, 186, 188, 193, 204, 211, 216, 217, 309, 318, 319, 332, 335, 338, 341, 350, 351, 363, 366], "bool": [0, 185, 186, 193, 204, 211, 214, 216, 217, 218, 306, 307, 308, 309, 319, 332, 338, 350, 351, 366, 367], "function2": 0, "pep": 0, "484": [0, 347], "annot": 0, "style": [0, 329], "from": [0, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 180, 181, 184, 188, 191, 193, 201, 204, 205, 206, 207, 208, 209, 211, 216, 217, 221, 318, 319, 328, 330, 332, 333, 335, 338, 339, 340, 341, 342, 343, 345, 346, 350, 351, 354, 355, 356, 357, 358, 359, 366, 367, 368, 369, 370], "neural_compressor": [0, 185, 197, 211], "config": [0, 2, 8, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 184, 187, 190, 191, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 211, 216, 217, 316, 319, 330, 331, 332, 333, 335, 339, 340, 342, 345, 350, 363, 368, 369], "mixedprecisionconfig": 0, "eval_func": [0, 197, 198, 211, 318], "model": [0, 2, 5, 6, 7, 8, 10, 13, 15, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 159, 160, 161, 163, 164, 178, 179, 181, 184, 185, 188, 190, 191, 194, 197, 198, 199, 204, 205, 206, 208, 209, 211, 220, 221, 316, 318, 330, 332, 333, 335, 337, 338, 341, 342, 346, 347, 350, 355, 356, 357, 358, 361, 365, 366, 367, 369, 370, 379], "accuraci": [0, 185, 191, 211, 318, 332, 333, 335, 355, 363, 366, 367, 369], "conf": [0, 8, 185, 339, 340, 341, 345, 362], "output_model": 0, "mix_precis": 0, "fit": [0, 197, 204, 352], "function3": 0, "none": [0, 2, 8, 15, 47, 48, 73, 180, 181, 184, 185, 186, 187, 188, 191, 194, 197, 198, 199, 200, 209, 211, 214, 216, 217, 218, 219, 220, 309, 318, 330, 332, 333, 334, 340, 366, 367, 369, 370], "arg": [0, 14, 193, 198, 206, 211, 221, 307, 318, 340, 345], "kwarg": [0, 14, 185, 193, 206, 211, 216, 217], "an": [0, 3, 15, 180, 196, 204, 205, 208, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 328, 330, 331, 333, 334, 335, 338, 339, 340, 341, 342, 345, 346, 349, 350, 351, 355, 356, 359, 364, 366, 368, 379], "If": [0, 10, 187, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 332, 334, 338, 339, 340, 341, 342, 343, 346, 350, 356, 363, 365, 366, 369, 370], "ar": [0, 10, 143, 187, 188, 204, 205, 206, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 328, 329, 331, 332, 336, 337, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 367, 369, 370], "accept": [0, 211, 328, 368], "thei": [0, 10, 193, 204, 328, 332, 337, 346, 349, 350, 351, 353, 357, 363], "should": [0, 10, 193, 204, 205, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 339, 341, 342, 345, 346, 349, 350, 351, 356, 363, 364, 366, 367, 370], "list": [0, 5, 6, 7, 8, 10, 15, 48, 180, 181, 185, 186, 197, 200, 204, 206, 211, 216, 217, 331, 332, 337, 338, 339, 342, 350, 351, 364, 370], "option": [0, 10, 184, 185, 193, 197, 199, 204, 211, 216, 217, 318, 319, 340, 346, 350, 359, 363], "argument": [0, 185, 206, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 332, 340, 364, 366, 367, 369, 370], "kei": [0, 8, 10, 15, 180, 204, 206, 209, 211, 216, 217, 299, 331, 340, 341, 342, 350, 351, 353], "dict": [0, 10, 15, 180, 181, 185, 194, 199, 200, 201, 204, 205, 206, 207, 208, 209, 211, 216, 217, 221, 330, 338, 339, 369], "section": [0, 331, 348, 359, 360], "support": [0, 10, 15, 125, 185, 188, 199, 200, 204, 205, 210, 221, 309, 335, 336, 337, 338, 339, 340, 341, 345, 346, 351, 355, 356, 358, 360, 362, 363, 368, 369, 373], "ani": [0, 10, 193, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 338, 346, 368], "restructuredtext": 0, "format": [0, 14, 211, 318, 340, 357, 358, 361, 362, 370], "includ": [0, 201, 204, 207, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 308, 309, 328, 329, 331, 333, 339, 340, 341, 348, 351, 359, 363, 365, 370], "liter": 0, "block": [0, 204, 206, 216, 217, 333, 349, 352, 353, 354, 355, 356, 358, 359, 369], "rais": [0, 204, 205, 209, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "attributeerror": 0, "except": [0, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 350], "valueerror": 0, "equal": [0, 10, 211, 342, 349, 350], "generator1": 0, "n": [0, 10, 188, 204, 216, 217, 309, 330, 332, 341, 342, 344, 347, 349, 352, 353, 354, 355, 358, 359, 361, 363], "gener": [0, 10, 143, 184, 185, 204, 206, 211, 216, 217, 221, 319, 331, 332, 338, 342, 346, 350, 351, 354, 355, 358, 360, 362, 363, 366, 367, 370], "have": [0, 2, 10, 180, 204, 205, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 331, 338, 339, 340, 341, 342, 343, 346, 351, 355, 356, 357, 358, 362, 363, 365, 366, 367, 368, 369, 370], "yield": [0, 370], "next": [0, 2, 8, 208, 216, 217, 318, 342, 343, 350, 352, 354, 356, 357, 358, 359], "number": [0, 15, 185, 187, 188, 204, 205, 208, 217, 221, 319, 330, 341, 342, 346, 349, 352, 355, 358, 359, 363, 364, 370], "example_gener": 0, "4": [0, 10, 185, 200, 204, 211, 216, 217, 309, 318, 319, 328, 330, 332, 333, 336, 338, 340, 341, 342, 345, 346, 347, 353, 354, 355, 356, 359, 360, 363, 369], "exampleclass": 0, "param3": 0, "ha": [0, 5, 6, 7, 10, 204, 205, 221, 318, 329, 330, 331, 338, 341, 342, 344, 345, 346, 349, 351, 355, 363, 370], "public": [0, 306, 307, 308, 309, 328, 345, 350, 351], "mai": [0, 2, 10, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 329, 331, 338, 341, 346, 352, 353, 354, 356, 357, 358, 359, 363, 365, 370], "here": [0, 10, 194, 211, 325, 331, 337, 338, 341, 342, 343, 345, 346, 351, 359, 370, 371, 378], "attr1": 0, "descript": [0, 211, 329, 330, 332, 340, 359, 366, 367, 369, 370], "attr2": 0, "attr5": 0, "after": [0, 10, 122, 142, 155, 174, 175, 201, 204, 205, 206, 207, 208, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 334, 337, 340, 341, 342, 343, 345, 346, 349, 351, 356, 358, 359, 362, 363, 364, 370], "specifi": [0, 10, 185, 187, 194, 196, 198, 200, 210, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 342, 343, 351, 355, 357, 363, 369, 370], "method1": 0, "execut": [0, 194, 205, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 318, 331, 341, 345, 348, 350, 351, 355, 356, 358, 360, 363, 364, 370], "It": [0, 10, 193, 204, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 332, 338, 340, 341, 342, 345, 346, 354, 355, 357, 358, 363], "": [0, 10, 15, 48, 180, 185, 204, 205, 211, 217, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 318, 328, 331, 332, 338, 339, 340, 342, 343, 345, 347, 352, 356, 358, 361, 363, 364, 368, 370], "neural": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 122, 150, 180, 181, 193, 198, 204, 206, 224, 299, 318, 319, 327, 331, 332, 338, 340, 341, 342, 343, 354, 362, 367, 370, 373, 380], "engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 122, 150, 180, 181, 191, 211, 224, 300, 310, 318, 327, 331, 338, 340, 342, 345, 350, 355, 358, 362, 373, 380], "start_pipelin": 2, "pipelin": [2, 190, 191, 194, 374], "graph": [2, 3, 5, 6, 7, 10, 11, 12, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 302, 331, 332, 338, 343, 346, 354, 357, 359, 379], "interfac": [2, 185, 216, 217, 307, 334, 337, 348], "firstli": 2, "loader": [2, 11, 182, 341, 343, 346], "get": [2, 8, 10, 14, 15, 180, 181, 187, 188, 201, 204, 205, 207, 208, 211, 218, 220, 223, 334, 338, 341, 342, 343, 345, 346, 350, 357, 359, 364, 368, 375], "comput": [2, 10, 180, 211, 216, 217, 323, 331, 335, 346, 348, 349, 350, 351, 352, 355, 357, 358, 362, 368, 370, 376], "correspond": [2, 5, 6, 10, 205, 318, 338, 342, 346, 348, 355, 359, 362, 370], "framework": [2, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 122, 185, 191, 199, 211, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 323, 332, 333, 336, 338, 339, 343, 348, 368, 369, 370, 376], "contain": [2, 10, 15, 143, 180, 181, 204, 205, 206, 208, 209, 211, 216, 217, 221, 318, 323, 330, 332, 338, 339, 341, 342, 346, 348, 350, 362, 363, 364, 369, 370, 376], "node": [2, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 142, 155, 174, 175, 180, 181, 220, 334, 346, 347, 361], "edg": 2, "op": [2, 5, 6, 7, 10, 11, 15, 107, 122, 132, 180, 181, 182, 185, 211, 309, 340, 345, 346, 350, 351, 363, 364, 370], "tensor": [2, 5, 6, 7, 8, 10, 11, 15, 36, 63, 122, 180, 181, 182, 184, 201, 204, 205, 207, 208, 211, 216, 217, 309, 338, 339, 340, 342, 343, 345, 357, 362, 363, 369, 370], "Then": [2, 10, 332, 342, 343, 358, 359, 363, 369, 370], "extract": [2, 3, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 338, 341, 343], "pack": [2, 11, 36, 182, 359], "them": [2, 5, 6, 10, 338, 339, 342, 350, 353, 355, 358, 359, 370], "our": [2, 330, 334, 346, 350, 352, 353, 355, 357, 358, 359, 368], "form": [2, 10, 211, 332, 340, 346, 349, 354, 358, 363], "exploit": [2, 346], "abov": [2, 10, 216, 217, 337, 338, 341, 342, 346, 352, 353, 355, 356, 357, 362], "consist": [2, 329], "sub": [2, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 338, 341, 342, 350, 357, 358], "which": [2, 5, 6, 7, 10, 180, 185, 187, 191, 193, 201, 204, 205, 208, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 330, 332, 337, 338, 339, 341, 342, 346, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 362, 363, 366, 369, 370], "can": [2, 10, 107, 122, 143, 193, 204, 205, 206, 208, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 330, 331, 332, 334, 338, 339, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 367, 368, 369, 370], "see": [2, 10, 143, 216, 217, 298, 328, 331, 338, 340, 341, 342, 343, 346, 347, 349, 354, 358, 360, 361, 362, 363, 365], "new": [2, 5, 6, 7, 10, 15, 204, 208, 211, 329, 346, 350, 351, 364, 371], "big": [2, 341, 342], "like": [2, 5, 6, 7, 10, 143, 180, 204, 221, 330, 331, 332, 335, 338, 339, 340, 341, 342, 343, 346, 350, 351, 353, 360, 366, 367, 369, 370], "layernorm": [2, 10, 39, 110, 338, 342, 346, 348, 363], "There": [2, 332, 338, 339, 340, 356, 360, 363, 367, 369], "differ": [2, 8, 13, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 159, 160, 161, 163, 164, 178, 179, 187, 196, 204, 318, 328, 330, 331, 332, 335, 338, 339, 341, 342, 343, 346, 349, 356, 359, 366, 367, 369, 370], "flow": [2, 10, 338, 342], "one": [2, 5, 6, 10, 204, 206, 208, 216, 309, 318, 331, 332, 335, 337, 338, 340, 341, 342, 346, 350, 352, 353, 358, 362, 363, 368], "subgraph": [2, 10, 150, 341, 343], "final": [2, 204, 205, 341, 342, 343, 345, 346, 352, 355, 356, 358, 366], "yaml": [2, 8, 10, 194, 196, 209, 211, 340, 341, 343, 362], "file": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 125, 150, 185, 188, 191, 193, 194, 196, 206, 209, 211, 212, 221, 224, 330, 331, 338, 339, 340, 341, 343, 345, 350, 351, 362, 363, 364, 365], "bin": [2, 8, 197, 339, 340, 341, 343, 360, 362], "configur": [2, 89, 185, 187, 193, 194, 196, 198, 200, 204, 206, 209, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 309, 318, 330, 333, 334, 341, 349, 350, 354, 371], "infer": [2, 8, 13, 184, 198, 211, 217, 299, 333, 335, 337, 338, 340, 341, 342, 343, 353, 355, 356, 358, 367, 370, 377], "base": [3, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 193, 199, 201, 204, 211, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 318, 330, 331, 334, 335, 336, 343, 344, 345, 347, 352, 354, 355, 356, 357, 358, 360, 361, 368], "tensorflow": [3, 6, 16, 17, 18, 19, 20, 22, 27, 29, 34, 37, 38, 41, 42, 43, 45, 46, 49, 50, 52, 53, 56, 58, 59, 62, 71, 72, 76, 180, 185, 191, 198, 220, 316, 335, 336, 339, 346, 370], "onnx": [3, 5, 15, 181, 185, 211, 331, 335, 338, 340, 341, 357, 368, 374, 379], "onnx_extractor": [3, 4, 11, 182], "tf_extractor": [3, 4, 11, 182], "more": [3, 5, 6, 10, 143, 204, 298, 332, 335, 337, 338, 340, 342, 343, 345, 346, 347, 348, 349, 350, 353, 355, 356, 357, 359, 361, 362, 363], "detail": [3, 10, 318, 323, 325, 328, 329, 331, 332, 333, 335, 337, 338, 340, 341, 342, 345, 346, 347, 348, 353, 360, 361, 363, 369, 370, 376, 378], "A": [3, 10, 187, 194, 199, 201, 204, 205, 206, 207, 208, 209, 211, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 339, 346, 347, 349, 352, 353, 359, 361, 362, 363], "super": [3, 338, 341], "oper": [3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 122, 180, 181, 204, 308, 310, 323, 333, 337, 338, 339, 341, 343, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 363, 370, 376, 379], "do": [3, 185, 188, 197, 198, 206, 211, 328, 334, 338, 339, 341, 342, 346, 350, 352, 369, 370], "addit": [3, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 331, 333, 340, 352, 356, 364, 371], "attribut": [3, 5, 6, 7, 10, 48, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 306, 307, 318, 340, 342, 345, 351], "without": [3, 197, 205, 211, 328, 332, 338, 339, 356, 359, 360, 363], "modifi": [3, 8, 10, 107, 122, 206, 217, 339, 340, 343], "topologi": 3, "modul": [4, 9, 11, 12, 36, 100, 195, 203, 318, 343, 344], "torch_extractor": [4, 11, 182], "all": [5, 6, 7, 8, 10, 11, 36, 48, 122, 125, 182, 204, 205, 206, 211, 216, 217, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 318, 328, 331, 332, 337, 338, 339, 340, 342, 346, 347, 350, 351, 352, 353, 355, 358, 361, 362, 366, 369, 370], "input": [5, 6, 8, 10, 15, 26, 122, 143, 180, 181, 184, 198, 199, 204, 205, 211, 216, 217, 309, 318, 319, 330, 331, 332, 334, 335, 339, 340, 341, 342, 345, 354, 356, 357, 359, 363, 368], "compos": [5, 6, 7, 191, 211, 318, 338, 343, 358], "order": [5, 6, 8, 10, 191, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 330, 338, 340, 346, 349, 355, 356, 358, 359], "origin": [5, 6, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 204, 205, 206, 209, 221, 330, 332, 338, 343, 356, 357, 370], "calcul": [5, 6, 143, 188, 201, 204, 206, 207, 318, 340, 346, 349, 351, 352, 355, 356, 359, 363, 370], "notic": [5, 6, 343, 350, 357, 358, 365], "map": [5, 6, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 204, 207, 211, 318, 331, 332, 349, 370], "between": [5, 6, 205, 216, 217, 309, 318, 332, 356, 359, 363, 370], "For": [5, 6, 10, 15, 122, 204, 206, 298, 318, 328, 331, 335, 338, 341, 342, 346, 347, 348, 350, 353, 357, 358, 359, 360, 361, 368], "relat": [5, 6, 207, 211, 325, 332, 338, 342, 346, 353, 358, 369, 370, 378], "deatil": [5, 6], "onnxextractor": 5, "decor": [5, 6, 7, 15, 48, 125, 180, 181, 204, 205, 208], "graph_def": [5, 6, 7, 180], "input_tensor": [5, 6, 7, 10, 15, 48, 180, 181, 216, 217, 338, 342], "output_tensor": [5, 6, 7, 10, 15, 48, 180, 181, 338, 342], "record": [5, 6, 7, 318, 340, 341], "dest": [5, 6, 7, 10, 15, 180], "name": [5, 6, 7, 8, 10, 15, 48, 73, 125, 180, 185, 186, 193, 199, 200, 201, 204, 205, 207, 208, 214, 218, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 344, 346, 347, 351, 361, 362, 365, 366, 367, 368, 369, 370], "object": [5, 6, 7, 180, 185, 190, 194, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 211, 213, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 319, 331, 332, 335, 338, 345, 369, 374], "onnxmodel": [5, 15], "tensorflowextractor": 6, "tensorflowmodel": [6, 180], "torch": [7, 143, 181, 184, 185, 204, 211, 216, 217, 319, 331, 368], "torchextractor": 7, "torchscript": [7, 67, 181, 184, 185, 211, 319], "defint": 8, "add_config_item": 8, "val": [8, 209], "add": [8, 10, 26, 185, 188, 206, 209, 332, 339, 340, 341, 342, 346, 348, 350, 351, 358, 363, 364, 379], "pair": [8, 185, 216, 339, 351, 359], "framework_modeling_config": 8, "inquire_config_item": 8, "insert_nod": 8, "index": [8, 216, 217, 220, 309, 342, 345, 346], "insert": [8, 10, 343, 345, 346, 350, 351, 370], "ir": [8, 338, 339, 340, 341, 360, 362, 379], "remove_nod": 8, "node_nam": [8, 10, 15, 180, 338, 342], "remov": [8, 132, 217, 328, 329, 351, 369], "get_node_id": [8, 338], "id": [8, 10, 193, 217, 220, 351, 352], "accord": [8, 204, 208, 338, 341, 359], "get_node_by_nam": 8, "rename_nod": 8, "old_nam": 8, "new_nam": 8, "change_node_input_tensor": 8, "mode": [8, 184, 186, 200, 205, 210, 318, 340, 344, 356, 358, 363, 364, 370], "change_node_output_tensor": 8, "output": [8, 10, 15, 26, 180, 181, 185, 197, 204, 205, 211, 216, 217, 318, 330, 332, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 354, 355, 356, 357, 359, 363, 368], "get_pre_node_nam": 8, "previou": [8, 191, 204, 211, 331, 339, 371], "get_next_node_nam": 8, "get_tensor_idx": 8, "tensor_nam": [8, 15, 180], "from_output": 8, "modify_node_connect": 8, "dump_tensor": 8, "tensor_list": 8, "dump": [8, 370], "engine_init": 8, "net_info": 8, "weight_data": 8, "b": [8, 10, 15, 216, 309, 338, 346, 349, 352, 353, 354, 358, 359, 362, 363], "pybind": 8, "executor": [8, 338, 339, 340], "input_data": [8, 10, 11, 100, 182, 339], "graph_init": [8, 339, 341], "initi": [8, 10, 15, 48, 185, 194, 205, 211, 216, 217, 309, 318, 350, 351, 355, 368, 369], "newgraph": 8, "out": [8, 10, 204, 211, 329, 331, 338, 339, 342, 348, 357, 370], "input_0": [8, 339, 341], "input_1": [8, 339, 341], "input_2": [8, 339, 341], "save": [8, 188, 197, 211, 330, 331, 338, 339, 340, 343, 353, 357, 359, 370], "output_dir": [8, 197, 211, 318, 330, 343, 344], "ymal": 8, "graph_dispatch": [8, 341], "tune": [8, 185, 211, 330, 332, 365, 366, 367, 369, 379], "inputs_shap": [8, 341], "dispatch": 8, "get_sparse_nodes_nam": 8, "threshold": [8, 204, 363], "7": [8, 10, 309, 318, 331, 333, 336, 337, 338, 342, 344, 346, 347, 353, 361, 363, 366, 370], "sparsiti": [8, 185, 204, 205, 206, 208, 347, 362, 363, 369], "spars": [8, 205, 299, 309, 331, 341, 348, 349, 358, 363, 377], "transpose_mode_int8": 8, "node_name_list": 8, "transpos": [8, 11, 36, 61, 182, 204, 216, 217, 340, 341, 348, 349, 353, 355, 356, 359, 363, 377], "innerproduct": [8, 26, 107, 340, 341, 348], "reorder": [8, 11, 36, 182, 355, 356], "util": [10, 15, 180, 181, 185, 187, 190, 202, 222, 330, 338, 346, 349, 355, 356, 359, 363], "names_from_input": 10, "static": [10, 218, 306, 309, 340, 343, 350, 353, 355, 368], "method": [10, 188, 196, 200, 207, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 330, 333, 350, 353, 355, 358, 360, 369, 370], "valid": [10, 185, 198, 204, 205, 209, 211, 319, 329, 330, 332, 335, 346, 365, 371, 378], "string": [10, 15, 180, 181, 188, 194, 196, 204, 205, 206, 207, 208, 209, 220, 221, 308, 330, 332, 338, 341, 342, 345, 351, 366, 367, 369, 370], "defin": [10, 185, 194, 196, 197, 204, 205, 206, 207, 208, 211, 306, 318, 328, 331, 332, 338, 339, 345, 346, 359, 364, 366, 369, 370], "field": [10, 185, 330, 350, 351, 370], "tupl": [10, 187, 199, 204, 216, 217], "In": [10, 191, 204, 205, 207, 211, 216, 318, 328, 331, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 366, 367, 370], "nodedef": [10, 180], "end": [10, 205, 206, 216, 217, 221, 299, 331, 340, 343, 345, 346, 351, 360], "also": [10, 204, 329, 331, 338, 339, 340, 342, 343, 345, 346, 349, 350, 351, 352, 355, 358, 359, 360, 367, 370], "get_data_dtyp": 10, "data": [10, 73, 184, 204, 221, 223, 309, 318, 331, 333, 338, 339, 341, 343, 344, 345, 349, 350, 351, 352, 355, 356, 359, 363, 370, 374, 378], "const": [10, 15, 180, 306, 307, 308, 309, 345, 348, 350, 351, 352, 353], "dtype": [10, 15, 73, 180, 181, 211, 331, 334, 339, 340, 341, 345], "numpi": [10, 15, 331, 339], "dtypes_dict": 10, "autocast_init": 10, "quant": [10, 107, 185, 348, 363, 370, 377], "info": [10, 14, 15, 143, 180, 181, 204, 209, 318, 331, 338, 339, 360], "set_autocast": 10, "get_autocast_info": 10, "quant_info_init": 10, "insert_quant_info": 10, "get_quant_info": 10, "search_straight_pattern": [10, 346], "input_pattern": [10, 346], "search": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 185, 188, 191, 194, 211, 318, 333, 342], "user": [10, 205, 206, 209, 216, 217, 221, 299, 300, 318, 319, 322, 325, 331, 334, 338, 340, 342, 344, 355, 357, 360, 363, 367, 368, 375, 378], "pattern": [10, 11, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 190, 202, 205, 207, 307, 343, 349, 352, 362, 369, 379], "intern": [10, 342, 355], "grpah": [10, 15, 180], "structur": [10, 205, 333, 338, 339, 341, 354, 358, 362, 369], "attent": [10, 216, 217, 307, 318, 328, 340, 346, 357], "chain": [10, 350, 351], "call": [10, 205, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 334, 338, 341, 342, 349, 350, 351, 355, 358, 359, 370], "must": [10, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 336, 342, 346, 349, 350, 352, 359], "straight": 10, "sequenc": [10, 187, 204, 216, 217, 331, 335, 338, 342, 346, 354, 363], "mean": [10, 11, 36, 182, 185, 204, 216, 217, 221, 309, 330, 338, 339, 340, 341, 342, 346, 349, 350, 352, 356, 359, 363, 366, 369, 370], "otherwis": [10, 328, 338, 341, 355, 363], "op_typ": [10, 15, 48, 180, 181, 338, 341, 342, 351], "element": [10, 204, 206, 211, 338, 346, 348, 352, 354, 357, 359, 363, 377], "could": [10, 204, 206, 307, 328, 338, 339, 340, 342, 343, 346, 353, 362, 363, 369, 370], "mandatori": 10, "while": [10, 205, 339, 342, 346, 352, 355, 358, 363, 370], "stand": [10, 338], "mybe": 10, "mul": [10, 338, 342, 346, 350], "addv2": [10, 26, 346], "below": [10, 185, 299, 318, 329, 330, 331, 332, 338, 339, 341, 343, 346, 349, 354, 356, 357, 358, 359, 367], "extractor": [10, 11, 182, 341, 343, 346], "length": [10, 185, 187, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 331, 342, 346, 350, 363, 370], "match": [10, 318, 332, 341, 342, 346, 354, 357], "result": [10, 191, 198, 211, 318, 319, 328, 331, 333, 338, 341, 342, 347, 350, 351, 352, 355, 356, 357, 358, 359, 361, 365, 369, 370], "24": [10, 318, 346, 347, 353, 361], "layer": [10, 185, 187, 204, 206, 209, 216, 217, 318, 340, 346, 350, 354, 357, 369, 377], "each": [10, 143, 185, 191, 204, 205, 211, 216, 217, 221, 318, 330, 340, 341, 342, 349, 352, 354, 355, 356, 357, 358, 359, 362, 363, 364, 369], "still": [10, 206, 346, 352, 370], "last": [10, 185, 201, 204, 211, 216, 217, 342, 346, 349, 354, 355, 357, 370], "former": [10, 346], "search_pattern": [10, 346], "pattern_list": 10, "complet": [10, 338, 347, 352, 355, 358, 361], "represent": [10, 328, 335, 338, 342, 343], "its": [10, 122, 191, 204, 205, 211, 318, 328, 332, 338, 342, 343, 346, 354, 355, 356, 359, 362, 363, 365], "op_idx": 10, "howev": [10, 206, 341, 342, 346, 349, 353, 356, 359], "due": [10, 216, 342, 346, 349, 370], "few": [10, 354], "complic": [10, 338, 346], "therefor": [10, 334, 349, 354, 357, 359, 370], "fist": 10, "repres": [10, 204, 205, 206, 207, 208, 209, 328, 340, 342, 346, 349, 351, 352, 355, 370], "main": [10, 206, 211, 216, 217, 221, 342, 356, 363], "top": [10, 299, 330, 331, 354], "down": 10, "head": [10, 216, 217, 346, 351, 357, 358], "tail": [10, 346, 360], "left": [10, 204, 216, 217, 353, 357, 359], "bert_large_squad": 10, "pb": [10, 335], "squareddiffer": [10, 26, 346], "rsqrt": [10, 26, 346], "5": [10, 83, 84, 85, 86, 87, 151, 152, 153, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 185, 186, 309, 318, 319, 330, 332, 338, 339, 340, 342, 345, 346, 347, 353, 361, 363], "8": [10, 309, 318, 331, 333, 334, 336, 338, 340, 342, 344, 346, 347, 351, 352, 353, 359, 360, 361, 363, 370], "9": [10, 185, 221, 318, 330, 331, 335, 336, 338, 346, 347, 353, 361, 363, 369], "6": [10, 309, 318, 332, 333, 337, 338, 342, 346, 347, 351, 353, 360, 361, 370], "same": [10, 204, 217, 332, 334, 338, 339, 340, 342, 343, 346, 349, 352, 355, 356, 359, 362, 363, 364], "func": [10, 318, 341], "follow": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 216, 217, 302, 305, 310, 316, 319, 328, 329, 330, 331, 332, 336, 338, 340, 341, 342, 343, 345, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 370], "frozen": [10, 339, 343], "you": [10, 185, 197, 216, 217, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 329, 330, 331, 332, 334, 338, 339, 341, 342, 343, 346, 350, 351, 353, 360, 362, 363, 365, 366, 368, 369, 370, 371], "had": [10, 338], "better": [10, 191, 198, 211, 318, 338, 339, 340, 341, 349, 355, 356, 357, 358, 362, 366, 367, 370], "identifi": [10, 193, 352], "your": [10, 211, 221, 223, 329, 330, 331, 335, 338, 339, 340, 341, 342, 350, 351, 363, 365, 368], "own": [10, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 342, 343, 350, 356, 367], "casual": 10, "tf": [10, 198, 216, 318], "control": [10, 184, 185, 318, 338], "start": [10, 205, 216, 217, 340, 346, 364, 375], "mostli": [10, 346], "longest": [10, 346], "path": [10, 185, 191, 193, 194, 196, 197, 206, 209, 211, 220, 221, 330, 331, 335, 339, 340, 341, 343, 360, 362, 363], "sometim": [10, 342, 370], "connect": [10, 201, 369], "But": [10, 339, 349, 368], "don": [10, 185, 204, 216, 217, 345, 350], "t": [10, 185, 204, 216, 217, 307, 309, 318, 330, 332, 345, 349, 350, 352, 357, 358, 359, 363, 369], "need": [10, 107, 185, 204, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 330, 331, 332, 338, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 363, 369, 370, 371], "least": [10, 204, 206, 356], "doesn": [10, 318, 350, 359, 363], "exist": [10, 193, 221, 318, 335, 338, 368], "relationship": 10, "sever": [10, 208, 330, 338, 343, 346, 349, 363, 370], "split": [10, 11, 36, 182, 319, 330, 341, 349, 353, 356], "representtaion": 10, "two": [10, 204, 205, 208, 211, 332, 338, 341, 342, 344, 345, 350, 351, 353, 355, 356, 357, 358, 359, 367, 368, 369, 370], "idx": [10, 309, 351], "some": [10, 122, 217, 331, 338, 339, 340, 341, 342, 345, 346, 350, 351, 355, 359, 370], "outsid": [10, 216, 217, 342, 346], "give": [10, 338, 342, 349], "just": [10, 217, 331, 338, 339, 340, 341, 342, 343, 346, 351, 359, 362, 366], "empti": [10, 26, 342, 346, 351, 364], "algorithm": [10, 48, 125, 185, 194, 309, 318, 330, 341, 342, 345, 346, 349, 350, 356, 363, 369, 370], "kind": [10, 89, 308, 345, 356, 363], "beaus": 10, "make": [10, 48, 122, 204, 205, 208, 211, 319, 328, 329, 337, 338, 339, 348, 349, 350, 351, 352, 354, 355, 356, 357, 360, 363], "sure": [10, 122, 204, 205, 208, 319, 338, 352, 363], "whole": [10, 191, 318, 333, 340, 341, 344, 354, 355, 356, 358, 360], "so": [10, 193, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 332, 337, 338, 341, 342, 345, 346, 350, 352, 353, 354, 355, 356, 358, 359, 360, 363, 366, 367, 369, 370], "check": [10, 15, 107, 185, 204, 205, 209, 211, 325, 329, 331, 338, 341, 342, 346, 351, 378], "symmetr": [10, 346, 355, 363, 370], "consecut": [10, 353, 359], "y": [10, 143, 351], "shape": [10, 11, 36, 73, 182, 204, 216, 217, 309, 318, 331, 339, 340, 341, 345, 349, 355, 357, 363], "df": [10, 346], "duplic": 10, "would": [10, 204, 338, 342, 343, 346, 360], "perform": [10, 185, 191, 194, 205, 207, 211, 216, 217, 218, 318, 319, 323, 331, 332, 334, 335, 339, 340, 341, 344, 349, 352, 353, 354, 355, 356, 357, 358, 359, 363, 366, 367, 369, 370, 376], "befor": [10, 185, 201, 204, 205, 206, 207, 208, 211, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 319, 329, 332, 334, 338, 339, 341, 342, 343, 346, 350, 351, 352, 353, 355, 356, 358, 363, 370], "splice": 10, "de": 10, "total": [10, 185, 187, 204, 205, 208, 216, 318, 319, 330, 342, 346, 352, 359, 360], "step": [10, 185, 201, 204, 205, 206, 207, 208, 211, 337, 338, 340, 342, 343, 344, 345, 346, 350, 355, 357, 358, 363], "c": [10, 309, 310, 331, 336, 337, 338, 339, 341, 346, 347, 352, 354, 361, 363], "d": [10, 318, 330, 332, 349, 357], "e": [10, 143, 185, 191, 204, 211, 318, 328, 331, 332, 341, 350, 351, 355, 356, 357, 363, 364], "f": [10, 309, 332, 345, 360, 370], "c1": 10, "d1": [10, 363], "c2": 10, "d2": 10, "c3": [10, 360], "d3": [10, 360], "now": [10, 221, 337, 338, 339, 341, 342, 343, 350, 351, 358, 363, 368], "part": [10, 205, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 342, 345, 346, 358, 359], "As": [10, 332, 338, 340, 342, 343, 353, 357, 359], "appli": [10, 185, 204, 205, 328, 333, 335, 350, 351, 355, 356, 357, 359, 363, 369, 370], "everi": [10, 204, 205, 206, 338, 349, 363], "right": [10, 216, 217, 328, 353, 357, 359, 368], "construct_nod": 10, "attr": [10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 308, 338, 339, 350, 351], "ordereddict": [10, 48, 338], "construct": [10, 48, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 350, 351], "new_nod": 10, "insert_pattern": 10, "target_node_nam": 10, "replac": [10, 217, 331, 332, 335, 338, 342, 369, 370], "specif": [10, 193, 194, 209, 308, 310, 318, 328, 332, 336, 338, 341, 342, 349, 354, 355, 356, 362, 363, 366, 367, 368, 370], "ccontain": 10, "insid": [10, 342, 345, 354, 356], "been": [10, 204, 205, 216, 217, 329, 332, 351, 355, 368], "pattern_map": [10, 338, 342], "pattern_nam": 10, "mapping_dict": 10, "custom": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 198, 211, 221, 318, 340, 342, 379], "mapping_config": 10, "first": [10, 185, 211, 330, 337, 338, 341, 342, 344, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 370], "second": [10, 185, 216, 217, 319, 337, 342, 344, 345, 346, 353, 354, 357, 359, 360, 363, 370], "third": [10, 342, 354, 359, 365], "requir": [10, 122, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 335, 342, 344, 346, 347, 349, 352, 353, 355, 363, 370], "old": 10, "reshap": [10, 11, 36, 53, 142, 155, 174, 175, 182, 204, 338, 339, 340, 345], "paddingsequ": [10, 51, 124, 339], "search_mod": [10, 338, 342], "embed": [10, 216, 217, 339, 342, 346, 350], "m": [10, 204, 309, 331, 332, 333, 340, 341, 347, 349, 352, 353, 354, 355, 356, 358, 359, 361, 363], "fusion": [10, 89, 122, 345, 346, 350, 351, 356, 379], "about": [10, 201, 328, 331, 338, 342, 345, 347, 351, 359, 361], "in_pattern": 10, "input_id": [10, 216, 217, 335, 339], "segment_id": [10, 335, 339], "input_mask": [10, 205, 335, 339], "out_pattern": 10, "th": [10, 342], "berfor": 10, "match_result": 10, "_n": 10, "reshape_0": [10, 342], "where": [10, 26, 204, 216, 217, 318, 332, 342, 349, 351, 354, 355, 357, 359, 363, 364], "go": [10, 352], "mayb": [10, 341, 359], "happen": [10, 340, 359], "sepcial": 10, "biasadd": [10, 20, 342, 346], "bia": [10, 15, 185, 309, 340, 363], "unfix": 10, "locat": [10, 73, 338, 339, 342, 346, 359, 363, 371], "other": [10, 63, 107, 193, 309, 328, 329, 330, 331, 338, 339, 340, 341, 342, 346, 347, 355, 358, 359, 361, 363, 365, 370], "write": [10, 330, 338, 346, 355, 356, 358], "note": [10, 204, 206, 319, 333, 336, 338, 339, 340, 341, 342, 344, 345, 346, 350, 351, 357, 358, 359, 363, 370], "That": [10, 358, 359], "too": [10, 338, 349, 350, 355], "decompos": [10, 338], "list2str": [10, 338], "src_perm": 10, "emit": [10, 342], "ret": [10, 346, 360], "str2list": 10, "src_str": 10, "pattern_mapping_conf_valid": 10, "conf_dict": 10, "lazyimport": 10, "module_nam": [10, 201, 205, 207, 208], "lazi": 10, "till": 10, "later": [10, 338, 346], "get_model_fwk_nam": 10, "detect": 10, "belong": [10, 338, 370], "avail": [10, 302, 305, 310, 316, 331, 354], "fwk": 10, "na": [10, 185, 190, 211, 330, 348], "assert": [11, 36, 182, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318], "batch_matmul": [11, 36, 182], "batch_matmul_v2": [11, 36, 182], "bias_add": [11, 15, 36, 182], "cast": [11, 36, 182], "concat": [11, 36, 182, 338], "conv": [11, 36, 182, 185, 204, 340, 341, 351], "co": [11, 36, 182, 193, 331], "empty_op": [11, 36, 182, 338], "expand_dim": [11, 36, 182], "fused_batch_matmul_v2": [11, 36, 182], "fused_batch_norm_v3": [11, 36, 182], "fused_gemm": [11, 36, 182], "fused_matmul": [11, 36, 182], "gather": [11, 36, 182, 204, 211, 216, 217, 307, 338, 350], "gather_el": [11, 36, 182, 338], "gelu": [11, 36, 100, 182, 338, 345, 348, 351, 363], "gemm": [11, 36, 182, 185, 334, 349, 352, 358, 363, 377], "iterator_get_next": [11, 36, 182], "iterator_v2": [11, 36, 182, 338], "layer_norm": [11, 36, 100, 182, 338], "log_softmax": [11, 36, 182], "map_and_batch_dataset": [11, 36, 182, 338], "matmul": [11, 15, 26, 36, 107, 182, 185, 204, 334, 340, 342, 343, 346, 348, 358, 363, 377], "mkl_layer_norm": [11, 36, 182], "model_dataset": [11, 36, 182], "one_hot": [11, 36, 182], "onnx_input": [11, 36, 182], "optimize_dataset": [11, 36, 182, 338], "padding_sequ": [11, 36, 100, 182, 339], "placehold": [11, 36, 182], "pos_emb": [11, 36, 182], "pow": [11, 36, 182, 338, 342], "quantize_linear": [11, 36, 182, 338], "quantize_v2": [11, 36, 182], "quantized_fused_matmul_and_dequant": [11, 36, 182], "quantized_matmul_with_bias_and_dequant": [11, 36, 182], "reduce_mean": [11, 36, 182, 338], "reduce_sum": [11, 36, 182], "rsub": [11, 36, 182], "scatter_el": [11, 36, 182], "sin": [11, 36, 182], "size": [11, 36, 182, 184, 185, 204, 211, 216, 217, 318, 328, 331, 335, 339, 341, 349, 352, 354, 356, 357, 358, 363, 370], "softmax": [11, 36, 182, 216, 307, 318, 332, 348, 357, 358], "squeez": [11, 36, 182], "strided_slic": [11, 36, 182], "top_k": [11, 36, 182, 221], "unpack": [11, 36, 182, 211, 338], "unsqueez": [11, 36, 182, 338], "view": [11, 36, 182, 329, 340, 349, 371], "sub_graph": [11, 182, 338, 341], "innerproductreshapefus": [11, 96, 100, 182], "add_cls_token": [11, 100, 182], "add_embed": [11, 100, 182], "arangewithreciproc": [11, 100, 182], "attentionblock_attentionmaskaddreshap": [11, 100, 182], "attentionblock_constantofshapewithmul": [11, 100, 182], "attentionblock_qkvprereshap": [11, 100, 182], "attentionblock_qkvreshap": [11, 100, 182], "attentionblock_resize2gath": [11, 100, 182], "attentionblock_weightreshapeto4d": [11, 100, 182], "attention_mask_length_adaptive_keep_indic": [11, 100, 182], "attention_output_layer_norm_length_adaptive_keep_indic": [11, 100, 182], "attention_reshap": [11, 100, 182], "cast_to": [11, 100, 182], "collect_quant_info": [11, 100, 182], "conv_reshap": [11, 100, 182], "decoder_attn_reshap": [11, 100, 182], "einsumwitharang": [11, 100, 182], "embeddingbag": [11, 26, 100, 182], "generate_sequ": [11, 100, 182], "innerproductwithbiasgelu": [11, 100, 182], "innerproductwithslic": [11, 100, 182], "input_fil": [11, 100, 182], "insert_bf16_nod": [11, 100, 182], "insert_quant_nod": [11, 100, 182], "int8_bf16_mixed_precision_check": [11, 100, 182], "interact_featur": [11, 100, 182], "last_layer_shap": [11, 100, 182], "layer_norm_with_reduce_mean": [11, 100, 182, 338], "layer_norm_with_transpos": [11, 100, 182], "matmul_with_bia": [11, 100, 182], "matmul_with_bias_add": [11, 100, 182], "matmul_with_bias_gelu": [11, 100, 182], "matmul_with_bias_relu": [11, 100, 182], "matmul_with_bias_sigmoid": [11, 100, 182], "matmul_with_bias_tanh": [11, 100, 182], "matmul_with_transpos": [11, 100, 182], "merged_embeddingbag": [11, 100, 182], "operator_adaptor": [11, 100, 182], "output_data": [11, 100, 182, 339], "position_embed": [11, 100, 182], "position_embeddings_v1": [11, 100, 182], "qkv_merg": [11, 100, 182], "qkv_reshap": [11, 100, 182], "quantize_fus": [11, 100, 182], "quantized_graph_dtype_refactor": [11, 100, 182], "remove_constant_op": [11, 100, 182], "remove_last_view": [11, 100, 182], "remove_list_construct": [11, 100, 182], "remove_rang": [11, 100, 182], "removeslic": [11, 100, 182], "reshape_after_restore_hidden_st": [11, 100, 182], "reshape_before_and_after_attention_out_layer_norm_gather_el": [11, 100, 182], "reshape_before_restore_hidden_st": [11, 100, 182], "reshape_fus": [11, 100, 182], "resnetblock_instancenormreshapefromconv": [11, 100, 182], "resnetblock_instancenormreshapefromdiv": [11, 100, 182], "restore_hidden_states_in_length_adaptive_update_indic": [11, 100, 182], "rotary_pos_emb": [11, 100, 182], "slicemask": [11, 100, 182], "stablediffusion_reshapefus": [11, 100, 182], "stablediffusion_bf16convert": [11, 100, 182], "start_end_logit": [11, 100, 182], "subgraph_match": [11, 100, 182, 341], "textencdoer_word_embed": [11, 100, 182], "textencoder_attentionmaskaddreshap": [11, 100, 182], "textencoder_attentionreshap": [11, 100, 182], "textencoder_kvreshap": [11, 100, 182], "textencoder_mulreshap": [11, 100, 182], "textencoder_qreshap": [11, 100, 182], "textencoder_softmaxreshap": [11, 100, 182], "textencoder_causal_attention_mask": [11, 100, 182], "token_type_embed": [11, 100, 182, 338], "token_type_embeddings_v1": [11, 100, 182, 338], "torch_embed": [11, 100, 182], "torch_ip_insert_bia": [11, 100, 182], "torchinsertbf16nod": [11, 100, 182], "torchpaddingsqu": [11, 100, 182], "transformer2dmodel_attentionmaskaddreshap": [11, 100, 182], "transformer2dmodel_constantofshapewithmul": [11, 100, 182], "transformer2dmodel_ffnslic": [11, 100, 182], "transformer2dmodel_ffnslice_1": [11, 100, 182], "transformer2dmodel_qkvprereshap": [11, 100, 182], "transformer2dmodel_qkvreshap": [11, 100, 182], "transformer2dmodel_qkvreshape4d": [11, 100, 182], "transformer2dmodel_encoderhiddenstatesreshap": [11, 100, 182], "transformer2dmodel_getsamplebatch": [11, 100, 182], "transformer2dmodel_instancenormreshapefromadd": [11, 100, 182], "transformer2dmodel_instancenormreshapefromconcat": [11, 100, 182], "transformer2dmodel_sampleslic": [11, 100, 182], "transformer2dmodel_upblockres": [11, 100, 182], "transpose_batch_matmul": [11, 100, 182, 338], "word_embed": [11, 100, 182, 339], "graph_util": [11, 182, 338, 342, 346], "logger": [11, 182, 190, 202, 360], "onnx_util": [11, 182], "tf_util": [11, 182], "torch_util": [11, 182], "load": [13, 188, 191, 198, 199, 211, 216, 217, 331, 338, 339, 340, 341, 343, 349, 351, 352, 353, 354, 359], "frontend": [13, 354], "get_logg": 14, "log": [14, 331, 339, 345], "msg": 14, "error": [14, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 339, 345, 360], "fatal": 14, "warn": 14, "get_children": 15, "input_name_to_nod": 15, "get_node_children_nam": 15, "nodeproto": [15, 181], "get_initializer_children_nam": 15, "graph_node_names_detail": [15, 180, 181], "pars": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 180, 339, 345], "graph_nodes_dict": [15, 180], "Be": [15, 180], "class": [15, 180, 199, 309, 310, 319, 330, 332, 338, 345, 350, 351], "cerat": 15, "output_nam": [15, 339], "ouput": 15, "param": [15, 180, 211, 350, 351], "node_names_detail": [15, 180], "is_supported_onnx_graph": [15, 247], "is_supported_onnx_nod": 15, "change_num_nam": 15, "bias_to_int32": 15, "bias_nod": 15, "a_scal": 15, "b_scale": 15, "int8": [15, 185, 199, 211, 331, 333, 340, 341, 343, 348, 351, 356, 357, 363, 370, 379], "int32": [15, 331, 339], "matric": [15, 352, 357, 358], "scale": [15, 211, 309, 350, 355, 358, 370], "arrai": [15, 339], "fp32_bia": 15, "int8_bia": 15, "int8_bias_zero_point": 15, "int8_bias_scal": 15, "int32_bia": 15, "onnx_extract_oper": 15, "framework_model": [15, 47, 48, 180], "nodes_dict": [15, 47, 48, 180, 181], "engine_graph": [15, 47, 48, 180, 181], "tf_dtype": [15, 180, 181], "set_attr": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 338], "batchmatmul": 18, "batchmatmulv2": 19, "onnxruntim": [23, 24, 25, 31, 33, 54, 55, 60, 61, 63, 64, 66, 70, 74, 75, 77, 78, 331, 334, 336, 338, 344], "regist": [26, 39, 48, 51, 54, 55, 63, 65, 78, 125, 201, 204, 205, 207, 208, 349, 350, 351, 352, 354, 355, 356, 357, 359, 379], "binaryadd": [26, 350], "constantofshap": 26, "dequantizelinear": [26, 343], "dequant": [26, 350, 351, 355, 363], "erf": [26, 345], "expand": [26, 216, 217], "fill": [26, 342, 357], "flatmapdataset": 26, "ident": [26, 204, 328, 332], "makeiter": 26, "matmulwithbiasadd": [26, 114], "matmulwithbiasgelu": [26, 115], "matmulwithbiastanh": [26, 118], "matmulwithbia": [26, 113], "qlinearmatmul": [26, 343], "qlinearadd": 26, "qlinearmul": 26, "realdiv": 26, "sqrt": [26, 338, 342, 357], "squar": [26, 216, 217], "stopgradi": 26, "tanh": [26, 345, 351, 363], "tensorslicedataset": 26, "transposebatchmatmul": [26, 178, 338], "relu": [26, 351, 363], "matmulwithbiasrelu": [26, 116], "cumsum": 26, "onehot": [26, 46], "tokentypeid": 26, "positionid": 26, "loop": [26, 211, 309, 318, 338, 350, 352, 357], "sigmoid": 26, "matmulwithbiassigmoid": [26, 117], "flatten": 26, "mergedembeddingbag": [26, 120], "convolut": [26, 332, 341], "expandindic": 26, "tile": [26, 63, 349, 353, 355, 357, 358, 359, 363], "opani": 26, "sequencelength": [26, 347], "arang": 26, "reciproc": 26, "einsum": 26, "repeat": [26, 352, 364], "stack": [26, 358], "constant": [26, 132, 211], "listconstruct": 26, "latrang": 26, "expanddim": 27, "fusedbatchnormv3": 29, "fusedgemm": 30, "fusedmatmul": 31, "gatherv2": [32, 338], "gatherel": [33, 338], "iteratorgetnext": 37, "iteratorv2": [38, 338], "logsoftmax": [40, 307], "mapandbatchdataset": [41, 338], "modeldataset": 45, "onnxinput": 47, "operator_registri": [48, 338], "operator_typ": [48, 338], "subclass": [48, 125, 204, 205, 208, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 306, 307], "cl": [48, 125, 204, 205, 207, 208, 318], "registr": [48, 125, 338], "optimizedataset": [49, 338], "packagepositionembed": 53, "quantizelinear": [55, 338, 343], "quantiz": [55, 185, 190, 193, 197, 198, 211, 299, 331, 334, 350, 351, 355, 356, 358, 363, 366, 374, 379], "quantizev2": 56, "quantizedmatmulwithbiasanddequant": 58, "reducemean": [59, 338, 342], "reducesum": 60, "aten": 63, "self": [63, 185, 216, 217, 221, 318, 330, 338, 340], "scalar": [63, 350], "alpha": [63, 201, 207, 309, 356, 363], "scatterel": 64, "primconst": 67, "stridedslic": 72, "source_op": 73, "dest_op": 73, "definit": [73, 351], "topk": 74, "fuse": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 343, 350, 351], "acceler": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 323, 331, 333, 334, 343, 350, 351, 355, 357, 370, 376], "strategi": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 198, 352], "addclstoken": [80, 89], "addembed": 81, "stabl": [83, 84, 85, 86, 87, 143, 151, 152, 153, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 299, 331, 336, 355], "diffusionv1": [83, 84, 85, 86, 87, 152, 153, 156, 157, 158, 165, 166, 169, 170, 171, 177], "attentionmasklengthadaptiveexpandindic": 89, "attentionoutputlayernormlengthadaptiveexpandindic": 90, "attentionreshap": 91, "castto": 92, "collectquantinfo": 93, "convreshap": 94, "decoderattnreshap": 95, "generatesequ": 99, "inputdata": [103, 338], "inputfil": 104, "insertbf16nod": 105, "insertquantnod": 106, "quantizedgraphdtyperefactor": [107, 131], "int8bf16mixedprecisioncheck": 107, "inferenc": 107, "under": [107, 211, 331, 338, 339, 340, 343, 355, 356, 363, 365], "in8": 107, "bf16": [107, 185, 211, 331, 333, 343, 348, 351, 353, 355, 358, 363], "mix": [107, 341], "precis": [107, 211, 334, 343, 367, 370, 379], "And": [107, 340, 341, 342, 343, 346, 350], "u8": [107, 343, 345, 351, 358, 363], "s8": [107, 343, 350, 351, 355, 363], "fp32": [107, 185, 211, 331, 333, 339, 340, 341, 343, 345, 350, 351, 353, 354, 356, 358, 363, 368, 370], "interactfeatur": 108, "lastlayershap": 109, "layernormwithreducemean": [111, 338], "layernormwithtranspos": 112, "matmulwithtranspos": 119, "multiheadattent": 121, "bass": [121, 125], "operatoradaptor": 122, "sweep": 122, "receiv": [122, 193, 342, 346], "outputdata": [123, 338], "pattern_registri": [125, 338], "pattern_typ": [125, 338], "positionembed": 126, "positionembeddingsv1": 127, "qkvmerg": 128, "qkvreshap": 129, "qunatizefus": 130, "quantizedgraphdtypecheck": 131, "removeconstantop": 132, "removelastview": 133, "removelistconstruct": 134, "removerang": 135, "reshapeafterrestorehiddenst": 137, "reshapebeforeandafterattentionoutlayernormgatherel": 138, "reshapebeforerestorehiddenst": 139, "reshapefus": 140, "qkv": [142, 155, 174, 175, 341, 343], "groupnorm": 143, "channel": [143, 204, 350, 354, 355, 359, 363, 369], "separ": [143, 328, 346, 359, 365], "num_group": 143, "group": [143, 207, 333, 338, 346, 352, 357, 359, 369], "num_channel": 143, "var": [143, 309], "epsilon": [143, 338], "gamma": 143, "beta": [143, 201, 309, 356, 363], "http": [143, 201, 204, 206, 216, 221, 223, 330, 331, 336, 337, 339, 345, 365, 371], "pytorch": [143, 185, 188, 191, 193, 197, 204, 206, 211, 216, 217, 219, 316, 330, 331, 334, 336, 362, 368, 369, 370], "org": [143, 201, 216, 336], "nn": [143, 184, 211, 354], "html": [143, 345], "restorehiddenstatesinlengthadapt": 144, "roraryposemb": 145, "startendlogit": 149, "matcher": [150, 318, 343], "subgraphmatch": [150, 341], "textencoder_wordembed": 151, "textencoderv1": [151, 167, 168, 172, 173, 176], "textencoder_casualattentionmask": 158, "tokentypeembed": [159, 338], "tokentypeembeddingsv1": [160, 338], "torchembed": 161, "torchinnerproductinsertbia": 162, "torchpaddingsequ": 164, "transformer2dmodel_ffninputslic": 167, "transformer2dmodel_ffninputslice_1": 168, "transformer2dmodel_qkvreshapeto4d": 171, "wordembed": 179, "create_tf_nod": 180, "when": [180, 185, 204, 205, 209, 211, 216, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 319, 328, 333, 338, 339, 341, 342, 345, 346, 349, 351, 352, 354, 355, 356, 358, 359, 363, 366, 367, 370], "tendorflow": 180, "get_tensor_dest_op": 180, "someth": 180, "store": [180, 185, 188, 191, 193, 201, 204, 205, 207, 208, 318, 338, 342, 343, 346, 349, 350, 351, 352, 353, 356, 357, 359], "dest_op_nam": 180, "tf_extract_oper": 180, "tf_dtype_id": 180, "deal": [180, 318, 340], "multipl": [180, 205, 212, 216, 217, 221, 319, 333, 338, 340, 351, 352, 354, 355, 356, 357, 358, 359, 363, 366, 367], "indetermin": 180, "torch_extract_oper": 181, "compil": [182, 302, 335, 337, 338, 339, 341, 342, 344, 346, 379], "api_doc_exampl": 183, "version": [183, 193, 211, 328, 331, 336, 341, 347, 361, 365], "provid": [184, 185, 188, 193, 197, 198, 211, 216, 217, 221, 223, 299, 318, 319, 331, 333, 334, 335, 338, 348, 351, 355, 356, 358, 366, 370], "pytorchbenchmark": 184, "executorbenchmark": 184, "refactor_batch_s": 184, "batch_siz": [184, 185, 216, 217, 220, 319, 331, 339, 340, 344, 357, 363], "old_batch_s": 184, "batch": [184, 211, 309, 331, 339, 354, 355, 357, 364], "target": [184, 185, 204, 208, 209, 211, 318, 340, 359, 369], "default": [184, 185, 193, 197, 199, 209, 211, 216, 217, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 330, 331, 332, 338, 341, 347, 351, 355, 359, 360, 361, 363, 366, 367, 369, 370], "batched_valu": 184, "get_example_input": [184, 319], "dataload": [184, 197, 211, 220, 319, 331], "batched_data": 184, "preprocess_model": 184, "example_input": [184, 319], "additional_cmd": 184, "jit": [184, 185, 211, 319, 323, 348, 350, 351, 354, 358, 363, 376], "trace": [184, 185, 319, 340], "benchmarkconfig": [184, 185, 319], "process": [184, 185, 191, 194, 204, 205, 206, 208, 209, 211, 221, 318, 331, 333, 338, 339, 341, 342, 346, 349, 350, 352, 355, 356, 359, 369, 370], "raw_cmd": 184, "preprocess": [184, 185, 330, 331, 358], "scriptmodul": 184, "model_name_or_path": [184, 193, 211, 221, 319, 330], "build": [184, 194, 198, 211, 318, 331, 337, 349, 355, 356, 360, 367], "inc": [185, 193, 197, 198, 211, 344], "nncf": 185, "check_valu": 185, "src": [185, 309, 339, 351, 359, 363], "supported_typ": 185, "supported_valu": 185, "given": [185, 193, 204, 205, 216, 217, 330, 346, 351, 354, 357, 359, 369], "datatyp": [185, 333, 334], "uint8": [185, 357, 370], "_datatyp": 185, "dynamiclengthconfig": [185, 211, 335], "max_length": [185, 319, 331], "length_config": [185, 216, 217, 335], "const_rat": 185, "num_sandwich": 185, "length_drop_ratio_bound": [185, 187], "layer_dropout_prob": [185, 187], "layer_dropout_bound": [185, 187], "dynamic_train": 185, "load_store_fil": 185, "evo_it": 185, "30": [185, 353], "population_s": 185, "20": [185, 319, 331, 336, 339, 344, 347, 353, 360, 361], "mutation_s": 185, "mutation_prob": [185, 188], "crossover_s": 185, "num_cpu": 185, "48": [185, 347, 361], "distributed_world_s": 185, "latency_constraint": 185, "evo_eval_metr": 185, "eval_f1": [185, 188, 335, 366, 370], "dynam": [185, 190, 211, 345, 348, 350, 354, 356, 363, 377], "adapt": [185, 299, 328, 331], "transform": [185, 198, 199, 211, 216, 217, 221, 318, 319, 323, 329, 330, 332, 336, 337, 338, 339, 350, 351, 356, 357, 358, 359, 365, 367, 368, 369, 370, 371, 376], "limit": [185, 332, 354, 358], "maximum": [185, 204, 205, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 347, 361, 370], "drop": [185, 187, 333, 356, 359, 366], "ratio": [185, 187, 188, 204, 205, 206, 208, 332, 361, 363, 366, 367, 369], "sandwich": 185, "num": [185, 318, 330, 340, 349, 351, 357], "train": [185, 191, 194, 197, 198, 205, 206, 211, 299, 318, 330, 331, 332, 335, 362, 369], "dropout": [185, 187], "probabl": [185, 187, 318, 356], "whether": [185, 193, 204, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 338, 340, 346, 363, 378], "iter": [185, 191, 205, 208, 211, 318, 319, 331, 339, 341, 345, 350, 354, 357, 358, 363, 364], "evolut": [185, 189, 190, 333], "popul": [185, 188], "mutat": [185, 188], "crossov": [185, 188], "cpu": [185, 299, 308, 319, 330, 331, 335, 336, 339, 345, 347, 349, 351, 360, 361, 368], "distribut": [185, 220, 318, 332, 356, 370, 371], "world": 185, "latenc": [185, 318, 319, 331, 333, 340, 347, 352, 370], "constraint": [185, 188, 370], "metric": [185, 190, 191, 194, 198, 211, 213, 318, 331, 335, 374], "quantizationconfig": [185, 197, 198, 211, 331, 335], "approach": [185, 194, 196, 330, 332, 333, 335, 351, 352], "posttrainingstat": [185, 333, 334, 335, 370], "timeout": [185, 370], "max_trial": [185, 318, 370], "config_fil": 185, "sampling_s": 185, "use_bf16": 185, "recip": [185, 211, 330, 341, 367], "earli": [185, 370], "stop": [185, 221, 330, 370], "combin": [185, 211, 318, 341, 346, 350, 351, 370], "decid": [185, 354, 370], "exit": [185, 370], "max": [185, 187, 211, 331, 347, 350, 352, 354, 359, 361, 370], "time": [185, 340, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 370], "evalu": [185, 188, 191, 194, 197, 198, 204, 205, 206, 211, 318, 332, 340, 357, 366, 367, 369, 370], "notraineroptim": [185, 197, 332, 369, 370], "guarante": [185, 370], "how": [185, 187, 201, 204, 205, 211, 298, 329, 338, 339, 340, 343, 344, 346, 351, 352, 353, 363, 366, 369], "mani": [185, 187, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 340, 342, 350, 352, 353, 356, 358, 363], "sampl": [185, 187, 211, 221, 318, 319, 330, 331, 335, 347, 357, 370], "smooth_quant": 185, "smooth": 185, "smooth_quant_arg": 185, "fast_bias_correct": 185, "fast": [185, 299, 331, 335], "correct": [185, 209, 328, 342, 346, 357], "weight_correct": 185, "weight": [185, 201, 204, 205, 207, 208, 216, 217, 309, 318, 332, 334, 340, 341, 343, 349, 352, 353, 354, 358, 359, 363, 366, 367, 369, 370], "gemm_to_matmul": 185, "graph_optimization_level": 185, "disable_al": 185, "enable_bas": 185, "enable_extend": 185, "enable_al": 185, "first_conv_or_matmul_quant": 185, "last_conv_or_matmul_quant": 185, "pre_post_process_quant": 185, "postprocess": 185, "add_qdq_pair_to_weight": 185, "qdq": [185, 211, 334, 343], "vaild": 185, "onnxrt_trt_ep": 185, "optypes_to_exclude_output_qu": 185, "optyp": 185, "dedicated_qdq_pair": 185, "dedic": 185, "pruningconfig": [185, 335], "epoch": [185, 205, 206, 369], "epoch_rang": [185, 200], "initial_sparsity_ratio": [185, 200], "target_sparsity_ratio": [185, 200, 204, 205, 335, 369], "97": [185, 200, 361, 369], "pruner_config": [185, 335, 369], "pruner": [185, 190, 200, 201, 202, 206, 211, 332, 369], "prune": [185, 190, 197, 198, 201, 202, 204, 205, 207, 208, 209, 211, 216, 217, 299, 331, 374], "goal": [185, 211, 369], "behavior": [185, 211, 328, 329, 332, 349, 350, 355, 369, 370], "nlp": [185, 206, 211, 221, 223, 299, 330, 331, 333, 335, 339, 344, 369, 370], "wil": 185, "basicmagnitud": [185, 200, 333, 335, 369], "typel": 185, "init_prune_config": 185, "init": [185, 191, 197, 198, 202, 219, 220, 318, 330, 331, 336, 337, 339, 351], "distillationconfig": [185, 211, 335], "criterion": [185, 186, 198, 201, 204, 205, 214, 335, 366, 370], "distil": [185, 190, 191, 197, 198, 211, 330, 331, 344, 374], "inc_config": 185, "knowledgeloss": [185, 186, 332], "tfdistillationconfig": [185, 318], "loss_typ": [185, 186, 318, 332], "loss_weight": [185, 318], "train_step": [185, 318], "temperatur": [185, 186, 221, 318, 330, 332], "loss": [185, 211, 216, 217, 318, 330, 332, 370], "knowledgedistillationloss": [185, 332], "flashdistillationconfig": 185, "block_nam": [185, 318], "layer_mappings_for_knowledge_transf": [185, 318], "add_origin_loss": [185, 186, 318, 332], "flash": [185, 191, 211], "autodistillationconfig": [185, 318], "search_spac": [185, 194, 318], "search_algorithm": [185, 318], "bo": [185, 318, 365], "seed": [185, 318], "knowledge_transf": [185, 318], "regular_distil": [185, 318], "auto": [185, 191, 198, 330, 340, 345, 351], "disil": 185, "space": [185, 191, 194, 205, 211, 318, 328, 329, 341, 349, 352], "g": [185, 191, 204, 211, 318, 332, 350, 351, 355, 356, 364], "bayesian": [185, 318], "architectur": [185, 191, 194, 198, 211, 216, 217, 318, 331, 336, 349, 356, 358], "candid": 185, "trial": [185, 211], "random": [185, 216, 318, 356], "knowledg": [185, 211, 318, 330], "transfer": [185, 211, 220, 332], "stage": [185, 191, 211, 318], "autodistil": [185, 191, 198, 211, 374], "regular": [185, 191, 207, 369], "nasconfig": [185, 194, 196], "basic": [185, 194, 204, 217, 220, 331, 336, 345, 355], "parser": 185, "procedur": [185, 204, 363], "backend": [185, 211, 219, 319, 331, 333, 335, 336, 337, 338, 341, 343, 346, 348, 363, 370], "warmup": [185, 319, 341], "cores_per_inst": [185, 211, 319], "num_of_inst": [185, 211, 319], "benchmark": [185, 190, 211, 212, 331, 341, 347, 348, 361, 364, 374], "skip": [185, 319, 352, 364], "collect": [185, 319, 338, 340, 370], "core": [185, 319, 339, 347, 349, 355, 356, 361, 364, 365], "instanc": [185, 191, 194, 211, 212, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 328, 339, 340, 347, 361, 364, 366, 367, 368], "enabl": [185, 205, 319, 334, 335, 347, 349, 355, 356, 360, 361], "want": [185, 197, 319, 325, 338, 339, 340, 341, 343, 346, 349, 350, 351, 363, 366, 378], "prunerv2": 185, "target_spars": [185, 204], "pruning_typ": 185, "op_nam": 185, "excluded_op_nam": 185, "start_step": [185, 205], "end_step": [185, 205], "pruning_scop": 185, "pruning_frequ": [185, 205], "min_sparsity_ratio_per_op": [185, 204], "max_sparsity_ratio_per_op": [185, 204, 205], "sparsity_decay_typ": 185, "pruning_op_typ": 185, "reg_typ": [185, 351], "criterion_reduce_typ": 185, "resume_from_pruned_checkpoint": 185, "similiar": 185, "weightpruningconfig": 185, "pruning_config": [185, 197, 198, 211, 335, 369], "snip_momentum": [185, 201], "4x1": [185, 204, 340, 349, 359], "global": [185, 204, 205], "98": [185, 361], "exp": [185, 351, 358, 363], "linear": [185, 204, 318, 332, 351, 354, 357], "ce": [186, 318, 332], "loss_weight_ratio": [186, 332], "layer_map": [186, 332], "distillationcriterionmod": 186, "restor": [187, 333], "sample_length_configur": 187, "max_seq_length": [187, 188], "num_hidden_lay": 187, "layer_config": [187, 216, 217], "length_drop_prob": 187, "length_drop_ratio": 187, "min_length": 187, "hidden": [187, 204, 216, 217, 318, 352], "truncat": [187, 331], "less": [187, 319, 332, 341, 355, 359, 369], "than": [187, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 319, 340, 341, 342, 350, 355, 357, 362, 363, 370], "min": [187, 211, 370], "sample_layer_configur": 187, "layer_dropout": 187, "depend": [187, 194, 329, 331, 336, 337], "paramat": 187, "bound": 187, "kept": [187, 204], "evolust": 188, "evolustionari": 188, "approx_ratio": 188, "12": [188, 330, 336, 337, 340, 347, 353, 357, 360, 361, 363], "l": [188, 318, 332], "384": [188, 318, 341, 347, 361], "approxim": [188, 358], "invers": [188, 358], "store2str": 188, "gene": 188, "mac": 188, "score": [188, 201, 204, 205, 207, 216, 217, 368], "parent": [188, 205, 208], "parmat": 188, "devic": [188, 330, 332, 339, 341, 368], "lower_constraint": 188, "upper_constraint": 188, "eval_metr": 188, "evolutionari": [188, 211], "load_stor": 188, "store_fil": 188, "save_stor": 188, "get_stor": 188, "set_lower_constraint": 188, "setter": [188, 216, 217], "lower": [188, 221, 359, 367, 370], "set_upper_constraint": 188, "upper": [188, 351], "save_popul": 188, "population_fil": 188, "convex_hul": 188, "pareto_fronti": 188, "add_gen": 188, "rai": 188, "packag": [189, 192, 330, 331], "drop_and_restore_util": [189, 190], "mixtur": 190, "auto_distil": [190, 192, 318], "basic_na": [190, 195], "pytorch_prun": 190, "criteria": [190, 202, 367], "reg": [190, 202, 205, 350, 351], "schedul": [190, 197, 202, 205, 207, 211, 318, 323, 348, 376], "get_throughput": [190, 213], "utility_tf": [190, 213], "optimizer_tf": 190, "trainer": [190, 197, 316, 331, 333, 334, 335], "handl": [191, 211, 216, 217, 298, 307, 318, 345, 353, 354], "both": [191, 211, 216, 217, 328, 330, 335, 355, 357, 362, 363, 364, 366, 370], "model_build": [191, 194, 198, 211, 318], "conf_fname_or_obj": [191, 194, 196], "design": [191, 211, 338, 350, 351, 362, 374], "three": [191, 200, 206, 210, 211, 318, 331, 338, 342, 346, 357, 358, 369, 370], "major": [191, 211, 318, 349, 355, 356, 358, 359, 370], "explor": [191, 211, 318, 335], "compress": [191, 211, 299, 318, 332, 335, 349, 353, 355, 359, 362, 370], "discov": [191, 211, 318], "potenti": [191, 211, 309, 318, 329, 356], "measur": [191, 211, 318, 319, 332, 348, 366, 367, 369, 370], "predict": [191, 211, 216, 217, 318, 330, 331, 332], "hardwar": [191, 211, 318, 329, 332, 360, 362], "etc": [191, 211, 318, 332, 340], "select": [191, 207, 211, 216, 217, 318, 351, 363], "best": [191, 194, 211, 318, 328, 333], "res_save_path": [191, 194], "model_cl": [191, 198, 211, 318], "found": [191, 194, 331, 337, 338, 359], "estim": [191, 194, 340, 359], "load_search_result": 191, "init_by_cfg": [191, 194], "create_distil": 191, "optimizedmodel": 193, "from_pretrain": [193, 216, 217, 319, 331, 335, 368], "function": [193, 194, 197, 198, 206, 211, 306, 307, 308, 309, 318, 332, 338, 341, 342, 345, 346, 350, 351, 363, 366, 369, 370], "classmethod": [193, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "instanti": [193, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "intel": [193, 204, 206, 221, 298, 319, 329, 330, 335, 336, 337, 338, 339, 347, 349, 360, 361, 365, 367, 368, 369, 370, 371], "compressor": [193, 198, 204, 206, 299, 319, 331, 367, 370], "repositori": [193, 331], "hug": [193, 299, 331, 343], "face": [193, 299, 300, 328, 331, 343], "hub": [193, 368], "local": [193, 204, 205, 211, 338, 349, 352, 355], "directori": [193, 197, 343, 362], "host": 193, "cache_dir": 193, "download": [193, 216, 217, 371], "cach": [193, 307, 345, 352, 355, 356, 357, 363], "standard": 193, "force_download": 193, "forc": 193, "re": [193, 353], "overrid": [193, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 306, 307, 345], "resume_download": 193, "delet": [193, 369], "incomplet": 193, "attempt": 193, "resum": [193, 211], "revis": 193, "branch": [193, 363], "tag": 193, "commit": [193, 328, 364], "sinc": [193, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 332, 355, 356, 358], "we": [193, 194, 217, 325, 328, 330, 331, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 366, 367, 368, 370, 378], "git": [193, 330, 331, 336, 337, 339], "system": [193, 331, 337], "artifact": 193, "huggingfac": [193, 221, 331, 366, 368], "allow": [193, 319], "q_model": 193, "basicna": 194, "conf_fnam": 194, "obj": [194, 196, 209], "dictionari": [194, 211], "common": [196, 204, 328, 331, 370], "nasbas": 196, "orchestr": [197, 211], "orchestrate_optim": [197, 211], "compon": [197, 211, 350, 365], "experiment": [197, 211, 351], "callabl": [197, 198, 211, 318], "train_func": [197, 198, 211, 318], "saved_result": [197, 331], "aggreg": 197, "run": [197, 205, 209, 211, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 319, 330, 363, 364, 370], "save_model": [197, 220, 331], "token": [197, 216, 217, 221, 319, 330, 331, 333, 335, 343, 368], "json": [197, 221, 330], "pytorch_model": 197, "init_quant": [197, 198, 211, 350], "quant_config": [197, 198, 211, 331, 335, 370], "calib_func": 197, "calib_dataload": [197, 211], "prepar": [197, 198, 216, 217, 330, 340, 342, 345, 350, 351, 359, 370], "invok": [197, 198], "_inc_quant": 197, "calibr": [197, 211, 370], "init_prun": [197, 198, 211], "init_distil": [197, 198, 211], "distillation_config": [197, 198, 211, 332, 335], "teacher_model": [197, 198, 211, 318, 332, 335], "teacher": [197, 198, 318, 332, 333], "tfoptim": [198, 318, 332], "pretrainedmodel": [198, 211, 318], "training_args_tf": 198, "tftrainingargu": 198, "train_dataset": [198, 318, 331, 335], "eval_dataset": [198, 318, 331, 335], "compute_metr": [198, 318, 331], "task_typ": [198, 220], "task_id": [198, 220], "entri": [198, 211, 216, 217, 365], "techniqu": [198, 331, 333, 335, 370], "builtin_eval_func": [198, 211], "dataset": [198, 211, 220, 221, 319, 330, 333, 366, 370], "saved_model": 198, "quantized_model_path": 198, "larger": [198, 204, 211], "model_builder_builtin": [198, 211, 318], "arch_para": [198, 211], "built": [198, 318, 367], "builder": [198, 318], "inform": [198, 201, 204, 205, 206, 207, 208, 298, 302, 305, 310, 316, 328, 329, 331, 332, 339, 340, 347, 351, 354, 361, 362, 363, 369, 370, 371, 375], "autodistillation_config": [198, 211, 318], "build_train_func": 198, "infer_framework_load_model": 199, "autoconfig": [199, 331, 335, 368], "model_class": 199, "task": [199, 217, 220, 318, 330, 331, 332, 333, 344, 351, 357, 360, 368], "model_kwarg": [199, 216, 217, 368], "pruningmod": 200, "current": [200, 201, 204, 205, 206, 208, 210, 340, 350, 351, 352, 354, 355, 357, 362, 363], "prunerconfig": [200, 335], "update_frequ": 200, "prune_typ": [200, 335, 369], "per_tensor": 200, "register_criterion": 201, "registri": [201, 204, 205, 207, 208], "get_criterion": 201, "pruningcriterion": 201, "on_step_begin": [201, 205, 206], "begin": [201, 205, 206, 217, 318, 350, 351], "on_before_optimizer_step": [201, 205, 206, 207], "on_after_optimizer_step": [201, 205, 206, 207], "magnitudecriterion": 201, "magnitud": [201, 369], "criterion_class": 201, "deriv": [201, 204, 205, 207, 208, 307, 356, 357], "determin": [201, 204, 205, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 341, 360], "magtinud": 201, "gradientcriterion": 201, "gradient": 201, "absolut": [201, 366, 369, 370], "snipcriterion": 201, "snip": 201, "product": [201, 331, 347, 357, 361, 367, 370], "singl": [201, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 352, 357], "shot": [201, 208], "network": [201, 204, 318, 332, 338, 339, 340, 342, 354, 369, 370], "sensit": 201, "arxiv": [201, 216], "ab": [201, 216, 370], "1810": 201, "02340": 201, "snipmomentumcriterion": 201, "momentum": 201, "mechan": 201, "much": [201, 343, 352], "preserv": 201, "updat": [201, 204, 205, 208, 209, 330, 331, 336, 337, 339, 356, 369], "register_pattern": 204, "get_pattern": 204, "assertionerror": [204, 205, 209], "basepattern": [204, 207], "unit": [204, 348, 355], "dure": [204, 208, 211, 339, 355, 359, 364, 367, 369, 370], "is_glob": 204, "take": [204, 328, 332, 340, 342, 345, 350, 358, 359], "contrast": 204, "individu": [204, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328], "keep_mask_lay": 204, "whose": [204, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 346], "mask": [204, 205, 208, 216, 217, 309, 333, 350, 351, 353, 355, 358], "invalid_lay": 204, "reach": [204, 208, 329, 331], "minimum": 204, "reduce_tensor": 204, "dim": [204, 216, 217, 339, 345, 349, 355, 359, 363], "reduc": [204, 331, 345, 349, 350, 352, 354, 355, 356, 358, 359, 370], "along": [204, 341, 354, 357, 359], "dimens": [204, 216, 217, 318, 332, 341, 354, 355, 357, 359, 363], "axi": [204, 331, 338, 340, 357, 358], "get_mask": 204, "pre_mask": 204, "layer_nam": 204, "unprun": 204, "abstract": [204, 208, 216, 217], "get_masks_glob": 204, "get_masks_loc": 204, "get_single_mask_per_target_ratio": 204, "exact_sparsity_ratio": 204, "get_block_size_dict": 204, "mainli": [204, 208, 341, 355, 356], "per": [204, 340, 347, 350, 353, 355, 361, 363, 364, 369], "To": [204, 208, 216, 217, 318, 329, 338, 352, 355, 357, 359, 363, 364], "implement": [204, 205, 206, 207, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 323, 331, 338, 341, 342, 346, 348, 349, 350, 352, 354, 355, 356, 357, 358, 360, 363, 376], "get_sparsity_ratio": [204, 206], "return_dict": [204, 216, 217], "zero": [204, 205, 206, 351, 352, 354, 355, 359, 369], "zero_cnt": 204, "total_cnt": 204, "get_pattern_lock_mask": 204, "obtain": [204, 207, 208, 209, 331, 333, 340, 358], "posit": [204, 216, 217, 328, 331, 335, 341, 346, 363, 368], "lock": [204, 369], "check_layer_valid": 204, "block_siz": 204, "get_reduced_masks_from_data": 204, "update_residual_cnt": 204, "yet": 204, "get_sparsity_ratio_each_lay": 204, "sparsity_ratio": 204, "zero_point": 204, "cnt": 204, "sparsityinfo": 204, "adjust_ratio": 204, "key_new_spars": 204, "max_sparsity_ratio": 204, "min_sparsity_ratio": 204, "final_target_sparsity_ratio": 204, "adjust": [204, 319, 345, 370], "examin": 204, "propos": [204, 318, 332, 349], "indic": [204, 216, 217, 309, 346, 350, 351, 357, 359, 363, 366], "adjust_sparsity_ratio": 204, "patternnxm": 204, "nxm": [204, 205, 349], "height": 204, "width": [204, 349, 350, 354, 356, 370], "vertic": 204, "direct": [204, 309], "becaus": [204, 338, 350, 353, 358, 370], "calul": 204, "ration": 204, "block_size_1": 204, "block_size_2": 204, "wise": [204, 348, 363, 377], "block_wis": 204, "get_sparsity_ratio_progress": 204, "reshape_orig_to_pattern": 204, "s1": 204, "s2": 204, "reshape_reduced_to_orig": 204, "orig_shap": 204, "permut": [204, 340, 353, 357, 363], "reduce_scor": 204, "recalcul": 204, "get_mask_per_threshold": 204, "cur_target_sparsity_ratio": 204, "keep_exact_sparsity_ratio": 204, "togeth": [204, 331], "keep_pre_mask": 204, "remain": [204, 309], "unchang": 204, "count_new_masked_cnt": 204, "new_added_mask": 204, "count": [204, 340, 345], "ad": [204, 205, 216, 217, 338, 342, 346, 350, 359, 363, 368], "update_new_added_mask": 204, "cur_mask": 204, "bacaus": 204, "update_progressive_mask": 204, "progressive_step": 204, "progressive_config": 204, "progress": [204, 205, 208], "update_progressive_masks_linear": 204, "update_progressive_masks_scor": 204, "update_progressive_masks_loc": 204, "domain": [204, 323, 348, 376], "update_progressive_masks_glob": 204, "patternninm": 204, "continu": [204, 216, 349, 352, 356, 357], "github": [204, 206, 221, 223, 329, 330, 331, 336, 337, 339, 345, 365, 371], "com": [204, 206, 221, 223, 330, 331, 336, 337, 339, 347, 361, 365, 371], "blob": [204, 221], "master": [204, 206], "md": [204, 221, 340, 343], "get_least_ninm_mask_from_data": 204, "elementwis": 204, "sparisti": 204, "get_ele_mask_per_threshold": 204, "least_ninm_mask": 204, "least_m_in_m_mask": 204, "register_prun": 205, "parse_valid_pruner_typ": 205, "get_prun": 205, "cuurent": 205, "baseprun": 205, "what": [205, 328, 350, 351, 357, 369], "current_sparsity_ratio": 205, "global_step": 205, "trigger": [205, 212, 329], "frequenc": [205, 347, 361, 369], "show": [205, 328, 331, 338, 339, 342, 343, 346, 353, 355, 357], "on_epoch_begin": [205, 206], "mask_weight": 205, "formal": [205, 216], "mask_weights_gener": 205, "local_step": [205, 206], "update_mask": 205, "on_epoch_end": [205, 206], "on_step_end": [205, 206], "on_train_begin": [205, 206], "phase": [205, 206, 332, 369], "on_train_end": [205, 206], "on_before_ev": [205, 206], "on_after_ev": [205, 206], "check_is_pruned_step": 205, "boolean": 205, "basicprun": 205, "arrang": 205, "within": [205, 318, 328, 354], "chang": [205, 208, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 338, 349, 350, 359, 364, 365], "proce": 205, "regul": 205, "term": [205, 207, 318, 332, 354, 357, 359, 365, 366, 367, 370], "set_global_step": 205, "patternlockprun": 205, "fix": [205, 329, 341, 353], "inherit": [205, 208, 319, 332, 338, 345, 368, 369, 370], "progressiveprun": 205, "interpol": 205, "fine": [205, 330, 369, 370], "grain": 205, "improv": [205, 329, 331, 340, 350, 352, 354, 355, 359, 370], "interv": [205, 363], "check_progressive_valid": 205, "check_is_pruned_progressive_step": 205, "update_masks_progress": 205, "print_progressive_spars": 205, "templat": [206, 307, 309], "tree": 206, "huggingface_model": 206, "text": [206, 221, 319, 331, 333, 351, 360, 365, 368], "classif": [206, 216, 217, 318, 332, 333, 368], "eager": [206, 370], "config_file_path": 206, "pruner_info": 206, "update_config": 206, "read": [206, 331, 339], "pass": [206, 216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 309, 350, 351, 368, 370], "elementwise_over_matmul_gemm_conv": 206, "elementwise_over_al": 206, "blockwise_over_matmul_gemm_conv": 206, "ensur": [206, 355], "register_reg": 207, "regulariz": 207, "get_reg_typ": 207, "get_reg": 207, "basereg": 207, "grouplasso": [207, 369], "coeff": 207, "lasso": [207, 333, 369], "variabl": [207, 309, 342, 345, 363, 364], "reg_term": 207, "coeffient": 207, "register_schedul": 208, "get_schedul": 208, "pruningschedul": 208, "dens": [208, 309, 340, 341, 346, 348, 359, 363, 369], "gradual": 208, "update_sparsity_ratio": 208, "target_ratio": 208, "current_prune_step": 208, "total_prune_step": 208, "init_ratio": 208, "oneshotschedul": 208, "onc": [208, 299, 331, 340, 358], "iterativeschedul": 208, "init_sparsity_ratio": 208, "check_config": 209, "prune_config": 209, "everyth": 209, "reset_none_to_default": 209, "undefin": 209, "item": [209, 319, 331, 335], "update_param": 209, "process_weight_config": 209, "global_config": 209, "local_config": 209, "default_config": 209, "pruners_info": 209, "process_yaml_config": 209, "check_key_valid": 209, "template_config": 209, "user_config": 209, "process_and_check_config": 209, "process_config": 209, "parse_to_prun": 209, "keep": [209, 342], "quantizationmod": 210, "easili": [211, 349, 350], "finetun": [211, 331, 333, 335, 368], "basetrain": 211, "builtin_train_func": 211, "automativ": 211, "low": [211, 331, 335, 349, 356, 358, 367, 370, 379], "achiev": [211, 331, 352, 367], "point": [211, 216, 217, 318, 342, 350, 351, 355, 358, 370], "automat": [211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 319, 330, 340, 341, 342, 350, 363], "pruningconf": 211, "smaller": [211, 332, 355, 369], "config_list": 211, "optimizt": 211, "create_optimizer_builtin": 211, "resume_from_checkpoint": 211, "optuna": 211, "ignore_keys_for_ev": 211, "tor": 211, "checkpoint": [211, 216], "present": [211, 216, 358], "state": [211, 216, 217, 331, 347, 361], "hyperparamet": [211, 318], "ignor": [211, 216, 217, 338], "keyword": 211, "hide": [211, 216, 217], "deprec": [211, 216, 217], "training_step": 211, "inject": [211, 351], "union": [211, 309], "being": [211, 355], "fed": 211, "most": [211, 331, 342, 346, 350, 351, 352, 357, 368], "expect": [211, 216, 217, 328, 329, 359, 367], "label": [211, 216, 217, 221, 330, 364, 368], "training_step_length_adapt": 211, "compute_loss": 211, "return_output": 211, "By": [211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 339], "nas_config": 211, "baseic": 211, "callabel": 211, "auto_distil_evaluation_loop": 211, "prediction_loss_onli": 211, "ignore_kei": 211, "metric_key_prefix": 211, "eval": [211, 318, 366], "trainer_util": 211, "evalloopoutput": 211, "share": [211, 352], "work": [211, 298, 351, 368], "doe": [211, 338, 350, 351, 352, 353, 354, 357, 363], "avoid": [211, 216, 217, 346, 349, 351, 355, 357, 358, 363], "memori": [211, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 367, 370], "huge": 211, "prefix": [211, 363], "export_to_onnx": [211, 331, 334], "tranfer": 211, "paramert": 211, "export_to_fp32_onnx": 211, "save_path": [211, 334], "opset_vers": [211, 334], "14": [211, 334, 347, 353, 360, 361], "do_constant_fold": [211, 334], "verbos": [211, 334], "export": [211, 331, 339, 340, 343, 368, 374], "fold": [211, 363], "export_to_bf16_onnx": 211, "export_to_int8_onnx": 211, "quant_format": [211, 334], "s8s8": [211, 334], "sample_s": 211, "calibrate_method": 211, "minmax": 211, "scale_map": [211, 331], "export_to_jit": 211, "set_dynamic_config": [211, 335], "dynamic_config": [211, 335], "run_evolutionary_search": 211, "nlptrainer": [211, 331, 332, 335, 369, 370], "nlpseq2seqtrain": 211, "seq2seq": [211, 216, 217], "special": [212, 351, 357], "greater_is_bett": [214, 218, 318, 335, 366, 367, 370], "is_rel": [214, 335, 366, 370], "01": [214, 335, 361, 366, 370], "weight_ratio": [214, 218, 366, 367, 370], "modeling_bert_dynam": 215, "modeling_roberta_dynam": 215, "bert": [216, 318, 331, 332, 333, 339, 340, 341, 344, 346, 347, 350, 355, 356, 357, 358], "load_tf_weights_in_bert": 216, "tf_checkpoint_path": 216, "bertembed": [216, 217], "word": [216, 217, 333, 359], "token_typ": 216, "forward": [216, 217, 318, 340, 345, 370], "longtensor": [216, 217], "token_type_id": [216, 217], "position_id": [216, 217], "inputs_emb": [216, 217], "floattensor": [216, 217], "past_key_values_length": [216, 217], "bertselfattent": 216, "position_embedding_typ": [216, 217], "transpose_for_scor": [216, 217], "hidden_st": [216, 217], "attention_mask": [216, 217], "head_mask": [216, 217], "encoder_hidden_st": [216, 217], "encoder_attention_mask": [216, 217], "past_key_valu": [216, 217], "output_attent": [216, 217], "bertselfoutput": 216, "bertattent": 216, "prune_head": [216, 217], "bertintermedi": 216, "intermedi": [216, 318, 338, 343, 346, 359, 370], "bertoutput": 216, "bertlay": 216, "output_length": [216, 217], "always_keep_cls_token": [216, 217], "feed_forward_chunk": [216, 217], "attention_output": [216, 217], "feed": [216, 217, 332, 339], "chunk": 216, "bertencod": 216, "encod": [216, 217, 318, 340, 346], "use_cach": [216, 217], "output_hidden_st": [216, 217], "modeling_output": [216, 217], "basemodeloutputwithpastandcrossattent": [216, 217], "bertpool": 216, "pooler": [216, 217], "bertpredictionheadtransform": 216, "bertlmpredictionhead": 216, "languag": [216, 217, 299, 328, 330, 331, 333, 368], "bertonlymlmhead": 216, "sequence_output": 216, "bertonlynsphead": 216, "pooled_output": 216, "bertpretraininghead": 216, "pretrain": [216, 217, 338], "bertpretrainedmodel": 216, "simpl": [216, 217, 331, 336, 339, 350, 358, 368], "bertforpretrainingoutput": 216, "bertforpretrain": 216, "sum": [216, 319, 332, 340, 356, 358, 359, 363], "prediction_logit": [216, 217], "sequence_length": [216, 217], "vocab_s": [216, 217], "vocabulari": 216, "seq_relationship_logit": 216, "hidden_s": [216, 217, 318], "plu": 216, "num_head": [216, 217], "averag": [216, 319, 331, 340], "bertmodel": 216, "add_pooling_lay": [216, 217], "behav": [216, 217], "well": [216, 217, 334, 370, 371], "decod": [216, 217, 360], "case": [216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 332, 333, 340, 341, 349, 351, 352, 353, 363, 364], "cross": [216, 217], "describ": [216, 217, 308, 330, 352, 354, 357, 363, 366, 367], "1706": [216, 347, 361], "03762": 216, "ashish": [216, 217], "vaswani": [216, 217], "noam": [216, 217], "shazeer": [216, 217], "niki": [216, 217], "parmar": [216, 217], "jakob": [216, 217], "uszkoreit": [216, 217], "llion": [216, 217], "jone": [216, 217], "aidan": [216, 217], "gomez": [216, 217], "lukasz": [216, 217], "kaiser": [216, 217], "illia": [216, 217], "polosukhin": [216, 217], "is_decod": [216, 217], "add_cross_attent": [216, 217], "get_input_embed": [216, 217], "getter": [216, 217], "set_input_embed": [216, 217], "set_length_config": [216, 217], "set_output_attent": [216, 217], "basemodeloutputwithpoolingandcrossattent": [216, 217], "pad": [216, 217, 319, 331, 340, 355, 359, 363], "n_layer": [216, 217], "embed_size_per_head": [216, 217], "precomput": [216, 217], "speed": [216, 217, 338, 342], "up": [216, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 340, 342, 351, 363], "decoder_input_id": [216, 217], "those": [216, 217, 357, 369, 370], "past": [216, 217], "instead": [216, 217, 352], "get_output_embed": [216, 217], "set_output_embed": [216, 217], "new_embed": [216, 217], "next_sentence_label": 216, "legaci": [216, 217], "berttoken": 216, "uncas": [216, 318, 331, 333, 335, 343, 368], "hello": [216, 217], "my": [216, 217], "dog": [216, 217], "cute": [216, 217], "return_tensor": [216, 217, 319, 331, 335], "pt": [216, 217, 319, 331, 335, 368], "bertlmheadmodel": 216, "causallmoutputwithcrossattent": [216, 217], "prepare_inputs_for_gener": [216, 217], "bertformaskedlm": 216, "maskedlmoutput": [216, 217], "bertfornextsentencepredict": 216, "sentenc": [216, 217, 221, 319, 330, 331], "nextsentencepredictoroutput": 216, "prompt": 216, "itali": 216, "pizza": 216, "serv": 216, "restaur": 216, "unslic": 216, "next_sent": 216, "sky": 216, "blue": 216, "shorter": 216, "wavelength": 216, "light": 216, "logit": [216, 217, 318, 331, 332, 335, 339], "wa": 216, "bertforsequenceclassif": 216, "sequenceclassifieroutput": [216, 217], "regress": [216, 217, 330], "num_label": [216, 217, 331, 335], "entropi": [216, 217, 318], "bertformultiplechoic": 216, "choic": [216, 217, 333], "multiplechoicemodeloutput": [216, 217], "num_choic": [216, 217], "bertfortokenclassif": 216, "tokenclassifieroutput": [216, 217], "bertforquestionansw": 216, "question": [216, 328, 329, 331, 333, 353], "answer": [216, 217, 328, 333], "start_posit": [216, 217], "end_posit": [216, 217], "questionansweringmodeloutput": [216, 217], "span": [216, 217], "clamp": [216, 217], "taken": [216, 217], "account": [216, 217, 328], "expand_gath": [216, 217], "roberta": [217, 333], "robertaembed": 217, "tini": [217, 333], "tweak": 217, "create_position_ids_from_inputs_emb": 217, "directli": [217, 350, 353, 355, 356], "cannot": [217, 349, 355, 359, 364], "sequenti": [217, 342, 350, 351, 354], "robertaselfattent": 217, "robertaselfoutput": 217, "robertaattent": 217, "attenion": 217, "robertaintermedi": 217, "intermidi": 217, "robertaoutput": 217, "robertalay": 217, "robertaencod": 217, "roberata": 217, "robertapool": 217, "robertapretrainedmodel": 217, "update_keys_to_ignor": 217, "del_keys_to_ignor": 217, "robertamodel": 217, "_": [217, 318, 330, 332, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 355, 356, 357, 358, 362, 363, 366, 367, 368, 369, 370], "robertaforcausallm": 217, "causal": [217, 330], "robertatoken": 217, "robertaconfig": 217, "robertaformaskedlm": 217, "robertalmhead": 217, "featur": [217, 299, 318, 327, 329, 331, 332, 343, 346, 349, 356, 360, 368, 371, 380], "robertaforsequenceclassif": 217, "robertaformultiplechoic": 217, "robertafortokenclassif": 217, "robertaclassificationhead": 217, "robertaforquestionansw": 217, "quanstion": 217, "create_position_ids_from_input_id": 217, "padding_idx": 217, "non": [217, 354, 357, 359, 363, 364], "symbol": 217, "fairseq": 217, "make_posit": 217, "models": [218, 333, 367], "distributed_init": [219, 220], "gloo": 219, "world_siz": 219, "rank": 219, "init_method": 219, "master_addr": 219, "127": [219, 340, 360, 361, 370], "master_port": 219, "12345": 219, "distibut": 219, "environ": [219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 363, 364], "tfdataload": 220, "worker_address": 220, "worker": 220, "address": [220, 299, 328, 350, 356], "treat": [220, 338], "chief": 220, "get_filepath": 220, "base_dirpath": 220, "folder": [220, 337, 338, 339, 340, 341, 343], "keras2savedmodel": 220, "kera": 220, "augment": [221, 223, 374], "extens": [221, 329, 330, 335, 336, 337, 338, 339, 365, 367, 368, 369, 371], "dataaugment": [221, 330], "augmenter_typ": [221, 330], "wai": [221, 331, 340, 341, 342, 346, 349, 351, 355, 357, 360], "enhanc": [221, 335, 354], "textgenerationaug": [221, 330], "keyboardaug": [221, 330], "aug": [221, 299, 330], "input_dataset": [221, 330], "origin_data": 221, "output_path": [221, 330], "join": [221, 330], "result_path": [221, 330], "test1": [221, 330], "cv": [221, 330], "augmenter_argu": [221, 330], "gpt2": [221, 330], "medium": [221, 299, 330, 331, 364], "data_aug": [221, 330], "text_generation_augment": 221, "raw_dataset": [221, 330, 331, 335], "No": [221, 333], "glue": [221, 330, 331], "sst2": [221, 319, 330, 331, 333, 340, 344], "eo": [221, 330], "k": [221, 309, 330, 341, 350, 352, 353, 354, 355, 357, 358, 359, 361, 363], "p": [221, 330, 331], "top_p": 221, "effect": [221, 299, 330, 331, 338, 363], "tend": 221, "toward": [221, 328], "greedi": 221, "repetition_penalti": 221, "primarili": 221, "ctrl": [221, 330, 333], "num_return_sent": 221, "entir": [221, 340, 349, 355, 356, 369], "num_sampl": 221, "condit": [221, 330, 341, 342, 365], "stop_token": 221, "mit_data_augment": 221, "nlpaug": [221, 223, 330], "librari": [221, 223, 323, 329, 350, 351, 355, 376], "help": [221, 223, 330, 331, 346, 350, 362], "machin": [221, 223, 330, 363], "learn": [221, 223, 299, 330, 343, 351, 367, 370], "project": [221, 223, 328, 329, 330], "makcedward": [221, 223], "suffix": 221, "csv": [221, 330], "column_nam": 221, "sentence1": 221, "sentence2": 221, "data_augment": [222, 330], "augmentertyp": 223, "enumer": [223, 309], "get_augmenter_from_typ": 223, "aug_typ": 223, "augment_typ": 223, "testaddclstoken": 226, "methodnam": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "runtest": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "test": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 329, 331, 333, 336, 347, 361, 363, 364], "code": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 331, 335, 336, 338, 341, 351, 352, 353, 354, 355, 360, 363, 365], "itself": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 360], "place": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 351, 356, 369], "fixtur": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "testcas": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "constructor": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 345], "author": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 365], "deconstruct": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "setup": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 330, 331, 336, 338], "teardown": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "respect": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 342, 343], "necessari": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 345, 359, 363], "__init__": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338], "alwai": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 346, 355, 364], "signatur": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "failureexcept": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "fail": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "deem": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328], "rather": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 342, 350], "longmessag": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "long": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 346], "messag": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "repr": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "failur": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "explicit": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 328, 345, 351], "maxdiff": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "diff": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "difflib": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "look": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 340, 351, 352], "setupclass": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "hook": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "teardownclass": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "testaddembed": 227, "testattentionreshap": [228, 229, 274, 277], "testtorchmodel": [230, 244], "testbinaryop": 231, "testtorchop": [232, 234, 240, 243, 251, 252, 255, 256, 265, 268, 270, 279, 280, 282, 287, 291], "testcastto": 233, "testconvreshap": 235, "testdecoderattnreshap": 236, "testdispatchertuningacc": 237, "testdispatchertuningthroughput": 238, "testdynamicquant": 239, "testembeddingbag": 241, "testexecutionopt": 242, "testgraphdispatch": 245, "testinsertinputouputdata": 246, "testissupportedonnxgraph": 247, "testlastlayershap": 248, "testlayernormwithreducemean": [249, 276, 278], "testlayernormwithtranspos": 250, "testtorchlinear": 253, "testmain": 254, "testmatmulwithbiasrelu": 257, "testmatmulwithbiassigmoid": 258, "testmatmulwithbiastanh": 259, "testmergedembeddingbag": 260, "testonnxutil": 262, "testoperatoradaptor": 263, "testop": 264, "testpaddingsequ": 266, "testpatterndispatch": 267, "testpositionembed": 269, "testprimitivecacheacc": 271, "testprimitivecachethroughput": 272, "testqkvmerg": 273, "testquantonnxexecut": 275, "teststartendlogit": 281, "testtextencod": 283, "testtextencoderbf16": 284, "testtfutil": 285, "testtokentypeembed": 286, "testtransposebatchmatmul": 288, "testunet": 289, "testunetbf16": 290, "testvaedecod": 292, "testvaedecoderbf16": 293, "testweightsharingacc": 294, "testweightsharingdispatchertuningacc": 295, "testweightsharingdispatchertuningthroughput": 296, "testweightsharingthroughput": 297, "issu": [298, 318, 325, 328, 329, 331, 356, 370, 378], "center": 298, "resolv": 298, "guidelin": 298, "innov": [299, 331], "toolkit": [299, 331, 333], "particular": 299, "4th": [299, 331], "xeon": [299, 331, 333, 336, 349, 358, 361, 365, 370], "scalabl": [299, 331, 333, 336, 350], "processor": [299, 331, 333, 336, 347, 361], "sapphir": [299, 331, 336], "rapid": [299, 331, 336], "codenam": 299, "seamless": [299, 331], "experi": [299, 328, 331, 353, 358, 359], "extend": [299, 331, 352], "leverag": [299, 318, 331, 332, 335], "advanc": [299, 318, 328, 331, 348, 360], "softwar": [299, 331, 365], "optim": [299, 316, 318, 319, 331, 332, 333, 334, 335, 336, 339, 342, 343, 344, 350, 351, 352, 354, 366, 367, 368, 369, 370], "uniqu": [299, 331], "awar": [299, 331], "runtim": [299, 309, 331, 360, 363, 370], "releas": [299, 331, 375], "neurip": [299, 331], "2022": [299, 331, 347, 361], "paper": [299, 331, 335], "distilbert": [299, 318, 331, 333, 335, 343, 368], "quala": [299, 331, 333, 335], "minilm": [299, 331, 333, 335], "2021": [299, 331], "pre": [299, 331, 342, 352, 362], "applic": [299, 331], "diffus": [299, 331, 333, 355], "gpt": [299, 330, 331, 333], "j": [299, 331, 333, 337, 338, 339, 348, 354, 359, 360, 363], "6b": [299, 331, 333], "bloom": [299, 331], "176b": [299, 331], "t5": [299, 331, 333], "setfit": [299, 331], "blog": [299, 331], "publish": [299, 328, 331, 365], "mleffici": [299, 331], "effici": [299, 331, 335], "dec": [299, 331], "nov": [299, 331], "coher": [299, 356], "novemb": 299, "alibaba": 299, "deep": [299, 330, 331, 343, 351, 367, 370], "purif": 299, "kernel": [300, 309, 327, 339, 340, 345, 347, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 361, 362, 380], "namespac": [306, 307, 308, 309], "jd": [306, 307, 308, 309, 351], "engine_t": 306, "cpu_engine_t": 306, "gpu_ocl_engine_t": 306, "inlin": [306, 307, 308, 309, 350], "engine_kind": [306, 308, 351], "runtime_kind": [306, 308], "virtual": [306, 307, 308, 345, 350, 351], "get_engine_kind": 306, "get_runtime_kind": 306, "std": [306, 307, 308, 309, 348, 350, 351], "vector": [306, 307, 308, 309, 345, 348, 350, 351, 352, 354, 357, 359], "impl_list_item_t": [306, 307], "get_implementation_list": 306, "operator_desc": [306, 307, 310, 348], "op_desc": [306, 307, 348, 351], "create_kernel": 306, "shared_ptr": [306, 307, 345], "kernel_t": [306, 307], "stream_t": 306, "create_stream": 306, "create_memory_storag": 306, "memory_storage_t": 306, "protect": [306, 307], "engine_kind_": [306, 308], "runtime_kind_": [306, 308], "cpu_inst": 306, "null_inst": 306, "storag": 306, "empty_list": 306, "typenam": [307, 309], "arg_t": 307, "void": [307, 308, 309, 345, 348, 350, 351, 352], "proxy_bas": 307, "hpp": [307, 308, 309, 341, 348, 363], "proxi": [307, 323, 348, 355, 376], "anyth": 307, "similar": [307, 342, 350, 353, 354, 356, 357, 369], "onednn": [307, 345], "struct": [307, 309, 350, 351], "oneapi": [307, 345, 360], "dnnl": [307, 341, 345], "136": 307, "reset_sp": 307, "sp": 307, "get_sp": 307, "create_proxy_object": 307, "result_ref": 307, "privat": [307, 308, 328, 339, 345, 349, 350, 351, 356], "member": [307, 308, 309, 328, 345, 350, 351], "data_handle_": 307, "kernel_desc_proxi": 307, "kernel_desc_t": 307, "real": [307, 341, 356, 357, 360], "attention_desc": 307, "dyn_quantize_mha_desc": 307, "dynamic_quant_desc": 307, "dynamic_quant_matmul_desc": 307, "eltwiseop_desc": 307, "gather_desc": 307, "layernorm_ba_desc": [307, 350], "layernormalized_spmm_desc": 307, "logsoftmax_desc": 307, "mha_dense_desc": 307, "slice_desc": 307, "softmax_desc": 307, "sparse_matmul_desc": [307, 348], "transpose_matmul_desc": 307, "transpose_mha_desc": 307, "kernel_kind": [307, 308, 351], "impl_list_": 307, "nullptr": [307, 350], "kernel_proxi": 307, "dyn_quantize_mha": 307, "dynamic_qu": 307, "dynamic_quant_matmul": 307, "eltwiseop": [307, 350, 351], "layernorm_ba": 307, "layernormalized_spmm": 307, "mha_dens": [307, 363], "slice": [307, 355], "sparse_matmul": [307, 360], "transpose_matmul": 307, "transpose_mha": 307, "kdp": 307, "rt_data": [307, 348], "size_t": [307, 309, 341, 351], "get_workspace_s": 307, "kd": [307, 318, 332], "sparse_matmul_desc_t": 307, "sparse_matmul_t": 307, "descriptor": [308, 345, 363], "ker_kind": [308, 348, 351], "kernel_prop": [308, 351], "ker_prop": [308, 348, 351], "eng_kind": [308, 348, 351], "tensor_desc": [308, 351], "ts_desc": [308, 348, 351], "unordered_map": [308, 351], "postop_attr": [308, 309, 351], "apply_postops_list": [308, 351], "rh": [308, 357], "set_binaryop_list": [308, 350], "binaryop_attr": [308, 309, 350], "binaryop_list": [308, 350], "uint64_t": 308, "impl_nthr": 308, "get_binaryop_list": [308, 350], "ker_kind_": [308, 351], "ker_prop_": [308, 351], "forward_infer": [308, 345, 351], "undef": [308, 309, 350, 351], "impl_nthr_": [308, 351], "ts_descs_": [308, 351], "attrs_": [308, 351], "apply_postops_list_": [308, 351], "binaryop_list_": [308, 350], "enum": [309, 350, 351], "attention_io": 309, "merge_src": 309, "merge_dst": 309, "q_weight": 309, "k_weight": 309, "v_weight": 309, "q_bia": 309, "k_bia": 309, "v_bia": 309, "q_scale": 309, "k_scale": 309, "v_scale": 309, "reshape_input": 309, "q_k_src2": 309, "q_k_scale": 309, "qk_v_output_zero_point": 309, "qk_v_output_scal": 309, "ssd": [309, 351, 363], "eltwiseop_param_t": [309, 351], "element_num": [309, 351], "data_typ": [309, 345, 350, 351, 363], "in_dt": 309, "out_dt": 309, "element_num_each_th": 309, "remain_el": 309, "eltwiseop_data_t": 309, "dst": [309, 345, 350, 351, 353, 354, 355, 358, 359, 363], "gather_param_t": 309, "dt": [309, 350, 351], "dt_size": 309, "int64_t": 309, "extend_mask": 309, "src_axis_s": 309, "dst_axis_s": 309, "src_size": 309, "idx_siz": 309, "outer_s": 309, "inner_s": 309, "binary_ts_s": 309, "gather_data_t": 309, "binaryop_addr": [309, 350], "16": [309, 319, 333, 334, 339, 347, 353, 354, 355, 356, 359, 360, 361, 363, 370], "spec_translnorm_typ": 309, "normal": [309, 350, 358, 377], "layernorm_ba_param_t": 309, "input_dt": [309, 350, 363], "output_dt": [309, 363], "output2_dt": 309, "spec_typ": [309, 363], "row_num": 309, "col_num": 309, "process_col": [309, 350], "direct_process_row": 309, "process_batch_per_k": 309, "ker_per_batch": 309, "batch_num": 309, "thread_elt_offset": [309, 350], "split_output": 309, "layernorm_ba_data_t": 309, "dst2": 309, "process_row": 309, "anonym": 309, "ep": 309, "1e": 309, "matmul_param_t": 309, "dim_t": 309, "m_tile": 309, "n_tile": 309, "matmul_data_t": 309, "src0": [309, 363], "src1": [309, 340, 350, 363], "src2": [309, 350, 363], "matmul_u8_data_t": 309, "uint8_t": [309, 350, 351], "int8_t": 309, "zp": [309, 350], "matmul_io": 309, "io": [309, 345], "dst0": 309, "scale0": 309, "zp0": 309, "matmul_io_max": 309, "mean_var_reduce_param_t": 309, "bm": 309, "bn": 309, "mean_var_reduce_data_t": 309, "mean_in": 309, "var_in": 309, "mean_out": 309, "var_out": 309, "spec_softmax_typ": 309, "lut": [309, 348, 350, 351, 363], "softmax_param_t": 309, "sepc_typ": 309, "scalar_num": 309, "vec_align_len": 309, "vec_tail_len": 309, "vec_num_per_thr": 309, "vec_num_tail_thr": 309, "get_lut_exp_attr": 309, "softmax_data_t": 309, "tmp": [309, 351, 353, 355, 358], "process_vec_num": 309, "bfloat16_t": 309, "typedef": 309, "amx_params_t": 309, "amx_bf16_params_t": 309, "amx_int8_params_t": 309, "amx_inputs_t": 309, "amx_bf16f32_inputs_t": 309, "amx_bf16bf16_inputs_t": 309, "sparse_schem": 309, "scenario": [309, 330, 355], "spmm_vnni": 309, "sparse_x_dens": 309, "dense_x_spars": 309, "sparse_x_spars": 309, "subfunc_level": [309, 363], "non_kdim": 309, "kdim": 309, "subfunc_level_max": [309, 363], "constexpr": 309, "wei": [309, 355, 363], "todo": [309, 372], "yi": 309, "conflict": 309, "dst_m1": 309, "dst_m2": 309, "work_spac": 309, "vnni_param_t": 309, "spmm_type": 309, "primit": [309, 345], "jit_domain": 309, "has_bia": 309, "append_sum": 309, "output_typ": [309, 340], "tile_w": 309, "sub_func": 309, "im_start": 309, "blocksiz": 309, "indptr": 309, "welford": [309, 356], "dst_t": 309, "vnni_data_t": 309, "ptr_dens": 309, "int32_t": 309, "ptr_bia": 309, "ptr_dst": 309, "ptr_scale": 309, "ptr_dst_m1": 309, "ptr_dst_m2": 309, "num_tilem": 309, "tilem": 309, "tilen": 309, "blocks_per_group": 309, "64": [309, 318, 336, 340, 347, 355, 357, 358, 360, 361, 363], "sizeof": 309, "nnz_group": 309, "nrowptr": 309, "colidx": 309, "group_rowptr": 309, "same_src_dtyp": 309, "src_t": 309, "wgt_t": 309, "bia_t": 309, "avx512_fp32_params_t": 309, "bsc_data_t": 309, "sparse_ptr": 309, "im_end": 309, "in_start": 309, "in_end": 309, "avx512_data_t": 309, "transpose_copy_param": 309, "srcptr": 309, "dstptr": 309, "srcstride": 309, "dststride": 309, "seq_vnni_copy_param": 309, "transpose_mha_step1_param": 309, "mata": 309, "matb": 309, "matc": 309, "matd": 309, "expsum": 309, "cfg": 309, "batchk": [309, 358], "astep": 309, "cstep": 309, "sumstep": 309, "cbatchstep": 309, "scaleab": 309, "transpose_mha_step2_param": 309, "sumptr": 309, "transpose_mha_step3_param": 309, "scalec": 309, "zeropointc": 309, "transpose_mha_io": 309, "src_k": 309, "src_q": 309, "src_v": 309, "tmp2m": 309, "sl_pad": 309, "head_num": [309, 357, 363], "head_siz": [309, 357, 363], "seq_len": [309, 331, 339, 340, 344, 357, 363], "scale_q": 309, "scale_k": 309, "scale_v": 309, "scale_dst": 309, "zp_dst": 309, "transpose_mha_io_max": 309, "arch": 318, "proposit": 318, "promis": [318, 354], "assess": 318, "128": [318, 331, 339, 340, 344, 347, 361, 363, 370], "advisor": 318, "ever": 318, "find": [318, 338, 341, 345, 346, 354, 369], "student": [318, 332, 333], "minim": [318, 332, 359], "done": [318, 332, 341, 355, 363, 370], "z": [318, 332], "distanc": [318, 332], "euclidean": [318, 332], "kullback": [318, 332], "leibler": [318, 332], "diverg": [318, 332], "assign": 318, "cal": 318, "sloss": 318, "mismatch": 318, "512": [318, 340, 354, 356, 359, 361, 363], "desir": [318, 340], "unmatch": 318, "agent": 318, "train_func_builtin": 318, "flash_distil": 318, "eval_func_builtin": 318, "els": [318, 319, 338, 345], "search_loop": 318, "model_arch_para": 318, "oob": 318, "246": 318, "intra_bottleneck_s": 318, "96": [318, 347, 361], "160": [318, 347, 360], "num_attention_head": 318, "intermediate_s": 318, "640": 318, "num_feedforward_network": 318, "mobilebert": [318, 332, 333], "kl": 318, "mse": 318, "best_model_arch": 318, "automodelforpretrain": 318, "higher_is_bett": 318, "10": [318, 330, 331, 336, 339, 340, 347, 353, 361, 363], "42": [318, 347, 361], "500": 318, "25000": 318, "mobilebert_distil": 318, "sgd": 318, "learning_r": 318, "001": 318, "mobilebert_na": 318, "5000": 318, "partial": 318, "pylint": [318, 329], "disabl": [318, 328, 347, 361, 363], "e1101": 318, "makedir": 318, "exist_ok": 318, "120": [318, 360], "240": 318, "256": [318, 340, 361, 363], "eval_loss": [318, 335], "tfautomodelforsequenceclassif": 318, "capabl": [319, 356, 359], "through": [319, 331, 338, 350, 353, 354, 355, 360], "physic": [319, 328, 357], "model_nam": [319, 368], "dataset_nam": 319, "autotoken": [319, 331, 368], "load_dataset": [319, 330, 331], "lambada": 319, "195": 319, "intel_extension_for_transform": [319, 331, 332, 335, 336, 338, 339, 341, 343, 346, 348, 363, 366, 367, 368, 369, 370], "summari": 319, "003": 319, "throughput": [319, 331, 347, 355], "5071": 319, "933": [319, 347], "guid": [322, 331, 332, 338, 351, 353, 375], "formerli": [323, 331, 336, 348, 376], "known": [323, 331, 348, 376], "sparselib": [323, 341, 348, 376], "high": [323, 331, 339, 348, 355, 356, 359, 376], "assembli": [323, 348, 352, 354, 359, 360, 376], "introduc": [325, 329, 349, 350, 351, 352, 353, 355, 357, 358, 359, 370, 378], "who": [325, 328, 351, 378], "might": [325, 342, 378], "profil": [325, 378, 379], "intruct": [325, 378], "met": [325, 378], "request": [325, 331, 378], "interest": 328, "foster": 328, "open": [328, 330, 339, 343], "welcom": [328, 329], "maintain": [328, 329, 331, 342, 371], "particip": [328, 352], "commun": 328, "harass": 328, "free": [328, 350, 363], "everyon": 328, "regardless": 328, "ag": 328, "bodi": [328, 357], "ethnic": 328, "sex": 328, "characterist": 328, "gender": 328, "express": 328, "educ": 328, "socio": 328, "econom": 328, "statu": [328, 367, 370], "nation": 328, "person": 328, "appear": 328, "race": 328, "religion": 328, "sexual": 328, "orient": 328, "contribut": 328, "inclus": 328, "Being": 328, "viewpoint": 328, "gracefulli": 328, "critic": 328, "focus": 328, "empathi": 328, "unaccept": 328, "imageri": 328, "unwelcom": 328, "troll": 328, "insult": 328, "derogatori": 328, "comment": 328, "polit": 328, "attack": 328, "electron": 328, "permiss": 328, "reason": [328, 342, 345, 356], "consid": [328, 341, 349, 351, 353, 364], "inappropri": 328, "profession": 328, "clarifi": 328, "appropri": [328, 338, 350, 358], "fair": 328, "action": 328, "edit": 328, "reject": 328, "wiki": 328, "align": [328, 349, 351, 359], "ban": 328, "temporarili": 328, "perman": 328, "threaten": 328, "offens": 328, "harm": [328, 359], "offici": 328, "mail": 328, "post": [328, 340, 363], "via": [328, 350, 353, 360], "social": 328, "media": 328, "act": [328, 354], "appoint": 328, "onlin": [328, 331, 356], "offlin": [328, 353, 359, 370], "event": 328, "further": [328, 335, 341, 354], "abus": 328, "report": [328, 329, 331], "contact": [328, 371], "complaint": 328, "review": [328, 329], "investig": [328, 359], "circumst": 328, "team": 328, "oblig": 328, "confidenti": 328, "regard": 328, "incid": 328, "polici": [328, 375], "good": [328, 352, 353], "faith": 328, "temporari": [328, 357], "repercuss": 328, "leadership": 328, "faq": 328, "page": [328, 329, 331, 335], "send": 329, "flake8": 329, "autopep8": 329, "clean": 329, "bug": [329, 331], "jira": 329, "ticket": 329, "xxx": [329, 331], "risk": 329, "pr": [329, 363], "reproduc": 329, "submit": [329, 331], "intend": 329, "safe": 329, "collabor": 329, "adher": 329, "tool": [330, 331, 333, 340, 348, 363], "integr": [330, 379], "lab": 330, "pip": [330, 331, 336, 344], "clone": [330, 331, 336, 337, 338], "cd": [330, 331, 336, 337, 338, 339, 344, 348, 360, 363], "submodul": [330, 331, 336, 337, 339], "recurs": [330, 331, 336, 337, 339, 346], "dev": 330, "data_fil": 330, "delimit": [330, 363], "asserttru": 330, "len": [330, 338, 339, 346, 357], "column": [330, 349, 354, 356, 359, 369], "conduct": 330, "deploy": [330, 331, 335, 341], "cuda": 330, "ocraug": 330, "spellingaug": 330, "contextualwordembsforsentenceaug": 330, "xl": 330, "xlnet": [330, 333], "Not": [330, 354], "enough": [330, 355, 370], "rescu": 330, "natur": [330, 331, 333, 356], "sst": [330, 331, 333, 335, 368], "txt": [330, 331, 336, 339, 341, 344, 360], "w": [330, 339, 340, 341, 349, 352, 358], "fw": 330, "clm": [330, 333], "train_fil": 330, "validation_fil": 330, "model_dir": 330, "python3": [330, 337], "run_clm": 330, "do_train": 330, "do_ev": 330, "overwrite_output_dir": 330, "secondli": 330, "training_set": 330, "line": [330, 338, 341, 349, 356, 357, 359, 364], "repetit": 330, "penalti": 330, "platform": [331, 362, 370], "particularli": 331, "gen": [331, 351], "imag": [331, 333, 343, 346, 353, 359], "sentiment": 331, "analysi": 331, "becom": [331, 342, 359], "wide": [331, 332, 351, 352, 370], "art": 331, "popular": 331, "ai": 331, "visit": [331, 347, 361], "skylak": 331, "cascad": [331, 336], "lake": [331, 336], "ic": 331, "cooper": [331, 355], "seri": [331, 350, 353, 363], "hbm": 331, "develop": [331, 345], "easi": [331, 341, 343], "rich": 331, "demonstr": [331, 333, 335, 357, 359], "extrem": [331, 335], "significantli": [331, 356, 358], "cento": [331, 336], "ubuntu": [331, 336, 347, 361], "04": [331, 333, 336, 347, 361], "window": [331, 337], "r": [331, 336, 344, 347, 361, 370], "succeed": 331, "grep": 331, "matrix": [331, 335, 349, 352, 353, 354, 356, 357, 358, 359, 363, 369, 373], "23": [331, 353, 361], "load_metr": 331, "np": 331, "automodelforsequenceclassif": [331, 335], "evalpredict": 331, "english": [331, 333, 335, 368], "lambda": 331, "label2id": [331, 335], "id2label": [331, 335], "neg": [331, 335, 363], "pred": 331, "argmax": [331, 335], "label_id": 331, "q_config": [331, 335, 370], "eval_accuraci": [331, 332, 335, 369], "tmp_trainer": 331, "enable_executor": [331, 334], "neural_engin": [331, 335, 337, 338, 339, 340, 341, 343, 346, 348, 363], "set_log_fil": 331, "load_graph": 331, "dummydataload": 331, "compute_perform": 331, "glog_minloglevel": [331, 339, 344], "input_model": [331, 340, 343, 344], "warm_up": 331, "p50": 331, "50": [331, 360], "p90": 331, "90": [331, 333, 340, 347], "p99": 331, "99": [331, 333, 361], "sec": [331, 347], "workflow": [331, 332, 341, 343, 357], "tutori": [331, 339], "relev": 331, "resourc": [331, 332, 352], "catalog": 331, "brand": [331, 365], "claim": [331, 365], "properti": [331, 339, 365], "trademark": 331, "larg": [332, 333, 346, 347, 349, 352, 355, 356, 357, 363], "signific": 332, "expens": 332, "deploi": [332, 379], "power": [332, 333], "mobil": 332, "shown": [332, 341, 354, 358, 359], "produc": [332, 359], "instruct": [332, 342, 350, 353, 355, 358, 359, 360, 363, 370], "besid": [332, 351], "often": 332, "patient": 332, "compact": 332, "agnost": 332, "summar": [332, 333], "usual": [332, 342, 349, 359, 370], "1x1": [332, 341], "d_conf": [332, 335], "tune_metr": [332, 369], "metric_": 332, "classifi": 332, "distillation_conf": 332, "distilled_model": 332, "intermediatelayersloss": 332, "meanwhil": [333, 349], "posttrainingdynam": [333, 334, 370], "wikitext": 333, "10004": [333, 334], "xsum": 333, "cnn": 333, "cnn_dailymail": 333, "dm": 333, "lambdalab": 333, "sd": 333, "pokemon": 333, "mlm": 333, "plm": 333, "eleutherai": 333, "neo": 333, "125m": 333, "sshleifer": 333, "wip": [333, 353], "star": 333, "ehdwns1516": 333, "uncased_swag": 333, "swag": 333, "squad": 333, "valhalla": 333, "longform": 333, "4096": [333, 361], "squadv1": 333, "lvwerra": 333, "pegasu": 333, "samsum": 333, "textattack": [333, 343], "mrpc": [333, 343, 344], "echarlaix": 333, "acc91": 333, "d37": 333, "hybrid": 333, "elast": 333, "conll03": 333, "conll2003": 333, "small": [333, 341, 355, 357], "translat": 333, "wmt16": 333, "helsinki": 333, "opu": 333, "mt": [333, 362], "en": 333, "ro": 333, "quantizationawaretrain": [333, 334], "maskinun": 333, "distilgpt2": 333, "rocketknight1": 333, "dslim": 333, "ner": 333, "mb": 333, "f1": [333, 366], "gflop": [333, 361, 364], "speedup": 333, "compar": [333, 349, 352, 363, 370], "415": [333, 347], "47": [333, 347, 361], "88": [333, 347, 360, 361], "58": [333, 361], "56": [333, 360, 361], "35": [333, 347, 361], "1x": 333, "la": [333, 352], "minilmv2": 333, "115": 333, "89": [333, 361], "28": [333, 347, 353, 361], "76": [333, 360, 361], "33x": 333, "269": 333, "253": 333, "252": [333, 360], "202": 333, "104": 333, "34": [333, 361], "87": [333, 361], "11": [333, 336, 344, 353, 361], "44": [333, 340, 347, 360, 361], "49": [333, 346, 347, 361], "94x": 333, "84": [333, 361], "85": [333, 347, 361], "21x": 333, "315": 333, "251": [333, 361], "242": [333, 347, 361], "159": [333, 360], "142": [333, 361], "33": [333, 361], "86": [333, 361], "68": [333, 360, 361], "41": [333, 347, 361], "55": [333, 360, 361], "82x": 333, "amount": [333, 352], "torchprofil": 333, "platinum": [333, 347, 361], "8280": 333, "unstructur": [333, 369], "nbsp": [333, 347, 361], "qnli": 333, "qqp": 333, "mnli": 333, "v1": 333, "tinybert_general_4l_312d": 333, "distilroberta": 333, "cola": 333, "krishna2020": 333, "googl": 333, "wikipedia": 333, "prajjwal1": 333, "approch": 333, "pruneofa": 333, "patternlock": [333, 369], "bhadresh": 333, "savani": 333, "emot": 333, "fac": 333, "mini": [333, 340, 344, 347], "gchhablani": 333, "philschmid": 333, "l6": 333, "h384": 333, "moshew": [333, 344], "80": [333, 340, 347, 361], "1x4": [333, 359], "desigh": 334, "32": [334, 339, 347, 353, 354, 356, 357, 358, 359, 360, 361, 363], "bit": [334, 335, 349, 350, 356, 359, 370], "bfloat": 334, "fetch": [334, 349, 352], "flag": 334, "enable_bf16": 334, "bfloat16": 334, "qlinear": [334, 343], "u8s8": 334, "u8u8": 334, "highli": 334, "suggest": [334, 350], "quick": [335, 338], "p_conf": [335, 369], "reduct": [335, 354, 357], "accommod": 335, "budget": 335, "tradeoff": [335, 353], "dynamic_length_config": 335, "aim": [335, 338, 340, 342], "opportun": 335, "hw": 335, "sw": 335, "satisfi": [336, 346, 355], "success": 336, "recommend": [336, 338, 341, 344, 346, 356, 360], "protobuf": [336, 344], "nightli": 336, "conda": [336, 344], "visual": 336, "studio": 336, "compat": 336, "icelak": 336, "futur": [336, 343, 350, 351, 360], "ipex": [336, 370], "13": [336, 347, 353, 361], "linux": 337, "gcc": 337, "cmake": [337, 339, 348, 360, 363], "repo_path": 337, "mkdir": [337, 339, 348, 360, 363], "dpython_execut": 337, "dne_with_sparselib": [337, 363], "neural_engine_bin": 337, "neural_engine_pi": [337, 341], "cpython": 337, "37m": 337, "x86_64": 337, "gnu": 337, "libkernellib": 337, "libneural_engin": 337, "pure": [337, 351], "certain": [338, 346], "simplifi": [338, 342], "attach": [338, 346], "distilbert_bas": 338, "assum": [338, 346, 352], "command": [338, 339, 343, 364], "repo": [338, 363], "instal": [338, 375], "These": [338, 342, 346, 352, 358], "roughli": [338, 355], "divid": [338, 346, 349, 354, 355, 358, 364], "categori": [338, 340], "dst_shape": [338, 339, 345], "father": 338, "keep_dim": 338, "ax": [338, 357], "come": 338, "rewrit": 338, "_attr": 338, "successfulli": [338, 346], "forget": [338, 342, 345], "reinstal": 338, "enter": 338, "you_work_dir": 338, "noth": [338, 346], "wrong": [338, 346], "anoth": [338, 342, 360], "correctli": 338, "distil_bert_bas": 338, "pattern_mapping_config": 338, "div": [338, 342], "even": [338, 349], "delv": 338, "recogn": [338, 379], "put": [338, 339, 342], "namedtupl": 338, "__call__": 338, "retriev": 338, "actual": [338, 339, 356], "equival": [338, 359], "supported_pattern": 338, "influenc": [338, 342], "arbitrari": 338, "pattern_dict": 338, "new_node_nam": 338, "ret_old_nod": 338, "talk": 338, "denomin": 338, "numer": [338, 370], "stabil": 338, "_set_attr": 338, "ln_node_idx": 338, "meet": [338, 353, 355, 359], "finish": [338, 342, 344], "yourself": [338, 346], "multi": [339, 340, 341], "seq": [339, 357], "bert_model": 339, "30522": 339, "1024": [339, 340, 341, 361, 363], "125018112": 339, "slightli": 339, "activ": [339, 343, 344, 349, 353, 354, 355, 358, 363, 370], "throught": 339, "numactl": 339, "bind": 339, "omp_num_thread": 339, "session": 339, "close": 339, "again": [339, 356], "nerual": 339, "cc": 339, "cmakelist": 339, "reus": [339, 355], "engine_integr": 339, "itrex": 339, "cp": 339, "nlp_executor": 339, "neural_engine_exampl": 339, "ne": 339, "root": 339, "ne_root": 339, "project_source_dir": 339, "link": [339, 345, 369], "lib": 339, "runtime_output_directori": 339, "add_execut": 339, "target_include_directori": 339, "boost_inc_dir": 339, "target_link_librari": 339, "cmake_thread_libs_init": 339, "gflag": 339, "dir": 339, "set_target_properti": 339, "analyz": 340, "let": [340, 345, 352, 353], "readm": [340, 343], "run_executor": [340, 344], "model_and_token": [340, 343, 344], "Of": [340, 346, 352], "cours": [340, 346, 352], "proflil": 340, "latanc": 340, "perf": [340, 359, 363, 364], "perfrom": 340, "chrome": 340, "tell": [340, 342, 350, 351], "inst": 340, "pref": 340, "semi": 340, "70": [340, 347], "256x256": [340, 363], "settabl": 340, "256x1024": 340, "1024x256": 340, "gelu_tanh": [340, 345], "add_37": 340, "116": [340, 361], "641": 340, "00": 340, "075": 340, "0375": 340, "comparison": [340, 359], "185": 340, "801": 340, "693": 340, "366": 340, "content": 340, "part1": [340, 345], "modif": 340, "xlsx": 340, "titl": [340, 365], "model_infer": 340, "friendli": [340, 355, 356], "000": 340, "wall": 340, "durat": 340, "17": [340, 347, 353, 361], "138": 340, "iteration4": 340, "726": 340, "phrase": 340, "0m": 340, "perm": [340, 357], "add_284": 340, "028": [340, 361], "044": 340, "reshape_tim": 340, "004m": 340, "forward_tim": 340, "044m": 340, "input_tensor_nam": 340, "matmul_357": 340, "matmul_358": 340, "matmul_346": 340, "input_typ": 340, "f32": [340, 345], "input_shap": [340, 341, 363], "output_tensor_nam": 340, "output_shap": 340, "append_op": 340, "src1_perm": 340, "try": [341, 370], "pictur": [341, 349, 362], "bring": [341, 354, 358, 359], "merg": [341, 346], "off": 341, "model_path": 341, "isa": [341, 348, 350, 355, 358, 359, 360], "int8_model_path": 341, "shape_0": 341, "shape_1": 341, "shape_2": 341, "enlarg": 341, "subsequ": [341, 355, 358], "remark": 341, "micro": [341, 349, 354, 359], "oc": [341, 363], "mk": 341, "kn": 341, "nhwc": 341, "nxhxw": 341, "h": 341, "nk": 341, "km": 341, "mmkmb": 341, "mmxmb": 341, "fulfil": 341, "omp": 341, "higher": [341, 357, 359, 363, 370], "unrol": [341, 352, 354], "know": [341, 353], "disk": [341, 343], "dp": 341, "executionopt": 341, "enable_op_tun": 341, "execution_opt": 341, "engine_dispatch_t": 341, "workspac": 341, "tabl": [341, 351, 359], "row": [341, 352, 353, 355, 359, 369], "rest": [341, 342, 346, 357, 359], "hash": [341, 350], "kernel_config": [341, 363], "kernel_nam": [341, 363], "3025159985633461085": 341, "40": [341, 347], "14124194128933833351": 341, "thing": 341, "affect": [341, 355, 358, 364], "simul": [341, 359, 360], "warmup_it": 341, "num_iter": 341, "dispatch_table_file_root": 341, "file_root": 341, "script": [341, 343, 362], "prevent": 341, "imprecis": 341, "purpos": [342, 346, 350, 355], "realiz": 342, "suppli": [342, 346], "recognit": [342, 346], "embeddings_reshap": 342, "said": 342, "thought": 342, "st": 342, "nd": 342, "copi": [342, 357], "greater": [342, 366, 367], "sent": 342, "written": 342, "phenomenon": 342, "Its": 342, "situat": [342, 356], "nod": 342, "leav": [342, 357, 359, 363], "old_node_index": 342, "_get_pattern_info": 342, "_create_out_pattern": 342, "_replace_pattern": 342, "emitt": 343, "netron": 343, "bash": [343, 344], "prepare_model": [343, 344], "sh": [343, 344, 364], "task_nam": [343, 344], "ptq": 343, "ir_path": 343, "focu": [344, 357, 366], "nc_folder": 344, "deepengin": 344, "distilbert_base_uncased_mrpc": 344, "env": 344, "prepare_dataset": 344, "shell": 344, "tokenizer_dir": 344, "data_dir": 344, "geluoper": 345, "destructor": 345, "operatorconfig": 345, "algorithm_": 345, "eng_": 345, "eltwise_forward": 345, "gelu_p_": 345, "src_m_": 345, "dst_m_": 345, "attrs_map": 345, "operator_conf_": 345, "becuas": 345, "src_shape": 345, "dst_tensor_ptr": 345, "set_shap": 345, "stride": [345, 349], "src_stride": 345, "getstrid": 345, "dst_stride": 345, "desc": [345, 350, 351], "src_md": 345, "dst_md": 345, "part2": 345, "gelu_algorithm": 345, "gelu_erf": 345, "eltwise_gelu_erf": 345, "eltwise_gelu_tanh": 345, "gelu_d": 345, "prop_kind": 345, "primitive_desc": 345, "gelu_pd": 345, "unrefernc": 345, "manag": 345, "strictli": 345, "alia": 345, "src_data": 345, "dst_data": 345, "mutable_data": 345, "data_ptr": 345, "stream": 345, "set_data_handl": 345, "const_cast": 345, "reinterpret_cast": 345, "memory_args_": 345, "dnnl_arg_src": 345, "dnnl_arg_dst": 345, "unref": 345, "unref_tensor": 345, "especi": [345, 359], "int8_lut_optim": 345, "int8_lut_acc_test": 345, "set_dtyp": 345, "register_operator_class": 345, "rule": 346, "recruit": 346, "ln_pattern": 346, "grow": 346, "concis": 346, "intuit": [346, 355], "choos": 346, "prefer": [346, 357], "longer": 346, "ones": 346, "op_type1": 346, "op_type2": 346, "type1": 346, "type2": 346, "elig": 346, "a_node_name_1": 346, "b_node_name_1": 346, "c_node_name_1": 346, "a_node_name_2": 346, "b_node_name_2": 346, "c_node_name_2": 346, "a_node_name_n": 346, "b_node_name_n": 346, "c_node_name_n": 346, "bert_large_model_path": 346, "layer_0": 346, "layer_1": 346, "layer_2": 346, "afterward": 346, "volatil": 346, "incorrect": 346, "outcom": 346, "Or": 346, "exactli": 346, "screen": 346, "occur": [346, 349, 356], "alreadi": 346, "moment": 346, "varianc": [346, 356], "batchnorm": 346, "mul_1": 346, "mul_2": 346, "add_1": 346, "07": [347, 361], "8375c": [347, 361], "aw": [347, 361], "c6i": [347, 361], "12xlarg": [347, 361], "vari": [347, 361], "factor": [347, 361], "www": [347, 361], "batchsiz": 347, "2652": 347, "36": [347, 361], "513": 347, "lt": [347, 361], "50m": 347, "2181": 347, "43": [347, 361], "628": 347, "1719": 347, "91": [347, 361], "75": [347, 361], "1487": [347, 361], "255": [347, 358, 370], "1220": 347, "39": [347, 361], "143": 347, "1304": 347, "46": [347, 361], "066": 347, "1102": [347, 361], "870": 347, "487": 347, "750": 347, "82": [347, 360, 361], "690": [347, 361], "188": 347, "910": [347, 361], "921": [347, 361], "729": 347, "71": [347, 360, 361], "619": 347, "38": [347, 360, 361], "821": [347, 361], "499": 347, "429": [347, 360], "936": [347, 361], "680": 347, "318": [347, 361], "557": 347, "262": 347, "467": 347, "589": 347, "405": 347, "339": 347, "473": 347, "119": [347, 361], "389": 347, "945": [347, 361], "360": 347, "274": 347, "843": 347, "259": [347, 360, 361], "442": 347, "241": 347, "364": 347, "016": [347, 361], "303": 347, "266": 347, "45": [347, 361], "05": [347, 361], "221": 347, "973": 347, "112": [347, 361], "349": 347, "938": [347, 361], "275": [347, 360], "614": 347, "217": 347, "37": [347, 361], "039": 347, "301": 347, "166": 347, "033": 347, "320": 347, "769": 347, "263": 347, "724": [347, 361], "207": 347, "819": [347, 361], "181": 347, "021": 347, "979": [347, 361], "74": [347, 361], "235": 347, "63": [347, 361], "091": 347, "51": [347, 361], "914": [347, 361], "698": [347, 361], "905": [347, 361], "8972": 347, "076": [347, 361], "20m": 347, "7192": 347, "19": [347, 353, 361], "906": 347, "5482": 347, "509": 347, "4808": 347, "952": 347, "3678": 347, "409": 347, "4750": 347, "975": [347, 361], "3647": 347, "867": 347, "2921": 347, "587": [347, 361], "2576": 347, "18": [347, 353, 361], "768": [347, 361], "2131": [347, 361], "913": [347, 361], "2804": 347, "096": 347, "2263": 347, "037": 347, "1938": 347, "756": [347, 361], "1581": 347, "15": [347, 353, 354, 359, 361], "1409": 347, "015": 347, "2116": 347, "113": 347, "1777": 347, "972": [347, 361], "1474": 347, "392": 347, "1278": 347, "1137": 347, "752": 347, "1594": 347, "124": 347, "1347": [347, 361], "1126": 347, "993": [347, 361], "258": 347, "890": [347, 361], "877": [347, 361], "1319": 347, "1086": 347, "931": [347, 361], "545": 347, "833": 347, "332": [347, 361], "747": [347, 361], "141": 347, "1106": [347, 361], "31": [347, 353, 354, 361], "924": 347, "446": 347, "719": 347, "633": 347, "501": 347, "816": 347, "961": 347, "549": 347, "807": 347, "868": [347, 361], "701": [347, 361], "117": 347, "613": 347, "618": 347, "515": 347, "75384": 347, "989": 347, "1m": 347, "55628": 347, "917": 347, "49120": 347, "957": [347, 361], "41598": 347, "39218": 347, "31211": 347, "788": [347, 361], "28399": 347, "848": 347, "24910": 347, "966": 347, "20505": 347, "18575": 347, "865": 347, "25485": 347, "987": 347, "17468": 347, "16771": 347, "971": [347, 361], "16004": 347, "996": [347, 361], "13381": 347, "894": [347, 361], "13990": 347, "863": [347, 361], "13154": 347, "12535": 347, "12102": 347, "998": 347, "8426": [347, 361], "8736": 347, "8282": 347, "967": 347, "6659": 347, "898": [347, 361], "6477": 347, "6290": 347, "974": [347, 361], "8598": 347, "6449": 347, "935": [347, 361], "6263": [347, 361], "965": [347, 361], "6080": 347, "988": 347, "3684": 347, "817": [347, 361], "6246": 347, "978": 347, "6374": 347, "947": [347, 361], "6026": 347, "3300": [347, 361], "926": 347, "3226": 347, "6221": 347, "958": 347, "6322": 347, "6081": 347, "985": [347, 361], "3368": 347, "3264": 347, "distillbert": 347, "15460": 347, "296": 347, "10m": 347, "13129": 347, "363": 347, "11323": 347, "578": [347, 361], "10072": 347, "599": 347, "8689": 347, "7901": 347, "205": [347, 361], "6737": 347, "562": 347, "5440": 347, "904": [347, 361], "4920": 347, "786": [347, 361], "4460": 347, "053": 347, "5280": 347, "179": 347, "4339": 347, "244": [347, 360], "3634": [347, 361], "928": 347, "3255": 347, "211": [347, 361], "2928": 347, "197": [347, 361], "3681": 347, "527": [347, 361], "2965": [347, 361], "106": [347, 361], "2741": 347, "862": [347, 361], "2351": 347, "2150": 347, "282": 347, "2918": 347, "316": 347, "2505": [347, 361], "602": 347, "2010": [347, 361], "995": 347, "1872": 347, "609": [347, 361], "2409": 347, "983": 347, "1993": 347, "013": 347, "1671": [347, 361], "627": 347, "1484": 347, "131": 347, "1342": [347, 361], "1910": 347, "456": [347, 361], "1659": 347, "687": 347, "1293": 347, "245": [347, 361], "1230": 347, "798": 347, "1091": 347, "261": 347, "1627": 347, "908": 347, "1397": 347, "684": 347, "1130": 347, "1081": 347, "353": 347, "982": [347, 361], "187": [347, 360], "manufactur": [347, 361], "amazon": [347, 361], "ec2": [347, 361], "bio": [347, 361], "1021": [347, 361], "microcod": [347, 361], "0xd000331": [347, 361], "irq": [347, 361], "balanc": [347, 361], "xeonplatinum": 347, "90ghz": [347, 361], "9ghz": [347, 361], "5ghz": [347, 361], "thread": 347, "socket": [347, 361], "numa": [347, 361], "turbo": [347, 361], "frequencygovern": [347, 361], "workdir": 348, "dne_with_test": 348, "ON": [348, 363], "ut": [348, 351], "dne_with_sparselib_onli": [348, 363], "dne_with_sparselib_benchmark": [348, 363], "test_spmm_vnni_kernel": 348, "box": 348, "profl": [348, 360], "op_attr": [348, 350, 351, 357], "spmm_desc": 348, "spmm_kern": 348, "data0": 348, "data1": 348, "data2": 348, "data3": 348, "data4": 348, "vnni": [348, 349, 353, 357, 358, 361, 363, 370, 377], "amx": [348, 355, 358, 363, 377], "residu": 348, "avx512": [348, 349, 353, 370], "mha": [348, 377], "avx512f": [348, 357, 363, 377], "spmm": [349, 357, 363], "deeplearn": 349, "multipli": [349, 355, 359, 370], "adopt": [349, 354, 359], "modern": 349, "spatial": [349, 355], "program": [349, 365], "64byte": 349, "organ": 349, "associ": 349, "access": [349, 354, 355], "b1": 349, "b2": 349, "simd": [349, 350, 354], "evenli": 349, "discontinu": 349, "fulli": [349, 358, 359], "worst": 349, "veri": [349, 351, 352, 355], "miss": [349, 359], "frequent": 349, "destin": [349, 354, 357, 363], "l1": 349, "l2": [349, 355, 363], "perhap": 349, "mxk": [349, 363], "bxm": 349, "xk": 349, "bxkxm": 349, "2d": [349, 363], "respons": [349, 355, 356, 358], "frac": [349, 357], "binaryop": 350, "dl": 350, "changeabl": 350, "operand": [350, 354], "horizont": 350, "overhead": [350, 356, 357, 358, 359], "move": 350, "binaryop_injector": 350, "postop": [350, 351, 363], "quit": 350, "eltwise_injector": [350, 351], "escap": [350, 351], "compute_vector": 350, "expos": [350, 351], "arithmet": 350, "brows": 350, "vpaddb": 350, "vaddp": 350, "unlik": 350, "ptr": [350, 351, 360], "static_addr": 350, "addr": 350, "binaryop_alg": 350, "per_channel_qu": 350, "per_channel_dequ": 350, "op_alg": [350, 351], "op_dt": 350, "alg": 350, "set_scal": 350, "set_zp": 350, "binary_injector_init": 350, "set_mask": 350, "reg64": [350, 351], "zmm": [350, 351, 354, 356, 359], "get_addr": 350, "broadcast": [350, 354, 359, 360, 363], "enable_mask": 350, "vector_comput": [350, 351], "bianryop": 350, "comput_vector": 350, "wrapper": 350, "jit_binary_injector": 350, "addr_typ": 350, "jit_gener": [350, 351], "opmask": [350, 351], "mov": [350, 360], "addr_ptr": 350, "zmm_src1": 350, "regexp": 350, "step1": [350, 351, 358], "binary_injector": 350, "step2": [350, 351, 358], "data_param": 350, "param_": [350, 351], "front": 350, "append_loop_len": 350, "zmm_byte_s": 350, "get_data_s": 350, "offset_exp": 350, "bianryop_attr_list": 350, "append_vec": 350, "binary_add": 350, "eltwis": 351, "tradit": 351, "obvious": [351, 352, 356], "useless": 351, "idea": [351, 359, 369], "xbyak": 351, "binari": [351, 358, 363, 377], "algo": 351, "aplha": 351, "sacl": 351, "postop_alg": 351, "int8_lut": 351, "postop_typ": 351, "mathemat": 351, "satur": 351, "round": [351, 370], "unus": 351, "\u03b1x": 351, "\u03b2": 351, "le": 351, "gt": 351, "eng_kind_": 351, "omp_get_max_thread": 351, "omp_get_num_proc": 351, "eltwise_injector_init": 351, "chian": 351, "escape_reg": 351, "escape_eras": 351, "eras": 351, "prepare_t": 351, "zmm_src": 351, "postop_idx": 351, "reg_idx": 351, "step0": 351, "jit_eltwiseop_t": 351, "assign_reg": 351, "eltwiseop_kd_t": 351, "op_desc_": 351, "params_": 351, "remain_task_mask": 351, "scratch_": 351, "r10": 351, "reg_src": 351, "addr_src": 351, "r15": [351, 360], "addr_dst": 351, "r14": [351, 360], "reg_param": 351, "rdi": [351, 360], "remain_element_num": 351, "rsi": 351, "getidx": 351, "alloc": [351, 352, 355], "rcx": 351, "rdx": 351, "rsp": 351, "step3": [351, 358], "preambl": 351, "load_param": 351, "vmovup": [351, 360], "postambl": 351, "fp32_gelu_attr": 351, "bf16_gelu_attr": 351, "push_back": 351, "gen_cas": 351, "data0_desc": 351, "postop_list": 351, "fp32_gelu": [351, 363], "fp32_exp": 351, "mask_mock1": 351, "reg64_mock1": 351, "zmm_mock1": 351, "fp32_exp_attr": 351, "data1_desc": 351, "bf16_gelu": 351, "bf16_exp": [351, 363], "bf16_exp_attr": 351, "dt1op1": 351, "dt2op2": 351, "hase": 351, "get_true_data": 351, "rf_data": 351, "your_kernel_log": 351, "apply_postop_list": 351, "unit_test_util": 351, "articl": [352, 370], "gpu": 352, "opencl": 352, "snippet": 352, "unintellig": 352, "understand": [352, 355], "__kernel": 352, "naive_gemm": 352, "__global": 352, "globalrow": 352, "get_global_id": 352, "globalcol": 352, "col": [352, 353, 356, 358], "over": [352, 354, 357], "acc": [352, 363, 364], "0f": 352, "mxn": [352, 358, 363], "2xk": 352, "redund": [352, 369], "asub": 352, "bsub": 352, "tile_gemm": 352, "get_local_id": 352, "get_group_id": 352, "__local": 352, "initialis": 352, "accumul": [352, 357, 359], "numtil": 352, "tiledrow": 352, "tiledcol": 352, "synchronis": 352, "barrier": 352, "clk_local_mem_f": 352, "full": [352, 365, 370], "white": 352, "figur": [352, 355, 356, 357, 359, 362], "half": [352, 358], "correspondingli": 352, "increas": 352, "workload": [352, 357], "localmemori": 352, "tight": 352, "ll": 352, "twice": [352, 358], "ping": 352, "pong": 352, "tidm": 352, "tidn": 352, "offsetm": 352, "offset": [352, 356, 357], "offsetn": 352, "areg": 352, "breg": 352, "wm": 352, "wn": 352, "lpta": 352, "tid": 352, "mod2": 352, "div2": 352, "tiledindex": 352, "indexa": 352, "indexb": 352, "veca": 352, "vecb": 352, "tt": 352, "pragma": 352, "tdpbf16p": 353, "16x32": 353, "32x16": 353, "FOR": [353, 354, 359], "TO": 353, "colsb": 353, "byte": [353, 359], "endfor": [353, 354, 359], "write_row_and_zero": 353, "zero_upper_row": 353, "zero_tileconfig_start": 353, "layout": [353, 356, 357, 358], "successor": 353, "1x16": [353, 359], "concaten": [353, 359, 363], "intrins": 353, "tileloadd": 353, "nonzero": 353, "vmovdqu32": 353, "consum": 353, "altern": [353, 359], "lot": 353, "disast": 353, "16x1": [353, 357], "greatli": [353, 358], "impact": 353, "fly": 353, "__m512i": 353, "_mm512_set_epi16": 353, "29": [353, 361], "27": [353, 361], "26": [353, 360, 361], "25": [353, 361, 363], "22": [353, 361], "21": [353, 361], "__m256i": 353, "lo": 353, "_mm256_loadu_epi": 353, "li": 353, "vec": 353, "_mm512_inserti32x8": 353, "_mm512_castsi256_si512": 353, "_mm512_permutexvar_epi16": 353, "_mm512_storeu_epi32": 353, "vfmadd": 354, "vfmadd231p": [354, 360], "degre": 354, "parallel": [354, 355, 356, 359, 363], "conting": 354, "bsc": 354, "variant": 354, "bsr": 354, "openmp": 354, "thu": [354, 370], "relief": 354, "bottleneck": [354, 356], "microkernel": 354, "peripher": 354, "implicit": 354, "technologi": 355, "among": [355, 358], "satisfactori": 355, "inevit": 355, "solv": [355, 356, 370], "facilit": [355, 358], "At": [355, 356, 358], "flexibl": 355, "divis": 355, "tdpbssd": 355, "tile_k": 355, "formula": 355, "max_tile_k": 355, "back": [355, 356, 357, 358], "extra": 355, "hope": 355, "large_wei_threshold": 355, "16xpad_n": 355, "buffer": [355, 356, 358], "tilestor": 355, "pseudo": 355, "tile_m": [355, 363], "16xn": 355, "dp_tile_n": 355, "k_dim_dp": 355, "write_tile_to_tmp_buf": 355, "dequantize_tile_on_tmp_buf": 355, "calculate_scale_on_tmp_buf": 355, "write_back_scal": 355, "quant_tile_n": 355, "quantize_on_tmp_buf": 355, "write_tile_to_dst": 355, "per_channel_dynamic_quant": 355, "s8s8bf16": 355, "desid": 355, "du": 355, "principl": 355, "possibl": 355, "premis": 355, "rate": [355, 356], "therebi": 355, "feel": [355, 363], "benefit": [355, 359, 370], "suitabl": 355, "chart": 355, "naiv": 356, "solut": [356, 359], "gap": 356, "layernrom": 356, "3d": [356, 377], "poor": 356, "fewer": 356, "wast": 356, "inconsist": 356, "scene": 356, "quarter": 356, "depict": 356, "protocol": 356, "bandwidth": [356, 358, 370], "gain": [356, 370], "brought": [356, 370], "majotr": 356, "layternorm": 356, "encapsul": 356, "ba": [356, 360, 363], "discret": 356, "append": [356, 363, 364], "overal": 356, "p2031": [357, 363], "2013": 357, "noperm": [357, 363], "p1302": [357, 363], "p2013": [357, 363], "equat": [357, 370], "dot": [357, 370], "rm": 357, "q": [357, 358], "v": [357, 358], "qk": 357, "textunderscor": 357, "nativ": 357, "sparelib": 357, "axis": 357, "conceptu": 357, "head_nun": 357, "perm2031": 357, "perm2013": 357, "perm1302": 357, "concept": [357, 359], "lh": 357, "float32": [357, 370], "illustr": 357, "inner": 357, "16x16": 357, "drawn": 357, "lighter": 357, "cell": [357, 359], "respectfulli": 357, "vnni_noperm_p2013_p1302": 357, "transpose_4b_8x8": 357, "legend": 357, "explan": 357, "contigu": 357, "ellipsi": 357, "thinner": 357, "border": 357, "bolder": 357, "color": [357, 359], "16x32x16": 357, "lead": [357, 359], "suboptim": 357, "piec": 357, "turn": 357, "abl": [357, 370], "boost": 357, "twofold": 357, "unifi": 357, "roll": 357, "logic": [358, 360], "worth": 358, "clear": 358, "fact": [358, 370], "With": [358, 370], "spr": 358, "latter": 358, "2nd": 358, "clx": 358, "4x16": [358, 359], "launch": 358, "prior": 358, "iteraion": 358, "polynomi": 358, "essenti": 358, "incom": 358, "far": 358, "four": 359, "adjac": 359, "unsign": [359, 363], "sign": [359, 370], "tmp1": 359, "zeroextend16": 359, "signextend16": 359, "tmp2": 359, "tmp3": 359, "tmp4": 359, "dword": [359, 360], "transposit": 359, "discuss": 359, "typic": 359, "sai": 359, "4x4": 359, "pick": 359, "mxkxn": 359, "problem": [359, 363], "densiti": 359, "fma": 359, "bubbl": 359, "16x4": 359, "highlight": 359, "4x": 359, "talent": 359, "smart": 359, "gui": [359, 360], "swizzl": 359, "workaround": 359, "unfortun": 359, "difficulti": 359, "bad": 359, "cost": 359, "2x1": 359, "conclus": 359, "against": 359, "brief": 360, "sparse_lib_verbos": 360, "sparselib_verbos": 360, "nthr": 360, "224": [360, 361], "exec": 360, "shape_256_256_128": 360, "4658": [360, 361], "56982": 360, "itt": 360, "dne_with_sparselib_vtun": 360, "opt": 360, "latest": [360, 371], "manual": 360, "dcmake_vtune_hom": 360, "sparse_lib_vtun": 360, "ssh": 360, "analys": 360, "verifi": 360, "sparse_lib_dump": 360, "xed64": 360, "click": 360, "xdi": 360, "push": 360, "53": [360, 361], "rbx": 360, "rbp": 360, "4154": 360, "r12": 360, "4155": 360, "r13": 360, "4156": 360, "4157": 360, "dataxf": 360, "bd00040000": 360, "ebp": 360, "0x400": 360, "4c8b3f": 360, "qword": 360, "4c8b7708": 360, "0x8": 360, "4c8b6f10": 360, "0x10": 360, "1a": 360, "avx512evex": 360, "62f17d48efc0": 360, "vpxord": 360, "zmm0": 360, "62f15d48efe4": 360, "zmm4": 360, "62513d48efc0": 360, "zmm8": 360, "2c": 360, "62511d48efe4": 360, "zmm12": 360, "62f17548efc9": 360, "zmm1": 360, "62f15548efe": 360, "zmm5": 360, "3e": 360, "62513548efc9": 360, "zmm9": 360, "62511548efe": 360, "zmm13": 360, "4a": 360, "62f16d48efd2": 360, "zmm2": 360, "62f14d48eff6": 360, "zmm6": 360, "62512d48efd2": 360, "zmm10": 360, "5c": 360, "62510d48eff6": 360, "zmm14": 360, "62": [360, 361], "62c17c481006": 360, "zmm16": 360, "zmmword": 360, "62c17c48104e01": 360, "zmm17": 360, "0x40": 360, "6f": 360, "62c17c48105602": 360, "zmm18": 360, "0x80": 360, "62427d48183f": 360, "vbroadcastss": 360, "zmm31": 360, "7c": 360, "vfma": 360, "62927d40b8c7": 360, "62927540b8cf": 360, "62926d40b8d7": 360, "8e": 360, "62427d48187f04": 360, "95": [360, 361], "62927d40b8e7": 360, "9b": 360, "62927540b8ef": 360, "a1": 360, "62926d40b8f7": 360, "a7": 360, "62427d48187f08": 360, "0x20": 360, "ae": 360, "62127d40b8c7": 360, "b4": 360, "62127540b8cf": 360, "62126d40b8d7": 360, "c0": 360, "62427d48187f0c": 360, "0x30": 360, "c7": 360, "62127d40b8e7": 360, "62127540b8ef": 360, "62126d40b8f7": 360, "d9": 360, "62c17c48104603": 360, "0xc0": 360, "e0": 360, "62c17c48104e04": 360, "0x100": 360, "e7": 360, "62c17c48105605": 360, "0x140": 360, "ee": 360, "62427d48187f01": 360, "0x4": 360, "f5": 360, "fb": 360, "101": 360, "107": 360, "62427d48187f05": 360, "0x14": 360, "10e": 360, "114": 360, "11a": 360, "62427d48187f09": 360, "0x24": 360, "12d": 360, "133": 360, "139": 360, "62427d48187f0d": 360, "0x34": 360, "140": 360, "146": 360, "14c": 360, "152": 360, "62c17c48104606": 360, "0x180": 360, "62c17c48104e07": 360, "0x1c0": 360, "62c17c48105608": 360, "0x200": 360, "167": [360, 361], "62427d48187f02": 360, "16e": 360, "174": 360, "17a": 360, "180": 360, "62427d48187f06": 360, "0x18": 360, "18d": 360, "193": 360, "199": 360, "62427d48187f0a": 360, "0x28": 360, "1a0": 360, "1a6": 360, "1ac": 360, "1b2": 360, "62427d48187f0e": 360, "0x38": 360, "1b9": 360, "1bf": 360, "1c5": 360, "1cb": 360, "62c17c48104609": 360, "0x240": 360, "1d2": 360, "62c17c48104e0a": 360, "0x280": 360, "1d9": 360, "62c17c4810560b": 360, "0x2c0": 360, "1e0": 360, "62427d48187f03": 360, "0xc": 360, "1e7": 360, "1ed": 360, "1f3": 360, "1f9": 360, "62427d48187f07": 360, "0x1c": 360, "200": 360, "206": 360, "20c": 360, "212": 360, "62427d48187f0b": 360, "0x2c": 360, "219": [360, 361], "21f": 360, "225": 360, "22b": 360, "62427d48187f0f": 360, "0x3c": 360, "232": [360, 361], "238": 360, "23e": 360, "62d17c48114500": 360, "24b": 360, "62d17c48116503": 360, "62517c48114506": 360, "62517c48116509": 360, "260": 360, "62d17c48114d01": 360, "267": 360, "62d17c48116d04": 360, "26e": 360, "62517c48114d07": 360, "62517c48116d0a": 360, "27c": 360, "62d17c48115502": 360, "283": 360, "62d17c48117505": 360, "28a": 360, "62517c48115508": 360, "291": 360, "62517c4811750b": 360, "298": [360, 361], "pop": 360, "415f": 360, "29a": 360, "415e": 360, "29c": 360, "415d": 360, "29e": 360, "415c": 360, "2a0": 360, "5d": 360, "2a1": 360, "5b": 360, "2a2": 360, "avx": 360, "c5f877": 360, "vzeroupp": 360, "2a5": 360, "xed3": 360, "stat": 360, "cycl": 360, "29220": 360, "236418": 360, "118": 360, "2003": 360, "54": [360, 361], "00348609": 361, "601": 361, "00310676": 361, "675": 361, "00261406": 361, "802": 361, "00216633": 361, "968": 361, "068": 361, "00164658": 361, "1273": 361, "0112255": 361, "284": 361, "00947462": 361, "885": 361, "377": 361, "00764146": 361, "1097": 361, "78": 361, "0058452": 361, "1435": 361, "00407149": 361, "2060": 361, "0127448": 361, "658": 361, "198": 361, "0111132": 361, "754": 361, "835": 361, "00940157": 361, "892": 361, "00760217": 361, "1103": 361, "0054935": 361, "1527": 361, "044202": 361, "759": 361, "0364227": 361, "0292454": 361, "1147": 361, "0223472": 361, "1501": 361, "0149058": 361, "2251": 361, "216338": 361, "620": 361, "408": 361, "179593": 361, "345": 361, "135054": 361, "806": 361, "0946983": 361, "1417": 361, "0609701": 361, "2201": 361, "190508": 361, "704": 361, "526": 361, "159566": 361, "841": 361, "130863": 361, "1025": 361, "103927": 361, "1291": 361, "0739962": 361, "1813": 361, "0250395": 361, "753": 361, "784": 361, "0210726": 361, "895": 361, "682": 361, "0170987": 361, "0130778": 361, "1443": 361, "00923343": 361, "2044": 361, "3072": 361, "112882": 361, "668": 361, "818": 361, "0879386": 361, "858": 361, "525": 361, "068835": 361, "1096": 361, "79": 361, "0487342": 361, "1549": 361, "0317559": 361, "2377": 361, "109308": 361, "679": 361, "0922471": 361, "805": 361, "638": 361, "0759107": 361, "0558945": 361, "1329": 361, "61": 361, "0358752": 361, "2071": 361, "57": 361, "00565044": 361, "742": 361, "297": 361, "00503604": 361, "832": 361, "00447544": 361, "937": 361, "182": 361, "00368479": 361, "1138": 361, "00270954": 361, "1547": 361, "0183481": 361, "386": 361, "0154121": 361, "1088": 361, "0125696": 361, "1334": 361, "00959948": 361, "1747": 361, "72": 361, "00677631": 361, "2475": 361, "0206321": 361, "813": 361, "162": 361, "0184267": 361, "483": 361, "0164699": 361, "1018": 361, "66": 361, "0135801": 361, "1235": 361, "010552": 361, "1589": 361, "0721208": 361, "930": 361, "506": 361, "059613": 361, "1125": 361, "0483781": 361, "1387": 361, "0366748": 361, "1829": 361, "83": 361, "0248571": 361, "2699": 361, "376539": 361, "712": 361, "902": 361, "31929": 361, "840": 361, "727": 361, "261265": 361, "1027": 361, "193579": 361, "1386": 361, "118429": 361, "2266": 361, "309195": 361, "177": 361, "256619": 361, "1046": 361, "213454": 361, "1257": 361, "165192": 361, "1624": 361, "118402": 361, "2267": 361, "0402931": 361, "855": 361, "0341169": 361, "0275282": 361, "1371": 361, "0211298": 361, "1786": 361, "0150693": 361, "218765": 361, "215": 361, "180921": 361, "834": 361, "592": 361, "142778": 361, "1057": 361, "097692": 361, "1545": 361, "0620034": 361, "2435": 361, "174101": 361, "853": 361, "73": 361, "148369": 361, "1001": 361, "123554": 361, "1203": 361, "0923655": 361, "1609": 361, "0591283": 361, "2513": 361, "0074474": 361, "844": 361, "00657187": 361, "00570175": 361, "00483104": 361, "1302": 361, "00367406": 361, "1712": 361, "0247063": 361, "0207462": 361, "1213": 361, "03": 361, "0169214": 361, "0129936": 361, "1936": 361, "0090376": 361, "2784": 361, "0275881": 361, "912": 361, "0240415": 361, "77": 361, "0207876": 361, "1210": 361, "0177873": 361, "1414": 361, "0140129": 361, "1795": 361, "0994565": 361, "1012": 361, "0819725": 361, "1228": 361, "0660571": 361, "1523": 361, "0497077": 361, "2025": 361, "0341912": 361, "2944": 361, "500698": 361, "804": 361, "184": 361, "420619": 361, "287": 361, "337529": 361, "1192": 361, "94": 361, "251221": 361, "1602": 361, "158668": 361, "2537": 361, "412912": 361, "155": 361, "346369": 361, "1162": 361, "2831": 361, "1422": 361, "220585": 361, "1825": 361, "156168": 361, "2578": 361, "0538395": 361, "1051": 361, "0455066": 361, "1244": 361, "036978": 361, "1531": 361, "028483": 361, "1987": 361, "0200457": 361, "2824": 361, "283445": 361, "799": 361, "069": 361, "236101": 361, "959": 361, "302": 361, "188745": 361, "1199": 361, "135532": 361, "0845544": 361, "2678": 361, "227976": 361, "977": 361, "19463": 361, "1145": 361, "161251": 361, "1382": 361, "65": 361, "123585": 361, "1804": 361, "0840322": 361, "2653": 361, "00940534": 361, "891": 361, "00821985": 361, "1020": 361, "00701343": 361, "1196": 361, "08": 361, "00579899": 361, "1446": 361, "00464705": 361, "1805": 361, "0336342": 361, "997": 361, "629": 361, "0276086": 361, "1215": 361, "0224431": 361, "1495": 361, "09": 361, "0170807": 361, "1964": 361, "0117535": 361, "2854": 361, "0358603": 361, "0310083": 361, "1082": 361, "0260486": 361, "1288": 361, "0215163": 361, "1559": 361, "0170105": 361, "1972": 361, "133295": 361, "1006": 361, "92": 361, "111186": 361, "1207": 361, "0881114": 361, "0665519": 361, "2016": 361, "0454416": 361, "2953": 361, "611718": 361, "645": 361, "533329": 361, "430288": 361, "1247": 361, "307141": 361, "198987": 361, "2698": 361, "02": [361, 366], "556249": 361, "163": 361, "462737": 361, "1160": 361, "37537": 361, "1430": 361, "28321": 361, "1895": 361, "203901": 361, "2633": 361, "0716356": 361, "1053": 361, "0603517": 361, "1250": 361, "0490096": 361, "1540": 361, "0375683": 361, "2009": 361, "0267483": 361, "2822": 361, "3572": 361, "845": 361, "437": 361, "299561": 361, "1008": 361, "228752": 361, "1320": 361, "165648": 361, "1823": 361, "105656": 361, "2858": 361, "298907": 361, "994": 361, "529": 361, "255598": 361, "1163": 361, "20824": 361, "1427": 361, "159911": 361, "1858": 361, "111211": 361, "2673": 361, "0152997": 361, "685": 361, "358": 361, "0131446": 361, "797": 361, "0109669": 361, "956": 361, "132": 361, "00921101": 361, "00755406": 361, "1388": 361, "0553082": 361, "758": 361, "351": 361, "0458481": 361, "826": 361, "0367258": 361, "1142": 361, "06": 361, "027535": 361, "018464": 361, "2271": 361, "0597882": 361, "0510217": 361, "822": 361, "062": 361, "0421644": 361, "0333436": 361, "0296385": 361, "1415": 361, "22241": 361, "337": 361, "18324": 361, "915": 361, "145322": 361, "1154": 361, "1083": 361, "0728843": 361, "2301": 361, "11793": 361, "600": 361, "929398": 361, "722": 361, "720963": 361, "823": 361, "510039": 361, "1315": 361, "336519": 361, "1994": 361, "909941": 361, "737": 361, "508": 361, "753487": 361, "644": 361, "606477": 361, "459915": 361, "1459": 361, "303455": 361, "2211": 361, "123429": 361, "764": 361, "586": 361, "103035": 361, "923": 361, "0825026": 361, "1143": 361, "0625579": 361, "1508": 361, "0426942": 361, "2210": 361, "60813": 361, "734": 361, "483053": 361, "781": 361, "462": 361, "357348": 361, "1056": 361, "256715": 361, "1470": 361, "169119": 361, "2232": 361, "503341": 361, "738": 361, "42134": 361, "881": 361, "342843": 361, "255199": 361, "1456": 361, "174091": 361, "2134": 361, "0142667": 361, "0123966": 361, "1015": 361, "0105865": 361, "1188": 361, "00860835": 361, "1461": 361, "00655363": 361, "1919": 361, "0532543": 361, "0447548": 361, "1124": 361, "0348388": 361, "1444": 361, "0266886": 361, "1885": 361, "0177431": 361, "2836": 361, "69": 361, "0549107": 361, "916": 361, "608": 361, "0475549": 361, "1058": 361, "0401657": 361, "1253": 361, "0326952": 361, "1539": 361, "025032": 361, "220947": 361, "911": 361, "178324": 361, "1128": 361, "137361": 361, "1465": 361, "103126": 361, "1952": 361, "0701429": 361, "2870": 361, "06648": 361, "755": 361, "893959": 361, "900": 361, "831": 361, "718893": 361, "1120": 361, "537405": 361, "1498": 361, "280686": 361, "2869": 361, "902588": 361, "730678": 361, "582871": 361, "1381": 361, "444133": 361, "298489": 361, "2697": 361, "581": 361, "0955952": 361, "1184": 361, "078109": 361, "1449": 361, "0596185": 361, "1899": 361, "0414047": 361, "2735": 361, "596568": 361, "497127": 361, "396634": 361, "286973": 361, "1578": 361, "167473": 361, "2704": 361, "472466": 361, "943": 361, "787": 361, "391055": 361, "1140": 361, "319865": 361, "1394": 361, "247491": 361, "1801": 361, "169874": 361, "2624": 361, "93": 361, "0213786": 361, "686": 361, "67": 361, "018228": 361, "0152068": 361, "0120525": 361, "1218": 361, "0103961": 361, "1412": 361, "0771592": 361, "761": 361, "0642402": 361, "074": 361, "0514668": 361, "0387886": 361, "1513": 361, "0256871": 361, "2285": 361, "0836219": 361, "702": 361, "0712915": 361, "664": 361, "0589148": 361, "697": 361, "0484067": 361, "0411331": 361, "311691": 361, "569": 361, "256635": 361, "204973": 361, "153086": 361, "1534": 361, "101206": 361, "2320": 361, "59625": 361, "588": 361, "583": 361, "33246": 361, "705": 361, "03849": 361, "703": 361, "738939": 361, "1271": 361, "480308": 361, "1956": 361, "26056": 361, "745": 361, "324": 361, "04874": 361, "842936": 361, "1114": 361, "59": 361, "635554": 361, "1478": 361, "42145": 361, "2229": 361, "174215": 361, "375": 361, "145836": 361, "116701": 361, "1132": 361, "0876727": 361, "1506": 361, "0595001": 361, "2220": 361, "883258": 361, "598": 361, "333": 361, "711146": 361, "743": 361, "543634": 361, "129": 361, "402406": 361, "1313": 361, "266945": 361, "1979": 361, "70404": 361, "592043": 361, "878": 361, "695": 361, "475444": 361, "1094": 361, "358932": 361, "240739": 361, "2160": 361, "0184384": 361, "909": 361, "907": 361, "0158714": 361, "013504": 361, "1242": 361, "0109927": 361, "1526": 361, "00826017": 361, "2031": 361, "061272": 361, "1095": 361, "0609618": 361, "1100": 361, "0467291": 361, "1436": 361, "0340362": 361, "1971": 361, "0231282": 361, "2901": 361, "0717247": 361, "0616923": 361, "1087": 361, "0521595": 361, "1286": 361, "0423267": 361, "1585": 361, "0321109": 361, "2089": 361, "286461": 361, "242512": 361, "181783": 361, "1476": 361, "139021": 361, "1930": 361, "0870121": 361, "3085": 361, "36322": 361, "652": 361, "08991": 361, "880185": 361, "1219": 361, "694533": 361, "366328": 361, "2931": 361, "15748": 361, "927": 361, "937824": 361, "1144": 361, "745357": 361, "1440": 361, "558061": 361, "1924": 361, "391387": 361, "2743": 361, "157349": 361, "616": 361, "129806": 361, "103083": 361, "1464": 361, "0784417": 361, "053639": 361, "2815": 361, "767569": 361, "874": 361, "641585": 361, "941": 361, "387": 361, "488558": 361, "1236": 361, "355651": 361, "1698": 361, "230945": 361, "2615": 361, "611059": 361, "514108": 361, "1156": 361, "416571": 361, "318094": 361, "1869": 361, "225023": 361, "2642": 361, "0375093": 361, "564": 361, "0317602": 361, "0261888": 361, "1281": 361, "0211151": 361, "0158951": 361, "2110": 361, "141333": 361, "949": 361, "133647": 361, "1004": 361, "0999998": 361, "0710327": 361, "1889": 361, "52": 361, "0429916": 361, "3121": 361, "147474": 361, "125344": 361, "1070": 361, "104294": 361, "0849766": 361, "1579": 361, "0624729": 361, "2148": 361, "701639": 361, "765": 361, "534615": 361, "359791": 361, "1492": 361, "2612": 361, "2055": 361, "183193": 361, "2930": 361, "92067": 361, "735": 361, "271": 361, "4402": 361, "880": 361, "046": 361, "69186": 361, "1269": 361, "17436": 361, "1828": 361, "880179": 361, "2439": 361, "62123": 361, "264": 361, "14905": 361, "999": 361, "64253": 361, "1307": 361, "1413": 361, "1881": 361, "771439": 361, "2783": 361, "369429": 361, "451": 361, "288236": 361, "1047": 361, "209526": 361, "1441": 361, "148115": 361, "2038": 361, "106089": 361, "2846": 361, "53204": 361, "465": 361, "28593": 361, "939": 361, "368": 361, "0852": 361, "1113": 361, "685382": 361, "1762": 361, "408357": 361, "2958": 361, "4521": 361, "13466": 361, "853916": 361, "1392": 361, "642672": 361, "1850": 361, "446442": 361, "2663": 361, "0574189": 361, "876": 361, "0460811": 361, "1092": 361, "0389357": 361, "1292": 361, "031279": 361, "0234498": 361, "2146": 361, "204966": 361, "17364": 361, "1159": 361, "141097": 361, "1426": 361, "105192": 361, "1913": 361, "0677766": 361, "2970": 361, "21269": 361, "946": 361, "573": 361, "191564": 361, "1050": 361, "156368": 361, "1287": 361, "1565": 361, "0933565": 361, "2156": 361, "84983": 361, "789777": 361, "1019": 361, "598168": 361, "1346": 361, "433492": 361, "1857": 361, "269504": 361, "2988": 361, "74845": 361, "859": 361, "348": 361, "96945": 361, "811": 361, "505": 361, "77082": 361, "76407": 361, "1826": 361, "09719": 361, "2935": 361, "73162": 361, "00241": 361, "1072": 361, "39024": 361, "77317": 361, "1816": 361, "19536": 361, "2694": 361, "517278": 361, "875": 361, "708": 361, "382208": 361, "1185": 361, "317837": 361, "1425": 361, "233231": 361, "1942": 361, "152925": 361, "2962": 361, "44309": 361, "741": 361, "62409": 361, "1115": 361, "64963": 361, "1098": 361, "03923": 361, "1743": 361, "625089": 361, "2898": 361, "07006": 361, "861": 361, "632": 361, "64247": 361, "1085": 361, "33386": 361, "1337": 361, "994935": 361, "1792": 361, "68383": 361, "2608": 361, "0713578": 361, "940": 361, "0612457": 361, "0516788": 361, "1298": 361, "0414834": 361, "1617": 361, "0309886": 361, "2165": 361, "282241": 361, "951": 361, "085": 361, "238855": 361, "1123": 361, "193713": 361, "1385": 361, "146781": 361, "81": 361, "0938959": 361, "286141": 361, "122": 361, "257138": 361, "1043": 361, "214208": 361, "167575": 361, "1601": 361, "124072": 361, "2163": 361, "21431": 361, "884": 361, "237": 361, "955251": 361, "775294": 361, "1384": 361, "63282": 361, "1696": 361, "37333": 361, "2876": 361, "87335": 361, "317": 361, "65059": 361, "1176": 361, "94733": 361, "1457": 361, "62241": 361, "1637": 361, "47752": 361, "2906": 361, "75786": 361, "83024": 361, "889": 361, "87429": 361, "1108": 361, "87685": 361, "75328": 361, "2449": 361, "718776": 361, "289": 361, "561317": 361, "1076": 361, "429166": 361, "1407": 361, "317204": 361, "1904": 361, "208555": 361, "2896": 361, "94057": 361, "30458": 361, "1048": 361, "6702": 361, "25799": 361, "1920": 361, "84121": 361, "2871": 361, "34423": 361, "711": 361, "77444": 361, "857": 361, "10049": 361, "52509": 361, "926038": 361, "2568": 361, "00203027": 361, "1032": 361, "00198061": 361, "00179382": 361, "1169": 361, "00163713": 361, "1280": [361, 363], "00171023": 361, "1226": 361, "00395783": 361, "2119": 361, "00340452": 361, "2463": 361, "00308582": 361, "2718": 361, "00292684": 361, "2866": 361, "00217889": 361, "3849": 361, "00437142": 361, "1918": 361, "00418212": 361, "2005": 361, "00344785": 361, "2433": 361, "00291005": 361, "2882": 361, "00293671": 361, "2856": 361, "0120946": 361, "2774": 361, "0103377": 361, "3245": 361, "00850778": 361, "3943": 361, "00659512": 361, "5087": 361, "00484669": 361, "6923": 361, "0524509": 361, "2558": 361, "0428737": 361, "3130": 361, "0323642": 361, "4147": 361, "0231199": 361, "5805": 361, "0152199": 361, "8818": 361, "0451228": 361, "2974": 361, "0373823": 361, "3590": 361, "0302746": 361, "4433": 361, "023182": 361, "5789": 361, "0161696": 361, "8300": 361, "00731429": 361, "2580": 361, "00633179": 361, "2980": 361, "00535855": 361, "3522": 361, "00449335": 361, "4200": 361, "00341811": 361, "5521": 361, "0270028": 361, "2795": 361, "02197": 361, "3436": 361, "0177477": 361, "4253": 361, "0131335": 361, "5748": 361, "00897444": 361, "8412": 361, "0257188": 361, "2889": 361, "0218969": 361, "3393": 361, "0180933": 361, "4107": 361, "013742": 361, "5408": 361, "00992419": 361, "7488": 361, "00289114": 361, "1450": 361, "00245821": 361, "00252331": 361, "1662": 361, "00226557": 361, "1851": 361, "00180316": 361, "2326": 361, "00578904": 361, "00500361": 361, "3353": 361, "0042401": 361, "3956": 361, "00350486": 361, "4786": 361, "00297233": 361, "5644": 361, "00693265": 361, "2420": 361, "00593063": 361, "2828": 361, "00526697": 361, "3185": 361, "00480098": 361, "3494": 361, "00385131": 361, "4356": 361, "0193516": 361, "3467": 361, "0166254": 361, "4036": 361, "0132869": 361, "5050": 361, "0106293": 361, "6313": 361, "00759056": 361, "8841": 361, "0977256": 361, "2746": 361, "0813271": 361, "0656322": 361, "4090": 361, "0476463": 361, "5633": 361, "0295362": 361, "9088": 361, "0736189": 361, "3646": 361, "0603789": 361, "4445": 361, "0489938": 361, "5478": 361, "036992": 361, "7256": 361, "0258802": 361, "10372": 361, "0116589": 361, "3237": 361, "00979113": 361, "3855": 361, "00811779": 361, "4650": 361, "00667871": 361, "5652": 361, "00493861": 361, "7643": 361, "0537768": 361, "2807": 361, "0459135": 361, "3288": 361, "03588": 361, "4208": 361, "0252901": 361, "5970": 361, "0167419": 361, "9018": 361, "0407051": 361, "3651": 361, "0342908": 361, "4334": 361, "028568": 361, "5202": 361, "0218703": 361, "6796": 361, "016186": 361, "9183": 361, "0031551": 361, "0029515": 361, "00265488": 361, "2369": 361, "00243581": 361, "2582": 361, "00223598": 361, "2813": 361, "00745008": 361, "3377": 361, "00656544": 361, "3833": 361, "00542595": 361, "4638": 361, "00425647": 361, "5912": 361, "0034657": 361, "7261": 361, "00835933": 361, "3010": 361, "00741956": 361, "3391": 361, "0065352": 361, "3850": 361, "00555918": 361, "4526": 361, "00488058": 361, "5156": 361, "0257262": 361, "3912": 361, "0217468": 361, "4628": 361, "0176505": 361, "5703": 361, "0137122": 361, "7341": 361, "00980134": 361, "10270": 361, "124749": 361, "3227": 361, "103385": 361, "3894": 361, "0832193": 361, "4838": 361, "0626013": 361, "6432": 361, "0397992": 361, "10117": 361, "101071": 361, "3983": 361, "0825665": 361, "4876": 361, "0668515": 361, "6023": 361, "0487727": 361, "8255": 361, "0354192": 361, "11368": 361, "0147718": 361, "0127799": 361, "4430": 361, "0105324": 361, "5376": 361, "00869796": 361, "6509": 361, "00643591": 361, "8798": 361, "0698868": 361, "3240": 361, "0588583": 361, "3848": 361, "0473412": 361, "4784": 361, "0346142": 361, "6543": 361, "0222947": 361, "10159": 361, "0538146": 361, "4142": 361, "0454583": 361, "4904": 361, "0373579": 361, "5968": 361, "0291396": 361, "7651": 361, "0208901": 361, "10672": 361, "00393589": 361, "00332212": 361, "2525": 361, "00317296": 361, "2643": 361, "00269113": 361, "3117": 361, "00235812": 361, "3557": 361, "009382": 361, "3576": 361, "00828943": 361, "4047": 361, "00672351": 361, "4990": 361, "00514768": 361, "6518": 361, "0040612": 361, "8262": 361, "0107115": 361, "3132": 361, "00920252": 361, "00794258": 361, "4224": 361, "00698123": 361, "4806": 361, "00561026": 361, "5980": 361, "0345669": 361, "3882": 361, "0289719": 361, "4632": 361, "0232584": 361, "5770": 361, "0179766": 361, "7466": 361, "0128144": 361, "10474": 361, "158162": 361, "3394": 361, "132552": 361, "4050": 361, "101844": 361, "5271": 361, "080936": 361, "6633": 361, "0530097": 361, "10127": 361, "135839": 361, "3952": 361, "11116": 361, "4829": 361, "0899513": 361, "0633017": 361, "8481": 361, "0467462": 361, "11484": 361, "0192628": 361, "3919": 361, "0164591": 361, "4586": 361, "0135348": 361, "5578": 361, "0107712": 361, "7009": 361, "00761117": 361, "9919": 361, "0854876": 361, "3532": 361, "0747271": 361, "4041": 361, "0604759": 361, "4993": 361, "0417964": 361, "7225": 361, "0275467": 361, "10962": 361, "0713821": 361, "4164": 361, "0600772": 361, "4948": 361, "0496581": 361, "5986": 361, "0381385": 361, "7794": 361, "027025": 361, "10999": 361, "00502473": 361, "2086": 361, "00451855": 361, "00396819": 361, "00338962": 361, "3093": 361, "00315343": 361, "3325": 361, "0147951": 361, "2834": 361, "0126225": 361, "3322": 361, "010269": 361, "4084": 361, "00785878": 361, "5337": 361, "00570293": 361, "7354": 361, "0161691": 361, "2594": 361, "0144483": 361, "2902": 361, "011705": 361, "3583": 361, "0101487": 361, "4132": 361, "00879332": 361, "4769": 361, "0560297": 361, "2994": 361, "0467998": 361, "3584": 361, "0374397": 361, "4481": 361, "028166": 361, "5956": 361, "0192593": 361, "8711": 361, "277815": 361, "2415": 361, "229837": 361, "2919": 361, "1787": 361, "3755": 361, "126545": 361, "5303": 361, "0835321": 361, "8033": 361, "224925": 361, "2983": 361, "184256": 361, "3642": 361, "146452": 361, "4582": 361, "108899": 361, "6162": 361, "0740655": 361, "9060": 361, "0319455": 361, "2954": 361, "0268136": 361, "3519": 361, "0217062": 361, "4347": 361, "0166666": 361, "5662": 361, "0116466": 361, "8102": 361, "150549": 361, "2507": 361, "119951": 361, "3147": 361, "0893092": 361, "4226": 361, "0637226": 361, "5923": 361, "0427839": 361, "8823": 361, "122421": 361, "3035": 361, "102244": 361, "0822007": 361, "4520": 361, "0622484": 361, "5969": 361, "0429436": 361, "8652": 361, "00481074": 361, "00443796": 361, "2835": 361, "00389863": 361, "00343822": 361, "3659": 361, "00297784": 361, "4225": 361, "0145757": 361, "3453": 361, "012078": 361, "4167": 361, "00896329": 361, "5615": 361, "00727645": 361, "6917": 361, "00548478": 361, "9176": 361, "0150624": 361, "3341": 361, "0132428": 361, "3800": 361, "011443": 361, "4398": 361, "0092883": 361, "5418": 361, "00744553": 361, "6759": 361, "0543977": 361, "3701": 361, "0445693": 361, "4517": 361, "0363329": 361, "5541": 361, "0270492": 361, "7442": 361, "0187415": 361, "10742": 361, "267367": 361, "3011": 361, "223615": 361, "3601": 361, "1797": 361, "134716": 361, "5977": 361, "0692752": 361, "11624": 361, "222661": 361, "3616": 361, "179525": 361, "4485": 361, "139298": 361, "5781": 361, "0958787": 361, "8399": 361, "176292": 361, "4568": 361, "0700283": 361, "0258341": 361, "4383": 361, "0207504": 361, "5457": 361, "0161277": 361, "7021": 361, "0116008": 361, "9761": 361, "148512": 361, "3050": 361, "124238": 361, "0995304": 361, "4551": 361, "0714324": 361, "6341": 361, "044154": 361, "10259": 361, "113174": 361, "3940": 361, "0961662": 361, "4636": 361, "0765841": 361, "5822": 361, "0592912": 361, "7520": 361, "0416614": 361, "10703": 361, "00655654": 361, "2239": 361, "00584761": 361, "2510": 361, "00502113": 361, "2923": 361, "00466269": 361, "3148": 361, "00393276": 361, "3732": 361, "0203923": 361, "2879": 361, "0171018": 361, "3433": 361, "0137027": 361, "4285": 361, "0109527": 361, "5361": 361, "00749636": 361, "7833": 361, "0221319": 361, "0193761": 361, "3030": 361, "0158773": 361, "3698": 361, "0134367": 361, "4370": 361, "0116365": 361, "5046": 361, "0780751": 361, "3008": 361, "0651551": 361, "3604": 361, "0521945": 361, "4500": 361, "0394101": 361, "5959": 361, "0262706": 361, "8940": 361, "398509": 361, "2357": 361, "332153": 361, "259051": 361, "3626": 361, "184412": 361, "5094": 361, "119678": 361, "7850": 361, "313656": 361, "2995": 361, "257989": 361, "3641": 361, "206049": 361, "4559": 361, "152848": 361, "6146": 361, "103125": 361, "9110": 361, "0444861": 361, "2969": 361, "037334": 361, "3538": 361, "0302293": 361, "0231979": 361, "5695": 361, "0158702": 361, "8325": 361, "219777": 361, "2404": 361, "17764": 361, "2975": 361, "135864": 361, "3889": 361, "100424": 361, "5262": 361, "0677547": 361, "7799": 361, "172356": 361, "3018": 361, "144231": 361, "3606": 361, "116019": 361, "4483": 361, "0873881": 361, "5953": 361, "0596004": 361, "8728": 361, "00609695": 361, "2751": 361, "00517637": 361, "3241": 361, "00448956": 361, "3736": 361, "00394876": 361, "4248": 361, "00317463": 361, "5284": 361, "0204832": 361, "3276": 361, "0137691": 361, "4873": 361, "0114194": 361, "5876": 361, "00893304": 361, "7512": 361, "00653312": 361, "10272": 361, "0192409": 361, "3487": 361, "0168348": 361, "3986": 361, "0142343": 361, "4714": 361, "0119455": 361, "5617": 361, "00910648": 361, "7369": 361, "0781101": 361, "0614806": 361, "4366": 361, "046201": 361, "5810": 361, "0357023": 361, "7518": 361, "0222103": 361, "12086": 361, "326917": 361, "3284": 361, "273363": 361, "3927": 361, "220994": 361, "4858": 361, "166153": 361, "6462": 361, "0854403": 361, "12567": 361, "311348": 361, "3448": 361, "243012": 361, "4418": 361, "187933": 361, "5713": 361, "126819": 361, "8466": 361, "0855686": 361, "12548": 361, "0404778": 361, "3730": 361, "0329699": 361, "4579": 361, "0265272": 361, "5692": 361, "0207815": 361, "7265": 361, "0139037": 361, "10860": 361, "183003": 361, "161443": 361, "3741": 361, "129767": 361, "4654": 361, "0893345": 361, "6760": 361, "0610684": 361, "9890": 361, "15525": 361, "3829": 361, "125772": 361, "4727": 361, "101434": 361, "5861": 361, "0765083": 361, "7770": 361, "0537321": 361, "11064": 361, "0104209": 361, "3219": 361, "00908195": 361, "3694": 361, "00781277": 361, "4294": 361, "00651108": 361, "5153": 361, "0051719": 361, "6487": 361, "0321377": 361, "4176": 361, "0269904": 361, "4972": 361, "0220014": 361, "6100": 361, "016901": 361, "7941": 361, "0120042": 361, "11180": 361, "0373802": 361, "0314895": 361, "4262": 361, "0266731": 361, "5031": 361, "0217822": 361, "6161": 361, "0168219": 361, "7978": 361, "176031": 361, "3049": 361, "134442": 361, "3993": 361, "0843776": 361, "6362": 361, "0640577": 361, "8381": 361, "043787": 361, "12261": 361, "697876": 361, "3077": 361, "615338": 361, "3489": 361, "350147": 361, "6133": 361, "267289": 361, "8034": 361, "179695": 361, "11950": 361, "703207": 361, "3053": 361, "561805": 361, "3822": 361, "423052": 361, "5076": 361, "254835": 361, "171434": 361, "12526": 361, "0933483": 361, "3235": 361, "0725632": 361, "4161": 361, "0539197": 361, "5600": 361, "0376119": 361, "8029": 361, "0263137": 361, "11476": 361, "407388": 361, "340939": 361, "3543": 361, "261028": 361, "4627": 361, "151649": 361, "7965": 361, "103379": 361, "11684": 361, "358769": 361, "3314": 361, "283046": 361, "4201": 361, "212152": 361, "5604": 361, "158502": 361, "7502": 361, "107514": 361, "11059": 361, "0148329": 361, "0129116": 361, "3898": 361, "0110537": 361, "4553": 361, "00925277": 361, "5439": 361, "00716987": 361, "7019": 361, "0526609": 361, "3823": 361, "0447282": 361, "4501": 361, "0365834": 361, "5503": 361, "0274874": 361, "7324": 361, "0183895": 361, "10947": 361, "0556653": 361, "0465882": 361, "4321": 361, "039411": 361, "5108": 361, "0318745": 361, "6316": 361, "024706": 361, "8148": 361, "263316": 361, "3058": 361, "198303": 361, "4061": 361, "141966": 361, "5672": 361, "105849": 361, "7608": 361, "0687866": 361, "11707": 361, "793822": 361, "4057": 361, "996979": 361, "3230": 361, "54288": 361, "5933": 361, "412174": 361, "7815": 361, "274441": 361, "11737": 361, "03474": 361, "3113": 361, "832701": 361, "3868": 361, "564787": 361, "421781": 361, "7637": 361, "271587": 361, "11860": 361, "130834": 361, "3462": 361, "0943305": 361, "4802": 361, "0760123": 361, "0580473": 361, "7803": 361, "0395342": 361, "11458": 361, "635729": 361, "2850": 361, "379899": 361, "307908": 361, "5884": 361, "233057": 361, "7774": 361, "157518": 361, "11503": 361, "518276": 361, "3441": 361, "422517": 361, "4221": 361, "323476": 361, "5513": 361, "247251": 361, "7213": 361, "163369": 361, "10917": 361, "0192313": 361, "0168147": 361, "3991": 361, "0143274": 361, "4683": 361, "011932": 361, "5624": 361, "00914975": 361, "7334": 361, "0723144": 361, "3712": 361, "0613803": 361, "4373": 361, "050021": 361, "5366": 361, "0376949": 361, "7121": 361, "0249397": 361, "10763": 361, "0796627": 361, "3369": 361, "0616695": 361, "4352": 361, "0521326": 361, "5149": 361, "042188": 361, "0325741": 361, "8240": 361, "380582": 361, "2821": 361, "24038": 361, "4466": 361, "195271": 361, "5498": 361, "146935": 361, "7307": 361, "0948318": 361, "11322": 361, "08794": 361, "3947": 361, "913626": 361, "4701": 361, "737943": 361, "5820": 361, "558473": 361, "7690": 361, "369466": 361, "51009": 361, "2844": 361, "26974": 361, "3382": 361, "778244": 361, "5518": 361, "589803": 361, "7282": 361, "375284": 361, "11444": 361, "160705": 361, "3758": 361, "135495": 361, "4457": 361, "108718": 361, "5555": 361, "0811198": 361, "7445": 361, "0533513": 361, "11320": 361, "614109": 361, "3934": 361, "518614": 361, "418491": 361, "5772": 361, "31592": 361, "7647": 361, "211893": 361, "11401": 361, "836616": 361, "2842": 361, "699579": 361, "3399": 361, "544194": 361, "379699": 361, "228043": 361, "10428": 361, "un": 362, "u": 362, "hotmap": 362, "jpg": 362, "x16": 363, "environment_vari": 363, "kernel_typ": [363, 364], "perfom": 363, "introduct": 363, "benchmark_it": 363, "benchmark_no_refresh": 363, "refresh": 363, "kxn": 363, "sparse_ratio": 363, "micro_b": 363, "output_fp32": 363, "has_append_sum": 363, "micro_oc": 363, "sub_func_level": 363, "3d_infer": 363, "automaticlli": 363, "dsparse_lib_use_amx": 363, "amx_bf16_x16": 363, "output_bf16": 363, "lower_bound": 363, "upper_bound": 363, "invalid": 363, "fp32_relu": 363, "src_dt": 363, "dst_dt": 363, "tanspos": 363, "4d": 363, "distinguish": 363, "bs0": 363, "bs1": 363, "scr2": 363, "avx512f_p2031_p2013": 363, "has_binary_add": 363, "tile_n": 363, "coeffici": 363, "vnni_noperm_p2031_p1302": 363, "suuport": 363, "d0xd1x": 363, "d0": 363, "dst_type": 363, "padding_mask": 363, "badd_dim": 363, "blank": 363, "2048": 363, "large_weight_threshold": 363, "add_bia": 363, "channel_num": 363, "quantize_dim_elt_num": 363, "src_data_typ": 363, "newli": 363, "subdir": 363, "benchmark_dir": 363, "bench_": 363, "cpp": 363, "test_": 363, "entranc": 363, "get_true_data_": 363, "check_result_": 363, "gen_case_": 363, "run_bench_": 363, "calc_flop": 363, "get_refresh_data_idx": 363, "benchmark_util": 363, "whitespac": 364, "labl": 364, "run_ci": 364, "overwrit": 364, "it_per_cor": 364, "discard": 364, "new_input_fil": 364, "medium_n": 364, "ci": 364, "apach": 365, "copyright": 365, "subject": 365, "parti": 365, "accompani": 365, "research": 365, "wish": 365, "bibtex": 365, "misc": 365, "hanwen": 365, "haihao": 365, "shen": 365, "dong": 365, "hengyu": 365, "meng": 365, "wenxin": 365, "zhang": 365, "howpublish": 365, "url": 365, "year": 365, "2023": 365, "logo": 365, "atom": 365, "phi": 365, "pentium": 365, "vtune": 365, "corpor": 365, "subsidiari": 365, "toler": 366, "rel": 366, "conjunct": 366, "proport": [366, 367], "vision": 368, "speech": 368, "multimod": 368, "text_classifi": 368, "great": 368, "9998425245285034": 368, "believ": 368, "beauti": 368, "evoc": 368, "ve": 368, "seen": 368, "9998886585235596": 368, "bear": 369, "brain": 369, "damag": 369, "hypothesi": 369, "yann": 369, "lecun": 369, "salient": 369, "anywher": 369, "filter": 369, "lowest": 369, "freez": 369, "hyper": 369, "didn": 369, "pruning_conf": 369, "littl": 370, "degrad": 370, "ex": 370, "affin": 370, "convers": 370, "math": 370, "zeropoint": 370, "asymmetr": 370, "overflow": 370, "fp16": 370, "unseen": 370, "peopl": 370, "emul": 370, "fake": 370, "backward": 370, "mimic": 370, "made": 370, "ultim": 370, "either": 370, "pain": 370, "lossi": 370, "fx": 370, "qat": 370, "site": 371, "assist": 371, "secur": 375, "legal": 375, "injector": 377}, "objects": {"": [[306, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [306, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [306, 1, 1, "_CPPv42jd", "jd"], [306, 1, 1, "_CPPv42jd", "jd"], [307, 1, 1, "_CPPv42jd", "jd"], [308, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 1, 1, "_CPPv42jd", "jd"], [309, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [309, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [309, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [309, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [309, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [309, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [309, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [309, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [309, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [309, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [309, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [307, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [307, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [307, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [307, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [307, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [307, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [307, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [307, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [307, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [309, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [309, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [309, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [309, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [309, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [309, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [309, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [309, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [309, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [309, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [309, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [309, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [309, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [306, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [306, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [306, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [306, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [306, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [306, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [306, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [306, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [307, 3, 1, "_CPPv4N2jd16dyn_quantize_mhaE", "jd::dyn_quantize_mha"], [307, 4, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha"], [307, 4, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv", "jd::dyn_quantize_mha::dyn_quantize_mha"], [307, 5, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha::kdp"], [307, 4, 1, "_CPPv4N2jd16dyn_quantize_mhaD0Ev", "jd::dyn_quantize_mha::~dyn_quantize_mha"], [307, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_descE", "jd::dyn_quantize_mha_desc"], [307, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [307, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [307, 5, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev", "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc"], [307, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [307, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [307, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [307, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [307, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [307, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [307, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [307, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [307, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [307, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [307, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [307, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [307, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [307, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [307, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [307, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [307, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [307, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [307, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [307, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [307, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [307, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [307, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [307, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [307, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [307, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [307, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [306, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [306, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [306, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [306, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [306, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [306, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [306, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [306, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [306, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [306, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [306, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [306, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [306, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [306, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [307, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [307, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [307, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [307, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [307, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [307, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [307, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [307, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [307, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [307, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [307, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [307, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [307, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [307, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [307, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [307, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [307, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [307, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [307, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [307, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [307, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [307, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [307, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [307, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [307, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [307, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [307, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [307, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [307, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [307, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [307, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [307, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [307, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [307, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [307, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [307, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [307, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [307, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [307, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [307, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [307, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [307, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [307, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [307, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [307, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [307, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [307, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [307, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [307, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [307, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [307, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [307, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [307, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [307, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [307, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [307, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [307, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [307, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [307, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [307, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [307, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [307, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [307, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [307, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [307, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [307, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [307, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [308, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [308, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [308, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [308, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [308, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [308, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [308, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [308, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [308, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [308, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [308, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [308, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [308, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [308, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [308, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [308, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [308, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [308, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [308, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [308, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [308, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [308, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [308, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [308, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [308, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [308, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [308, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [308, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [307, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [307, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [307, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [307, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [307, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [307, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [307, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [307, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [307, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [307, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [307, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [307, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [307, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [307, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [307, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [307, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [307, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [307, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [307, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [307, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [307, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [307, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [307, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [307, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [307, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [307, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [307, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [307, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [307, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [307, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [307, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [307, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [307, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [307, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [307, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [307, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [307, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [307, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [307, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [309, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [309, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [309, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [309, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [309, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [309, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [309, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [309, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [309, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [309, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [309, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [309, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [309, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [309, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [309, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [309, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [309, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [309, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [309, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [309, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [309, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [309, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [309, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [309, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [309, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [309, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [309, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [309, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [309, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [309, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [309, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [309, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [309, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [309, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [309, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [309, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [309, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [309, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [309, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [309, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [309, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [309, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [309, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [309, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [309, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [309, 3, 1, "_CPPv4N2jd3ssd13gather_data_tE", "jd::ssd::gather_data_t"], [309, 7, 1, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE", "jd::ssd::gather_data_t::binaryop_addrs"], [309, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3dstE", "jd::ssd::gather_data_t::dst"], [309, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t"], [309, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::a"], [309, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::b"], [309, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::c"], [309, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3idxE", "jd::ssd::gather_data_t::idx"], [309, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3srcE", "jd::ssd::gather_data_t::src"], [309, 3, 1, "_CPPv4N2jd3ssd14gather_param_tE", "jd::ssd::gather_param_t"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE", "jd::ssd::gather_param_t::binary_ts_sizes"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE", "jd::ssd::gather_param_t::binaryop_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE", "jd::ssd::gather_param_t::dst_axis_size"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t2dtE", "jd::ssd::gather_param_t::dt"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE", "jd::ssd::gather_param_t::dt_size"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE", "jd::ssd::gather_param_t::extend_mask"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE", "jd::ssd::gather_param_t::idx_size"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE", "jd::ssd::gather_param_t::inner_size"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t5loopsE", "jd::ssd::gather_param_t::loops"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t4maskE", "jd::ssd::gather_param_t::mask"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE", "jd::ssd::gather_param_t::outer_size"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t6remainE", "jd::ssd::gather_param_t::remain"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE", "jd::ssd::gather_param_t::src_axis_size"], [309, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE", "jd::ssd::gather_param_t::src_size"], [309, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [309, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [309, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [309, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [309, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [309, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [309, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [309, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [309, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [309, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [309, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [309, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [309, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [309, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [309, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [309, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [309, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [309, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [309, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [309, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [309, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [309, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [309, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [309, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [309, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [309, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [309, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [309, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [309, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [309, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [309, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [309, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [309, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [309, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [309, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [309, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [309, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [309, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [309, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [309, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [309, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [309, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [309, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [309, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [309, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [309, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [309, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [309, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [309, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [309, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [309, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [309, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [309, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [309, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [309, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [309, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [309, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [309, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [309, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [309, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [309, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [309, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [309, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [309, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [309, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [309, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [309, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [309, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [309, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [309, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [309, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [309, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [309, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [309, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [309, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [309, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [309, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [309, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [309, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [309, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [309, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [309, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [309, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [309, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [309, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [309, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [309, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [309, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [309, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [309, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [309, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [309, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [307, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [307, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [307, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [307, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [307, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [307, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [307, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [307, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [307, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [307, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [307, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [307, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [307, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [307, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [307, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [307, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [307, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [307, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [307, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [183, 9, 0, "-", "intel_extension_for_transformers"], [225, 9, 0, "-", "sparsity_all"], [226, 9, 0, "-", "test_add_cls_token"], [227, 9, 0, "-", "test_add_embeddings"], [228, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [229, 9, 0, "-", "test_attention_reshape"], [230, 9, 0, "-", "test_bert_mini_fp32"], [231, 9, 0, "-", "test_binary_op"], [232, 9, 0, "-", "test_binaryop"], [233, 9, 0, "-", "test_cast_to"], [234, 9, 0, "-", "test_concat"], [235, 9, 0, "-", "test_conv_reshape"], [236, 9, 0, "-", "test_decoder_attn_reshape"], [237, 9, 0, "-", "test_dispatcher_tuning_acc"], [238, 9, 0, "-", "test_dispatcher_tuning_throughput"], [239, 9, 0, "-", "test_dynamic_quantization"], [240, 9, 0, "-", "test_embedding"], [241, 9, 0, "-", "test_embeddingbag"], [242, 9, 0, "-", "test_execution_options"], [243, 9, 0, "-", "test_gelu"], [244, 9, 0, "-", "test_gpt_int8"], [245, 9, 0, "-", "test_graph_dispatch"], [246, 9, 0, "-", "test_insert_input_output_data"], [247, 9, 0, "-", "test_is_supported_onnx_graph"], [248, 9, 0, "-", "test_last_layer_shape"], [249, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [250, 9, 0, "-", "test_layer_norm_with_transpose"], [251, 9, 0, "-", "test_layernorm"], [252, 9, 0, "-", "test_linear"], [253, 9, 0, "-", "test_linear_int8"], [254, 9, 0, "-", "test_main"], [255, 9, 0, "-", "test_matmul"], [256, 9, 0, "-", "test_matmul_int8"], [257, 9, 0, "-", "test_matmul_with_bias_relu"], [258, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [259, 9, 0, "-", "test_matmul_with_bias_tanh"], [260, 9, 0, "-", "test_merged_embeddingbag"], [261, 9, 0, "-", "test_model"], [262, 9, 0, "-", "test_onnx_utils"], [263, 9, 0, "-", "test_operator_adaptor"], [264, 9, 0, "-", "test_ops"], [265, 9, 0, "-", "test_padding_seq"], [266, 9, 0, "-", "test_padding_sequence"], [267, 9, 0, "-", "test_pattern_dispatch"], [268, 9, 0, "-", "test_permute"], [269, 9, 0, "-", "test_position_embeddings"], [270, 9, 0, "-", "test_pow"], [271, 9, 0, "-", "test_primitive_cache_acc"], [272, 9, 0, "-", "test_primitive_cache_throughput"], [273, 9, 0, "-", "test_qkv_merge"], [274, 9, 0, "-", "test_qkv_reshape"], [275, 9, 0, "-", "test_quant_onnx_execute"], [276, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [277, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [278, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [279, 9, 0, "-", "test_size"], [280, 9, 0, "-", "test_softmax"], [281, 9, 0, "-", "test_start_end_logits"], [282, 9, 0, "-", "test_tanh"], [283, 9, 0, "-", "test_text_encoder"], [284, 9, 0, "-", "test_text_encoder_bf16"], [285, 9, 0, "-", "test_tf_utils"], [286, 9, 0, "-", "test_token_type_embeddings"], [287, 9, 0, "-", "test_transpose"], [288, 9, 0, "-", "test_transpose_batch_matmul"], [289, 9, 0, "-", "test_unet"], [290, 9, 0, "-", "test_unet_bf16"], [291, 9, 0, "-", "test_unsqueeze"], [292, 9, 0, "-", "test_vae_decoder"], [293, 9, 0, "-", "test_vae_decoder_bf16"], [294, 9, 0, "-", "test_weight_sharing_acc"], [295, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [296, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [297, 9, 0, "-", "test_weight_sharing_throughput"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "api_doc_example"], [1, 9, 0, "-", "backends"], [190, 9, 0, "-", "optimization"], [222, 9, 0, "-", "preprocessing"], [224, 9, 0, "-", "version"]], "intel_extension_for_transformers.api_doc_example": [[0, 10, 1, "", "ExampleClass"], [0, 11, 1, "", "attribute1"], [0, 13, 1, "", "function1"], [0, 13, 1, "", "function2"], [0, 13, 1, "", "function3"], [0, 13, 1, "", "generator1"], [0, 14, 1, "", "module_debug_level1"]], "intel_extension_for_transformers.api_doc_example.ExampleClass": [[0, 11, 1, "", "attr1"], [0, 11, 1, "", "attr2"], [0, 11, 1, "", "attr5"], [0, 12, 1, "", "method1"]], "intel_extension_for_transformers.backends": [[182, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[11, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[2, 9, 0, "-", "compile"], [4, 9, 0, "-", "extractors"], [9, 9, 0, "-", "graph"], [10, 9, 0, "-", "graph_utils"], [12, 9, 0, "-", "loaders"], [14, 9, 0, "-", "logger"], [15, 9, 0, "-", "onnx_utils"], [36, 9, 0, "-", "ops"], [100, 9, 0, "-", "sub_graph"], [180, 9, 0, "-", "tf_utils"], [181, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, 13, 1, "", "compile"], [2, 13, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 9, 0, "-", "extractor"], [5, 9, 0, "-", "onnx_extractor"], [6, 9, 0, "-", "tf_extractor"], [7, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, 10, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, 10, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, 10, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, 10, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[8, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, 10, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[8, 12, 1, "", "add_config_item"], [8, 12, 1, "", "change_node_input_tensors"], [8, 12, 1, "", "change_node_output_tensors"], [8, 12, 1, "", "dump_tensor"], [8, 12, 1, "", "engine_init"], [8, 12, 1, "", "get_next_node_names"], [8, 12, 1, "", "get_node_by_name"], [8, 12, 1, "", "get_node_id"], [8, 12, 1, "", "get_pre_node_names"], [8, 12, 1, "", "get_sparse_nodes_name"], [8, 12, 1, "", "get_tensor_idx"], [8, 12, 1, "", "graph_dispatch"], [8, 12, 1, "", "graph_init"], [8, 12, 1, "", "inference"], [8, 12, 1, "", "inquire_config_item"], [8, 12, 1, "", "insert_nodes"], [8, 12, 1, "", "modify_node_connections"], [8, 12, 1, "", "remove_nodes"], [8, 12, 1, "", "rename_node"], [8, 12, 1, "", "save"], [8, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, 10, 1, "", "LazyImport"], [10, 13, 1, "", "autocast_init"], [10, 13, 1, "", "construct_node"], [10, 13, 1, "", "get_autocast_info"], [10, 13, 1, "", "get_data_dtype"], [10, 13, 1, "", "get_model_fwk_name"], [10, 13, 1, "", "get_quant_info"], [10, 13, 1, "", "insert_pattern"], [10, 13, 1, "", "insert_quant_info"], [10, 13, 1, "", "list2str"], [10, 13, 1, "", "names_from_input"], [10, 13, 1, "", "pattern_mapping"], [10, 13, 1, "", "pattern_mapping_conf_validation"], [10, 13, 1, "", "quant_info_init"], [10, 13, 1, "", "search_pattern"], [10, 13, 1, "", "search_straight_pattern"], [10, 13, 1, "", "set_autocast"], [10, 13, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[13, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, 10, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, 10, 1, "", "Logger"], [14, 13, 1, "", "debug"], [14, 13, 1, "", "error"], [14, 13, 1, "", "fatal"], [14, 13, 1, "", "info"], [14, 13, 1, "", "log"], [14, 13, 1, "", "warn"], [14, 13, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[14, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, 13, 1, "", "bias_to_int32"], [15, 13, 1, "", "change_num_name"], [15, 13, 1, "", "get_children"], [15, 13, 1, "", "get_initializer_children_names"], [15, 13, 1, "", "get_node_children_names"], [15, 13, 1, "", "graph_node_names_details"], [15, 13, 1, "", "is_supported_onnx_graph"], [15, 13, 1, "", "is_supported_onnx_node"], [15, 13, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[16, 9, 0, "-", "all"], [17, 9, 0, "-", "assert"], [18, 9, 0, "-", "batch_matmul"], [19, 9, 0, "-", "batch_matmul_v2"], [20, 9, 0, "-", "bias_add"], [21, 9, 0, "-", "binary_op"], [22, 9, 0, "-", "cast"], [23, 9, 0, "-", "concat"], [24, 9, 0, "-", "conv"], [25, 9, 0, "-", "cos"], [26, 9, 0, "-", "empty_ops"], [27, 9, 0, "-", "expand_dims"], [28, 9, 0, "-", "fused_batch_matmul_v2"], [29, 9, 0, "-", "fused_batch_norm_v3"], [30, 9, 0, "-", "fused_gemm"], [31, 9, 0, "-", "fused_matmul"], [32, 9, 0, "-", "gather"], [33, 9, 0, "-", "gather_elements"], [34, 9, 0, "-", "gelu"], [35, 9, 0, "-", "gemm"], [37, 9, 0, "-", "iterator_get_next"], [38, 9, 0, "-", "iterator_v2"], [39, 9, 0, "-", "layer_normalization"], [40, 9, 0, "-", "log_softmax"], [41, 9, 0, "-", "map_and_batch_dataset"], [42, 9, 0, "-", "matmul"], [43, 9, 0, "-", "mean"], [44, 9, 0, "-", "mkl_layer_norm"], [45, 9, 0, "-", "model_dataset"], [46, 9, 0, "-", "one_hot"], [47, 9, 0, "-", "onnx_input"], [48, 9, 0, "-", "op"], [49, 9, 0, "-", "optimize_dataset"], [50, 9, 0, "-", "pack"], [51, 9, 0, "-", "padding_sequence"], [52, 9, 0, "-", "placeholder"], [53, 9, 0, "-", "pos_embed"], [54, 9, 0, "-", "pow"], [55, 9, 0, "-", "quantize_linear"], [56, 9, 0, "-", "quantize_v2"], [57, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [58, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [59, 9, 0, "-", "reduce_mean"], [60, 9, 0, "-", "reduce_sum"], [61, 9, 0, "-", "reorder"], [62, 9, 0, "-", "reshape"], [63, 9, 0, "-", "rsub"], [64, 9, 0, "-", "scatter_elements"], [65, 9, 0, "-", "shape"], [66, 9, 0, "-", "sin"], [67, 9, 0, "-", "size"], [68, 9, 0, "-", "slice"], [69, 9, 0, "-", "softmax"], [70, 9, 0, "-", "split"], [71, 9, 0, "-", "squeeze"], [72, 9, 0, "-", "strided_slice"], [73, 9, 0, "-", "tensor"], [74, 9, 0, "-", "top_k"], [75, 9, 0, "-", "transpose"], [76, 9, 0, "-", "unpack"], [77, 9, 0, "-", "unsqueeze"], [78, 9, 0, "-", "view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, 10, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, 10, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, 10, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, 10, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[19, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, 10, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, 10, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, 10, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, 10, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, 10, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, 10, 1, "", "Add"], [26, 10, 1, "", "AddV2"], [26, 10, 1, "", "Arange"], [26, 10, 1, "", "BinaryAdd"], [26, 10, 1, "", "Constant"], [26, 10, 1, "", "ConstantOfShape"], [26, 10, 1, "", "Convolution"], [26, 10, 1, "", "CumSum"], [26, 10, 1, "", "Dequantize"], [26, 10, 1, "", "DequantizeLinear"], [26, 10, 1, "", "Einsum"], [26, 10, 1, "", "EmbeddingBag"], [26, 10, 1, "", "Erf"], [26, 10, 1, "", "Expand"], [26, 10, 1, "", "ExpandIndices"], [26, 10, 1, "", "Fill"], [26, 10, 1, "", "FlatMapDataset"], [26, 10, 1, "", "Flatten"], [26, 10, 1, "", "Identity"], [26, 10, 1, "", "InnerProduct"], [26, 10, 1, "", "Input"], [26, 10, 1, "", "LatRange"], [26, 10, 1, "", "ListConstruct"], [26, 10, 1, "", "Loop"], [26, 10, 1, "", "MakeIterator"], [26, 10, 1, "", "MatMulWithBias"], [26, 10, 1, "", "MatMulWithBiasAdd"], [26, 10, 1, "", "MatMulWithBiasGelu"], [26, 10, 1, "", "MatMulWithBiasRelu"], [26, 10, 1, "", "MatMulWithBiasSigmoid"], [26, 10, 1, "", "MatMulWithBiasTanh"], [26, 10, 1, "", "Matmul"], [26, 10, 1, "", "MergedEmbeddingbag"], [26, 10, 1, "", "Onehot"], [26, 10, 1, "", "OpAny"], [26, 10, 1, "", "Output"], [26, 10, 1, "", "PositionIds"], [26, 10, 1, "", "QLinearAdd"], [26, 10, 1, "", "QLinearMatMul"], [26, 10, 1, "", "QLinearMul"], [26, 10, 1, "", "Range"], [26, 10, 1, "", "RealDiv"], [26, 10, 1, "", "Reciprocal"], [26, 10, 1, "", "Relu"], [26, 10, 1, "", "Repeat"], [26, 10, 1, "", "Rsqrt"], [26, 10, 1, "", "SequenceLength"], [26, 10, 1, "", "Sigmoid"], [26, 10, 1, "", "Sqrt"], [26, 10, 1, "", "Square"], [26, 10, 1, "", "SquaredDifference"], [26, 10, 1, "", "Stack"], [26, 10, 1, "", "StopGradient"], [26, 10, 1, "", "Tanh"], [26, 10, 1, "", "TensorSliceDataset"], [26, 10, 1, "", "Tile"], [26, 10, 1, "", "TokenTypeIds"], [26, 10, 1, "", "TransposeBatchMatMul"], [26, 10, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, 10, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, 10, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, 10, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, 10, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, 10, 1, "", "Gather"], [32, 10, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, 10, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, 10, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, 10, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, 10, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, 10, 1, "", "LayerNorm"], [39, 10, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, 10, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, 10, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, 10, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, 10, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, 10, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, 10, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, 10, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[47, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, 10, 1, "", "Operator"], [48, 13, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[48, 12, 1, "", "construct"], [48, 12, 1, "", "extract"], [48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, 10, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, 10, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, 10, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, 10, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, 10, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, 10, 1, "", "Quantize"], [55, 10, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, 10, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, 10, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, 10, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, 10, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, 10, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, 10, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, 10, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, 10, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, 10, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, 10, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, 10, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, 10, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, 10, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, 10, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, 10, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, 10, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, 10, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, 10, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, 10, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, 10, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, 10, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[79, 9, 0, "-", "InnerproductReshapeFusion"], [80, 9, 0, "-", "add_cls_token"], [81, 9, 0, "-", "add_embeddings"], [82, 9, 0, "-", "arangewithreciprocal"], [83, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [84, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [85, 9, 0, "-", "attentionBlock_QKVPreReshape"], [86, 9, 0, "-", "attentionBlock_QKVReshape"], [87, 9, 0, "-", "attentionBlock_Resize2Gather"], [88, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [89, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [90, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [91, 9, 0, "-", "attention_reshape"], [92, 9, 0, "-", "cast_to"], [93, 9, 0, "-", "collect_quant_info"], [94, 9, 0, "-", "conv_reshape"], [95, 9, 0, "-", "decoder_attn_reshape"], [96, 9, 0, "-", "einsumwitharange"], [97, 9, 0, "-", "embeddingbag"], [98, 9, 0, "-", "gelu"], [99, 9, 0, "-", "generate_sequence"], [101, 9, 0, "-", "innerproductwithbiasgelu"], [102, 9, 0, "-", "innerproductwithslice"], [103, 9, 0, "-", "input_data"], [104, 9, 0, "-", "input_file"], [105, 9, 0, "-", "insert_bf16_node"], [106, 9, 0, "-", "insert_quant_node"], [107, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [108, 9, 0, "-", "interact_features"], [109, 9, 0, "-", "last_layer_shape"], [110, 9, 0, "-", "layer_norm"], [111, 9, 0, "-", "layer_norm_with_reduce_mean"], [112, 9, 0, "-", "layer_norm_with_transpose"], [113, 9, 0, "-", "matmul_with_bias"], [114, 9, 0, "-", "matmul_with_bias_add"], [115, 9, 0, "-", "matmul_with_bias_gelu"], [116, 9, 0, "-", "matmul_with_bias_relu"], [117, 9, 0, "-", "matmul_with_bias_sigmoid"], [118, 9, 0, "-", "matmul_with_bias_tanh"], [119, 9, 0, "-", "matmul_with_transpose"], [120, 9, 0, "-", "merged_embeddingbag"], [121, 9, 0, "-", "multi_head_attention"], [122, 9, 0, "-", "operator_adaptor"], [123, 9, 0, "-", "output_data"], [124, 9, 0, "-", "padding_sequence"], [125, 9, 0, "-", "pattern"], [126, 9, 0, "-", "position_embeddings"], [127, 9, 0, "-", "position_embeddings_v1"], [128, 9, 0, "-", "qkv_merge"], [129, 9, 0, "-", "qkv_reshape"], [130, 9, 0, "-", "quantize_fusion"], [131, 9, 0, "-", "quantized_graph_dtype_refactor"], [132, 9, 0, "-", "remove_constant_op"], [133, 9, 0, "-", "remove_last_view"], [134, 9, 0, "-", "remove_list_construct"], [135, 9, 0, "-", "remove_range"], [136, 9, 0, "-", "removeslice"], [137, 9, 0, "-", "reshape_after_restore_hidden_states"], [138, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [139, 9, 0, "-", "reshape_before_restore_hidden_states"], [140, 9, 0, "-", "reshape_fusion"], [141, 9, 0, "-", "resnetBlock_instancenormReshapeFromConv"], [142, 9, 0, "-", "resnetBlock_instancenormReshapeFromdiv"], [143, 9, 0, "-", "restnetBlock_groupNorm"], [144, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [145, 9, 0, "-", "rotary_pos_emb"], [146, 9, 0, "-", "slicemask"], [147, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [148, 9, 0, "-", "stableDiffusion_bf16Convert"], [149, 9, 0, "-", "start_end_logits"], [150, 9, 0, "-", "subgraph_matcher"], [151, 9, 0, "-", "textEncdoer_word_embedding"], [152, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [153, 9, 0, "-", "textEncoder_AttentionReshape"], [154, 9, 0, "-", "textEncoder_KVReshape"], [155, 9, 0, "-", "textEncoder_MulReshape"], [156, 9, 0, "-", "textEncoder_QReshape"], [157, 9, 0, "-", "textEncoder_SoftmaxReshape"], [158, 9, 0, "-", "textEncoder_causal_attention_mask"], [159, 9, 0, "-", "token_type_embeddings"], [160, 9, 0, "-", "token_type_embeddings_v1"], [161, 9, 0, "-", "torch_embedding"], [162, 9, 0, "-", "torch_ip_insert_bias"], [163, 9, 0, "-", "torchinsertbf16node"], [164, 9, 0, "-", "torchpaddingsquence"], [165, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [166, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [167, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [168, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [169, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [170, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [171, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [172, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [173, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [174, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromAdd"], [175, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromConcat"], [176, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [177, 9, 0, "-", "transformer2Dmodel_upBlockResize"], [178, 9, 0, "-", "transpose_batch_matmul"], [179, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, 10, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, 10, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, 10, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, 10, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, 10, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, 10, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, 10, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, 10, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, 10, 1, "", "AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, 10, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, 10, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, 10, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, 10, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, 10, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, 10, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, 10, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, 10, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, 10, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, 10, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, 10, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, 10, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, 10, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, 10, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, 10, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, 10, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, 10, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, 10, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, 10, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, 10, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, 10, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, 10, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, 10, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, 10, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, 10, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, 10, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, 10, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, 10, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, 10, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, 10, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, 10, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, 10, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, 10, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, 10, 1, "", "Pattern"], [125, 13, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, 10, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, 10, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, 10, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, 10, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, 10, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, 10, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, 10, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, 10, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, 10, 1, "", "RemoveListConstruct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, 10, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, 10, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, 10, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, 10, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, 10, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, 10, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[141, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[142, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[143, 10, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, 10, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, 10, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, 10, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[147, 10, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[148, 10, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, 10, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, 10, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[151, 10, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[152, 10, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[153, 10, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[154, 10, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[155, 10, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[156, 10, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[157, 10, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[158, 10, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, 10, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, 10, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, 10, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, 10, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, 10, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[165, 10, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[166, 10, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[167, 10, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[168, 10, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[169, 10, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[170, 10, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[171, 10, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[172, 10, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[173, 10, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[174, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[175, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[176, 10, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[177, 10, 1, "", "Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, 10, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, 10, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, 14, 1, "", "TF_DTYPE_ID"], [180, 13, 1, "", "create_tf_node"], [180, 13, 1, "", "get_tensor_dest_op"], [180, 13, 1, "", "graph_node_names_details"], [180, 13, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, 13, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.optimization": [[184, 9, 0, "-", "benchmark"], [185, 9, 0, "-", "config"], [186, 9, 0, "-", "distillation"], [189, 9, 0, "-", "dynamic"], [192, 9, 0, "-", "mixture"], [193, 9, 0, "-", "model"], [195, 9, 0, "-", "nas"], [197, 9, 0, "-", "optimizer"], [198, 9, 0, "-", "optimizer_tf"], [199, 9, 0, "-", "pipeline"], [200, 9, 0, "-", "pruning"], [202, 9, 0, "-", "pytorch_pruner"], [210, 9, 0, "-", "quantization"], [211, 9, 0, "-", "trainer"], [213, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[184, 13, 1, "", "benchmark"], [184, 13, 1, "", "get_example_inputs"], [184, 13, 1, "", "preprocess_model"], [184, 13, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[185, 10, 1, "", "AutoDistillationConfig"], [185, 10, 1, "", "BenchmarkConfig"], [185, 10, 1, "", "DistillationConfig"], [185, 10, 1, "", "DynamicLengthConfig"], [185, 10, 1, "", "FlashDistillationConfig"], [185, 10, 1, "", "NASConfig"], [185, 10, 1, "", "Provider"], [185, 10, 1, "", "PrunerV2"], [185, 10, 1, "", "PruningConfig"], [185, 10, 1, "", "QuantizationConfig"], [185, 10, 1, "", "TFDistillationConfig"], [185, 10, 1, "", "WeightPruningConfig"], [185, 13, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[185, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[186, 10, 1, "", "Criterion"], [186, 10, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[187, 9, 0, "-", "drop_and_restore_utils"], [188, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, 13, 1, "", "sample_layer_configuration"], [187, 13, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, 10, 1, "", "Evolution"], [188, 13, 1, "", "approx_ratio"], [188, 13, 1, "", "inverse"], [188, 13, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[188, 12, 1, "", "add_gene"], [188, 12, 1, "", "convex_hull"], [188, 12, 1, "", "crossover"], [188, 12, 1, "", "get_store"], [188, 12, 1, "", "load_store"], [188, 12, 1, "", "mutate"], [188, 12, 1, "", "pareto_frontier"], [188, 12, 1, "", "save_population"], [188, 12, 1, "", "save_store"], [188, 12, 1, "", "set_lower_constraint"], [188, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[191, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, 10, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[191, 12, 1, "", "create_distillers"], [191, 12, 1, "", "estimate"], [191, 12, 1, "", "init_by_cfg"], [191, 12, 1, "", "load_search_results"], [191, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[193, 10, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[193, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[194, 9, 0, "-", "basic_nas"], [196, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, 10, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[194, 12, 1, "", "estimate"], [194, 12, 1, "", "execute"], [194, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, 10, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[197, 10, 1, "", "NoTrainerOptimizer"], [197, 10, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[197, 12, 1, "", "distill"], [197, 12, 1, "", "init_distiller"], [197, 12, 1, "", "init_pruner"], [197, 12, 1, "", "init_quantizer"], [197, 12, 1, "", "prune"], [197, 12, 1, "", "quantize"], [197, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[197, 12, 1, "", "fit"], [197, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, 10, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[198, 12, 1, "", "autodistill"], [198, 12, 1, "", "build_train_func"], [198, 12, 1, "", "builtin_eval_func"], [198, 12, 1, "", "distill"], [198, 12, 1, "", "init_distiller"], [198, 12, 1, "", "init_pruner"], [198, 12, 1, "", "init_quantizer"], [198, 12, 1, "", "model_builder_builtin"], [198, 12, 1, "", "prune"], [198, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[199, 13, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[200, 10, 1, "", "PrunerConfig"], [200, 10, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[201, 9, 0, "-", "criteria"], [203, 9, 0, "-", "logger"], [204, 9, 0, "-", "patterns"], [205, 9, 0, "-", "pruners"], [206, 9, 0, "-", "pruning"], [207, 9, 0, "-", "regs"], [208, 9, 0, "-", "schedulers"], [209, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, 10, 1, "", "GradientCriterion"], [201, 10, 1, "", "MagnitudeCriterion"], [201, 10, 1, "", "PruningCriterion"], [201, 10, 1, "", "SnipCriterion"], [201, 10, 1, "", "SnipMomentumCriterion"], [201, 13, 1, "", "get_criterion"], [201, 13, 1, "", "register_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion": [[201, 12, 1, "", "on_step_begin"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion": [[201, 12, 1, "", "on_after_optimizer_step"], [201, 12, 1, "", "on_before_optimizer_step"], [201, 12, 1, "", "on_step_begin"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion": [[201, 12, 1, "", "on_before_optimizer_step"], [201, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, 10, 1, "", "BasePattern"], [204, 10, 1, "", "PatternNInM"], [204, 10, 1, "", "PatternNxM"], [204, 13, 1, "", "get_pattern"], [204, 13, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern": [[204, 12, 1, "", "adjust_ratio"], [204, 12, 1, "", "check_layer_validity"], [204, 11, 1, "", "config"], [204, 12, 1, "", "get_block_size_dict"], [204, 12, 1, "", "get_masks"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_masks_local"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_single_mask_per_target_ratio"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "get_sparsity_ratio_each_layer"], [204, 11, 1, "", "invalid_layers"], [204, 11, 1, "", "is_global"], [204, 11, 1, "", "keep_mask_layers"], [204, 11, 1, "", "max_sparsity_ratio_per_op"], [204, 11, 1, "", "min_sparsity_ratio_per_op"], [204, 11, 1, "", "modules"], [204, 11, 1, "", "pattern"], [204, 12, 1, "", "reduce_tensor"], [204, 11, 1, "", "target_sparsity"], [204, 12, 1, "", "update_residual_cnt"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM": [[204, 11, 1, "", "M"], [204, 11, 1, "", "N"], [204, 12, 1, "", "check_layer_validity"], [204, 12, 1, "", "get_ele_mask_per_threshold"], [204, 12, 1, "", "get_least_ninm_mask_from_data"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "reduce_scores"], [204, 12, 1, "", "reshape_orig_to_pattern"], [204, 12, 1, "", "reshape_reduced_to_orig"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM": [[204, 11, 1, "", "block_size"], [204, 12, 1, "", "check_layer_validity"], [204, 12, 1, "", "count_new_masked_cnts"], [204, 12, 1, "", "get_block_size_dict"], [204, 12, 1, "", "get_mask_per_threshold"], [204, 12, 1, "", "get_masks_global"], [204, 12, 1, "", "get_pattern_lock_masks"], [204, 12, 1, "", "get_reduced_masks_from_data"], [204, 12, 1, "", "get_sparsity_ratio"], [204, 12, 1, "", "get_sparsity_ratio_progressive"], [204, 12, 1, "", "reduce_scores"], [204, 12, 1, "", "reshape_orig_to_pattern"], [204, 12, 1, "", "reshape_reduced_to_orig"], [204, 12, 1, "", "update_new_added_masks"], [204, 12, 1, "", "update_progressive_masks"], [204, 12, 1, "", "update_progressive_masks_global"], [204, 12, 1, "", "update_progressive_masks_linear"], [204, 12, 1, "", "update_progressive_masks_local"], [204, 12, 1, "", "update_progressive_masks_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[205, 10, 1, "", "BasePruner"], [205, 10, 1, "", "BasicPruner"], [205, 10, 1, "", "PatternLockPruner"], [205, 10, 1, "", "ProgressivePruner"], [205, 13, 1, "", "get_pruner"], [205, 13, 1, "", "parse_valid_pruner_types"], [205, 13, 1, "", "register_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner": [[205, 12, 1, "", "check_is_pruned_step"], [205, 11, 1, "", "config"], [205, 11, 1, "", "current_sparsity_ratio"], [205, 11, 1, "", "end_step"], [205, 11, 1, "", "global_step"], [205, 12, 1, "", "mask_weights"], [205, 12, 1, "", "mask_weights_general"], [205, 11, 1, "", "masks"], [205, 11, 1, "", "max_sparsity_ratio_per_op"], [205, 11, 1, "", "modules"], [205, 12, 1, "", "on_after_eval"], [205, 12, 1, "", "on_after_optimizer_step"], [205, 12, 1, "", "on_before_eval"], [205, 12, 1, "", "on_before_optimizer_step"], [205, 12, 1, "", "on_epoch_begin"], [205, 12, 1, "", "on_epoch_end"], [205, 12, 1, "", "on_step_begin"], [205, 12, 1, "", "on_step_end"], [205, 12, 1, "", "on_train_begin"], [205, 12, 1, "", "on_train_end"], [205, 11, 1, "", "pattern"], [205, 11, 1, "", "pruning_frequency"], [205, 11, 1, "", "scheduler"], [205, 11, 1, "", "scores"], [205, 11, 1, "", "start_step"], [205, 11, 1, "", "target_sparsity_ratio"], [205, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner": [[205, 11, 1, "", "criterion"], [205, 12, 1, "", "on_after_optimizer_step"], [205, 12, 1, "", "on_before_optimizer_step"], [205, 11, 1, "", "pattern"], [205, 11, 1, "", "reg"], [205, 11, 1, "", "scheduler"], [205, 12, 1, "", "set_global_step"], [205, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner": [[205, 12, 1, "", "on_after_optimizer_step"], [205, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner": [[205, 12, 1, "", "check_is_pruned_progressive_step"], [205, 12, 1, "", "check_progressive_validity"], [205, 12, 1, "", "on_after_optimizer_step"], [205, 12, 1, "", "on_before_optimizer_step"], [205, 12, 1, "", "on_step_begin"], [205, 12, 1, "", "print_progressive_sparsity"], [205, 12, 1, "", "update_masks_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[206, 10, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning": [[206, 11, 1, "", "config_file_path"], [206, 12, 1, "", "get_sparsity_ratio"], [206, 11, 1, "", "model"], [206, 12, 1, "", "on_after_eval"], [206, 12, 1, "", "on_after_optimizer_step"], [206, 12, 1, "", "on_before_eval"], [206, 12, 1, "", "on_before_optimizer_step"], [206, 12, 1, "", "on_epoch_begin"], [206, 12, 1, "", "on_epoch_end"], [206, 12, 1, "", "on_step_begin"], [206, 12, 1, "", "on_step_end"], [206, 12, 1, "", "on_train_begin"], [206, 12, 1, "", "on_train_end"], [206, 11, 1, "", "pruner_info"], [206, 11, 1, "", "pruners"], [206, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[207, 10, 1, "", "BaseReg"], [207, 10, 1, "", "GroupLasso"], [207, 13, 1, "", "get_reg"], [207, 13, 1, "", "get_reg_type"], [207, 13, 1, "", "register_reg"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg": [[207, 12, 1, "", "on_after_optimizer_step"], [207, 12, 1, "", "on_before_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso": [[207, 11, 1, "", "alpha"], [207, 12, 1, "", "on_after_optimizer_step"], [207, 12, 1, "", "on_before_optimizer_step"], [207, 11, 1, "", "reg_terms"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[208, 10, 1, "", "IterativeScheduler"], [208, 10, 1, "", "OneshotScheduler"], [208, 10, 1, "", "PruningScheduler"], [208, 13, 1, "", "get_scheduler"], [208, 13, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler": [[208, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler": [[208, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler": [[208, 11, 1, "", "config"], [208, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[209, 13, 1, "", "check_config"], [209, 13, 1, "", "check_key_validity"], [209, 13, 1, "", "parse_to_prune"], [209, 13, 1, "", "process_and_check_config"], [209, 13, 1, "", "process_config"], [209, 13, 1, "", "process_weight_config"], [209, 13, 1, "", "process_yaml_config"], [209, 13, 1, "", "reset_none_to_default"], [209, 13, 1, "", "update_params"]], "intel_extension_for_transformers.optimization.quantization": [[210, 10, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[211, 10, 1, "", "BaseTrainer"], [211, 10, 1, "", "NLPSeq2SeqTrainer"], [211, 10, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[211, 12, 1, "", "auto_distil_evaluation_loop"], [211, 12, 1, "", "autodistillation"], [211, 12, 1, "", "benchmark"], [211, 12, 1, "", "builtin_eval_func"], [211, 12, 1, "", "builtin_train_func"], [211, 12, 1, "", "compute_loss"], [211, 12, 1, "", "create_optimizer_builtin"], [211, 12, 1, "", "distill"], [211, 12, 1, "", "export_to_bf16_onnx"], [211, 12, 1, "", "export_to_fp32_onnx"], [211, 12, 1, "", "export_to_int8_onnx"], [211, 12, 1, "", "export_to_jit"], [211, 12, 1, "", "export_to_onnx"], [211, 12, 1, "", "init_distiller"], [211, 12, 1, "", "init_pruner"], [211, 12, 1, "", "init_quantizer"], [211, 12, 1, "", "model_builder_builtin"], [211, 12, 1, "", "nas"], [211, 12, 1, "", "orchestrate_optimizations"], [211, 12, 1, "", "prune"], [211, 12, 1, "", "quantize"], [211, 12, 1, "", "run_evolutionary_search"], [211, 12, 1, "", "set_dynamic_config"], [211, 12, 1, "", "train"], [211, 12, 1, "", "training_step"], [211, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[211, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[212, 9, 0, "-", "get_throughput"], [214, 9, 0, "-", "metrics"], [215, 9, 0, "-", "models"], [218, 9, 0, "-", "objectives"], [219, 9, 0, "-", "utility"], [220, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[214, 10, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[216, 9, 0, "-", "modeling_bert_dynamic"], [217, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[216, 10, 1, "", "BertAttention"], [216, 10, 1, "", "BertEmbeddings"], [216, 10, 1, "", "BertEncoder"], [216, 10, 1, "", "BertForMaskedLM"], [216, 10, 1, "", "BertForMultipleChoice"], [216, 10, 1, "", "BertForNextSentencePrediction"], [216, 10, 1, "", "BertForPreTraining"], [216, 10, 1, "", "BertForPreTrainingOutput"], [216, 10, 1, "", "BertForQuestionAnswering"], [216, 10, 1, "", "BertForSequenceClassification"], [216, 10, 1, "", "BertForTokenClassification"], [216, 10, 1, "", "BertIntermediate"], [216, 10, 1, "", "BertLMHeadModel"], [216, 10, 1, "", "BertLMPredictionHead"], [216, 10, 1, "", "BertLayer"], [216, 10, 1, "", "BertModel"], [216, 10, 1, "", "BertOnlyMLMHead"], [216, 10, 1, "", "BertOnlyNSPHead"], [216, 10, 1, "", "BertOutput"], [216, 10, 1, "", "BertPooler"], [216, 10, 1, "", "BertPreTrainedModel"], [216, 10, 1, "", "BertPreTrainingHeads"], [216, 10, 1, "", "BertPredictionHeadTransform"], [216, 10, 1, "", "BertSelfAttention"], [216, 10, 1, "", "BertSelfOutput"], [216, 13, 1, "", "expand_gather"], [216, 13, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "get_output_embeddings"], [216, 12, 1, "", "prepare_inputs_for_generation"], [216, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "get_output_embeddings"], [216, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "get_output_embeddings"], [216, 12, 1, "", "prepare_inputs_for_generation"], [216, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[216, 12, 1, "", "feed_forward_chunk"], [216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "get_input_embeddings"], [216, 12, 1, "", "set_input_embeddings"], [216, 12, 1, "", "set_length_config"], [216, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[216, 12, 1, "", "forward"], [216, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[216, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[217, 10, 1, "", "RobertaAttention"], [217, 10, 1, "", "RobertaClassificationHead"], [217, 10, 1, "", "RobertaEmbeddings"], [217, 10, 1, "", "RobertaEncoder"], [217, 10, 1, "", "RobertaForCausalLM"], [217, 10, 1, "", "RobertaForMaskedLM"], [217, 10, 1, "", "RobertaForMultipleChoice"], [217, 10, 1, "", "RobertaForQuestionAnswering"], [217, 10, 1, "", "RobertaForSequenceClassification"], [217, 10, 1, "", "RobertaForTokenClassification"], [217, 10, 1, "", "RobertaIntermediate"], [217, 10, 1, "", "RobertaLMHead"], [217, 10, 1, "", "RobertaLayer"], [217, 10, 1, "", "RobertaModel"], [217, 10, 1, "", "RobertaOutput"], [217, 10, 1, "", "RobertaPooler"], [217, 10, 1, "", "RobertaPreTrainedModel"], [217, 10, 1, "", "RobertaSelfAttention"], [217, 10, 1, "", "RobertaSelfOutput"], [217, 13, 1, "", "create_position_ids_from_input_ids"], [217, 13, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[217, 12, 1, "", "create_position_ids_from_inputs_embeds"], [217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "get_output_embeddings"], [217, 12, 1, "", "prepare_inputs_for_generation"], [217, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "get_output_embeddings"], [217, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[217, 12, 1, "", "feed_forward_chunk"], [217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "get_input_embeddings"], [217, 12, 1, "", "set_input_embeddings"], [217, 12, 1, "", "set_length_config"], [217, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[217, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[217, 12, 1, "", "forward"], [217, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[217, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[218, 10, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[218, 12, 1, "", "modelsize"], [218, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[219, 13, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[220, 10, 1, "", "TFDataloader"], [220, 13, 1, "", "distributed_init"], [220, 13, 1, "", "get_filepath"], [220, 13, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[221, 9, 0, "-", "data_augmentation"], [223, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[221, 10, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[221, 12, 1, "", "data_augment"], [221, 12, 1, "", "mit_data_augmentation"], [221, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[223, 10, 1, "", "AugmenterType"], [223, 13, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[226, 10, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[226, 12, 1, "", "setUpClass"], [226, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[227, 10, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[227, 12, 1, "", "setUpClass"], [227, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[228, 10, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[228, 12, 1, "", "setUpClass"], [228, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[229, 10, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[229, 12, 1, "", "setUpClass"], [229, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[230, 10, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[230, 12, 1, "", "setUpClass"], [230, 12, 1, "", "tearDownClass"]], "test_binary_op": [[231, 10, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[231, 12, 1, "", "setUpClass"], [231, 12, 1, "", "tearDownClass"]], "test_binaryop": [[232, 10, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[232, 12, 1, "", "setUpClass"], [232, 12, 1, "", "tearDownClass"]], "test_cast_to": [[233, 10, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[233, 12, 1, "", "setUpClass"], [233, 12, 1, "", "tearDownClass"]], "test_concat": [[234, 10, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[234, 12, 1, "", "setUpClass"], [234, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[235, 10, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[235, 12, 1, "", "setUpClass"], [235, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[236, 10, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[236, 12, 1, "", "setUpClass"], [236, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[237, 10, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[237, 12, 1, "", "setUpClass"], [237, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[238, 10, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[238, 12, 1, "", "setUpClass"], [238, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[239, 10, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[239, 12, 1, "", "setUpClass"], [239, 12, 1, "", "tearDownClass"]], "test_embedding": [[240, 10, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[240, 12, 1, "", "setUpClass"], [240, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[241, 10, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[241, 12, 1, "", "setUpClass"], [241, 12, 1, "", "tearDownClass"]], "test_execution_options": [[242, 10, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[242, 12, 1, "", "setUpClass"], [242, 12, 1, "", "tearDownClass"]], "test_gelu": [[243, 10, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[243, 12, 1, "", "setUpClass"], [243, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[244, 10, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[244, 12, 1, "", "setUpClass"], [244, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[245, 10, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[245, 12, 1, "", "setUpClass"], [245, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[246, 10, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[246, 12, 1, "", "setUpClass"], [246, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[247, 10, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[247, 12, 1, "", "setUpClass"], [247, 12, 1, "", "tearDownClass"], [247, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[248, 10, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[248, 12, 1, "", "setUpClass"], [248, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[249, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[249, 12, 1, "", "setUpClass"], [249, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[250, 10, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[250, 12, 1, "", "setUpClass"], [250, 12, 1, "", "tearDownClass"]], "test_layernorm": [[251, 10, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[251, 12, 1, "", "setUpClass"], [251, 12, 1, "", "tearDownClass"]], "test_linear": [[252, 10, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[252, 12, 1, "", "setUpClass"], [252, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[253, 10, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[253, 12, 1, "", "setUpClass"], [253, 12, 1, "", "tearDownClass"]], "test_main": [[254, 10, 1, "", "TestMain"]], "test_main.TestMain": [[254, 12, 1, "", "setUpClass"], [254, 12, 1, "", "tearDownClass"]], "test_matmul": [[255, 10, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[255, 12, 1, "", "setUpClass"], [255, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[256, 10, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[256, 12, 1, "", "setUpClass"], [256, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[257, 10, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[258, 10, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[259, 10, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[260, 10, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[262, 10, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[263, 10, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_ops": [[264, 10, 1, "", "TestOps"]], "test_ops.TestOps": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[265, 10, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[266, 10, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[267, 10, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_permute": [[268, 10, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[269, 10, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_pow": [[270, 10, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[271, 10, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[272, 10, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[273, 10, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[274, 10, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[275, 10, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[276, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[277, 10, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[278, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_size": [[279, 10, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_softmax": [[280, 10, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[281, 10, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_tanh": [[282, 10, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[283, 10, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[284, 10, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[285, 10, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[286, 10, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_transpose": [[287, 10, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[288, 10, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_unet": [[289, 10, 1, "", "TestUnet"]], "test_unet.TestUnet": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[290, 10, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[291, 10, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[292, 10, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[293, 10, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[294, 10, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[295, 10, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[296, 10, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[297, 10, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:method", "13": "py:function", "14": "py:data"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "method", "Python method"], "13": ["py", "function", "Python function"], "14": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 330, 337], "api_doc_exampl": 0, "modul": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "content": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 374, 379], "class": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 188, 191, 193, 194, 196, 197, 198, 200, 201, 204, 205, 206, 207, 208, 210, 211, 214, 216, 217, 218, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 306, 307, 308, 318, 366], "function": [0, 2, 10, 14, 15, 36, 48, 100, 125, 180, 181, 184, 185, 187, 188, 199, 201, 204, 205, 207, 208, 209, 216, 217, 219, 220, 223], "attribut": [0, 36, 100, 180, 328, 338], "backend": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 334, 339, 368], "neural_engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "compil": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 303, 343], "extractor": [3, 4, 5, 6, 7], "submodul": [4, 9, 11, 12, 36, 100, 183, 189, 190, 192, 195, 202, 213, 215, 222], "onnx_extractor": 5, "tf_extractor": 6, "torch_extractor": 7, "graph": [8, 9, 304, 339, 341, 342], "graph_util": 10, "subpackag": [11, 182, 190], "loader": [12, 13], "logger": [14, 203], "onnx_util": 15, "op": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 338, 341], "all": 16, "assert": 17, "batch_matmul": 18, "batch_matmul_v2": 19, "bias_add": 20, "binary_op": 21, "cast": 22, "concat": 23, "conv": 24, "co": 25, "empty_op": 26, "expand_dim": 27, "fused_batch_matmul_v2": 28, "fused_batch_norm_v3": 29, "fused_gemm": 30, "fused_matmul": 31, "gather": 32, "gather_el": 33, "gelu": [34, 98], "gemm": [35, 353, 354, 356, 359], "packag": [36, 100], "iterator_get_next": 37, "iterator_v2": 38, "layer_norm": [39, 110], "log_softmax": 40, "map_and_batch_dataset": 41, "matmul": [42, 355, 356, 357], "mean": [43, 351], "mkl_layer_norm": 44, "model_dataset": 45, "one_hot": 46, "onnx_input": 47, "optimize_dataset": 49, "pack": 50, "padding_sequ": [51, 124], "placehold": 52, "pos_emb": 53, "pow": 54, "quantize_linear": 55, "quantize_v2": 56, "quantized_fused_matmul_and_dequant": 57, "quantized_matmul_with_bias_and_dequant": 58, "reduce_mean": 59, "reduce_sum": 60, "reorder": [61, 353, 357, 358, 359], "reshap": 62, "rsub": 63, "scatter_el": 64, "shape": 65, "sin": 66, "size": [67, 355], "slice": 68, "softmax": [69, 363], "split": 70, "squeez": 71, "strided_slic": 72, "tensor": 73, "top_k": 74, "transpos": [75, 357, 358], "unpack": 76, "unsqueez": 77, "view": 78, "sub_graph": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "innerproductreshapefus": 79, "add_cls_token": 80, "add_embed": 81, "arangewithreciproc": 82, "attentionblock_attentionmaskaddreshap": 83, "attentionblock_constantofshapewithmul": 84, "attentionblock_qkvprereshap": 85, "attentionblock_qkvreshap": 86, "attentionblock_resize2gath": 87, "attentionblock_weightreshapeto4d": 88, "attention_mask_length_adaptive_keep_indic": 89, "attention_output_layer_norm_length_adaptive_keep_indic": 90, "attention_reshap": 91, "cast_to": 92, "collect_quant_info": 93, "conv_reshap": 94, "decoder_attn_reshap": 95, "einsumwitharang": 96, "embeddingbag": 97, "generate_sequ": 99, "innerproductwithbiasgelu": 101, "innerproductwithslic": 102, "input_data": 103, "input_fil": 104, "insert_bf16_nod": 105, "insert_quant_nod": 106, "int8_bf16_mixed_precision_check": 107, "interact_featur": 108, "last_layer_shap": 109, "layer_norm_with_reduce_mean": 111, "layer_norm_with_transpos": 112, "matmul_with_bia": 113, "matmul_with_bias_add": 114, "matmul_with_bias_gelu": 115, "matmul_with_bias_relu": 116, "matmul_with_bias_sigmoid": 117, "matmul_with_bias_tanh": 118, "matmul_with_transpos": 119, "merged_embeddingbag": 120, "multi_head_attent": 121, "operator_adaptor": 122, "output_data": 123, "pattern": [125, 204, 338, 341, 342, 346, 353, 354, 359], "position_embed": 126, "position_embeddings_v1": 127, "qkv_merg": 128, "qkv_reshap": 129, "quantize_fus": 130, "quantized_graph_dtype_refactor": 131, "remove_constant_op": 132, "remove_last_view": 133, "remove_list_construct": 134, "remove_rang": 135, "removeslic": 136, "reshape_after_restore_hidden_st": 137, "reshape_before_and_after_attention_out_layer_norm_gather_el": 138, "reshape_before_restore_hidden_st": 139, "reshape_fus": 140, "resnetblock_instancenormreshapefromconv": 141, "resnetblock_instancenormreshapefromdiv": 142, "restnetblock_groupnorm": 143, "restore_hidden_states_in_length_adaptive_update_indic": 144, "rotary_pos_emb": 145, "slicemask": 146, "stablediffusion_reshapefus": 147, "stablediffusion_bf16convert": 148, "start_end_logit": 149, "subgraph_match": 150, "textencdoer_word_embed": 151, "textencoder_attentionmaskaddreshap": 152, "textencoder_attentionreshap": 153, "textencoder_kvreshap": 154, "textencoder_mulreshap": 155, "textencoder_qreshap": 156, "textencoder_softmaxreshap": 157, "textencoder_causal_attention_mask": 158, "token_type_embed": 159, "token_type_embeddings_v1": 160, "torch_embed": 161, "torch_ip_insert_bia": 162, "torchinsertbf16nod": 163, "torchpaddingsqu": 164, "transformer2dmodel_attentionmaskaddreshap": 165, "transformer2dmodel_constantofshapewithmul": 166, "transformer2dmodel_ffnslic": 167, "transformer2dmodel_ffnslice_1": 168, "transformer2dmodel_qkvprereshap": 169, "transformer2dmodel_qkvreshap": 170, "transformer2dmodel_qkvreshape4d": 171, "transformer2dmodel_encoderhiddenstatesreshap": 172, "transformer2dmodel_getsamplebatch": 173, "transformer2dmodel_instancenormreshapefromadd": 174, "transformer2dmodel_instancenormreshapefromconcat": 175, "transformer2dmodel_sampleslic": 176, "transformer2dmodel_upblockres": 177, "transpose_batch_matmul": 178, "word_embed": 179, "tf_util": 180, "torch_util": 181, "optim": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 313, 314], "benchmark": [184, 319, 344, 363], "config": [185, 311, 318, 338, 341], "distil": [186, 318, 332, 333, 335], "dynam": [187, 188, 189, 355, 370], "drop_and_restore_util": 187, "evolut": 188, "mixtur": [191, 192], "auto_distil": 191, "model": [193, 215, 216, 217, 299, 312, 319, 331, 334, 339, 340, 343, 344, 362, 368], "na": [194, 195, 196, 333], "basic_na": 194, "optimizer_tf": [198, 318], "pipelin": [199, 318, 368], "prune": [200, 206, 333, 335, 369], "pytorch_prun": [201, 202, 203, 204, 205, 206, 207, 208, 209], "criteria": 201, "pruner": 205, "reg": 207, "schedul": 208, "util": [209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223], "quantiz": [210, 333, 335, 344, 370], "trainer": [211, 315, 318, 332, 369, 370], "get_throughput": 212, "metric": [214, 332, 366, 369, 370], "modeling_bert_dynam": 216, "modeling_roberta_dynam": 217, "object": [218, 367, 370], "utility_tf": 220, "preprocess": [221, 222, 223, 355], "data_augment": 221, "version": [224, 337], "sparsity_al": 225, "test_add_cls_token": 226, "test_add_embed": 227, "test_attention_output_layer_norm_length_adaptive_keep_indic": 228, "test_attention_reshap": 229, "test_bert_mini_fp32": 230, "test_binary_op": 231, "test_binaryop": 232, "test_cast_to": 233, "test_concat": 234, "test_conv_reshap": 235, "test_decoder_attn_reshap": 236, "test_dispatcher_tuning_acc": 237, "test_dispatcher_tuning_throughput": 238, "test_dynamic_quant": 239, "test_embed": 240, "test_embeddingbag": 241, "test_execution_opt": 242, "test_gelu": 243, "test_gpt_int8": 244, "test_graph_dispatch": 245, "test_insert_input_output_data": 246, "test_is_supported_onnx_graph": 247, "test_last_layer_shap": 248, "test_layer_norm_with_reduce_mean": 249, "test_layer_norm_with_transpos": 250, "test_layernorm": 251, "test_linear": 252, "test_linear_int8": 253, "test_main": 254, "test_matmul": 255, "test_matmul_int8": 256, "test_matmul_with_bias_relu": 257, "test_matmul_with_bias_sigmoid": 258, "test_matmul_with_bias_tanh": 259, "test_merged_embeddingbag": 260, "test_model": 261, "test_onnx_util": 262, "test_operator_adaptor": 263, "test_op": 264, "test_padding_seq": 265, "test_padding_sequ": 266, "test_pattern_dispatch": 267, "test_permut": 268, "test_position_embed": 269, "test_pow": 270, "test_primitive_cache_acc": 271, "test_primitive_cache_throughput": 272, "test_qkv_merg": 273, "test_qkv_reshap": 274, "test_quant_onnx_execut": 275, "test_reshape_after_restore_hidden_st": 276, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 277, "test_reshape_before_restore_hidden_st": 278, "test_siz": 279, "test_softmax": 280, "test_start_end_logit": 281, "test_tanh": 282, "test_text_encod": 283, "test_text_encoder_bf16": 284, "test_tf_util": 285, "test_token_type_embed": 286, "test_transpos": 287, "test_transpose_batch_matmul": 288, "test_unet": 289, "test_unet_bf16": 290, "test_unsqueez": 291, "test_vae_decod": 292, "test_vae_decoder_bf16": 293, "test_weight_sharing_acc": 294, "test_weight_sharing_dispatcher_tuning_acc": 295, "test_weight_sharing_dispatcher_tuning_throughtput": 296, "test_weight_sharing_throughput": 297, "secur": 298, "polici": 298, "report": 298, "vulner": 298, "intel": [299, 317, 322, 331, 333, 375], "extens": [299, 317, 322, 331, 333, 375], "transform": [299, 317, 322, 331, 333, 335, 348, 375], "acceler": [299, 335, 348, 352], "base": [299, 333], "platform": [299, 347, 361], "select": 299, "public": 299, "event": 299, "api": [300, 301, 302, 305, 310, 316, 318, 319, 334, 340, 348], "document": [301, 322, 375], "exampl": [301, 318, 319, 320, 333, 334, 340, 343, 363, 367, 368, 373], "python": [302, 340], "engin": [305, 306, 326, 333, 335, 337, 339, 341, 343, 344, 347, 379], "kernel": [307, 310, 323, 341, 348, 352, 355, 363, 376], "operator_desc": [308, 350, 351], "oper": [309, 340, 345], "specif": 309, "type": [309, 338, 369], "pytorch": [313, 318, 319, 332, 333], "tensorflow": [314, 318, 332, 333], "user": [316, 327, 348, 350, 351, 372, 380], "face": 316, "architectur": [317, 339], "autodistil": 318, "design": [318, 344], "framework": [318, 350, 351], "criterion": [318, 332], "knowledgedistillationloss": 318, "intermediatelayersknowledgedistillationloss": 318, "usag": [318, 332, 334, 350, 351, 363, 369], "flash": 318, "regular": 318, "introduct": [319, 330, 332, 334, 338, 340, 341, 342, 343, 346, 348, 350, 351, 352, 353, 357, 362, 366, 367, 368, 369, 370], "get": [319, 330, 331, 335, 340, 344, 366, 370], "start": [319, 330, 331, 335, 366, 370], "stock": [319, 333], "ipex": [319, 333], "output": [319, 331], "featur": [321, 350, 351, 370, 374], "welcom": [322, 375], "section": [322, 375], "implement": [324, 377], "detail": [324, 355, 358, 377], "perform": [325, 347, 348, 360, 361, 378], "neural": [326, 333, 335, 337, 339, 347, 379], "guid": [327, 372, 380], "contributor": [328, 329], "coven": [328, 329], "code": [328, 329], "conduct": [328, 329], "our": 328, "pledg": 328, "standard": 328, "respons": 328, "scope": 328, "enforc": 328, "contribut": 329, "guidelin": 329, "pull": 329, "request": 329, "checklist": 329, "templat": 329, "support": [329, 330, 331, 334, 343, 347, 348, 366, 367, 370], "data": [330, 354, 361], "augment": 330, "instal": [330, 331, 336, 337, 344, 348], "depend": 330, "script": [330, 332, 369, 370], "paramet": 330, "text": 330, "gener": [330, 339], "argument": 330, "overview": 331, "recommend": 331, "hardwar": [331, 336], "valid": [331, 336, 361], "environ": [331, 336, 344], "how": [331, 341, 362], "work": [331, 352], "1": [331, 339, 340, 344, 345, 362], "prerequisit": [331, 336, 337, 344, 355], "2": [331, 339, 344, 345, 362], "from": [331, 336, 337], "pypi": [331, 336], "conda": 331, "3": [331, 339, 362], "sourc": [331, 336], "To": [331, 344], "run": [331, 339, 340, 344, 362], "requir": [331, 336], "prepar": [331, 343, 344, 362], "dataset": [331, 344], "compress": 331, "4": [331, 339, 361], "infer": [331, 339, 349, 368], "expect": 331, "summari": [331, 366], "next": 331, "step": 331, "learn": 331, "more": [331, 341, 352], "knowledg": [332, 333], "intermedi": 332, "layer": [332, 356], "creat": [332, 342, 369, 370], "an": [332, 343, 369, 370], "instanc": [332, 369, 370], "option": [332, 341, 369, 370], "distillationconfig": 332, "length": [333, 335], "adapt": [333, 335], "auto": 333, "orchestr": 333, "refer": [333, 348], "deploy": 333, "dens": [333, 352], "spars": [333, 340, 352, 353, 354, 356, 359, 362], "export": 334, "onnx": [334, 339, 343, 344], "matrix": [334, 347, 348, 355, 367, 370], "fp32": 334, "bf16": 334, "int8": [334, 344, 368], "For": [334, 363], "executor": [334, 345, 368], "linux": 336, "window": 336, "system": 336, "softwar": 336, "stabl": 337, "pip": 337, "binari": [337, 339, 350], "deploi": [337, 339], "bare": 337, "metal": 337, "add": [338, 345], "custom": [338, 339, 345], "regist": [338, 345], "node": [338, 342], "set": [338, 340], "map": [338, 342], "fuse": 338, "new": [338, 342], "after": 338, "fusion": [338, 342], "integr": 339, "tf": 339, "us": [339, 355], "through": 339, "manual": 339, "yaml": 339, "weight": [339, 355, 362], "build": [339, 348, 363], "profil": [340, 360], "profl": 340, "you": 340, "can": 340, "onli": 340, "engine_profil": 340, "befor": 340, "c": 340, "part": 340, "csv": 340, "ratio": 340, "total": 340, "level": 340, "json": 340, "iter": 340, "tune": [341, 344, 370], "dispatch": 341, "best": 341, "relat": 341, "runtim": 341, "turn": 341, "mechan": 341, "dict": 342, "obtain": 342, "necessari": 342, "inform": [342, 365], "construct": 342, "establish": 342, "connect": 342, "remov": [342, 346], "old": 342, "insert": 342, "ir": [343, 344], "format": [343, 354, 364], "low": 344, "precis": 344, "its": 344, "accuraci": [344, 370], "h": 345, "includ": 345, "cpp": 345, "src": 345, "recogn": 346, "represent": 346, "pars": 346, "list": [346, 369], "search": 346, "each": 346, "straight": 346, "chain": 346, "splice": 346, "sub": 346, "main": 346, "duplic": 346, "result": [346, 362], "configur": [347, 361], "librari": 348, "test": 348, "sparse_matmul": [348, 363], "3d": 349, "memori": 349, "layout": 349, "spmm_vnni": [349, 363], "cach": 349, "issu": 349, "injector": [350, 351], "param_typ": [350, 351], "hpp": [350, 351], "jit_binaryop_injector": 350, "develop": [350, 351, 363], "": [350, 351], "perspect": [350, 351], "element": 351, "wise": 351, "alpha": 351, "beta": 351, "scale": 351, "jit_eltwise_injector": 351, "naiv": 352, "tile": 352, "effici": 352, "per": 352, "thread": [352, 361], "prefetch": 352, "amx": 353, "brief": 353, "isa": 353, "avx512f": 354, "kei": 354, "instruct": 354, "loop": 354, "quant": 355, "problem": [355, 356, 357, 358], "descript": [355, 356, 358], "differ": 355, "jit": 355, "path": 355, "small_wei": 355, "large_wei": 355, "normal": 356, "layernorm": 356, "pre": 356, "comput": 356, "spmm": 356, "direct": 356, "layernorm_ba": [356, 363], "statement": 357, "matmul_p2031_2013": 357, "matmul_avx512f_p2031_p2013": [357, 363], "matmul_noperm_p2031_p1302": 357, "matmul_vnni_noperm_p2013_p1302": 357, "beforehand": 357, "mha": [358, 363], "calcul": 358, "vnni": 359, "On": 359, "fly": 359, "activ": 359, "candid": 359, "verbos": 360, "vtune": 360, "sde": 360, "singl": 361, "multi": 361, "visual": 362, "distribut": 362, "setup": 362, "below": 362, "command": 362, "analysi": 362, "spmm_avx512f": 363, "spmm_amx_bf16_x16": 363, "eltwiseop": 363, "transpose_matmul": 363, "matmul_vnni_noperm_p2031_p1302": 363, "attent": 363, "static": [363, 370], "dynamic_quant_matmul": 363, "dynamic_qu": 363, "input": 364, "legal": 365, "licens": 365, "citat": 365, "trademark": 365, "prunerconfig": 369, "pruningconfig": 369, "fundament": 370, "approach": 370, "post": 370, "train": 370, "awar": 370, "quantizationconfig": 370, "releas": 371, "note": 371}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [191, "module-contents"], [193, "module-contents"], [194, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [200, "module-contents"], [201, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [207, "module-contents"], [208, "module-contents"], [209, "module-contents"], [210, "module-contents"], [211, "module-contents"], [214, "module-contents"], [216, "module-contents"], [217, "module-contents"], [218, "module-contents"], [219, "module-contents"], [220, "module-contents"], [221, "module-contents"], [223, "module-contents"], [226, "module-contents"], [227, "module-contents"], [228, "module-contents"], [229, "module-contents"], [230, "module-contents"], [231, "module-contents"], [232, "module-contents"], [233, "module-contents"], [234, "module-contents"], [235, "module-contents"], [236, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [241, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [247, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [185, "classes"], [186, "classes"], [188, "classes"], [191, "classes"], [193, "classes"], [194, "classes"], [196, "classes"], [197, "classes"], [198, "classes"], [200, "classes"], [201, "classes"], [204, "classes"], [205, "classes"], [206, "classes"], [207, "classes"], [208, "classes"], [210, "classes"], [211, "classes"], [214, "classes"], [216, "classes"], [217, "classes"], [218, "classes"], [220, "classes"], [221, "classes"], [223, "classes"], [226, "classes"], [227, "classes"], [228, "classes"], [229, "classes"], [230, "classes"], [231, "classes"], [232, "classes"], [233, "classes"], [234, "classes"], [235, "classes"], [236, "classes"], [237, "classes"], [238, "classes"], [239, "classes"], [240, "classes"], [241, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [247, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [254, "classes"], [255, "classes"], [256, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [10, "functions"], [14, "functions"], [15, "functions"], [36, "functions"], [48, "functions"], [100, "functions"], [125, "functions"], [180, "functions"], [181, "functions"], [184, "functions"], [185, "functions"], [187, "functions"], [188, "functions"], [199, "functions"], [201, "functions"], [204, "functions"], [205, "functions"], [207, "functions"], [208, "functions"], [209, "functions"], [216, "functions"], [217, "functions"], [219, "functions"], [220, "functions"], [223, "functions"]], "Attributes": [[0, "attributes"], [36, "attributes"], [100, "attributes"], [180, "attributes"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [36, "submodules"], [100, "submodules"], [183, "submodules"], [189, "submodules"], [190, "submodules"], [192, "submodules"], [195, "submodules"], [202, "submodules"], [213, "submodules"], [215, "submodules"], [222, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[11, "subpackages"], [182, "subpackages"], [190, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[36, "package-contents"], [100, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[182, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[183, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[184, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[185, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[186, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[189, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[190, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[192, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[193, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[195, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[197, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[199, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[200, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "intel_extension_for_transformers.optimization.quantization": [[210, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[211, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[212, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[213, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[214, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[215, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[216, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[217, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[218, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[219, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[220, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[221, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[222, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[223, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[224, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[225, "module-sparsity_all"]], "test_add_cls_token": [[226, "module-test_add_cls_token"]], "test_add_embeddings": [[227, "module-test_add_embeddings"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[228, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[229, "module-test_attention_reshape"]], "test_bert_mini_fp32": [[230, "module-test_bert_mini_fp32"]], "test_binary_op": [[231, "module-test_binary_op"]], "test_binaryop": [[232, "module-test_binaryop"]], "test_cast_to": [[233, "module-test_cast_to"]], "test_concat": [[234, "module-test_concat"]], "test_conv_reshape": [[235, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[236, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[237, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[238, "module-test_dispatcher_tuning_throughput"]], "test_dynamic_quantization": [[239, "module-test_dynamic_quantization"]], "test_embedding": [[240, "module-test_embedding"]], "test_embeddingbag": [[241, "module-test_embeddingbag"]], "test_execution_options": [[242, "module-test_execution_options"]], "test_gelu": [[243, "module-test_gelu"]], "test_gpt_int8": [[244, "module-test_gpt_int8"]], "test_graph_dispatch": [[245, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[246, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[247, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[248, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[249, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[250, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[251, "module-test_layernorm"]], "test_linear": [[252, "module-test_linear"]], "test_linear_int8": [[253, "module-test_linear_int8"]], "test_main": [[254, "module-test_main"]], "test_matmul": [[255, "module-test_matmul"]], "test_matmul_int8": [[256, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[257, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[258, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[259, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[260, "module-test_merged_embeddingbag"]], "test_model": [[261, "module-test_model"]], "test_onnx_utils": [[262, "module-test_onnx_utils"]], "test_operator_adaptor": [[263, "module-test_operator_adaptor"]], "test_ops": [[264, "module-test_ops"]], "test_padding_seq": [[265, "module-test_padding_seq"]], "test_padding_sequence": [[266, "module-test_padding_sequence"]], "test_pattern_dispatch": [[267, "module-test_pattern_dispatch"]], "test_permute": [[268, "module-test_permute"]], "test_position_embeddings": [[269, "module-test_position_embeddings"]], "test_pow": [[270, "module-test_pow"]], "test_primitive_cache_acc": [[271, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[272, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[273, "module-test_qkv_merge"]], "test_qkv_reshape": [[274, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[275, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[276, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[277, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[278, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[279, "module-test_size"]], "test_softmax": [[280, "module-test_softmax"]], "test_start_end_logits": [[281, "module-test_start_end_logits"]], "test_tanh": [[282, "module-test_tanh"]], "test_text_encoder": [[283, "module-test_text_encoder"]], "test_text_encoder_bf16": [[284, "module-test_text_encoder_bf16"]], "test_tf_utils": [[285, "module-test_tf_utils"]], "test_token_type_embeddings": [[286, "module-test_token_type_embeddings"]], "test_transpose": [[287, "module-test_transpose"]], "test_transpose_batch_matmul": [[288, "module-test_transpose_batch_matmul"]], "test_unet": [[289, "module-test_unet"]], "test_unet_bf16": [[290, "module-test_unet_bf16"]], "test_unsqueeze": [[291, "module-test_unsqueeze"]], "test_vae_decoder": [[292, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[293, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[294, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[295, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[296, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[297, "module-test_weight_sharing_throughput"]], "Security Policy": [[298, "security-policy"]], "Report a Vulnerability": [[298, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[299, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[299, "selected-publications-events"]], "API": [[300, "api"]], "API Document Example": [[301, "api-document-example"]], "Python APIs": [[302, "python-apis"]], "Compile": [[303, "compile"]], "Graph": [[304, "graph"]], "Engine API": [[305, "engine-api"]], "Class engine": [[306, "class-engine"]], "Class Kernel": [[307, "class-kernel"]], "Class operator_desc": [[308, "class-operator-desc"]], "Operator Specific Types": [[309, "operator-specific-types"]], "Kernel APIs": [[310, "kernel-apis"]], "Config": [[311, "config"]], "Model": [[312, "model"]], "PyTorch Optimizer": [[313, "pytorch-optimizer"]], "TensorFlow Optimizer": [[314, "tensorflow-optimizer"]], "Trainer": [[315, "trainer"]], "User-facing API": [[316, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[317, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[318, "autodistillation-design"]], "AutoDistillation Pipeline": [[318, "autodistillation-pipeline"]], "Framework Class Design": [[318, "framework-class-design"]], "Criterion Class Design": [[318, "criterion-class-design"]], "KnowledgeDistillationLoss": [[318, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[318, "intermediatelayersknowledgedistillationloss"]], "Usage": [[318, "usage"], [350, "usage"], [351, "usage"], [363, "usage"], [369, "usage"]], "Pytorch": [[318, "pytorch"]], "AutoDistillation API in Trainer": [[318, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[318, "flash-distillation-config-example"]], "Regular distillation config example": [[318, "regular-distillation-config-example"]], "AutoDistillation config example": [[318, "autodistillation-config-example"], [318, "id1"]], "Tensorflow": [[318, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[318, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[318, "distillation-config-example"]], "Benchmark": [[319, "benchmark"]], "Introduction": [[319, "introduction"], [330, "introduction"], [332, "introduction"], [334, "introduction"], [338, "introduction"], [340, "introduction"], [341, "introduction"], [342, "introduction"], [343, "introduction"], [346, "introduction"], [348, "introduction"], [350, "introduction"], [351, "introduction"], [352, "introduction"], [357, "introduction"], [362, "introduction"], [366, "introduction"], [367, "introduction"], [368, "introduction"], [369, "introduction"], [370, "introduction"]], "Get Started with Benchmark API": [[319, "get-started-with-benchmark-api"]], "Examples": [[319, "examples"], [333, "examples"], [334, "examples"], [363, "examples"], [363, "id1"], [363, "id2"], [363, "id3"], [363, "id4"], [363, "id5"], [363, "id6"], [363, "id7"], [363, "id8"], [363, "id9"], [363, "id10"], [363, "id11"], [368, "examples"]], "Stock Pytorch Model": [[319, "stock-pytorch-model"]], "IPEX Model": [[319, "ipex-model"]], "Benchmark Output": [[319, "benchmark-output"]], "Example": [[320, "example"], [373, "example"]], "Features": [[321, "features"], [374, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[322, "welcome-to-intel-extension-for-transformers-documentation"], [375, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[322, "sections"], [375, "sections"]], "Kernels": [[323, "kernels"], [376, "kernels"]], "Implementation Details": [[324, "implementation-details"], [377, "implementation-details"]], "Performance": [[325, "performance"], [347, "performance"], [348, "performance"], [378, "performance"]], "Neural Engine": [[326, "neural-engine"], [379, "neural-engine"]], "User Guide": [[327, "user-guide"], [372, "user-guide"], [380, "user-guide"]], "Contributor Covenant Code of Conduct": [[328, "contributor-covenant-code-of-conduct"], [329, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[328, "our-pledge"]], "Our Standards": [[328, "our-standards"]], "Our Responsibilities": [[328, "our-responsibilities"]], "Scope": [[328, "scope"]], "Enforcement": [[328, "enforcement"]], "Attribution": [[328, "attribution"]], "Contribution Guidelines": [[329, "contribution-guidelines"]], "Pull Request Checklist": [[329, "pull-request-checklist"]], "Pull Request Template": [[329, "pull-request-template"]], "Support": [[329, "support"], [331, "support"]], "Data Augmentation": [[330, "data-augmentation"], [330, "id1"]], "Getting Started": [[330, "getting-started"], [335, "getting-started"]], "Install Dependency": [[330, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[330, "install-intel-extension-for-transformers"]], "Script": [[330, "script"]], "Parameters of Data Augmentation": [[330, "parameters-of-data-augmentation"]], "Supported Augmenter": [[330, "supported-augmenter"]], "Text Generation Augmenter": [[330, "text-generation-augmenter"]], "Augmenter Arguments:": [[330, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[331, "intel-extension-for-transformers"]], "Overview": [[331, "overview"]], "Recommended Hardware": [[331, "recommended-hardware"]], "Validated Hardware Environment": [[331, "validated-hardware-environment"], [336, "validated-hardware-environment"]], "How it Works": [[331, "how-it-works"]], "Get Started": [[331, "get-started"], [370, "get-started"]], "1. Prerequisites": [[331, "prerequisites"]], "2. Installation": [[331, "installation"]], "2.1 Install from PyPi": [[331, "install-from-pypi"]], "2.2 Install from Conda": [[331, "install-from-conda"]], "2.3 Install from Source": [[331, "install-from-source"]], "3. How To Run": [[331, "how-to-run"]], "3.1 Install Requirements": [[331, "install-requirements"]], "3.2 Prepare Datasets": [[331, "prepare-datasets"]], "3.3 Model Compression": [[331, "model-compression"]], "3.4 Model Inference": [[331, "model-inference"]], "Expected Output": [[331, "expected-output"]], "Summary and Next Steps": [[331, "summary-and-next-steps"]], "Learn More": [[331, "learn-more"]], "Distillation": [[332, "distillation"], [332, "id1"], [333, "distillation"], [335, "distillation"]], "Knowledge Distillation": [[332, "knowledge-distillation"], [333, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[332, "intermediate-layer-knowledge-distillation"]], "usage": [[332, "usage"]], "Pytorch Script:": [[332, "pytorch-script"]], "Tensorflow Script:": [[332, "tensorflow-script"]], "Create an Instance of Metric": [[332, "create-an-instance-of-metric"], [370, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[332, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[332, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[332, "distill-with-trainer"]], "Quantization": [[333, "quantization"], [335, "quantization"], [370, "quantization"]], "Stock PyTorch Examples": [[333, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[333, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[333, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[333, "length-adaptive-transformers"]], "Pruning": [[333, "pruning"], [335, "pruning"], [369, "pruning"]], "Auto Distillation (NAS Based)": [[333, "auto-distillation-nas-based"]], "Orchestrate": [[333, "orchestrate"]], "Reference Deployment on Neural Engine": [[333, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[333, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[333, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[334, "export-to-onnx"]], "Supported Model Export Matrix": [[334, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[334, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[334, "export-to-bf16-onnx-model"]], "API usage": [[334, "api-usage"]], "Export to INT8 ONNX Model": [[334, "export-to-int8-onnx-model"]], "For executor backend": [[334, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[335, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[335, "transformers-accelerated-neural-engine"]], "Installation": [[336, "installation"], [337, "installation"], [348, "installation"]], "Linux Installation": [[336, "linux-installation"]], "Prerequisites": [[336, "prerequisites"], [336, "id1"], [337, "prerequisites"]], "Install from Pypi": [[336, "install-from-pypi"], [336, "id2"]], "Install from Source": [[336, "install-from-source"], [336, "id3"]], "Windows Installation": [[336, "windows-installation"]], "System Requirements": [[336, "system-requirements"]], "Validated Software Environment": [[336, "validated-software-environment"]], "Install": [[337, "install"]], "Install stable version intel_extension_for_transformers from pip": [[337, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[337, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[338, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[338, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[338, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[338, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[339, "deploy-and-integration"]], "1. Architecture": [[339, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[339, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[339, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[339, "run-the-inference-by-engine"], [339, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[339, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[339, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[339, "integrate-neural-engine-as-backend"]], "Profiling": [[340, "profiling"]], "Profling API": [[340, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[340, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[340, "profiling-examples"]], "Parts of CSV Profiling": [[340, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[340, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[340, "operator-profiling-part"]], "Total Profiling Part": [[340, "total-profiling-part"]], "Levels of JSON Profiling": [[340, "levels-of-json-profiling"]], "Model Level": [[340, "model-level"]], "Iteration Level": [[340, "iteration-level"]], "Operator Level": [[340, "operator-level"]], "Engine Tuning": [[341, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[341, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[341, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[341, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[341, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[341, "more-tuning-options"]], "Graph Fusion": [[342, "graph-fusion"]], "Pattern Mapping Dict": [[342, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[342, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[342, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[342, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[343, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[343, "supported-onnx-format"]], "Compile Examples": [[343, "compile-examples"]], "Prepare ONNX Model": [[343, "prepare-onnx-model"]], "Compile to IR": [[343, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[344, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[344, "design"]], "Prerequisite": [[344, "prerequisite"]], "Install environment": [[344, "install-environment"]], "Prepare Dataset": [[344, "prepare-dataset"]], "Prepare ONNX model": [[344, "prepare-onnx-model"]], "Run tuning and benchmark": [[344, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[344, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[344, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[345, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[345, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[345, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[346, "pattern-recognize"]], "Pattern Representation": [[346, "pattern-representation"]], "Parse Pattern Representation List": [[346, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[346, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[346, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Neural Engine Support Matrix": [[347, "neural-engine-support-matrix"]], "platform configuration": [[347, "platform-configuration"]], "Transformers-Accelerated Libraries": [[348, "transformers-accelerated-libraries"]], "Build": [[348, "build"], [363, "build"]], "Test": [[348, "test"]], "API reference for users": [[348, "api-reference-for-users"]], "sparse_matmul kernel:": [[348, "sparse-matmul-kernel"]], "Supported Matrix": [[348, "supported-matrix"]], "3D Inference": [[349, "d-inference"]], "Memory Layout in SPMM_VNNI": [[349, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[349, "cache-issues"]], "SPMM_VNNI 3D Inference": [[349, "spmm-vnni-3d-inference"]], "Binary Injectors": [[350, "binary-injectors"]], "Framework Features": [[350, "framework-features"], [351, "framework-features"]], "param_type.hpp": [[350, "param-type-hpp"]], "operator_desc.hpp": [[350, "operator-desc-hpp"], [351, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[350, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[350, "developer-s-perspective"]], "User\u2019s Perspective": [[350, "user-s-perspective"], [351, "user-s-perspective"]], "Element-wise Injector": [[351, "element-wise-injector"]], "param_types.hpp": [[351, "param-types-hpp"]], "alpha,beta,scale meaning": [[351, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[351, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[351, "developer-s-perspective"]], "Dense and Sparse": [[352, "dense-and-sparse"]], "Naive": [[352, "naive"]], "Tile": [[352, "tile"]], "Efficient kernel": [[352, "efficient-kernel"]], "More work per thread": [[352, "more-work-per-thread"]], "Prefetch": [[352, "prefetch"]], "Sparse acceleration": [[352, "sparse-acceleration"]], "Sparse GEMM AMX": [[353, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[353, "brief-introduction-for-isas"]], "Pattern": [[353, "pattern"]], "Reorder": [[353, "reorder"]], "Sparse GEMM AVX512F": [[354, "sparse-gemm-avx512f"]], "Key Instruction": [[354, "key-instruction"]], "Sparse Pattern & Data Format": [[354, "sparse-pattern-data-format"]], "Loops": [[354, "loops"]], "Dynamic Quant Matmul": [[355, "dynamic-quant-matmul"]], "problem description": [[355, "problem-description"]], "Kernel details": [[355, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[355, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[355, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[355, "different-jit-paths-for-different-weight-size"]], "small_wei jit-path": [[355, "small-wei-jit-path"]], "large_wei jit-path": [[355, "large-wei-jit-path"]], "Sparse GEMM with Layer-Normalize": [[356, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[356, "problem-description"]], "layernormalized sparse matmul": [[356, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[356, "pre-compute-spmm"]], "Direct Layernorm_ba": [[356, "direct-layernorm-ba"]], "Transposed MatMul": [[357, "transposed-matmul"]], "Problem Statements": [[357, "problem-statements"]], "Matmul_p2031_2013": [[357, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[357, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[357, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[357, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[357, "reorder-beforehand"]], "Transposed MHA": [[358, "transposed-mha"]], "Problem description": [[358, "problem-description"]], "Details": [[358, "details"]], "Reordering": [[358, "reordering"]], "Calculation": [[358, "calculation"]], "Sparse GEMM VNNI": [[359, "sparse-gemm-vnni"]], "On the fly activation reordering": [[359, "on-the-fly-activation-reordering"]], "Candidate patterns": [[359, "candidate-patterns"]], "Performance and Profiling": [[360, "performance-and-profiling"]], "Verbose": [[360, "verbose"]], "VTune": [[360, "vtune"]], "SDE": [[360, "sde"]], "Validated Performance Data": [[361, "validated-performance-data"]], "Single Thread": [[361, "single-thread"]], "Multi Thread (Thread = 4)": [[361, "multi-thread-thread-4"]], "Platform Configuration": [[361, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[362, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[362, "setups"]], "1. Prepare the sparse model": [[362, "prepare-the-sparse-model"]], "2. Run below commands": [[362, "run-below-commands"]], "3. Analysis results": [[362, "analysis-results"]], "Benchmark for Kernels": [[363, "benchmark-for-kernels"]], "sparse_matmul": [[363, "sparse-matmul"]], "spmm_avx512f": [[363, "spmm-avx512f"]], "spmm_vnni": [[363, "spmm-vnni"]], "spmm_amx_bf16_x16": [[363, "spmm-amx-bf16-x16"]], "eltwiseop": [[363, "eltwiseop"]], "layernorm_ba": [[363, "layernorm-ba"]], "transpose_matmul": [[363, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[363, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[363, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[363, "softmax"]], "attention": [[363, "attention"]], "Static MHA": [[363, "static-mha"]], "dynamic_quant_matmul": [[363, "dynamic-quant-matmul"]], "dynamic_quant": [[363, "dynamic-quant"]], "For developers": [[363, "for-developers"]], "Inputs format": [[364, "inputs-format"]], "Legal Information": [[365, "legal-information"]], "License": [[365, "license"]], "Citation": [[365, "citation"]], "Trademarks": [[365, "trademarks"]], "Metrics": [[366, "metrics"]], "Supported Metric": [[366, "supported-metric"]], "Metric Class Summary": [[366, "metric-class-summary"]], "Get Start with Metrics": [[366, "get-start-with-metrics"]], "Objective": [[367, "objective"]], "Supported Objectives Matrix:": [[367, "supported-objectives-matrix"]], "Examples:": [[367, "examples"]], "Pipeline": [[368, "pipeline"]], "Pipeline Inference for INT8 Model": [[368, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[368, "pipeline-inference-for-executor-backend"]], "Pruning types": [[369, "pruning-types"]], "Script:": [[369, "script"], [370, "script"]], "Create an instance of Metric": [[369, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[369, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[369, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[369, "prune-with-trainer"]], "Quantization Fundamentals": [[370, "quantization-fundamentals"]], "Quantization Approach": [[370, "quantization-approach"]], "Post Training Dynamic Quantization": [[370, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[370, "post-training-static-quantization"]], "Quantization Aware Training": [[370, "quantization-aware-training"]], "Accuracy Aware Tuning": [[370, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[370, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[370, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[370, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[370, "quantization-with-trainer"]], "Release": [[371, "release"]], "Release Notes": [[371, "release-notes"]], "Contents:": [[374, null], [379, null]]}, "indexentries": {"exampleclass (class in intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass"]], "attr1 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr1"]], "attr2 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr2"]], "attr5 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr5"]], "attribute1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.attribute1"]], "function1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function1"]], "function2() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function2"]], "function3() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function3"]], "generator1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.generator1"]], "intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "method1() (intel_extension_for_transformers.api_doc_example.exampleclass method)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.method1"]], "module": [[0, "module-intel_extension_for_transformers.api_doc_example"], [1, "module-intel_extension_for_transformers.backends"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [182, "module-intel_extension_for_transformers.backends.neural_engine"], [183, "module-intel_extension_for_transformers"], [184, "module-intel_extension_for_transformers.optimization.benchmark"], [185, "module-intel_extension_for_transformers.optimization.config"], [186, "module-intel_extension_for_transformers.optimization.distillation"], [187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [189, "module-intel_extension_for_transformers.optimization.dynamic"], [190, "module-intel_extension_for_transformers.optimization"], [191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [192, "module-intel_extension_for_transformers.optimization.mixture"], [193, "module-intel_extension_for_transformers.optimization.model"], [194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [195, "module-intel_extension_for_transformers.optimization.nas"], [196, "module-intel_extension_for_transformers.optimization.nas.nas"], [197, "module-intel_extension_for_transformers.optimization.optimizer"], [198, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [199, "module-intel_extension_for_transformers.optimization.pipeline"], [200, "module-intel_extension_for_transformers.optimization.pruning"], [201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"], [202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"], [204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"], [206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"], [208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"], [209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"], [210, "module-intel_extension_for_transformers.optimization.quantization"], [211, "module-intel_extension_for_transformers.optimization.trainer"], [212, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [213, "module-intel_extension_for_transformers.optimization.utils"], [214, "module-intel_extension_for_transformers.optimization.utils.metrics"], [215, "module-intel_extension_for_transformers.optimization.utils.models"], [216, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [217, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [218, "module-intel_extension_for_transformers.optimization.utils.objectives"], [219, "module-intel_extension_for_transformers.optimization.utils.utility"], [220, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [221, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [222, "module-intel_extension_for_transformers.preprocessing"], [223, "module-intel_extension_for_transformers.preprocessing.utils"], [224, "module-intel_extension_for_transformers.version"], [225, "module-sparsity_all"], [226, "module-test_add_cls_token"], [227, "module-test_add_embeddings"], [228, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [229, "module-test_attention_reshape"], [230, "module-test_bert_mini_fp32"], [231, "module-test_binary_op"], [232, "module-test_binaryop"], [233, "module-test_cast_to"], [234, "module-test_concat"], [235, "module-test_conv_reshape"], [236, "module-test_decoder_attn_reshape"], [237, "module-test_dispatcher_tuning_acc"], [238, "module-test_dispatcher_tuning_throughput"], [239, "module-test_dynamic_quantization"], [240, "module-test_embedding"], [241, "module-test_embeddingbag"], [242, "module-test_execution_options"], [243, "module-test_gelu"], [244, "module-test_gpt_int8"], [245, "module-test_graph_dispatch"], [246, "module-test_insert_input_output_data"], [247, "module-test_is_supported_onnx_graph"], [248, "module-test_last_layer_shape"], [249, "module-test_layer_norm_with_reduce_mean"], [250, "module-test_layer_norm_with_transpose"], [251, "module-test_layernorm"], [252, "module-test_linear"], [253, "module-test_linear_int8"], [254, "module-test_main"], [255, "module-test_matmul"], [256, "module-test_matmul_int8"], [257, "module-test_matmul_with_bias_relu"], [258, "module-test_matmul_with_bias_sigmoid"], [259, "module-test_matmul_with_bias_tanh"], [260, "module-test_merged_embeddingbag"], [261, "module-test_model"], [262, "module-test_onnx_utils"], [263, "module-test_operator_adaptor"], [264, "module-test_ops"], [265, "module-test_padding_seq"], [266, "module-test_padding_sequence"], [267, "module-test_pattern_dispatch"], [268, "module-test_permute"], [269, "module-test_position_embeddings"], [270, "module-test_pow"], [271, "module-test_primitive_cache_acc"], [272, "module-test_primitive_cache_throughput"], [273, "module-test_qkv_merge"], [274, "module-test_qkv_reshape"], [275, "module-test_quant_onnx_execute"], [276, "module-test_reshape_after_restore_hidden_states"], [277, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [278, "module-test_reshape_before_restore_hidden_states"], [279, "module-test_size"], [280, "module-test_softmax"], [281, "module-test_start_end_logits"], [282, "module-test_tanh"], [283, "module-test_text_encoder"], [284, "module-test_text_encoder_bf16"], [285, "module-test_tf_utils"], [286, "module-test_token_type_embeddings"], [287, "module-test_transpose"], [288, "module-test_transpose_batch_matmul"], [289, "module-test_unet"], [290, "module-test_unet_bf16"], [291, "module-test_unsqueeze"], [292, "module-test_vae_decoder"], [293, "module-test_vae_decoder_bf16"], [294, "module-test_weight_sharing_acc"], [295, "module-test_weight_sharing_dispatcher_tuning_acc"], [296, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [297, "module-test_weight_sharing_throughput"]], "module_debug_level1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.module_debug_level1"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_resize2gather (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather.AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removelistconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct.RemoveListConstruct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_list_construct"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "resnetblock_instancenormreshapefromconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv.ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "resnetblock_instancenormreshapefromdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv.ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_instancenormreshapefromadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd.Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "transformer2dmodel_instancenormreshapefromconcat (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat.Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transformer2dmodel_upblockresize (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize.Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[182, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers": [[183, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[184, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[184, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[185, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[185, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[185, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[186, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[186, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[186, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[187, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[187, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[187, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[188, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[188, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[189, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[190, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[191, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[191, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[192, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[193, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[193, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[193, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[194, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[194, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[195, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[196, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[196, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[197, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[197, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[198, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[198, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[199, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[199, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[200, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[200, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[200, "module-intel_extension_for_transformers.optimization.pruning"]], "gradientcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion"]], "magnitudecriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion"]], "pruningcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion"]], "snipcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion"]], "snipmomentumcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion"]], "get_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.get_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[201, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.on_before_optimizer_step"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_step_begin"]], "register_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.register_criterion"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion attribute)": [[201, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[202, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[203, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "basepattern (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern"]], "m (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.M"]], "n (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.N"]], "patternninm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM"]], "patternnxm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM"]], "adjust_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.adjust_ratio"]], "block_size (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.block_size"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.check_layer_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.config"]], "count_new_masked_cnts() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.count_new_masked_cnts"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_block_size_dict"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_block_size_dict"]], "get_ele_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_ele_mask_per_threshold"]], "get_least_ninm_mask_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_least_ninm_mask_from_data"]], "get_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_mask_per_threshold"]], "get_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_masks_global"]], "get_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_local"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_pattern_lock_masks"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_reduced_masks_from_data"]], "get_single_mask_per_target_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_single_mask_per_target_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio"]], "get_sparsity_ratio_each_layer() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio_each_layer"]], "get_sparsity_ratio_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[204, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "invalid_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.invalid_layers"]], "is_global (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.is_global"]], "keep_mask_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.keep_mask_layers"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.max_sparsity_ratio_per_op"]], "min_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.min_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.modules"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.pattern"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reduce_scores"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reduce_scores"]], "reduce_tensor() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.reduce_tensor"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_orig_to_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_orig_to_pattern"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_reduced_to_orig"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_reduced_to_orig"]], "target_sparsity (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.target_sparsity"]], "update_new_added_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_new_added_masks"]], "update_progressive_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks"]], "update_progressive_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_global"]], "update_progressive_masks_linear() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_linear"]], "update_progressive_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_local"]], "update_progressive_masks_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_scores"]], "update_residual_cnt() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[204, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.update_residual_cnt"]], "basepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner"]], "basicpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner"]], "progressivepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner"]], "check_is_pruned_progressive_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_is_pruned_progressive_step"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.check_is_pruned_step"]], "check_progressive_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_progressive_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.config"]], "criterion (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.criterion"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[205, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights"]], "mask_weights_general() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights_general"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.masks"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.max_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_end"]], "parse_valid_pruner_types() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.parse_valid_pruner_types"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pattern"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.pattern"]], "print_progressive_sparsity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.print_progressive_sparsity"]], "pruning_frequency (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pruning_frequency"]], "reg (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.reg"]], "register_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.register_pruner"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scheduler"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scores"]], "set_global_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.set_global_step"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.target_sparsity_ratio"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.update_masks"]], "update_masks_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[205, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.update_masks_progressive"]], "pruning (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruning)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.update_config"]], "basereg (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg"]], "grouplasso (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso"]], "alpha (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.alpha"]], "get_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg"]], "get_reg_type() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg_type"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[207, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_before_optimizer_step"]], "reg_terms (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.reg_terms"]], "register_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[207, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.register_reg"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler"]], "pruningscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler attribute)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.iterativescheduler method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.oneshotscheduler method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler method)": [[208, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.update_sparsity_ratio"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_config"]], "check_key_validity() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_key_validity"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_config"]], "process_weight_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_weight_config"]], "process_yaml_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_yaml_config"]], "reset_none_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.reset_none_to_default"]], "update_params() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.update_params"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[210, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[210, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[211, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[211, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[211, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[211, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[212, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[213, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[214, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[214, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[215, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[216, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[216, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[217, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[217, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[218, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[218, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[218, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[218, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[219, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[219, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[220, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[220, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[220, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[220, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[220, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[221, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[221, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[221, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[221, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[221, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[222, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[223, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[223, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[223, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[224, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[225, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[226, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[226, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[226, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[226, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[227, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[227, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[227, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[227, "module-test_add_embeddings"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[228, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[228, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[228, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[228, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[229, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[229, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[229, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[229, "module-test_attention_reshape"]], "testtorchmodel (class in test_bert_mini_fp32)": [[230, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[230, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[230, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[230, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[231, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[231, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[231, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[231, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[232, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[232, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[232, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[232, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[233, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[233, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[233, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[233, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[234, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[234, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[234, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[234, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[235, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[235, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[235, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[235, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[236, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[236, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[236, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[236, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[237, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[237, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[237, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[237, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[238, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[238, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[238, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[238, "module-test_dispatcher_tuning_throughput"]], "testdynamicquantization (class in test_dynamic_quantization)": [[239, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[239, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[239, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[239, "module-test_dynamic_quantization"]], "testtorchop (class in test_embedding)": [[240, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[240, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[240, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[240, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[241, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[241, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[241, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[241, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[242, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[242, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[242, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[242, "module-test_execution_options"]], "testtorchop (class in test_gelu)": [[243, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[243, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[243, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[243, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[244, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[244, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[244, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[244, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[245, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[245, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[245, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[245, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[246, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[246, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[246, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[246, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[247, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[247, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[247, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[247, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[247, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[248, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[248, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[248, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[248, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[249, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[249, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[249, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[249, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[250, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[250, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[250, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[250, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[251, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[251, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[251, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[251, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[252, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[252, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[252, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[252, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[253, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[253, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[253, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[253, "module-test_linear_int8"]], "testmain (class in test_main)": [[254, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[254, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[254, "test_main.TestMain.tearDownClass"]], "test_main": [[254, "module-test_main"]], "testtorchop (class in test_matmul)": [[255, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[255, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[255, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[255, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[256, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[256, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[256, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[256, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[257, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[257, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[257, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[257, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[258, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[258, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[258, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[258, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[259, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[259, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[259, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[259, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[260, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[260, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[260, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[260, "module-test_merged_embeddingbag"]], "test_model": [[261, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[262, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[262, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[262, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[262, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[263, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[263, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[263, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[263, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[264, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[264, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[264, "test_ops.TestOps.tearDownClass"]], "test_ops": [[264, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[265, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[265, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[265, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[265, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[266, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[266, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[266, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[266, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[267, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[267, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[267, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[267, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[268, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[268, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[268, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[268, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[269, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[269, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[269, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[269, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[270, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[270, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[270, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[270, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[271, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[271, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[271, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[271, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[272, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[272, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[272, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[272, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[273, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[273, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[273, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[273, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[274, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[274, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[274, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[274, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[275, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[275, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[275, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[275, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[276, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[276, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[276, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[276, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[277, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[277, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[277, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[277, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[278, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[278, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[278, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[278, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[279, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[279, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[279, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[279, "module-test_size"]], "testtorchop (class in test_softmax)": [[280, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[280, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[280, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[280, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[281, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[281, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[281, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[281, "module-test_start_end_logits"]], "testtorchop (class in test_tanh)": [[282, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[282, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[282, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[282, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[283, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[283, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[283, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[283, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[284, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[284, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[284, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[284, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[285, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[285, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[285, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[285, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[286, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[286, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[286, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[286, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[287, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[287, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[287, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[287, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[288, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[288, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[288, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[288, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[289, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[289, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[289, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[289, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[290, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[290, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[290, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[290, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[291, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[291, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[291, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[291, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[292, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[292, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[292, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[292, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[293, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[293, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[293, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[293, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[294, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[294, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[294, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[294, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[295, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[295, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[295, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[295, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[296, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[296, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[296, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[296, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[297, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[297, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[297, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[297, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[306, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[306, "c.NULL_INSTANCE"]], "jd (c++ type)": [[306, "_CPPv42jd"], [307, "_CPPv42jd"], [308, "_CPPv42jd"], [309, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[306, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[306, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[306, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[306, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[306, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[306, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[306, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[306, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[306, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[306, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[306, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[306, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[306, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[306, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[306, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[306, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[306, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[307, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[307, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [307, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[307, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[307, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[307, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [307, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[307, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dyn_quantize_mha (c++ class)": [[307, "_CPPv4N2jd16dyn_quantize_mhaE"]], "jd::dyn_quantize_mha::dyn_quantize_mha (c++ function)": [[307, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy"], [307, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv"]], "jd::dyn_quantize_mha::~dyn_quantize_mha (c++ function)": [[307, "_CPPv4N2jd16dyn_quantize_mhaD0Ev"]], "jd::dyn_quantize_mha_desc (c++ class)": [[307, "_CPPv4N2jd21dyn_quantize_mha_descE"]], "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc (c++ function)": [[307, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc"], [307, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv"]], "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc (c++ function)": [[307, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[307, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[307, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [307, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[307, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[307, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[307, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [307, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[307, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[307, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[307, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [307, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[307, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[307, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[307, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [307, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[307, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[307, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[307, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [307, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[307, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[307, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[307, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [307, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[307, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[307, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[307, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [307, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[307, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[307, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[307, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [307, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[307, "_CPPv4N2jd11gather_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[307, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[307, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[307, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[307, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [307, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[307, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[307, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[307, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[307, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[307, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[307, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[307, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[307, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [307, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[307, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[307, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[307, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [307, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[307, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[307, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[307, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [307, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[307, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[307, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[307, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [307, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[307, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[307, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[307, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [307, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[307, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[307, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[307, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [307, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[307, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[307, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[307, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [307, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[307, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[307, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[307, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [307, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[307, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[307, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[307, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [307, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[307, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[307, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[307, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[307, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[307, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[307, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[307, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[307, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[307, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[307, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [307, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[307, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[307, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[307, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [307, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[307, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[307, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[307, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [307, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[307, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[307, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[307, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [307, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[307, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[307, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[307, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [307, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[307, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[307, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[307, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [307, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[307, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[307, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[307, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [307, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[307, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[307, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[307, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [307, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[307, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[307, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[307, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [307, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[307, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[307, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[307, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [307, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[307, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[308, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[308, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[308, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[308, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[308, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[308, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[308, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[308, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[308, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[308, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [308, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [308, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[308, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[308, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[308, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[308, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[308, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[309, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[309, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[309, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[309, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[309, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[309, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[309, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[309, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[309, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[309, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[309, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[309, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[309, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[309, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[309, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[309, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[309, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[309, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[309, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[309, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[309, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[309, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[309, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[309, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[309, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[309, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[309, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[309, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[309, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[309, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[309, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[309, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[309, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[309, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::gather_data_t (c++ struct)": [[309, "_CPPv4N2jd3ssd13gather_data_tE"]], "jd::ssd::gather_data_t::binaryop_addrs (c++ member)": [[309, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE"]], "jd::ssd::gather_data_t::dst (c++ member)": [[309, "_CPPv4N2jd3ssd13gather_data_t3dstE"]], "jd::ssd::gather_data_t::gather_data_t (c++ function)": [[309, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv"]], "jd::ssd::gather_data_t::idx (c++ member)": [[309, "_CPPv4N2jd3ssd13gather_data_t3idxE"]], "jd::ssd::gather_data_t::src (c++ member)": [[309, "_CPPv4N2jd3ssd13gather_data_t3srcE"]], "jd::ssd::gather_param_t (c++ struct)": [[309, "_CPPv4N2jd3ssd14gather_param_tE"]], "jd::ssd::gather_param_t::binary_ts_sizes (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE"]], "jd::ssd::gather_param_t::binaryop_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE"]], "jd::ssd::gather_param_t::dst_axis_size (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE"]], "jd::ssd::gather_param_t::dt (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t2dtE"]], "jd::ssd::gather_param_t::dt_size (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE"]], "jd::ssd::gather_param_t::extend_mask (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE"]], "jd::ssd::gather_param_t::idx_size (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE"]], "jd::ssd::gather_param_t::inner_size (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE"]], "jd::ssd::gather_param_t::loops (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t5loopsE"]], "jd::ssd::gather_param_t::mask (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t4maskE"]], "jd::ssd::gather_param_t::outer_size (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE"]], "jd::ssd::gather_param_t::remain (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t6remainE"]], "jd::ssd::gather_param_t::src_axis_size (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE"]], "jd::ssd::gather_param_t::src_size (c++ member)": [[309, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[309, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[309, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[309, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[309, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[309, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[309, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[309, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_io (c++ type)": [[309, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[309, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[309, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[309, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[309, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[309, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[309, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[309, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[309, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[309, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[309, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[309, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[309, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[309, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[309, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[309, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[309, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[309, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[309, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[309, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[309, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[309, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[309, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[309, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[309, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[309, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[309, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[309, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[309, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[309, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[309, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[309, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[309, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[309, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[309, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[309, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[309, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[309, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[309, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[309, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[309, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[309, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[309, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[309, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[309, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[309, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[309, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[309, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[309, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[309, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[309, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[309, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[309, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[309, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[309, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[309, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[309, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[309, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[309, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[309, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[309, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[309, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[309, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[309, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[309, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[309, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[309, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[309, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[309, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[309, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[309, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[309, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[309, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[309, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[309, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[309, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[309, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[309, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[309, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[309, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[309, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[309, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})