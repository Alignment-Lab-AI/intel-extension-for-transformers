Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/api_doc_example/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/index", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/models/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_example", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/intel_extension_for_transformers/api_doc_example/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/models/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_example.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.api_doc_example</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_evaluation_harness</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_evaluation_harness.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.criteria</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruners</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.regs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "API Document Example", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Neural Engine Support Matrix", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"thi": [0, 3, 10, 147, 161, 180, 181, 190, 215, 216, 217, 218, 219, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 330, 340, 341, 342, 343, 344, 346, 350, 351, 352, 353, 354, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 377, 378, 380, 382], "i": [0, 2, 3, 5, 6, 7, 10, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 196, 202, 209, 212, 215, 216, 217, 218, 220, 222, 227, 228, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 314, 317, 322, 328, 330, 331, 335, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 388], "onli": [0, 10, 190, 196, 215, 216, 222, 227, 228, 232, 311, 331, 348, 351, 353, 354, 355, 357, 360, 362, 363, 364, 367, 369, 370, 371, 375, 378, 380], "us": [0, 2, 10, 15, 48, 131, 147, 161, 180, 181, 186, 190, 195, 196, 198, 202, 204, 205, 208, 209, 212, 215, 216, 219, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 331, 340, 341, 342, 343, 344, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 381, 382], "refer": [0, 3, 5, 6, 212, 215, 217, 232, 234, 330, 342, 343, 344, 347, 354, 357, 365, 367, 370, 375, 377, 381, 382], "convert": [0, 2, 5, 6, 10, 15, 186, 195, 196, 346, 356, 370, 375, 382], "python": [0, 5, 6, 10, 227, 228, 317, 328, 341, 342, 343, 348, 349, 350, 351, 353, 355, 356, 374], "docstr": [0, 227, 228], "api": [0, 5, 6, 8, 232, 311, 341, 343, 351, 353, 354, 355, 357, 358, 362, 363, 380, 387], "document": [0, 192, 222, 311, 312, 341, 342, 343, 344, 347, 367, 369, 370, 371, 381, 382], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 196, 198, 199, 202, 204, 205, 207, 209, 212, 215, 216, 217, 218, 219, 220, 222, 225, 227, 228, 229, 231, 232, 234, 235, 311, 314, 317, 319, 320, 322, 328, 330, 331, 340, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 375, 378, 380, 381, 382], "creat": [0, 186, 196, 202, 207, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 340, 350, 356, 357, 366, 375, 378], "doc": [0, 148, 192, 215, 232, 350, 354, 362, 371], "usag": [0, 343, 378, 379], "py": [0, 3, 216, 342, 343, 348, 350, 352, 356, 374], "exampl": [0, 8, 10, 128, 190, 196, 217, 227, 228, 232, 311, 312, 334, 340, 342, 343, 344, 347, 350, 351, 353, 354, 356, 357, 358, 360, 362, 364, 378, 381, 382, 387], "def": [0, 196, 330, 331, 343, 350], "fun": 0, "return": [0, 5, 6, 7, 10, 15, 48, 131, 186, 187, 190, 195, 198, 202, 204, 205, 207, 209, 210, 215, 216, 217, 218, 219, 220, 222, 227, 228, 330, 331, 342, 343, 350, 354, 358, 362, 363, 378], "1": [0, 10, 192, 195, 196, 197, 211, 215, 216, 222, 227, 228, 230, 232, 321, 330, 331, 340, 342, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 358, 359, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 375, 378, 380, 381, 382], "x": [0, 148, 199, 227, 228, 353, 363, 366, 367, 369, 370, 375, 382], "2": [0, 10, 196, 198, 215, 216, 227, 321, 330, 331, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 359, 364, 365, 366, 371, 372, 373, 375, 377, 378, 380], "print": [0, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 350, 358], "attribute1": 0, "sourc": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 195, 196, 197, 198, 199, 202, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 351, 362, 369, 375, 377], "level": [0, 14, 228, 311, 340, 343, 351, 353, 363, 366, 374], "pleas": [0, 3, 5, 6, 212, 215, 217, 232, 234, 310, 330, 331, 342, 344, 345, 347, 350, 354, 357, 360, 361, 362, 363, 367, 370, 375, 381, 382], "set": [0, 10, 48, 190, 192, 197, 198, 208, 209, 215, 216, 220, 222, 227, 228, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 331, 340, 342, 343, 351, 353, 354, 355, 357, 358, 361, 362, 363, 366, 375], "100": [0, 196, 222, 227, 228, 343, 375, 382], "integ": [0, 215, 216, 219, 342, 346, 353, 354, 371, 375, 381, 382], "type": [0, 5, 6, 7, 10, 15, 48, 131, 186, 187, 190, 195, 196, 198, 204, 209, 210, 215, 216, 218, 219, 220, 222, 227, 231, 232, 234, 322, 330, 341, 342, 343, 344, 345, 346, 351, 352, 353, 355, 358, 360, 362, 363, 368, 374, 375, 378, 379, 382], "int": [0, 10, 190, 192, 195, 196, 211, 215, 222, 227, 321, 331, 350, 362, 363, 364, 367], "module_debug_level1": 0, "debug": [0, 14], "function1": 0, "param1": 0, "param2": 0, "paramet": [0, 5, 6, 7, 10, 15, 48, 131, 186, 187, 190, 195, 196, 198, 202, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 222, 227, 228, 231, 232, 311, 321, 330, 331, 343, 344, 352, 358, 378, 381], "str": [0, 10, 48, 131, 190, 192, 195, 196, 197, 204, 208, 210, 211, 215, 222, 225, 227, 228, 229, 232, 234, 331, 342], "parameter1": 0, "float": [0, 196, 197, 209, 211, 215, 216, 217, 218, 219, 222, 225, 229, 321, 342, 344, 346, 350, 356, 362, 363, 364, 378, 379, 381, 382], "parameter2": 0, "import": [0, 8, 10, 210, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 331, 342, 343, 344, 347, 350, 351, 353, 355, 358, 362, 363, 367, 378, 379, 380, 381, 382], "o": [0, 10, 232, 330, 342, 343, 348, 359, 363, 368, 373], "rang": [0, 26, 196, 222, 330, 343, 350, 353, 375, 381, 382], "3": [0, 10, 321, 330, 331, 342, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 363, 365, 366, 371, 373, 375, 376, 378], "0": [0, 8, 10, 186, 190, 196, 197, 199, 211, 215, 219, 225, 227, 228, 230, 231, 232, 318, 319, 321, 330, 331, 342, 343, 344, 347, 348, 350, 351, 352, 353, 354, 356, 357, 358, 359, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382], "valu": [0, 10, 15, 186, 187, 195, 196, 208, 212, 215, 217, 220, 222, 227, 228, 321, 342, 343, 344, 350, 351, 352, 353, 354, 362, 363, 364, 365, 367, 369, 370, 375, 378, 379, 381, 382], "true": [0, 8, 190, 196, 215, 222, 225, 227, 228, 229, 330, 343, 346, 347, 349, 350, 352, 353, 362, 363, 369, 372, 375, 378, 379, 382], "fals": [0, 190, 192, 196, 197, 199, 204, 215, 222, 227, 228, 321, 330, 331, 344, 347, 350, 353, 362, 363, 375, 378], "bool": [0, 190, 192, 196, 197, 204, 215, 222, 225, 227, 228, 229, 318, 319, 320, 321, 331, 344, 350, 362, 363, 378, 379], "function2": 0, "pep": 0, "484": [0, 359], "annot": 0, "style": [0, 341], "from": [0, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 186, 187, 195, 199, 202, 204, 212, 215, 216, 217, 218, 219, 220, 222, 227, 228, 232, 330, 331, 340, 342, 344, 345, 347, 350, 351, 352, 353, 354, 355, 357, 358, 362, 363, 366, 367, 368, 369, 370, 371, 378, 379, 380, 381, 382], "neural_compressor": [0, 196, 208, 222], "config": [0, 2, 8, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 195, 198, 201, 202, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 222, 227, 228, 328, 331, 342, 343, 344, 345, 347, 351, 352, 354, 357, 362, 375, 380, 381], "mixedprecisionconfig": 0, "eval_func": [0, 208, 209, 222, 330], "model": [0, 2, 5, 6, 7, 8, 10, 13, 15, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 165, 166, 167, 169, 170, 184, 185, 187, 190, 195, 196, 199, 201, 202, 205, 208, 209, 210, 215, 216, 217, 219, 220, 222, 231, 232, 328, 330, 342, 344, 345, 347, 349, 350, 353, 354, 358, 359, 362, 367, 368, 369, 370, 373, 377, 378, 379, 381, 382, 391], "accuraci": [0, 196, 202, 222, 330, 344, 345, 347, 367, 375, 378, 379, 381], "conf": [0, 8, 196, 351, 352, 353, 357, 374], "output_model": 0, "mix_precis": 0, "fit": [0, 208, 215, 364], "function3": 0, "none": [0, 2, 8, 15, 47, 48, 73, 186, 187, 190, 192, 195, 196, 197, 198, 199, 202, 205, 208, 209, 210, 211, 220, 222, 225, 227, 228, 229, 230, 231, 321, 330, 342, 344, 345, 346, 352, 378, 379, 381, 382], "arg": [0, 14, 204, 209, 217, 222, 232, 319, 330, 352, 357], "kwarg": [0, 14, 196, 204, 217, 222, 227, 228], "an": [0, 3, 15, 186, 207, 215, 216, 219, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 340, 342, 343, 345, 346, 347, 350, 351, 352, 353, 354, 357, 358, 361, 362, 363, 367, 368, 371, 376, 378, 380, 391], "If": [0, 10, 198, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 341, 344, 346, 350, 351, 352, 353, 354, 355, 358, 362, 368, 375, 377, 378, 381, 382], "ar": [0, 10, 148, 198, 199, 215, 216, 217, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 330, 340, 341, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 379, 381, 382], "accept": [0, 222, 340, 380], "thei": [0, 10, 204, 215, 340, 344, 349, 358, 361, 362, 363, 365, 369, 375], "should": [0, 10, 204, 215, 216, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 350, 351, 353, 354, 357, 358, 361, 362, 363, 368, 375, 376, 378, 379, 382], "list": [0, 5, 6, 7, 8, 10, 15, 48, 186, 187, 190, 196, 197, 208, 211, 215, 217, 222, 227, 228, 343, 344, 349, 350, 351, 354, 362, 363, 376, 382], "option": [0, 10, 190, 195, 196, 204, 208, 210, 215, 222, 227, 228, 330, 331, 352, 358, 362, 371, 375], "argument": [0, 190, 196, 217, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 344, 352, 376, 378, 379, 381, 382], "kei": [0, 8, 10, 15, 186, 215, 217, 220, 222, 227, 228, 311, 343, 352, 353, 354, 362, 363, 365], "dict": [0, 10, 15, 186, 187, 190, 196, 205, 210, 211, 212, 215, 216, 217, 218, 219, 220, 222, 227, 228, 232, 342, 350, 351, 381], "section": [0, 343, 360, 371, 372], "support": [0, 10, 15, 131, 192, 196, 199, 210, 211, 215, 216, 221, 232, 321, 347, 348, 349, 350, 351, 352, 353, 357, 358, 363, 367, 368, 370, 372, 374, 375, 380, 381, 385], "ani": [0, 10, 204, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 341, 350, 358, 380], "restructuredtext": 0, "format": [0, 14, 222, 330, 352, 369, 370, 373, 374, 382], "includ": [0, 212, 215, 218, 219, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 319, 320, 321, 340, 341, 343, 345, 351, 352, 353, 360, 363, 371, 375, 377, 382], "liter": 0, "block": [0, 215, 217, 227, 228, 345, 361, 364, 365, 366, 367, 368, 370, 371, 381], "rais": [0, 215, 216, 220, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311], "attributeerror": 0, "except": [0, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 353, 362], "valueerror": 0, "equal": [0, 10, 222, 354, 361, 362], "generator1": 0, "n": [0, 10, 199, 215, 227, 228, 321, 342, 344, 353, 354, 356, 359, 361, 364, 365, 366, 367, 370, 371, 373, 375], "gener": [0, 10, 148, 195, 196, 215, 217, 222, 227, 228, 232, 331, 343, 344, 350, 354, 358, 362, 363, 366, 367, 370, 372, 374, 375, 378, 379, 382], "have": [0, 2, 10, 186, 190, 215, 216, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 341, 343, 350, 351, 352, 353, 354, 355, 358, 363, 367, 368, 369, 370, 374, 375, 377, 378, 379, 380, 381, 382], "yield": [0, 382], "next": [0, 2, 8, 219, 227, 228, 330, 354, 355, 362, 364, 366, 368, 369, 370, 371], "number": [0, 15, 190, 196, 198, 199, 215, 216, 219, 228, 232, 331, 342, 353, 354, 358, 361, 364, 367, 370, 371, 375, 376, 382], "example_gener": 0, "4": [0, 10, 196, 211, 215, 222, 227, 228, 321, 330, 331, 340, 342, 344, 345, 348, 350, 352, 353, 354, 357, 358, 359, 365, 366, 367, 368, 371, 372, 375, 381], "exampleclass": 0, "param3": 0, "ha": [0, 5, 6, 7, 10, 215, 216, 232, 330, 341, 342, 343, 350, 353, 354, 356, 357, 358, 361, 363, 367, 375, 382], "public": [0, 318, 319, 320, 321, 340, 357, 362, 363], "mai": [0, 2, 10, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 341, 343, 350, 353, 358, 364, 365, 366, 368, 369, 370, 371, 375, 377, 382], "here": [0, 10, 205, 222, 337, 343, 349, 350, 353, 354, 355, 357, 358, 363, 371, 382, 383, 390], "attr1": 0, "descript": [0, 190, 222, 341, 342, 344, 352, 371, 378, 379, 381, 382], "attr2": 0, "attr5": 0, "after": [0, 10, 128, 147, 161, 180, 181, 212, 215, 216, 217, 218, 219, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 346, 349, 352, 353, 354, 355, 357, 358, 361, 363, 368, 370, 371, 374, 375, 376, 382], "specifi": [0, 10, 192, 196, 198, 205, 207, 209, 211, 221, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 354, 355, 363, 367, 369, 375, 381, 382], "method1": 0, "execut": [0, 205, 216, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 319, 330, 343, 353, 357, 360, 362, 363, 367, 368, 370, 372, 375, 376, 382], "It": [0, 10, 204, 215, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 331, 344, 350, 352, 353, 354, 357, 358, 366, 367, 369, 370, 375], "": [0, 10, 15, 48, 186, 196, 215, 216, 222, 228, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 319, 330, 340, 343, 344, 350, 351, 352, 354, 355, 357, 359, 364, 368, 370, 373, 375, 376, 380, 382], "neural": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 128, 156, 186, 187, 204, 209, 215, 217, 235, 311, 330, 331, 339, 343, 344, 350, 352, 353, 354, 355, 366, 374, 379, 382, 385, 392], "engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 128, 156, 186, 187, 202, 222, 235, 312, 322, 330, 339, 343, 350, 352, 354, 357, 362, 367, 370, 374, 385, 392], "start_pipelin": 2, "pipelin": [2, 201, 202, 205, 386], "graph": [2, 3, 5, 6, 7, 10, 11, 12, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 314, 343, 344, 350, 355, 358, 366, 369, 371, 391], "interfac": [2, 196, 227, 228, 319, 346, 349, 360], "firstli": 2, "loader": [2, 11, 188, 353, 355, 358], "get": [2, 8, 10, 14, 15, 186, 187, 198, 199, 212, 215, 216, 218, 219, 222, 229, 231, 234, 346, 350, 353, 354, 355, 357, 358, 362, 369, 371, 376, 380, 387], "comput": [2, 10, 186, 222, 227, 228, 335, 343, 347, 358, 360, 361, 362, 363, 364, 367, 369, 370, 374, 380, 382, 388], "correspond": [2, 5, 6, 10, 216, 330, 350, 354, 358, 360, 367, 371, 374, 382], "framework": [2, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 128, 196, 202, 210, 222, 230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 335, 344, 345, 348, 350, 351, 355, 360, 380, 381, 382, 388], "contain": [2, 10, 15, 148, 186, 187, 215, 216, 217, 219, 220, 222, 227, 228, 232, 330, 335, 342, 344, 350, 351, 353, 354, 358, 360, 362, 374, 375, 376, 381, 382, 388], "node": [2, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 147, 161, 180, 181, 186, 187, 231, 346, 358, 359, 373], "edg": 2, "op": [2, 5, 6, 7, 10, 11, 15, 108, 128, 138, 186, 187, 188, 196, 222, 321, 352, 357, 358, 362, 363, 375, 376, 382], "tensor": [2, 5, 6, 7, 8, 10, 11, 15, 36, 63, 128, 186, 187, 188, 195, 212, 215, 216, 218, 219, 222, 227, 228, 321, 350, 351, 352, 354, 355, 357, 369, 374, 375, 381, 382], "Then": [2, 10, 344, 354, 355, 370, 371, 375, 381, 382], "extract": [2, 3, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 350, 353, 355], "pack": [2, 11, 36, 188, 371], "them": [2, 5, 6, 10, 350, 351, 354, 362, 365, 367, 370, 371, 382], "our": [2, 342, 346, 358, 362, 364, 365, 367, 369, 370, 371, 380], "form": [2, 10, 190, 222, 344, 352, 358, 361, 366, 370, 375], "exploit": [2, 358], "abov": [2, 10, 227, 228, 349, 350, 353, 354, 358, 364, 365, 367, 368, 369, 374], "consist": [2, 341], "sub": [2, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 350, 353, 354, 362, 369, 370], "which": [2, 5, 6, 7, 10, 186, 196, 198, 202, 204, 212, 215, 216, 219, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 342, 344, 349, 350, 351, 353, 354, 358, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 374, 375, 378, 381, 382], "can": [2, 10, 108, 128, 148, 192, 204, 215, 216, 217, 219, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 342, 343, 344, 346, 350, 351, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 379, 380, 381, 382], "see": [2, 10, 148, 190, 227, 228, 310, 340, 343, 350, 352, 353, 354, 355, 358, 359, 361, 366, 370, 372, 373, 374, 375, 377], "new": [2, 5, 6, 7, 10, 15, 215, 219, 222, 341, 358, 362, 363, 376, 383], "big": [2, 353, 354], "like": [2, 5, 6, 7, 10, 148, 186, 215, 232, 342, 343, 344, 347, 350, 351, 352, 353, 354, 355, 358, 362, 363, 365, 372, 378, 379, 381, 382], "layernorm": [2, 10, 39, 111, 350, 354, 358, 360, 375], "There": [2, 344, 350, 351, 352, 368, 372, 375, 379, 381], "differ": [2, 8, 13, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 165, 166, 167, 169, 170, 184, 185, 198, 207, 215, 330, 340, 342, 343, 344, 347, 350, 351, 353, 354, 355, 358, 361, 368, 371, 378, 379, 381, 382], "flow": [2, 10, 350, 354], "one": [2, 5, 6, 10, 215, 217, 219, 227, 321, 330, 343, 344, 347, 349, 350, 352, 353, 354, 358, 362, 364, 365, 370, 374, 375, 380], "subgraph": [2, 10, 156, 353, 355], "final": [2, 215, 216, 353, 354, 355, 357, 358, 364, 367, 368, 370, 378], "yaml": [2, 8, 10, 205, 207, 220, 222, 352, 353, 355, 374], "file": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 131, 156, 196, 199, 202, 204, 205, 207, 217, 220, 222, 223, 232, 235, 342, 343, 350, 351, 352, 353, 355, 357, 362, 363, 374, 375, 376, 377], "bin": [2, 8, 208, 351, 352, 353, 355, 372, 374], "configur": [2, 89, 196, 198, 204, 205, 207, 209, 211, 215, 217, 220, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 330, 342, 345, 346, 353, 361, 362, 366, 383], "infer": [2, 8, 13, 195, 209, 222, 228, 311, 345, 347, 349, 350, 352, 353, 354, 355, 365, 367, 368, 370, 379, 382, 389], "base": [3, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 204, 210, 212, 215, 222, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 319, 330, 342, 343, 346, 347, 348, 355, 357, 359, 364, 366, 367, 368, 369, 370, 372, 373, 380], "tensorflow": [3, 6, 16, 17, 18, 19, 20, 22, 27, 29, 34, 37, 38, 41, 42, 43, 45, 46, 49, 50, 52, 53, 56, 58, 59, 62, 71, 72, 76, 186, 196, 202, 209, 231, 328, 347, 348, 351, 358, 382], "onnx": [3, 5, 15, 187, 196, 222, 343, 347, 350, 352, 353, 369, 380, 386, 391], "onnx_extractor": [3, 4, 11, 188], "tf_extractor": [3, 4, 11, 188], "more": [3, 5, 6, 10, 148, 215, 310, 344, 347, 349, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 365, 367, 368, 369, 371, 373, 374, 375], "detail": [3, 10, 330, 335, 337, 340, 341, 343, 344, 345, 347, 349, 350, 352, 353, 354, 357, 358, 359, 360, 365, 372, 373, 375, 381, 382, 388, 390], "A": [3, 10, 198, 205, 210, 212, 215, 216, 217, 218, 219, 220, 222, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 350, 351, 358, 359, 361, 364, 365, 371, 373, 374, 375], "super": [3, 350, 353], "oper": [3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 128, 186, 187, 215, 320, 322, 335, 345, 349, 350, 351, 353, 355, 360, 362, 363, 364, 366, 367, 368, 369, 370, 371, 375, 382, 388, 391], "do": [3, 196, 199, 208, 209, 217, 222, 340, 346, 350, 351, 353, 354, 358, 362, 364, 381, 382], "addit": [3, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 343, 345, 352, 364, 368, 376, 383], "attribut": [3, 5, 6, 7, 10, 48, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 318, 319, 330, 352, 354, 357, 363], "without": [3, 208, 216, 222, 340, 344, 350, 351, 368, 371, 372, 375], "modifi": [3, 8, 10, 108, 128, 217, 228, 351, 352, 355], "topologi": 3, "modul": [4, 9, 11, 12, 36, 100, 206, 214, 330, 355, 356], "torch_extractor": [4, 11, 188], "all": [5, 6, 7, 8, 10, 11, 36, 48, 128, 131, 188, 215, 216, 217, 222, 227, 228, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 330, 340, 343, 344, 349, 350, 351, 352, 354, 358, 359, 362, 363, 364, 365, 367, 370, 373, 374, 378, 381, 382], "input": [5, 6, 8, 10, 15, 26, 128, 148, 186, 187, 195, 209, 210, 215, 216, 222, 227, 228, 321, 330, 331, 342, 343, 344, 346, 347, 351, 352, 353, 354, 357, 366, 368, 369, 371, 375, 380], "compos": [5, 6, 7, 202, 222, 330, 350, 355, 370], "order": [5, 6, 8, 10, 202, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 342, 350, 352, 358, 361, 367, 368, 370, 371], "origin": [5, 6, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 195, 215, 216, 217, 220, 232, 342, 344, 350, 355, 368, 369, 382], "calcul": [5, 6, 148, 199, 212, 215, 217, 218, 330, 352, 358, 361, 363, 364, 367, 368, 371, 375, 382], "notic": [5, 6, 355, 362, 369, 370, 377], "map": [5, 6, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 215, 218, 222, 330, 343, 344, 361, 382], "between": [5, 6, 216, 227, 228, 321, 330, 344, 368, 371, 375, 382], "For": [5, 6, 10, 15, 128, 215, 217, 310, 330, 340, 343, 347, 350, 353, 354, 358, 359, 360, 362, 365, 369, 370, 371, 372, 373, 380], "relat": [5, 6, 218, 222, 337, 344, 350, 354, 358, 365, 370, 381, 382, 390], "deatil": [5, 6], "onnxextractor": 5, "decor": [5, 6, 7, 15, 48, 131, 186, 187, 215, 216, 219], "graph_def": [5, 6, 7, 186], "input_tensor": [5, 6, 7, 10, 15, 48, 186, 187, 227, 228, 350, 354], "output_tensor": [5, 6, 7, 10, 15, 48, 186, 187, 350, 354], "record": [5, 6, 7, 330, 352, 353], "dest": [5, 6, 7, 10, 15, 186], "name": [5, 6, 7, 8, 10, 15, 48, 73, 131, 186, 190, 196, 197, 204, 210, 211, 212, 215, 216, 218, 219, 225, 229, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 354, 356, 358, 359, 363, 373, 374, 377, 378, 379, 380, 381, 382], "object": [5, 6, 7, 186, 190, 196, 201, 205, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 222, 224, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 331, 343, 344, 347, 350, 357, 381, 386], "onnxmodel": [5, 15], "tensorflowextractor": 6, "tensorflowmodel": [6, 186], "torch": [7, 148, 187, 192, 195, 196, 215, 222, 227, 228, 331, 343, 380], "torchextractor": 7, "torchscript": [7, 67, 187, 195, 196, 222, 331], "defint": 8, "add_config_item": 8, "val": [8, 220], "add": [8, 10, 26, 196, 199, 217, 220, 344, 351, 352, 353, 354, 358, 360, 362, 363, 370, 375, 376, 391], "pair": [8, 196, 227, 351, 363, 371], "framework_modeling_config": 8, "inquire_config_item": 8, "insert_nod": 8, "index": [8, 227, 228, 231, 321, 354, 357, 358], "insert": [8, 10, 355, 357, 358, 362, 363, 382], "ir": [8, 350, 351, 352, 353, 372, 374, 391], "remove_nod": 8, "node_nam": [8, 10, 15, 186, 350, 354], "remov": [8, 138, 228, 340, 341, 363, 381], "get_node_id": [8, 350], "id": [8, 10, 204, 228, 231, 363, 364], "accord": [8, 215, 219, 350, 353, 371], "get_node_by_nam": 8, "rename_nod": 8, "old_nam": 8, "new_nam": 8, "change_node_input_tensor": 8, "mode": [8, 195, 197, 211, 216, 221, 330, 352, 356, 368, 370, 375, 376, 382], "change_node_output_tensor": 8, "output": [8, 10, 15, 26, 186, 187, 196, 208, 215, 216, 222, 227, 228, 330, 342, 344, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 366, 367, 368, 369, 371, 375, 380], "get_pre_node_nam": 8, "previou": [8, 202, 215, 222, 343, 351, 383], "get_next_node_nam": 8, "get_tensor_idx": 8, "tensor_nam": [8, 15, 186], "from_output": 8, "modify_node_connect": 8, "dump_tensor": 8, "tensor_list": 8, "dump": [8, 382], "engine_init": 8, "net_info": 8, "weight_data": 8, "b": [8, 10, 15, 227, 321, 350, 358, 361, 364, 365, 366, 370, 371, 374, 375], "pybind": 8, "executor": [8, 350, 351, 352], "input_data": [8, 10, 11, 100, 188, 351], "graph_init": [8, 351, 353], "initi": [8, 10, 15, 48, 196, 205, 216, 222, 227, 228, 321, 330, 362, 363, 367, 380, 381], "newgraph": 8, "out": [8, 10, 215, 222, 341, 343, 350, 351, 354, 360, 369, 382], "input_0": [8, 351, 353], "input_1": [8, 351, 353], "input_2": [8, 351, 353], "save": [8, 190, 199, 208, 222, 342, 343, 350, 351, 352, 355, 365, 369, 371, 382], "output_dir": [8, 190, 208, 222, 330, 342, 355, 356], "ymal": 8, "graph_dispatch": [8, 353], "tune": [8, 196, 222, 311, 342, 343, 344, 377, 378, 379, 381, 391], "inputs_shap": [8, 353], "dispatch": 8, "get_sparse_nodes_nam": 8, "threshold": [8, 215, 375], "7": [8, 10, 321, 330, 343, 345, 348, 349, 350, 354, 356, 358, 359, 365, 373, 375, 378, 382], "sparsiti": [8, 196, 215, 216, 217, 219, 359, 374, 375, 381], "spars": [8, 216, 311, 321, 343, 353, 360, 361, 370, 375, 389], "transpose_mode_int8": 8, "node_name_list": 8, "transpos": [8, 11, 36, 61, 188, 215, 227, 228, 352, 353, 360, 361, 365, 367, 368, 371, 375, 389], "innerproduct": [8, 26, 108, 352, 353, 360], "reorder": [8, 11, 36, 188, 367, 368], "util": [10, 15, 186, 187, 196, 198, 201, 213, 233, 342, 350, 358, 361, 367, 368, 371, 375], "names_from_input": 10, "static": [10, 229, 318, 321, 352, 355, 362, 365, 367, 380], "method": [10, 199, 207, 211, 218, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 342, 345, 362, 365, 367, 370, 372, 381, 382], "valid": [10, 196, 209, 215, 216, 220, 222, 331, 341, 342, 344, 347, 358, 377, 383, 390], "string": [10, 15, 186, 187, 190, 199, 205, 207, 215, 216, 217, 218, 219, 220, 231, 232, 320, 342, 344, 350, 353, 354, 357, 363, 378, 379, 381, 382], "defin": [10, 190, 196, 205, 207, 208, 215, 216, 217, 218, 219, 222, 318, 330, 340, 343, 344, 350, 351, 357, 358, 371, 376, 378, 381, 382], "field": [10, 196, 342, 362, 363, 382], "tupl": [10, 198, 210, 215, 227, 228], "In": [10, 202, 215, 216, 218, 222, 227, 330, 340, 343, 350, 351, 352, 353, 354, 355, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 378, 379, 382], "nodedef": [10, 186], "end": [10, 216, 217, 227, 228, 232, 311, 343, 352, 355, 357, 358, 363, 372], "also": [10, 215, 341, 343, 350, 351, 352, 354, 355, 357, 358, 361, 362, 363, 364, 367, 370, 371, 372, 379, 382], "get_data_dtyp": 10, "data": [10, 73, 195, 215, 232, 234, 321, 330, 343, 345, 350, 351, 353, 355, 356, 357, 361, 362, 363, 364, 367, 368, 371, 375, 382, 386, 390], "const": [10, 15, 186, 318, 319, 320, 321, 357, 360, 362, 363, 364, 365], "dtype": [10, 15, 73, 186, 187, 192, 222, 343, 346, 351, 352, 353, 357], "numpi": [10, 15, 343, 351], "dtypes_dict": 10, "autocast_init": 10, "quant": [10, 108, 196, 360, 375, 382, 389], "info": [10, 14, 15, 148, 186, 187, 215, 220, 330, 343, 350, 351, 372], "set_autocast": 10, "get_autocast_info": 10, "quant_info_init": 10, "insert_quant_info": 10, "get_quant_info": 10, "search_straight_pattern": [10, 358], "input_pattern": [10, 358], "search": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 196, 199, 202, 205, 222, 330, 345, 354], "user": [10, 190, 216, 217, 220, 227, 228, 232, 311, 312, 330, 331, 334, 337, 343, 346, 350, 352, 354, 356, 367, 369, 372, 375, 379, 380, 387, 390], "pattern": [10, 11, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 196, 201, 213, 216, 218, 319, 355, 361, 364, 374, 381, 391], "intern": [10, 354, 367], "grpah": [10, 15, 186], "structur": [10, 216, 345, 350, 351, 353, 366, 370, 374, 381], "attent": [10, 227, 228, 319, 330, 340, 352, 358, 369], "chain": [10, 362, 363], "call": [10, 216, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 346, 350, 353, 354, 361, 362, 363, 367, 370, 371, 382], "must": [10, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 331, 348, 354, 358, 361, 362, 364, 371], "straight": 10, "sequenc": [10, 192, 198, 215, 227, 228, 343, 347, 350, 354, 358, 366, 375], "mean": [10, 11, 36, 188, 196, 215, 227, 228, 232, 321, 342, 350, 351, 352, 353, 354, 358, 361, 362, 364, 368, 371, 375, 378, 381, 382], "otherwis": [10, 190, 340, 350, 353, 367, 375], "op_typ": [10, 15, 48, 186, 187, 350, 353, 354, 363], "element": [10, 215, 217, 222, 350, 358, 360, 364, 366, 369, 371, 375, 389], "could": [10, 215, 217, 319, 340, 350, 351, 352, 354, 355, 358, 365, 374, 375, 381, 382], "mandatori": 10, "while": [10, 216, 351, 354, 358, 364, 367, 370, 375, 382], "stand": [10, 350], "mybe": 10, "mul": [10, 350, 354, 358, 362], "addv2": [10, 26, 358], "below": [10, 196, 311, 330, 341, 342, 343, 344, 350, 351, 353, 355, 358, 361, 366, 368, 369, 370, 371, 379], "extractor": [10, 11, 188, 353, 355, 358], "length": [10, 196, 198, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 343, 354, 358, 362, 375, 382], "match": [10, 330, 344, 353, 354, 358, 366, 369], "result": [10, 190, 202, 209, 222, 311, 330, 331, 340, 343, 345, 350, 353, 354, 359, 362, 363, 364, 367, 368, 369, 370, 371, 373, 377, 381, 382], "24": [10, 330, 358, 359, 365, 373], "layer": [10, 196, 198, 215, 217, 220, 227, 228, 330, 352, 358, 362, 366, 369, 381, 389], "each": [10, 148, 190, 196, 202, 215, 216, 222, 227, 228, 232, 330, 342, 352, 353, 354, 361, 364, 366, 367, 368, 369, 370, 371, 374, 375, 376, 381], "still": [10, 217, 311, 358, 364, 382], "last": [10, 196, 212, 215, 222, 227, 228, 354, 358, 361, 366, 367, 369, 382], "former": [10, 358], "search_pattern": [10, 358], "pattern_list": 10, "complet": [10, 350, 359, 364, 367, 370, 373], "represent": [10, 340, 347, 350, 354, 355], "its": [10, 128, 202, 215, 216, 222, 330, 340, 344, 350, 354, 355, 358, 366, 367, 368, 371, 374, 375, 377], "op_idx": 10, "howev": [10, 217, 353, 354, 358, 361, 365, 368, 371], "due": [10, 227, 354, 358, 361, 382], "few": [10, 190, 366], "complic": [10, 350, 358], "therefor": [10, 346, 361, 366, 369, 371, 382], "fist": 10, "repres": [10, 215, 216, 217, 218, 219, 220, 340, 352, 354, 358, 361, 363, 364, 367, 382], "main": [10, 192, 217, 222, 227, 228, 232, 354, 368, 375], "top": [10, 311, 342, 343, 366], "down": 10, "head": [10, 227, 228, 358, 363, 369, 370], "tail": [10, 358, 372], "left": [10, 215, 227, 228, 365, 369, 371], "bert_large_squad": 10, "pb": [10, 347], "squareddiffer": [10, 26, 358], "rsqrt": [10, 26, 358], "5": [10, 83, 84, 85, 86, 87, 157, 158, 159, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 196, 197, 321, 330, 331, 342, 344, 350, 351, 352, 354, 357, 358, 359, 365, 373, 375], "8": [10, 321, 330, 343, 345, 346, 348, 350, 352, 354, 356, 358, 359, 363, 364, 365, 371, 372, 373, 375, 382], "9": [10, 196, 232, 330, 342, 343, 347, 348, 350, 358, 359, 365, 373, 375, 381], "6": [10, 321, 330, 344, 345, 349, 350, 354, 358, 359, 363, 365, 372, 373, 382], "same": [10, 215, 228, 344, 346, 350, 351, 352, 354, 355, 358, 361, 364, 367, 368, 371, 374, 375, 376], "func": [10, 330, 353], "follow": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 192, 227, 228, 314, 317, 322, 328, 331, 340, 341, 342, 343, 344, 348, 350, 352, 353, 354, 355, 357, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 382], "frozen": [10, 351, 355], "you": [10, 192, 196, 208, 227, 228, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 331, 341, 342, 343, 344, 346, 350, 351, 353, 354, 355, 358, 362, 363, 365, 372, 374, 375, 377, 378, 380, 381, 382, 383], "had": [10, 350], "better": [10, 202, 209, 222, 330, 350, 351, 352, 353, 361, 367, 368, 369, 370, 374, 378, 379, 382], "identifi": [10, 204, 364], "your": [10, 222, 232, 234, 311, 341, 342, 343, 347, 350, 351, 352, 353, 354, 362, 363, 375, 377, 380], "own": [10, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 350, 354, 355, 362, 368, 379], "casual": 10, "tf": [10, 209, 227, 330], "control": [10, 195, 196, 330, 350], "start": [10, 216, 227, 228, 352, 358, 376, 387], "mostli": [10, 358], "longest": [10, 358], "path": [10, 190, 196, 202, 204, 205, 207, 208, 217, 220, 222, 231, 232, 342, 343, 347, 351, 352, 353, 355, 372, 374, 375], "sometim": [10, 354, 382], "connect": [10, 212, 381], "But": [10, 351, 361, 380], "don": [10, 196, 215, 227, 228, 357, 362], "t": [10, 196, 215, 227, 228, 319, 321, 330, 342, 344, 357, 361, 362, 364, 369, 370, 371, 375, 381], "need": [10, 108, 196, 215, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 342, 343, 344, 350, 352, 353, 354, 355, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 375, 381, 382, 383], "least": [10, 215, 217, 368], "doesn": [10, 330, 362, 371, 375], "exist": [10, 204, 232, 330, 347, 350, 380], "relationship": 10, "sever": [10, 219, 342, 350, 355, 358, 361, 375, 382], "split": [10, 11, 36, 188, 331, 342, 353, 361, 365, 368], "representtaion": 10, "two": [10, 215, 216, 219, 222, 344, 350, 353, 354, 356, 357, 362, 363, 365, 367, 368, 369, 370, 371, 379, 380, 381, 382], "idx": [10, 321, 363], "some": [10, 128, 228, 343, 350, 351, 352, 353, 354, 357, 358, 362, 363, 367, 371, 382], "outsid": [10, 227, 228, 354, 358], "give": [10, 350, 354, 361], "just": [10, 228, 343, 350, 351, 352, 353, 354, 355, 358, 363, 371, 374, 378], "empti": [10, 26, 354, 358, 363, 376], "algorithm": [10, 48, 131, 196, 205, 321, 330, 342, 353, 354, 357, 358, 361, 362, 368, 375, 381, 382], "kind": [10, 89, 320, 357, 368, 375], "beaus": 10, "make": [10, 48, 128, 215, 216, 219, 222, 331, 340, 341, 349, 350, 351, 360, 361, 362, 363, 364, 366, 367, 368, 369, 372, 375], "sure": [10, 128, 215, 216, 219, 331, 350, 364, 375], "whole": [10, 202, 330, 345, 352, 353, 366, 367, 368, 370, 372], "so": [10, 204, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 344, 349, 350, 353, 354, 357, 358, 362, 364, 365, 366, 367, 368, 370, 371, 372, 375, 378, 379, 381, 382], "check": [10, 15, 108, 196, 215, 216, 220, 222, 337, 341, 343, 350, 353, 354, 358, 363, 390], "symmetr": [10, 358, 367, 375, 382], "consecut": [10, 365, 371], "y": [10, 148, 363], "shape": [10, 11, 36, 73, 188, 215, 227, 228, 321, 330, 343, 351, 352, 353, 357, 361, 367, 369, 375], "df": [10, 358], "duplic": 10, "would": [10, 215, 350, 354, 355, 358, 372], "perform": [10, 196, 202, 205, 216, 218, 222, 227, 228, 229, 330, 331, 335, 343, 344, 346, 347, 351, 352, 353, 356, 361, 364, 365, 366, 367, 368, 369, 370, 371, 375, 378, 379, 381, 382, 388], "befor": [10, 196, 212, 215, 216, 217, 218, 219, 222, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 331, 341, 344, 346, 350, 351, 353, 354, 355, 358, 362, 363, 364, 365, 367, 368, 370, 375, 382], "splice": 10, "de": 10, "total": [10, 196, 198, 215, 216, 219, 227, 330, 331, 342, 354, 358, 364, 371, 372], "step": [10, 196, 212, 215, 216, 217, 218, 219, 222, 349, 350, 352, 354, 355, 356, 357, 358, 362, 367, 369, 370, 375], "c": [10, 321, 322, 343, 348, 349, 350, 351, 353, 358, 359, 364, 366, 373, 375], "d": [10, 330, 342, 344, 361, 369], "e": [10, 148, 190, 196, 202, 215, 222, 330, 340, 343, 344, 353, 362, 363, 367, 368, 369, 375, 376], "f": [10, 321, 344, 357, 372, 382], "c1": 10, "d1": [10, 375], "c2": 10, "d2": 10, "c3": [10, 372], "d3": [10, 372], "now": [10, 232, 349, 350, 351, 353, 354, 355, 362, 363, 370, 375, 380], "part": [10, 190, 216, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 354, 357, 358, 370, 371], "As": [10, 344, 350, 352, 354, 355, 365, 369, 371], "appli": [10, 196, 215, 216, 340, 345, 347, 362, 363, 367, 368, 369, 371, 375, 381, 382], "everi": [10, 215, 216, 217, 350, 361, 375], "right": [10, 227, 228, 340, 365, 369, 371, 380], "construct_nod": 10, "attr": [10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 320, 350, 351, 362, 363], "ordereddict": [10, 48, 350], "construct": [10, 48, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 362, 363], "new_nod": 10, "insert_pattern": 10, "target_node_nam": 10, "replac": [10, 228, 343, 344, 347, 350, 354, 381, 382], "specif": [10, 204, 205, 220, 320, 322, 330, 340, 344, 348, 350, 353, 354, 361, 366, 367, 368, 374, 375, 378, 379, 380, 382], "ccontain": 10, "insid": [10, 354, 357, 366, 368], "been": [10, 215, 216, 227, 228, 341, 344, 363, 367, 380], "pattern_map": [10, 350, 354], "pattern_nam": 10, "mapping_dict": 10, "custom": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 190, 209, 222, 232, 311, 330, 343, 352, 354, 391], "mapping_config": 10, "first": [10, 196, 222, 342, 349, 350, 353, 354, 356, 358, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 382], "second": [10, 196, 227, 228, 331, 349, 354, 356, 357, 358, 365, 366, 369, 371, 372, 375, 382], "third": [10, 354, 366, 371, 377], "requir": [10, 128, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 331, 347, 354, 356, 358, 359, 361, 364, 365, 367, 375, 382], "old": 10, "reshap": [10, 11, 36, 53, 147, 161, 180, 181, 188, 215, 350, 351, 352, 357], "paddingsequ": [10, 51, 130, 351], "search_mod": [10, 350, 354], "embed": [10, 227, 228, 351, 354, 358, 362], "m": [10, 215, 321, 343, 344, 345, 352, 353, 359, 361, 364, 365, 366, 367, 368, 370, 371, 373, 375], "fusion": [10, 89, 128, 357, 358, 362, 363, 368, 391], "about": [10, 212, 340, 343, 350, 354, 357, 359, 363, 371, 373], "in_pattern": 10, "input_id": [10, 227, 228, 347, 351], "segment_id": [10, 347, 351], "input_mask": [10, 216, 347, 351], "out_pattern": 10, "th": [10, 354], "berfor": 10, "match_result": 10, "_n": 10, "reshape_0": [10, 354], "where": [10, 26, 215, 227, 228, 330, 344, 354, 361, 363, 366, 367, 369, 371, 375, 376], "go": [10, 364], "mayb": [10, 353, 371], "happen": [10, 352, 371], "sepcial": 10, "biasadd": [10, 20, 354, 358], "bia": [10, 15, 196, 321, 352, 375], "unfix": 10, "locat": [10, 73, 350, 351, 354, 358, 371, 375, 383], "other": [10, 63, 108, 204, 321, 340, 341, 342, 343, 350, 351, 352, 353, 354, 358, 359, 367, 370, 371, 373, 375, 377, 382], "write": [10, 342, 350, 358, 367, 368, 370], "note": [10, 215, 217, 331, 345, 348, 350, 351, 352, 353, 354, 356, 357, 358, 362, 363, 369, 370, 371, 375, 382], "That": [10, 370, 371], "too": [10, 350, 361, 362, 367], "decompos": [10, 350], "list2str": [10, 350], "src_perm": 10, "emit": [10, 354], "ret": [10, 358, 372], "str2list": 10, "src_str": 10, "pattern_mapping_conf_valid": 10, "conf_dict": 10, "lazyimport": 10, "module_nam": [10, 212, 216, 218, 219], "lazi": 10, "till": 10, "later": [10, 350, 358], "get_model_fwk_nam": 10, "detect": 10, "belong": [10, 350, 382], "avail": [10, 314, 317, 322, 328, 343, 366], "fwk": 10, "na": [10, 196, 201, 222, 342, 360], "assert": [11, 36, 188, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330], "batch_matmul": [11, 36, 188], "batch_matmul_v2": [11, 36, 188], "bias_add": [11, 15, 36, 188], "cast": [11, 36, 188], "concat": [11, 36, 188, 350], "conv": [11, 36, 188, 196, 215, 352, 353, 363], "co": [11, 36, 188, 192, 204, 343], "empty_op": [11, 36, 188, 350], "expand_dim": [11, 36, 188], "fused_batch_matmul_v2": [11, 36, 188], "fused_batch_norm_v3": [11, 36, 188], "fused_gemm": [11, 36, 188], "fused_matmul": [11, 36, 188], "gather": [11, 36, 188, 215, 222, 227, 228, 319, 350, 362], "gather_el": [11, 36, 188, 350], "gelu": [11, 36, 100, 188, 350, 357, 360, 363, 375], "gemm": [11, 36, 188, 196, 346, 361, 364, 370, 375, 389], "iterator_get_next": [11, 36, 188], "iterator_v2": [11, 36, 188, 350], "layer_norm": [11, 36, 100, 188, 350], "log_softmax": [11, 36, 188], "map_and_batch_dataset": [11, 36, 188, 350], "matmul": [11, 15, 26, 36, 108, 188, 196, 215, 346, 352, 354, 355, 358, 360, 370, 375, 389], "mkl_layer_norm": [11, 36, 188], "model_dataset": [11, 36, 188], "one_hot": [11, 36, 188], "onnx_input": [11, 36, 188], "optimize_dataset": [11, 36, 188, 350], "padding_sequ": [11, 36, 100, 188, 351], "placehold": [11, 36, 188], "pos_emb": [11, 36, 188], "pow": [11, 36, 188, 350, 354], "quantize_linear": [11, 36, 188, 350], "quantize_v2": [11, 36, 188], "quantized_fused_matmul_and_dequant": [11, 36, 188], "quantized_matmul_with_bias_and_dequant": [11, 36, 188], "reduce_mean": [11, 36, 188, 350], "reduce_sum": [11, 36, 188], "rsub": [11, 36, 188], "scatter_el": [11, 36, 188], "sin": [11, 36, 188], "size": [11, 36, 188, 190, 195, 196, 215, 222, 227, 228, 330, 340, 343, 347, 351, 353, 361, 364, 366, 368, 369, 370, 375, 382], "softmax": [11, 36, 188, 227, 319, 330, 344, 360, 369, 370], "squeez": [11, 36, 188], "strided_slic": [11, 36, 188], "top_k": [11, 36, 188, 232], "unpack": [11, 36, 188, 222, 350], "unsqueez": [11, 36, 188, 350], "view": [11, 36, 188, 341, 352, 361, 383], "sub_graph": [11, 188, 350, 353], "innerproductreshapefus": [11, 96, 100, 188], "add_cls_token": [11, 100, 188], "add_embed": [11, 100, 188], "arangewithreciproc": [11, 100, 188], "attentionblock_attentionmaskaddreshap": [11, 100, 188], "attentionblock_constantofshapewithmul": [11, 100, 188], "attentionblock_qkvprereshap": [11, 100, 188], "attentionblock_qkvreshap": [11, 100, 188], "attentionblock_resize2gath": [11, 100, 188], "attentionblock_weightreshapeto4d": [11, 100, 188], "attention_mask_length_adaptive_keep_indic": [11, 100, 188], "attention_output_layer_norm_length_adaptive_keep_indic": [11, 100, 188], "attention_reshap": [11, 100, 188], "cast_to": [11, 100, 188], "collect_quant_info": [11, 100, 188], "conv_reshap": [11, 100, 188], "decoder_attn_reshap": [11, 100, 188], "einsumwitharang": [11, 100, 188], "embeddingbag": [11, 26, 100, 188], "generate_sequ": [11, 100, 188], "innerproductwithbiasgelu": [11, 100, 188], "innerproductwithslic": [11, 100, 188], "innerproductwithswish": [11, 100, 188], "input_fil": [11, 100, 188], "insert_bf16_nod": [11, 100, 188], "insert_quant_nod": [11, 100, 188], "int8_bf16_mixed_precision_check": [11, 100, 188], "interact_featur": [11, 100, 188], "last_layer_shap": [11, 100, 188], "layer_norm_with_reduce_mean": [11, 100, 188, 350], "layer_norm_with_transpos": [11, 100, 188], "llama_embed": [11, 100, 188], "llama_matmulwithtranspos": [11, 100, 188], "llama_postprocess": [11, 100, 188], "llama_rotary_pos_emb": [11, 100, 188], "lower_all_tupl": [11, 100, 188], "matmul_with_bia": [11, 100, 188], "matmul_with_bias_add": [11, 100, 188], "matmul_with_bias_gelu": [11, 100, 188], "matmul_with_bias_relu": [11, 100, 188], "matmul_with_bias_sigmoid": [11, 100, 188], "matmul_with_bias_tanh": [11, 100, 188], "matmul_with_transpos": [11, 100, 188], "merged_embeddingbag": [11, 100, 188], "operator_adaptor": [11, 100, 188], "output_data": [11, 100, 188, 351], "position_embed": [11, 100, 188], "position_embeddings_v1": [11, 100, 188], "qkv_merg": [11, 100, 188], "qkv_reshap": [11, 100, 188], "quantize_fus": [11, 100, 188], "quantized_graph_dtype_refactor": [11, 100, 188], "remove_constant_op": [11, 100, 188], "remove_last_view": [11, 100, 188], "remove_rang": [11, 100, 188], "removeslic": [11, 100, 188], "reshape_after_restore_hidden_st": [11, 100, 188], "reshape_before_and_after_attention_out_layer_norm_gather_el": [11, 100, 188], "reshape_before_restore_hidden_st": [11, 100, 188], "reshape_fus": [11, 100, 188], "resnetblock_instancenormreshapefromconv": [11, 100, 188], "resnetblock_instancenormreshapefromdiv": [11, 100, 188], "restore_hidden_states_in_length_adaptive_update_indic": [11, 100, 188], "rms_norm": [11, 100, 188], "rotary_pos_emb": [11, 100, 188], "slicemask": [11, 100, 188], "stablediffusion_reshapefus": [11, 100, 188], "stablediffusion_bf16convert": [11, 100, 188], "start_end_logit": [11, 100, 188], "subgraph_match": [11, 100, 188, 353], "textencdoer_word_embed": [11, 100, 188], "textencoder_attentionmaskaddreshap": [11, 100, 188], "textencoder_attentionreshap": [11, 100, 188], "textencoder_kvreshap": [11, 100, 188], "textencoder_mulreshap": [11, 100, 188], "textencoder_qreshap": [11, 100, 188], "textencoder_softmaxreshap": [11, 100, 188], "textencoder_causal_attention_mask": [11, 100, 188], "token_type_embed": [11, 100, 188, 350], "token_type_embeddings_v1": [11, 100, 188, 350], "torch_embed": [11, 100, 188], "torch_ip_insert_bia": [11, 100, 188], "torchinsertbf16nod": [11, 100, 188], "torchpaddingsqu": [11, 100, 188], "transformer2dmodel_attentionmaskaddreshap": [11, 100, 188], "transformer2dmodel_constantofshapewithmul": [11, 100, 188], "transformer2dmodel_ffnslic": [11, 100, 188], "transformer2dmodel_ffnslice_1": [11, 100, 188], "transformer2dmodel_qkvprereshap": [11, 100, 188], "transformer2dmodel_qkvreshap": [11, 100, 188], "transformer2dmodel_qkvreshape4d": [11, 100, 188], "transformer2dmodel_encoderhiddenstatesreshap": [11, 100, 188], "transformer2dmodel_getsamplebatch": [11, 100, 188], "transformer2dmodel_instancenormreshapefromadd": [11, 100, 188], "transformer2dmodel_instancenormreshapefromconcat": [11, 100, 188], "transformer2dmodel_sampleslic": [11, 100, 188], "transformer2dmodel_upblockres": [11, 100, 188], "transpose_batch_matmul": [11, 100, 188, 350], "word_embed": [11, 100, 188, 351], "graph_util": [11, 188, 350, 354, 358], "logger": [11, 188, 201, 213, 372], "onnx_util": [11, 188], "tf_util": [11, 188], "torch_util": [11, 188], "load": [13, 199, 202, 209, 210, 222, 227, 228, 343, 350, 351, 352, 353, 355, 361, 363, 364, 365, 366, 371], "frontend": [13, 366], "get_logg": 14, "log": [14, 343, 351, 357], "msg": 14, "error": [14, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 351, 357, 372], "fatal": 14, "warn": 14, "get_children": 15, "input_name_to_nod": 15, "get_node_children_nam": 15, "nodeproto": [15, 187], "get_initializer_children_nam": 15, "graph_node_names_detail": [15, 186, 187], "pars": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 186, 351, 357], "graph_nodes_dict": [15, 186], "Be": [15, 186], "class": [15, 186, 190, 210, 321, 322, 331, 342, 344, 350, 357, 362, 363], "cerat": 15, "output_nam": [15, 351], "ouput": 15, "param": [15, 186, 222, 362, 363], "node_names_detail": [15, 186], "is_supported_onnx_graph": [15, 258], "is_supported_onnx_nod": 15, "change_num_nam": 15, "bias_to_int32": 15, "bias_nod": 15, "a_scal": 15, "b_scale": 15, "int8": [15, 196, 210, 222, 343, 345, 352, 353, 355, 360, 363, 368, 369, 375, 382, 391], "int32": [15, 343, 351], "matric": [15, 364, 369, 370], "scale": [15, 222, 321, 362, 367, 370, 382], "arrai": [15, 351], "fp32_bia": 15, "int8_bia": 15, "int8_bias_zero_point": 15, "int8_bias_scal": 15, "int32_bia": 15, "onnx_extract_oper": 15, "framework_model": [15, 47, 48, 186], "nodes_dict": [15, 47, 48, 186, 187], "engine_graph": [15, 47, 48, 186, 187], "tf_dtype": [15, 186, 187], "set_attr": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 350], "batchmatmul": 18, "batchmatmulv2": 19, "onnxruntim": [23, 24, 25, 31, 33, 54, 55, 60, 61, 63, 64, 66, 70, 74, 75, 77, 78, 343, 346, 348, 350, 356], "regist": [26, 39, 48, 51, 54, 55, 63, 65, 78, 131, 212, 215, 216, 218, 219, 361, 362, 363, 364, 366, 367, 368, 369, 371, 391], "binaryadd": [26, 362], "constantofshap": 26, "dequantizelinear": [26, 355], "dequant": [26, 362, 363, 367, 375], "erf": [26, 357], "expand": [26, 227, 228], "fill": [26, 354, 369], "flatmapdataset": 26, "ident": [26, 215, 340, 344], "makeiter": 26, "matmulwithbiasadd": [26, 120], "matmulwithbiasgelu": [26, 121], "matmulwithbiastanh": [26, 124], "matmulwithbia": [26, 119], "qlinearmatmul": [26, 355], "qlinearadd": 26, "qlinearmul": 26, "realdiv": 26, "sqrt": [26, 350, 354, 369], "squar": [26, 227, 228], "stopgradi": 26, "tanh": [26, 357, 363, 375], "tensorslicedataset": 26, "transposebatchmatmul": [26, 184, 350], "relu": [26, 363, 375], "matmulwithbiasrelu": [26, 122], "cumsum": 26, "onehot": [26, 46], "tokentypeid": 26, "positionid": 26, "loop": [26, 222, 321, 330, 350, 362, 364, 369], "sigmoid": 26, "matmulwithbiassigmoid": [26, 123], "flatten": 26, "mergedembeddingbag": [26, 126], "convolut": [26, 344, 353], "expandindic": 26, "tile": [26, 63, 361, 365, 367, 369, 370, 371, 375], "opani": 26, "sequencelength": [26, 359], "arang": 26, "reciproc": 26, "einsum": 26, "repeat": [26, 364, 376], "stack": [26, 370], "constant": [26, 138, 222], "listconstruct": 26, "latrang": 26, "masked_fil": 26, "floor_divid": 26, "max": [26, 196, 198, 222, 343, 359, 362, 364, 366, 371, 373, 382], "listunpack": 26, "silu": 26, "expanddim": 27, "fusedbatchnormv3": 29, "fusedgemm": 30, "fusedmatmul": 31, "gatherv2": [32, 350], "gatherel": [33, 350], "iteratorgetnext": 37, "iteratorv2": [38, 350], "logsoftmax": [40, 319], "mapandbatchdataset": [41, 350], "modeldataset": 45, "onnxinput": 47, "operator_registri": [48, 350], "operator_typ": [48, 350], "subclass": [48, 131, 215, 216, 219, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 318, 319], "cl": [48, 131, 215, 216, 218, 219, 330], "registr": [48, 131, 350], "optimizedataset": [49, 350], "packagepositionembed": 53, "quantizelinear": [55, 350, 355], "quantiz": [55, 196, 201, 204, 208, 209, 222, 311, 343, 346, 362, 363, 367, 368, 370, 375, 378, 386, 391], "quantizev2": 56, "quantizedmatmulwithbiasanddequant": 58, "reducemean": [59, 350, 354], "reducesum": 60, "aten": 63, "self": [63, 196, 227, 228, 232, 330, 342, 350, 352], "scalar": [63, 362], "alpha": [63, 212, 218, 321, 368, 375], "scatterel": 64, "primconst": 67, "stridedslic": 72, "source_op": 73, "dest_op": 73, "definit": [73, 363], "topk": 74, "fuse": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 355, 362, 363], "acceler": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 335, 343, 345, 346, 355, 362, 363, 367, 369, 382, 388], "strategi": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 209, 364], "addclstoken": [80, 89], "addembed": 81, "stabl": [83, 84, 85, 86, 87, 148, 157, 158, 159, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 311, 343, 348, 367], "diffusionv1": [83, 84, 85, 86, 87, 158, 159, 162, 163, 164, 171, 172, 175, 176, 177, 183], "attentionmasklengthadaptiveexpandindic": 89, "attentionoutputlayernormlengthadaptiveexpandindic": 90, "attentionreshap": 91, "castto": 92, "collectquantinfo": 93, "convreshap": 94, "decoderattnreshap": 95, "generatesequ": 99, "inputdata": [104, 350], "inputfil": 105, "insertbf16nod": 106, "insertquantnod": 107, "quantizedgraphdtyperefactor": [108, 137], "int8bf16mixedprecisioncheck": 108, "inferenc": 108, "under": [108, 222, 343, 350, 351, 352, 355, 367, 368, 375, 377], "in8": 108, "bf16": [108, 196, 222, 343, 345, 355, 360, 363, 365, 367, 370, 375], "mix": [108, 353], "precis": [108, 222, 346, 355, 379, 382, 391], "And": [108, 352, 353, 354, 355, 358, 362], "u8": [108, 355, 357, 363, 370, 375], "s8": [108, 355, 362, 363, 367, 375], "fp32": [108, 196, 222, 343, 345, 351, 352, 353, 355, 357, 362, 363, 365, 366, 368, 370, 375, 380, 382], "interactfeatur": 109, "lastlayershap": 110, "layernormwithreducemean": [112, 350], "layernormwithtranspos": 113, "llamaembed": 114, "llamamatmulwithtranspos": 115, "llamapostprocess": 116, "roraryposemb": [117, 151], "llamaroraryposemb": 117, "loweralltupl": 118, "matmulwithtranspos": 125, "multiheadattent": 127, "bass": [127, 131], "operatoradaptor": 128, "sweep": 128, "receiv": [128, 204, 354, 358], "outputdata": [129, 350], "pattern_registri": [131, 350], "pattern_typ": [131, 350], "positionembed": 132, "positionembeddingsv1": 133, "qkvmerg": 134, "qkvreshap": 135, "qunatizefus": 136, "quantizedgraphdtypecheck": 137, "removeconstantop": 138, "removelastview": 139, "removerang": 140, "reshapeafterrestorehiddenst": 142, "reshapebeforeandafterattentionoutlayernormgatherel": 143, "reshapebeforerestorehiddenst": 144, "reshapefus": 145, "qkv": [147, 161, 180, 181, 353, 355], "groupnorm": 148, "channel": [148, 215, 362, 366, 367, 371, 375, 381], "separ": [148, 340, 358, 371, 377], "num_group": 148, "group": [148, 218, 345, 350, 358, 364, 369, 371, 381], "num_channel": 148, "var": [148, 321], "epsilon": [148, 350], "gamma": 148, "beta": [148, 212, 321, 368, 375], "http": [148, 192, 212, 215, 217, 227, 232, 234, 342, 343, 348, 349, 351, 357, 377, 383], "pytorch": [148, 190, 196, 199, 202, 204, 208, 215, 217, 222, 227, 228, 230, 328, 342, 343, 346, 348, 356, 374, 380, 381, 382], "org": [148, 212, 227, 348], "nn": [148, 195, 222, 366], "html": [148, 357], "restorehiddenstatesinlengthadapt": 149, "rmsnorm": 150, "startendlogit": 155, "matcher": [156, 330, 355], "subgraphmatch": [156, 353], "textencoder_wordembed": 157, "textencoderv1": [157, 173, 174, 178, 179, 182], "textencoder_casualattentionmask": 164, "tokentypeembed": [165, 350], "tokentypeembeddingsv1": [166, 350], "torchembed": 167, "torchinnerproductinsertbia": 168, "torchpaddingsequ": 170, "transformer2dmodel_ffninputslic": 173, "transformer2dmodel_ffninputslice_1": 174, "transformer2dmodel_qkvreshapeto4d": 177, "wordembed": 185, "create_tf_nod": 186, "when": [186, 196, 215, 216, 220, 222, 227, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 331, 340, 345, 350, 351, 353, 354, 357, 358, 361, 363, 364, 366, 367, 368, 370, 371, 375, 378, 379, 382], "tendorflow": 186, "get_tensor_dest_op": 186, "someth": 186, "store": [186, 196, 199, 202, 204, 212, 215, 216, 218, 219, 330, 350, 354, 355, 358, 361, 362, 363, 364, 365, 368, 369, 371], "dest_op_nam": 186, "tf_extract_oper": 186, "tf_dtype_id": 186, "deal": [186, 330, 352], "multipl": [186, 216, 223, 227, 228, 232, 331, 345, 350, 352, 363, 364, 366, 367, 368, 369, 370, 371, 375, 378, 379], "indetermin": 186, "torch_extract_oper": 187, "compil": [188, 314, 347, 349, 350, 351, 353, 354, 356, 358, 391], "model_arg": 190, "task": [190, 210, 228, 231, 330, 342, 343, 344, 345, 356, 363, 369, 372, 380], "new_fewshot": 190, "batch_siz": [190, 192, 195, 196, 227, 228, 231, 331, 343, 351, 352, 356, 369, 375], "devic": [190, 192, 199, 342, 344, 351, 353, 380], "cpu": [190, 196, 311, 320, 331, 342, 343, 347, 348, 351, 357, 359, 361, 363, 372, 373, 380], "no_cach": 190, "limit": [190, 196, 344, 366, 370], "bootstrap_it": 190, "100000": 190, "description_dict": 190, "check_integr": 190, "decontamination_ngrams_path": 190, "seed": [190, 196, 330], "1234": 190, "user_model": 190, "instanti": [190, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "union": [190, 222, 321], "lm": 190, "lm_eval": 190, "get_model": 190, "create_from_arg_str": 190, "ignor": [190, 222, 227, 228, 350], "taken": [190, 227, 228], "eval_harness_nam": 190, "__name__": 190, "num_fewshot": 190, "shot": [190, 212, 219], "context": 190, "batch": [190, 195, 222, 321, 343, 351, 366, 367, 369, 376], "g": [190, 196, 202, 215, 222, 330, 344, 362, 363, 367, 368, 376], "cuda": [190, 192, 342], "run": [190, 208, 216, 220, 222, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 331, 342, 375, 376, 382], "whether": [190, 196, 204, 215, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 337, 350, 352, 358, 375, 390], "cach": [190, 204, 319, 357, 364, 367, 368, 369, 375], "per": [190, 215, 352, 359, 362, 365, 367, 373, 375, 376, 381], "test": [190, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 341, 343, 345, 348, 359, 373, 375, 376], "iter": [190, 196, 202, 216, 219, 222, 330, 331, 343, 351, 353, 357, 362, 366, 369, 370, 375, 376], "bootstrap": 190, "statist": 190, "dictionari": [190, 205, 222], "task_nam": [190, 355, 356], "relev": [190, 343], "suit": 190, "provid": [190, 195, 196, 199, 204, 208, 209, 222, 227, 228, 232, 234, 311, 330, 331, 343, 345, 346, 347, 350, 360, 363, 367, 368, 370, 378, 382], "autocausallm": 192, "pretrain": [192, 227, 228, 350], "token": [192, 208, 227, 228, 232, 331, 342, 343, 345, 347, 355, 380], "subfold": 192, "revis": [192, 204], "max_gen_tok": 192, "256": [192, 330, 352, 373, 375], "max_length": [192, 196, 331, 343], "add_special_token": 192, "use_acceler": 192, "device_map_opt": 192, "auto": [192, 196, 202, 209, 342, 352, 357, 363], "max_memory_per_gpu": 192, "max_cpu_memori": 192, "offload_fold": 192, "offload": 192, "causal": [192, 228, 342], "languag": [192, 227, 228, 311, 340, 342, 343, 345, 380], "find": [192, 330, 350, 353, 357, 358, 366, 381], "hf": 192, "transform": [192, 196, 209, 210, 222, 227, 228, 232, 330, 331, 335, 341, 342, 344, 348, 349, 350, 351, 362, 363, 368, 369, 370, 371, 377, 379, 380, 381, 382, 383, 388], "model_doc": 192, "automodelforcausallm": 192, "autoseq2seqlm": 192, "seq2seq": [192, 222, 227, 228], "automodelforseq2seqlm": 192, "multitokeneoscriteria": 192, "pretrainedtoken": 192, "initial_decoder_input_length": 192, "criteria": [192, 201, 213, 379], "stop": [192, 196, 232, 342, 382], "multi": [192, 351, 352, 353], "api_doc_exampl": 194, "version": [194, 204, 222, 340, 343, 348, 353, 359, 373, 377], "pytorchbenchmark": 195, "executorbenchmark": 195, "refactor_batch_s": 195, "old_batch_s": 195, "target": [195, 196, 215, 219, 220, 222, 330, 352, 371, 381], "default": [195, 196, 204, 208, 210, 220, 222, 227, 228, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 331, 342, 343, 344, 350, 353, 359, 363, 367, 371, 372, 373, 375, 378, 379, 381, 382], "batched_valu": 195, "get_example_input": [195, 331], "dataload": [195, 208, 222, 231, 331, 343], "batched_data": 195, "preprocess_model": 195, "example_input": [195, 331], "additional_cmd": 195, "jit": [195, 196, 222, 331, 335, 360, 362, 363, 366, 370, 375, 388], "trace": [195, 196, 331, 352], "benchmarkconfig": [195, 196, 331], "process": [195, 196, 202, 205, 215, 216, 217, 219, 220, 222, 232, 330, 343, 345, 350, 351, 353, 354, 358, 361, 362, 364, 367, 368, 371, 381, 382], "raw_cmd": 195, "preprocess": [195, 196, 342, 343, 370], "scriptmodul": 195, "model_name_or_path": [195, 204, 222, 232, 331, 342], "build": [195, 205, 209, 222, 330, 343, 349, 361, 367, 368, 372, 379], "inc": [196, 204, 208, 209, 222, 356], "nncf": 196, "check_valu": 196, "src": [196, 321, 351, 363, 371, 375], "supported_typ": 196, "supported_valu": 196, "given": [196, 204, 215, 216, 227, 228, 342, 358, 363, 366, 369, 371, 381], "datatyp": [196, 345, 346], "uint8": [196, 369, 382], "_datatyp": 196, "dynamiclengthconfig": [196, 222, 347], "length_config": [196, 227, 228, 347], "const_rat": 196, "num_sandwich": 196, "length_drop_ratio_bound": [196, 198], "layer_dropout_prob": [196, 198], "layer_dropout_bound": [196, 198], "dynamic_train": 196, "load_store_fil": 196, "evo_it": 196, "30": [196, 365], "population_s": 196, "20": [196, 331, 343, 348, 351, 356, 359, 365, 372, 373], "mutation_s": 196, "mutation_prob": [196, 199], "crossover_s": 196, "num_cpu": 196, "48": [196, 359, 373], "distributed_world_s": 196, "latency_constraint": 196, "evo_eval_metr": 196, "eval_f1": [196, 199, 347, 378, 382], "dynam": [196, 201, 222, 357, 360, 362, 366, 368, 375, 389], "adapt": [196, 311, 340, 343], "maximum": [196, 215, 216, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 359, 373, 382], "drop": [196, 198, 345, 368, 371, 378], "ratio": [196, 198, 199, 215, 216, 217, 219, 344, 373, 375, 378, 379, 381], "sandwich": 196, "num": [196, 330, 342, 352, 361, 363, 369], "train": [196, 202, 205, 208, 209, 216, 217, 222, 311, 330, 342, 343, 344, 347, 374, 381], "dropout": [196, 198], "probabl": [196, 198, 330, 368], "evolut": [196, 200, 201, 345], "popul": [196, 199], "mutat": [196, 199], "crossov": [196, 199], "distribut": [196, 231, 330, 344, 368, 382, 383], "world": 196, "latenc": [196, 330, 331, 343, 345, 352, 359, 364, 382], "constraint": [196, 199, 382], "metric": [196, 201, 202, 205, 209, 222, 224, 330, 343, 347, 386], "quantizationconfig": [196, 208, 209, 222, 343, 347], "approach": [196, 205, 207, 342, 344, 345, 347, 363, 364], "posttrainingstat": [196, 345, 346, 347, 382], "timeout": [196, 382], "max_trial": [196, 330, 382], "config_fil": 196, "sampling_s": 196, "use_bf16": 196, "recip": [196, 222, 342, 353, 379], "earli": [196, 382], "combin": [196, 222, 330, 353, 358, 362, 363, 382], "decid": [196, 366, 382], "exit": [196, 382], "time": [196, 352, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 382], "evalu": [196, 199, 202, 205, 208, 209, 215, 216, 217, 222, 330, 344, 352, 369, 378, 379, 381, 382], "notraineroptim": [196, 208, 344, 381, 382], "guarante": [196, 382], "how": [196, 198, 212, 215, 216, 222, 310, 341, 350, 351, 352, 355, 356, 358, 363, 364, 365, 375, 378, 381], "mani": [196, 198, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 350, 352, 354, 362, 364, 365, 368, 370, 375], "sampl": [196, 198, 222, 232, 330, 331, 342, 343, 347, 359, 369, 382], "smooth_quant": 196, "smooth": 196, "smooth_quant_arg": 196, "fast_bias_correct": 196, "fast": [196, 311, 343, 347], "correct": [196, 220, 340, 354, 358, 369], "weight_correct": 196, "weight": [196, 212, 215, 216, 218, 219, 227, 228, 321, 330, 344, 346, 352, 353, 355, 361, 364, 365, 366, 370, 371, 375, 378, 379, 381, 382], "gemm_to_matmul": 196, "graph_optimization_level": 196, "disable_al": 196, "enable_bas": 196, "enable_extend": 196, "enable_al": 196, "first_conv_or_matmul_quant": 196, "last_conv_or_matmul_quant": 196, "pre_post_process_quant": 196, "postprocess": 196, "add_qdq_pair_to_weight": 196, "qdq": [196, 222, 346, 355], "vaild": 196, "onnxrt_trt_ep": 196, "optypes_to_exclude_output_qu": 196, "optyp": 196, "dedicated_qdq_pair": 196, "dedic": 196, "pruningconfig": [196, 347], "epoch": [196, 216, 217, 381], "epoch_rang": [196, 211], "initial_sparsity_ratio": [196, 211], "target_sparsity_ratio": [196, 211, 215, 216, 347, 381], "97": [196, 211, 373, 381], "pruner_config": [196, 347, 381], "pruner": [196, 201, 211, 212, 213, 217, 222, 344, 381], "prune": [196, 201, 208, 209, 212, 213, 215, 216, 218, 219, 220, 222, 227, 228, 311, 343, 386], "goal": [196, 222, 381], "behavior": [196, 222, 340, 341, 344, 361, 362, 367, 381, 382], "nlp": [196, 217, 222, 232, 234, 311, 342, 343, 345, 347, 351, 381, 382], "wil": 196, "basicmagnitud": [196, 211, 345, 347, 381], "typel": 196, "init_prune_config": 196, "init": [196, 202, 208, 209, 213, 230, 231, 330, 342, 343, 348, 349, 351, 363], "distillationconfig": [196, 222, 347], "criterion": [196, 197, 209, 212, 215, 216, 225, 347, 378, 382], "distil": [196, 201, 202, 208, 209, 222, 342, 343, 356, 386], "inc_config": 196, "knowledgeloss": [196, 197, 344], "tfdistillationconfig": [196, 330], "loss_typ": [196, 197, 330, 344], "loss_weight": [196, 330], "train_step": [196, 330], "temperatur": [196, 197, 232, 330, 342, 344], "loss": [196, 222, 227, 228, 330, 342, 344, 382], "knowledgedistillationloss": [196, 344], "flashdistillationconfig": 196, "block_nam": [196, 330], "layer_mappings_for_knowledge_transf": [196, 330], "add_origin_loss": [196, 197, 330, 344], "flash": [196, 202, 222], "autodistillationconfig": [196, 330], "search_spac": [196, 205, 330], "search_algorithm": [196, 330], "bo": [196, 330, 377], "knowledge_transf": [196, 330], "regular_distil": [196, 330], "disil": 196, "space": [196, 202, 205, 216, 222, 330, 340, 341, 353, 361, 364], "bayesian": [196, 330], "architectur": [196, 202, 205, 209, 222, 227, 228, 330, 343, 348, 361, 368, 370], "candid": 196, "trial": [196, 222], "random": [196, 227, 330, 368], "knowledg": [196, 222, 311, 330, 342, 343], "transfer": [196, 222, 231, 344], "stage": [196, 202, 222, 330], "autodistil": [196, 202, 209, 222, 386], "regular": [196, 202, 218, 381], "nasconfig": [196, 205, 207], "basic": [196, 205, 215, 228, 231, 343, 348, 357, 367], "parser": 196, "procedur": [196, 215, 375], "backend": [196, 222, 230, 331, 343, 345, 347, 348, 349, 350, 353, 355, 358, 360, 375, 382], "warmup": [196, 331, 353], "cores_per_inst": [196, 222, 331], "num_of_inst": [196, 222, 331], "benchmark": [196, 201, 222, 223, 343, 353, 359, 360, 373, 376, 386], "skip": [196, 331, 364, 376], "collect": [196, 331, 350, 352, 382], "core": [196, 331, 351, 359, 361, 367, 368, 373, 376, 377], "instanc": [196, 202, 205, 222, 223, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 331, 340, 351, 352, 359, 373, 376, 378, 379, 380], "enabl": [196, 216, 331, 346, 347, 359, 361, 367, 368, 372, 373], "want": [196, 208, 331, 337, 350, 351, 352, 353, 355, 358, 361, 362, 363, 375, 378, 390], "prunerv2": 196, "target_spars": [196, 215], "pruning_typ": 196, "op_nam": 196, "excluded_op_nam": 196, "start_step": [196, 216], "end_step": [196, 216], "pruning_scop": 196, "pruning_frequ": [196, 216], "min_sparsity_ratio_per_op": [196, 215], "max_sparsity_ratio_per_op": [196, 215, 216], "sparsity_decay_typ": 196, "pruning_op_typ": 196, "reg_typ": [196, 363], "criterion_reduce_typ": 196, "resume_from_pruned_checkpoint": 196, "similiar": 196, "weightpruningconfig": 196, "pruning_config": [196, 208, 209, 222, 347, 381], "snip_momentum": [196, 212], "4x1": [196, 215, 352, 361, 371], "global": [196, 215, 216], "98": [196, 373], "exp": [196, 363, 370, 375], "linear": [196, 215, 330, 344, 363, 366, 369], "ce": [197, 330, 344], "loss_weight_ratio": [197, 344], "layer_map": [197, 344], "distillationcriterionmod": 197, "restor": [198, 345], "sample_length_configur": 198, "max_seq_length": [198, 199], "num_hidden_lay": 198, "layer_config": [198, 227, 228], "length_drop_prob": 198, "length_drop_ratio": 198, "min_length": 198, "hidden": [198, 215, 227, 228, 330, 364], "truncat": [198, 343], "less": [198, 331, 344, 353, 367, 371, 381], "than": [198, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 331, 352, 353, 354, 362, 367, 369, 374, 375, 382], "min": [198, 222, 382], "sample_layer_configur": 198, "layer_dropout": 198, "depend": [198, 205, 341, 343, 348, 349], "paramat": 198, "bound": 198, "kept": [198, 215], "evolust": 199, "evolustionari": 199, "approx_ratio": 199, "12": [199, 342, 348, 349, 352, 359, 365, 369, 372, 373, 375], "l": [199, 330, 344], "384": [199, 330, 353, 359, 373], "approxim": [199, 370], "invers": [199, 370], "store2str": 199, "gene": 199, "mac": 199, "score": [199, 212, 215, 216, 218, 227, 228, 380], "parent": [199, 216, 219], "parmat": 199, "lower_constraint": 199, "upper_constraint": 199, "eval_metr": 199, "evolutionari": [199, 222], "load_stor": 199, "store_fil": 199, "save_stor": 199, "get_stor": 199, "set_lower_constraint": 199, "setter": [199, 227, 228], "lower": [199, 232, 371, 379, 382], "set_upper_constraint": 199, "upper": [199, 363], "save_popul": 199, "population_fil": 199, "convex_hul": 199, "pareto_fronti": 199, "add_gen": 199, "rai": 199, "packag": [200, 203, 311, 342, 343], "drop_and_restore_util": [200, 201], "mixtur": 201, "auto_distil": [201, 203, 330], "basic_na": [201, 206], "pytorch_prun": 201, "reg": [201, 213, 216, 362, 363], "schedul": [201, 208, 213, 216, 218, 222, 330, 335, 360, 388], "get_throughput": [201, 224], "utility_tf": [201, 224], "optimizer_tf": 201, "trainer": [201, 208, 328, 343, 345, 346, 347], "handl": [202, 222, 227, 228, 310, 319, 330, 357, 365, 366], "both": [202, 222, 227, 228, 340, 342, 347, 367, 369, 374, 375, 376, 378, 382], "model_build": [202, 205, 209, 222, 330], "conf_fname_or_obj": [202, 205, 207], "design": [202, 222, 350, 362, 363, 374, 386], "three": [202, 211, 217, 221, 222, 330, 343, 350, 354, 358, 369, 370, 381, 382], "major": [202, 222, 330, 361, 367, 368, 370, 371, 382], "explor": [202, 222, 330, 347], "compress": [202, 222, 311, 330, 344, 347, 361, 365, 367, 371, 374, 382], "discov": [202, 222, 330], "potenti": [202, 222, 321, 330, 341, 368], "measur": [202, 222, 330, 331, 344, 360, 378, 379, 381, 382], "predict": [202, 222, 227, 228, 330, 342, 343, 344], "hardwar": [202, 222, 330, 341, 344, 372, 374], "etc": [202, 222, 330, 344, 352], "select": [202, 218, 222, 227, 228, 330, 363, 375], "best": [202, 205, 222, 330, 340, 345], "res_save_path": [202, 205], "model_cl": [202, 209, 222, 330], "found": [202, 205, 343, 349, 350, 371], "estim": [202, 205, 352, 371], "load_search_result": 202, "init_by_cfg": [202, 205], "create_distil": 202, "optimizedmodel": 204, "from_pretrain": [204, 227, 228, 331, 343, 347, 380], "function": [204, 205, 208, 209, 217, 222, 318, 319, 320, 321, 330, 344, 350, 353, 354, 357, 358, 362, 363, 375, 378, 381, 382], "classmethod": [204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "intel": [204, 215, 217, 232, 310, 331, 341, 342, 347, 348, 349, 350, 351, 359, 361, 372, 373, 377, 379, 380, 381, 382, 383], "compressor": [204, 209, 215, 217, 311, 331, 343, 379, 382], "repositori": [204, 343], "hug": [204, 311, 343, 355], "face": [204, 311, 312, 340, 343, 355], "hub": [204, 380], "local": [204, 215, 216, 222, 350, 361, 364, 367], "directori": [204, 208, 355, 374], "host": 204, "cache_dir": 204, "download": [204, 227, 228, 383], "standard": 204, "force_download": 204, "forc": 204, "re": [204, 365], "overrid": [204, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 318, 319, 357], "resume_download": 204, "delet": [204, 381], "incomplet": 204, "attempt": 204, "resum": [204, 222], "branch": [204, 375], "tag": 204, "commit": [204, 340, 376], "sinc": [204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 344, 367, 368, 370], "we": [204, 205, 228, 337, 340, 342, 343, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 378, 379, 380, 382, 390], "git": [204, 342, 343, 348, 349, 351], "system": [204, 343, 349], "artifact": 204, "huggingfac": [204, 232, 343, 356, 378, 380], "allow": [204, 331], "q_model": 204, "basicna": 205, "conf_fnam": 205, "obj": [205, 207, 220], "common": [207, 215, 340, 343, 382], "nasbas": 207, "orchestr": [208, 222], "orchestrate_optim": [208, 222], "compon": [208, 222, 362, 377], "experiment": [208, 222, 363], "callabl": [208, 209, 222, 330], "train_func": [208, 209, 222, 330], "saved_result": [208, 343], "aggreg": 208, "save_model": [208, 231, 343], "json": [208, 232, 342], "pytorch_model": 208, "init_quant": [208, 209, 222, 362], "quant_config": [208, 209, 222, 343, 347, 382], "calib_func": 208, "calib_dataload": [208, 222], "prepar": [208, 209, 227, 228, 342, 352, 354, 357, 362, 363, 371, 382], "invok": [208, 209], "_inc_quant": 208, "calibr": [208, 222, 382], "init_prun": [208, 209, 222], "init_distil": [208, 209, 222], "distillation_config": [208, 209, 222, 344, 347], "teacher_model": [208, 209, 222, 330, 344, 347], "teacher": [208, 209, 330, 344, 345], "tfoptim": [209, 330, 344], "pretrainedmodel": [209, 222, 330], "training_args_tf": 209, "tftrainingargu": 209, "train_dataset": [209, 330, 343, 347], "eval_dataset": [209, 330, 343, 347], "compute_metr": [209, 330, 343], "task_typ": [209, 231], "task_id": [209, 231], "entri": [209, 222, 227, 228, 377], "techniqu": [209, 343, 345, 347, 382], "builtin_eval_func": [209, 222], "dataset": [209, 222, 231, 232, 331, 342, 345, 378, 382], "saved_model": 209, "quantized_model_path": 209, "larger": [209, 215, 222], "model_builder_builtin": [209, 222, 330], "arch_para": [209, 222], "built": [209, 330, 379], "builder": [209, 330], "inform": [209, 212, 215, 216, 217, 218, 219, 310, 314, 317, 322, 328, 340, 341, 343, 344, 351, 352, 359, 363, 366, 373, 374, 375, 381, 382, 383, 387], "autodistillation_config": [209, 222, 330], "build_train_func": 209, "infer_framework_load_model": 210, "autoconfig": [210, 343, 347, 380], "model_class": 210, "model_kwarg": [210, 227, 228, 380], "pruningmod": 211, "current": [211, 212, 215, 216, 217, 219, 221, 352, 362, 363, 364, 366, 367, 369, 374, 375], "prunerconfig": [211, 347], "update_frequ": 211, "prune_typ": [211, 347, 381], "per_tensor": 211, "register_criterion": 212, "registri": [212, 215, 216, 218, 219], "get_criterion": 212, "pruningcriterion": 212, "on_step_begin": [212, 216, 217], "begin": [212, 216, 217, 228, 330, 362, 363], "on_before_optimizer_step": [212, 216, 217, 218], "on_after_optimizer_step": [212, 216, 217, 218], "magnitudecriterion": 212, "magnitud": [212, 381], "criterion_class": 212, "deriv": [212, 215, 216, 218, 219, 319, 368, 369], "determin": [212, 215, 216, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 353, 372], "magtinud": 212, "gradientcriterion": 212, "gradient": 212, "absolut": [212, 378, 381, 382], "snipcriterion": 212, "snip": 212, "product": [212, 343, 359, 369, 373, 379, 382], "singl": [212, 219, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 364, 369], "network": [212, 215, 330, 344, 350, 351, 352, 354, 366, 381, 382], "sensit": 212, "arxiv": [212, 227], "ab": [212, 227, 382], "1810": 212, "02340": 212, "snipmomentumcriterion": 212, "momentum": 212, "mechan": 212, "much": [212, 355, 364], "preserv": 212, "updat": [212, 215, 216, 219, 220, 342, 343, 348, 349, 351, 368, 381], "register_pattern": 215, "get_pattern": 215, "assertionerror": [215, 216, 220], "basepattern": [215, 218], "unit": [215, 360, 367], "dure": [215, 219, 222, 351, 367, 371, 376, 379, 381, 382], "is_glob": 215, "take": [215, 340, 344, 352, 354, 357, 362, 370, 371], "contrast": 215, "individu": [215, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340], "keep_mask_lay": 215, "whose": [215, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 358], "mask": [215, 216, 219, 227, 228, 321, 345, 362, 363, 365, 367, 370], "invalid_lay": 215, "reach": [215, 219, 341, 343], "minimum": 215, "reduce_tensor": 215, "dim": [215, 227, 228, 351, 357, 361, 367, 371, 375], "reduc": [215, 343, 357, 361, 362, 364, 366, 367, 368, 370, 371, 382], "along": [215, 353, 366, 369, 371], "dimens": [215, 227, 228, 330, 344, 353, 366, 367, 369, 371, 375], "axi": [215, 343, 350, 352, 369, 370], "get_mask": 215, "pre_mask": 215, "layer_nam": 215, "unprun": 215, "abstract": [215, 219, 227, 228], "get_masks_glob": 215, "get_masks_loc": 215, "get_single_mask_per_target_ratio": 215, "exact_sparsity_ratio": 215, "get_block_size_dict": 215, "mainli": [215, 219, 353, 367, 368], "To": [215, 219, 227, 228, 330, 341, 350, 364, 367, 369, 371, 375, 376], "implement": [215, 216, 217, 218, 219, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 335, 343, 350, 353, 354, 358, 360, 361, 362, 364, 366, 367, 368, 369, 370, 372, 375, 388], "get_sparsity_ratio": [215, 217], "return_dict": [215, 227, 228], "zero": [215, 216, 217, 363, 364, 366, 367, 371, 381], "zero_cnt": 215, "total_cnt": 215, "get_pattern_lock_mask": 215, "obtain": [215, 218, 219, 220, 343, 345, 352, 370], "posit": [215, 227, 228, 340, 343, 347, 353, 358, 375, 380], "lock": [215, 381], "check_layer_valid": 215, "block_siz": 215, "get_reduced_masks_from_data": 215, "update_residual_cnt": 215, "yet": 215, "get_sparsity_ratio_each_lay": 215, "sparsity_ratio": 215, "zero_point": 215, "cnt": 215, "sparsityinfo": 215, "adjust_ratio": 215, "key_new_spars": 215, "max_sparsity_ratio": 215, "min_sparsity_ratio": 215, "final_target_sparsity_ratio": 215, "adjust": [215, 331, 357, 382], "examin": 215, "propos": [215, 330, 344, 361], "indic": [215, 227, 228, 321, 358, 362, 363, 369, 371, 375, 378], "adjust_sparsity_ratio": 215, "patternnxm": 215, "nxm": [215, 216, 361], "height": 215, "width": [215, 361, 362, 366, 368, 382], "vertic": 215, "direct": [215, 321], "becaus": [215, 350, 362, 365, 370, 382], "calul": 215, "ration": 215, "block_size_1": 215, "block_size_2": 215, "wise": [215, 360, 375, 389], "block_wis": 215, "get_sparsity_ratio_progress": 215, "reshape_orig_to_pattern": 215, "s1": 215, "s2": 215, "reshape_reduced_to_orig": 215, "orig_shap": 215, "permut": [215, 352, 365, 369, 375], "reduce_scor": 215, "recalcul": 215, "get_mask_per_threshold": 215, "cur_target_sparsity_ratio": 215, "keep_exact_sparsity_ratio": 215, "togeth": [215, 343], "keep_pre_mask": 215, "remain": [215, 321], "unchang": 215, "count_new_masked_cnt": 215, "new_added_mask": 215, "count": [215, 352, 357], "ad": [215, 216, 227, 228, 350, 354, 358, 362, 371, 375, 380], "update_new_added_mask": 215, "cur_mask": 215, "bacaus": 215, "update_progressive_mask": 215, "progressive_step": 215, "progressive_config": 215, "progress": [215, 216, 219], "update_progressive_masks_linear": 215, "update_progressive_masks_scor": 215, "update_progressive_masks_loc": 215, "domain": [215, 311, 335, 343, 360, 388], "update_progressive_masks_glob": 215, "patternninm": 215, "continu": [215, 227, 361, 364, 368, 369], "github": [215, 217, 232, 234, 341, 342, 343, 348, 349, 351, 357, 377, 383], "com": [215, 217, 232, 234, 342, 343, 348, 349, 351, 359, 373, 377, 383], "blob": [215, 232], "master": [215, 217], "md": [215, 232, 352, 355], "get_least_ninm_mask_from_data": 215, "elementwis": 215, "sparisti": 215, "get_ele_mask_per_threshold": 215, "least_ninm_mask": 215, "least_m_in_m_mask": 215, "register_prun": 216, "parse_valid_pruner_typ": 216, "get_prun": 216, "cuurent": 216, "baseprun": 216, "what": [216, 340, 362, 363, 369, 381], "current_sparsity_ratio": 216, "global_step": 216, "trigger": [216, 223, 341], "frequenc": [216, 359, 373, 381], "show": [216, 340, 343, 350, 351, 354, 355, 358, 365, 367, 369], "on_epoch_begin": [216, 217], "mask_weight": 216, "formal": [216, 227], "mask_weights_gener": 216, "local_step": [216, 217], "update_mask": 216, "on_epoch_end": [216, 217], "on_step_end": [216, 217], "on_train_begin": [216, 217], "phase": [216, 217, 344, 381], "on_train_end": [216, 217], "on_before_ev": [216, 217], "on_after_ev": [216, 217], "check_is_pruned_step": 216, "boolean": 216, "basicprun": 216, "arrang": 216, "within": [216, 330, 340, 366], "chang": [216, 219, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 341, 350, 361, 362, 371, 376, 377], "proce": 216, "regul": 216, "term": [216, 218, 330, 344, 366, 369, 371, 377, 378, 379, 382], "set_global_step": 216, "patternlockprun": 216, "fix": [216, 341, 353, 365], "inherit": [216, 219, 331, 344, 350, 357, 380, 381, 382], "progressiveprun": 216, "interpol": 216, "fine": [216, 311, 342, 343, 381, 382], "grain": 216, "improv": [216, 341, 343, 352, 362, 364, 366, 367, 371, 382], "interv": [216, 375], "check_progressive_valid": 216, "check_is_pruned_progressive_step": 216, "update_masks_progress": 216, "print_progressive_spars": 216, "templat": [217, 319, 321], "tree": 217, "huggingface_model": 217, "text": [217, 232, 311, 331, 343, 345, 356, 363, 372, 377, 380], "classif": [217, 227, 228, 311, 330, 343, 344, 345, 356, 380], "eager": [217, 382], "config_file_path": 217, "pruner_info": 217, "update_config": 217, "read": [217, 343, 351], "pass": [217, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 362, 363, 380, 382], "elementwise_over_matmul_gemm_conv": 217, "elementwise_over_al": 217, "blockwise_over_matmul_gemm_conv": 217, "ensur": [217, 367], "register_reg": 218, "regulariz": 218, "get_reg_typ": 218, "get_reg": 218, "basereg": 218, "grouplasso": [218, 381], "coeff": 218, "lasso": [218, 345, 381], "variabl": [218, 321, 354, 357, 375, 376], "reg_term": 218, "coeffient": 218, "register_schedul": 219, "get_schedul": 219, "pruningschedul": 219, "dens": [219, 321, 352, 353, 358, 360, 371, 375, 381], "gradual": 219, "update_sparsity_ratio": 219, "target_ratio": 219, "current_prune_step": 219, "total_prune_step": 219, "init_ratio": 219, "oneshotschedul": 219, "onc": [219, 311, 343, 352, 370], "iterativeschedul": 219, "init_sparsity_ratio": 219, "check_config": 220, "prune_config": 220, "everyth": 220, "reset_none_to_default": 220, "undefin": 220, "item": [220, 331, 343, 347], "update_param": 220, "process_weight_config": 220, "global_config": 220, "local_config": 220, "default_config": 220, "pruners_info": 220, "process_yaml_config": 220, "check_key_valid": 220, "template_config": 220, "user_config": 220, "process_and_check_config": 220, "process_config": 220, "parse_to_prun": 220, "keep": [220, 354], "quantizationmod": 221, "easili": [222, 361, 362], "finetun": [222, 343, 345, 347, 380], "basetrain": 222, "builtin_train_func": 222, "automativ": 222, "low": [222, 343, 347, 361, 368, 370, 379, 382, 391], "achiev": [222, 343, 364, 379], "point": [222, 227, 228, 330, 354, 362, 363, 367, 370, 382], "automat": [222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 331, 342, 352, 353, 354, 362, 375], "pruningconf": 222, "smaller": [222, 344, 367, 381], "config_list": 222, "optimizt": 222, "create_optimizer_builtin": 222, "resume_from_checkpoint": 222, "optuna": 222, "ignore_keys_for_ev": 222, "tor": 222, "checkpoint": [222, 227], "present": [222, 227, 370], "state": [222, 227, 228, 343, 359, 373], "hyperparamet": [222, 330], "keyword": 222, "hide": [222, 227, 228], "deprec": [222, 227, 228], "training_step": 222, "inject": [222, 363], "being": [222, 367], "fed": 222, "most": [222, 343, 354, 358, 362, 363, 364, 369, 380], "expect": [222, 227, 228, 340, 341, 371, 379], "label": [222, 227, 228, 232, 342, 376, 380], "training_step_length_adapt": 222, "compute_loss": 222, "return_output": 222, "By": [222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 351], "nas_config": 222, "baseic": 222, "callabel": 222, "auto_distil_evaluation_loop": 222, "prediction_loss_onli": 222, "ignore_kei": 222, "metric_key_prefix": 222, "eval": [222, 330, 378], "trainer_util": 222, "evalloopoutput": 222, "share": [222, 364], "work": [222, 310, 363, 380], "doe": [222, 350, 362, 363, 364, 365, 366, 369, 375], "avoid": [222, 227, 228, 358, 361, 363, 367, 369, 370, 375], "memori": [222, 357, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 379, 382], "huge": 222, "prefix": [222, 375], "export_to_onnx": [222, 343, 346], "tranfer": 222, "paramert": 222, "export_to_fp32_onnx": 222, "save_path": [222, 346], "opset_vers": [222, 346], "14": [222, 346, 359, 365, 372, 373], "do_constant_fold": [222, 346], "verbos": [222, 346], "export": [222, 343, 351, 352, 355, 380, 386], "fold": [222, 375], "export_to_bf16_onnx": 222, "export_to_int8_onnx": 222, "quant_format": [222, 346], "s8s8": [222, 346, 367], "sample_s": 222, "calibrate_method": 222, "minmax": 222, "scale_map": [222, 343], "export_to_jit": 222, "set_dynamic_config": [222, 347], "dynamic_config": [222, 347], "run_evolutionary_search": 222, "nlptrainer": [222, 343, 344, 347, 381, 382], "nlpseq2seqtrain": 222, "special": [223, 363, 369], "greater_is_bett": [225, 229, 330, 347, 378, 379, 382], "is_rel": [225, 347, 378, 382], "01": [225, 347, 373, 378, 382], "weight_ratio": [225, 229, 378, 379, 382], "modeling_bert_dynam": 226, "modeling_roberta_dynam": 226, "bert": [227, 330, 343, 344, 345, 351, 352, 353, 356, 358, 359, 362, 367, 368, 369, 370], "load_tf_weights_in_bert": 227, "tf_checkpoint_path": 227, "bertembed": [227, 228], "word": [227, 228, 345, 371], "token_typ": 227, "forward": [227, 228, 330, 352, 357, 382], "longtensor": [227, 228], "token_type_id": [227, 228], "position_id": [227, 228], "inputs_emb": [227, 228], "floattensor": [227, 228], "past_key_values_length": [227, 228], "bertselfattent": 227, "position_embedding_typ": [227, 228], "transpose_for_scor": [227, 228], "hidden_st": [227, 228], "attention_mask": [227, 228], "head_mask": [227, 228], "encoder_hidden_st": [227, 228], "encoder_attention_mask": [227, 228], "past_key_valu": [227, 228], "output_attent": [227, 228], "bertselfoutput": 227, "bertattent": 227, "prune_head": [227, 228], "bertintermedi": 227, "intermedi": [227, 330, 350, 355, 358, 371, 382], "bertoutput": 227, "bertlay": 227, "output_length": [227, 228], "always_keep_cls_token": [227, 228], "feed_forward_chunk": [227, 228], "attention_output": [227, 228], "feed": [227, 228, 344, 351], "chunk": 227, "bertencod": 227, "encod": [227, 228, 330, 352, 358], "use_cach": [227, 228], "output_hidden_st": [227, 228], "modeling_output": [227, 228], "basemodeloutputwithpastandcrossattent": [227, 228], "bertpool": 227, "pooler": [227, 228], "bertpredictionheadtransform": 227, "bertlmpredictionhead": 227, "bertonlymlmhead": 227, "sequence_output": 227, "bertonlynsphead": 227, "pooled_output": 227, "bertpretraininghead": 227, "bertpretrainedmodel": 227, "simpl": [227, 228, 343, 348, 351, 362, 370, 380], "bertforpretrainingoutput": 227, "bertforpretrain": 227, "sum": [227, 331, 344, 352, 368, 370, 371, 375], "prediction_logit": [227, 228], "sequence_length": [227, 228], "vocab_s": [227, 228], "vocabulari": 227, "seq_relationship_logit": 227, "hidden_s": [227, 228, 330], "plu": 227, "num_head": [227, 228], "averag": [227, 331, 343, 352], "bertmodel": 227, "add_pooling_lay": [227, 228], "behav": [227, 228], "well": [227, 228, 346, 382, 383], "decod": [227, 228, 372], "case": [227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 330, 344, 345, 352, 353, 361, 363, 364, 365, 375, 376], "cross": [227, 228], "describ": [227, 228, 320, 342, 364, 366, 369, 375, 378, 379], "1706": [227, 359, 373], "03762": 227, "ashish": [227, 228], "vaswani": [227, 228], "noam": [227, 228], "shazeer": [227, 228], "niki": [227, 228], "parmar": [227, 228], "jakob": [227, 228], "uszkoreit": [227, 228], "llion": [227, 228], "jone": [227, 228], "aidan": [227, 228], "gomez": [227, 228], "lukasz": [227, 228], "kaiser": [227, 228], "illia": [227, 228], "polosukhin": [227, 228], "is_decod": [227, 228], "add_cross_attent": [227, 228], "get_input_embed": [227, 228], "getter": [227, 228], "set_input_embed": [227, 228], "set_length_config": [227, 228], "set_output_attent": [227, 228], "basemodeloutputwithpoolingandcrossattent": [227, 228], "pad": [227, 228, 331, 343, 352, 367, 371, 375], "n_layer": [227, 228], "embed_size_per_head": [227, 228], "precomput": [227, 228], "speed": [227, 228, 350, 354], "up": [227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 350, 352, 354, 363, 375], "decoder_input_id": [227, 228], "those": [227, 228, 369, 381, 382], "past": [227, 228], "instead": [227, 228, 364], "get_output_embed": [227, 228], "set_output_embed": [227, 228], "new_embed": [227, 228], "next_sentence_label": 227, "legaci": [227, 228], "berttoken": 227, "uncas": [227, 330, 343, 345, 347, 355, 380], "hello": [227, 228], "my": [227, 228], "dog": [227, 228], "cute": [227, 228], "return_tensor": [227, 228, 331, 343, 347], "pt": [227, 228, 331, 343, 347, 380], "bertlmheadmodel": 227, "causallmoutputwithcrossattent": [227, 228], "prepare_inputs_for_gener": [227, 228], "bertformaskedlm": 227, "maskedlmoutput": [227, 228], "bertfornextsentencepredict": 227, "sentenc": [227, 228, 232, 331, 342, 343], "nextsentencepredictoroutput": 227, "prompt": 227, "itali": 227, "pizza": 227, "serv": 227, "restaur": 227, "unslic": 227, "next_sent": 227, "sky": 227, "blue": 227, "shorter": 227, "wavelength": 227, "light": 227, "logit": [227, 228, 330, 343, 344, 347, 351], "wa": 227, "bertforsequenceclassif": 227, "sequenceclassifieroutput": [227, 228], "regress": [227, 228, 342], "num_label": [227, 228, 343, 347], "entropi": [227, 228, 330], "bertformultiplechoic": 227, "choic": [227, 228, 345], "multiplechoicemodeloutput": [227, 228], "num_choic": [227, 228], "bertfortokenclassif": 227, "tokenclassifieroutput": [227, 228], "bertforquestionansw": 227, "question": [227, 340, 341, 343, 345, 365], "answer": [227, 228, 340, 345], "start_posit": [227, 228], "end_posit": [227, 228], "questionansweringmodeloutput": [227, 228], "span": [227, 228], "clamp": [227, 228], "account": [227, 228, 340], "expand_gath": [227, 228], "roberta": [228, 345], "robertaembed": 228, "tini": [228, 345], "tweak": 228, "create_position_ids_from_inputs_emb": 228, "directli": [228, 362, 365, 367, 368], "cannot": [228, 361, 367, 371, 376], "sequenti": [228, 354, 362, 363, 366], "robertaselfattent": 228, "robertaselfoutput": 228, "robertaattent": 228, "attenion": 228, "robertaintermedi": 228, "intermidi": 228, "robertaoutput": 228, "robertalay": 228, "robertaencod": 228, "roberata": 228, "robertapool": 228, "robertapretrainedmodel": 228, "update_keys_to_ignor": 228, "del_keys_to_ignor": 228, "robertamodel": 228, "_": [228, 330, 342, 344, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 367, 368, 369, 370, 374, 375, 378, 379, 380, 381, 382], "robertaforcausallm": 228, "robertatoken": 228, "robertaconfig": 228, "robertaformaskedlm": 228, "robertalmhead": 228, "featur": [228, 311, 330, 339, 341, 343, 344, 355, 358, 361, 368, 372, 380, 383, 392], "robertaforsequenceclassif": 228, "robertaformultiplechoic": 228, "robertafortokenclassif": 228, "robertaclassificationhead": 228, "robertaforquestionansw": 228, "quanstion": 228, "create_position_ids_from_input_id": 228, "padding_idx": 228, "non": [228, 366, 369, 371, 375, 376], "symbol": 228, "fairseq": 228, "make_posit": 228, "models": [229, 345, 379], "distributed_init": [230, 231], "gloo": 230, "world_siz": 230, "rank": 230, "init_method": 230, "master_addr": 230, "127": [230, 352, 372, 373, 382], "master_port": 230, "12345": 230, "distibut": 230, "environ": [230, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 375, 376], "tfdataload": 231, "worker_address": 231, "worker": 231, "address": [231, 311, 340, 362, 368], "treat": [231, 350], "chief": 231, "get_filepath": 231, "base_dirpath": 231, "folder": [231, 349, 350, 351, 352, 353, 355], "keras2savedmodel": 231, "kera": 231, "augment": [232, 234, 386], "extens": [232, 341, 342, 347, 348, 349, 350, 351, 377, 379, 380, 381, 383], "dataaugment": [232, 342], "augmenter_typ": [232, 342], "wai": [232, 343, 352, 353, 354, 358, 361, 363, 367, 369, 372], "enhanc": [232, 347, 366], "textgenerationaug": [232, 342], "keyboardaug": [232, 342], "aug": [232, 311, 342], "input_dataset": [232, 342], "origin_data": 232, "output_path": [232, 342], "join": [232, 342], "result_path": [232, 342], "test1": [232, 342], "cv": [232, 342], "augmenter_argu": [232, 342], "gpt2": [232, 342], "medium": [232, 311, 342, 343, 376], "data_aug": [232, 342], "text_generation_augment": 232, "raw_dataset": [232, 342, 343, 347], "No": [232, 345], "glue": [232, 342, 343], "sst2": [232, 331, 342, 343, 345, 352, 356], "eo": [232, 342], "k": [232, 321, 342, 353, 362, 364, 365, 366, 367, 369, 370, 371, 373, 375], "p": [232, 342, 343], "top_p": 232, "effect": [232, 311, 342, 343, 350, 375], "tend": 232, "toward": [232, 340], "greedi": 232, "repetition_penalti": 232, "primarili": 232, "ctrl": [232, 342, 345], "num_return_sent": 232, "entir": [232, 352, 361, 367, 368, 381], "num_sampl": 232, "condit": [232, 342, 353, 354, 377], "stop_token": 232, "mit_data_augment": 232, "nlpaug": [232, 234, 342], "librari": [232, 234, 335, 341, 362, 363, 367, 388], "help": [232, 234, 342, 343, 358, 362, 374], "machin": [232, 234, 342, 375], "learn": [232, 234, 311, 342, 355, 363, 379, 382], "project": [232, 234, 340, 341, 342], "makcedward": [232, 234], "suffix": 232, "csv": [232, 342], "column_nam": 232, "sentence1": 232, "sentence2": 232, "data_augment": [233, 342], "augmentertyp": 234, "enumer": [234, 321], "get_augmenter_from_typ": 234, "aug_typ": 234, "augment_typ": 234, "testaddclstoken": 237, "methodnam": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "runtest": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "code": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 343, 347, 348, 350, 353, 363, 364, 365, 366, 367, 372, 375, 377], "itself": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 372], "place": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 363, 368, 381], "fixtur": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "testcas": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "constructor": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 357], "author": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 377], "deconstruct": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "setup": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 342, 343, 348, 350], "teardown": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "respect": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 354, 355], "necessari": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340, 357, 371, 375], "__init__": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 350], "alwai": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 358, 367, 376], "signatur": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "failureexcept": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "fail": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "deem": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 340], "rather": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 354, 362], "longmessag": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "long": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 358], "messag": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "repr": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "failur": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "explicit": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 319, 340, 357, 363], "maxdiff": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "diff": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "difflib": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "look": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 350, 352, 363, 364], "setupclass": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "hook": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "teardownclass": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "testaddembed": 238, "testattentionreshap": [239, 240, 286, 289], "testtorchmodel": [241, 255], "testbinaryop": 242, "testtorchop": [243, 245, 251, 254, 262, 263, 265, 267, 268, 277, 280, 282, 291, 292, 294, 299, 303], "testcastto": 244, "testconvreshap": 246, "testdecoderattnreshap": 247, "testdispatchertuningacc": 248, "testdispatchertuningthroughput": 249, "testdynamicquant": 250, "testembeddingbag": 252, "testexecutionopt": 253, "testgraphdispatch": 256, "testinsertinputouputdata": 257, "testissupportedonnxgraph": 258, "testlastlayershap": 259, "testlayernormwithreducemean": [260, 288, 290], "testlayernormwithtranspos": 261, "testtorchlinear": 264, "testmain": 266, "testmatmulwithbiasrelu": 269, "testmatmulwithbiassigmoid": 270, "testmatmulwithbiastanh": 271, "testmergedembeddingbag": 272, "testonnxutil": 274, "testoperatoradaptor": 275, "testop": 276, "testpaddingsequ": 278, "testpatterndispatch": 279, "testpositionembed": 281, "testprimitivecacheacc": 283, "testprimitivecachethroughput": 284, "testqkvmerg": 285, "testquantonnxexecut": 287, "teststartendlogit": 293, "testtextencod": 295, "testtextencoderbf16": 296, "testtfutil": 297, "testtokentypeembed": 298, "testtransposebatchmatmul": 300, "testunet": 301, "testunetbf16": 302, "testvaedecod": 304, "testvaedecoderbf16": 305, "testweightsharingacc": 306, "testweightsharingdispatchertuningacc": 307, "testweightsharingdispatchertuningthroughput": 308, "testweightsharingthroughput": 309, "issu": [310, 330, 337, 340, 341, 343, 368, 382, 390], "center": 310, "resolv": 310, "guidelin": 310, "innov": [311, 343], "toolkit": [311, 343, 345], "particular": 311, "4th": [311, 343], "xeon": [311, 343, 345, 348, 361, 370, 373, 377, 382], "scalabl": [311, 343, 345, 348, 362], "processor": [311, 343, 345, 348, 359, 373], "sapphir": [311, 343, 348], "rapid": [311, 343, 348], "codenam": 311, "seamless": [311, 343], "experi": [311, 340, 343, 365, 370, 371], "extend": [311, 343, 364], "leverag": [311, 330, 343, 344, 347], "advanc": [311, 330, 340, 343, 360, 372], "softwar": [311, 343, 377], "optim": [311, 328, 330, 331, 343, 344, 345, 346, 347, 348, 351, 354, 355, 356, 362, 363, 364, 366, 378, 379, 380, 381, 382], "uniqu": [311, 343], "awar": [311, 343], "runtim": [311, 321, 343, 372, 375, 382], "releas": [311, 343, 387], "neurip": [311, 343], "2022": [311, 343, 359, 373], "paper": [311, 343, 347], "distilbert": [311, 330, 343, 345, 347, 355, 380], "quala": [311, 343, 345, 347], "minilm": [311, 343, 345, 347], "2021": [311, 343], "pre": [311, 343, 354, 364, 374], "diffus": [311, 343, 345, 367], "gpt": [311, 342, 343, 345], "j": [311, 343, 345, 349, 350, 351, 360, 366, 371, 372, 375], "6b": [311, 343, 345], "neox": [311, 343], "bloom": [311, 343], "176b": [311, 343], "t5": [311, 343, 345], "flan": [311, 343], "workflow": [311, 343, 344, 353, 355, 369], "setfit": [311, 343], "sentiment": [311, 343], "analysi": [311, 343], "dlsa": [311, 343], "neuralchat": [311, 343], "chatbot": [311, 343], "through": [311, 331, 343, 350, 362, 365, 366, 367, 372], "effici": [311, 343, 347], "peft": [311, 343], "blog": [311, 343], "publish": [311, 340, 343, 377], "april": 311, "2023": [311, 377], "tech": 311, "artifici": 311, "intellig": 311, "ai": [311, 343], "With": [311, 370, 382], "mlperf": 311, "bar": 311, "5x": 311, "commun": [311, 340], "mleffici": [311, 343], "dec": [311, 343], "nov": [311, 343], "coher": [311, 368], "novemb": 311, "alibaba": 311, "deep": [311, 342, 343, 355, 363, 379, 382], "purif": 311, "kernel": [312, 321, 339, 351, 352, 357, 359, 361, 362, 363, 365, 366, 368, 369, 370, 371, 372, 373, 374, 392], "namespac": [318, 319, 320, 321], "jd": [318, 319, 320, 321, 363], "engine_t": 318, "cpu_engine_t": 318, "gpu_ocl_engine_t": 318, "inlin": [318, 319, 320, 321, 362], "engine_kind": [318, 320, 363], "runtime_kind": [318, 320], "virtual": [318, 319, 320, 357, 362, 363], "get_engine_kind": 318, "get_runtime_kind": 318, "std": [318, 319, 320, 321, 360, 362, 363], "vector": [318, 319, 320, 321, 357, 360, 362, 363, 364, 366, 369, 371], "impl_list_item_t": [318, 319], "get_implementation_list": 318, "operator_desc": [318, 319, 322, 360], "op_desc": [318, 319, 360, 363], "create_kernel": 318, "shared_ptr": [318, 319, 357], "kernel_t": [318, 319], "stream_t": 318, "create_stream": 318, "create_memory_storag": 318, "memory_storage_t": 318, "protect": [318, 319], "engine_kind_": [318, 320], "runtime_kind_": [318, 320], "cpu_inst": 318, "null_inst": 318, "storag": 318, "empty_list": 318, "typenam": [319, 321], "arg_t": 319, "void": [319, 320, 321, 357, 360, 362, 363, 364], "proxy_bas": 319, "hpp": [319, 320, 321, 353, 360, 375], "proxi": [319, 335, 360, 367, 388], "anyth": 319, "similar": [319, 354, 362, 365, 366, 368, 369, 381], "onednn": [319, 357], "struct": [319, 321, 362, 363], "oneapi": [319, 357, 372], "dnnl": [319, 353, 357], "136": 319, "reset_sp": 319, "sp": 319, "get_sp": 319, "create_proxy_object": 319, "result_ref": 319, "privat": [319, 320, 340, 351, 357, 361, 362, 363, 368], "member": [319, 320, 321, 340, 357, 362, 363], "data_handle_": 319, "kernel_desc_proxi": 319, "kernel_desc_t": 319, "real": [319, 353, 368, 369, 372], "attention_desc": 319, "dynamic_quant_desc": 319, "dynamic_quant_matmul_desc": 319, "eltwiseop_desc": 319, "gather_desc": 319, "layernorm_ba_desc": [319, 362], "layernormalized_spmm_desc": 319, "logsoftmax_desc": 319, "mha_dense_desc": 319, "slice_desc": 319, "softmax_desc": 319, "sparse_matmul_desc": [319, 360], "transpose_matmul_desc": 319, "transpose_mha_desc": 319, "kernel_kind": [319, 320, 363], "impl_list_": 319, "nullptr": [319, 321, 362], "kernel_proxi": 319, "dynamic_qu": 319, "dynamic_quant_matmul": 319, "eltwiseop": [319, 362, 363], "layernorm_ba": 319, "layernormalized_spmm": 319, "mha_dens": [319, 375], "slice": [319, 367], "sparse_matmul": [319, 372], "transpose_matmul": 319, "transpose_mha": 319, "kdp": 319, "rt_data": [319, 360], "size_t": [319, 321, 353, 363], "get_workspace_s": 319, "kd": [319, 330, 344], "sparse_matmul_desc_t": 319, "sparse_matmul_t": 319, "descriptor": [320, 357, 375], "ker_kind": [320, 360, 363], "kernel_prop": [320, 363], "ker_prop": [320, 360, 363], "eng_kind": [320, 360, 363], "tensor_desc": [320, 363], "ts_desc": [320, 360, 363], "unordered_map": [320, 363], "postop_attr": [320, 321, 363], "apply_postops_list": [320, 363], "rh": [320, 369], "set_binaryop_list": [320, 362], "binaryop_attr": [320, 321, 362], "binaryop_list": [320, 362], "uint64_t": 320, "impl_nthr": 320, "get_binaryop_list": [320, 362], "ker_kind_": [320, 363], "ker_prop_": [320, 363], "forward_infer": [320, 357, 363], "undef": [320, 321, 362, 363], "impl_nthr_": [320, 363], "ts_descs_": [320, 363], "attrs_": [320, 363], "apply_postops_list_": [320, 363], "binaryop_list_": [320, 362], "enum": [321, 362, 363], "attention_io": 321, "merge_src": 321, "merge_dst": 321, "q_weight": 321, "k_weight": 321, "v_weight": 321, "q_bia": 321, "k_bia": 321, "v_bia": 321, "q_scale": 321, "k_scale": 321, "v_scale": 321, "reshape_input": 321, "q_k_src2": 321, "q_k_scale": 321, "qk_v_output_zero_point": 321, "qk_v_output_scal": 321, "ssd": [321, 363, 375], "eltwiseop_param_t": [321, 363], "element_num": [321, 363], "data_typ": [321, 357, 362, 363, 375], "in_dt": 321, "out_dt": 321, "element_num_each_th": 321, "remain_el": 321, "eltwiseop_data_t": 321, "dst": [321, 357, 362, 363, 365, 366, 367, 370, 371, 375], "gather_param_t": 321, "dt": [321, 362, 363], "dt_size": 321, "int64_t": 321, "extend_mask": 321, "src_axis_s": 321, "dst_axis_s": 321, "src_size": 321, "idx_siz": 321, "outer_s": 321, "inner_s": 321, "binary_ts_s": 321, "gather_data_t": 321, "binaryop_addr": [321, 362], "16": [321, 331, 345, 346, 351, 359, 365, 366, 367, 368, 371, 372, 373, 375, 382], "spec_translnorm_typ": 321, "normal": [321, 362, 370, 389], "layernorm_ba_param_t": 321, "input_dt": [321, 362, 375], "output_dt": [321, 375], "output2_dt": 321, "spec_typ": [321, 375], "row_num": 321, "col_num": 321, "process_col": [321, 362], "direct_process_row": 321, "process_batch_per_k": 321, "ker_per_batch": 321, "batch_num": 321, "thread_elt_offset": [321, 362], "split_output": 321, "layernorm_ba_data_t": 321, "dst2": 321, "process_row": 321, "anonym": 321, "ep": 321, "1e": 321, "matmul_param_t": 321, "dim_t": 321, "m_tile": 321, "n_tile": 321, "matmul_fp8_param_t": 321, "bfloat16_t": 321, "weight_bf16": 321, "int8_t": 321, "weight_int8": 321, "float8_t": 321, "weight_fp8": 321, "weight_typ": 321, "has_gelu": 321, "thread_num": 321, "matmul_data_t": 321, "src0": [321, 375], "src1": [321, 352, 362, 375], "src2": [321, 362, 375], "matmul_u8_data_t": 321, "uint8_t": [321, 362, 363], "zp": [321, 362], "matmul_fp8_data_t": 321, "mata": 321, "matb": 321, "matc": 321, "matd": 321, "astep": 321, "bstep": 321, "cstep": 321, "dstep": 321, "kpo": 321, "matmul_io": 321, "io": [321, 357], "dst0": 321, "scale0": 321, "zp0": 321, "matmul_io_max": 321, "mean_var_reduce_param_t": 321, "bm": 321, "bn": 321, "mean_var_reduce_data_t": 321, "mean_in": 321, "var_in": 321, "mean_out": 321, "var_out": 321, "spec_softmax_typ": 321, "lut": [321, 360, 362, 363, 375], "softmax_param_t": 321, "sepc_typ": 321, "scalar_num": 321, "vec_align_len": 321, "vec_tail_len": 321, "vec_num_per_thr": 321, "vec_num_tail_thr": 321, "get_lut_exp_attr": 321, "softmax_data_t": 321, "tmp": [321, 363, 365, 367, 370], "process_vec_num": 321, "typedef": 321, "amx_params_t": 321, "amx_bf16_params_t": 321, "amx_int8_params_t": 321, "amx_inputs_t": 321, "amx_bf16f32_inputs_t": 321, "amx_bf16bf16_inputs_t": 321, "sparse_schem": 321, "scenario": [321, 342, 367], "spmm_vnni": 321, "sparse_x_dens": 321, "dense_x_spars": 321, "sparse_x_spars": 321, "subfunc_level": [321, 375], "non_kdim": 321, "kdim": 321, "subfunc_level_max": [321, 375], "constexpr": 321, "wei": [321, 367, 375], "todo": [321, 384], "yi": 321, "conflict": 321, "dst_m1": 321, "dst_m2": 321, "work_spac": 321, "vnni_param_t": 321, "spmm_type": 321, "primit": [321, 357], "jit_domain": 321, "has_bia": 321, "append_sum": 321, "output_typ": [321, 352], "tile_w": 321, "sub_func": 321, "im_start": 321, "blocksiz": 321, "indptr": 321, "welford": [321, 368], "dst_t": 321, "vnni_data_t": 321, "ptr_dens": 321, "int32_t": 321, "ptr_bia": 321, "ptr_dst": 321, "ptr_scale": 321, "ptr_dst_m1": 321, "ptr_dst_m2": 321, "num_tilem": 321, "tilem": 321, "tilen": 321, "blocks_per_group": 321, "64": [321, 330, 348, 352, 359, 367, 369, 370, 372, 373, 375], "sizeof": 321, "nnz_group": 321, "nrowptr": 321, "colidx": 321, "group_rowptr": 321, "same_src_dtyp": 321, "src_t": 321, "wgt_t": 321, "bia_t": 321, "avx512_fp32_params_t": 321, "bsc_data_t": 321, "sparse_ptr": 321, "im_end": 321, "in_start": 321, "in_end": 321, "avx512_data_t": 321, "transpose_copy_param": 321, "srcptr": 321, "dstptr": 321, "srcstride": 321, "dststride": 321, "seq_vnni_copy_param": 321, "transpose_mha_step1_param": 321, "expsum": 321, "cfg": 321, "batchk": [321, 370], "sumstep": 321, "cbatchstep": 321, "scaleab": 321, "transpose_mha_step2_param": 321, "sumptr": 321, "transpose_mha_step3_param": 321, "scalec": 321, "zeropointc": 321, "transpose_mha_io": 321, "src_k": 321, "src_q": 321, "src_v": 321, "tmp2m": 321, "sl_pad": 321, "head_num": [321, 369, 375], "head_siz": [321, 369, 375], "seq_len": [321, 343, 351, 352, 356, 369, 375], "scale_q": 321, "scale_k": 321, "scale_v": 321, "scale_dst": 321, "zp_dst": 321, "transpose_mha_io_max": 321, "arch": 330, "proposit": 330, "promis": [330, 366], "assess": 330, "128": [330, 343, 351, 352, 356, 359, 373, 375, 382], "advisor": 330, "ever": 330, "student": [330, 344, 345], "minim": [330, 344, 371], "done": [330, 344, 353, 367, 375, 382], "z": [330, 344], "distanc": [330, 344], "euclidean": [330, 344], "kullback": [330, 344], "leibler": [330, 344], "diverg": [330, 344], "assign": 330, "cal": 330, "sloss": 330, "mismatch": 330, "512": [330, 352, 366, 368, 371, 373, 375], "desir": [330, 352], "unmatch": 330, "agent": 330, "train_func_builtin": 330, "flash_distil": 330, "eval_func_builtin": 330, "els": [330, 331, 350, 357], "search_loop": 330, "model_arch_para": 330, "oob": 330, "246": 330, "intra_bottleneck_s": 330, "96": [330, 359, 373], "160": [330, 359, 372], "num_attention_head": 330, "intermediate_s": 330, "640": 330, "num_feedforward_network": 330, "mobilebert": [330, 344, 345], "kl": 330, "mse": 330, "best_model_arch": 330, "automodelforpretrain": 330, "higher_is_bett": 330, "10": [330, 342, 343, 348, 351, 352, 359, 365, 373, 375], "42": [330, 359, 373], "500": 330, "25000": 330, "mobilebert_distil": 330, "sgd": 330, "learning_r": 330, "001": 330, "mobilebert_na": 330, "5000": 330, "partial": 330, "pylint": [330, 341], "disabl": [330, 340, 359, 373, 375], "e1101": 330, "makedir": 330, "exist_ok": 330, "120": [330, 372], "240": 330, "eval_loss": [330, 347], "tfautomodelforsequenceclassif": 330, "capabl": [331, 368, 371], "physic": [331, 340, 369], "model_nam": [331, 380], "dataset_nam": 331, "autotoken": [331, 343, 380], "load_dataset": [331, 342, 343], "lambada": 331, "195": 331, "intel_extension_for_transform": [331, 343, 344, 347, 348, 350, 351, 353, 355, 358, 360, 375, 378, 379, 380, 381, 382], "summari": 331, "003": 331, "throughput": [331, 343, 359, 367], "5071": 331, "933": [331, 359], "guid": [334, 343, 344, 350, 363, 365, 387], "formerli": [335, 343, 348, 360, 388], "known": [335, 343, 360, 388], "sparselib": [335, 353, 360, 388], "high": [335, 343, 351, 360, 367, 368, 371, 388], "assembli": [335, 360, 364, 366, 371, 372, 388], "introduc": [337, 341, 361, 362, 363, 364, 365, 367, 369, 370, 371, 382, 390], "who": [337, 340, 363, 390], "might": [337, 354, 390], "profil": [337, 390, 391], "intruct": [337, 390], "met": [337, 390], "request": [337, 343, 390], "interest": 340, "foster": 340, "open": [340, 342, 351, 355], "welcom": [340, 341], "maintain": [340, 341, 343, 354, 383], "particip": [340, 364], "harass": 340, "free": [340, 362, 375], "everyon": 340, "regardless": 340, "ag": 340, "bodi": [340, 369], "ethnic": 340, "sex": 340, "characterist": 340, "gender": 340, "express": 340, "educ": 340, "socio": 340, "econom": 340, "statu": [340, 379, 382], "nation": 340, "person": 340, "appear": 340, "race": 340, "religion": 340, "sexual": 340, "orient": 340, "contribut": 340, "inclus": 340, "Being": 340, "viewpoint": 340, "gracefulli": 340, "critic": 340, "focus": 340, "empathi": 340, "unaccept": 340, "imageri": 340, "unwelcom": 340, "troll": 340, "insult": 340, "derogatori": 340, "comment": 340, "polit": 340, "attack": 340, "electron": 340, "permiss": 340, "reason": [340, 354, 357, 368], "consid": [340, 353, 361, 363, 365, 376], "inappropri": 340, "profession": 340, "clarifi": 340, "appropri": [340, 350, 362, 370], "fair": 340, "action": 340, "edit": 340, "reject": 340, "wiki": 340, "align": [340, 361, 363, 371], "ban": 340, "temporarili": 340, "perman": 340, "threaten": 340, "offens": 340, "harm": [340, 371], "offici": 340, "mail": 340, "post": [340, 352, 375], "via": [340, 362, 365, 372], "social": 340, "media": 340, "act": [340, 366], "appoint": 340, "onlin": [340, 343, 368], "offlin": [340, 365, 371, 382], "event": 340, "further": [340, 347, 353, 366], "abus": 340, "report": [340, 341, 343], "contact": [340, 383], "complaint": 340, "review": [340, 341], "investig": [340, 371], "circumst": 340, "team": 340, "oblig": 340, "confidenti": 340, "regard": 340, "incid": 340, "polici": [340, 387], "good": [340, 364, 365], "faith": 340, "temporari": [340, 369], "repercuss": 340, "leadership": 340, "faq": 340, "page": [340, 341, 343, 347], "send": 341, "flake8": 341, "autopep8": 341, "clean": 341, "bug": [341, 343], "jira": 341, "ticket": 341, "xxx": [341, 343], "risk": 341, "pr": [341, 375], "reproduc": 341, "submit": [341, 343], "intend": 341, "safe": 341, "collabor": 341, "adher": 341, "tool": [342, 343, 345, 352, 360, 375], "integr": [342, 391], "lab": 342, "pip": [342, 343, 348, 356], "clone": [342, 343, 348, 349, 350], "cd": [342, 343, 348, 349, 350, 351, 356, 360, 372, 375], "submodul": [342, 343, 348, 349, 351], "recurs": [342, 343, 348, 349, 351, 358], "dev": 342, "data_fil": 342, "delimit": [342, 375], "asserttru": 342, "len": [342, 350, 351, 358, 369], "column": [342, 361, 366, 368, 371, 381], "conduct": 342, "deploy": [342, 343, 347, 353, 356], "ocraug": 342, "spellingaug": 342, "contextualwordembsforsentenceaug": 342, "xl": 342, "xlnet": [342, 345], "Not": [342, 366], "enough": [342, 367, 382], "rescu": 342, "natur": [342, 343, 345, 368], "sst": [342, 343, 345, 347, 380], "txt": [342, 343, 348, 351, 353, 356, 372], "w": [342, 351, 352, 353, 361, 364, 370], "fw": 342, "clm": [342, 345], "train_fil": 342, "validation_fil": 342, "model_dir": 342, "python3": [342, 349], "run_clm": 342, "do_train": 342, "do_ev": 342, "overwrite_output_dir": 342, "secondli": 342, "training_set": 342, "line": [342, 350, 353, 361, 368, 369, 371, 376], "repetit": 342, "penalti": 342, "platform": [343, 374, 382], "particularli": 343, "gen": [343, 363], "imag": [343, 345, 355, 358, 365, 371], "becom": [343, 354, 371], "wide": [343, 344, 363, 364, 382], "art": 343, "popular": 343, "visit": [343, 359, 373], "skylak": 343, "cascad": [343, 348], "lake": [343, 348], "ic": 343, "cooper": [343, 367], "seri": [343, 362, 365, 375], "hbm": 343, "develop": [343, 357], "easi": [343, 353, 355], "rich": 343, "demonstr": [343, 345, 347, 369, 371], "extrem": [343, 347], "significantli": [343, 368, 370], "cento": [343, 348], "ubuntu": [343, 348, 359, 373], "04": [343, 345, 348, 359, 373], "window": [343, 349], "r": [343, 348, 356, 359, 373, 382], "succeed": 343, "grep": 343, "matrix": [343, 347, 361, 364, 365, 366, 368, 369, 370, 371, 375, 381, 385], "23": [343, 365, 373], "load_metr": 343, "np": 343, "automodelforsequenceclassif": [343, 347], "evalpredict": 343, "english": [343, 345, 347, 380], "lambda": 343, "label2id": [343, 347], "id2label": [343, 347], "neg": [343, 347, 375], "pred": 343, "argmax": [343, 347], "label_id": 343, "q_config": [343, 347, 382], "eval_accuraci": [343, 344, 347, 381], "tmp_trainer": 343, "enable_executor": [343, 346], "neural_engin": [343, 347, 349, 350, 351, 352, 353, 355, 358, 360, 375], "set_log_fil": 343, "load_graph": 343, "dummydataload": 343, "compute_perform": 343, "glog_minloglevel": [343, 351, 356], "input_model": [343, 352, 355, 356], "warm_up": 343, "p50": 343, "50": [343, 372], "p90": 343, "90": [343, 345, 352, 359], "p99": 343, "99": [343, 345, 373], "sec": [343, 359], "tutori": [343, 351], "resourc": [343, 344, 364], "catalog": 343, "brand": [343, 377], "claim": [343, 377], "properti": [343, 351, 377], "trademark": 343, "larg": [344, 345, 358, 359, 361, 364, 367, 368, 369, 375], "signific": 344, "expens": 344, "deploi": [344, 391], "power": [344, 345], "mobil": 344, "shown": [344, 353, 366, 370, 371], "produc": [344, 371], "instruct": [344, 354, 362, 365, 367, 370, 371, 372, 375, 382], "besid": [344, 363], "often": 344, "patient": 344, "compact": 344, "agnost": 344, "summar": [344, 345], "usual": [344, 354, 361, 371, 382], "1x1": [344, 353], "d_conf": [344, 347], "tune_metr": [344, 381], "metric_": 344, "classifi": 344, "distillation_conf": 344, "distilled_model": 344, "intermediatelayersloss": 344, "meanwhil": [345, 361], "posttrainingdynam": [345, 346, 382], "wikitext": 345, "10004": [345, 346], "xsum": 345, "cnn": 345, "cnn_dailymail": 345, "dm": 345, "lambdalab": 345, "sd": 345, "pokemon": 345, "mlm": 345, "plm": 345, "eleutherai": 345, "neo": 345, "125m": 345, "sshleifer": 345, "wip": [345, 365], "star": 345, "ehdwns1516": 345, "uncased_swag": 345, "swag": 345, "squad": 345, "valhalla": 345, "longform": 345, "4096": [345, 373], "squadv1": 345, "lvwerra": 345, "pegasu": 345, "samsum": 345, "textattack": [345, 355], "mrpc": [345, 355, 356], "echarlaix": 345, "acc91": 345, "d37": 345, "hybrid": 345, "elast": 345, "conll03": 345, "conll2003": 345, "small": [345, 353, 367, 369], "translat": 345, "wmt16": 345, "helsinki": 345, "opu": 345, "mt": [345, 374], "en": 345, "ro": 345, "quantizationawaretrain": [345, 346], "maskinun": 345, "distilgpt2": 345, "rocketknight1": 345, "dslim": 345, "ner": 345, "mb": 345, "f1": [345, 378], "gflop": [345, 373, 376], "speedup": 345, "compar": [345, 361, 364, 375, 382], "415": [345, 359], "47": [345, 359, 373], "88": [345, 359, 372, 373], "58": [345, 373], "56": [345, 372, 373], "35": [345, 359, 373], "1x": 345, "la": [345, 364], "minilmv2": 345, "115": 345, "89": [345, 373], "28": [345, 359, 365, 373], "76": [345, 372, 373], "33x": 345, "269": 345, "253": 345, "252": [345, 372], "202": 345, "104": 345, "34": [345, 373], "87": [345, 373], "11": [345, 348, 356, 365, 373], "44": [345, 352, 359, 372, 373], "49": [345, 358, 359, 373], "94x": 345, "84": [345, 373], "85": [345, 359, 373], "21x": 345, "315": 345, "251": [345, 373], "242": [345, 359, 373], "159": [345, 372], "142": [345, 373], "33": [345, 373], "86": [345, 373], "68": [345, 372, 373], "41": [345, 359, 373], "55": [345, 372, 373], "82x": 345, "amount": [345, 364], "torchprofil": 345, "platinum": [345, 359, 373], "8280": 345, "unstructur": [345, 381], "nbsp": [345, 359, 373], "qnli": 345, "qqp": 345, "mnli": 345, "v1": 345, "tinybert_general_4l_312d": 345, "distilroberta": 345, "cola": 345, "krishna2020": 345, "googl": 345, "wikipedia": 345, "prajjwal1": 345, "approch": 345, "pruneofa": 345, "patternlock": [345, 381], "bhadresh": 345, "savani": 345, "emot": 345, "fac": 345, "mini": [345, 352, 356, 359], "gchhablani": 345, "philschmid": 345, "l6": 345, "h384": 345, "moshew": [345, 356], "80": [345, 352, 359, 373], "1x4": [345, 371], "desigh": 346, "32": [346, 351, 359, 365, 366, 368, 369, 370, 371, 372, 373, 375], "bit": [346, 347, 361, 362, 368, 371, 382], "bfloat": 346, "fetch": [346, 361, 364], "flag": 346, "enable_bf16": 346, "bfloat16": 346, "qlinear": [346, 355], "u8s8": 346, "u8u8": 346, "highli": 346, "suggest": [346, 362], "quick": [347, 350], "p_conf": [347, 381], "reduct": [347, 366, 369], "accommod": 347, "budget": 347, "tradeoff": [347, 365], "dynamic_length_config": 347, "aim": [347, 350, 352, 354], "opportun": 347, "hw": 347, "sw": 347, "satisfi": [348, 358, 367], "success": 348, "recommend": [348, 350, 353, 356, 358, 368, 372], "protobuf": [348, 356], "nightli": 348, "conda": [348, 356], "visual": 348, "studio": 348, "compat": 348, "icelak": 348, "futur": [348, 355, 362, 363, 372], "ipex": [348, 382], "13": [348, 359, 365, 373], "linux": 349, "gcc": 349, "cmake": [349, 351, 360, 372, 375], "repo_path": 349, "mkdir": [349, 351, 360, 372, 375], "dpython_execut": 349, "dne_with_sparselib": [349, 375], "neural_engine_bin": 349, "neural_engine_pi": [349, 353], "cpython": 349, "37m": 349, "x86_64": 349, "gnu": 349, "libkernellib": 349, "libneural_engin": 349, "pure": [349, 363], "certain": [350, 358], "simplifi": [350, 354], "attach": [350, 358], "distilbert_bas": 350, "assum": [350, 358, 364], "command": [350, 351, 355, 376], "repo": [350, 375], "instal": [350, 387], "These": [350, 354, 358, 364, 370], "roughli": [350, 367], "divid": [350, 358, 361, 366, 367, 370, 376], "categori": [350, 352], "dst_shape": [350, 351, 357], "father": 350, "keep_dim": 350, "ax": [350, 369], "come": 350, "rewrit": 350, "_attr": 350, "successfulli": [350, 358], "forget": [350, 354, 357], "reinstal": 350, "enter": 350, "you_work_dir": 350, "noth": [350, 358], "wrong": [350, 358], "anoth": [350, 354, 372], "correctli": 350, "distil_bert_bas": 350, "pattern_mapping_config": 350, "div": [350, 354], "even": [350, 361], "delv": 350, "recogn": [350, 391], "put": [350, 351, 354], "namedtupl": 350, "__call__": 350, "retriev": 350, "actual": [350, 351, 368], "equival": [350, 371], "supported_pattern": 350, "influenc": [350, 354], "arbitrari": 350, "pattern_dict": 350, "new_node_nam": 350, "ret_old_nod": 350, "talk": 350, "denomin": 350, "numer": [350, 382], "stabil": 350, "_set_attr": 350, "ln_node_idx": 350, "meet": [350, 365, 367, 371], "finish": [350, 354, 356], "yourself": [350, 358], "seq": [351, 369], "bert_model": 351, "30522": 351, "1024": [351, 352, 353, 373, 375], "125018112": 351, "slightli": 351, "activ": [351, 355, 356, 361, 365, 366, 367, 370, 375, 382], "throught": 351, "numactl": 351, "bind": 351, "omp_num_thread": 351, "session": 351, "close": 351, "again": [351, 368], "nerual": 351, "cc": 351, "cmakelist": 351, "reus": [351, 367], "engine_integr": 351, "itrex": 351, "cp": 351, "nlp_executor": 351, "neural_engine_exampl": 351, "ne": 351, "root": 351, "ne_root": 351, "project_source_dir": 351, "link": [351, 357, 381], "lib": 351, "runtime_output_directori": 351, "add_execut": 351, "target_include_directori": 351, "boost_inc_dir": 351, "target_link_librari": 351, "cmake_thread_libs_init": 351, "gflag": 351, "dir": 351, "set_target_properti": 351, "analyz": 352, "let": [352, 357, 364, 365], "readm": [352, 355], "run_executor": [352, 356], "model_and_token": [352, 355, 356], "Of": [352, 358, 364], "cours": [352, 358, 364], "proflil": 352, "latanc": 352, "perf": [352, 371, 375, 376], "perfrom": 352, "chrome": 352, "tell": [352, 354, 362, 363], "inst": 352, "pref": 352, "semi": 352, "70": [352, 359], "256x256": [352, 375], "settabl": 352, "256x1024": 352, "1024x256": 352, "gelu_tanh": [352, 357], "add_37": 352, "116": [352, 373], "641": 352, "00": 352, "075": 352, "0375": 352, "comparison": [352, 371], "185": 352, "801": 352, "693": 352, "366": 352, "content": 352, "part1": [352, 357], "modif": 352, "xlsx": 352, "titl": [352, 377], "model_infer": 352, "friendli": [352, 367, 368], "000": 352, "wall": 352, "durat": 352, "17": [352, 359, 365, 373], "138": 352, "iteration4": 352, "726": 352, "phrase": 352, "0m": 352, "perm": [352, 369], "add_284": 352, "028": [352, 373], "044": 352, "reshape_tim": 352, "004m": 352, "forward_tim": 352, "044m": 352, "input_tensor_nam": 352, "matmul_357": 352, "matmul_358": 352, "matmul_346": 352, "input_typ": 352, "f32": [352, 357], "input_shap": [352, 353, 375], "output_tensor_nam": 352, "output_shap": 352, "append_op": 352, "src1_perm": 352, "try": [353, 382], "pictur": [353, 361, 374], "bring": [353, 366, 370, 371], "merg": [353, 358], "off": 353, "model_path": 353, "isa": [353, 360, 362, 367, 370, 371, 372], "int8_model_path": 353, "shape_0": 353, "shape_1": 353, "shape_2": 353, "enlarg": 353, "subsequ": [353, 367, 370], "remark": 353, "micro": [353, 361, 366, 371], "oc": [353, 375], "mk": 353, "kn": 353, "nhwc": 353, "nxhxw": 353, "h": 353, "nk": 353, "km": 353, "mmkmb": 353, "mmxmb": 353, "fulfil": 353, "omp": 353, "higher": [353, 369, 371, 375, 382], "unrol": [353, 364, 366], "know": [353, 365], "disk": [353, 355], "dp": 353, "executionopt": 353, "enable_op_tun": 353, "execution_opt": 353, "engine_dispatch_t": 353, "workspac": 353, "tabl": [353, 363, 371], "row": [353, 364, 365, 367, 371, 381], "rest": [353, 354, 358, 369, 371], "hash": [353, 362], "kernel_config": [353, 375], "kernel_nam": [353, 375], "3025159985633461085": 353, "40": [353, 359], "14124194128933833351": 353, "thing": 353, "affect": [353, 367, 370, 376], "simul": [353, 371, 372], "warmup_it": 353, "num_iter": 353, "dispatch_table_file_root": 353, "file_root": 353, "script": [353, 355, 374], "prevent": 353, "imprecis": 353, "purpos": [354, 358, 362, 367], "realiz": 354, "suppli": [354, 358], "recognit": [354, 358], "embeddings_reshap": 354, "said": 354, "thought": 354, "st": 354, "nd": 354, "copi": [354, 369], "greater": [354, 378, 379], "sent": 354, "written": 354, "phenomenon": 354, "Its": 354, "situat": [354, 368], "nod": 354, "leav": [354, 369, 371, 375], "old_node_index": 354, "_get_pattern_info": 354, "_create_out_pattern": 354, "_replace_pattern": 354, "emitt": 355, "netron": 355, "bash": [355, 356], "prepare_model": [355, 356], "sh": [355, 356, 376], "ptq": 355, "ir_path": 355, "focu": [356, 369, 378], "home": 356, "distilbert_base_uncas": 356, "env": 356, "prepare_dataset": 356, "shell": 356, "tokenizer_dir": 356, "data_dir": 356, "geluoper": 357, "destructor": 357, "operatorconfig": 357, "algorithm_": 357, "eng_": 357, "eltwise_forward": 357, "gelu_p_": 357, "src_m_": 357, "dst_m_": 357, "attrs_map": 357, "operator_conf_": 357, "becuas": 357, "src_shape": 357, "dst_tensor_ptr": 357, "set_shap": 357, "stride": [357, 361], "src_stride": 357, "getstrid": 357, "dst_stride": 357, "desc": [357, 362, 363], "src_md": 357, "dst_md": 357, "part2": 357, "gelu_algorithm": 357, "gelu_erf": 357, "eltwise_gelu_erf": 357, "eltwise_gelu_tanh": 357, "gelu_d": 357, "prop_kind": 357, "primitive_desc": 357, "gelu_pd": 357, "unrefernc": 357, "manag": 357, "strictli": 357, "alia": 357, "src_data": 357, "dst_data": 357, "mutable_data": 357, "data_ptr": 357, "stream": 357, "set_data_handl": 357, "const_cast": 357, "reinterpret_cast": 357, "memory_args_": 357, "dnnl_arg_src": 357, "dnnl_arg_dst": 357, "unref": 357, "unref_tensor": 357, "especi": [357, 371], "int8_lut_optim": 357, "int8_lut_acc_test": 357, "set_dtyp": 357, "register_operator_class": 357, "rule": 358, "recruit": 358, "ln_pattern": 358, "grow": 358, "concis": 358, "intuit": [358, 367], "choos": 358, "prefer": [358, 369], "longer": 358, "ones": 358, "op_type1": 358, "op_type2": 358, "type1": 358, "type2": 358, "elig": 358, "a_node_name_1": 358, "b_node_name_1": 358, "c_node_name_1": 358, "a_node_name_2": 358, "b_node_name_2": 358, "c_node_name_2": 358, "a_node_name_n": 358, "b_node_name_n": 358, "c_node_name_n": 358, "bert_large_model_path": 358, "layer_0": 358, "layer_1": 358, "layer_2": 358, "afterward": 358, "volatil": 358, "incorrect": 358, "outcom": 358, "Or": 358, "exactli": 358, "screen": 358, "occur": [358, 361, 368], "alreadi": 358, "moment": 358, "varianc": [358, 368], "batchnorm": 358, "mul_1": 358, "mul_2": 358, "add_1": 358, "07": [359, 373], "8375c": [359, 373], "aw": [359, 373], "c6i": [359, 373], "12xlarg": [359, 373], "vari": [359, 373], "factor": [359, 373], "www": [359, 373], "batchsiz": 359, "2652": 359, "36": [359, 373], "513": 359, "lt": [359, 373], "50m": 359, "2181": 359, "43": [359, 373], "628": 359, "1719": 359, "91": [359, 373], "75": [359, 373], "1487": [359, 373], "255": [359, 370, 382], "1220": 359, "39": [359, 373], "143": 359, "1304": 359, "46": [359, 373], "066": 359, "1102": [359, 373], "870": 359, "487": 359, "750": 359, "82": [359, 372, 373], "690": [359, 373], "188": 359, "910": [359, 373], "921": [359, 373], "729": 359, "71": [359, 372, 373], "619": 359, "38": [359, 372, 373], "821": [359, 373], "499": 359, "429": [359, 372], "936": [359, 373], "680": 359, "318": [359, 373], "557": 359, "262": 359, "467": 359, "589": 359, "405": 359, "339": 359, "473": 359, "119": [359, 373], "389": 359, "945": [359, 373], "360": 359, "274": 359, "843": 359, "259": [359, 372, 373], "442": 359, "241": 359, "364": 359, "016": [359, 373], "303": 359, "266": 359, "45": [359, 373], "05": [359, 373], "221": 359, "973": 359, "112": [359, 373], "349": 359, "938": [359, 373], "275": [359, 372], "614": 359, "217": 359, "37": [359, 373], "039": 359, "301": 359, "166": 359, "033": 359, "320": 359, "769": 359, "263": 359, "724": [359, 373], "207": 359, "819": [359, 373], "181": 359, "021": 359, "979": [359, 373], "74": [359, 373], "235": 359, "63": [359, 373], "091": 359, "51": [359, 373], "914": [359, 373], "698": [359, 373], "905": [359, 373], "8972": 359, "076": [359, 373], "20m": 359, "7192": 359, "19": [359, 365, 373], "906": 359, "5482": 359, "509": 359, "4808": 359, "952": 359, "3678": 359, "409": 359, "4750": 359, "975": [359, 373], "3647": 359, "867": 359, "2921": 359, "587": [359, 373], "2576": 359, "18": [359, 365, 373], "768": [359, 373], "2131": [359, 373], "913": [359, 373], "2804": 359, "096": 359, "2263": 359, "037": 359, "1938": 359, "756": [359, 373], "1581": 359, "15": [359, 365, 366, 371, 373], "1409": 359, "015": 359, "2116": 359, "113": 359, "1777": 359, "972": [359, 373], "1474": 359, "392": 359, "1278": 359, "1137": 359, "752": 359, "1594": 359, "124": 359, "1347": [359, 373], "1126": 359, "993": [359, 373], "258": 359, "890": [359, 373], "877": [359, 373], "1319": 359, "1086": 359, "931": [359, 373], "545": 359, "833": 359, "332": [359, 373], "747": [359, 373], "141": 359, "1106": [359, 373], "31": [359, 365, 366, 373], "924": 359, "446": 359, "719": 359, "633": 359, "501": 359, "816": 359, "961": 359, "549": 359, "807": 359, "868": [359, 373], "701": [359, 373], "117": 359, "613": 359, "618": 359, "515": 359, "75384": 359, "989": 359, "1m": 359, "55628": 359, "917": 359, "49120": 359, "957": [359, 373], "41598": 359, "39218": 359, "31211": 359, "788": [359, 373], "28399": 359, "848": 359, "24910": 359, "966": 359, "20505": 359, "18575": 359, "865": 359, "25485": 359, "987": 359, "17468": 359, "16771": 359, "971": [359, 373], "16004": 359, "996": [359, 373], "13381": 359, "894": [359, 373], "13990": 359, "863": [359, 373], "13154": 359, "12535": 359, "12102": 359, "998": 359, "8426": [359, 373], "8736": 359, "8282": 359, "967": 359, "6659": 359, "898": [359, 373], "6477": 359, "6290": 359, "974": [359, 373], "8598": 359, "6449": 359, "935": [359, 373], "6263": [359, 373], "965": [359, 373], "6080": 359, "988": 359, "3684": 359, "817": [359, 373], "6246": 359, "978": 359, "6374": 359, "947": [359, 373], "6026": 359, "3300": [359, 373], "926": 359, "3226": 359, "6221": 359, "958": 359, "6322": 359, "6081": 359, "985": [359, 373], "3368": 359, "3264": 359, "distillbert": 359, "15460": 359, "296": 359, "10m": 359, "13129": 359, "363": 359, "11323": 359, "578": [359, 373], "10072": 359, "599": 359, "8689": 359, "7901": 359, "205": [359, 373], "6737": 359, "562": 359, "5440": 359, "904": [359, 373], "4920": 359, "786": [359, 373], "4460": 359, "053": 359, "5280": 359, "179": 359, "4339": 359, "244": [359, 372], "3634": [359, 373], "928": 359, "3255": 359, "211": [359, 373], "2928": 359, "197": [359, 373], "3681": 359, "527": [359, 373], "2965": [359, 373], "106": [359, 373], "2741": 359, "862": [359, 373], "2351": 359, "2150": 359, "282": 359, "2918": 359, "316": 359, "2505": [359, 373], "602": 359, "2010": [359, 373], "995": 359, "1872": 359, "609": [359, 373], "2409": 359, "983": 359, "1993": 359, "013": 359, "1671": [359, 373], "627": 359, "1484": 359, "131": 359, "1342": [359, 373], "1910": 359, "456": [359, 373], "1659": 359, "687": 359, "1293": 359, "245": [359, 373], "1230": 359, "798": 359, "1091": 359, "261": 359, "1627": 359, "908": 359, "1397": 359, "684": 359, "1130": 359, "1081": 359, "353": 359, "982": [359, 373], "187": [359, 372], "manufactur": [359, 373], "amazon": [359, 373], "ec2": [359, 373], "bio": [359, 373], "1021": [359, 373], "microcod": [359, 373], "0xd000331": [359, 373], "irq": [359, 373], "balanc": [359, 373], "xeonplatinum": 359, "90ghz": [359, 373], "9ghz": [359, 373], "5ghz": [359, 373], "thread": 359, "socket": [359, 373], "numa": [359, 373], "turbo": [359, 373], "frequencygovern": [359, 373], "workdir": 360, "dne_with_test": 360, "ON": [360, 375], "ut": [360, 363], "dne_with_sparselib_onli": [360, 375], "dne_with_sparselib_benchmark": [360, 375], "test_spmm_vnni_kernel": 360, "box": 360, "profl": [360, 372], "op_attr": [360, 362, 363, 369], "spmm_desc": 360, "spmm_kern": 360, "data0": 360, "data1": 360, "data2": 360, "data3": 360, "data4": 360, "vnni": [360, 361, 365, 369, 370, 373, 375, 382, 389], "amx": [360, 367, 370, 375, 389], "residu": 360, "avx512": [360, 361, 365, 382], "mha": [360, 389], "avx512f": [360, 369, 375, 389], "spmm": [361, 369, 375], "deeplearn": 361, "multipli": [361, 367, 371, 382], "adopt": [361, 366, 371], "modern": 361, "spatial": [361, 367], "program": [361, 377], "64byte": 361, "organ": 361, "associ": 361, "access": [361, 366, 367], "b1": 361, "b2": 361, "simd": [361, 362, 366], "evenli": 361, "discontinu": 361, "fulli": [361, 370, 371], "worst": 361, "veri": [361, 363, 364, 367], "miss": [361, 371], "frequent": 361, "destin": [361, 366, 369, 375], "l1": 361, "l2": [361, 367, 375], "perhap": 361, "mxk": [361, 375], "bxm": 361, "xk": 361, "bxkxm": 361, "2d": [361, 375], "respons": [361, 367, 368, 370], "frac": [361, 369], "binaryop": 362, "dl": 362, "changeabl": 362, "operand": [362, 366], "horizont": 362, "overhead": [362, 368, 369, 370, 371], "move": 362, "binaryop_injector": 362, "postop": [362, 363, 375], "quit": 362, "eltwise_injector": [362, 363], "escap": [362, 363], "compute_vector": 362, "expos": [362, 363], "arithmet": 362, "brows": 362, "vpaddb": 362, "vaddp": 362, "unlik": 362, "ptr": [362, 363, 372], "static_addr": 362, "addr": 362, "binaryop_alg": 362, "per_channel_qu": 362, "per_channel_dequ": 362, "op_alg": [362, 363], "op_dt": 362, "alg": 362, "set_scal": 362, "set_zp": 362, "binary_injector_init": 362, "set_mask": 362, "reg64": [362, 363], "zmm": [362, 363, 366, 368, 371], "get_addr": 362, "broadcast": [362, 366, 371, 372, 375], "enable_mask": 362, "vector_comput": [362, 363], "bianryop": 362, "comput_vector": 362, "wrapper": 362, "jit_binary_injector": 362, "addr_typ": 362, "jit_gener": [362, 363], "opmask": [362, 363], "mov": [362, 372], "addr_ptr": 362, "zmm_src1": 362, "regexp": 362, "step1": [362, 363, 370], "binary_injector": 362, "step2": [362, 363, 370], "data_param": 362, "param_": [362, 363], "front": 362, "append_loop_len": 362, "zmm_byte_s": 362, "get_data_s": 362, "offset_exp": 362, "bianryop_attr_list": 362, "append_vec": 362, "binary_add": 362, "eltwis": 363, "tradit": 363, "obvious": [363, 364, 368], "useless": 363, "idea": [363, 371, 381], "xbyak": 363, "binari": [363, 370, 375, 389], "algo": 363, "aplha": 363, "sacl": 363, "postop_alg": 363, "int8_lut": 363, "postop_typ": 363, "mathemat": 363, "satur": 363, "round": [363, 382], "unus": 363, "\u03b1x": 363, "\u03b2": 363, "le": 363, "gt": 363, "eng_kind_": 363, "omp_get_max_thread": 363, "omp_get_num_proc": 363, "eltwise_injector_init": 363, "chian": 363, "escape_reg": 363, "escape_eras": 363, "eras": 363, "prepare_t": 363, "zmm_src": 363, "postop_idx": 363, "reg_idx": 363, "step0": 363, "jit_eltwiseop_t": 363, "assign_reg": 363, "eltwiseop_kd_t": 363, "op_desc_": 363, "params_": 363, "remain_task_mask": 363, "scratch_": 363, "r10": 363, "reg_src": 363, "addr_src": 363, "r15": [363, 372], "addr_dst": 363, "r14": [363, 372], "reg_param": 363, "rdi": [363, 372], "remain_element_num": 363, "rsi": 363, "getidx": 363, "alloc": [363, 364, 367], "rcx": 363, "rdx": 363, "rsp": 363, "step3": [363, 370], "preambl": 363, "load_param": 363, "vmovup": [363, 372], "postambl": 363, "fp32_gelu_attr": 363, "bf16_gelu_attr": 363, "push_back": 363, "gen_cas": 363, "data0_desc": 363, "postop_list": 363, "fp32_gelu": [363, 375], "fp32_exp": 363, "mask_mock1": 363, "reg64_mock1": 363, "zmm_mock1": 363, "fp32_exp_attr": 363, "data1_desc": 363, "bf16_gelu": 363, "bf16_exp": [363, 375], "bf16_exp_attr": 363, "dt1op1": 363, "dt2op2": 363, "hase": 363, "get_true_data": 363, "rf_data": 363, "your_kernel_log": 363, "apply_postop_list": 363, "unit_test_util": 363, "articl": [364, 382], "gpu": 364, "opencl": 364, "snippet": 364, "unintellig": 364, "understand": [364, 367], "__kernel": 364, "naive_gemm": 364, "__global": 364, "globalrow": 364, "get_global_id": 364, "globalcol": 364, "col": [364, 365, 368, 370], "over": [364, 366, 369], "acc": [364, 375, 376], "0f": 364, "mxn": [364, 370, 375], "2xk": 364, "redund": [364, 381], "asub": 364, "bsub": 364, "tile_gemm": 364, "get_local_id": 364, "get_group_id": 364, "__local": 364, "initialis": 364, "accumul": [364, 369, 371], "numtil": 364, "tiledrow": 364, "tiledcol": 364, "synchronis": 364, "barrier": 364, "clk_local_mem_f": 364, "full": [364, 377, 382], "white": 364, "figur": [364, 367, 368, 369, 371, 374], "half": [364, 370], "correspondingli": 364, "increas": 364, "workload": [364, 369], "localmemori": 364, "tight": 364, "ll": 364, "twice": [364, 370], "ping": 364, "pong": 364, "tidm": 364, "tidn": 364, "offsetm": 364, "offset": [364, 368, 369], "offsetn": 364, "areg": 364, "breg": 364, "wm": 364, "wn": 364, "lpta": 364, "tid": 364, "mod2": 364, "div2": 364, "tiledindex": 364, "indexa": 364, "indexb": 364, "veca": 364, "vecb": 364, "tt": 364, "pragma": 364, "tdpbf16p": 365, "16x32": 365, "32x16": 365, "FOR": [365, 366, 371], "TO": 365, "colsb": 365, "byte": [365, 371], "endfor": [365, 366, 371], "write_row_and_zero": 365, "zero_upper_row": 365, "zero_tileconfig_start": 365, "layout": [365, 368, 369, 370], "successor": 365, "1x16": [365, 371], "concaten": [365, 371, 375], "intrins": 365, "tileloadd": 365, "nonzero": 365, "vmovdqu32": 365, "consum": 365, "altern": [365, 371], "lot": 365, "disast": 365, "16x1": [365, 369], "greatli": [365, 370], "impact": 365, "fly": 365, "__m512i": 365, "_mm512_set_epi16": 365, "29": [365, 373], "27": [365, 373], "26": [365, 372, 373], "25": [365, 373, 375], "22": [365, 373], "21": [365, 373], "__m256i": 365, "lo": 365, "_mm256_loadu_epi": 365, "li": 365, "vec": 365, "_mm512_inserti32x8": 365, "_mm512_castsi256_si512": 365, "_mm512_permutexvar_epi16": 365, "_mm512_storeu_epi32": 365, "vfmadd": 366, "vfmadd231p": [366, 372], "degre": 366, "parallel": [366, 367, 368, 371, 375], "conting": 366, "bsc": 366, "variant": 366, "bsr": 366, "openmp": 366, "thu": [366, 382], "relief": 366, "bottleneck": [366, 368], "microkernel": 366, "peripher": 366, "implicit": 366, "technologi": 367, "among": [367, 370], "satisfactori": 367, "inevit": 367, "solv": [367, 368, 382], "facilit": [367, 370], "At": [367, 368, 370], "flexibl": 367, "divis": 367, "tdpbssd": 367, "tile_k": 367, "formula": 367, "max_tile_k": 367, "back": [367, 368, 369, 370], "extra": 367, "hope": 367, "large_wei_threshold": 367, "16xpad_n": 367, "buffer": [367, 368, 370], "tilestor": 367, "pseudo": 367, "tile_m": [367, 375], "16xn": 367, "dp_tile_n": 367, "k_dim_dp": 367, "write_tile_to_tmp_buf": 367, "dequantize_tile_on_tmp_buf": 367, "calculate_scale_on_tmp_buf": 367, "write_back_scal": 367, "quant_tile_n": 367, "quantize_on_tmp_buf": 367, "write_tile_to_dst": 367, "per_channel_dynamic_quant": 367, "desid": 367, "du": 367, "principl": 367, "possibl": 367, "premis": 367, "rate": [367, 368], "therebi": 367, "feel": [367, 375], "benefit": [367, 371, 382], "suitabl": 367, "chart": 367, "naiv": 368, "solut": [368, 371], "gap": 368, "layernrom": 368, "3d": [368, 389], "poor": 368, "fewer": 368, "wast": 368, "inconsist": 368, "scene": 368, "quarter": 368, "depict": 368, "protocol": 368, "bandwidth": [368, 370, 382], "gain": [368, 382], "brought": [368, 382], "majotr": 368, "layternorm": 368, "encapsul": 368, "ba": [368, 372, 375], "discret": 368, "append": [368, 375, 376], "overal": 368, "p2031": [369, 375], "2013": 369, "noperm": [369, 375], "p1302": [369, 375], "p2013": [369, 375], "equat": [369, 382], "dot": [369, 382], "rm": 369, "q": [369, 370], "v": [369, 370], "qk": 369, "textunderscor": 369, "nativ": 369, "sparelib": 369, "axis": 369, "conceptu": 369, "head_nun": 369, "perm2031": 369, "perm2013": 369, "perm1302": 369, "concept": [369, 371], "lh": 369, "float32": [369, 382], "illustr": 369, "inner": 369, "16x16": 369, "drawn": 369, "lighter": 369, "cell": [369, 371], "respectfulli": 369, "vnni_noperm_p2013_p1302": 369, "transpose_4b_8x8": 369, "legend": 369, "explan": 369, "contigu": 369, "ellipsi": 369, "thinner": 369, "border": 369, "bolder": 369, "color": [369, 371], "16x32x16": 369, "lead": [369, 371], "suboptim": 369, "piec": 369, "turn": 369, "abl": [369, 382], "boost": 369, "twofold": 369, "unifi": 369, "roll": 369, "logic": [370, 372], "worth": 370, "clear": 370, "fact": [370, 382], "spr": 370, "latter": 370, "2nd": 370, "clx": 370, "4x16": [370, 371], "launch": 370, "prior": 370, "iteraion": 370, "polynomi": 370, "essenti": 370, "incom": 370, "far": 370, "four": 371, "adjac": 371, "unsign": [371, 375], "sign": [371, 382], "tmp1": 371, "zeroextend16": 371, "signextend16": 371, "tmp2": 371, "tmp3": 371, "tmp4": 371, "dword": [371, 372], "transposit": 371, "discuss": 371, "typic": 371, "sai": 371, "4x4": 371, "pick": 371, "mxkxn": 371, "problem": [371, 375], "densiti": 371, "fma": 371, "bubbl": 371, "16x4": 371, "highlight": 371, "4x": 371, "talent": 371, "smart": 371, "gui": [371, 372], "swizzl": 371, "workaround": 371, "unfortun": 371, "difficulti": 371, "bad": 371, "cost": 371, "2x1": 371, "conclus": 371, "against": 371, "brief": 372, "sparse_lib_verbos": 372, "sparselib_verbos": 372, "nthr": 372, "224": [372, 373], "exec": 372, "shape_256_256_128": 372, "4658": [372, 373], "56982": 372, "itt": 372, "dne_with_sparselib_vtun": 372, "opt": 372, "latest": [372, 383], "manual": 372, "dcmake_vtune_hom": 372, "sparse_lib_vtun": 372, "ssh": 372, "analys": 372, "verifi": 372, "sparse_lib_dump": 372, "xed64": 372, "click": 372, "xdi": 372, "push": 372, "53": [372, 373], "rbx": 372, "rbp": 372, "4154": 372, "r12": 372, "4155": 372, "r13": 372, "4156": 372, "4157": 372, "dataxf": 372, "bd00040000": 372, "ebp": 372, "0x400": 372, "4c8b3f": 372, "qword": 372, "4c8b7708": 372, "0x8": 372, "4c8b6f10": 372, "0x10": 372, "1a": 372, "avx512evex": 372, "62f17d48efc0": 372, "vpxord": 372, "zmm0": 372, "62f15d48efe4": 372, "zmm4": 372, "62513d48efc0": 372, "zmm8": 372, "2c": 372, "62511d48efe4": 372, "zmm12": 372, "62f17548efc9": 372, "zmm1": 372, "62f15548efe": 372, "zmm5": 372, "3e": 372, "62513548efc9": 372, "zmm9": 372, "62511548efe": 372, "zmm13": 372, "4a": 372, "62f16d48efd2": 372, "zmm2": 372, "62f14d48eff6": 372, "zmm6": 372, "62512d48efd2": 372, "zmm10": 372, "5c": 372, "62510d48eff6": 372, "zmm14": 372, "62": [372, 373], "62c17c481006": 372, "zmm16": 372, "zmmword": 372, "62c17c48104e01": 372, "zmm17": 372, "0x40": 372, "6f": 372, "62c17c48105602": 372, "zmm18": 372, "0x80": 372, "62427d48183f": 372, "vbroadcastss": 372, "zmm31": 372, "7c": 372, "vfma": 372, "62927d40b8c7": 372, "62927540b8cf": 372, "62926d40b8d7": 372, "8e": 372, "62427d48187f04": 372, "95": [372, 373], "62927d40b8e7": 372, "9b": 372, "62927540b8ef": 372, "a1": 372, "62926d40b8f7": 372, "a7": 372, "62427d48187f08": 372, "0x20": 372, "ae": 372, "62127d40b8c7": 372, "b4": 372, "62127540b8cf": 372, "62126d40b8d7": 372, "c0": 372, "62427d48187f0c": 372, "0x30": 372, "c7": 372, "62127d40b8e7": 372, "62127540b8ef": 372, "62126d40b8f7": 372, "d9": 372, "62c17c48104603": 372, "0xc0": 372, "e0": 372, "62c17c48104e04": 372, "0x100": 372, "e7": 372, "62c17c48105605": 372, "0x140": 372, "ee": 372, "62427d48187f01": 372, "0x4": 372, "f5": 372, "fb": 372, "101": 372, "107": 372, "62427d48187f05": 372, "0x14": 372, "10e": 372, "114": 372, "11a": 372, "62427d48187f09": 372, "0x24": 372, "12d": 372, "133": 372, "139": 372, "62427d48187f0d": 372, "0x34": 372, "140": 372, "146": 372, "14c": 372, "152": 372, "62c17c48104606": 372, "0x180": 372, "62c17c48104e07": 372, "0x1c0": 372, "62c17c48105608": 372, "0x200": 372, "167": [372, 373], "62427d48187f02": 372, "16e": 372, "174": 372, "17a": 372, "180": 372, "62427d48187f06": 372, "0x18": 372, "18d": 372, "193": 372, "199": 372, "62427d48187f0a": 372, "0x28": 372, "1a0": 372, "1a6": 372, "1ac": 372, "1b2": 372, "62427d48187f0e": 372, "0x38": 372, "1b9": 372, "1bf": 372, "1c5": 372, "1cb": 372, "62c17c48104609": 372, "0x240": 372, "1d2": 372, "62c17c48104e0a": 372, "0x280": 372, "1d9": 372, "62c17c4810560b": 372, "0x2c0": 372, "1e0": 372, "62427d48187f03": 372, "0xc": 372, "1e7": 372, "1ed": 372, "1f3": 372, "1f9": 372, "62427d48187f07": 372, "0x1c": 372, "200": 372, "206": 372, "20c": 372, "212": 372, "62427d48187f0b": 372, "0x2c": 372, "219": [372, 373], "21f": 372, "225": 372, "22b": 372, "62427d48187f0f": 372, "0x3c": 372, "232": [372, 373], "238": 372, "23e": 372, "62d17c48114500": 372, "24b": 372, "62d17c48116503": 372, "62517c48114506": 372, "62517c48116509": 372, "260": 372, "62d17c48114d01": 372, "267": 372, "62d17c48116d04": 372, "26e": 372, "62517c48114d07": 372, "62517c48116d0a": 372, "27c": 372, "62d17c48115502": 372, "283": 372, "62d17c48117505": 372, "28a": 372, "62517c48115508": 372, "291": 372, "62517c4811750b": 372, "298": [372, 373], "pop": 372, "415f": 372, "29a": 372, "415e": 372, "29c": 372, "415d": 372, "29e": 372, "415c": 372, "2a0": 372, "5d": 372, "2a1": 372, "5b": 372, "2a2": 372, "avx": 372, "c5f877": 372, "vzeroupp": 372, "2a5": 372, "xed3": 372, "stat": 372, "cycl": 372, "29220": 372, "236418": 372, "118": 372, "2003": 372, "54": [372, 373], "00348609": 373, "601": 373, "00310676": 373, "675": 373, "00261406": 373, "802": 373, "00216633": 373, "968": 373, "068": 373, "00164658": 373, "1273": 373, "0112255": 373, "284": 373, "00947462": 373, "885": 373, "377": 373, "00764146": 373, "1097": 373, "78": 373, "0058452": 373, "1435": 373, "00407149": 373, "2060": 373, "0127448": 373, "658": 373, "198": 373, "0111132": 373, "754": 373, "835": 373, "00940157": 373, "892": 373, "00760217": 373, "1103": 373, "0054935": 373, "1527": 373, "044202": 373, "759": 373, "0364227": 373, "0292454": 373, "1147": 373, "0223472": 373, "1501": 373, "0149058": 373, "2251": 373, "216338": 373, "620": 373, "408": 373, "179593": 373, "345": 373, "135054": 373, "806": 373, "0946983": 373, "1417": 373, "0609701": 373, "2201": 373, "190508": 373, "704": 373, "526": 373, "159566": 373, "841": 373, "130863": 373, "1025": 373, "103927": 373, "1291": 373, "0739962": 373, "1813": 373, "0250395": 373, "753": 373, "784": 373, "0210726": 373, "895": 373, "682": 373, "0170987": 373, "0130778": 373, "1443": 373, "00923343": 373, "2044": 373, "3072": 373, "112882": 373, "668": 373, "818": 373, "0879386": 373, "858": 373, "525": 373, "068835": 373, "1096": 373, "79": 373, "0487342": 373, "1549": 373, "0317559": 373, "2377": 373, "109308": 373, "679": 373, "0922471": 373, "805": 373, "638": 373, "0759107": 373, "0558945": 373, "1329": 373, "61": 373, "0358752": 373, "2071": 373, "57": 373, "00565044": 373, "742": 373, "297": 373, "00503604": 373, "832": 373, "00447544": 373, "937": 373, "182": 373, "00368479": 373, "1138": 373, "00270954": 373, "1547": 373, "0183481": 373, "386": 373, "0154121": 373, "1088": 373, "0125696": 373, "1334": 373, "00959948": 373, "1747": 373, "72": 373, "00677631": 373, "2475": 373, "0206321": 373, "813": 373, "162": 373, "0184267": 373, "483": 373, "0164699": 373, "1018": 373, "66": 373, "0135801": 373, "1235": 373, "010552": 373, "1589": 373, "0721208": 373, "930": 373, "506": 373, "059613": 373, "1125": 373, "0483781": 373, "1387": 373, "0366748": 373, "1829": 373, "83": 373, "0248571": 373, "2699": 373, "376539": 373, "712": 373, "902": 373, "31929": 373, "840": 373, "727": 373, "261265": 373, "1027": 373, "193579": 373, "1386": 373, "118429": 373, "2266": 373, "309195": 373, "177": 373, "256619": 373, "1046": 373, "213454": 373, "1257": 373, "165192": 373, "1624": 373, "118402": 373, "2267": 373, "0402931": 373, "855": 373, "0341169": 373, "0275282": 373, "1371": 373, "0211298": 373, "1786": 373, "0150693": 373, "218765": 373, "215": 373, "180921": 373, "834": 373, "592": 373, "142778": 373, "1057": 373, "097692": 373, "1545": 373, "0620034": 373, "2435": 373, "174101": 373, "853": 373, "73": 373, "148369": 373, "1001": 373, "123554": 373, "1203": 373, "0923655": 373, "1609": 373, "0591283": 373, "2513": 373, "0074474": 373, "844": 373, "00657187": 373, "00570175": 373, "00483104": 373, "1302": 373, "00367406": 373, "1712": 373, "0247063": 373, "0207462": 373, "1213": 373, "03": 373, "0169214": 373, "0129936": 373, "1936": 373, "0090376": 373, "2784": 373, "0275881": 373, "912": 373, "0240415": 373, "77": 373, "0207876": 373, "1210": 373, "0177873": 373, "1414": 373, "0140129": 373, "1795": 373, "0994565": 373, "1012": 373, "0819725": 373, "1228": 373, "0660571": 373, "1523": 373, "0497077": 373, "2025": 373, "0341912": 373, "2944": 373, "500698": 373, "804": 373, "184": 373, "420619": 373, "287": 373, "337529": 373, "1192": 373, "94": 373, "251221": 373, "1602": 373, "158668": 373, "2537": 373, "412912": 373, "155": 373, "346369": 373, "1162": 373, "2831": 373, "1422": 373, "220585": 373, "1825": 373, "156168": 373, "2578": 373, "0538395": 373, "1051": 373, "0455066": 373, "1244": 373, "036978": 373, "1531": 373, "028483": 373, "1987": 373, "0200457": 373, "2824": 373, "283445": 373, "799": 373, "069": 373, "236101": 373, "959": 373, "302": 373, "188745": 373, "1199": 373, "135532": 373, "0845544": 373, "2678": 373, "227976": 373, "977": 373, "19463": 373, "1145": 373, "161251": 373, "1382": 373, "65": 373, "123585": 373, "1804": 373, "0840322": 373, "2653": 373, "00940534": 373, "891": 373, "00821985": 373, "1020": 373, "00701343": 373, "1196": 373, "08": 373, "00579899": 373, "1446": 373, "00464705": 373, "1805": 373, "0336342": 373, "997": 373, "629": 373, "0276086": 373, "1215": 373, "0224431": 373, "1495": 373, "09": 373, "0170807": 373, "1964": 373, "0117535": 373, "2854": 373, "0358603": 373, "0310083": 373, "1082": 373, "0260486": 373, "1288": 373, "0215163": 373, "1559": 373, "0170105": 373, "1972": 373, "133295": 373, "1006": 373, "92": 373, "111186": 373, "1207": 373, "0881114": 373, "0665519": 373, "2016": 373, "0454416": 373, "2953": 373, "611718": 373, "645": 373, "533329": 373, "430288": 373, "1247": 373, "307141": 373, "198987": 373, "2698": 373, "02": [373, 378], "556249": 373, "163": 373, "462737": 373, "1160": 373, "37537": 373, "1430": 373, "28321": 373, "1895": 373, "203901": 373, "2633": 373, "0716356": 373, "1053": 373, "0603517": 373, "1250": 373, "0490096": 373, "1540": 373, "0375683": 373, "2009": 373, "0267483": 373, "2822": 373, "3572": 373, "845": 373, "437": 373, "299561": 373, "1008": 373, "228752": 373, "1320": 373, "165648": 373, "1823": 373, "105656": 373, "2858": 373, "298907": 373, "994": 373, "529": 373, "255598": 373, "1163": 373, "20824": 373, "1427": 373, "159911": 373, "1858": 373, "111211": 373, "2673": 373, "0152997": 373, "685": 373, "358": 373, "0131446": 373, "797": 373, "0109669": 373, "956": 373, "132": 373, "00921101": 373, "00755406": 373, "1388": 373, "0553082": 373, "758": 373, "351": 373, "0458481": 373, "826": 373, "0367258": 373, "1142": 373, "06": 373, "027535": 373, "018464": 373, "2271": 373, "0597882": 373, "0510217": 373, "822": 373, "062": 373, "0421644": 373, "0333436": 373, "0296385": 373, "1415": 373, "22241": 373, "337": 373, "18324": 373, "915": 373, "145322": 373, "1154": 373, "1083": 373, "0728843": 373, "2301": 373, "11793": 373, "600": 373, "929398": 373, "722": 373, "720963": 373, "823": 373, "510039": 373, "1315": 373, "336519": 373, "1994": 373, "909941": 373, "737": 373, "508": 373, "753487": 373, "644": 373, "606477": 373, "459915": 373, "1459": 373, "303455": 373, "2211": 373, "123429": 373, "764": 373, "586": 373, "103035": 373, "923": 373, "0825026": 373, "1143": 373, "0625579": 373, "1508": 373, "0426942": 373, "2210": 373, "60813": 373, "734": 373, "483053": 373, "781": 373, "462": 373, "357348": 373, "1056": 373, "256715": 373, "1470": 373, "169119": 373, "2232": 373, "503341": 373, "738": 373, "42134": 373, "881": 373, "342843": 373, "255199": 373, "1456": 373, "174091": 373, "2134": 373, "0142667": 373, "0123966": 373, "1015": 373, "0105865": 373, "1188": 373, "00860835": 373, "1461": 373, "00655363": 373, "1919": 373, "0532543": 373, "0447548": 373, "1124": 373, "0348388": 373, "1444": 373, "0266886": 373, "1885": 373, "0177431": 373, "2836": 373, "69": 373, "0549107": 373, "916": 373, "608": 373, "0475549": 373, "1058": 373, "0401657": 373, "1253": 373, "0326952": 373, "1539": 373, "025032": 373, "220947": 373, "911": 373, "178324": 373, "1128": 373, "137361": 373, "1465": 373, "103126": 373, "1952": 373, "0701429": 373, "2870": 373, "06648": 373, "755": 373, "893959": 373, "900": 373, "831": 373, "718893": 373, "1120": 373, "537405": 373, "1498": 373, "280686": 373, "2869": 373, "902588": 373, "730678": 373, "582871": 373, "1381": 373, "444133": 373, "298489": 373, "2697": 373, "581": 373, "0955952": 373, "1184": 373, "078109": 373, "1449": 373, "0596185": 373, "1899": 373, "0414047": 373, "2735": 373, "596568": 373, "497127": 373, "396634": 373, "286973": 373, "1578": 373, "167473": 373, "2704": 373, "472466": 373, "943": 373, "787": 373, "391055": 373, "1140": 373, "319865": 373, "1394": 373, "247491": 373, "1801": 373, "169874": 373, "2624": 373, "93": 373, "0213786": 373, "686": 373, "67": 373, "018228": 373, "0152068": 373, "0120525": 373, "1218": 373, "0103961": 373, "1412": 373, "0771592": 373, "761": 373, "0642402": 373, "074": 373, "0514668": 373, "0387886": 373, "1513": 373, "0256871": 373, "2285": 373, "0836219": 373, "702": 373, "0712915": 373, "664": 373, "0589148": 373, "697": 373, "0484067": 373, "0411331": 373, "311691": 373, "569": 373, "256635": 373, "204973": 373, "153086": 373, "1534": 373, "101206": 373, "2320": 373, "59625": 373, "588": 373, "583": 373, "33246": 373, "705": 373, "03849": 373, "703": 373, "738939": 373, "1271": 373, "480308": 373, "1956": 373, "26056": 373, "745": 373, "324": 373, "04874": 373, "842936": 373, "1114": 373, "59": 373, "635554": 373, "1478": 373, "42145": 373, "2229": 373, "174215": 373, "375": 373, "145836": 373, "116701": 373, "1132": 373, "0876727": 373, "1506": 373, "0595001": 373, "2220": 373, "883258": 373, "598": 373, "333": 373, "711146": 373, "743": 373, "543634": 373, "129": 373, "402406": 373, "1313": 373, "266945": 373, "1979": 373, "70404": 373, "592043": 373, "878": 373, "695": 373, "475444": 373, "1094": 373, "358932": 373, "240739": 373, "2160": 373, "0184384": 373, "909": 373, "907": 373, "0158714": 373, "013504": 373, "1242": 373, "0109927": 373, "1526": 373, "00826017": 373, "2031": 373, "061272": 373, "1095": 373, "0609618": 373, "1100": 373, "0467291": 373, "1436": 373, "0340362": 373, "1971": 373, "0231282": 373, "2901": 373, "0717247": 373, "0616923": 373, "1087": 373, "0521595": 373, "1286": 373, "0423267": 373, "1585": 373, "0321109": 373, "2089": 373, "286461": 373, "242512": 373, "181783": 373, "1476": 373, "139021": 373, "1930": 373, "0870121": 373, "3085": 373, "36322": 373, "652": 373, "08991": 373, "880185": 373, "1219": 373, "694533": 373, "366328": 373, "2931": 373, "15748": 373, "927": 373, "937824": 373, "1144": 373, "745357": 373, "1440": 373, "558061": 373, "1924": 373, "391387": 373, "2743": 373, "157349": 373, "616": 373, "129806": 373, "103083": 373, "1464": 373, "0784417": 373, "053639": 373, "2815": 373, "767569": 373, "874": 373, "641585": 373, "941": 373, "387": 373, "488558": 373, "1236": 373, "355651": 373, "1698": 373, "230945": 373, "2615": 373, "611059": 373, "514108": 373, "1156": 373, "416571": 373, "318094": 373, "1869": 373, "225023": 373, "2642": 373, "0375093": 373, "564": 373, "0317602": 373, "0261888": 373, "1281": 373, "0211151": 373, "0158951": 373, "2110": 373, "141333": 373, "949": 373, "133647": 373, "1004": 373, "0999998": 373, "0710327": 373, "1889": 373, "52": 373, "0429916": 373, "3121": 373, "147474": 373, "125344": 373, "1070": 373, "104294": 373, "0849766": 373, "1579": 373, "0624729": 373, "2148": 373, "701639": 373, "765": 373, "534615": 373, "359791": 373, "1492": 373, "2612": 373, "2055": 373, "183193": 373, "2930": 373, "92067": 373, "735": 373, "271": 373, "4402": 373, "880": 373, "046": 373, "69186": 373, "1269": 373, "17436": 373, "1828": 373, "880179": 373, "2439": 373, "62123": 373, "264": 373, "14905": 373, "999": 373, "64253": 373, "1307": 373, "1413": 373, "1881": 373, "771439": 373, "2783": 373, "369429": 373, "451": 373, "288236": 373, "1047": 373, "209526": 373, "1441": 373, "148115": 373, "2038": 373, "106089": 373, "2846": 373, "53204": 373, "465": 373, "28593": 373, "939": 373, "368": 373, "0852": 373, "1113": 373, "685382": 373, "1762": 373, "408357": 373, "2958": 373, "4521": 373, "13466": 373, "853916": 373, "1392": 373, "642672": 373, "1850": 373, "446442": 373, "2663": 373, "0574189": 373, "876": 373, "0460811": 373, "1092": 373, "0389357": 373, "1292": 373, "031279": 373, "0234498": 373, "2146": 373, "204966": 373, "17364": 373, "1159": 373, "141097": 373, "1426": 373, "105192": 373, "1913": 373, "0677766": 373, "2970": 373, "21269": 373, "946": 373, "573": 373, "191564": 373, "1050": 373, "156368": 373, "1287": 373, "1565": 373, "0933565": 373, "2156": 373, "84983": 373, "789777": 373, "1019": 373, "598168": 373, "1346": 373, "433492": 373, "1857": 373, "269504": 373, "2988": 373, "74845": 373, "859": 373, "348": 373, "96945": 373, "811": 373, "505": 373, "77082": 373, "76407": 373, "1826": 373, "09719": 373, "2935": 373, "73162": 373, "00241": 373, "1072": 373, "39024": 373, "77317": 373, "1816": 373, "19536": 373, "2694": 373, "517278": 373, "875": 373, "708": 373, "382208": 373, "1185": 373, "317837": 373, "1425": 373, "233231": 373, "1942": 373, "152925": 373, "2962": 373, "44309": 373, "741": 373, "62409": 373, "1115": 373, "64963": 373, "1098": 373, "03923": 373, "1743": 373, "625089": 373, "2898": 373, "07006": 373, "861": 373, "632": 373, "64247": 373, "1085": 373, "33386": 373, "1337": 373, "994935": 373, "1792": 373, "68383": 373, "2608": 373, "0713578": 373, "940": 373, "0612457": 373, "0516788": 373, "1298": 373, "0414834": 373, "1617": 373, "0309886": 373, "2165": 373, "282241": 373, "951": 373, "085": 373, "238855": 373, "1123": 373, "193713": 373, "1385": 373, "146781": 373, "81": 373, "0938959": 373, "286141": 373, "122": 373, "257138": 373, "1043": 373, "214208": 373, "167575": 373, "1601": 373, "124072": 373, "2163": 373, "21431": 373, "884": 373, "237": 373, "955251": 373, "775294": 373, "1384": 373, "63282": 373, "1696": 373, "37333": 373, "2876": 373, "87335": 373, "317": 373, "65059": 373, "1176": 373, "94733": 373, "1457": 373, "62241": 373, "1637": 373, "47752": 373, "2906": 373, "75786": 373, "83024": 373, "889": 373, "87429": 373, "1108": 373, "87685": 373, "75328": 373, "2449": 373, "718776": 373, "289": 373, "561317": 373, "1076": 373, "429166": 373, "1407": 373, "317204": 373, "1904": 373, "208555": 373, "2896": 373, "94057": 373, "30458": 373, "1048": 373, "6702": 373, "25799": 373, "1920": 373, "84121": 373, "2871": 373, "34423": 373, "711": 373, "77444": 373, "857": 373, "10049": 373, "52509": 373, "926038": 373, "2568": 373, "00203027": 373, "1032": 373, "00198061": 373, "00179382": 373, "1169": 373, "00163713": 373, "1280": [373, 375], "00171023": 373, "1226": 373, "00395783": 373, "2119": 373, "00340452": 373, "2463": 373, "00308582": 373, "2718": 373, "00292684": 373, "2866": 373, "00217889": 373, "3849": 373, "00437142": 373, "1918": 373, "00418212": 373, "2005": 373, "00344785": 373, "2433": 373, "00291005": 373, "2882": 373, "00293671": 373, "2856": 373, "0120946": 373, "2774": 373, "0103377": 373, "3245": 373, "00850778": 373, "3943": 373, "00659512": 373, "5087": 373, "00484669": 373, "6923": 373, "0524509": 373, "2558": 373, "0428737": 373, "3130": 373, "0323642": 373, "4147": 373, "0231199": 373, "5805": 373, "0152199": 373, "8818": 373, "0451228": 373, "2974": 373, "0373823": 373, "3590": 373, "0302746": 373, "4433": 373, "023182": 373, "5789": 373, "0161696": 373, "8300": 373, "00731429": 373, "2580": 373, "00633179": 373, "2980": 373, "00535855": 373, "3522": 373, "00449335": 373, "4200": 373, "00341811": 373, "5521": 373, "0270028": 373, "2795": 373, "02197": 373, "3436": 373, "0177477": 373, "4253": 373, "0131335": 373, "5748": 373, "00897444": 373, "8412": 373, "0257188": 373, "2889": 373, "0218969": 373, "3393": 373, "0180933": 373, "4107": 373, "013742": 373, "5408": 373, "00992419": 373, "7488": 373, "00289114": 373, "1450": 373, "00245821": 373, "00252331": 373, "1662": 373, "00226557": 373, "1851": 373, "00180316": 373, "2326": 373, "00578904": 373, "00500361": 373, "3353": 373, "0042401": 373, "3956": 373, "00350486": 373, "4786": 373, "00297233": 373, "5644": 373, "00693265": 373, "2420": 373, "00593063": 373, "2828": 373, "00526697": 373, "3185": 373, "00480098": 373, "3494": 373, "00385131": 373, "4356": 373, "0193516": 373, "3467": 373, "0166254": 373, "4036": 373, "0132869": 373, "5050": 373, "0106293": 373, "6313": 373, "00759056": 373, "8841": 373, "0977256": 373, "2746": 373, "0813271": 373, "0656322": 373, "4090": 373, "0476463": 373, "5633": 373, "0295362": 373, "9088": 373, "0736189": 373, "3646": 373, "0603789": 373, "4445": 373, "0489938": 373, "5478": 373, "036992": 373, "7256": 373, "0258802": 373, "10372": 373, "0116589": 373, "3237": 373, "00979113": 373, "3855": 373, "00811779": 373, "4650": 373, "00667871": 373, "5652": 373, "00493861": 373, "7643": 373, "0537768": 373, "2807": 373, "0459135": 373, "3288": 373, "03588": 373, "4208": 373, "0252901": 373, "5970": 373, "0167419": 373, "9018": 373, "0407051": 373, "3651": 373, "0342908": 373, "4334": 373, "028568": 373, "5202": 373, "0218703": 373, "6796": 373, "016186": 373, "9183": 373, "0031551": 373, "0029515": 373, "00265488": 373, "2369": 373, "00243581": 373, "2582": 373, "00223598": 373, "2813": 373, "00745008": 373, "3377": 373, "00656544": 373, "3833": 373, "00542595": 373, "4638": 373, "00425647": 373, "5912": 373, "0034657": 373, "7261": 373, "00835933": 373, "3010": 373, "00741956": 373, "3391": 373, "0065352": 373, "3850": 373, "00555918": 373, "4526": 373, "00488058": 373, "5156": 373, "0257262": 373, "3912": 373, "0217468": 373, "4628": 373, "0176505": 373, "5703": 373, "0137122": 373, "7341": 373, "00980134": 373, "10270": 373, "124749": 373, "3227": 373, "103385": 373, "3894": 373, "0832193": 373, "4838": 373, "0626013": 373, "6432": 373, "0397992": 373, "10117": 373, "101071": 373, "3983": 373, "0825665": 373, "4876": 373, "0668515": 373, "6023": 373, "0487727": 373, "8255": 373, "0354192": 373, "11368": 373, "0147718": 373, "0127799": 373, "4430": 373, "0105324": 373, "5376": 373, "00869796": 373, "6509": 373, "00643591": 373, "8798": 373, "0698868": 373, "3240": 373, "0588583": 373, "3848": 373, "0473412": 373, "4784": 373, "0346142": 373, "6543": 373, "0222947": 373, "10159": 373, "0538146": 373, "4142": 373, "0454583": 373, "4904": 373, "0373579": 373, "5968": 373, "0291396": 373, "7651": 373, "0208901": 373, "10672": 373, "00393589": 373, "00332212": 373, "2525": 373, "00317296": 373, "2643": 373, "00269113": 373, "3117": 373, "00235812": 373, "3557": 373, "009382": 373, "3576": 373, "00828943": 373, "4047": 373, "00672351": 373, "4990": 373, "00514768": 373, "6518": 373, "0040612": 373, "8262": 373, "0107115": 373, "3132": 373, "00920252": 373, "00794258": 373, "4224": 373, "00698123": 373, "4806": 373, "00561026": 373, "5980": 373, "0345669": 373, "3882": 373, "0289719": 373, "4632": 373, "0232584": 373, "5770": 373, "0179766": 373, "7466": 373, "0128144": 373, "10474": 373, "158162": 373, "3394": 373, "132552": 373, "4050": 373, "101844": 373, "5271": 373, "080936": 373, "6633": 373, "0530097": 373, "10127": 373, "135839": 373, "3952": 373, "11116": 373, "4829": 373, "0899513": 373, "0633017": 373, "8481": 373, "0467462": 373, "11484": 373, "0192628": 373, "3919": 373, "0164591": 373, "4586": 373, "0135348": 373, "5578": 373, "0107712": 373, "7009": 373, "00761117": 373, "9919": 373, "0854876": 373, "3532": 373, "0747271": 373, "4041": 373, "0604759": 373, "4993": 373, "0417964": 373, "7225": 373, "0275467": 373, "10962": 373, "0713821": 373, "4164": 373, "0600772": 373, "4948": 373, "0496581": 373, "5986": 373, "0381385": 373, "7794": 373, "027025": 373, "10999": 373, "00502473": 373, "2086": 373, "00451855": 373, "00396819": 373, "00338962": 373, "3093": 373, "00315343": 373, "3325": 373, "0147951": 373, "2834": 373, "0126225": 373, "3322": 373, "010269": 373, "4084": 373, "00785878": 373, "5337": 373, "00570293": 373, "7354": 373, "0161691": 373, "2594": 373, "0144483": 373, "2902": 373, "011705": 373, "3583": 373, "0101487": 373, "4132": 373, "00879332": 373, "4769": 373, "0560297": 373, "2994": 373, "0467998": 373, "3584": 373, "0374397": 373, "4481": 373, "028166": 373, "5956": 373, "0192593": 373, "8711": 373, "277815": 373, "2415": 373, "229837": 373, "2919": 373, "1787": 373, "3755": 373, "126545": 373, "5303": 373, "0835321": 373, "8033": 373, "224925": 373, "2983": 373, "184256": 373, "3642": 373, "146452": 373, "4582": 373, "108899": 373, "6162": 373, "0740655": 373, "9060": 373, "0319455": 373, "2954": 373, "0268136": 373, "3519": 373, "0217062": 373, "4347": 373, "0166666": 373, "5662": 373, "0116466": 373, "8102": 373, "150549": 373, "2507": 373, "119951": 373, "3147": 373, "0893092": 373, "4226": 373, "0637226": 373, "5923": 373, "0427839": 373, "8823": 373, "122421": 373, "3035": 373, "102244": 373, "0822007": 373, "4520": 373, "0622484": 373, "5969": 373, "0429436": 373, "8652": 373, "00481074": 373, "00443796": 373, "2835": 373, "00389863": 373, "00343822": 373, "3659": 373, "00297784": 373, "4225": 373, "0145757": 373, "3453": 373, "012078": 373, "4167": 373, "00896329": 373, "5615": 373, "00727645": 373, "6917": 373, "00548478": 373, "9176": 373, "0150624": 373, "3341": 373, "0132428": 373, "3800": 373, "011443": 373, "4398": 373, "0092883": 373, "5418": 373, "00744553": 373, "6759": 373, "0543977": 373, "3701": 373, "0445693": 373, "4517": 373, "0363329": 373, "5541": 373, "0270492": 373, "7442": 373, "0187415": 373, "10742": 373, "267367": 373, "3011": 373, "223615": 373, "3601": 373, "1797": 373, "134716": 373, "5977": 373, "0692752": 373, "11624": 373, "222661": 373, "3616": 373, "179525": 373, "4485": 373, "139298": 373, "5781": 373, "0958787": 373, "8399": 373, "176292": 373, "4568": 373, "0700283": 373, "0258341": 373, "4383": 373, "0207504": 373, "5457": 373, "0161277": 373, "7021": 373, "0116008": 373, "9761": 373, "148512": 373, "3050": 373, "124238": 373, "0995304": 373, "4551": 373, "0714324": 373, "6341": 373, "044154": 373, "10259": 373, "113174": 373, "3940": 373, "0961662": 373, "4636": 373, "0765841": 373, "5822": 373, "0592912": 373, "7520": 373, "0416614": 373, "10703": 373, "00655654": 373, "2239": 373, "00584761": 373, "2510": 373, "00502113": 373, "2923": 373, "00466269": 373, "3148": 373, "00393276": 373, "3732": 373, "0203923": 373, "2879": 373, "0171018": 373, "3433": 373, "0137027": 373, "4285": 373, "0109527": 373, "5361": 373, "00749636": 373, "7833": 373, "0221319": 373, "0193761": 373, "3030": 373, "0158773": 373, "3698": 373, "0134367": 373, "4370": 373, "0116365": 373, "5046": 373, "0780751": 373, "3008": 373, "0651551": 373, "3604": 373, "0521945": 373, "4500": 373, "0394101": 373, "5959": 373, "0262706": 373, "8940": 373, "398509": 373, "2357": 373, "332153": 373, "259051": 373, "3626": 373, "184412": 373, "5094": 373, "119678": 373, "7850": 373, "313656": 373, "2995": 373, "257989": 373, "3641": 373, "206049": 373, "4559": 373, "152848": 373, "6146": 373, "103125": 373, "9110": 373, "0444861": 373, "2969": 373, "037334": 373, "3538": 373, "0302293": 373, "0231979": 373, "5695": 373, "0158702": 373, "8325": 373, "219777": 373, "2404": 373, "17764": 373, "2975": 373, "135864": 373, "3889": 373, "100424": 373, "5262": 373, "0677547": 373, "7799": 373, "172356": 373, "3018": 373, "144231": 373, "3606": 373, "116019": 373, "4483": 373, "0873881": 373, "5953": 373, "0596004": 373, "8728": 373, "00609695": 373, "2751": 373, "00517637": 373, "3241": 373, "00448956": 373, "3736": 373, "00394876": 373, "4248": 373, "00317463": 373, "5284": 373, "0204832": 373, "3276": 373, "0137691": 373, "4873": 373, "0114194": 373, "5876": 373, "00893304": 373, "7512": 373, "00653312": 373, "10272": 373, "0192409": 373, "3487": 373, "0168348": 373, "3986": 373, "0142343": 373, "4714": 373, "0119455": 373, "5617": 373, "00910648": 373, "7369": 373, "0781101": 373, "0614806": 373, "4366": 373, "046201": 373, "5810": 373, "0357023": 373, "7518": 373, "0222103": 373, "12086": 373, "326917": 373, "3284": 373, "273363": 373, "3927": 373, "220994": 373, "4858": 373, "166153": 373, "6462": 373, "0854403": 373, "12567": 373, "311348": 373, "3448": 373, "243012": 373, "4418": 373, "187933": 373, "5713": 373, "126819": 373, "8466": 373, "0855686": 373, "12548": 373, "0404778": 373, "3730": 373, "0329699": 373, "4579": 373, "0265272": 373, "5692": 373, "0207815": 373, "7265": 373, "0139037": 373, "10860": 373, "183003": 373, "161443": 373, "3741": 373, "129767": 373, "4654": 373, "0893345": 373, "6760": 373, "0610684": 373, "9890": 373, "15525": 373, "3829": 373, "125772": 373, "4727": 373, "101434": 373, "5861": 373, "0765083": 373, "7770": 373, "0537321": 373, "11064": 373, "0104209": 373, "3219": 373, "00908195": 373, "3694": 373, "00781277": 373, "4294": 373, "00651108": 373, "5153": 373, "0051719": 373, "6487": 373, "0321377": 373, "4176": 373, "0269904": 373, "4972": 373, "0220014": 373, "6100": 373, "016901": 373, "7941": 373, "0120042": 373, "11180": 373, "0373802": 373, "0314895": 373, "4262": 373, "0266731": 373, "5031": 373, "0217822": 373, "6161": 373, "0168219": 373, "7978": 373, "176031": 373, "3049": 373, "134442": 373, "3993": 373, "0843776": 373, "6362": 373, "0640577": 373, "8381": 373, "043787": 373, "12261": 373, "697876": 373, "3077": 373, "615338": 373, "3489": 373, "350147": 373, "6133": 373, "267289": 373, "8034": 373, "179695": 373, "11950": 373, "703207": 373, "3053": 373, "561805": 373, "3822": 373, "423052": 373, "5076": 373, "254835": 373, "171434": 373, "12526": 373, "0933483": 373, "3235": 373, "0725632": 373, "4161": 373, "0539197": 373, "5600": 373, "0376119": 373, "8029": 373, "0263137": 373, "11476": 373, "407388": 373, "340939": 373, "3543": 373, "261028": 373, "4627": 373, "151649": 373, "7965": 373, "103379": 373, "11684": 373, "358769": 373, "3314": 373, "283046": 373, "4201": 373, "212152": 373, "5604": 373, "158502": 373, "7502": 373, "107514": 373, "11059": 373, "0148329": 373, "0129116": 373, "3898": 373, "0110537": 373, "4553": 373, "00925277": 373, "5439": 373, "00716987": 373, "7019": 373, "0526609": 373, "3823": 373, "0447282": 373, "4501": 373, "0365834": 373, "5503": 373, "0274874": 373, "7324": 373, "0183895": 373, "10947": 373, "0556653": 373, "0465882": 373, "4321": 373, "039411": 373, "5108": 373, "0318745": 373, "6316": 373, "024706": 373, "8148": 373, "263316": 373, "3058": 373, "198303": 373, "4061": 373, "141966": 373, "5672": 373, "105849": 373, "7608": 373, "0687866": 373, "11707": 373, "793822": 373, "4057": 373, "996979": 373, "3230": 373, "54288": 373, "5933": 373, "412174": 373, "7815": 373, "274441": 373, "11737": 373, "03474": 373, "3113": 373, "832701": 373, "3868": 373, "564787": 373, "421781": 373, "7637": 373, "271587": 373, "11860": 373, "130834": 373, "3462": 373, "0943305": 373, "4802": 373, "0760123": 373, "0580473": 373, "7803": 373, "0395342": 373, "11458": 373, "635729": 373, "2850": 373, "379899": 373, "307908": 373, "5884": 373, "233057": 373, "7774": 373, "157518": 373, "11503": 373, "518276": 373, "3441": 373, "422517": 373, "4221": 373, "323476": 373, "5513": 373, "247251": 373, "7213": 373, "163369": 373, "10917": 373, "0192313": 373, "0168147": 373, "3991": 373, "0143274": 373, "4683": 373, "011932": 373, "5624": 373, "00914975": 373, "7334": 373, "0723144": 373, "3712": 373, "0613803": 373, "4373": 373, "050021": 373, "5366": 373, "0376949": 373, "7121": 373, "0249397": 373, "10763": 373, "0796627": 373, "3369": 373, "0616695": 373, "4352": 373, "0521326": 373, "5149": 373, "042188": 373, "0325741": 373, "8240": 373, "380582": 373, "2821": 373, "24038": 373, "4466": 373, "195271": 373, "5498": 373, "146935": 373, "7307": 373, "0948318": 373, "11322": 373, "08794": 373, "3947": 373, "913626": 373, "4701": 373, "737943": 373, "5820": 373, "558473": 373, "7690": 373, "369466": 373, "51009": 373, "2844": 373, "26974": 373, "3382": 373, "778244": 373, "5518": 373, "589803": 373, "7282": 373, "375284": 373, "11444": 373, "160705": 373, "3758": 373, "135495": 373, "4457": 373, "108718": 373, "5555": 373, "0811198": 373, "7445": 373, "0533513": 373, "11320": 373, "614109": 373, "3934": 373, "518614": 373, "418491": 373, "5772": 373, "31592": 373, "7647": 373, "211893": 373, "11401": 373, "836616": 373, "2842": 373, "699579": 373, "3399": 373, "544194": 373, "379699": 373, "228043": 373, "10428": 373, "un": 374, "u": 374, "hotmap": 374, "jpg": 374, "x16": 375, "environment_vari": 375, "kernel_typ": [375, 376], "perfom": 375, "introduct": 375, "benchmark_it": 375, "benchmark_no_refresh": 375, "refresh": 375, "kxn": 375, "sparse_ratio": 375, "micro_b": 375, "output_fp32": 375, "has_append_sum": 375, "micro_oc": 375, "sub_func_level": 375, "3d_infer": 375, "automaticlli": 375, "dsparse_lib_use_amx": 375, "amx_bf16_x16": 375, "output_bf16": 375, "lower_bound": 375, "upper_bound": 375, "invalid": 375, "fp32_relu": 375, "src_dt": 375, "dst_dt": 375, "tanspos": 375, "4d": 375, "distinguish": 375, "bs0": 375, "bs1": 375, "scr2": 375, "avx512f_p2031_p2013": 375, "has_binary_add": 375, "tile_n": 375, "coeffici": 375, "vnni_noperm_p2031_p1302": 375, "suuport": 375, "d0xd1x": 375, "d0": 375, "dst_type": 375, "padding_mask": 375, "badd_dim": 375, "blank": 375, "2048": 375, "large_weight_threshold": 375, "add_bia": 375, "channel_num": 375, "quantize_dim_elt_num": 375, "src_data_typ": 375, "newli": 375, "subdir": 375, "benchmark_dir": 375, "bench_": 375, "cpp": 375, "test_": 375, "entranc": 375, "get_true_data_": 375, "check_result_": 375, "gen_case_": 375, "run_bench_": 375, "calc_flop": 375, "get_refresh_data_idx": 375, "benchmark_util": 375, "whitespac": 376, "labl": 376, "run_ci": 376, "overwrit": 376, "it_per_cor": 376, "discard": 376, "new_input_fil": 376, "medium_n": 376, "ci": 376, "apach": 377, "copyright": 377, "subject": 377, "parti": 377, "accompani": 377, "research": 377, "wish": 377, "bibtex": 377, "misc": 377, "hanwen": 377, "haihao": 377, "shen": 377, "dong": 377, "hengyu": 377, "meng": 377, "wenxin": 377, "zhang": 377, "howpublish": 377, "url": 377, "year": 377, "logo": 377, "atom": 377, "phi": 377, "pentium": 377, "vtune": 377, "corpor": 377, "subsidiari": 377, "toler": 378, "rel": 378, "conjunct": 378, "proport": [378, 379], "vision": 380, "speech": 380, "multimod": 380, "text_classifi": 380, "great": 380, "9998425245285034": 380, "believ": 380, "beauti": 380, "evoc": 380, "ve": 380, "seen": 380, "9998886585235596": 380, "bear": 381, "brain": 381, "damag": 381, "hypothesi": 381, "yann": 381, "lecun": 381, "salient": 381, "anywher": 381, "filter": 381, "lowest": 381, "freez": 381, "hyper": 381, "didn": 381, "pruning_conf": 381, "littl": 382, "degrad": 382, "ex": 382, "affin": 382, "convers": 382, "math": 382, "zeropoint": 382, "asymmetr": 382, "overflow": 382, "fp16": 382, "unseen": 382, "peopl": 382, "emul": 382, "fake": 382, "backward": 382, "mimic": 382, "made": 382, "ultim": 382, "either": 382, "pain": 382, "lossi": 382, "fx": 382, "qat": 382, "site": 383, "assist": 383, "secur": 387, "legal": 387, "injector": 389}, "objects": {"": [[318, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [318, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [318, 1, 1, "_CPPv42jd", "jd"], [318, 1, 1, "_CPPv42jd", "jd"], [319, 1, 1, "_CPPv42jd", "jd"], [320, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 1, 1, "_CPPv42jd", "jd"], [321, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [321, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [321, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [321, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [321, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [321, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [321, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [321, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [321, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [321, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [321, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [319, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [319, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [319, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [319, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [319, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [319, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [319, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [319, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [319, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [321, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [321, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [321, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [321, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [321, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [321, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [321, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [321, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [321, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [321, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [321, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [321, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [321, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [318, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [318, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [318, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [318, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [318, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [318, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [318, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [318, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [319, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [319, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [319, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [319, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [319, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [319, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [319, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [319, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [319, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [319, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [319, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [319, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [319, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [319, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [319, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [319, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [319, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [319, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [319, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [319, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [319, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [319, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [319, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [319, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [319, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [319, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [319, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [318, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [318, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [318, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [318, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [318, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [318, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [318, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [318, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [318, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [318, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [318, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [318, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [318, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [318, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [319, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [319, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [319, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [319, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [319, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [319, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [319, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [319, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [319, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [319, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [319, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [319, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [319, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [319, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [319, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [319, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [319, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [319, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [319, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [319, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [319, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [319, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [319, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [319, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [319, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [319, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [319, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [319, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [319, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [319, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [319, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [319, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [319, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [319, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [319, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [319, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [319, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [319, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [319, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [319, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [319, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [319, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [319, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [319, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [319, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [319, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [319, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [319, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [319, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [319, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [319, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [319, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [319, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [319, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [319, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [319, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [319, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [319, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [319, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [319, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [319, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [319, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [319, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [319, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [319, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [319, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [319, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [320, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [320, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [320, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [320, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [320, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [320, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [320, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [320, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [320, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [320, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [320, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [320, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [320, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [320, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [320, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [320, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [320, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [320, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [320, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [320, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [320, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [320, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [320, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [320, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [320, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [320, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [320, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [320, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [319, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [319, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [319, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [319, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [319, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [319, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [319, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [319, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [319, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [319, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [319, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [319, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [319, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [319, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [319, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [319, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [319, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [319, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [319, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [319, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [319, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [319, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [319, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [319, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [319, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [319, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [319, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [319, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [319, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [319, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [319, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [319, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [319, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [319, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [319, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [319, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [319, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [319, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [319, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [321, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [321, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [321, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [321, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [321, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [321, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [321, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [321, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [321, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [321, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [321, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [321, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [321, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [321, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [321, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [321, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [321, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [321, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [321, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [321, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [321, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [321, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [321, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [321, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [321, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [321, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [321, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [321, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [321, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [321, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [321, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [321, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [321, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [321, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [321, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [321, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [321, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [321, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [321, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [321, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [321, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [321, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [321, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [321, 3, 1, "_CPPv4N2jd3ssd13gather_data_tE", "jd::ssd::gather_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE", "jd::ssd::gather_data_t::binaryop_addrs"], [321, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3dstE", "jd::ssd::gather_data_t::dst"], [321, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t"], [321, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::a"], [321, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::b"], [321, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::c"], [321, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3idxE", "jd::ssd::gather_data_t::idx"], [321, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3srcE", "jd::ssd::gather_data_t::src"], [321, 3, 1, "_CPPv4N2jd3ssd14gather_param_tE", "jd::ssd::gather_param_t"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE", "jd::ssd::gather_param_t::binary_ts_sizes"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE", "jd::ssd::gather_param_t::binaryop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE", "jd::ssd::gather_param_t::dst_axis_size"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t2dtE", "jd::ssd::gather_param_t::dt"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE", "jd::ssd::gather_param_t::dt_size"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE", "jd::ssd::gather_param_t::extend_mask"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE", "jd::ssd::gather_param_t::idx_size"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE", "jd::ssd::gather_param_t::inner_size"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t5loopsE", "jd::ssd::gather_param_t::loops"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t4maskE", "jd::ssd::gather_param_t::mask"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE", "jd::ssd::gather_param_t::outer_size"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t6remainE", "jd::ssd::gather_param_t::remain"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE", "jd::ssd::gather_param_t::src_axis_size"], [321, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE", "jd::ssd::gather_param_t::src_size"], [321, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [321, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [321, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [321, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [321, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [321, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [321, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [321, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [321, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [321, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [321, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [321, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_8E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t8has_geluE", "jd::ssd::matmul_fp8_param_t::has_gelu"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10weight_fp8E", "jd::ssd::matmul_fp8_param_t::weight_fp8"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [321, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [321, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [321, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [321, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [321, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [321, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [321, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [321, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [321, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [321, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [321, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [321, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [321, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [321, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [321, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [321, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [321, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [321, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [321, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [321, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [321, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [321, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [321, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [321, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [321, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [321, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [321, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [321, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [321, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [321, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [321, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [321, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [321, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [321, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [321, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [321, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [321, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [321, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [321, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [321, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [321, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [321, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [321, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [321, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [321, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [321, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [321, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [321, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [321, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [321, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [321, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [321, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [321, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [321, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [321, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [321, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [321, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [321, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [321, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [321, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [321, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [321, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [321, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [321, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [321, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [321, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [321, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [321, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [321, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [321, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [321, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [321, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [321, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [321, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [321, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [321, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [321, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [321, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [321, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [321, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [321, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [319, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [319, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [319, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [319, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [319, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [319, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [319, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [319, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [319, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [319, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [319, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [319, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [319, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [319, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [319, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [319, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [319, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [319, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [319, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [194, 9, 0, "-", "intel_extension_for_transformers"], [236, 9, 0, "-", "sparsity_all"], [237, 9, 0, "-", "test_add_cls_token"], [238, 9, 0, "-", "test_add_embeddings"], [239, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [240, 9, 0, "-", "test_attention_reshape"], [241, 9, 0, "-", "test_bert_mini_fp32"], [242, 9, 0, "-", "test_binary_op"], [243, 9, 0, "-", "test_binaryop"], [244, 9, 0, "-", "test_cast_to"], [245, 9, 0, "-", "test_concat"], [246, 9, 0, "-", "test_conv_reshape"], [247, 9, 0, "-", "test_decoder_attn_reshape"], [248, 9, 0, "-", "test_dispatcher_tuning_acc"], [249, 9, 0, "-", "test_dispatcher_tuning_throughput"], [250, 9, 0, "-", "test_dynamic_quantization"], [251, 9, 0, "-", "test_embedding"], [252, 9, 0, "-", "test_embeddingbag"], [253, 9, 0, "-", "test_execution_options"], [254, 9, 0, "-", "test_gelu"], [255, 9, 0, "-", "test_gpt_int8"], [256, 9, 0, "-", "test_graph_dispatch"], [257, 9, 0, "-", "test_insert_input_output_data"], [258, 9, 0, "-", "test_is_supported_onnx_graph"], [259, 9, 0, "-", "test_last_layer_shape"], [260, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [261, 9, 0, "-", "test_layer_norm_with_transpose"], [262, 9, 0, "-", "test_layernorm"], [263, 9, 0, "-", "test_linear"], [264, 9, 0, "-", "test_linear_int8"], [265, 9, 0, "-", "test_llama_pattern"], [266, 9, 0, "-", "test_main"], [267, 9, 0, "-", "test_matmul"], [268, 9, 0, "-", "test_matmul_int8"], [269, 9, 0, "-", "test_matmul_with_bias_relu"], [270, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [271, 9, 0, "-", "test_matmul_with_bias_tanh"], [272, 9, 0, "-", "test_merged_embeddingbag"], [273, 9, 0, "-", "test_model"], [274, 9, 0, "-", "test_onnx_utils"], [275, 9, 0, "-", "test_operator_adaptor"], [276, 9, 0, "-", "test_ops"], [277, 9, 0, "-", "test_padding_seq"], [278, 9, 0, "-", "test_padding_sequence"], [279, 9, 0, "-", "test_pattern_dispatch"], [280, 9, 0, "-", "test_permute"], [281, 9, 0, "-", "test_position_embeddings"], [282, 9, 0, "-", "test_pow"], [283, 9, 0, "-", "test_primitive_cache_acc"], [284, 9, 0, "-", "test_primitive_cache_throughput"], [285, 9, 0, "-", "test_qkv_merge"], [286, 9, 0, "-", "test_qkv_reshape"], [287, 9, 0, "-", "test_quant_onnx_execute"], [288, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [289, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [290, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [291, 9, 0, "-", "test_size"], [292, 9, 0, "-", "test_softmax"], [293, 9, 0, "-", "test_start_end_logits"], [294, 9, 0, "-", "test_tanh"], [295, 9, 0, "-", "test_text_encoder"], [296, 9, 0, "-", "test_text_encoder_bf16"], [297, 9, 0, "-", "test_tf_utils"], [298, 9, 0, "-", "test_token_type_embeddings"], [299, 9, 0, "-", "test_transpose"], [300, 9, 0, "-", "test_transpose_batch_matmul"], [301, 9, 0, "-", "test_unet"], [302, 9, 0, "-", "test_unet_bf16"], [303, 9, 0, "-", "test_unsqueeze"], [304, 9, 0, "-", "test_vae_decoder"], [305, 9, 0, "-", "test_vae_decoder_bf16"], [306, 9, 0, "-", "test_weight_sharing_acc"], [307, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [308, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [309, 9, 0, "-", "test_weight_sharing_throughput"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "api_doc_example"], [1, 9, 0, "-", "backends"], [189, 9, 0, "-", "evaluation"], [201, 9, 0, "-", "optimization"], [233, 9, 0, "-", "preprocessing"], [235, 9, 0, "-", "version"]], "intel_extension_for_transformers.api_doc_example": [[0, 10, 1, "", "ExampleClass"], [0, 11, 1, "", "attribute1"], [0, 13, 1, "", "function1"], [0, 13, 1, "", "function2"], [0, 13, 1, "", "function3"], [0, 13, 1, "", "generator1"], [0, 14, 1, "", "module_debug_level1"]], "intel_extension_for_transformers.api_doc_example.ExampleClass": [[0, 11, 1, "", "attr1"], [0, 11, 1, "", "attr2"], [0, 11, 1, "", "attr5"], [0, 12, 1, "", "method1"]], "intel_extension_for_transformers.backends": [[188, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[11, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[2, 9, 0, "-", "compile"], [4, 9, 0, "-", "extractors"], [9, 9, 0, "-", "graph"], [10, 9, 0, "-", "graph_utils"], [12, 9, 0, "-", "loaders"], [14, 9, 0, "-", "logger"], [15, 9, 0, "-", "onnx_utils"], [36, 9, 0, "-", "ops"], [100, 9, 0, "-", "sub_graph"], [186, 9, 0, "-", "tf_utils"], [187, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, 13, 1, "", "compile"], [2, 13, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 9, 0, "-", "extractor"], [5, 9, 0, "-", "onnx_extractor"], [6, 9, 0, "-", "tf_extractor"], [7, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, 10, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, 10, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, 10, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, 10, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[8, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, 10, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[8, 12, 1, "", "add_config_item"], [8, 12, 1, "", "change_node_input_tensors"], [8, 12, 1, "", "change_node_output_tensors"], [8, 12, 1, "", "dump_tensor"], [8, 12, 1, "", "engine_init"], [8, 12, 1, "", "get_next_node_names"], [8, 12, 1, "", "get_node_by_name"], [8, 12, 1, "", "get_node_id"], [8, 12, 1, "", "get_pre_node_names"], [8, 12, 1, "", "get_sparse_nodes_name"], [8, 12, 1, "", "get_tensor_idx"], [8, 12, 1, "", "graph_dispatch"], [8, 12, 1, "", "graph_init"], [8, 12, 1, "", "inference"], [8, 12, 1, "", "inquire_config_item"], [8, 12, 1, "", "insert_nodes"], [8, 12, 1, "", "modify_node_connections"], [8, 12, 1, "", "remove_nodes"], [8, 12, 1, "", "rename_node"], [8, 12, 1, "", "save"], [8, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, 10, 1, "", "LazyImport"], [10, 13, 1, "", "autocast_init"], [10, 13, 1, "", "construct_node"], [10, 13, 1, "", "get_autocast_info"], [10, 13, 1, "", "get_data_dtype"], [10, 13, 1, "", "get_model_fwk_name"], [10, 13, 1, "", "get_quant_info"], [10, 13, 1, "", "insert_pattern"], [10, 13, 1, "", "insert_quant_info"], [10, 13, 1, "", "list2str"], [10, 13, 1, "", "names_from_input"], [10, 13, 1, "", "pattern_mapping"], [10, 13, 1, "", "pattern_mapping_conf_validation"], [10, 13, 1, "", "quant_info_init"], [10, 13, 1, "", "search_pattern"], [10, 13, 1, "", "search_straight_pattern"], [10, 13, 1, "", "set_autocast"], [10, 13, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[13, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, 10, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, 10, 1, "", "Logger"], [14, 13, 1, "", "debug"], [14, 13, 1, "", "error"], [14, 13, 1, "", "fatal"], [14, 13, 1, "", "info"], [14, 13, 1, "", "log"], [14, 13, 1, "", "warn"], [14, 13, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[14, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, 13, 1, "", "bias_to_int32"], [15, 13, 1, "", "change_num_name"], [15, 13, 1, "", "get_children"], [15, 13, 1, "", "get_initializer_children_names"], [15, 13, 1, "", "get_node_children_names"], [15, 13, 1, "", "graph_node_names_details"], [15, 13, 1, "", "is_supported_onnx_graph"], [15, 13, 1, "", "is_supported_onnx_node"], [15, 13, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[16, 9, 0, "-", "all"], [17, 9, 0, "-", "assert"], [18, 9, 0, "-", "batch_matmul"], [19, 9, 0, "-", "batch_matmul_v2"], [20, 9, 0, "-", "bias_add"], [21, 9, 0, "-", "binary_op"], [22, 9, 0, "-", "cast"], [23, 9, 0, "-", "concat"], [24, 9, 0, "-", "conv"], [25, 9, 0, "-", "cos"], [26, 9, 0, "-", "empty_ops"], [27, 9, 0, "-", "expand_dims"], [28, 9, 0, "-", "fused_batch_matmul_v2"], [29, 9, 0, "-", "fused_batch_norm_v3"], [30, 9, 0, "-", "fused_gemm"], [31, 9, 0, "-", "fused_matmul"], [32, 9, 0, "-", "gather"], [33, 9, 0, "-", "gather_elements"], [34, 9, 0, "-", "gelu"], [35, 9, 0, "-", "gemm"], [37, 9, 0, "-", "iterator_get_next"], [38, 9, 0, "-", "iterator_v2"], [39, 9, 0, "-", "layer_normalization"], [40, 9, 0, "-", "log_softmax"], [41, 9, 0, "-", "map_and_batch_dataset"], [42, 9, 0, "-", "matmul"], [43, 9, 0, "-", "mean"], [44, 9, 0, "-", "mkl_layer_norm"], [45, 9, 0, "-", "model_dataset"], [46, 9, 0, "-", "one_hot"], [47, 9, 0, "-", "onnx_input"], [48, 9, 0, "-", "op"], [49, 9, 0, "-", "optimize_dataset"], [50, 9, 0, "-", "pack"], [51, 9, 0, "-", "padding_sequence"], [52, 9, 0, "-", "placeholder"], [53, 9, 0, "-", "pos_embed"], [54, 9, 0, "-", "pow"], [55, 9, 0, "-", "quantize_linear"], [56, 9, 0, "-", "quantize_v2"], [57, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [58, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [59, 9, 0, "-", "reduce_mean"], [60, 9, 0, "-", "reduce_sum"], [61, 9, 0, "-", "reorder"], [62, 9, 0, "-", "reshape"], [63, 9, 0, "-", "rsub"], [64, 9, 0, "-", "scatter_elements"], [65, 9, 0, "-", "shape"], [66, 9, 0, "-", "sin"], [67, 9, 0, "-", "size"], [68, 9, 0, "-", "slice"], [69, 9, 0, "-", "softmax"], [70, 9, 0, "-", "split"], [71, 9, 0, "-", "squeeze"], [72, 9, 0, "-", "strided_slice"], [73, 9, 0, "-", "tensor"], [74, 9, 0, "-", "top_k"], [75, 9, 0, "-", "transpose"], [76, 9, 0, "-", "unpack"], [77, 9, 0, "-", "unsqueeze"], [78, 9, 0, "-", "view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, 10, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, 10, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, 10, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, 10, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[19, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, 10, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, 10, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, 10, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, 10, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, 10, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, 10, 1, "", "Add"], [26, 10, 1, "", "AddV2"], [26, 10, 1, "", "Arange"], [26, 10, 1, "", "BinaryAdd"], [26, 10, 1, "", "Constant"], [26, 10, 1, "", "ConstantOfShape"], [26, 10, 1, "", "Convolution"], [26, 10, 1, "", "CumSum"], [26, 10, 1, "", "Dequantize"], [26, 10, 1, "", "DequantizeLinear"], [26, 10, 1, "", "Einsum"], [26, 10, 1, "", "EmbeddingBag"], [26, 10, 1, "", "Erf"], [26, 10, 1, "", "Expand"], [26, 10, 1, "", "ExpandIndices"], [26, 10, 1, "", "Fill"], [26, 10, 1, "", "FlatMapDataset"], [26, 10, 1, "", "Flatten"], [26, 10, 1, "", "Floor_divide"], [26, 10, 1, "", "Identity"], [26, 10, 1, "", "InnerProduct"], [26, 10, 1, "", "Input"], [26, 10, 1, "", "LatRange"], [26, 10, 1, "", "ListConstruct"], [26, 10, 1, "", "ListUnpack"], [26, 10, 1, "", "Loop"], [26, 10, 1, "", "MakeIterator"], [26, 10, 1, "", "Masked_fill"], [26, 10, 1, "", "MatMulWithBias"], [26, 10, 1, "", "MatMulWithBiasAdd"], [26, 10, 1, "", "MatMulWithBiasGelu"], [26, 10, 1, "", "MatMulWithBiasRelu"], [26, 10, 1, "", "MatMulWithBiasSigmoid"], [26, 10, 1, "", "MatMulWithBiasTanh"], [26, 10, 1, "", "Matmul"], [26, 10, 1, "", "Max"], [26, 10, 1, "", "MergedEmbeddingbag"], [26, 10, 1, "", "Onehot"], [26, 10, 1, "", "OpAny"], [26, 10, 1, "", "Output"], [26, 10, 1, "", "PositionIds"], [26, 10, 1, "", "QLinearAdd"], [26, 10, 1, "", "QLinearMatMul"], [26, 10, 1, "", "QLinearMul"], [26, 10, 1, "", "Range"], [26, 10, 1, "", "RealDiv"], [26, 10, 1, "", "Reciprocal"], [26, 10, 1, "", "Relu"], [26, 10, 1, "", "Repeat"], [26, 10, 1, "", "Rsqrt"], [26, 10, 1, "", "SequenceLength"], [26, 10, 1, "", "Sigmoid"], [26, 10, 1, "", "Silu"], [26, 10, 1, "", "Sqrt"], [26, 10, 1, "", "Square"], [26, 10, 1, "", "SquaredDifference"], [26, 10, 1, "", "Stack"], [26, 10, 1, "", "StopGradient"], [26, 10, 1, "", "Tanh"], [26, 10, 1, "", "TensorSliceDataset"], [26, 10, 1, "", "Tile"], [26, 10, 1, "", "TokenTypeIds"], [26, 10, 1, "", "TransposeBatchMatMul"], [26, 10, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, 10, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, 10, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, 10, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, 10, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, 10, 1, "", "Gather"], [32, 10, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, 10, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, 10, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, 10, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, 10, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, 10, 1, "", "LayerNorm"], [39, 10, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, 10, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, 10, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, 10, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, 10, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, 10, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, 10, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, 10, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[47, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, 10, 1, "", "Operator"], [48, 13, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[48, 12, 1, "", "construct"], [48, 12, 1, "", "extract"], [48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, 10, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, 10, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, 10, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, 10, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, 10, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, 10, 1, "", "Quantize"], [55, 10, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, 10, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, 10, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, 10, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, 10, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, 10, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, 10, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, 10, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, 10, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, 10, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, 10, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, 10, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, 10, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, 10, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, 10, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, 10, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, 10, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, 10, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, 10, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, 10, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, 10, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, 10, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[79, 9, 0, "-", "InnerproductReshapeFusion"], [80, 9, 0, "-", "add_cls_token"], [81, 9, 0, "-", "add_embeddings"], [82, 9, 0, "-", "arangewithreciprocal"], [83, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [84, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [85, 9, 0, "-", "attentionBlock_QKVPreReshape"], [86, 9, 0, "-", "attentionBlock_QKVReshape"], [87, 9, 0, "-", "attentionBlock_Resize2Gather"], [88, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [89, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [90, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [91, 9, 0, "-", "attention_reshape"], [92, 9, 0, "-", "cast_to"], [93, 9, 0, "-", "collect_quant_info"], [94, 9, 0, "-", "conv_reshape"], [95, 9, 0, "-", "decoder_attn_reshape"], [96, 9, 0, "-", "einsumwitharange"], [97, 9, 0, "-", "embeddingbag"], [98, 9, 0, "-", "gelu"], [99, 9, 0, "-", "generate_sequence"], [101, 9, 0, "-", "innerproductwithbiasgelu"], [102, 9, 0, "-", "innerproductwithslice"], [103, 9, 0, "-", "innerproductwithswish"], [104, 9, 0, "-", "input_data"], [105, 9, 0, "-", "input_file"], [106, 9, 0, "-", "insert_bf16_node"], [107, 9, 0, "-", "insert_quant_node"], [108, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [109, 9, 0, "-", "interact_features"], [110, 9, 0, "-", "last_layer_shape"], [111, 9, 0, "-", "layer_norm"], [112, 9, 0, "-", "layer_norm_with_reduce_mean"], [113, 9, 0, "-", "layer_norm_with_transpose"], [114, 9, 0, "-", "llama_embeding"], [115, 9, 0, "-", "llama_matmulwithtranspose"], [116, 9, 0, "-", "llama_postprocess"], [117, 9, 0, "-", "llama_rotary_pos_emb"], [118, 9, 0, "-", "lower_all_tuples"], [119, 9, 0, "-", "matmul_with_bias"], [120, 9, 0, "-", "matmul_with_bias_add"], [121, 9, 0, "-", "matmul_with_bias_gelu"], [122, 9, 0, "-", "matmul_with_bias_relu"], [123, 9, 0, "-", "matmul_with_bias_sigmoid"], [124, 9, 0, "-", "matmul_with_bias_tanh"], [125, 9, 0, "-", "matmul_with_transpose"], [126, 9, 0, "-", "merged_embeddingbag"], [127, 9, 0, "-", "multi_head_attention"], [128, 9, 0, "-", "operator_adaptor"], [129, 9, 0, "-", "output_data"], [130, 9, 0, "-", "padding_sequence"], [131, 9, 0, "-", "pattern"], [132, 9, 0, "-", "position_embeddings"], [133, 9, 0, "-", "position_embeddings_v1"], [134, 9, 0, "-", "qkv_merge"], [135, 9, 0, "-", "qkv_reshape"], [136, 9, 0, "-", "quantize_fusion"], [137, 9, 0, "-", "quantized_graph_dtype_refactor"], [138, 9, 0, "-", "remove_constant_op"], [139, 9, 0, "-", "remove_last_view"], [140, 9, 0, "-", "remove_range"], [141, 9, 0, "-", "removeslice"], [142, 9, 0, "-", "reshape_after_restore_hidden_states"], [143, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [144, 9, 0, "-", "reshape_before_restore_hidden_states"], [145, 9, 0, "-", "reshape_fusion"], [146, 9, 0, "-", "resnetBlock_instancenormReshapeFromConv"], [147, 9, 0, "-", "resnetBlock_instancenormReshapeFromdiv"], [148, 9, 0, "-", "restnetBlock_groupNorm"], [149, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [150, 9, 0, "-", "rms_norm"], [151, 9, 0, "-", "rotary_pos_emb"], [152, 9, 0, "-", "slicemask"], [153, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [154, 9, 0, "-", "stableDiffusion_bf16Convert"], [155, 9, 0, "-", "start_end_logits"], [156, 9, 0, "-", "subgraph_matcher"], [157, 9, 0, "-", "textEncdoer_word_embedding"], [158, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [159, 9, 0, "-", "textEncoder_AttentionReshape"], [160, 9, 0, "-", "textEncoder_KVReshape"], [161, 9, 0, "-", "textEncoder_MulReshape"], [162, 9, 0, "-", "textEncoder_QReshape"], [163, 9, 0, "-", "textEncoder_SoftmaxReshape"], [164, 9, 0, "-", "textEncoder_causal_attention_mask"], [165, 9, 0, "-", "token_type_embeddings"], [166, 9, 0, "-", "token_type_embeddings_v1"], [167, 9, 0, "-", "torch_embedding"], [168, 9, 0, "-", "torch_ip_insert_bias"], [169, 9, 0, "-", "torchinsertbf16node"], [170, 9, 0, "-", "torchpaddingsquence"], [171, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [172, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [173, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [174, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [175, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [176, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [177, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [178, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [179, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [180, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromAdd"], [181, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromConcat"], [182, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [183, 9, 0, "-", "transformer2Dmodel_upBlockResize"], [184, 9, 0, "-", "transpose_batch_matmul"], [185, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, 10, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, 10, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, 10, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, 10, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, 10, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, 10, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, 10, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, 10, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, 10, 1, "", "AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, 10, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, 10, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, 10, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, 10, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, 10, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, 10, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, 10, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, 10, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, 10, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, 10, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, 10, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, 10, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, 10, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[103, 10, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[104, 10, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[105, 10, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[106, 10, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[107, 10, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[108, 10, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[109, 10, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[110, 10, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[111, 10, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[112, 10, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[113, 10, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[114, 10, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[115, 10, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[116, 10, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[117, 10, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[118, 10, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[119, 10, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[120, 10, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[121, 10, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[122, 10, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[123, 10, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[124, 10, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[125, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[126, 10, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[127, 10, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[128, 10, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[129, 10, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[130, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[131, 10, 1, "", "Pattern"], [131, 13, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[132, 10, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[133, 10, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[134, 10, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[135, 10, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[136, 10, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[137, 10, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[138, 10, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[139, 10, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[140, 10, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[141, 10, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[142, 10, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[143, 10, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[144, 10, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[145, 10, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[146, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[147, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[148, 10, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[149, 10, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[150, 10, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[151, 10, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[152, 10, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[153, 10, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[154, 10, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[155, 10, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[156, 10, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[157, 10, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[158, 10, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[159, 10, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[160, 10, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[161, 10, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[162, 10, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[163, 10, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[164, 10, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[165, 10, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[166, 10, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[167, 10, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[168, 10, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[169, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[170, 10, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[171, 10, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[172, 10, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[173, 10, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[174, 10, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[175, 10, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[176, 10, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[177, 10, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[178, 10, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[179, 10, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[180, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[181, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[182, 10, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[183, 10, 1, "", "Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[184, 10, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[185, 10, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[186, 14, 1, "", "TF_DTYPE_ID"], [186, 13, 1, "", "create_tf_node"], [186, 13, 1, "", "get_tensor_dest_op"], [186, 13, 1, "", "graph_node_names_details"], [186, 13, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[187, 13, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[191, 9, 0, "-", "lm_evaluation_harness"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness": [[190, 9, 0, "-", "evaluator"], [193, 9, 0, "-", "models"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator": [[190, 13, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models": [[192, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface": [[192, 10, 1, "", "AutoCausalLM"], [192, 10, 1, "", "AutoSeq2SeqLM"], [192, 10, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.optimization": [[195, 9, 0, "-", "benchmark"], [196, 9, 0, "-", "config"], [197, 9, 0, "-", "distillation"], [200, 9, 0, "-", "dynamic"], [203, 9, 0, "-", "mixture"], [204, 9, 0, "-", "model"], [206, 9, 0, "-", "nas"], [208, 9, 0, "-", "optimizer"], [209, 9, 0, "-", "optimizer_tf"], [210, 9, 0, "-", "pipeline"], [211, 9, 0, "-", "pruning"], [213, 9, 0, "-", "pytorch_pruner"], [221, 9, 0, "-", "quantization"], [222, 9, 0, "-", "trainer"], [224, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[195, 13, 1, "", "benchmark"], [195, 13, 1, "", "get_example_inputs"], [195, 13, 1, "", "preprocess_model"], [195, 13, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[196, 10, 1, "", "AutoDistillationConfig"], [196, 10, 1, "", "BenchmarkConfig"], [196, 10, 1, "", "DistillationConfig"], [196, 10, 1, "", "DynamicLengthConfig"], [196, 10, 1, "", "FlashDistillationConfig"], [196, 10, 1, "", "NASConfig"], [196, 10, 1, "", "Provider"], [196, 10, 1, "", "PrunerV2"], [196, 10, 1, "", "PruningConfig"], [196, 10, 1, "", "QuantizationConfig"], [196, 10, 1, "", "TFDistillationConfig"], [196, 10, 1, "", "WeightPruningConfig"], [196, 13, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[196, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[197, 10, 1, "", "Criterion"], [197, 10, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[198, 9, 0, "-", "drop_and_restore_utils"], [199, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[198, 13, 1, "", "sample_layer_configuration"], [198, 13, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[199, 10, 1, "", "Evolution"], [199, 13, 1, "", "approx_ratio"], [199, 13, 1, "", "inverse"], [199, 13, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[199, 12, 1, "", "add_gene"], [199, 12, 1, "", "convex_hull"], [199, 12, 1, "", "crossover"], [199, 12, 1, "", "get_store"], [199, 12, 1, "", "load_store"], [199, 12, 1, "", "mutate"], [199, 12, 1, "", "pareto_frontier"], [199, 12, 1, "", "save_population"], [199, 12, 1, "", "save_store"], [199, 12, 1, "", "set_lower_constraint"], [199, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[202, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[202, 10, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[202, 12, 1, "", "create_distillers"], [202, 12, 1, "", "estimate"], [202, 12, 1, "", "init_by_cfg"], [202, 12, 1, "", "load_search_results"], [202, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[204, 10, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[204, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[205, 9, 0, "-", "basic_nas"], [207, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[205, 10, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[205, 12, 1, "", "estimate"], [205, 12, 1, "", "execute"], [205, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[207, 10, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[208, 10, 1, "", "NoTrainerOptimizer"], [208, 10, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[208, 12, 1, "", "distill"], [208, 12, 1, "", "init_distiller"], [208, 12, 1, "", "init_pruner"], [208, 12, 1, "", "init_quantizer"], [208, 12, 1, "", "prune"], [208, 12, 1, "", "quantize"], [208, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[208, 12, 1, "", "fit"], [208, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[209, 10, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[209, 12, 1, "", "autodistill"], [209, 12, 1, "", "build_train_func"], [209, 12, 1, "", "builtin_eval_func"], [209, 12, 1, "", "distill"], [209, 12, 1, "", "init_distiller"], [209, 12, 1, "", "init_pruner"], [209, 12, 1, "", "init_quantizer"], [209, 12, 1, "", "model_builder_builtin"], [209, 12, 1, "", "prune"], [209, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[210, 13, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[211, 10, 1, "", "PrunerConfig"], [211, 10, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[212, 9, 0, "-", "criteria"], [214, 9, 0, "-", "logger"], [215, 9, 0, "-", "patterns"], [216, 9, 0, "-", "pruners"], [217, 9, 0, "-", "pruning"], [218, 9, 0, "-", "regs"], [219, 9, 0, "-", "schedulers"], [220, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[212, 10, 1, "", "GradientCriterion"], [212, 10, 1, "", "MagnitudeCriterion"], [212, 10, 1, "", "PruningCriterion"], [212, 10, 1, "", "SnipCriterion"], [212, 10, 1, "", "SnipMomentumCriterion"], [212, 13, 1, "", "get_criterion"], [212, 13, 1, "", "register_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion": [[212, 12, 1, "", "on_before_optimizer_step"], [212, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion": [[212, 12, 1, "", "on_step_begin"], [212, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion": [[212, 12, 1, "", "on_after_optimizer_step"], [212, 12, 1, "", "on_before_optimizer_step"], [212, 12, 1, "", "on_step_begin"], [212, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion": [[212, 12, 1, "", "on_before_optimizer_step"], [212, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion": [[212, 12, 1, "", "on_before_optimizer_step"], [212, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[215, 10, 1, "", "BasePattern"], [215, 10, 1, "", "PatternNInM"], [215, 10, 1, "", "PatternNxM"], [215, 13, 1, "", "get_pattern"], [215, 13, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern": [[215, 12, 1, "", "adjust_ratio"], [215, 12, 1, "", "check_layer_validity"], [215, 11, 1, "", "config"], [215, 12, 1, "", "get_block_size_dict"], [215, 12, 1, "", "get_masks"], [215, 12, 1, "", "get_masks_global"], [215, 12, 1, "", "get_masks_local"], [215, 12, 1, "", "get_pattern_lock_masks"], [215, 12, 1, "", "get_reduced_masks_from_data"], [215, 12, 1, "", "get_single_mask_per_target_ratio"], [215, 12, 1, "", "get_sparsity_ratio"], [215, 12, 1, "", "get_sparsity_ratio_each_layer"], [215, 11, 1, "", "invalid_layers"], [215, 11, 1, "", "is_global"], [215, 11, 1, "", "keep_mask_layers"], [215, 11, 1, "", "max_sparsity_ratio_per_op"], [215, 11, 1, "", "min_sparsity_ratio_per_op"], [215, 11, 1, "", "modules"], [215, 11, 1, "", "pattern"], [215, 12, 1, "", "reduce_tensor"], [215, 11, 1, "", "target_sparsity"], [215, 12, 1, "", "update_residual_cnt"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM": [[215, 11, 1, "", "M"], [215, 11, 1, "", "N"], [215, 12, 1, "", "check_layer_validity"], [215, 12, 1, "", "get_ele_mask_per_threshold"], [215, 12, 1, "", "get_least_ninm_mask_from_data"], [215, 12, 1, "", "get_masks_global"], [215, 12, 1, "", "get_pattern_lock_masks"], [215, 12, 1, "", "get_reduced_masks_from_data"], [215, 12, 1, "", "get_sparsity_ratio"], [215, 12, 1, "", "reduce_scores"], [215, 12, 1, "", "reshape_orig_to_pattern"], [215, 12, 1, "", "reshape_reduced_to_orig"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM": [[215, 11, 1, "", "block_size"], [215, 12, 1, "", "check_layer_validity"], [215, 12, 1, "", "count_new_masked_cnts"], [215, 12, 1, "", "get_block_size_dict"], [215, 12, 1, "", "get_mask_per_threshold"], [215, 12, 1, "", "get_masks_global"], [215, 12, 1, "", "get_pattern_lock_masks"], [215, 12, 1, "", "get_reduced_masks_from_data"], [215, 12, 1, "", "get_sparsity_ratio"], [215, 12, 1, "", "get_sparsity_ratio_progressive"], [215, 12, 1, "", "reduce_scores"], [215, 12, 1, "", "reshape_orig_to_pattern"], [215, 12, 1, "", "reshape_reduced_to_orig"], [215, 12, 1, "", "update_new_added_masks"], [215, 12, 1, "", "update_progressive_masks"], [215, 12, 1, "", "update_progressive_masks_global"], [215, 12, 1, "", "update_progressive_masks_linear"], [215, 12, 1, "", "update_progressive_masks_local"], [215, 12, 1, "", "update_progressive_masks_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[216, 10, 1, "", "BasePruner"], [216, 10, 1, "", "BasicPruner"], [216, 10, 1, "", "PatternLockPruner"], [216, 10, 1, "", "ProgressivePruner"], [216, 13, 1, "", "get_pruner"], [216, 13, 1, "", "parse_valid_pruner_types"], [216, 13, 1, "", "register_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner": [[216, 12, 1, "", "check_is_pruned_step"], [216, 11, 1, "", "config"], [216, 11, 1, "", "current_sparsity_ratio"], [216, 11, 1, "", "end_step"], [216, 11, 1, "", "global_step"], [216, 12, 1, "", "mask_weights"], [216, 12, 1, "", "mask_weights_general"], [216, 11, 1, "", "masks"], [216, 11, 1, "", "max_sparsity_ratio_per_op"], [216, 11, 1, "", "modules"], [216, 12, 1, "", "on_after_eval"], [216, 12, 1, "", "on_after_optimizer_step"], [216, 12, 1, "", "on_before_eval"], [216, 12, 1, "", "on_before_optimizer_step"], [216, 12, 1, "", "on_epoch_begin"], [216, 12, 1, "", "on_epoch_end"], [216, 12, 1, "", "on_step_begin"], [216, 12, 1, "", "on_step_end"], [216, 12, 1, "", "on_train_begin"], [216, 12, 1, "", "on_train_end"], [216, 11, 1, "", "pattern"], [216, 11, 1, "", "pruning_frequency"], [216, 11, 1, "", "scheduler"], [216, 11, 1, "", "scores"], [216, 11, 1, "", "start_step"], [216, 11, 1, "", "target_sparsity_ratio"], [216, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner": [[216, 11, 1, "", "criterion"], [216, 12, 1, "", "on_after_optimizer_step"], [216, 12, 1, "", "on_before_optimizer_step"], [216, 11, 1, "", "pattern"], [216, 11, 1, "", "reg"], [216, 11, 1, "", "scheduler"], [216, 12, 1, "", "set_global_step"], [216, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner": [[216, 12, 1, "", "on_after_optimizer_step"], [216, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner": [[216, 12, 1, "", "check_is_pruned_progressive_step"], [216, 12, 1, "", "check_progressive_validity"], [216, 12, 1, "", "on_after_optimizer_step"], [216, 12, 1, "", "on_before_optimizer_step"], [216, 12, 1, "", "on_step_begin"], [216, 12, 1, "", "print_progressive_sparsity"], [216, 12, 1, "", "update_masks_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[217, 10, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning": [[217, 11, 1, "", "config_file_path"], [217, 12, 1, "", "get_sparsity_ratio"], [217, 11, 1, "", "model"], [217, 12, 1, "", "on_after_eval"], [217, 12, 1, "", "on_after_optimizer_step"], [217, 12, 1, "", "on_before_eval"], [217, 12, 1, "", "on_before_optimizer_step"], [217, 12, 1, "", "on_epoch_begin"], [217, 12, 1, "", "on_epoch_end"], [217, 12, 1, "", "on_step_begin"], [217, 12, 1, "", "on_step_end"], [217, 12, 1, "", "on_train_begin"], [217, 12, 1, "", "on_train_end"], [217, 11, 1, "", "pruner_info"], [217, 11, 1, "", "pruners"], [217, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[218, 10, 1, "", "BaseReg"], [218, 10, 1, "", "GroupLasso"], [218, 13, 1, "", "get_reg"], [218, 13, 1, "", "get_reg_type"], [218, 13, 1, "", "register_reg"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg": [[218, 12, 1, "", "on_after_optimizer_step"], [218, 12, 1, "", "on_before_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso": [[218, 11, 1, "", "alpha"], [218, 12, 1, "", "on_after_optimizer_step"], [218, 12, 1, "", "on_before_optimizer_step"], [218, 11, 1, "", "reg_terms"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[219, 10, 1, "", "IterativeScheduler"], [219, 10, 1, "", "OneshotScheduler"], [219, 10, 1, "", "PruningScheduler"], [219, 13, 1, "", "get_scheduler"], [219, 13, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler": [[219, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler": [[219, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler": [[219, 11, 1, "", "config"], [219, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[220, 13, 1, "", "check_config"], [220, 13, 1, "", "check_key_validity"], [220, 13, 1, "", "parse_to_prune"], [220, 13, 1, "", "process_and_check_config"], [220, 13, 1, "", "process_config"], [220, 13, 1, "", "process_weight_config"], [220, 13, 1, "", "process_yaml_config"], [220, 13, 1, "", "reset_none_to_default"], [220, 13, 1, "", "update_params"]], "intel_extension_for_transformers.optimization.quantization": [[221, 10, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[222, 10, 1, "", "BaseTrainer"], [222, 10, 1, "", "NLPSeq2SeqTrainer"], [222, 10, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[222, 12, 1, "", "auto_distil_evaluation_loop"], [222, 12, 1, "", "autodistillation"], [222, 12, 1, "", "benchmark"], [222, 12, 1, "", "builtin_eval_func"], [222, 12, 1, "", "builtin_train_func"], [222, 12, 1, "", "compute_loss"], [222, 12, 1, "", "create_optimizer_builtin"], [222, 12, 1, "", "distill"], [222, 12, 1, "", "export_to_bf16_onnx"], [222, 12, 1, "", "export_to_fp32_onnx"], [222, 12, 1, "", "export_to_int8_onnx"], [222, 12, 1, "", "export_to_jit"], [222, 12, 1, "", "export_to_onnx"], [222, 12, 1, "", "init_distiller"], [222, 12, 1, "", "init_pruner"], [222, 12, 1, "", "init_quantizer"], [222, 12, 1, "", "model_builder_builtin"], [222, 12, 1, "", "nas"], [222, 12, 1, "", "orchestrate_optimizations"], [222, 12, 1, "", "prune"], [222, 12, 1, "", "quantize"], [222, 12, 1, "", "run_evolutionary_search"], [222, 12, 1, "", "set_dynamic_config"], [222, 12, 1, "", "train"], [222, 12, 1, "", "training_step"], [222, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[222, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[223, 9, 0, "-", "get_throughput"], [225, 9, 0, "-", "metrics"], [226, 9, 0, "-", "models"], [229, 9, 0, "-", "objectives"], [230, 9, 0, "-", "utility"], [231, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[225, 10, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[227, 9, 0, "-", "modeling_bert_dynamic"], [228, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[227, 10, 1, "", "BertAttention"], [227, 10, 1, "", "BertEmbeddings"], [227, 10, 1, "", "BertEncoder"], [227, 10, 1, "", "BertForMaskedLM"], [227, 10, 1, "", "BertForMultipleChoice"], [227, 10, 1, "", "BertForNextSentencePrediction"], [227, 10, 1, "", "BertForPreTraining"], [227, 10, 1, "", "BertForPreTrainingOutput"], [227, 10, 1, "", "BertForQuestionAnswering"], [227, 10, 1, "", "BertForSequenceClassification"], [227, 10, 1, "", "BertForTokenClassification"], [227, 10, 1, "", "BertIntermediate"], [227, 10, 1, "", "BertLMHeadModel"], [227, 10, 1, "", "BertLMPredictionHead"], [227, 10, 1, "", "BertLayer"], [227, 10, 1, "", "BertModel"], [227, 10, 1, "", "BertOnlyMLMHead"], [227, 10, 1, "", "BertOnlyNSPHead"], [227, 10, 1, "", "BertOutput"], [227, 10, 1, "", "BertPooler"], [227, 10, 1, "", "BertPreTrainedModel"], [227, 10, 1, "", "BertPreTrainingHeads"], [227, 10, 1, "", "BertPredictionHeadTransform"], [227, 10, 1, "", "BertSelfAttention"], [227, 10, 1, "", "BertSelfOutput"], [227, 13, 1, "", "expand_gather"], [227, 13, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "get_output_embeddings"], [227, 12, 1, "", "prepare_inputs_for_generation"], [227, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "get_output_embeddings"], [227, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "get_output_embeddings"], [227, 12, 1, "", "prepare_inputs_for_generation"], [227, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[227, 12, 1, "", "feed_forward_chunk"], [227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "get_input_embeddings"], [227, 12, 1, "", "set_input_embeddings"], [227, 12, 1, "", "set_length_config"], [227, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[227, 12, 1, "", "forward"], [227, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[227, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[228, 10, 1, "", "RobertaAttention"], [228, 10, 1, "", "RobertaClassificationHead"], [228, 10, 1, "", "RobertaEmbeddings"], [228, 10, 1, "", "RobertaEncoder"], [228, 10, 1, "", "RobertaForCausalLM"], [228, 10, 1, "", "RobertaForMaskedLM"], [228, 10, 1, "", "RobertaForMultipleChoice"], [228, 10, 1, "", "RobertaForQuestionAnswering"], [228, 10, 1, "", "RobertaForSequenceClassification"], [228, 10, 1, "", "RobertaForTokenClassification"], [228, 10, 1, "", "RobertaIntermediate"], [228, 10, 1, "", "RobertaLMHead"], [228, 10, 1, "", "RobertaLayer"], [228, 10, 1, "", "RobertaModel"], [228, 10, 1, "", "RobertaOutput"], [228, 10, 1, "", "RobertaPooler"], [228, 10, 1, "", "RobertaPreTrainedModel"], [228, 10, 1, "", "RobertaSelfAttention"], [228, 10, 1, "", "RobertaSelfOutput"], [228, 13, 1, "", "create_position_ids_from_input_ids"], [228, 13, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[228, 12, 1, "", "create_position_ids_from_inputs_embeds"], [228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "get_output_embeddings"], [228, 12, 1, "", "prepare_inputs_for_generation"], [228, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "get_output_embeddings"], [228, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[228, 12, 1, "", "feed_forward_chunk"], [228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "get_input_embeddings"], [228, 12, 1, "", "set_input_embeddings"], [228, 12, 1, "", "set_length_config"], [228, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[228, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[228, 12, 1, "", "forward"], [228, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[228, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[229, 10, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[229, 12, 1, "", "modelsize"], [229, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[230, 13, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[231, 10, 1, "", "TFDataloader"], [231, 13, 1, "", "distributed_init"], [231, 13, 1, "", "get_filepath"], [231, 13, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[232, 9, 0, "-", "data_augmentation"], [234, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[232, 10, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[232, 12, 1, "", "data_augment"], [232, 12, 1, "", "mit_data_augmentation"], [232, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[234, 10, 1, "", "AugmenterType"], [234, 13, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[237, 10, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[237, 12, 1, "", "setUpClass"], [237, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[238, 10, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[238, 12, 1, "", "setUpClass"], [238, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[239, 10, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[239, 12, 1, "", "setUpClass"], [239, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[240, 10, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[240, 12, 1, "", "setUpClass"], [240, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[241, 10, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[241, 12, 1, "", "setUpClass"], [241, 12, 1, "", "tearDownClass"]], "test_binary_op": [[242, 10, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[242, 12, 1, "", "setUpClass"], [242, 12, 1, "", "tearDownClass"]], "test_binaryop": [[243, 10, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[243, 12, 1, "", "setUpClass"], [243, 12, 1, "", "tearDownClass"]], "test_cast_to": [[244, 10, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[244, 12, 1, "", "setUpClass"], [244, 12, 1, "", "tearDownClass"]], "test_concat": [[245, 10, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[245, 12, 1, "", "setUpClass"], [245, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[246, 10, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[246, 12, 1, "", "setUpClass"], [246, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[247, 10, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[247, 12, 1, "", "setUpClass"], [247, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[248, 10, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[248, 12, 1, "", "setUpClass"], [248, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[249, 10, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[249, 12, 1, "", "setUpClass"], [249, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[250, 10, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[250, 12, 1, "", "setUpClass"], [250, 12, 1, "", "tearDownClass"]], "test_embedding": [[251, 10, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[251, 12, 1, "", "setUpClass"], [251, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[252, 10, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[252, 12, 1, "", "setUpClass"], [252, 12, 1, "", "tearDownClass"]], "test_execution_options": [[253, 10, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[253, 12, 1, "", "setUpClass"], [253, 12, 1, "", "tearDownClass"]], "test_gelu": [[254, 10, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[254, 12, 1, "", "setUpClass"], [254, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[255, 10, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[255, 12, 1, "", "setUpClass"], [255, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[256, 10, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[256, 12, 1, "", "setUpClass"], [256, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[257, 10, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[258, 10, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"], [258, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[259, 10, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[260, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[261, 10, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_layernorm": [[262, 10, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_linear": [[263, 10, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[264, 10, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[265, 10, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_main": [[266, 10, 1, "", "TestMain"]], "test_main.TestMain": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_matmul": [[267, 10, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[268, 10, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[269, 10, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[270, 10, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[271, 10, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[272, 10, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[274, 10, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[275, 10, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_ops": [[276, 10, 1, "", "TestOps"]], "test_ops.TestOps": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[277, 10, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[278, 10, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[279, 10, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_permute": [[280, 10, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[281, 10, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_pow": [[282, 10, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[283, 10, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[284, 10, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[285, 10, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[286, 10, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[287, 10, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[288, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[289, 10, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[290, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_size": [[291, 10, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_softmax": [[292, 10, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[293, 10, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_tanh": [[294, 10, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[295, 10, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[296, 10, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[297, 10, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[298, 10, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_transpose": [[299, 10, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[300, 10, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_unet": [[301, 10, 1, "", "TestUnet"]], "test_unet.TestUnet": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[302, 10, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[303, 10, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[303, 12, 1, "", "setUpClass"], [303, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[304, 10, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[304, 12, 1, "", "setUpClass"], [304, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[305, 10, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[305, 12, 1, "", "setUpClass"], [305, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[306, 10, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[307, 10, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[308, 10, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[309, 10, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:method", "13": "py:function", "14": "py:data"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "method", "Python method"], "13": ["py", "function", "Python function"], "14": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 342, 349], "api_doc_exampl": 0, "modul": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 195, 196, 197, 198, 199, 202, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "content": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 195, 196, 197, 198, 199, 202, 204, 205, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 386, 391], "class": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 192, 196, 197, 199, 202, 204, 205, 207, 208, 209, 211, 212, 215, 216, 217, 218, 219, 221, 222, 225, 227, 228, 229, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 318, 319, 320, 330, 378], "function": [0, 2, 10, 14, 15, 36, 48, 100, 131, 186, 187, 190, 195, 196, 198, 199, 210, 212, 215, 216, 218, 219, 220, 227, 228, 230, 231, 234], "attribut": [0, 36, 100, 186, 340, 350], "backend": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 346, 351, 380], "neural_engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "compil": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 315, 355], "extractor": [3, 4, 5, 6, 7], "submodul": [4, 9, 11, 12, 36, 100, 194, 200, 201, 203, 206, 213, 224, 226, 233], "onnx_extractor": 5, "tf_extractor": 6, "torch_extractor": 7, "graph": [8, 9, 316, 351, 353, 354], "graph_util": 10, "subpackag": [11, 188, 201], "loader": [12, 13], "logger": [14, 214], "onnx_util": 15, "op": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 350, 353], "all": 16, "assert": 17, "batch_matmul": 18, "batch_matmul_v2": 19, "bias_add": 20, "binary_op": 21, "cast": 22, "concat": 23, "conv": 24, "co": 25, "empty_op": 26, "expand_dim": 27, "fused_batch_matmul_v2": 28, "fused_batch_norm_v3": 29, "fused_gemm": 30, "fused_matmul": 31, "gather": 32, "gather_el": 33, "gelu": [34, 98], "gemm": [35, 365, 366, 368, 371], "packag": [36, 100], "iterator_get_next": 37, "iterator_v2": 38, "layer_norm": [39, 111], "log_softmax": 40, "map_and_batch_dataset": 41, "matmul": [42, 367, 368, 369], "mean": [43, 363], "mkl_layer_norm": 44, "model_dataset": 45, "one_hot": 46, "onnx_input": 47, "optimize_dataset": 49, "pack": 50, "padding_sequ": [51, 130], "placehold": 52, "pos_emb": 53, "pow": 54, "quantize_linear": 55, "quantize_v2": 56, "quantized_fused_matmul_and_dequant": 57, "quantized_matmul_with_bias_and_dequant": 58, "reduce_mean": 59, "reduce_sum": 60, "reorder": [61, 365, 369, 370, 371], "reshap": 62, "rsub": 63, "scatter_el": 64, "shape": 65, "sin": 66, "size": [67, 367], "slice": 68, "softmax": [69, 375], "split": 70, "squeez": 71, "strided_slic": 72, "tensor": 73, "top_k": 74, "transpos": [75, 369, 370], "unpack": 76, "unsqueez": 77, "view": 78, "sub_graph": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185], "innerproductreshapefus": 79, "add_cls_token": 80, "add_embed": 81, "arangewithreciproc": 82, "attentionblock_attentionmaskaddreshap": 83, "attentionblock_constantofshapewithmul": 84, "attentionblock_qkvprereshap": 85, "attentionblock_qkvreshap": 86, "attentionblock_resize2gath": 87, "attentionblock_weightreshapeto4d": 88, "attention_mask_length_adaptive_keep_indic": 89, "attention_output_layer_norm_length_adaptive_keep_indic": 90, "attention_reshap": 91, "cast_to": 92, "collect_quant_info": 93, "conv_reshap": 94, "decoder_attn_reshap": 95, "einsumwitharang": 96, "embeddingbag": 97, "generate_sequ": 99, "innerproductwithbiasgelu": 101, "innerproductwithslic": 102, "innerproductwithswish": 103, "input_data": 104, "input_fil": 105, "insert_bf16_nod": 106, "insert_quant_nod": 107, "int8_bf16_mixed_precision_check": 108, "interact_featur": 109, "last_layer_shap": 110, "layer_norm_with_reduce_mean": 112, "layer_norm_with_transpos": 113, "llama_embed": 114, "llama_matmulwithtranspos": 115, "llama_postprocess": 116, "llama_rotary_pos_emb": 117, "lower_all_tupl": 118, "matmul_with_bia": 119, "matmul_with_bias_add": 120, "matmul_with_bias_gelu": 121, "matmul_with_bias_relu": 122, "matmul_with_bias_sigmoid": 123, "matmul_with_bias_tanh": 124, "matmul_with_transpos": 125, "merged_embeddingbag": 126, "multi_head_attent": 127, "operator_adaptor": 128, "output_data": 129, "pattern": [131, 215, 350, 353, 354, 358, 365, 366, 371], "position_embed": 132, "position_embeddings_v1": 133, "qkv_merg": 134, "qkv_reshap": 135, "quantize_fus": 136, "quantized_graph_dtype_refactor": 137, "remove_constant_op": 138, "remove_last_view": 139, "remove_rang": 140, "removeslic": 141, "reshape_after_restore_hidden_st": 142, "reshape_before_and_after_attention_out_layer_norm_gather_el": 143, "reshape_before_restore_hidden_st": 144, "reshape_fus": 145, "resnetblock_instancenormreshapefromconv": 146, "resnetblock_instancenormreshapefromdiv": 147, "restnetblock_groupnorm": 148, "restore_hidden_states_in_length_adaptive_update_indic": 149, "rms_norm": 150, "rotary_pos_emb": 151, "slicemask": 152, "stablediffusion_reshapefus": 153, "stablediffusion_bf16convert": 154, "start_end_logit": 155, "subgraph_match": 156, "textencdoer_word_embed": 157, "textencoder_attentionmaskaddreshap": 158, "textencoder_attentionreshap": 159, "textencoder_kvreshap": 160, "textencoder_mulreshap": 161, "textencoder_qreshap": 162, "textencoder_softmaxreshap": 163, "textencoder_causal_attention_mask": 164, "token_type_embed": 165, "token_type_embeddings_v1": 166, "torch_embed": 167, "torch_ip_insert_bia": 168, "torchinsertbf16nod": 169, "torchpaddingsqu": 170, "transformer2dmodel_attentionmaskaddreshap": 171, "transformer2dmodel_constantofshapewithmul": 172, "transformer2dmodel_ffnslic": 173, "transformer2dmodel_ffnslice_1": 174, "transformer2dmodel_qkvprereshap": 175, "transformer2dmodel_qkvreshap": 176, "transformer2dmodel_qkvreshape4d": 177, "transformer2dmodel_encoderhiddenstatesreshap": 178, "transformer2dmodel_getsamplebatch": 179, "transformer2dmodel_instancenormreshapefromadd": 180, "transformer2dmodel_instancenormreshapefromconcat": 181, "transformer2dmodel_sampleslic": 182, "transformer2dmodel_upblockres": 183, "transpose_batch_matmul": 184, "word_embed": 185, "tf_util": 186, "torch_util": 187, "evalu": [189, 190, 191, 192, 193], "lm_evaluation_har": [190, 191, 192, 193], "model": [192, 193, 204, 226, 227, 228, 311, 324, 331, 343, 346, 351, 352, 355, 356, 374, 380], "huggingfac": 192, "optim": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 325, 326], "benchmark": [195, 331, 356, 375], "config": [196, 323, 330, 350, 353], "distil": [197, 330, 344, 345, 347], "dynam": [198, 199, 200, 367, 382], "drop_and_restore_util": 198, "evolut": 199, "mixtur": [202, 203], "auto_distil": 202, "na": [205, 206, 207, 345], "basic_na": 205, "optimizer_tf": [209, 330], "pipelin": [210, 330, 380], "prune": [211, 217, 345, 347, 381], "pytorch_prun": [212, 213, 214, 215, 216, 217, 218, 219, 220], "criteria": 212, "pruner": 216, "reg": 218, "schedul": 219, "util": [220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234], "quantiz": [221, 345, 347, 356, 382], "trainer": [222, 327, 330, 344, 381, 382], "get_throughput": 223, "metric": [225, 344, 378, 381, 382], "modeling_bert_dynam": 227, "modeling_roberta_dynam": 228, "object": [229, 379, 382], "utility_tf": 231, "preprocess": [232, 233, 234, 367], "data_augment": 232, "version": [235, 349], "sparsity_al": 236, "test_add_cls_token": 237, "test_add_embed": 238, "test_attention_output_layer_norm_length_adaptive_keep_indic": 239, "test_attention_reshap": 240, "test_bert_mini_fp32": 241, "test_binary_op": 242, "test_binaryop": 243, "test_cast_to": 244, "test_concat": 245, "test_conv_reshap": 246, "test_decoder_attn_reshap": 247, "test_dispatcher_tuning_acc": 248, "test_dispatcher_tuning_throughput": 249, "test_dynamic_quant": 250, "test_embed": 251, "test_embeddingbag": 252, "test_execution_opt": 253, "test_gelu": 254, "test_gpt_int8": 255, "test_graph_dispatch": 256, "test_insert_input_output_data": 257, "test_is_supported_onnx_graph": 258, "test_last_layer_shap": 259, "test_layer_norm_with_reduce_mean": 260, "test_layer_norm_with_transpos": 261, "test_layernorm": 262, "test_linear": 263, "test_linear_int8": 264, "test_llama_pattern": 265, "test_main": 266, "test_matmul": 267, "test_matmul_int8": 268, "test_matmul_with_bias_relu": 269, "test_matmul_with_bias_sigmoid": 270, "test_matmul_with_bias_tanh": 271, "test_merged_embeddingbag": 272, "test_model": 273, "test_onnx_util": 274, "test_operator_adaptor": 275, "test_op": 276, "test_padding_seq": 277, "test_padding_sequ": 278, "test_pattern_dispatch": 279, "test_permut": 280, "test_position_embed": 281, "test_pow": 282, "test_primitive_cache_acc": 283, "test_primitive_cache_throughput": 284, "test_qkv_merg": 285, "test_qkv_reshap": 286, "test_quant_onnx_execut": 287, "test_reshape_after_restore_hidden_st": 288, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 289, "test_reshape_before_restore_hidden_st": 290, "test_siz": 291, "test_softmax": 292, "test_start_end_logit": 293, "test_tanh": 294, "test_text_encod": 295, "test_text_encoder_bf16": 296, "test_tf_util": 297, "test_token_type_embed": 298, "test_transpos": 299, "test_transpose_batch_matmul": 300, "test_unet": 301, "test_unet_bf16": 302, "test_unsqueez": 303, "test_vae_decod": 304, "test_vae_decoder_bf16": 305, "test_weight_sharing_acc": 306, "test_weight_sharing_dispatcher_tuning_acc": 307, "test_weight_sharing_dispatcher_tuning_throughtput": 308, "test_weight_sharing_throughput": 309, "secur": 310, "polici": 310, "report": 310, "vulner": 310, "intel": [311, 329, 334, 343, 345, 387], "extens": [311, 329, 334, 343, 345, 387], "transform": [311, 329, 334, 343, 345, 347, 360, 387], "acceler": [311, 347, 360, 364], "base": [311, 345], "platform": [311, 359, 373], "select": 311, "public": 311, "event": 311, "api": [312, 313, 314, 317, 322, 328, 330, 331, 346, 352, 360], "document": [313, 334, 387], "exampl": [313, 330, 331, 332, 345, 346, 352, 355, 375, 379, 380, 385], "python": [314, 352], "engin": [317, 318, 338, 345, 347, 349, 351, 353, 355, 356, 359, 391], "kernel": [319, 322, 335, 353, 360, 364, 367, 375, 388], "operator_desc": [320, 362, 363], "oper": [321, 352, 357], "specif": 321, "type": [321, 350, 381], "pytorch": [325, 330, 331, 344, 345], "tensorflow": [326, 330, 344, 345], "user": [328, 339, 360, 362, 363, 384, 392], "face": 328, "architectur": [329, 351], "autodistil": 330, "design": [330, 356], "framework": [330, 362, 363], "criterion": [330, 344], "knowledgedistillationloss": 330, "intermediatelayersknowledgedistillationloss": 330, "usag": [330, 344, 346, 362, 363, 375, 381], "flash": 330, "regular": 330, "introduct": [331, 342, 344, 346, 350, 352, 353, 354, 355, 358, 360, 362, 363, 364, 365, 369, 374, 378, 379, 380, 381, 382], "get": [331, 342, 343, 347, 352, 356, 378, 382], "start": [331, 342, 343, 347, 378, 382], "stock": [331, 345], "ipex": [331, 345], "output": [331, 343], "featur": [333, 362, 363, 382, 386], "welcom": [334, 387], "section": [334, 387], "implement": [336, 389], "detail": [336, 367, 370, 389], "perform": [337, 359, 360, 372, 373, 390], "neural": [338, 345, 347, 349, 351, 359, 391], "guid": [339, 384, 392], "contributor": [340, 341], "coven": [340, 341], "code": [340, 341], "conduct": [340, 341], "our": 340, "pledg": 340, "standard": 340, "respons": 340, "scope": 340, "enforc": 340, "contribut": 341, "guidelin": 341, "pull": 341, "request": 341, "checklist": 341, "templat": 341, "support": [341, 342, 343, 346, 355, 359, 360, 378, 379, 382], "data": [342, 366, 373], "augment": 342, "instal": [342, 343, 348, 349, 356, 360], "depend": 342, "script": [342, 344, 381, 382], "paramet": 342, "text": 342, "gener": [342, 351], "argument": 342, "overview": 343, "recommend": 343, "hardwar": [343, 348], "valid": [343, 348, 373], "environ": [343, 348, 356], "how": [343, 353, 374], "work": [343, 364], "1": [343, 351, 352, 356, 357, 374], "prerequisit": [343, 348, 349, 356, 367], "2": [343, 351, 356, 357, 374], "from": [343, 348, 349], "pypi": [343, 348], "conda": 343, "3": [343, 351, 374], "sourc": [343, 348], "To": [343, 356], "run": [343, 351, 352, 356, 374], "requir": [343, 348], "prepar": [343, 355, 356, 374], "dataset": [343, 356], "compress": 343, "4": [343, 351, 373], "infer": [343, 351, 361, 380], "expect": 343, "summari": [343, 378], "next": 343, "step": 343, "learn": 343, "more": [343, 353, 364], "knowledg": [344, 345], "intermedi": 344, "layer": [344, 368], "creat": [344, 354, 381, 382], "an": [344, 355, 381, 382], "instanc": [344, 381, 382], "option": [344, 353, 381, 382], "distillationconfig": 344, "length": [345, 347], "adapt": [345, 347], "auto": 345, "orchestr": 345, "refer": [345, 360], "deploy": 345, "dens": [345, 364], "spars": [345, 352, 364, 365, 366, 368, 371, 374], "export": 346, "onnx": [346, 351, 355, 356], "matrix": [346, 359, 360, 367, 379, 382], "fp32": 346, "bf16": 346, "int8": [346, 356, 380], "For": [346, 375], "executor": [346, 357, 380], "linux": 348, "window": 348, "system": 348, "softwar": 348, "stabl": 349, "pip": 349, "binari": [349, 351, 362], "deploi": [349, 351], "bare": 349, "metal": 349, "add": [350, 357], "custom": [350, 351, 357], "regist": [350, 357], "node": [350, 354], "set": [350, 352], "map": [350, 354], "fuse": 350, "new": [350, 354], "after": 350, "fusion": [350, 354], "integr": 351, "tf": 351, "us": [351, 367], "through": 351, "manual": 351, "yaml": 351, "weight": [351, 367, 374], "build": [351, 360, 375], "profil": [352, 372], "profl": 352, "you": 352, "can": 352, "onli": 352, "engine_profil": 352, "befor": 352, "c": 352, "part": 352, "csv": 352, "ratio": 352, "total": 352, "level": 352, "json": 352, "iter": 352, "tune": [353, 356, 382], "dispatch": 353, "best": 353, "relat": 353, "runtim": 353, "turn": 353, "mechan": 353, "dict": 354, "obtain": 354, "necessari": 354, "inform": [354, 377], "construct": 354, "establish": 354, "connect": 354, "remov": [354, 358], "old": 354, "insert": 354, "ir": [355, 356], "format": [355, 366, 376], "low": 356, "precis": 356, "its": 356, "accuraci": [356, 382], "h": 357, "includ": 357, "cpp": 357, "src": 357, "recogn": 358, "represent": 358, "pars": 358, "list": [358, 381], "search": 358, "each": 358, "straight": 358, "chain": 358, "splice": 358, "sub": 358, "main": 358, "duplic": 358, "result": [358, 374], "configur": [359, 373], "librari": 360, "test": 360, "sparse_matmul": [360, 375], "3d": 361, "memori": 361, "layout": 361, "spmm_vnni": [361, 375], "cach": 361, "issu": 361, "injector": [362, 363], "param_typ": [362, 363], "hpp": [362, 363], "jit_binaryop_injector": 362, "develop": [362, 363, 375], "": [362, 363], "perspect": [362, 363], "element": 363, "wise": 363, "alpha": 363, "beta": 363, "scale": 363, "jit_eltwise_injector": 363, "naiv": 364, "tile": 364, "effici": 364, "per": 364, "thread": [364, 373], "prefetch": 364, "amx": 365, "brief": 365, "isa": 365, "avx512f": 366, "kei": 366, "instruct": 366, "loop": 366, "quant": 367, "problem": [367, 368, 369, 370], "descript": [367, 368, 370], "differ": 367, "jit": 367, "path": 367, "small_wei": 367, "large_wei": 367, "normal": 368, "layernorm": 368, "pre": 368, "comput": 368, "spmm": 368, "direct": 368, "layernorm_ba": [368, 375], "statement": 369, "matmul_p2031_2013": 369, "matmul_avx512f_p2031_p2013": [369, 375], "matmul_noperm_p2031_p1302": 369, "matmul_vnni_noperm_p2013_p1302": 369, "beforehand": 369, "mha": [370, 375], "calcul": 370, "vnni": 371, "On": 371, "fly": 371, "activ": 371, "candid": 371, "verbos": 372, "vtune": 372, "sde": 372, "singl": 373, "multi": 373, "visual": 374, "distribut": 374, "setup": 374, "below": 374, "command": 374, "analysi": 374, "spmm_avx512f": 375, "spmm_amx_bf16_x16": 375, "eltwiseop": 375, "transpose_matmul": 375, "matmul_vnni_noperm_p2031_p1302": 375, "attent": 375, "static": [375, 382], "dynamic_quant_matmul": 375, "dynamic_qu": 375, "input": 376, "legal": 377, "licens": 377, "citat": 377, "trademark": 377, "prunerconfig": 381, "pruningconfig": 381, "fundament": 382, "approach": 382, "post": 382, "train": 382, "awar": 382, "quantizationconfig": 382, "releas": 383, "note": 383}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [190, "module-contents"], [192, "module-contents"], [195, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [202, "module-contents"], [204, "module-contents"], [205, "module-contents"], [207, "module-contents"], [208, "module-contents"], [209, "module-contents"], [210, "module-contents"], [211, "module-contents"], [212, "module-contents"], [215, "module-contents"], [216, "module-contents"], [217, "module-contents"], [218, "module-contents"], [219, "module-contents"], [220, "module-contents"], [221, "module-contents"], [222, "module-contents"], [225, "module-contents"], [227, "module-contents"], [228, "module-contents"], [229, "module-contents"], [230, "module-contents"], [231, "module-contents"], [232, "module-contents"], [234, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [241, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [247, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [302, "module-contents"], [303, "module-contents"], [304, "module-contents"], [305, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [192, "classes"], [196, "classes"], [197, "classes"], [199, "classes"], [202, "classes"], [204, "classes"], [205, "classes"], [207, "classes"], [208, "classes"], [209, "classes"], [211, "classes"], [212, "classes"], [215, "classes"], [216, "classes"], [217, "classes"], [218, "classes"], [219, "classes"], [221, "classes"], [222, "classes"], [225, "classes"], [227, "classes"], [228, "classes"], [229, "classes"], [231, "classes"], [232, "classes"], [234, "classes"], [237, "classes"], [238, "classes"], [239, "classes"], [240, "classes"], [241, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [247, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [254, "classes"], [255, "classes"], [256, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"], [303, "classes"], [304, "classes"], [305, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [10, "functions"], [14, "functions"], [15, "functions"], [36, "functions"], [48, "functions"], [100, "functions"], [131, "functions"], [186, "functions"], [187, "functions"], [190, "functions"], [195, "functions"], [196, "functions"], [198, "functions"], [199, "functions"], [210, "functions"], [212, "functions"], [215, "functions"], [216, "functions"], [218, "functions"], [219, "functions"], [220, "functions"], [227, "functions"], [228, "functions"], [230, "functions"], [231, "functions"], [234, "functions"]], "Attributes": [[0, "attributes"], [36, "attributes"], [100, "attributes"], [186, "attributes"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [36, "submodules"], [100, "submodules"], [194, "submodules"], [200, "submodules"], [201, "submodules"], [203, "submodules"], [206, "submodules"], [213, "submodules"], [224, "submodules"], [226, "submodules"], [233, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[11, "subpackages"], [188, "subpackages"], [201, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[36, "package-contents"], [100, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[188, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[189, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator": [[190, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness": [[191, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface": [[192, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models": [[193, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models"]], "intel_extension_for_transformers": [[194, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[195, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[196, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[197, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[198, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[199, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[200, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[201, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[202, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[203, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[204, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[205, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[206, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[207, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[208, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[209, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[210, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[211, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[213, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[214, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[215, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[216, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[217, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[218, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[220, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "intel_extension_for_transformers.optimization.quantization": [[221, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[222, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[223, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[224, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[225, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[226, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[227, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[228, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[229, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[230, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[231, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[232, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[233, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[234, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[235, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[236, "module-sparsity_all"]], "test_add_cls_token": [[237, "module-test_add_cls_token"]], "test_add_embeddings": [[238, "module-test_add_embeddings"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[239, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[240, "module-test_attention_reshape"]], "test_bert_mini_fp32": [[241, "module-test_bert_mini_fp32"]], "test_binary_op": [[242, "module-test_binary_op"]], "test_binaryop": [[243, "module-test_binaryop"]], "test_cast_to": [[244, "module-test_cast_to"]], "test_concat": [[245, "module-test_concat"]], "test_conv_reshape": [[246, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[247, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[248, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[249, "module-test_dispatcher_tuning_throughput"]], "test_dynamic_quantization": [[250, "module-test_dynamic_quantization"]], "test_embedding": [[251, "module-test_embedding"]], "test_embeddingbag": [[252, "module-test_embeddingbag"]], "test_execution_options": [[253, "module-test_execution_options"]], "test_gelu": [[254, "module-test_gelu"]], "test_gpt_int8": [[255, "module-test_gpt_int8"]], "test_graph_dispatch": [[256, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[257, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[258, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[259, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[260, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[261, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[262, "module-test_layernorm"]], "test_linear": [[263, "module-test_linear"]], "test_linear_int8": [[264, "module-test_linear_int8"]], "test_llama_pattern": [[265, "module-test_llama_pattern"]], "test_main": [[266, "module-test_main"]], "test_matmul": [[267, "module-test_matmul"]], "test_matmul_int8": [[268, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[269, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[270, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[271, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[272, "module-test_merged_embeddingbag"]], "test_model": [[273, "module-test_model"]], "test_onnx_utils": [[274, "module-test_onnx_utils"]], "test_operator_adaptor": [[275, "module-test_operator_adaptor"]], "test_ops": [[276, "module-test_ops"]], "test_padding_seq": [[277, "module-test_padding_seq"]], "test_padding_sequence": [[278, "module-test_padding_sequence"]], "test_pattern_dispatch": [[279, "module-test_pattern_dispatch"]], "test_permute": [[280, "module-test_permute"]], "test_position_embeddings": [[281, "module-test_position_embeddings"]], "test_pow": [[282, "module-test_pow"]], "test_primitive_cache_acc": [[283, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[284, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[285, "module-test_qkv_merge"]], "test_qkv_reshape": [[286, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[287, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[288, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[289, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[290, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[291, "module-test_size"]], "test_softmax": [[292, "module-test_softmax"]], "test_start_end_logits": [[293, "module-test_start_end_logits"]], "test_tanh": [[294, "module-test_tanh"]], "test_text_encoder": [[295, "module-test_text_encoder"]], "test_text_encoder_bf16": [[296, "module-test_text_encoder_bf16"]], "test_tf_utils": [[297, "module-test_tf_utils"]], "test_token_type_embeddings": [[298, "module-test_token_type_embeddings"]], "test_transpose": [[299, "module-test_transpose"]], "test_transpose_batch_matmul": [[300, "module-test_transpose_batch_matmul"]], "test_unet": [[301, "module-test_unet"]], "test_unet_bf16": [[302, "module-test_unet_bf16"]], "test_unsqueeze": [[303, "module-test_unsqueeze"]], "test_vae_decoder": [[304, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[305, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[306, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[307, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[308, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[309, "module-test_weight_sharing_throughput"]], "Security Policy": [[310, "security-policy"]], "Report a Vulnerability": [[310, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[311, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[311, "selected-publications-events"]], "API": [[312, "api"]], "API Document Example": [[313, "api-document-example"]], "Python APIs": [[314, "python-apis"]], "Compile": [[315, "compile"]], "Graph": [[316, "graph"]], "Engine API": [[317, "engine-api"]], "Class engine": [[318, "class-engine"]], "Class Kernel": [[319, "class-kernel"]], "Class operator_desc": [[320, "class-operator-desc"]], "Operator Specific Types": [[321, "operator-specific-types"]], "Kernel APIs": [[322, "kernel-apis"]], "Config": [[323, "config"]], "Model": [[324, "model"]], "PyTorch Optimizer": [[325, "pytorch-optimizer"]], "TensorFlow Optimizer": [[326, "tensorflow-optimizer"]], "Trainer": [[327, "trainer"]], "User-facing API": [[328, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[329, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[330, "autodistillation-design"]], "AutoDistillation Pipeline": [[330, "autodistillation-pipeline"]], "Framework Class Design": [[330, "framework-class-design"]], "Criterion Class Design": [[330, "criterion-class-design"]], "KnowledgeDistillationLoss": [[330, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[330, "intermediatelayersknowledgedistillationloss"]], "Usage": [[330, "usage"], [362, "usage"], [363, "usage"], [375, "usage"], [381, "usage"]], "Pytorch": [[330, "pytorch"]], "AutoDistillation API in Trainer": [[330, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[330, "flash-distillation-config-example"]], "Regular distillation config example": [[330, "regular-distillation-config-example"]], "AutoDistillation config example": [[330, "autodistillation-config-example"], [330, "id1"]], "Tensorflow": [[330, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[330, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[330, "distillation-config-example"]], "Benchmark": [[331, "benchmark"]], "Introduction": [[331, "introduction"], [342, "introduction"], [344, "introduction"], [346, "introduction"], [350, "introduction"], [352, "introduction"], [353, "introduction"], [354, "introduction"], [355, "introduction"], [358, "introduction"], [360, "introduction"], [362, "introduction"], [363, "introduction"], [364, "introduction"], [369, "introduction"], [374, "introduction"], [378, "introduction"], [379, "introduction"], [380, "introduction"], [381, "introduction"], [382, "introduction"]], "Get Started with Benchmark API": [[331, "get-started-with-benchmark-api"]], "Examples": [[331, "examples"], [345, "examples"], [346, "examples"], [375, "examples"], [375, "id1"], [375, "id2"], [375, "id3"], [375, "id4"], [375, "id5"], [375, "id6"], [375, "id7"], [375, "id8"], [375, "id9"], [375, "id10"], [375, "id11"], [380, "examples"]], "Stock Pytorch Model": [[331, "stock-pytorch-model"]], "IPEX Model": [[331, "ipex-model"]], "Benchmark Output": [[331, "benchmark-output"]], "Example": [[332, "example"], [385, "example"]], "Features": [[333, "features"], [386, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[334, "welcome-to-intel-extension-for-transformers-documentation"], [387, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[334, "sections"], [387, "sections"]], "Kernels": [[335, "kernels"], [388, "kernels"]], "Implementation Details": [[336, "implementation-details"], [389, "implementation-details"]], "Performance": [[337, "performance"], [359, "performance"], [360, "performance"], [390, "performance"]], "Neural Engine": [[338, "neural-engine"], [391, "neural-engine"]], "User Guide": [[339, "user-guide"], [384, "user-guide"], [392, "user-guide"]], "Contributor Covenant Code of Conduct": [[340, "contributor-covenant-code-of-conduct"], [341, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[340, "our-pledge"]], "Our Standards": [[340, "our-standards"]], "Our Responsibilities": [[340, "our-responsibilities"]], "Scope": [[340, "scope"]], "Enforcement": [[340, "enforcement"]], "Attribution": [[340, "attribution"]], "Contribution Guidelines": [[341, "contribution-guidelines"]], "Pull Request Checklist": [[341, "pull-request-checklist"]], "Pull Request Template": [[341, "pull-request-template"]], "Support": [[341, "support"], [343, "support"]], "Data Augmentation": [[342, "data-augmentation"], [342, "id1"]], "Getting Started": [[342, "getting-started"], [347, "getting-started"]], "Install Dependency": [[342, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[342, "install-intel-extension-for-transformers"]], "Script": [[342, "script"]], "Parameters of Data Augmentation": [[342, "parameters-of-data-augmentation"]], "Supported Augmenter": [[342, "supported-augmenter"]], "Text Generation Augmenter": [[342, "text-generation-augmenter"]], "Augmenter Arguments:": [[342, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[343, "intel-extension-for-transformers"]], "Overview": [[343, "overview"]], "Recommended Hardware": [[343, "recommended-hardware"]], "Validated Hardware Environment": [[343, "validated-hardware-environment"], [348, "validated-hardware-environment"]], "How it Works": [[343, "how-it-works"]], "Get Started": [[343, "get-started"], [382, "get-started"]], "1. Prerequisites": [[343, "prerequisites"]], "2. Installation": [[343, "installation"]], "2.1 Install from PyPi": [[343, "install-from-pypi"]], "2.2 Install from Conda": [[343, "install-from-conda"]], "2.3 Install from Source": [[343, "install-from-source"]], "3. How To Run": [[343, "how-to-run"]], "3.1 Install Requirements": [[343, "install-requirements"]], "3.2 Prepare Datasets": [[343, "prepare-datasets"]], "3.3 Model Compression": [[343, "model-compression"]], "3.4 Model Inference": [[343, "model-inference"]], "Expected Output": [[343, "expected-output"]], "Summary and Next Steps": [[343, "summary-and-next-steps"]], "Learn More": [[343, "learn-more"]], "Distillation": [[344, "distillation"], [344, "id1"], [345, "distillation"], [347, "distillation"]], "Knowledge Distillation": [[344, "knowledge-distillation"], [345, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[344, "intermediate-layer-knowledge-distillation"]], "usage": [[344, "usage"]], "Pytorch Script:": [[344, "pytorch-script"]], "Tensorflow Script:": [[344, "tensorflow-script"]], "Create an Instance of Metric": [[344, "create-an-instance-of-metric"], [382, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[344, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[344, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[344, "distill-with-trainer"]], "Quantization": [[345, "quantization"], [347, "quantization"], [382, "quantization"]], "Stock PyTorch Examples": [[345, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[345, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[345, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[345, "length-adaptive-transformers"]], "Pruning": [[345, "pruning"], [347, "pruning"], [381, "pruning"]], "Auto Distillation (NAS Based)": [[345, "auto-distillation-nas-based"]], "Orchestrate": [[345, "orchestrate"]], "Reference Deployment on Neural Engine": [[345, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[345, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[345, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[346, "export-to-onnx"]], "Supported Model Export Matrix": [[346, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[346, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[346, "export-to-bf16-onnx-model"]], "API usage": [[346, "api-usage"]], "Export to INT8 ONNX Model": [[346, "export-to-int8-onnx-model"]], "For executor backend": [[346, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[347, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[347, "transformers-accelerated-neural-engine"]], "Installation": [[348, "installation"], [349, "installation"], [360, "installation"]], "Linux Installation": [[348, "linux-installation"]], "Prerequisites": [[348, "prerequisites"], [348, "id1"], [349, "prerequisites"]], "Install from Pypi": [[348, "install-from-pypi"], [348, "id2"]], "Install from Source": [[348, "install-from-source"], [348, "id3"]], "Windows Installation": [[348, "windows-installation"]], "System Requirements": [[348, "system-requirements"]], "Validated Software Environment": [[348, "validated-software-environment"]], "Install": [[349, "install"]], "Install stable version intel_extension_for_transformers from pip": [[349, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[349, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[350, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[350, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[350, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[350, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[351, "deploy-and-integration"]], "1. Architecture": [[351, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[351, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[351, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[351, "run-the-inference-by-engine"], [351, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[351, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[351, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[351, "integrate-neural-engine-as-backend"]], "Profiling": [[352, "profiling"]], "Profling API": [[352, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[352, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[352, "profiling-examples"]], "Parts of CSV Profiling": [[352, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[352, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[352, "operator-profiling-part"]], "Total Profiling Part": [[352, "total-profiling-part"]], "Levels of JSON Profiling": [[352, "levels-of-json-profiling"]], "Model Level": [[352, "model-level"]], "Iteration Level": [[352, "iteration-level"]], "Operator Level": [[352, "operator-level"]], "Engine Tuning": [[353, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[353, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[353, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[353, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[353, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[353, "more-tuning-options"]], "Graph Fusion": [[354, "graph-fusion"]], "Pattern Mapping Dict": [[354, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[354, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[354, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[354, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[355, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[355, "supported-onnx-format"]], "Compile Examples": [[355, "compile-examples"]], "Prepare ONNX Model": [[355, "prepare-onnx-model"]], "Compile to IR": [[355, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[356, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[356, "design"]], "Prerequisite": [[356, "prerequisite"]], "Install environment": [[356, "install-environment"]], "Prepare Dataset": [[356, "prepare-dataset"]], "Prepare ONNX model": [[356, "prepare-onnx-model"]], "Run tuning and benchmark": [[356, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[356, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[356, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[357, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[357, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[357, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[358, "pattern-recognize"]], "Pattern Representation": [[358, "pattern-representation"]], "Parse Pattern Representation List": [[358, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[358, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[358, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Neural Engine Support Matrix": [[359, "neural-engine-support-matrix"]], "platform configuration": [[359, "platform-configuration"]], "Transformers-Accelerated Libraries": [[360, "transformers-accelerated-libraries"]], "Build": [[360, "build"], [375, "build"]], "Test": [[360, "test"]], "API reference for users": [[360, "api-reference-for-users"]], "sparse_matmul kernel:": [[360, "sparse-matmul-kernel"]], "Supported Matrix": [[360, "supported-matrix"]], "3D Inference": [[361, "d-inference"]], "Memory Layout in SPMM_VNNI": [[361, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[361, "cache-issues"]], "SPMM_VNNI 3D Inference": [[361, "spmm-vnni-3d-inference"]], "Binary Injectors": [[362, "binary-injectors"]], "Framework Features": [[362, "framework-features"], [363, "framework-features"]], "param_type.hpp": [[362, "param-type-hpp"]], "operator_desc.hpp": [[362, "operator-desc-hpp"], [363, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[362, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[362, "developer-s-perspective"]], "User\u2019s Perspective": [[362, "user-s-perspective"], [363, "user-s-perspective"]], "Element-wise Injector": [[363, "element-wise-injector"]], "param_types.hpp": [[363, "param-types-hpp"]], "alpha,beta,scale meaning": [[363, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[363, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[363, "developer-s-perspective"]], "Dense and Sparse": [[364, "dense-and-sparse"]], "Naive": [[364, "naive"]], "Tile": [[364, "tile"]], "Efficient kernel": [[364, "efficient-kernel"]], "More work per thread": [[364, "more-work-per-thread"]], "Prefetch": [[364, "prefetch"]], "Sparse acceleration": [[364, "sparse-acceleration"]], "Sparse GEMM AMX": [[365, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[365, "brief-introduction-for-isas"]], "Pattern": [[365, "pattern"]], "Reorder": [[365, "reorder"]], "Sparse GEMM AVX512F": [[366, "sparse-gemm-avx512f"]], "Key Instruction": [[366, "key-instruction"]], "Sparse Pattern & Data Format": [[366, "sparse-pattern-data-format"]], "Loops": [[366, "loops"]], "Dynamic Quant Matmul": [[367, "dynamic-quant-matmul"]], "problem description": [[367, "problem-description"]], "Kernel details": [[367, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[367, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[367, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[367, "different-jit-paths-for-different-weight-size"]], "small_wei jit-path": [[367, "small-wei-jit-path"]], "large_wei jit-path": [[367, "large-wei-jit-path"]], "Sparse GEMM with Layer-Normalize": [[368, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[368, "problem-description"]], "layernormalized sparse matmul": [[368, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[368, "pre-compute-spmm"]], "Direct Layernorm_ba": [[368, "direct-layernorm-ba"]], "Transposed MatMul": [[369, "transposed-matmul"]], "Problem Statements": [[369, "problem-statements"]], "Matmul_p2031_2013": [[369, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[369, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[369, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[369, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[369, "reorder-beforehand"]], "Transposed MHA": [[370, "transposed-mha"]], "Problem description": [[370, "problem-description"]], "Details": [[370, "details"]], "Reordering": [[370, "reordering"]], "Calculation": [[370, "calculation"]], "Sparse GEMM VNNI": [[371, "sparse-gemm-vnni"]], "On the fly activation reordering": [[371, "on-the-fly-activation-reordering"]], "Candidate patterns": [[371, "candidate-patterns"]], "Performance and Profiling": [[372, "performance-and-profiling"]], "Verbose": [[372, "verbose"]], "VTune": [[372, "vtune"]], "SDE": [[372, "sde"]], "Validated Performance Data": [[373, "validated-performance-data"]], "Single Thread": [[373, "single-thread"]], "Multi Thread (Thread = 4)": [[373, "multi-thread-thread-4"]], "Platform Configuration": [[373, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[374, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[374, "setups"]], "1. Prepare the sparse model": [[374, "prepare-the-sparse-model"]], "2. Run below commands": [[374, "run-below-commands"]], "3. Analysis results": [[374, "analysis-results"]], "Benchmark for Kernels": [[375, "benchmark-for-kernels"]], "sparse_matmul": [[375, "sparse-matmul"]], "spmm_avx512f": [[375, "spmm-avx512f"]], "spmm_vnni": [[375, "spmm-vnni"]], "spmm_amx_bf16_x16": [[375, "spmm-amx-bf16-x16"]], "eltwiseop": [[375, "eltwiseop"]], "layernorm_ba": [[375, "layernorm-ba"]], "transpose_matmul": [[375, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[375, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[375, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[375, "softmax"]], "attention": [[375, "attention"]], "Static MHA": [[375, "static-mha"]], "dynamic_quant_matmul": [[375, "dynamic-quant-matmul"]], "dynamic_quant": [[375, "dynamic-quant"]], "For developers": [[375, "for-developers"]], "Inputs format": [[376, "inputs-format"]], "Legal Information": [[377, "legal-information"]], "License": [[377, "license"]], "Citation": [[377, "citation"]], "Trademarks": [[377, "trademarks"]], "Metrics": [[378, "metrics"]], "Supported Metric": [[378, "supported-metric"]], "Metric Class Summary": [[378, "metric-class-summary"]], "Get Start with Metrics": [[378, "get-start-with-metrics"]], "Objective": [[379, "objective"]], "Supported Objectives Matrix:": [[379, "supported-objectives-matrix"]], "Examples:": [[379, "examples"]], "Pipeline": [[380, "pipeline"]], "Pipeline Inference for INT8 Model": [[380, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[380, "pipeline-inference-for-executor-backend"]], "Pruning types": [[381, "pruning-types"]], "Script:": [[381, "script"], [382, "script"]], "Create an instance of Metric": [[381, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[381, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[381, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[381, "prune-with-trainer"]], "Quantization Fundamentals": [[382, "quantization-fundamentals"]], "Quantization Approach": [[382, "quantization-approach"]], "Post Training Dynamic Quantization": [[382, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[382, "post-training-static-quantization"]], "Quantization Aware Training": [[382, "quantization-aware-training"]], "Accuracy Aware Tuning": [[382, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[382, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[382, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[382, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[382, "quantization-with-trainer"]], "Release": [[383, "release"]], "Release Notes": [[383, "release-notes"]], "Contents:": [[386, null], [391, null]]}, "indexentries": {"exampleclass (class in intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass"]], "attr1 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr1"]], "attr2 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr2"]], "attr5 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr5"]], "attribute1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.attribute1"]], "function1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function1"]], "function2() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function2"]], "function3() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function3"]], "generator1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.generator1"]], "intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "method1() (intel_extension_for_transformers.api_doc_example.exampleclass method)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.method1"]], "module": [[0, "module-intel_extension_for_transformers.api_doc_example"], [1, "module-intel_extension_for_transformers.backends"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [188, "module-intel_extension_for_transformers.backends.neural_engine"], [189, "module-intel_extension_for_transformers.evaluation"], [190, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator"], [191, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness"], [192, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface"], [193, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models"], [194, "module-intel_extension_for_transformers"], [195, "module-intel_extension_for_transformers.optimization.benchmark"], [196, "module-intel_extension_for_transformers.optimization.config"], [197, "module-intel_extension_for_transformers.optimization.distillation"], [198, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [199, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [200, "module-intel_extension_for_transformers.optimization.dynamic"], [201, "module-intel_extension_for_transformers.optimization"], [202, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [203, "module-intel_extension_for_transformers.optimization.mixture"], [204, "module-intel_extension_for_transformers.optimization.model"], [205, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [206, "module-intel_extension_for_transformers.optimization.nas"], [207, "module-intel_extension_for_transformers.optimization.nas.nas"], [208, "module-intel_extension_for_transformers.optimization.optimizer"], [209, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [210, "module-intel_extension_for_transformers.optimization.pipeline"], [211, "module-intel_extension_for_transformers.optimization.pruning"], [212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"], [213, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [214, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"], [215, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [216, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"], [217, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [218, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"], [219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"], [220, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"], [221, "module-intel_extension_for_transformers.optimization.quantization"], [222, "module-intel_extension_for_transformers.optimization.trainer"], [223, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [224, "module-intel_extension_for_transformers.optimization.utils"], [225, "module-intel_extension_for_transformers.optimization.utils.metrics"], [226, "module-intel_extension_for_transformers.optimization.utils.models"], [227, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [228, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [229, "module-intel_extension_for_transformers.optimization.utils.objectives"], [230, "module-intel_extension_for_transformers.optimization.utils.utility"], [231, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [232, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [233, "module-intel_extension_for_transformers.preprocessing"], [234, "module-intel_extension_for_transformers.preprocessing.utils"], [235, "module-intel_extension_for_transformers.version"], [236, "module-sparsity_all"], [237, "module-test_add_cls_token"], [238, "module-test_add_embeddings"], [239, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [240, "module-test_attention_reshape"], [241, "module-test_bert_mini_fp32"], [242, "module-test_binary_op"], [243, "module-test_binaryop"], [244, "module-test_cast_to"], [245, "module-test_concat"], [246, "module-test_conv_reshape"], [247, "module-test_decoder_attn_reshape"], [248, "module-test_dispatcher_tuning_acc"], [249, "module-test_dispatcher_tuning_throughput"], [250, "module-test_dynamic_quantization"], [251, "module-test_embedding"], [252, "module-test_embeddingbag"], [253, "module-test_execution_options"], [254, "module-test_gelu"], [255, "module-test_gpt_int8"], [256, "module-test_graph_dispatch"], [257, "module-test_insert_input_output_data"], [258, "module-test_is_supported_onnx_graph"], [259, "module-test_last_layer_shape"], [260, "module-test_layer_norm_with_reduce_mean"], [261, "module-test_layer_norm_with_transpose"], [262, "module-test_layernorm"], [263, "module-test_linear"], [264, "module-test_linear_int8"], [265, "module-test_llama_pattern"], [266, "module-test_main"], [267, "module-test_matmul"], [268, "module-test_matmul_int8"], [269, "module-test_matmul_with_bias_relu"], [270, "module-test_matmul_with_bias_sigmoid"], [271, "module-test_matmul_with_bias_tanh"], [272, "module-test_merged_embeddingbag"], [273, "module-test_model"], [274, "module-test_onnx_utils"], [275, "module-test_operator_adaptor"], [276, "module-test_ops"], [277, "module-test_padding_seq"], [278, "module-test_padding_sequence"], [279, "module-test_pattern_dispatch"], [280, "module-test_permute"], [281, "module-test_position_embeddings"], [282, "module-test_pow"], [283, "module-test_primitive_cache_acc"], [284, "module-test_primitive_cache_throughput"], [285, "module-test_qkv_merge"], [286, "module-test_qkv_reshape"], [287, "module-test_quant_onnx_execute"], [288, "module-test_reshape_after_restore_hidden_states"], [289, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [290, "module-test_reshape_before_restore_hidden_states"], [291, "module-test_size"], [292, "module-test_softmax"], [293, "module-test_start_end_logits"], [294, "module-test_tanh"], [295, "module-test_text_encoder"], [296, "module-test_text_encoder_bf16"], [297, "module-test_tf_utils"], [298, "module-test_token_type_embeddings"], [299, "module-test_transpose"], [300, "module-test_transpose_batch_matmul"], [301, "module-test_unet"], [302, "module-test_unet_bf16"], [303, "module-test_unsqueeze"], [304, "module-test_vae_decoder"], [305, "module-test_vae_decoder_bf16"], [306, "module-test_weight_sharing_acc"], [307, "module-test_weight_sharing_dispatcher_tuning_acc"], [308, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [309, "module-test_weight_sharing_throughput"]], "module_debug_level1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.module_debug_level1"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_resize2gather (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather.AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "resnetblock_instancenormreshapefromconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv.ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "resnetblock_instancenormreshapefromdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv.ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_instancenormreshapefromadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd.Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "transformer2dmodel_instancenormreshapefromconcat (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat.Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transformer2dmodel_upblockresize (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize.Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[188, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[189, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator)": [[190, "intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator": [[190, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness": [[191, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface)": [[192, "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface)": [[192, "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface)": [[192, "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface": [[192, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models": [[193, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models"]], "intel_extension_for_transformers": [[194, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[195, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[195, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[195, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[195, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[195, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[196, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[196, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[196, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[197, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[197, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[197, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[198, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[198, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[198, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[199, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[199, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[200, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[201, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[202, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[202, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[202, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[202, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[202, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[202, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[202, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[203, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[204, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[204, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[204, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[205, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[205, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[205, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[205, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[205, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[206, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[207, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[207, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[208, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[208, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[208, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[208, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[209, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[209, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[210, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[210, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[211, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[211, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[211, "module-intel_extension_for_transformers.optimization.pruning"]], "gradientcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion"]], "magnitudecriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion"]], "pruningcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion"]], "snipcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion"]], "snipmomentumcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion"]], "get_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.get_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.on_before_optimizer_step"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_step_begin"]], "register_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.register_criterion"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion attribute)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion attribute)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion attribute)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion attribute)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion attribute)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[213, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[214, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "basepattern (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern"]], "m (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.M"]], "n (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.N"]], "patternninm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM"]], "patternnxm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM"]], "adjust_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.adjust_ratio"]], "block_size (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.block_size"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.check_layer_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.config"]], "count_new_masked_cnts() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.count_new_masked_cnts"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_block_size_dict"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_block_size_dict"]], "get_ele_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_ele_mask_per_threshold"]], "get_least_ninm_mask_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_least_ninm_mask_from_data"]], "get_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_mask_per_threshold"]], "get_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_masks_global"]], "get_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_local"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_pattern_lock_masks"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_reduced_masks_from_data"]], "get_single_mask_per_target_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_single_mask_per_target_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio"]], "get_sparsity_ratio_each_layer() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio_each_layer"]], "get_sparsity_ratio_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[215, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "invalid_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.invalid_layers"]], "is_global (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.is_global"]], "keep_mask_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.keep_mask_layers"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.max_sparsity_ratio_per_op"]], "min_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.min_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.modules"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.pattern"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reduce_scores"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reduce_scores"]], "reduce_tensor() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.reduce_tensor"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_orig_to_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_orig_to_pattern"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_reduced_to_orig"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_reduced_to_orig"]], "target_sparsity (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.target_sparsity"]], "update_new_added_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_new_added_masks"]], "update_progressive_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks"]], "update_progressive_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_global"]], "update_progressive_masks_linear() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_linear"]], "update_progressive_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_local"]], "update_progressive_masks_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_scores"]], "update_residual_cnt() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[215, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.update_residual_cnt"]], "basepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner"]], "basicpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner"]], "progressivepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner"]], "check_is_pruned_progressive_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_is_pruned_progressive_step"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.check_is_pruned_step"]], "check_progressive_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_progressive_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.config"]], "criterion (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.criterion"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[216, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights"]], "mask_weights_general() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights_general"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.masks"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.max_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_end"]], "parse_valid_pruner_types() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.parse_valid_pruner_types"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pattern"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.pattern"]], "print_progressive_sparsity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.print_progressive_sparsity"]], "pruning_frequency (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pruning_frequency"]], "reg (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.reg"]], "register_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.register_pruner"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scheduler"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scores"]], "set_global_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.set_global_step"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.target_sparsity_ratio"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.update_masks"]], "update_masks_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[216, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.update_masks_progressive"]], "pruning (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruning)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[217, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[217, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.update_config"]], "basereg (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg"]], "grouplasso (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso"]], "alpha (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.alpha"]], "get_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg"]], "get_reg_type() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg_type"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[218, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_before_optimizer_step"]], "reg_terms (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.reg_terms"]], "register_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[218, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.register_reg"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler"]], "pruningscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler attribute)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[219, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.iterativescheduler method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.oneshotscheduler method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler method)": [[219, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.update_sparsity_ratio"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_config"]], "check_key_validity() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_key_validity"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[220, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_config"]], "process_weight_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_weight_config"]], "process_yaml_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_yaml_config"]], "reset_none_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.reset_none_to_default"]], "update_params() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[220, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.update_params"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[221, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[221, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[222, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[222, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[222, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[222, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[223, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[224, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[225, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[225, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[226, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[227, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[227, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[228, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[228, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[229, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[229, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[229, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[229, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[230, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[230, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[231, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[231, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[231, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[231, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[231, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[232, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[232, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[232, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[232, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[232, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[233, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[234, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[234, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[234, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[235, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[236, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[237, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[237, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[237, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[237, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[238, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[238, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[238, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[238, "module-test_add_embeddings"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[239, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[239, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[239, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[239, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[240, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[240, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[240, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[240, "module-test_attention_reshape"]], "testtorchmodel (class in test_bert_mini_fp32)": [[241, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[241, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[241, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[241, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[242, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[242, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[242, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[242, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[243, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[243, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[243, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[243, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[244, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[244, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[244, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[244, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[245, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[245, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[245, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[245, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[246, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[246, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[246, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[246, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[247, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[247, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[247, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[247, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[248, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[248, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[248, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[248, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[249, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[249, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[249, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[249, "module-test_dispatcher_tuning_throughput"]], "testdynamicquantization (class in test_dynamic_quantization)": [[250, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[250, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[250, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[250, "module-test_dynamic_quantization"]], "testtorchop (class in test_embedding)": [[251, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[251, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[251, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[251, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[252, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[252, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[252, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[252, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[253, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[253, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[253, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[253, "module-test_execution_options"]], "testtorchop (class in test_gelu)": [[254, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[254, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[254, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[254, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[255, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[255, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[255, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[255, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[256, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[256, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[256, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[256, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[257, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[257, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[257, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[257, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[258, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[258, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[258, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[258, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[258, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[259, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[259, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[259, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[259, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[260, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[260, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[260, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[260, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[261, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[261, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[261, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[261, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[262, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[262, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[262, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[262, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[263, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[263, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[263, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[263, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[264, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[264, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[264, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[264, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[265, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[265, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[265, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[265, "module-test_llama_pattern"]], "testmain (class in test_main)": [[266, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[266, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[266, "test_main.TestMain.tearDownClass"]], "test_main": [[266, "module-test_main"]], "testtorchop (class in test_matmul)": [[267, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[267, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[267, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[267, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[268, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[268, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[268, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[268, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[269, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[269, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[269, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[269, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[270, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[270, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[270, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[270, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[271, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[271, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[271, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[271, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[272, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[272, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[272, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[272, "module-test_merged_embeddingbag"]], "test_model": [[273, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[274, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[274, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[274, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[274, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[275, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[275, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[275, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[275, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[276, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[276, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[276, "test_ops.TestOps.tearDownClass"]], "test_ops": [[276, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[277, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[277, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[277, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[277, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[278, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[278, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[278, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[278, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[279, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[279, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[279, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[279, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[280, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[280, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[280, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[280, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[281, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[281, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[281, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[281, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[282, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[282, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[282, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[282, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[283, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[283, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[283, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[283, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[284, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[284, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[284, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[284, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[285, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[285, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[285, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[285, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[286, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[286, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[286, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[286, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[287, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[287, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[287, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[287, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[288, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[288, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[288, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[288, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[289, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[289, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[289, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[289, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[290, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[290, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[290, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[290, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[291, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[291, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[291, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[291, "module-test_size"]], "testtorchop (class in test_softmax)": [[292, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[292, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[292, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[292, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[293, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[293, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[293, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[293, "module-test_start_end_logits"]], "testtorchop (class in test_tanh)": [[294, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[294, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[294, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[294, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[295, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[295, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[295, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[295, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[296, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[296, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[296, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[296, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[297, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[297, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[297, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[297, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[298, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[298, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[298, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[298, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[299, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[299, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[299, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[299, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[300, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[300, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[300, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[300, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[301, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[301, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[301, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[301, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[302, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[302, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[302, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[302, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[303, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[303, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[303, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[303, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[304, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[304, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[304, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[304, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[305, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[305, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[305, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[305, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[306, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[306, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[306, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[306, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[307, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[307, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[307, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[307, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[308, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[308, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[308, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[308, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[309, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[309, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[309, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[309, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[318, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[318, "c.NULL_INSTANCE"]], "jd (c++ type)": [[318, "_CPPv42jd"], [319, "_CPPv42jd"], [320, "_CPPv42jd"], [321, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[318, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[318, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[318, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[318, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[318, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[318, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[318, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[318, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[318, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[318, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[318, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[318, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[318, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[318, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[318, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[318, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[318, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[319, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[319, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [319, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[319, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[319, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[319, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [319, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[319, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[319, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[319, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [319, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[319, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[319, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[319, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [319, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[319, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[319, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[319, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [319, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[319, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[319, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[319, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [319, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[319, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[319, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[319, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [319, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[319, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[319, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[319, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [319, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[319, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[319, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[319, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [319, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[319, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[319, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[319, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [319, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[319, "_CPPv4N2jd11gather_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[319, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[319, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[319, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[319, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [319, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[319, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[319, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[319, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[319, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[319, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[319, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[319, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[319, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [319, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[319, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[319, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[319, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [319, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[319, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[319, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[319, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [319, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[319, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[319, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[319, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [319, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[319, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[319, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[319, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [319, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[319, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[319, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[319, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [319, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[319, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[319, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[319, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [319, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[319, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[319, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[319, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [319, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[319, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[319, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[319, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [319, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[319, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[319, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[319, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[319, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[319, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[319, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[319, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[319, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[319, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[319, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [319, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[319, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[319, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[319, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [319, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[319, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[319, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[319, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [319, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[319, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[319, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[319, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [319, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[319, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[319, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[319, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [319, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[319, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[319, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[319, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [319, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[319, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[319, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[319, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [319, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[319, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[319, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[319, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [319, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[319, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[319, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[319, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [319, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[319, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[319, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[319, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [319, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[319, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[320, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[320, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[320, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[320, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[320, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[320, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[320, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[320, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[320, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[320, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [320, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [320, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[320, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[320, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[320, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[320, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[320, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[321, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[321, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[321, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[321, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[321, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[321, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[321, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[321, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[321, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[321, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[321, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[321, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[321, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[321, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[321, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[321, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[321, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[321, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[321, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[321, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[321, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[321, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[321, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[321, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[321, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[321, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[321, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[321, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[321, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[321, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[321, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[321, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::gather_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd13gather_data_tE"]], "jd::ssd::gather_data_t::binaryop_addrs (c++ member)": [[321, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE"]], "jd::ssd::gather_data_t::dst (c++ member)": [[321, "_CPPv4N2jd3ssd13gather_data_t3dstE"]], "jd::ssd::gather_data_t::gather_data_t (c++ function)": [[321, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv"]], "jd::ssd::gather_data_t::idx (c++ member)": [[321, "_CPPv4N2jd3ssd13gather_data_t3idxE"]], "jd::ssd::gather_data_t::src (c++ member)": [[321, "_CPPv4N2jd3ssd13gather_data_t3srcE"]], "jd::ssd::gather_param_t (c++ struct)": [[321, "_CPPv4N2jd3ssd14gather_param_tE"]], "jd::ssd::gather_param_t::binary_ts_sizes (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE"]], "jd::ssd::gather_param_t::binaryop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE"]], "jd::ssd::gather_param_t::dst_axis_size (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE"]], "jd::ssd::gather_param_t::dt (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t2dtE"]], "jd::ssd::gather_param_t::dt_size (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE"]], "jd::ssd::gather_param_t::extend_mask (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE"]], "jd::ssd::gather_param_t::idx_size (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE"]], "jd::ssd::gather_param_t::inner_size (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE"]], "jd::ssd::gather_param_t::loops (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t5loopsE"]], "jd::ssd::gather_param_t::mask (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t4maskE"]], "jd::ssd::gather_param_t::outer_size (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE"]], "jd::ssd::gather_param_t::remain (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t6remainE"]], "jd::ssd::gather_param_t::src_axis_size (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE"]], "jd::ssd::gather_param_t::src_size (c++ member)": [[321, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[321, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[321, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[321, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[321, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[321, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[321, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[321, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_8E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_gelu (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t8has_geluE"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_fp8 (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t10weight_fp8E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[321, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_io (c++ type)": [[321, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[321, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[321, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[321, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[321, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[321, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[321, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[321, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[321, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[321, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[321, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[321, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[321, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[321, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[321, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[321, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[321, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[321, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[321, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[321, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[321, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[321, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[321, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[321, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[321, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[321, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[321, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[321, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[321, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[321, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[321, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[321, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[321, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[321, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[321, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[321, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[321, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[321, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[321, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[321, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[321, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[321, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[321, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[321, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[321, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[321, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[321, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[321, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[321, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[321, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[321, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[321, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[321, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[321, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[321, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[321, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[321, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[321, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[321, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[321, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[321, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[321, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[321, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[321, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[321, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[321, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[321, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[321, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[321, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[321, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[321, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[321, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[321, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[321, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[321, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[321, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[321, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[321, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[321, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[321, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})