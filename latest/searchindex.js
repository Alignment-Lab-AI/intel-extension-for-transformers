Search.setIndex({"docnames": ["autoapi/clangformat/index", "autoapi/convert_falcon/index", "autoapi/convert_gptj/index", "autoapi/convert_gptneox/index", "autoapi/convert_llama/index", "autoapi/convert_mpt/index", "autoapi/gptj_binding/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/modeling/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruner/index", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_add_zeros/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_baddbmm/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv/index", "autoapi/test_conv_int8/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dolly_pattern/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_electra/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_fwk/index", "autoapi/test_gather/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_graph_optimizer/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_llama_pattern/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_neox_rotary_pos_emb/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_slice/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_static_compressed_buffer/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_two_linear/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/clangformat/index.rst", "autoapi/convert_falcon/index.rst", "autoapi/convert_gptj/index.rst", "autoapi/convert_gptneox/index.rst", "autoapi/convert_llama/index.rst", "autoapi/convert_mpt/index.rst", "autoapi/gptj_binding/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/dynamic_quantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/resize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice_position_ids/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/where/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/optimizer/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddings_to_2d_before_inner_product/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/groupNormSwish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithswish/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_embeding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_matmulwithtranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_postprocess/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/llama_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose_scale_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_reorder_change/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/neox_rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quant_gather_to_bf16/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_unused_operator/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_zeros/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rms_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ExplicitNHWCTranspose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHA/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_MHAReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_unpack_baddbmm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/cnn_dailymail/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/hf_datasets/index.rst", "autoapi/intel_extension_for_transformers/evaluation/hf_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_code_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/models/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_eval/tasks/lambada/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_base_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/modeling/modeling_seq2seq/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_add_zeros/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_baddbmm/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv/index.rst", "autoapi/test_conv_int8/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dolly_pattern/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_electra/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_fwk/index.rst", "autoapi/test_gather/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_graph_optimizer/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_llama_pattern/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_neox_rotary_pos_emb/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_slice/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_static_compressed_buffer/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_two_linear/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/static_compressed_buffer.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/graph/application/ChatLLAMA/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">clang-format</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_falcon</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptj</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_gptneox</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_llama</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">convert_mpt</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gptj_binding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.resize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.where</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval.hf_datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.hf_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_code_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.modeling.modeling_seq2seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_zeros</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_baddbmm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dolly_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_electra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_fwk</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_llama_pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_neox_rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_static_compressed_buffer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_two_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Static Compressed Buffer", "Neural Engine Support Matrix", "ITREX Graph", "Table of Contents", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"bytes_to_unicod": [1, 2, 3, 5], "sourc": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 217, 220, 222, 223, 224, 225, 226, 229, 231, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 385, 399, 406, 412, 414], "return": [1, 2, 3, 4, 5, 12, 13, 14, 17, 22, 56, 149, 205, 206, 213, 215, 222, 225, 229, 231, 235, 237, 239, 240, 242, 245, 250, 251, 364, 365, 376, 377, 384, 388, 392, 396, 399, 400, 415], "list": [1, 2, 3, 4, 5, 12, 13, 14, 15, 17, 22, 56, 205, 206, 213, 215, 223, 224, 238, 242, 243, 245, 250, 251, 377, 378, 383, 384, 385, 388, 393, 399, 400, 413, 419], "utf": [1, 2, 3, 5], "8": [1, 2, 3, 4, 5, 17, 245, 355, 364, 377, 379, 380, 382, 384, 386, 388, 390, 392, 394, 396, 400, 401, 402, 408, 409, 410, 412, 419], "byte": [1, 2, 3, 4, 5, 402, 408], "correspond": [1, 2, 3, 5, 8, 12, 13, 17, 364, 384, 388, 392, 397, 404, 408, 411, 419], "unicod": [1, 2, 3, 5], "string": [1, 2, 3, 4, 5, 17, 22, 205, 206, 215, 226, 235, 237, 242, 254, 255, 354, 376, 378, 384, 387, 388, 391, 396, 400, 415, 416, 418, 419], "The": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 220, 223, 225, 226, 229, 231, 234, 235, 237, 239, 242, 245, 248, 250, 251, 252, 254, 255, 257, 346, 348, 351, 353, 354, 356, 362, 364, 365, 374, 376, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 412, 415, 417, 418, 419], "revers": [1, 2, 3, 5], "bpe": [1, 2, 3, 5], "code": [1, 2, 3, 5, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 352, 353, 354, 355, 377, 381, 382, 384, 387, 395, 396, 400, 401, 402, 403, 404, 409, 412, 414], "work": [1, 2, 3, 5, 245, 345, 393, 396, 400, 417], "thi": [1, 2, 3, 4, 5, 10, 17, 182, 215, 234, 242, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 352, 353, 354, 355, 364, 374, 375, 376, 377, 378, 380, 384, 385, 386, 387, 388, 391, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 411, 412, 414, 415, 417, 419], "mean": [1, 2, 3, 5, 17, 18, 44, 207, 220, 223, 250, 251, 255, 355, 376, 384, 385, 386, 387, 388, 392, 393, 395, 396, 398, 399, 401, 405, 408, 412, 415, 418, 419], "you": [1, 2, 3, 5, 17, 217, 223, 238, 250, 251, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 375, 376, 377, 378, 380, 384, 385, 387, 388, 389, 392, 393, 395, 396, 399, 400, 402, 409, 411, 412, 414, 415, 417, 418, 419, 420], "need": [1, 2, 3, 4, 5, 17, 122, 223, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 376, 377, 378, 384, 386, 387, 388, 389, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 412, 418, 419, 420], "larg": [1, 2, 3, 5, 378, 379, 392, 393, 394, 395, 396, 398, 401, 404, 405, 406, 412], "charact": [1, 2, 3, 5, 396], "your": [1, 2, 3, 5, 17, 245, 255, 257, 346, 375, 376, 377, 381, 384, 385, 386, 387, 388, 395, 396, 399, 400, 412, 414, 417], "vocab": [1, 2, 3, 5], "want": [1, 2, 3, 5, 223, 238, 365, 371, 384, 386, 387, 389, 392, 393, 396, 398, 399, 400, 412, 415, 427], "avoid": [1, 2, 3, 5, 245, 250, 251, 392, 396, 398, 400, 404, 406, 407, 412], "unk": [1, 2, 3, 5], "when": [1, 2, 3, 5, 205, 223, 245, 250, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 365, 374, 379, 384, 385, 387, 388, 391, 392, 393, 396, 398, 400, 401, 403, 404, 405, 407, 408, 412, 415, 416, 419], "re": [1, 2, 3, 5, 231, 396, 402], "someth": [1, 2, 3, 5, 205], "like": [1, 2, 3, 5, 8, 12, 13, 14, 17, 112, 113, 205, 255, 376, 377, 378, 381, 384, 385, 386, 387, 388, 389, 392, 393, 396, 399, 400, 402, 409, 415, 416, 418, 419], "10b": [1, 2, 3, 5], "token": [1, 2, 3, 5, 209, 213, 217, 238, 250, 251, 255, 365, 376, 377, 379, 381, 389, 393, 395, 417], "dataset": [1, 2, 3, 5, 220, 239, 245, 254, 255, 365, 376, 379, 415, 419], "end": [1, 2, 3, 5, 17, 242, 250, 251, 255, 346, 377, 386, 389, 391, 392, 396, 400, 409], "up": [1, 2, 3, 4, 5, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 384, 386, 388, 393, 396, 400, 412], "around": [1, 2, 3, 5], "5k": [1, 2, 3, 5], "decent": [1, 2, 3, 5], "coverag": [1, 2, 3, 5], "i": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 17, 22, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 215, 220, 223, 229, 239, 242, 245, 250, 251, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 351, 352, 353, 354, 355, 356, 362, 364, 365, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 425], "signific": [1, 3, 378, 396], "percentag": [1, 2, 3, 5], "normal": [1, 2, 3, 5, 355, 399, 407, 426], "sai": [1, 2, 3, 5, 408], "32k": [1, 2, 3, 5], "To": [1, 2, 3, 5, 220, 250, 251, 364, 375, 384, 396, 401, 404, 406, 408, 412, 413], "we": [1, 2, 3, 5, 231, 235, 251, 371, 374, 376, 377, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 415, 416, 417, 419, 427], "lookup": [1, 2, 3, 5], "tabl": [1, 2, 3, 5, 387, 400, 408], "between": [1, 2, 3, 5, 12, 13, 250, 251, 355, 364, 378, 396, 405, 408, 412, 419], "And": [1, 2, 3, 5, 122, 386, 387, 388, 389, 392, 399], "map": [1, 2, 3, 4, 5, 12, 13, 17, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 245, 364, 377, 378, 393, 398, 419], "whitespac": [1, 2, 3, 5, 413], "control": [1, 2, 3, 4, 5, 17, 222, 223, 364, 384, 396], "barf": [1, 2, 3, 5], "signfic": [2, 5], "nefiletyp": 4, "gener": [4, 17, 112, 113, 222, 223, 242, 245, 250, 251, 255, 365, 377, 378, 384, 388, 392, 399, 400, 403, 404, 407, 409, 411, 412, 415, 416, 419], "enumer": [4, 257, 355], "deriv": [4, 353, 405, 406], "from": [4, 15, 17, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 205, 206, 222, 226, 229, 231, 242, 245, 250, 251, 255, 364, 365, 374, 376, 378, 379, 381, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 399, 400, 403, 405, 406, 407, 408, 415, 416, 417, 418, 419], "defin": [4, 17, 215, 223, 235, 237, 238, 242, 245, 352, 364, 374, 377, 378, 384, 385, 391, 392, 408, 413, 415, 418, 419], "new": [4, 8, 12, 13, 14, 17, 22, 245, 375, 392, 393, 396, 399, 400, 413, 420], "handle_quant": 4, "model": [4, 8, 12, 13, 14, 15, 17, 20, 22, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 186, 187, 188, 190, 191, 192, 203, 204, 206, 213, 215, 220, 222, 223, 226, 228, 229, 235, 238, 239, 240, 242, 245, 254, 255, 362, 364, 376, 378, 379, 381, 383, 384, 387, 388, 392, 393, 394, 396, 399, 404, 405, 406, 407, 410, 414, 415, 416, 418, 419, 428], "lazymodel": 4, "convert": [4, 8, 12, 13, 17, 22, 205, 222, 223, 380, 390, 393, 407, 412, 419], "entri": [4, 207, 239, 245, 250, 251, 414], "foo": 4, "qweight": 4, "scale": [4, 22, 245, 355, 399, 404, 407, 419], "etc": [4, 229, 245, 364, 378, 386], "which": [4, 8, 12, 13, 14, 17, 160, 205, 223, 225, 229, 231, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374, 376, 378, 383, 384, 385, 387, 388, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 415, 418, 419], "resolv": [4, 345], "unquantizedtensor": 4, "raw": 4, "data": [4, 17, 83, 209, 222, 255, 257, 355, 364, 377, 379, 384, 385, 387, 389, 390, 391, 393, 398, 399, 400, 401, 404, 405, 408, 412, 419, 423, 427], "one": [4, 8, 12, 13, 17, 213, 242, 250, 355, 364, 377, 378, 381, 383, 384, 386, 387, 388, 392, 393, 395, 396, 399, 401, 402, 407, 411, 412, 417], "weight": [4, 90, 223, 250, 251, 355, 364, 378, 380, 386, 387, 389, 398, 401, 402, 403, 407, 408, 412, 415, 416, 418, 419], "quantizedtensor": 4, "lazyunpickl": 4, "fp": 4, "io": [4, 355, 391], "data_base_path": 4, "str": [4, 17, 56, 149, 209, 215, 217, 222, 223, 224, 231, 234, 238, 240, 243, 245, 248, 250, 251, 252, 255, 257, 365, 376], "zip_fil": 4, "zipfil": 4, "take": [4, 374, 378, 386, 388, 391, 399, 407, 408], "binari": [4, 382, 400, 407, 412, 426], "file": [4, 8, 10, 12, 13, 14, 15, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 149, 177, 223, 226, 229, 231, 235, 237, 242, 245, 246, 255, 352, 353, 354, 355, 376, 377, 384, 385, 386, 387, 389, 391, 395, 396, 399, 400, 411, 412, 413, 414], "read": [4, 242, 377, 385, 395], "pickl": 4, "stream": [4, 391], "protocol": [4, 405], "version": [4, 220, 231, 245, 374, 377, 382, 387, 394, 410, 414], "detect": [4, 17], "automat": [4, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 365, 376, 386, 387, 388, 396, 399, 412], "so": [4, 17, 231, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 378, 383, 384, 387, 388, 391, 392, 399, 401, 402, 403, 404, 405, 407, 408, 409, 412, 415, 416, 418, 419], "argument": [4, 215, 223, 242, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 378, 386, 413, 415, 416, 418, 419], "past": [4, 250, 251], "object": [4, 12, 13, 14, 205, 215, 223, 228, 235, 237, 238, 239, 240, 242, 245, 247, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 365, 377, 378, 381, 384, 391, 418, 423], "": [4, 17, 22, 56, 109, 205, 223, 245, 251, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 353, 364, 374, 377, 378, 384, 385, 386, 388, 389, 391, 393, 394, 396, 401, 405, 407, 410, 412, 413, 417, 419], "represent": [4, 17, 374, 381, 384, 388, 389], "ar": [4, 17, 112, 113, 160, 220, 225, 226, 242, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 364, 374, 375, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 418, 419], "ignor": [4, 215, 245, 250, 251, 384, 396], "must": [4, 17, 220, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 382, 388, 392, 398, 399, 401, 408], "have": [4, 8, 17, 205, 215, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374, 375, 377, 384, 385, 386, 387, 388, 389, 392, 393, 396, 400, 404, 405, 406, 407, 411, 412, 414, 415, 416, 417, 418, 419], "two": [4, 17, 245, 378, 384, 387, 388, 390, 391, 393, 399, 400, 402, 405, 406, 407, 408, 416, 417, 418, 419], "method": [4, 17, 226, 237, 243, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 376, 379, 396, 399, 402, 404, 407, 409, 418, 419], "an": [4, 10, 17, 22, 205, 237, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 374, 376, 377, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 395, 396, 398, 399, 400, 404, 405, 408, 413, 415, 417, 428], "integ": [4, 376, 380, 387, 388, 408, 412, 418, 419], "readlin": 4, "requir": [4, 17, 146, 220, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 381, 388, 390, 392, 394, 396, 398, 401, 402, 404, 411, 412, 419], "both": [4, 229, 245, 250, 251, 374, 376, 381, 396, 404, 406, 411, 412, 413, 415, 419], "should": [4, 17, 231, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 384, 385, 387, 388, 391, 392, 398, 399, 400, 405, 412, 413, 415, 416, 419], "thu": [4, 403, 419], "can": [4, 8, 17, 112, 113, 122, 146, 217, 231, 242, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 376, 377, 378, 380, 384, 385, 387, 388, 389, 390, 391, 392, 393, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 412, 416, 417, 418, 419], "open": [4, 374, 376, 385, 389, 395], "bytesio": 4, "ani": [4, 17, 231, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374, 375, 384, 392, 396, 417], "other": [4, 17, 72, 122, 231, 355, 374, 375, 376, 377, 384, 385, 386, 387, 388, 392, 393, 394, 396, 404, 407, 408, 410, 412, 414, 419], "custom": [4, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 215, 239, 245, 255, 346, 364, 377, 386, 388, 396, 428], "meet": [4, 352, 353, 354, 355, 384, 402, 404, 408], "interfac": [4, 8, 207, 223, 250, 251, 353, 380, 383, 397], "option": [4, 17, 215, 222, 223, 231, 238, 240, 245, 250, 251, 364, 365, 386, 392, 399, 408, 412], "keyword": [4, 245], "fix_import": 4, "encod": [4, 234, 250, 251, 364, 386, 392], "error": [4, 21, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 391, 409], "us": [4, 8, 17, 22, 56, 149, 160, 182, 205, 215, 220, 222, 223, 225, 229, 231, 234, 235, 238, 239, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 374, 375, 376, 377, 378, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419], "compat": [4, 382], "support": [4, 17, 22, 149, 215, 217, 223, 226, 240, 243, 244, 255, 355, 381, 382, 383, 384, 385, 386, 387, 391, 392, 400, 404, 405, 407, 409, 411, 412, 417, 418, 422], "python": [4, 12, 13, 17, 250, 251, 351, 362, 375, 376, 377, 382, 383, 384, 385, 387, 389, 390, 395, 411], "2": [4, 17, 220, 223, 225, 250, 355, 364, 365, 376, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 392, 393, 394, 396, 401, 402, 403, 408, 409, 410, 412, 414, 415, 417], "If": [4, 17, 225, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 375, 378, 380, 384, 386, 387, 388, 389, 392, 396, 399, 405, 412, 414, 415, 418, 419], "true": [4, 15, 215, 223, 245, 248, 250, 251, 252, 364, 377, 380, 381, 383, 384, 386, 387, 393, 399, 400, 406, 409, 412, 415, 416, 419], "try": [4, 387, 395, 419], "old": [4, 17], "name": [4, 12, 13, 14, 15, 17, 22, 56, 83, 149, 205, 215, 223, 224, 231, 240, 243, 248, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 390, 392, 394, 400, 410, 411, 414, 415, 416, 417, 418, 419], "3": [4, 17, 355, 364, 365, 376, 378, 379, 380, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 400, 402, 403, 408, 410, 412, 413, 415], "tell": [4, 386, 388, 399, 400], "how": [4, 223, 225, 245, 345, 375, 384, 385, 386, 389, 390, 392, 396, 400, 401, 402, 412, 415, 418], "decod": [4, 234, 250, 251, 393, 409], "bit": [4, 380, 381, 395, 396, 398, 399, 405, 408, 419], "instanc": [4, 223, 229, 235, 245, 246, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 374, 385, 386, 394, 410, 413, 415, 416, 417], "default": [4, 222, 223, 231, 238, 240, 245, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 376, 377, 378, 384, 387, 393, 394, 396, 400, 404, 408, 409, 410, 412, 415, 416, 418, 419], "ascii": 4, "strict": 4, "respect": [4, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374, 385, 388, 389], "find_class": 4, "specifi": [4, 17, 217, 223, 225, 235, 237, 239, 243, 244, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 388, 389, 393, 396, 400, 404, 406, 412, 418, 419], "necessari": [4, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374, 391, 396, 408, 412], "import": [4, 15, 17, 240, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 365, 376, 377, 378, 381, 384, 385, 387, 389, 392, 393, 396, 399, 400, 404, 415, 416, 417, 418, 419], "subclass": [4, 56, 149, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 352, 353], "mai": [4, 8, 17, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 352, 353, 354, 355, 374, 375, 377, 384, 387, 392, 393, 395, 396, 401, 402, 403, 405, 406, 407, 408, 412, 414, 419], "overrid": [4, 231, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 352, 353, 391], "e": [4, 17, 112, 113, 215, 223, 229, 245, 364, 374, 377, 378, 387, 396, 399, 400, 405, 406, 412, 413], "g": [4, 215, 223, 229, 245, 364, 378, 395, 396, 399, 400, 405, 413], "restrict": 4, "unpickl": 4, "arbitrari": [4, 384], "call": [4, 17, 109, 141, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 380, 384, 387, 388, 393, 398, 399, 400, 407, 408, 419], "whenev": [4, 396], "pass": [4, 242, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 355, 393, 399, 400, 417, 419], "bounded_parallel_map": 4, "func": [4, 17, 364, 387], "callabl": [4, 238, 239, 245, 364], "In": [4, 17, 229, 245, 250, 364, 374, 377, 384, 385, 386, 387, 388, 389, 392, 393, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 415, 416, 419], "out": [4, 15, 17, 245, 375, 377, 384, 385, 388, 396, 397, 406, 419], "iter": [4, 215, 223, 229, 245, 364, 365, 377, 385, 387, 391, 393, 399, 403, 406, 407, 412, 413], "concurr": 4, "int": [4, 17, 215, 217, 222, 223, 243, 245, 250, 355, 365, 384, 399, 400, 401, 404], "parallel": [4, 403, 404, 405, 408, 412], "backpressur": 4, "caller": 4, "doesn": [4, 17, 364, 396, 399, 408, 412], "t": [4, 17, 223, 250, 251, 353, 355, 364, 376, 378, 391, 393, 395, 396, 398, 399, 401, 404, 406, 407, 408, 412, 418], "next": [4, 8, 15, 250, 251, 364, 388, 389, 396, 399, 401, 403, 405, 406, 407, 408], "fast": [4, 223, 346, 377, 381], "enough": [4, 376, 393, 404, 419], "stop": [4, 217, 223, 255, 376, 396, 419], "some": [4, 17, 146, 160, 251, 377, 384, 385, 386, 387, 388, 391, 392, 393, 396, 399, 400, 404, 408, 419], "point": [4, 207, 245, 250, 251, 364, 388, 399, 400, 404, 407, 419], "rather": [4, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 388, 399], "than": [4, 225, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 365, 386, 387, 388, 396, 399, 404, 406, 411, 412, 419], "let": [4, 386, 391, 401, 402], "result": [4, 17, 215, 229, 239, 245, 346, 364, 365, 374, 377, 379, 384, 387, 388, 394, 396, 399, 400, 401, 404, 405, 406, 407, 408, 410, 414, 418, 419], "pile": 4, "memori": [4, 245, 391, 393, 399, 400, 401, 402, 403, 405, 406, 407, 408, 416, 419], "specif": [4, 17, 231, 235, 354, 356, 364, 374, 378, 382, 384, 387, 388, 396, 398, 403, 404, 405, 411, 412, 415, 416, 417, 419], "max": [4, 34, 223, 225, 245, 377, 393, 394, 399, 401, 403, 408, 410, 419], "output": [4, 15, 17, 22, 34, 205, 206, 223, 238, 245, 250, 251, 355, 364, 376, 378, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 403, 404, 405, 406, 408, 412, 417], "valu": [4, 17, 22, 205, 206, 213, 222, 223, 238, 242, 245, 250, 251, 355, 376, 377, 378, 384, 385, 386, 387, 388, 396, 399, 400, 401, 402, 404, 406, 407, 412, 415, 416, 418, 419], "buffer": [4, 404, 405, 407], "per": [4, 215, 386, 394, 399, 402, 410, 412, 413, 418], "thread": [4, 394], "nth_multifile_path": 4, "path": [4, 17, 215, 223, 229, 231, 235, 237, 238, 242, 245, 254, 255, 376, 377, 381, 385, 386, 387, 389, 393, 396, 409, 411, 412], "pathlib": 4, "n": [4, 17, 226, 250, 251, 355, 376, 378, 387, 388, 390, 394, 395, 396, 398, 401, 402, 403, 404, 407, 408, 410, 412], "none": [4, 8, 15, 17, 22, 55, 56, 83, 90, 205, 206, 215, 222, 223, 224, 225, 226, 229, 235, 238, 239, 240, 243, 245, 248, 250, 251, 252, 253, 254, 355, 364, 376, 378, 379, 380, 386, 415, 416, 418, 419], "given": [4, 223, 231, 250, 251, 376, 392, 400, 403, 406, 408, 418], "belong": [4, 17, 384, 419], "multi": [4, 217, 385, 386, 387], "bin": [4, 8, 15, 238, 385, 386, 387, 389, 395, 396, 409, 411], "1": [4, 17, 222, 223, 224, 243, 245, 250, 251, 253, 255, 355, 364, 365, 374, 376, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 415, 417, 418, 419], "nth": 4, "find_multifile_path": 4, "whole": [4, 17, 220, 229, 364, 379, 386, 387, 403, 404, 405, 407, 409], "load_some_model": 4, "modelplu": 4, "load": [4, 20, 226, 229, 239, 240, 245, 250, 251, 377, 384, 385, 386, 387, 389, 393, 396, 398, 400, 401, 402, 403, 408], "format": [4, 21, 90, 215, 245, 364, 386, 395, 396, 406, 407, 410, 411, 419], "neural_engin": [7, 377, 381, 383, 384, 385, 386, 387, 389, 392, 393, 397, 412], "compil": [7, 207, 348, 381, 383, 384, 385, 387, 388, 390, 392, 393, 428], "extractor": [7, 17, 18, 207, 387, 389, 392], "graph": [7, 8, 10, 12, 13, 14, 17, 18, 19, 22, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 348, 377, 378, 384, 389, 392, 393, 403, 406, 408, 428], "loader": [7, 8, 18, 207, 387, 389, 392], "op": [7, 8, 12, 13, 14, 17, 18, 22, 122, 146, 157, 205, 206, 207, 223, 245, 355, 386, 391, 392, 393, 399, 400, 412, 413, 419], "sub_graph": [7, 18, 207, 384, 387], "graph_util": [7, 18, 207, 384, 388, 392], "logger": [7, 18, 207, 409], "onnx_util": [7, 18, 207], "optim": [7, 18, 207, 346, 362, 364, 365, 377, 378, 379, 380, 381, 382, 385, 388, 389, 390, 393, 396, 399, 400, 401, 403, 415, 416, 417, 418, 419], "tf_util": [7, 18, 207], "torch_util": [7, 18, 207], "neural": [8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 114, 146, 177, 205, 206, 207, 231, 234, 239, 346, 364, 365, 373, 377, 378, 384, 386, 387, 388, 389, 393, 403, 411, 416, 419, 422, 429], "engin": [8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 114, 146, 177, 205, 206, 207, 229, 245, 347, 356, 364, 373, 377, 384, 386, 388, 391, 393, 399, 404, 407, 411, 422, 429], "start_pipelin": 8, "config": [8, 15, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 222, 225, 228, 229, 234, 238, 239, 240, 242, 245, 250, 251, 362, 365, 376, 377, 378, 379, 381, 385, 386, 388, 391, 399, 412, 417, 418], "pipelin": [8, 228, 229, 235, 423], "firstli": 8, "get": [8, 15, 17, 21, 22, 205, 206, 225, 226, 245, 252, 254, 257, 380, 384, 387, 388, 389, 391, 392, 396, 399, 406, 408, 413, 417, 424], "comput": [8, 17, 205, 220, 245, 250, 251, 369, 377, 381, 392, 396, 397, 398, 399, 400, 401, 404, 406, 407, 411, 417, 419, 425], "framework": [8, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 146, 223, 229, 240, 245, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 369, 378, 379, 382, 384, 385, 389, 393, 397, 417, 418, 419, 425], "contain": [8, 17, 22, 112, 113, 205, 206, 213, 242, 245, 250, 251, 255, 364, 369, 376, 378, 384, 385, 387, 388, 392, 396, 397, 399, 411, 412, 413, 418, 419, 425], "node": [8, 12, 13, 14, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 182, 205, 206, 254, 380, 392, 394, 410], "edg": 8, "tensor": [8, 12, 13, 14, 15, 17, 18, 22, 44, 72, 146, 205, 206, 207, 222, 245, 250, 251, 355, 384, 385, 386, 388, 389, 391, 393, 406, 411, 412, 418, 419], "Then": [8, 17, 378, 388, 389, 407, 408, 412, 418, 419], "extract": [8, 10, 12, 13, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 384, 387, 389], "pack": [8, 18, 44, 207, 408], "them": [8, 12, 13, 17, 384, 385, 388, 396, 399, 402, 404, 407, 408, 419], "our": [8, 376, 380, 392, 399, 401, 402, 404, 406, 407, 408, 417], "form": [8, 17, 215, 245, 378, 386, 392, 398, 403, 407, 412], "exploit": [8, 392], "abov": [8, 17, 250, 251, 383, 384, 387, 388, 392, 396, 401, 402, 404, 405, 406, 411], "consist": [8, 375, 396], "sub": [8, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 384, 387, 388, 399, 406, 407], "see": [8, 17, 112, 113, 215, 220, 250, 251, 345, 374, 377, 384, 386, 387, 388, 389, 392, 394, 395, 396, 398, 403, 407, 409, 410, 411, 412, 414], "big": [8, 387, 388, 393], "layernorm": [8, 17, 47, 125, 384, 388, 392, 397, 412], "There": [8, 378, 384, 385, 386, 405, 409, 412, 416, 418], "differ": [8, 15, 20, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 186, 187, 188, 190, 191, 192, 203, 204, 225, 237, 364, 374, 376, 377, 378, 381, 384, 385, 387, 388, 389, 392, 396, 398, 405, 408, 415, 416, 418, 419], "flow": [8, 17, 384, 388, 396], "subgraph": [8, 17, 177, 387, 389], "final": [8, 387, 388, 389, 391, 392, 396, 401, 404, 405, 407, 415], "yaml": [8, 15, 17, 235, 237, 245, 386, 387, 389, 393, 411], "configur": [8, 100, 223, 225, 231, 235, 237, 239, 242, 243, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 355, 364, 376, 379, 380, 387, 398, 399, 403, 420], "infer": [8, 15, 20, 222, 234, 239, 245, 251, 346, 379, 381, 383, 384, 386, 387, 388, 389, 393, 395, 396, 402, 404, 405, 407, 416, 419, 426], "base": [10, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 231, 240, 245, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 353, 364, 376, 377, 380, 381, 382, 389, 391, 394, 401, 403, 404, 405, 406, 407, 409, 410, 417], "tensorflow": [10, 13, 23, 24, 26, 27, 28, 30, 35, 37, 42, 45, 46, 49, 50, 51, 53, 54, 57, 58, 60, 61, 64, 66, 67, 70, 81, 82, 86, 205, 223, 229, 239, 254, 362, 381, 382, 385, 392, 419], "onnx": [10, 12, 22, 206, 215, 223, 245, 377, 381, 384, 386, 387, 406, 417, 423, 428], "pleas": [10, 12, 13, 242, 255, 257, 345, 364, 365, 376, 378, 379, 381, 384, 388, 391, 395, 396, 397, 398, 399, 400, 404, 407, 412, 418, 419], "refer": [10, 12, 13, 220, 242, 255, 257, 364, 376, 377, 378, 381, 388, 391, 395, 396, 402, 404, 407, 412, 414, 418, 419], "onnx_extractor": [10, 11, 18, 207], "py": [10, 376, 384, 386, 390, 395, 411], "tf_extractor": [10, 11, 18, 207], "more": [10, 12, 13, 17, 112, 113, 345, 378, 381, 383, 384, 386, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 402, 404, 405, 406, 408, 410, 411, 412], "detail": [10, 17, 364, 369, 371, 374, 375, 377, 378, 379, 381, 383, 384, 386, 387, 388, 391, 392, 394, 395, 396, 397, 402, 409, 410, 412, 418, 419, 425, 427], "A": [10, 17, 225, 235, 240, 242, 245, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 384, 385, 392, 394, 396, 398, 401, 402, 408, 410, 412], "super": [10, 384, 387], "oper": [10, 12, 13, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 146, 160, 205, 206, 354, 356, 369, 379, 383, 384, 385, 387, 389, 397, 399, 400, 401, 403, 404, 405, 406, 407, 408, 412, 419, 425, 428], "do": [10, 223, 226, 238, 239, 242, 245, 374, 380, 384, 385, 387, 388, 392, 393, 396, 399, 401, 404, 418, 419], "addit": [10, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 377, 379, 386, 401, 405, 413, 420], "attribut": [10, 12, 13, 14, 17, 56, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 352, 353, 364, 386, 388, 391, 400], "without": [10, 238, 245, 374, 378, 384, 385, 396, 405, 408, 409, 412], "modifi": [10, 15, 17, 122, 146, 220, 242, 251, 385, 386, 389, 395, 396], "topologi": 10, "modul": [11, 16, 18, 19, 44, 114, 207, 236, 364, 389, 390], "torch_extractor": [11, 18, 207], "all": [12, 13, 14, 15, 17, 18, 44, 56, 146, 149, 160, 207, 213, 242, 245, 250, 251, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 364, 374, 377, 378, 383, 384, 385, 386, 388, 392, 394, 395, 396, 399, 400, 401, 402, 404, 407, 410, 415, 418, 419], "input": [12, 13, 15, 17, 22, 34, 112, 113, 146, 205, 206, 222, 239, 240, 245, 250, 251, 355, 364, 365, 376, 377, 378, 380, 381, 385, 386, 387, 388, 391, 393, 403, 405, 406, 408, 412, 417], "compos": [12, 13, 14, 229, 245, 364, 384, 389, 407], "order": [12, 13, 15, 17, 229, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 376, 384, 386, 392, 398, 404, 405, 407, 408], "origin": [12, 13, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 220, 222, 242, 255, 376, 378, 384, 389, 395, 396, 405, 406, 419], "calcul": [12, 13, 112, 113, 226, 242, 364, 386, 392, 398, 400, 401, 404, 405, 408, 412, 419], "notic": [12, 13, 389, 399, 406, 407, 414], "For": [12, 13, 17, 22, 146, 345, 364, 374, 377, 381, 384, 387, 388, 392, 393, 394, 396, 397, 399, 402, 406, 407, 408, 409, 410, 417], "relat": [12, 13, 245, 371, 378, 384, 388, 392, 393, 402, 407, 418, 419, 427], "deatil": [12, 13], "api": [12, 13, 15, 255, 346, 375, 377, 385, 387, 388, 389, 391, 392, 399, 400, 417, 424], "onnxextractor": 12, "decor": [12, 13, 14, 22, 56, 149, 205, 206], "graph_def": [12, 13, 14, 205], "ha": [12, 13, 14, 17, 255, 364, 375, 376, 377, 384, 387, 388, 390, 391, 392, 395, 396, 398, 400, 404, 412, 419], "input_tensor": [12, 13, 14, 17, 22, 56, 205, 206, 250, 251, 384, 388], "output_tensor": [12, 13, 14, 17, 22, 56, 205, 206, 384, 388], "record": [12, 13, 14, 220, 364, 386, 387], "dest": [12, 13, 14, 17, 22, 205], "paramet": [12, 13, 14, 17, 22, 56, 149, 205, 206, 215, 222, 223, 225, 229, 231, 234, 235, 237, 238, 239, 240, 243, 245, 250, 251, 254, 255, 346, 355, 364, 365, 377, 378, 386, 392, 396, 415, 418], "onnxmodel": [12, 22], "type": [12, 13, 14, 17, 22, 56, 149, 205, 206, 215, 222, 223, 225, 231, 234, 239, 240, 245, 250, 254, 255, 257, 356, 364, 375, 376, 377, 378, 379, 380, 385, 386, 387, 389, 392, 395, 396, 397, 399, 400, 405, 411, 412, 415, 416, 419], "tensorflowextractor": 13, "tensorflowmodel": [13, 205], "torch": [14, 89, 112, 113, 206, 215, 222, 223, 234, 245, 250, 251, 365, 377, 417], "torchextractor": 14, "torchscript": [14, 76, 206, 222, 223, 245, 365], "defint": [15, 90], "add_config_item": 15, "kei": [15, 17, 22, 205, 242, 245, 250, 251, 346, 377, 386, 387, 388, 396, 399, 400, 402], "val": [15, 17], "add": [15, 17, 34, 223, 226, 242, 378, 385, 386, 387, 388, 392, 395, 396, 397, 399, 400, 407, 412, 413, 428], "pair": [15, 223, 250, 385, 400, 408], "framework_modeling_config": 15, "inquire_config_item": 15, "insert_nod": 15, "index": [15, 250, 251, 254, 355, 388, 391, 392], "insert": [15, 17, 389, 391, 392, 396, 399, 400, 419], "ir": [15, 384, 385, 386, 387, 393, 409, 411, 428], "remove_nod": 15, "node_nam": [15, 17, 22, 205, 384, 388], "remov": [15, 17, 157, 160, 251, 374, 375, 400, 418], "get_node_id": [15, 384], "id": [15, 17, 231, 251, 254, 396, 400, 401], "accord": [15, 384, 387, 396, 408], "get_node_by_nam": 15, "rename_nod": 15, "old_nam": 15, "new_nam": 15, "change_node_input_tensor": 15, "mode": [15, 222, 224, 243, 244, 364, 386, 390, 405, 407, 412, 413, 419], "change_node_output_tensor": 15, "get_pre_node_nam": 15, "previou": [15, 229, 245, 377, 385, 404, 420], "get_next_node_nam": 15, "get_tensor_idx": 15, "tensor_nam": [15, 22, 205], "from_output": 15, "modify_node_connect": 15, "dump_tensor": 15, "tensor_list": 15, "dump": [15, 419], "engine_init": 15, "net_info": 15, "weight_data": 15, "b": [15, 17, 22, 250, 384, 392, 395, 396, 398, 401, 402, 403, 407, 408, 412], "refresh_model": 15, "pybind": 15, "executor": [15, 384, 385, 386], "input_data": [15, 17, 18, 114, 207, 385], "graph_init": [15, 385, 387], "load_weight": 15, "fals": [15, 215, 223, 224, 226, 231, 245, 250, 251, 355, 364, 365, 378, 381, 384, 387, 399, 400, 412, 415], "initi": [15, 17, 22, 25, 29, 47, 56, 77, 223, 235, 245, 250, 251, 355, 364, 395, 396, 399, 400, 404, 417, 418], "exampl": [15, 17, 146, 209, 215, 223, 250, 251, 255, 346, 347, 368, 374, 376, 377, 378, 381, 384, 385, 387, 388, 390, 391, 392, 393, 396, 397, 399, 401, 415, 418, 419, 424], "newgraph": 15, "conf": [15, 223, 385, 386, 387, 391, 411], "input_0": [15, 385, 387], "input_1": [15, 385, 387], "input_2": [15, 385, 387], "save": [15, 215, 226, 238, 245, 376, 377, 384, 385, 386, 389, 393, 402, 406, 408, 419], "output_dir": [15, 215, 238, 245, 364, 376, 389, 390], "ymal": 15, "graph_dispatch": [15, 387], "tune": [15, 209, 223, 245, 346, 376, 377, 378, 414, 415, 416, 418, 428], "inputs_shap": [15, 387], "dispatch": 15, "get_sparse_nodes_nam": 15, "threshold": [15, 396, 412], "0": [15, 17, 205, 215, 223, 224, 226, 243, 248, 250, 251, 253, 254, 255, 352, 353, 355, 364, 365, 376, 377, 378, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 414, 415, 417, 418, 419], "7": [15, 17, 355, 364, 377, 379, 382, 383, 384, 388, 390, 392, 394, 402, 410, 412, 415, 419], "sparsiti": [15, 223, 242, 394, 412, 418], "spars": [15, 346, 355, 377, 387, 397, 398, 407, 412, 426], "transpose_mode_int8": 15, "node_name_list": 15, "transpos": [15, 18, 44, 69, 207, 250, 251, 386, 387, 397, 398, 402, 404, 405, 408, 412, 426], "innerproduct": [15, 34, 122, 386, 387, 397], "reorder": [15, 18, 44, 207, 404, 405], "util": [17, 22, 205, 206, 223, 225, 228, 256, 376, 384, 392, 395, 396, 398, 405, 408, 412], "names_from_input": 17, "static": [17, 252, 352, 355, 386, 389, 399, 402, 404, 417], "valid": [17, 223, 239, 245, 365, 375, 376, 378, 381, 392, 414, 420, 427], "field": [17, 223, 376, 399, 400, 419], "tupl": [17, 225, 240, 250, 251], "nodedef": [17, 205], "also": [17, 375, 377, 384, 385, 386, 388, 389, 391, 392, 393, 395, 396, 398, 399, 400, 401, 404, 407, 408, 409, 416, 419], "get_data_dtyp": 17, "const": [17, 22, 205, 352, 353, 354, 355, 391, 397, 399, 400, 401, 402], "dtype": [17, 22, 83, 205, 206, 245, 377, 380, 385, 386, 387, 391], "numpi": [17, 22, 377, 385], "dtypes_dict": 17, "autocast_init": 17, "quant": [17, 122, 223, 397, 412, 419, 426], "info": [17, 21, 22, 112, 113, 205, 206, 364, 377, 384, 409], "set_autocast": 17, "get_autocast_info": 17, "quant_info_init": 17, "insert_quant_info": 17, "get_quant_info": 17, "environ_info_init": 17, "environ": [17, 253, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374, 385, 412, 413], "insert_environ_info": 17, "remove_environ_info_item": 17, "item": [17, 365, 377, 381], "get_environ_info": 17, "search_straight_pattern": [17, 392], "input_pattern": [17, 392], "search": [17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 223, 226, 229, 235, 245, 364, 379, 388], "user": [17, 215, 242, 250, 251, 255, 346, 347, 364, 365, 368, 371, 377, 380, 384, 386, 388, 390, 393, 396, 404, 406, 409, 412, 416, 417, 424, 427], "pattern": [17, 18, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 213, 223, 353, 389, 398, 401, 411, 418, 428], "intern": [17, 388, 396, 404], "grpah": [17, 22, 205], "structur": [17, 379, 384, 385, 387, 395, 396, 403, 407, 411, 418], "attent": [17, 250, 251, 353, 364, 374, 386, 392, 406], "chain": [17, 399, 400], "straight": 17, "sequenc": [17, 209, 217, 225, 250, 251, 377, 381, 384, 388, 392, 396, 403, 412], "It": [17, 109, 231, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 378, 384, 386, 387, 388, 391, 392, 393, 396, 403, 404, 406, 407, 412], "otherwis": [17, 215, 374, 384, 387, 404, 412], "op_typ": [17, 22, 56, 205, 206, 384, 387, 388, 400], "element": [17, 242, 245, 384, 392, 397, 401, 403, 406, 408, 412, 426], "could": [17, 242, 353, 374, 384, 385, 386, 388, 389, 392, 402, 411, 412, 418, 419], "mandatori": 17, "while": [17, 385, 388, 392, 396, 401, 404, 407, 412, 419], "stand": [17, 384], "mybe": 17, "mul": [17, 384, 388, 392, 399], "addv2": [17, 34, 392], "equal": [17, 245, 388, 396, 398, 399], "below": [17, 223, 346, 364, 375, 376, 377, 378, 384, 385, 387, 389, 392, 396, 398, 403, 405, 406, 407, 408, 416], "length": [17, 223, 225, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 377, 388, 392, 396, 399, 412, 419], "match": [17, 213, 364, 378, 387, 388, 392, 403, 406], "24": [17, 364, 392, 394, 402, 410], "layer": [17, 223, 225, 242, 250, 251, 364, 386, 392, 396, 399, 403, 406, 418, 426], "each": [17, 112, 113, 215, 223, 229, 245, 250, 251, 255, 364, 376, 386, 387, 388, 396, 398, 401, 403, 404, 405, 406, 407, 408, 411, 412, 413, 418], "still": [17, 242, 346, 392, 401, 419], "last": [17, 220, 223, 245, 250, 251, 388, 392, 393, 396, 398, 403, 404, 406, 419], "former": [17, 392], "here": [17, 235, 245, 371, 377, 383, 384, 387, 388, 389, 391, 392, 396, 400, 408, 419, 420, 427], "search_pattern": [17, 392], "pattern_list": 17, "complet": [17, 384, 394, 396, 401, 404, 407, 410], "its": [17, 146, 229, 245, 364, 374, 378, 384, 385, 388, 389, 392, 396, 403, 404, 405, 408, 411, 412, 414], "op_idx": 17, "howev": [17, 242, 387, 388, 392, 393, 396, 398, 402, 405, 408], "due": [17, 250, 388, 392, 396, 398, 419], "few": [17, 215, 403], "complic": [17, 384, 392], "thei": [17, 220, 231, 374, 378, 383, 392, 393, 396, 398, 399, 400, 402, 406, 412], "therefor": [17, 380, 398, 403, 406, 408, 419], "fist": 17, "repres": [17, 242, 374, 386, 388, 392, 396, 398, 400, 401, 404, 419], "main": [17, 217, 242, 245, 250, 251, 255, 388, 396, 405, 412], "top": [17, 346, 376, 377, 403], "down": [17, 396], "head": [17, 250, 251, 392, 400, 406, 407], "tail": [17, 392, 409], "left": [17, 250, 251, 402, 406, 408], "bert_large_squad": 17, "pb": [17, 381], "squareddiffer": [17, 34, 392], "4": [17, 223, 243, 245, 250, 251, 355, 364, 365, 374, 376, 378, 379, 382, 384, 386, 387, 388, 391, 392, 393, 394, 395, 396, 402, 403, 404, 405, 408, 409, 412, 418], "rsqrt": [17, 34, 392], "5": [17, 95, 96, 97, 98, 178, 179, 180, 183, 184, 185, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 223, 224, 355, 364, 365, 376, 378, 384, 385, 386, 388, 391, 392, 394, 396, 402, 410, 412], "9": [17, 223, 255, 364, 376, 377, 381, 382, 384, 392, 394, 396, 402, 410, 412, 418], "6": [17, 355, 364, 378, 379, 383, 384, 388, 392, 394, 400, 402, 409, 410, 419], "same": [17, 251, 378, 380, 384, 385, 386, 388, 389, 392, 395, 396, 398, 401, 404, 405, 408, 411, 412, 413], "follow": [17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 217, 250, 251, 348, 351, 356, 362, 365, 374, 375, 376, 377, 378, 382, 384, 386, 387, 388, 389, 391, 395, 396, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 419], "frozen": [17, 385, 389], "had": [17, 384], "better": [17, 109, 229, 239, 245, 364, 384, 385, 386, 387, 396, 398, 404, 405, 406, 407, 411, 415, 416, 419], "identifi": [17, 231, 401], "own": [17, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 384, 388, 389, 395, 396, 399, 405, 416], "casual": 17, "tf": [17, 239, 250, 364], "start": [17, 250, 251, 386, 392, 413, 424], "mostli": [17, 392], "longest": [17, 392], "sometim": [17, 388, 419], "connect": [17, 396, 418], "But": [17, 385, 398, 417], "don": [17, 223, 250, 251, 391, 393, 396, 399], "least": [17, 213, 242, 396, 405], "exist": [17, 231, 255, 364, 381, 384, 417], "relationship": 17, "sever": [17, 376, 384, 389, 392, 393, 396, 398, 412, 419], "split": [17, 18, 44, 207, 365, 376, 387, 398, 402, 404, 405], "representtaion": 17, "idx": [17, 400], "outsid": [17, 250, 251, 388, 392], "give": [17, 384, 388, 398], "just": [17, 251, 377, 384, 385, 386, 387, 388, 389, 392, 396, 400, 408, 411, 415], "empti": [17, 34, 388, 392, 400, 413], "algorithm": [17, 56, 149, 223, 235, 355, 364, 376, 387, 388, 391, 392, 396, 398, 399, 405, 412, 418, 419], "kind": [17, 100, 354, 391, 405, 412], "beaus": 17, "make": [17, 56, 146, 245, 365, 374, 375, 383, 384, 385, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 409, 412], "sure": [17, 146, 365, 384, 396, 401, 412], "check": [17, 22, 122, 223, 245, 371, 375, 377, 384, 387, 388, 392, 396, 400, 427], "symmetr": [17, 392, 404, 412, 419], "consecut": [17, 402, 408], "y": [17, 112, 113, 400], "o": [17, 255, 364, 376, 377, 382, 394, 400, 405, 410], "shape": [17, 18, 44, 83, 207, 250, 251, 355, 364, 377, 385, 386, 387, 391, 393, 398, 404, 406, 412], "df": [17, 392], "duplic": 17, "would": [17, 384, 388, 389, 392, 393, 396, 409], "perform": [17, 223, 229, 235, 245, 250, 251, 252, 364, 365, 369, 377, 378, 380, 381, 385, 386, 387, 390, 395, 398, 401, 402, 403, 404, 405, 406, 407, 408, 412, 415, 416, 418, 419, 425], "befor": [17, 223, 242, 245, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 365, 375, 378, 380, 384, 387, 388, 389, 392, 396, 399, 400, 401, 402, 404, 405, 407, 412, 419], "splice": 17, "de": 17, "total": [17, 223, 225, 250, 364, 365, 376, 388, 392, 396, 401, 408, 409], "step": [17, 223, 242, 245, 383, 384, 386, 388, 389, 390, 391, 392, 393, 399, 404, 406, 407, 412], "c": [17, 207, 356, 377, 382, 383, 384, 385, 387, 392, 394, 395, 396, 401, 403, 410, 412], "d": [17, 364, 376, 378, 398, 406], "f": [17, 355, 378, 391, 409, 419], "c1": 17, "d1": [17, 412], "c2": 17, "d2": 17, "c3": [17, 409], "d3": [17, 409], "now": [17, 255, 383, 384, 385, 387, 388, 389, 395, 399, 400, 407, 412, 417], "set": [17, 56, 215, 217, 224, 225, 238, 239, 245, 250, 251, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 365, 374, 376, 377, 385, 387, 388, 389, 391, 392, 393, 395, 396, 398, 399, 400, 403, 412], "part": [17, 215, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 388, 391, 392, 393, 396, 407, 408], "As": [17, 378, 384, 386, 388, 389, 402, 406, 408], "appli": [17, 223, 374, 379, 381, 395, 396, 399, 400, 404, 405, 406, 408, 412, 418, 419], "everi": [17, 242, 384, 398, 412], "right": [17, 250, 251, 374, 396, 402, 406, 408, 417], "construct_nod": 17, "attr": [17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 354, 384, 385, 399, 400], "construct": [17, 56, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374, 399, 400], "new_nod": 17, "insert_pattern": 17, "target_node_nam": 17, "replac": [17, 251, 377, 378, 381, 384, 388, 418, 419], "ccontain": 17, "insid": [17, 388, 391, 403, 405], "been": [17, 250, 251, 375, 378, 400, 404, 417], "pattern_map": [17, 384, 388], "pattern_nam": 17, "mapping_dict": 17, "mapping_config": 17, "first": [17, 141, 223, 245, 376, 383, 384, 387, 388, 390, 392, 393, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 413, 419], "second": [17, 223, 250, 251, 365, 383, 388, 390, 391, 392, 402, 403, 406, 408, 409, 412, 419], "third": [17, 388, 403, 408, 414], "reshap": [17, 18, 44, 61, 182, 207, 384, 385, 386, 391], "paddingsequ": [17, 59, 148, 385], "search_mod": [17, 384, 388], "embed": [17, 250, 251, 385, 388, 392, 399], "m": [17, 355, 377, 378, 379, 386, 387, 394, 395, 396, 398, 401, 402, 403, 404, 405, 407, 408, 410, 412], "after": [17, 109, 146, 160, 182, 242, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 380, 383, 386, 387, 388, 389, 391, 392, 396, 398, 400, 405, 407, 408, 411, 412, 413, 419], "fusion": [17, 100, 146, 160, 391, 392, 399, 400, 405, 428], "about": [17, 374, 377, 384, 388, 391, 394, 396, 400, 408, 410], "in_pattern": 17, "input_id": [17, 250, 251, 381, 385, 393], "segment_id": [17, 381, 385], "input_mask": [17, 381, 385], "out_pattern": 17, "th": [17, 388], "berfor": 17, "match_result": 17, "_n": 17, "reshape_0": [17, 388], "dict": [17, 22, 205, 206, 209, 215, 223, 235, 240, 242, 243, 245, 250, 251, 255, 376, 384, 385, 418], "where": [17, 18, 44, 207, 250, 251, 364, 378, 388, 396, 398, 400, 403, 404, 406, 408, 412, 413], "go": [17, 396, 401], "mayb": [17, 387, 408], "happen": [17, 386, 408], "sepcial": 17, "biasadd": [17, 28, 388, 392], "bia": [17, 22, 223, 355, 386, 412], "unfix": 17, "locat": [17, 83, 384, 385, 388, 392, 408, 412, 420], "onli": [17, 215, 220, 223, 245, 250, 251, 255, 346, 365, 382, 385, 387, 388, 389, 391, 393, 395, 396, 397, 399, 400, 401, 404, 406, 407, 408, 412, 415, 417], "write": [17, 376, 384, 392, 404, 405, 407], "note": [17, 242, 365, 379, 382, 384, 385, 386, 387, 388, 390, 391, 392, 396, 399, 400, 406, 407, 408, 412, 419], "That": [17, 407, 408], "too": [17, 384, 398, 399, 404], "decompos": [17, 384], "list2str": [17, 384], "src_perm": 17, "emit": [17, 388], "ret": [17, 392, 409], "str2list": 17, "src_str": 17, "pattern_mapping_conf_valid": 17, "conf_dict": 17, "lazyimport": 17, "module_nam": 17, "lazi": 17, "till": 17, "later": [17, 384, 392], "get_model_fwk_nam": 17, "avail": [17, 348, 351, 356, 362, 377, 382, 385, 396, 403], "fwk": 17, "na": [17, 223, 228, 245, 376, 397], "set_environ_var": 17, "env": [17, 390], "var": [17, 112, 113, 355], "kv": 17, "del_environ_var": 17, "delet": [17, 231, 418], "assert": [18, 44, 207, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364], "baddbmm": [18, 44, 207], "batch_matmul": [18, 44, 207], "batch_matmul_v2": [18, 44, 207], "bias_add": [18, 22, 44, 207], "cast": [18, 44, 207], "concat": [18, 44, 207, 384], "conv": [18, 44, 207, 223, 386, 387, 400], "co": [18, 44, 89, 207, 217, 231, 377], "empty_op": [18, 44, 207, 384], "expand_dim": [18, 44, 207], "fused_batch_matmul_v2": [18, 44, 207], "fused_batch_norm_v3": [18, 44, 207], "fused_gemm": [18, 44, 207], "fused_matmul": [18, 44, 207], "gather": [18, 44, 207, 245, 250, 251, 353, 384, 399], "gather_el": [18, 44, 207, 384], "gelu": [18, 44, 114, 207, 384, 391, 397, 400, 412], "gemm": [18, 44, 207, 223, 380, 398, 401, 404, 407, 412, 426], "iterator_get_next": [18, 44, 207], "iterator_v2": [18, 44, 207, 384], "layer_norm": [18, 44, 114, 207, 384], "log_softmax": [18, 44, 207], "map_and_batch_dataset": [18, 44, 207, 384], "matmul": [18, 22, 34, 44, 122, 207, 223, 380, 386, 388, 389, 392, 397, 407, 412, 426], "mkl_layer_norm": [18, 44, 207], "model_dataset": [18, 44, 207], "one_hot": [18, 44, 207], "onnx_input": [18, 44, 207], "optimize_dataset": [18, 44, 207, 384], "padding_sequ": [18, 44, 114, 207, 385], "placehold": [18, 44, 207], "pos_emb": [18, 44, 207], "pow": [18, 44, 207, 384, 388], "quantize_linear": [18, 44, 207, 384], "quantize_v2": [18, 44, 207], "quantized_fused_matmul_and_dequant": [18, 44, 207], "quantized_matmul_with_bias_and_dequant": [18, 44, 207], "reduce_mean": [18, 44, 207, 384], "reduce_sum": [18, 44, 207], "resiz": [18, 44, 207], "rsub": [18, 44, 207], "scatter_el": [18, 44, 207], "sin": [18, 44, 207], "size": [18, 44, 207, 215, 222, 223, 245, 250, 251, 364, 374, 377, 381, 385, 387, 393, 398, 401, 403, 405, 406, 407, 412, 419], "slice_position_id": [18, 44, 207], "softmax": [18, 44, 207, 250, 353, 364, 378, 397, 406, 407], "squeez": [18, 44, 207], "strided_slic": [18, 44, 207], "top_k": [18, 44, 207, 255, 396], "unpack": [18, 44, 207, 245, 384], "unsqueez": [18, 44, 207, 384], "view": [18, 44, 207, 375, 386, 398, 420], "innerproductreshapefus": [18, 107, 114, 207], "add_cls_token": [18, 114, 207], "add_embed": [18, 114, 207], "arangewithreciproc": [18, 114, 207], "attentionblock_attentionmaskaddreshap": [18, 114, 207], "attentionblock_constantofshapewithmul": [18, 114, 207], "attentionblock_qkvprereshap": [18, 114, 207], "attentionblock_qkvreshap": [18, 114, 207], "attentionblock_weightreshapeto4d": [18, 114, 207], "attention_mask_length_adaptive_keep_indic": [18, 114, 207], "attention_output_layer_norm_length_adaptive_keep_indic": [18, 114, 207], "attention_reshap": [18, 114, 207], "cast_to": [18, 114, 207], "collect_quant_info": [18, 114, 207], "conv_reshap": [18, 114, 207], "decoder_attn_reshap": [18, 114, 207], "einsumwitharang": [18, 114, 207], "embeddingbag": [18, 34, 114, 207], "embeddings_to_2d_before_inner_product": [18, 114, 207], "generate_sequ": [18, 114, 207], "innerproductwithbiasgelu": [18, 114, 207], "innerproductwithslic": [18, 114, 207], "innerproductwithswish": [18, 114, 207], "input_fil": [18, 114, 207], "insert_bf16_nod": [18, 114, 207], "insert_quant_nod": [18, 114, 207], "int8_bf16_mixed_precision_check": [18, 114, 207], "interact_featur": [18, 114, 207], "last_layer_shap": [18, 114, 207], "layer_norm_with_reduce_mean": [18, 114, 207, 384], "layer_norm_with_transpos": [18, 114, 207], "llama_embed": [18, 114, 207], "llama_matmulwithtranspos": [18, 114, 207], "llama_postprocess": [18, 114, 207], "llama_rotary_pos_emb": [18, 114, 207], "lower_all_tupl": [18, 114, 207], "matmul_with_bia": [18, 114, 207], "matmul_with_bias_add": [18, 114, 207], "matmul_with_bias_gelu": [18, 114, 207], "matmul_with_bias_relu": [18, 114, 207], "matmul_with_bias_sigmoid": [18, 114, 207], "matmul_with_bias_tanh": [18, 114, 207], "matmul_with_bias_unsqueez": [18, 114, 207], "matmul_with_transpos": [18, 114, 207], "matmul_with_transpose_scale_add": [18, 114, 207], "merged_embeddingbag": [18, 114, 207], "neox_reorder_chang": [18, 114, 207], "neox_rotary_pos_emb": [18, 114, 207], "operator_adaptor": [18, 114, 207], "output_data": [18, 114, 207, 385], "position_embed": [18, 114, 207], "position_embeddings_v1": [18, 114, 207], "qkv_merg": [18, 114, 207], "qkv_reshap": [18, 114, 207], "quant_gather_to_bf16": [18, 114, 207], "quantize_fus": [18, 114, 207], "quantized_graph_dtype_refactor": [18, 114, 207], "remove_constant_op": [18, 114, 207], "remove_last_view": [18, 114, 207], "remove_rang": [18, 114, 207], "remove_unused_oper": [18, 114, 207], "remove_zero": [18, 114, 207], "removeslic": [18, 114, 207], "reshape_after_restore_hidden_st": [18, 114, 207], "reshape_before_and_after_attention_out_layer_norm_gather_el": [18, 114, 207], "reshape_before_restore_hidden_st": [18, 114, 207], "reshape_fus": [18, 114, 207], "restore_hidden_states_in_length_adaptive_update_indic": [18, 114, 207], "rms_norm": [18, 114, 207], "rotary_pos_emb": [18, 114, 207], "slicemask": [18, 114, 207], "stablediffusion_explicitnhwctranspos": [18, 114, 207], "stablediffusion_mhareshap": [18, 114, 207], "stablediffusion_reshapefus": [18, 114, 207], "stablediffusion_bf16convert": [18, 114, 207], "start_end_logit": [18, 114, 207], "subgraph_match": [18, 114, 207, 387], "textencdoer_word_embed": [18, 114, 207], "textencoder_attentionmaskaddreshap": [18, 114, 207], "textencoder_attentionreshap": [18, 114, 207], "textencoder_kvreshap": [18, 114, 207], "textencoder_mulreshap": [18, 114, 207], "textencoder_qreshap": [18, 114, 207], "textencoder_softmaxreshap": [18, 114, 207], "textencoder_causal_attention_mask": [18, 114, 207], "token_type_embed": [18, 114, 207, 384], "token_type_embeddings_v1": [18, 114, 207, 384], "torch_embed": [18, 114, 207], "torch_ip_insert_bia": [18, 114, 207], "torch_unpack_baddbmm": [18, 114, 207], "torchinsertbf16nod": [18, 114, 154, 207], "torchpaddingsqu": [18, 114, 207], "transformer2dmodel_attentionmaskaddreshap": [18, 114, 207], "transformer2dmodel_constantofshapewithmul": [18, 114, 207], "transformer2dmodel_ffnslic": [18, 114, 207], "transformer2dmodel_ffnslice_1": [18, 114, 207], "transformer2dmodel_qkvprereshap": [18, 114, 207], "transformer2dmodel_qkvreshap": [18, 114, 207], "transformer2dmodel_qkvreshape4d": [18, 114, 207], "transformer2dmodel_encoderhiddenstatesreshap": [18, 114, 207], "transformer2dmodel_getsamplebatch": [18, 114, 207], "transformer2dmodel_sampleslic": [18, 114, 207], "transpose_batch_matmul": [18, 114, 207, 384], "word_embed": [18, 114, 207, 385], "frontend": [20, 403], "get_logg": 21, "log": [21, 377, 385, 391], "level": [21, 251, 346, 374, 377, 387, 400, 403, 411], "msg": 21, "arg": [21, 90, 213, 217, 231, 239, 242, 245, 255, 353, 364, 386, 391], "kwarg": [21, 90, 217, 223, 231, 242, 245, 250, 251], "debug": [21, 385, 393, 396], "fatal": 21, "warn": 21, "get_children": 22, "input_name_to_nod": 22, "get_node_children_nam": 22, "nodeproto": [22, 206], "get_initializer_children_nam": 22, "graph_node_names_detail": [22, 205, 206], "pars": [22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 89, 205, 385, 391], "graph_nodes_dict": [22, 205], "Be": [22, 205], "class": [22, 205, 215, 232, 240, 355, 356, 365, 376, 378, 384, 391, 399, 400], "cerat": 22, "output_nam": [22, 385], "ouput": 22, "param": [22, 205, 245, 399, 400], "node_names_detail": [22, 205], "is_supported_onnx_graph": [22, 289], "is_supported_onnx_nod": 22, "change_num_nam": 22, "number": [22, 215, 223, 225, 226, 251, 255, 365, 376, 387, 388, 392, 395, 398, 401, 407, 408, 412, 413, 419], "bias_to_int32": 22, "bias_nod": 22, "a_scal": 22, "b_scale": 22, "int8": [22, 223, 240, 245, 377, 379, 386, 387, 389, 395, 397, 400, 405, 406, 412, 419, 428], "int32": [22, 377, 385], "matric": [22, 401, 406, 407], "arrai": [22, 385], "fp32_bia": 22, "int8_bia": 22, "int8_bias_zero_point": 22, "int8_bias_scal": 22, "int32_bia": 22, "onnx_extract_oper": 22, "framework_model": [22, 55, 56, 205], "nodes_dict": [22, 55, 56, 205, 206], "engine_graph": [22, 55, 56, 205, 206], "tf_dtype": [22, 205, 206], "set_attr": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 384], "regist": [25, 34, 47, 56, 59, 62, 63, 72, 74, 78, 88, 149, 398, 399, 400, 401, 403, 404, 405, 406, 408, 428], "tile": [25, 34, 72, 398, 402, 404, 406, 407, 408, 412], "batchmatmul": 26, "batchmatmulv2": 27, "binaryop": [29, 399], "onnxruntim": [31, 32, 33, 39, 41, 62, 63, 68, 69, 71, 72, 73, 75, 80, 84, 85, 87, 88, 377, 380, 382, 384, 390], "multiheadattenion": 34, "binaryadd": [34, 399], "constantofshap": 34, "dequantizelinear": [34, 389], "dequant": [34, 399, 400, 404, 412], "erf": [34, 391], "expand": [34, 250, 251], "fill": [34, 388, 396, 406], "flatmapdataset": 34, "ident": [34, 374, 378, 396], "makeiter": 34, "matmulwithbiasadd": [34, 134], "matmulwithbiasgelu": [34, 135], "matmulwithbiastanh": [34, 138], "matmulwithbia": [34, 133], "qlinearmatmul": [34, 389], "qlinearadd": 34, "qlinearmul": 34, "realdiv": 34, "sqrt": [34, 384, 388, 406], "squar": [34, 250, 251], "stopgradi": 34, "tanh": [34, 391, 400, 412], "tensorslicedataset": 34, "transposebatchmatmul": [34, 203, 384], "rang": [34, 223, 245, 364, 377, 384, 387, 393, 396, 412, 418, 419], "relu": [34, 400, 412], "matmulwithbiasrelu": [34, 136], "cumsum": 34, "onehot": [34, 54], "tokentypeid": 34, "positionid": 34, "loop": [34, 245, 364, 384, 399, 401, 406], "sigmoid": 34, "matmulwithbiassigmoid": [34, 137], "flatten": 34, "mergedembeddingbag": [34, 142], "convolut": [34, 378, 387], "expandindic": 34, "opani": 34, "sequencelength": [34, 394], "arang": 34, "reciproc": 34, "einsum": 34, "repeat": [34, 395, 401, 413], "stack": [34, 407], "constant": [34, 157, 245], "listconstruct": 34, "latrang": 34, "masked_fil": 34, "floor_divid": 34, "listunpack": 34, "silu": 34, "zero": [34, 242, 400, 401, 403, 404, 408, 418], "expanddim": 35, "fusedbatchnormv3": 37, "fusedgemm": 38, "fusedmatmul": 39, "gatherv2": [40, 384], "gatherel": [41, 384], "iteratorgetnext": 45, "iteratorv2": [46, 384], "logsoftmax": [48, 353], "mapandbatchdataset": [49, 384], "modeldataset": 53, "onnxinput": 55, "operator_registri": [56, 384], "operator_typ": [56, 384], "cl": [56, 149, 364], "registr": [56, 149, 384], "ordereddict": [56, 384], "optimizedataset": [57, 384], "packagepositionembed": 61, "quantizelinear": [63, 384, 389], "quantiz": [63, 223, 228, 231, 238, 239, 245, 346, 377, 380, 395, 399, 400, 404, 405, 407, 412, 415, 423, 428], "quantizev2": 64, "quantizedmatmulwithbiasanddequant": 66, "reducemean": [67, 384, 388], "reducesum": 68, "aten": 72, "self": [72, 223, 250, 251, 255, 364, 376, 384, 386], "scalar": [72, 399], "alpha": [72, 355, 405, 412], "scatterel": 73, "primconst": 76, "slicepositionid": 78, "stridedslic": 82, "source_op": 83, "dest_op": 83, "definit": [83, 400], "topk": 84, "input_shap": [90, 386, 387, 412], "weight_optim": 90, "fuse": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 389, 399, 400], "acceler": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 369, 377, 379, 380, 389, 399, 400, 404, 406, 419, 425], "strategi": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 223, 239, 401], "addclstoken": [92, 100], "addembed": 93, "stabl": [95, 96, 97, 98, 112, 113, 178, 179, 180, 183, 184, 185, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 346, 377, 382, 393, 404], "diffusionv1": [95, 96, 97, 98, 179, 180, 183, 184, 185, 193, 194, 197, 198, 199], "attentionmasklengthadaptiveexpandindic": 100, "attentionoutputlayernormlengthadaptiveexpandindic": 101, "attentionreshap": 102, "castto": 103, "collectquantinfo": 104, "convreshap": 105, "decoderattnreshap": 106, "gatherwithadd": 109, "embeddingsto2dbeforeinnerproduct": 109, "operatoradaptor": [109, 146], "quantgathertobf16": [109, 154], "generatesequ": 111, "channel": [112, 113, 399, 403, 408, 412, 418], "separ": [112, 113, 374, 392, 408, 414], "num_group": [112, 113], "group": [112, 113, 379, 384, 392, 401, 406, 408, 418], "num_channel": [112, 113], "x": [112, 113, 226, 250, 251, 387, 400, 403, 404, 406, 407, 412, 419], "epsilon": [112, 113, 384], "gamma": [112, 113], "beta": [112, 113, 355, 405, 412], "http": [112, 113, 217, 220, 250, 255, 257, 376, 377, 382, 383, 385, 391, 414, 420], "pytorch": [112, 113, 215, 223, 226, 229, 231, 234, 238, 245, 250, 251, 253, 362, 376, 377, 380, 382, 390, 395, 411, 417, 418, 419], "org": [112, 113, 220, 250, 382], "doc": [112, 113, 217, 255, 384, 388, 399, 408], "nn": [112, 113, 222, 245, 403], "html": [112, 113, 391], "groupnorm": [113, 353], "inputdata": [118, 384], "inputfil": 119, "insertbf16nod": 120, "insertquantnod": 121, "quantizedgraphdtyperefactor": [122, 156], "int8bf16mixedprecisioncheck": 122, "inferenc": 122, "under": [122, 245, 377, 384, 385, 386, 389, 405, 412, 414], "in8": 122, "bf16": [122, 223, 245, 377, 379, 389, 397, 400, 402, 404, 407, 412], "mix": [122, 387], "precis": [122, 245, 380, 389, 416, 419, 428], "u8": [122, 389, 391, 400, 407, 412], "s8": [122, 389, 399, 400, 404, 412], "fp32": [122, 223, 245, 377, 379, 385, 386, 387, 389, 391, 395, 399, 400, 402, 403, 405, 407, 412, 417, 419], "interactfeatur": 123, "lastlayershap": 124, "layernormwithreducemean": [126, 384], "layernormwithtranspos": 127, "llamaembed": 128, "llamamatmulwithtranspos": 129, "llamapostprocess": 130, "roraryposemb": [131, 145, 169], "llamaroraryposemb": 131, "loweralltupl": 132, "matmulwithbiasunsqueez": 139, "matmulwithtranspos": [140, 141], "matmulwithtransposescaleadd": 141, "multiheadattent": 143, "bass": [143, 149, 172], "neoxreorderchang": 144, "neoxroraryposemb": 145, "sweep": 146, "receiv": [146, 231, 388, 392, 393, 396], "outputdata": [147, 384], "pattern_registri": [149, 384], "pattern_typ": [149, 384], "positionembed": 150, "positionembeddingsv1": 151, "qkvmerg": 152, "qkvreshap": 153, "qunatizefus": 155, "quantizedgraphdtypecheck": 156, "removeconstantop": 157, "removelastview": 158, "removerang": 159, "removeunusedoper": 160, "removezero": 161, "reshapeafterrestorehiddenst": 163, "reshapebeforeandafterattentionoutlayernormgatherel": 164, "reshapebeforerestorehiddenst": 165, "reshapefus": 166, "restorehiddenstatesinlengthadapt": 167, "rmsnorm": 168, "explicitnhwctransposeforconv": 171, "startendlogit": 176, "matcher": [177, 364, 389], "subgraphmatch": [177, 387], "textencoder_wordembed": 178, "textencoderv1": [178, 195, 196, 200, 201, 202], "qkv": [182, 387, 389], "textencoder_casualattentionmask": 185, "tokentypeembed": [186, 384], "tokentypeembeddingsv1": [187, 384], "torchembed": 188, "torchinnerproductinsertbia": 189, "torchunpackbaddbmm": 190, "torchpaddingsequ": 192, "transformer2dmodel_ffninputslic": 195, "transformer2dmodel_ffninputslice_1": 196, "transformer2dmodel_qkvreshapeto4d": 199, "wordembed": 204, "create_tf_nod": 205, "creat": [205, 220, 223, 229, 237, 245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 374, 384, 390, 391, 396, 403, 412, 415], "tendorflow": 205, "get_tensor_dest_op": 205, "store": [205, 223, 226, 229, 231, 364, 384, 388, 389, 392, 393, 398, 399, 400, 401, 402, 404, 405, 406, 408], "dest_op_nam": 205, "tf_extract_oper": 205, "tf_dtype_id": 205, "deal": [205, 364, 386], "multipl": [205, 246, 250, 251, 255, 365, 379, 384, 386, 396, 400, 401, 403, 404, 405, 406, 407, 408, 412, 415, 416], "indetermin": 205, "torch_extract_oper": 206, "neural_engine_bin": [207, 383], "datacollatorforsuperviseddataset": 209, "transform": [209, 217, 223, 239, 240, 245, 250, 251, 255, 364, 365, 369, 375, 378, 383, 384, 385, 399, 400, 405, 406, 407, 408, 414, 416, 417, 418, 419, 420, 425], "pretrainedtoken": [209, 217], "collat": 209, "supervis": 209, "fine": [209, 346, 376, 377, 396, 418, 419], "preprocess": [209, 222, 223, 376, 377, 407], "target": [209, 220, 222, 223, 245, 364, 386, 396, 408, 418], "pattern_match": 213, "source_list": 213, "task": [213, 215, 240, 251, 254, 364, 376, 377, 378, 379, 390, 396, 400, 406, 409, 417], "batch_siz": [213, 215, 217, 222, 223, 245, 250, 251, 254, 365, 377, 385, 386, 390, 396, 406, 412], "instanti": [213, 215, 231, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "model_arg": 215, "new_fewshot": 215, "devic": [215, 226, 234, 376, 378, 385, 387, 417], "cpu": [215, 223, 346, 354, 365, 376, 377, 381, 382, 385, 391, 394, 396, 398, 400, 409, 410, 417], "no_cach": 215, "limit": [215, 223, 378, 396, 403, 407], "bootstrap_it": 215, "100000": 215, "description_dict": 215, "check_integr": 215, "decontamination_ngrams_path": 215, "seed": [215, 223, 364, 395], "1234": 215, "user_model": 215, "model_format": [215, 217], "union": [215, 245, 355], "lm": 215, "get_model": 215, "create_from_arg_str": 215, "taken": [215, 250, 251], "eval_harness_nam": 215, "__name__": 215, "num_fewshot": 215, "shot": 215, "context": [215, 220], "batch": [215, 222, 245, 355, 377, 385, 403, 404, 406, 413], "cuda": [215, 376], "run": [215, 238, 245, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 365, 376, 396, 412, 413, 419], "bool": [215, 223, 224, 231, 245, 248, 250, 251, 252, 352, 353, 354, 355, 365, 378, 384, 399, 400, 415, 416], "whether": [215, 223, 231, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 371, 384, 386, 392, 412, 427], "cach": [215, 231, 353, 391, 401, 404, 405, 406, 412], "test": [215, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 375, 377, 379, 382, 394, 396, 410, 412, 413], "bootstrap": 215, "statist": 215, "dictionari": [215, 235, 245], "descript": [215, 245, 375, 376, 378, 386, 408, 415, 416, 418, 419], "task_nam": [215, 389, 390], "relev": [215, 377, 396], "suit": [215, 396], "provid": [215, 222, 223, 226, 231, 238, 239, 245, 250, 251, 255, 257, 346, 364, 365, 377, 379, 380, 381, 384, 393, 396, 397, 400, 405, 407, 415, 419], "autocausallm": 217, "pretrain": [217, 250, 251, 384, 396], "causal": [217, 251, 376], "languag": [217, 250, 251, 346, 374, 376, 377, 379, 417], "find": [217, 355, 364, 384, 387, 391, 392, 396, 403, 418], "hf": 217, "document": [217, 245, 346, 347, 375, 376, 377, 378, 381, 395, 396, 404, 406, 407, 408, 418, 419], "model_doc": 217, "auto": [217, 223, 229, 239, 376, 386, 391, 400], "automodelforcausallm": 217, "autoseq2seqlm": 217, "seq2seq": [217, 245, 250, 251], "automodelforseq2seqlm": 217, "multitokeneoscriteria": 217, "initial_decoder_input_length": 217, "criteria": [217, 416], "lambada": [219, 365], "word": [220, 250, 251, 379, 408], "predict": [220, 229, 245, 250, 251, 364, 376, 377, 378], "broad": 220, "discours": 220, "arxiv": [220, 250], "pdf": 220, "1606": 220, "06031": 220, "capabl": [220, 365, 396, 405, 408], "text": [220, 255, 346, 365, 377, 379, 390, 396, 400, 409, 414, 417], "understand": [220, 396, 401, 404], "collect": [220, 223, 365, 384, 386, 419], "narr": 220, "passag": 220, "share": [220, 245, 401], "characterist": [220, 374], "human": 220, "subject": [220, 414], "abl": [220, 406, 419], "guess": 220, "expos": [220, 399, 400], "sentenc": [220, 250, 251, 255, 365, 376, 377], "preced": 220, "succe": 220, "cannot": [220, 251, 355, 398, 404, 408, 413], "simpli": 220, "reli": 220, "local": [220, 231, 245, 384, 398, 401, 404], "keep": [220, 388, 395], "track": 220, "inform": [220, 239, 242, 345, 348, 351, 356, 362, 374, 375, 377, 378, 385, 386, 394, 396, 400, 403, 410, 411, 412, 418, 419, 420, 424], "broader": 220, "homepag": 220, "zenodo": 220, "2630551": 220, "x4xzn5nkjui": 220, "lambadastandard": 220, "standard": [220, 231], "lambadaopenai": 220, "openai": 220, "gpt": [220, 346, 376, 377, 379, 395], "github": [220, 255, 257, 375, 376, 377, 382, 383, 385, 391, 414, 420], "com": [220, 255, 257, 376, 377, 382, 383, 385, 394, 410, 414, 420], "issu": [220, 345, 364, 371, 374, 375, 377, 405, 419, 427], "131": [220, 394], "issuecom": 220, "497136199": 220, "pytorchbenchmark": 222, "executorbenchmark": 222, "refactor_batch_s": 222, "old_batch_s": 222, "batched_valu": 222, "get_example_input": [222, 365], "dataload": [222, 238, 245, 254, 365, 377], "batched_data": 222, "preprocess_model": 222, "example_input": [222, 365], "additional_cmd": 222, "jit": [222, 223, 245, 352, 353, 354, 355, 365, 369, 397, 399, 400, 403, 407, 412, 425], "trace": [222, 223, 365, 386], "benchmarkconfig": [222, 223, 365], "process": [222, 223, 229, 234, 235, 242, 245, 255, 364, 377, 379, 384, 385, 387, 388, 392, 393, 396, 398, 399, 401, 404, 405, 408, 418, 419], "raw_cmd": 222, "scriptmodul": 222, "model_name_or_path": [222, 231, 245, 255, 365, 376], "build": [222, 235, 239, 245, 364, 377, 382, 383, 395, 396, 398, 404, 405, 409, 416], "inc": [223, 231, 238, 239, 245, 390], "nncf": 223, "check_valu": 223, "src": [223, 355, 385, 400, 408, 412], "supported_typ": 223, "supported_valu": 223, "def": [223, 364, 365, 377, 384], "datatyp": [223, 379, 380], "uint8": [223, 406, 419], "_datatyp": 223, "dynamiclengthconfig": [223, 245, 381], "max_length": [223, 365, 377], "length_config": [223, 250, 251, 381], "const_rat": 223, "float": [223, 224, 239, 242, 243, 245, 248, 252, 355, 376, 378, 380, 384, 390, 399, 400, 401, 415, 416, 418, 419], "num_sandwich": 223, "length_drop_ratio_bound": [223, 225], "layer_dropout_prob": [223, 225], "layer_dropout_bound": [223, 225], "dynamic_train": 223, "load_store_fil": 223, "evo_it": 223, "30": [223, 396, 402], "population_s": 223, "20": [223, 365, 377, 382, 385, 390, 394, 402, 409, 410], "mutation_s": 223, "mutation_prob": [223, 226], "crossover_s": 223, "num_cpu": 223, "48": [223, 394, 395, 410], "distributed_world_s": 223, "latency_constraint": 223, "evo_eval_metr": 223, "eval_f1": [223, 226, 381, 415, 419], "dynam": [223, 228, 245, 391, 393, 396, 397, 399, 403, 405, 412, 426], "adapt": [223, 346, 374, 377, 396], "maximum": [223, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 393, 394, 410, 419], "drop": [223, 225, 379, 405, 408, 415], "ratio": [223, 225, 226, 242, 378, 410, 412, 415, 416, 418], "sandwich": 223, "num": [223, 364, 376, 386, 398, 400, 406], "train": [223, 229, 235, 238, 239, 242, 245, 346, 364, 376, 377, 378, 381, 411, 418], "dropout": [223, 225], "probabl": [223, 225, 364, 396, 405], "evolut": [223, 227, 228, 379], "popul": [223, 226], "mutat": [223, 226], "crossov": [223, 226], "distribut": [223, 254, 364, 378, 396, 405, 419, 420], "world": 223, "latenc": [223, 364, 365, 377, 379, 386, 394, 401, 419], "constraint": [223, 226, 419], "metric": [223, 228, 229, 235, 239, 245, 247, 364, 377, 381, 423], "quantizationconfig": [223, 238, 239, 245, 377, 381], "approach": [223, 235, 237, 376, 378, 379, 381, 400, 401], "posttrainingstat": [223, 379, 380, 381, 419], "basic": [223, 235, 251, 254, 377, 382, 391, 404], "timeout": [223, 419], "max_trial": [223, 364, 419], "100": [223, 245, 250, 251, 377, 396, 412, 419], "config_fil": 223, "sampling_s": 223, "use_bf16": 223, "recip": [223, 245, 376, 387, 416], "earli": [223, 419], "combin": [223, 245, 364, 387, 392, 396, 399, 400, 419], "decid": [223, 403, 419], "exit": [223, 419], "time": [223, 386, 393, 396, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 419], "evalu": [223, 226, 229, 235, 238, 239, 242, 245, 364, 378, 386, 396, 406, 415, 416, 418, 419], "accuraci": [223, 229, 245, 364, 378, 379, 381, 395, 404, 412, 415, 416, 418], "notraineroptim": [223, 238, 378, 418, 419], "guarante": [223, 419], "mani": [223, 225, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 384, 386, 388, 399, 401, 402, 405, 407, 412], "sampl": [223, 225, 245, 255, 364, 365, 376, 377, 381, 394, 406, 419], "neural_compressor": [223, 238, 245], "smooth_quant": 223, "smooth": 223, "smooth_quant_arg": 223, "fast_bias_correct": 223, "correct": [223, 374, 388, 392, 396, 406], "weight_correct": 223, "gemm_to_matmul": 223, "graph_optimization_level": 223, "disable_al": 223, "enable_bas": 223, "enable_extend": 223, "enable_al": 223, "first_conv_or_matmul_quant": 223, "last_conv_or_matmul_quant": 223, "pre_post_process_quant": 223, "postprocess": 223, "add_qdq_pair_to_weight": 223, "qdq": [223, 245, 380, 389], "vaild": 223, "onnxrt_trt_ep": 223, "optypes_to_exclude_output_qu": 223, "optyp": 223, "dedicated_qdq_pair": 223, "dedic": 223, "pruningconfig": [223, 381], "epoch": [223, 242, 418], "epoch_rang": [223, 243], "initial_sparsity_ratio": [223, 243], "target_sparsity_ratio": [223, 243, 381, 418], "97": [223, 243, 410, 418], "pruner_config": [223, 381, 418], "pruner": [223, 228, 243, 245, 378, 418], "prune": [223, 228, 238, 239, 241, 245, 250, 251, 346, 377, 423], "goal": [223, 245, 418], "behavior": [223, 245, 374, 375, 378, 396, 398, 399, 404, 418, 419], "nlp": [223, 245, 255, 257, 346, 376, 377, 379, 381, 385, 418, 419], "wil": 223, "basicmagnitud": [223, 243, 379, 381, 418], "typel": 223, "init_prune_config": 223, "init": [223, 229, 238, 239, 241, 253, 254, 364, 383, 385, 400], "distillationconfig": [223, 245, 381], "criterion": [223, 224, 239, 248, 381, 415, 419], "distil": [223, 228, 229, 238, 239, 245, 376, 377, 390, 423], "inc_config": 223, "knowledgeloss": [223, 224, 378], "tfdistillationconfig": [223, 364], "loss_typ": [223, 224, 364, 378], "loss_weight": [223, 364], "train_step": [223, 364], "temperatur": [223, 224, 255, 364, 376, 378], "loss": [223, 245, 250, 251, 364, 376, 378, 419], "knowledgedistillationloss": [223, 378], "flashdistillationconfig": 223, "block_nam": [223, 364], "layer_mappings_for_knowledge_transf": [223, 364], "add_origin_loss": [223, 224, 364, 378], "flash": [223, 229, 245], "autodistillationconfig": [223, 364], "search_spac": [223, 235, 364], "search_algorithm": [223, 364], "bo": [223, 364, 414], "knowledge_transf": [223, 364], "regular_distil": [223, 364], "disil": 223, "space": [223, 229, 235, 245, 364, 374, 375, 387, 396, 398, 401], "bayesian": [223, 364], "architectur": [223, 229, 235, 239, 245, 250, 251, 364, 377, 382, 398, 405, 407], "candid": 223, "trial": [223, 245], "random": [223, 250, 364, 396, 405], "knowledg": [223, 245, 346, 364, 376, 377], "transfer": [223, 245, 254, 378], "stage": [223, 229, 245, 364], "autodistil": [223, 229, 239, 245, 423], "regular": [223, 229, 418], "nasconfig": [223, 235, 237], "parser": 223, "procedur": [223, 412], "backend": [223, 245, 253, 365, 377, 379, 381, 382, 383, 384, 387, 389, 392, 393, 397, 412, 419], "warmup": [223, 365, 387, 393], "cores_per_inst": [223, 245, 365], "num_of_inst": [223, 245, 365], "benchmark": [223, 228, 245, 246, 377, 387, 394, 397, 410, 413, 423], "skip": [223, 365, 401, 413], "core": [223, 365, 385, 394, 395, 396, 398, 404, 405, 410, 413, 414], "enabl": [223, 365, 380, 381, 394, 396, 398, 404, 405, 409, 410], "prunerv2": 223, "target_spars": 223, "pruning_typ": 223, "op_nam": 223, "excluded_op_nam": 223, "start_step": 223, "end_step": 223, "pruning_scop": 223, "pruning_frequ": 223, "min_sparsity_ratio_per_op": 223, "max_sparsity_ratio_per_op": 223, "sparsity_decay_typ": 223, "pruning_op_typ": 223, "reg_typ": [223, 400], "criterion_reduce_typ": 223, "resume_from_pruned_checkpoint": 223, "similiar": 223, "weightpruningconfig": 223, "pruning_config": [223, 238, 239, 245, 381, 418], "snip_momentum": 223, "4x1": [223, 386, 398, 408], "global": 223, "98": [223, 410], "exp": [223, 400, 407, 412], "linear": [223, 364, 378, 400, 403, 406], "ce": [224, 364, 378], "loss_weight_ratio": [224, 378], "layer_map": [224, 378], "distillationcriterionmod": 224, "restor": [225, 379], "sample_length_configur": 225, "max_seq_length": [225, 226], "num_hidden_lay": 225, "layer_config": [225, 250, 251], "length_drop_prob": 225, "length_drop_ratio": 225, "min_length": 225, "hidden": [225, 250, 251, 364, 401], "truncat": [225, 377], "less": [225, 365, 378, 387, 396, 404, 408, 418], "min": [225, 245, 419], "sample_layer_configur": 225, "layer_dropout": 225, "depend": [225, 235, 375, 383], "paramat": 225, "bound": 225, "kept": [225, 396], "evolust": 226, "evolustionari": 226, "approx_ratio": 226, "12": [226, 382, 383, 386, 394, 395, 402, 406, 409, 410, 412], "l": [226, 364, 378, 395, 396], "384": [226, 364, 387, 394, 410], "approxim": [226, 407], "invers": [226, 407], "store2str": 226, "gene": 226, "mac": 226, "score": [226, 250, 251, 417], "parent": 226, "parmat": 226, "lower_constraint": 226, "upper_constraint": 226, "eval_metr": 226, "evolutionari": [226, 245], "load_stor": 226, "store_fil": 226, "save_stor": 226, "get_stor": 226, "set_lower_constraint": 226, "setter": [226, 250, 251], "lower": [226, 255, 396, 408, 416, 419], "set_upper_constraint": 226, "upper": [226, 400], "save_popul": 226, "population_fil": 226, "convex_hul": 226, "pareto_fronti": 226, "add_gen": 226, "rai": 226, "packag": [227, 230, 346, 376, 377], "drop_and_restore_util": [227, 228], "mixtur": 228, "auto_distil": [228, 230, 364], "basic_na": [228, 236], "get_throughput": [228, 247], "utility_tf": [228, 247], "optimizer_tf": 228, "trainer": [228, 238, 362, 377, 379, 380, 381], "handl": [229, 245, 250, 251, 345, 353, 364, 391, 402, 403], "model_build": [229, 235, 239, 245, 364], "conf_fname_or_obj": [229, 235, 237], "design": [229, 245, 384, 396, 399, 400, 411, 423], "three": [229, 242, 243, 244, 245, 364, 377, 384, 388, 392, 406, 407, 418, 419], "major": [229, 245, 364, 398, 404, 405, 407, 408, 419], "explor": [229, 245, 364, 381], "compress": [229, 245, 346, 364, 378, 381, 398, 402, 404, 408, 411, 419], "discov": [229, 245, 364], "potenti": [229, 245, 355, 364, 375, 396, 405], "measur": [229, 245, 364, 365, 378, 397, 415, 416, 418, 419], "hardwar": [229, 245, 364, 375, 378, 409, 411], "select": [229, 245, 250, 251, 364, 396, 400, 412], "best": [229, 235, 245, 364, 374, 379, 396], "res_save_path": [229, 235], "model_cl": [229, 239, 245, 364], "found": [229, 235, 377, 383, 384, 408], "estim": [229, 235, 386, 408], "load_search_result": 229, "init_by_cfg": [229, 235], "create_distil": 229, "optimizedmodel": 231, "from_pretrain": [231, 250, 251, 365, 377, 381, 417], "function": [231, 235, 238, 239, 242, 245, 352, 353, 354, 364, 378, 384, 387, 388, 391, 392, 393, 396, 399, 400, 412, 415, 418, 419], "classmethod": [231, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "intel": [231, 255, 345, 365, 375, 381, 383, 384, 385, 394, 395, 398, 409, 410, 414, 416, 417, 418, 419, 420], "compressor": [231, 234, 239, 346, 365, 377, 416, 419], "repositori": [231, 377], "hug": [231, 346, 377, 389], "face": [231, 346, 347, 374, 377, 389], "hub": [231, 417], "directori": [231, 238, 389, 411], "host": 231, "cache_dir": 231, "download": [231, 250, 251, 420], "force_download": 231, "forc": 231, "resume_download": 231, "incomplet": 231, "attempt": 231, "resum": [231, 245], "revis": 231, "branch": [231, 412], "tag": 231, "commit": [231, 374, 413], "sinc": [231, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 378, 404, 405, 407], "git": [231, 376, 377, 382, 383, 385], "system": [231, 377, 383], "artifact": 231, "huggingfac": [231, 255, 377, 390, 415, 417], "allow": [231, 365, 396], "q_model": 231, "incencod": 234, "incdecod": 234, "pretrainedconfig": 234, "basicna": 235, "conf_fnam": 235, "obj": [235, 237], "execut": [235, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 353, 364, 377, 387, 391, 397, 399, 400, 404, 405, 407, 409, 412, 413, 419], "common": [237, 374, 377, 419], "nasbas": 237, "orchestr": [238, 245], "orchestrate_optim": [238, 245], "compon": [238, 245, 399, 414], "experiment": [238, 245, 395, 400], "eval_func": [238, 239, 245, 364], "train_func": [238, 239, 245, 364], "saved_result": [238, 377], "aggreg": 238, "fit": [238, 401], "schedul": [238, 245, 364, 369, 397, 425], "save_model": [238, 254, 377], "json": [238, 255, 376], "pytorch_model": 238, "init_quant": [238, 239, 245, 399], "quant_config": [238, 239, 245, 377, 381, 419], "calib_func": 238, "calib_dataload": [238, 245], "prepar": [238, 239, 250, 251, 376, 386, 388, 391, 399, 400, 408, 419], "invok": [238, 239], "_inc_quant": 238, "calibr": [238, 245, 419], "init_prun": [238, 239, 245], "init_distil": [238, 239, 245], "distillation_config": [238, 239, 245, 378, 381], "teacher_model": [238, 239, 245, 364, 378, 381], "teacher": [238, 239, 364, 378, 379], "tfoptim": [239, 364, 378], "pretrainedmodel": [239, 245, 364], "training_args_tf": 239, "tftrainingargu": 239, "train_dataset": [239, 364, 377, 381], "eval_dataset": [239, 364, 377, 381], "compute_metr": [239, 364, 377], "task_typ": [239, 254], "task_id": [239, 254], "techniqu": [239, 377, 379, 381, 396, 419], "builtin_eval_func": [239, 245], "saved_model": 239, "quantized_model_path": 239, "larger": [239, 245, 396], "model_builder_builtin": [239, 245, 364], "arch_para": [239, 245], "built": [239, 364, 396, 416], "builder": [239, 364], "autodistillation_config": [239, 245, 364], "build_train_func": 239, "infer_framework_load_model": 240, "autoconfig": [240, 377, 381, 417], "model_class": 240, "model_kwarg": [240, 250, 251, 417], "config_file_path": 242, "pruner_info": 242, "update_config": 242, "current": [242, 243, 244, 386, 395, 396, 399, 400, 401, 403, 404, 406, 411, 412], "get_sparsity_ratio": 242, "elementwise_over_matmul_gemm_conv": 242, "elementwise_over_al": 242, "blockwise_over_matmul_gemm_conv": 242, "block": [242, 250, 251, 379, 393, 398, 401, 402, 403, 404, 405, 407, 408, 418], "on_train_begin": 242, "implement": [242, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 369, 377, 384, 387, 388, 392, 395, 397, 398, 399, 401, 403, 404, 405, 406, 407, 409, 412, 425], "begin": [242, 251, 364, 396, 399, 400], "ensur": [242, 396, 404], "on_epoch_begin": 242, "on_step_begin": 242, "local_step": 242, "on_before_optimizer_step": 242, "on_step_end": 242, "on_epoch_end": 242, "on_train_end": 242, "phase": [242, 378, 418], "on_before_ev": 242, "on_after_ev": 242, "on_after_optimizer_step": 242, "pruningmod": 243, "prunerconfig": [243, 381], "update_frequ": 243, "prune_typ": [243, 381, 418], "per_tensor": 243, "quantizationmod": 244, "easili": [245, 398, 399], "finetun": [245, 377, 379, 381, 417], "basetrain": 245, "builtin_train_func": 245, "automativ": 245, "low": [245, 377, 381, 396, 398, 405, 407, 416, 419, 428], "achiev": [245, 377, 396, 401, 416], "pruningconf": 245, "smaller": [245, 378, 396, 418], "config_list": 245, "optimizt": 245, "create_optimizer_builtin": 245, "resume_from_checkpoint": 245, "optuna": 245, "ignore_keys_for_ev": 245, "tor": 245, "checkpoint": [245, 250], "present": [245, 250, 407], "state": [245, 250, 251, 377, 394, 396, 410], "hyperparamet": [245, 364, 396], "dure": [245, 385, 393, 396, 404, 408, 413, 416, 418, 419], "hide": [245, 250, 251], "deprec": [245, 250, 251], "training_step": 245, "inject": [245, 396, 400], "being": [245, 396], "fed": 245, "most": [245, 377, 388, 392, 393, 396, 399, 400, 401, 404, 406, 417], "expect": [245, 250, 251, 374, 375, 396, 408, 416], "label": [245, 250, 251, 255, 376, 413, 417], "accept": [245, 374, 417], "training_step_length_adapt": 245, "compute_loss": 245, "return_output": 245, "By": [245, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 396], "nas_config": 245, "baseic": 245, "callabel": 245, "auto_distil_evaluation_loop": 245, "prediction_loss_onli": 245, "ignore_kei": 245, "metric_key_prefix": 245, "eval": [245, 364, 415], "trainer_util": 245, "evalloopoutput": 245, "doe": [245, 384, 399, 400, 401, 402, 403, 406, 412], "huge": 245, "prefix": [245, 412], "export_to_onnx": [245, 377, 380], "tranfer": 245, "paramert": 245, "export_to_fp32_onnx": 245, "save_path": [245, 380], "opset_vers": [245, 380], "14": [245, 380, 394, 402, 409, 410], "do_constant_fold": [245, 380], "verbos": [245, 380, 396], "export": [245, 377, 386, 389, 417, 423], "fold": [245, 412], "export_to_bf16_onnx": 245, "export_to_int8_onnx": 245, "quant_format": [245, 380], "s8s8": [245, 380, 404], "sample_s": 245, "calibrate_method": 245, "minmax": 245, "scale_map": [245, 377], "export_to_jit": 245, "set_dynamic_config": [245, 381], "dynamic_config": [245, 381], "run_evolutionary_search": 245, "nlptrainer": [245, 377, 378, 381, 418, 419], "nlpseq2seqtrain": 245, "special": [246, 400, 406], "trigger": [246, 375, 396], "greater_is_bett": [248, 252, 364, 381, 415, 416, 419], "is_rel": [248, 381, 415, 419], "01": [248, 381, 410, 415, 419], "weight_ratio": [248, 252, 415, 416, 419], "modeling_bert_dynam": 249, "modeling_roberta_dynam": 249, "bert": [250, 364, 377, 378, 379, 385, 386, 387, 390, 392, 393, 394, 399, 404, 405, 406, 407], "load_tf_weights_in_bert": 250, "tf_checkpoint_path": 250, "bertembed": [250, 251], "posit": [250, 251, 374, 377, 381, 387, 392, 396, 412, 417], "token_typ": 250, "forward": [250, 251, 364, 386, 391, 419], "longtensor": [250, 251], "token_type_id": [250, 251, 393], "position_id": [250, 251], "inputs_emb": [250, 251], "floattensor": [250, 251], "past_key_values_length": [250, 251], "bertselfattent": 250, "position_embedding_typ": [250, 251], "transpose_for_scor": [250, 251], "hidden_st": [250, 251], "attention_mask": [250, 251, 393], "head_mask": [250, 251], "encoder_hidden_st": [250, 251], "encoder_attention_mask": [250, 251], "past_key_valu": [250, 251], "output_attent": [250, 251], "bertselfoutput": 250, "bertattent": 250, "prune_head": [250, 251], "bertintermedi": 250, "intermedi": [250, 364, 384, 389, 392, 408, 419], "bertoutput": 250, "bertlay": 250, "output_length": [250, 251], "always_keep_cls_token": [250, 251], "feed_forward_chunk": [250, 251], "attention_output": [250, 251], "feed": [250, 251, 378, 385], "chunk": 250, "bertencod": 250, "use_cach": [250, 251], "output_hidden_st": [250, 251], "return_dict": [250, 251], "modeling_output": [250, 251], "basemodeloutputwithpastandcrossattent": [250, 251], "bertpool": 250, "pooler": [250, 251], "bertpredictionheadtransform": 250, "bertlmpredictionhead": 250, "bertonlymlmhead": 250, "mask": [250, 251, 355, 379, 399, 400, 402, 404, 407], "sequence_output": 250, "bertonlynsphead": 250, "pooled_output": 250, "bertpretraininghead": 250, "bertpretrainedmodel": 250, "abstract": [250, 251], "simpl": [250, 251, 377, 382, 385, 395, 399, 407, 417], "bertforpretrainingoutput": 250, "bertforpretrain": 250, "sum": [250, 365, 378, 386, 405, 407, 408, 412], "classif": [250, 251, 346, 364, 377, 378, 379, 390, 417], "prediction_logit": [250, 251], "sequence_length": [250, 251], "vocab_s": [250, 251], "vocabulari": 250, "seq_relationship_logit": 250, "continu": [250, 396, 398, 401, 405, 406], "hidden_s": [250, 251, 364], "plu": 250, "num_head": [250, 251], "averag": [250, 365, 377, 386], "bertmodel": 250, "add_pooling_lay": [250, 251], "behav": [250, 251], "well": [250, 251, 380, 419, 420], "case": [250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 378, 379, 386, 387, 393, 396, 398, 400, 401, 402, 412, 413], "cross": [250, 251], "ad": [250, 251, 384, 388, 392, 396, 399, 408, 412, 417], "describ": [250, 251, 354, 376, 401, 403, 406, 412, 415, 416], "ab": [250, 419], "1706": [250, 394, 410], "03762": 250, "ashish": [250, 251], "vaswani": [250, 251], "noam": [250, 251], "shazeer": [250, 251], "niki": [250, 251], "parmar": [250, 251], "jakob": [250, 251], "uszkoreit": [250, 251], "llion": [250, 251], "jone": [250, 251], "aidan": [250, 251], "gomez": [250, 251], "lukasz": [250, 251], "kaiser": [250, 251], "illia": [250, 251], "polosukhin": [250, 251], "is_decod": [250, 251], "add_cross_attent": [250, 251], "get_input_embed": [250, 251], "getter": [250, 251], "set_input_embed": [250, 251], "set_length_config": [250, 251], "set_output_attent": [250, 251], "basemodeloutputwithpoolingandcrossattent": [250, 251], "pad": [250, 251, 365, 377, 386, 404, 408, 412], "indic": [250, 251, 355, 392, 399, 400, 406, 408, 412, 415], "n_layer": [250, 251], "embed_size_per_head": [250, 251], "precomput": [250, 251], "speed": [250, 251, 384, 388, 396], "decoder_input_id": [250, 251], "those": [250, 251, 406, 418, 419], "instead": [250, 251, 396, 401], "get_output_embed": [250, 251], "set_output_embed": [250, 251], "new_embed": [250, 251], "next_sentence_label": 250, "docstr": [250, 251], "legaci": [250, 251], "berttoken": 250, "uncas": [250, 364, 377, 379, 381, 389, 417], "hello": [250, 251, 396], "my": [250, 251], "dog": [250, 251], "cute": [250, 251], "return_tensor": [250, 251, 365, 377, 381], "pt": [250, 251, 365, 377, 381, 417], "bertlmheadmodel": 250, "causallmoutputwithcrossattent": [250, 251], "prepare_inputs_for_gener": [250, 251], "bertformaskedlm": 250, "maskedlmoutput": [250, 251], "bertfornextsentencepredict": 250, "nextsentencepredictoroutput": 250, "prompt": 250, "itali": 250, "pizza": 250, "serv": 250, "formal": 250, "restaur": 250, "unslic": 250, "next_sent": 250, "sky": 250, "blue": 250, "shorter": [250, 396], "wavelength": 250, "light": 250, "logit": [250, 251, 364, 377, 378, 381, 385], "wa": 250, "bertforsequenceclassif": 250, "sequenceclassifieroutput": [250, 251], "regress": [250, 251, 376], "num_label": [250, 251, 377, 381], "entropi": [250, 251, 364, 396], "bertformultiplechoic": 250, "choic": [250, 251, 379, 393], "multiplechoicemodeloutput": [250, 251], "num_choic": [250, 251], "dimens": [250, 251, 364, 378, 387, 403, 404, 406, 408, 412], "bertfortokenclassif": 250, "tokenclassifieroutput": [250, 251], "bertforquestionansw": 250, "question": [250, 374, 375, 377, 379, 402], "answer": [250, 251, 374, 379], "start_posit": [250, 251], "end_posit": [250, 251], "questionansweringmodeloutput": [250, 251], "span": [250, 251], "clamp": [250, 251], "account": [250, 251, 374], "expand_gath": [250, 251], "dim": [250, 251, 385, 391, 398, 404, 408, 412], "roberta": [251, 379], "robertaembed": 251, "tini": [251, 379], "tweak": 251, "create_position_ids_from_inputs_emb": 251, "directli": [251, 396, 399, 402, 405], "sequenti": [251, 388, 399, 400, 403], "robertaselfattent": 251, "robertaselfoutput": 251, "robertaattent": 251, "attenion": 251, "robertaintermedi": 251, "intermidi": 251, "robertaoutput": 251, "robertalay": 251, "robertaencod": 251, "roberata": 251, "robertapool": 251, "robertapretrainedmodel": 251, "update_keys_to_ignor": 251, "del_keys_to_ignor": 251, "robertamodel": 251, "_": [251, 364, 376, 378, 383, 384, 385, 386, 387, 388, 389, 391, 392, 396, 397, 398, 399, 400, 404, 405, 406, 407, 412, 415, 416, 417, 418, 419], "robertaforcausallm": 251, "robertatoken": 251, "robertaconfig": 251, "robertaformaskedlm": 251, "robertalmhead": 251, "featur": [251, 346, 364, 373, 375, 377, 378, 389, 392, 395, 398, 405, 409, 417, 420, 429], "robertaforsequenceclassif": 251, "robertaformultiplechoic": 251, "robertafortokenclassif": 251, "robertaclassificationhead": 251, "robertaforquestionansw": 251, "quanstion": 251, "create_position_ids_from_input_id": 251, "padding_idx": 251, "non": [251, 396, 403, 406, 408, 412, 413], "symbol": 251, "fairseq": 251, "make_posit": 251, "models": [252, 379, 416], "distributed_init": [253, 254], "gloo": 253, "world_siz": 253, "rank": [253, 396], "init_method": 253, "master_addr": 253, "127": [253, 386, 409, 410, 419], "master_port": 253, "12345": 253, "distibut": 253, "tfdataload": 254, "worker_address": 254, "worker": 254, "address": [254, 346, 374, 399, 404, 405], "treat": [254, 384], "chief": 254, "get_filepath": 254, "base_dirpath": 254, "folder": [254, 383, 384, 385, 386, 387, 389], "keras2savedmodel": 254, "kera": 254, "augment": [255, 257, 423], "extens": [255, 375, 381, 383, 384, 385, 414, 416, 417, 418, 420], "blob": 255, "md": [255, 386, 389], "dataaugment": [255, 376], "augmenter_typ": [255, 376], "wai": [255, 377, 386, 387, 388, 392, 395, 396, 398, 400, 406, 409], "enhanc": [255, 381, 403], "textgenerationaug": [255, 376], "keyboardaug": [255, 376], "aug": [255, 346, 376], "input_dataset": [255, 376], "origin_data": 255, "output_path": [255, 376, 395], "join": [255, 376], "result_path": [255, 376], "test1": [255, 376], "cv": [255, 376], "augmenter_argu": [255, 376], "gpt2": [255, 376], "medium": [255, 346, 376, 377, 413], "data_aug": [255, 376], "text_generation_augment": 255, "raw_dataset": [255, 376, 377, 381], "No": [255, 379], "glue": [255, 376, 377], "sst2": [255, 365, 376, 377, 379, 386, 390], "eo": [255, 376, 396], "k": [255, 355, 376, 387, 399, 401, 402, 403, 404, 406, 407, 408, 410, 412], "p": [255, 376, 377, 395], "top_p": [255, 396], "effect": [255, 346, 376, 377, 384, 396, 412], "tend": 255, "toward": [255, 374], "greedi": 255, "repetition_penalti": 255, "primarili": [255, 396], "ctrl": [255, 376, 379, 396], "num_return_sent": 255, "entir": [255, 386, 398, 404, 405, 418], "num_sampl": 255, "condit": [255, 376, 387, 388, 414], "stop_token": 255, "mit_data_augment": 255, "nlpaug": [255, 257, 376], "librari": [255, 257, 369, 375, 399, 400, 425], "help": [255, 257, 376, 377, 392, 396, 399, 411], "machin": [255, 257, 376, 412], "learn": [255, 257, 346, 376, 389, 396, 400, 416, 419], "project": [255, 257, 374, 375, 376, 395], "makcedward": [255, 257], "suffix": 255, "csv": [255, 376], "column_nam": 255, "sentence1": 255, "sentence2": 255, "data_augment": [256, 376], "augmentertyp": 257, "get_augmenter_from_typ": 257, "aug_typ": 257, "augment_typ": 257, "testaddclstoken": 259, "methodnam": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "runtest": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "whose": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 364, 392], "singl": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 395, 401, 406], "itself": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 409], "place": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 393, 400, 405, 418], "fixtur": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "testcas": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "constructor": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 391], "author": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 414], "deconstruct": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "setup": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "teardown": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "__init__": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 384], "alwai": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 392, 396, 404, 413], "chang": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 375, 384, 395, 396, 398, 399, 408, 413, 414], "signatur": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "failureexcept": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "determin": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374, 387, 396, 409], "except": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 387, 396, 399], "rais": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 396], "fail": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "deem": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374], "longmessag": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "long": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 392], "messag": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 396], "includ": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 353, 354, 355, 374, 375, 377, 379, 385, 386, 387, 396, 397, 400, 408, 412, 414, 419], "repr": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "print": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 384, 392, 396], "failur": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "explicit": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 353, 374, 391, 400], "maxdiff": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "diff": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "difflib": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "look": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 384, 386, 396, 400, 401], "individu": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 374], "setupclass": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "hook": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "teardownclass": [259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "testaddembed": 260, "testtorchop": [261, 264, 267, 269, 270, 271, 276, 279, 283, 284, 293, 294, 296, 298, 299, 305, 309, 312, 314, 323, 324, 325, 328, 333, 338], "testattentionreshap": [262, 263, 318, 321], "testtorchmodel": [265, 285], "testbinaryop": 266, "testcastto": 268, "testconvreshap": 272, "testdecoderattnreshap": 273, "testdispatchertuningacc": 274, "testdispatchertuningthroughput": 275, "testdynamicquant": 277, "testelectra": 278, "testembeddingbag": 280, "testexecutionopt": [281, 287], "testfwk": 282, "testgraphdispatch": 286, "testinsertinputouputdata": 288, "testissupportedonnxgraph": 289, "testlastlayershap": 290, "testlayernormwithreducemean": [291, 320, 322], "testlayernormwithtranspos": 292, "testtorchlinear": [295, 335], "testmain": 297, "testmatmulwithbiasrelu": 300, "testmatmulwithbiassigmoid": 301, "testmatmulwithbiastanh": 302, "testmergedembeddingbag": 303, "testonnxutil": 306, "testoperatoradaptor": 307, "testop": 308, "testpaddingsequ": 310, "testpatterndispatch": 311, "testpositionembed": 313, "testprimitivecacheacc": 315, "testprimitivecachethroughput": 316, "testqkvmerg": 317, "testquantonnxexecut": 319, "teststartendlogit": 326, "testscbuff": 327, "testtextencod": 329, "testtextencoderbf16": 330, "testtfutil": 331, "testtokentypeembed": 332, "testtransposebatchmatmul": 334, "testunet": 336, "testunetbf16": 337, "testvaedecod": 339, "testvaedecoderbf16": 340, "testweightsharingacc": 341, "testweightsharingdispatchertuningacc": 342, "testweightsharingdispatchertuningthroughput": 343, "testweightsharingthroughput": 344, "center": 345, "guidelin": 345, "innov": [346, 377], "toolkit": [346, 377, 379], "particular": 346, "4th": [346, 377], "xeon": [346, 377, 379, 382, 398, 407, 410, 414, 419], "scalabl": [346, 377, 379, 382, 399], "processor": [346, 377, 379, 382, 394, 410], "sapphir": [346, 377, 382], "rapid": [346, 377, 382], "codenam": 346, "seamless": [346, 377, 396], "experi": [346, 374, 377, 396, 402, 407, 408], "extend": [346, 377, 401], "leverag": [346, 364, 377, 378, 381, 396], "advanc": [346, 364, 374, 377, 397, 409], "softwar": [346, 377, 414], "uniqu": [346, 377], "awar": [346, 377], "runtim": [346, 355, 377, 409, 412, 419], "releas": [346, 377, 424], "neurip": [346, 377], "2022": [346, 377, 394, 410], "paper": [346, 377, 381], "distilbert": [346, 364, 377, 379, 381, 389, 417], "quala": [346, 377, 379, 381], "minilm": [346, 377, 379, 381], "2021": [346, 377], "onc": [346, 377, 386, 396, 407], "pre": [346, 377, 388, 401, 411], "diffus": [346, 377, 379, 404], "j": [346, 377, 379, 383, 384, 385, 395, 397, 403, 408, 409, 412], "6b": [346, 377, 379], "neox": [346, 377, 395], "bloom": [346, 377], "176b": [346, 377], "t5": [346, 377, 379], "flan": [346, 377], "workflow": [346, 377, 378, 387, 389, 406], "setfit": [346, 377], "sentiment": [346, 377], "analysi": [346, 377], "dlsa": [346, 377], "neuralchat": [346, 377], "chatbot": [346, 377], "through": [346, 365, 377, 384, 399, 402, 403, 404, 409], "effici": [346, 377, 381, 393], "peft": [346, 377], "domain": [346, 369, 377, 396, 397, 425], "blog": [346, 377], "publish": [346, 374, 377, 414], "april": 346, "2023": [346, 414], "tech": 346, "artifici": 346, "intellig": 346, "ai": [346, 377], "With": [346, 407, 419], "mlperf": 346, "bar": 346, "5x": 346, "commun": [346, 374], "mleffici": [346, 377], "dec": [346, 377], "nov": [346, 377], "coher": [346, 396, 405], "novemb": 346, "alibaba": 346, "deep": [346, 376, 377, 389, 400, 416, 419], "purif": 346, "kernel": [347, 355, 373, 385, 386, 391, 394, 395, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 429], "namespac": [352, 353, 354, 355], "jd": [352, 353, 354, 355, 400, 412], "convent": [352, 353, 354, 355], "refactor": [352, 353, 354, 355], "engine_t": 352, "cpu_engine_t": 352, "gpu_ocl_engine_t": 352, "public": [352, 353, 354, 355, 374, 391, 399, 400], "inlin": [352, 353, 354, 399], "engine_kind": [352, 354, 400], "runtime_kind": [352, 354], "virtual": [352, 353, 354, 391, 399, 400], "get_engine_kind": 352, "get_runtime_kind": 352, "std": [352, 353, 354, 355, 397, 399, 400], "vector": [352, 353, 354, 355, 391, 397, 399, 400, 401, 403, 406, 408], "impl_list_item_t": [352, 353], "get_implementation_list": 352, "operator_desc": [352, 353, 356, 397], "op_desc": [352, 353, 397, 400], "create_kernel": 352, "shared_ptr": [352, 353, 391], "kernel_t": [352, 353], "stream_t": 352, "create_stream": 352, "create_memory_storag": 352, "memory_storage_t": 352, "protect": [352, 353], "engine_kind_": [352, 354], "runtime_kind_": [352, 354], "cpu_inst": 352, "null_inst": 352, "storag": 352, "empty_list": 352, "templat": [353, 355], "typenam": [353, 355], "arg_t": 353, "void": [353, 354, 355, 391, 397, 399, 400, 401], "proxy_bas": 353, "hpp": [353, 354, 355, 387, 397, 412], "proxi": [353, 369, 397, 425], "anyth": 353, "similar": [353, 388, 399, 402, 403, 405, 406, 418], "onednn": [353, 391], "struct": [353, 355, 399, 400], "oneapi": [353, 391, 409], "dnnl": [353, 387, 391], "136": 353, "reset_sp": 353, "sp": 353, "get_sp": 353, "create_proxy_object": 353, "result_ref": 353, "privat": [353, 354, 374, 385, 391, 398, 399, 400, 404, 405], "member": [353, 354, 355, 374, 391, 399, 400], "data_handle_": 353, "kernel_desc_proxi": 353, "kernel_desc_t": 353, "real": [353, 387, 396, 404, 405, 406, 409], "attention_desc": 353, "dynamic_quant_desc": 353, "dynamic_quant_matmul_desc": 353, "eltwiseop_desc": 353, "gather_desc": 353, "groupnorm_desc": 353, "layernorm_ba_desc": [353, 399], "layernormalized_spmm_desc": 353, "logsoftmax_desc": 353, "mha_dense_desc": 353, "slice_desc": 353, "softmax_desc": 353, "sparse_matmul_desc": [353, 397], "transpose_matmul_desc": 353, "transpose_mha_desc": 353, "kernel_kind": [353, 354, 400], "impl_list_": 353, "nullptr": [353, 355, 399], "kernel_proxi": 353, "dynamic_qu": 353, "dynamic_quant_matmul": 353, "eltwiseop": [353, 399, 400], "layernorm_ba": 353, "layernormalized_spmm": 353, "mha_dens": [353, 412], "slice": [353, 393], "sparse_matmul": [353, 409], "transpose_matmul": 353, "transpose_mha": 353, "kdp": 353, "rt_data": [353, 397], "exec_context_t": 353, "ctx": [353, 396], "size_t": [353, 355, 387, 400], "get_workspace_s": 353, "kd": [353, 364, 378], "sparse_matmul_desc_t": 353, "sparse_matmul_t": 353, "descriptor": [354, 391, 412], "ker_kind": [354, 397, 400], "kernel_prop": [354, 400], "ker_prop": [354, 397, 400], "eng_kind": [354, 397, 400], "tensor_desc": [354, 400], "ts_desc": [354, 397, 400], "unordered_map": [354, 400], "postop_attr": [354, 355, 400], "apply_postops_list": [354, 400], "rh": [354, 406], "set_binaryop_list": [354, 399], "binaryop_attr": [354, 355, 399], "binaryop_list": [354, 399], "uint64_t": 354, "impl_nthr": 354, "get_binaryop_list": [354, 399], "dim_t": [354, 355], "tensor_shap": 354, "data_typ": [354, 355, 391, 399, 400, 412], "tensor_dtyp": 354, "format_typ": 354, "tensor_ftyp": 354, "ker_kind_": [354, 400], "ker_prop_": [354, 400], "forward_infer": [354, 391, 400], "undef": [354, 355, 399, 400], "impl_nthr_": [354, 400], "ts_descs_": [354, 400], "attrs_": [354, 400], "apply_postops_list_": [354, 400], "binaryop_list_": [354, 399], "enum": [355, 399, 400], "attention_io": 355, "merge_src": 355, "merge_dst": 355, "q_weight": 355, "k_weight": 355, "v_weight": 355, "q_bia": 355, "k_bia": 355, "v_bia": 355, "q_scale": 355, "k_scale": 355, "v_scale": 355, "reshape_input": 355, "q_k_src2": 355, "q_k_scale": 355, "qk_v_output_zero_point": 355, "qk_v_output_scal": 355, "ssd": [355, 400, 412], "eltwiseop_param_t": [355, 400], "element_num": [355, 400], "in_dt": 355, "out_dt": 355, "element_num_each_th": 355, "remain_el": 355, "eltwiseop_data_t": 355, "dst": [355, 391, 399, 400, 402, 403, 404, 407, 408, 412], "doxygenfil": 355, "gather_typ": 355, "spec_translnorm_typ": 355, "direct": 355, "layernorm_ba_param_t": 355, "input_dt": [355, 399, 412], "output_dt": [355, 412], "output2_dt": 355, "spec_typ": [355, 412], "row_num": 355, "col_num": 355, "process_col": [355, 399], "direct_process_row": 355, "process_batch_per_k": 355, "ker_per_batch": 355, "batch_num": 355, "thread_elt_offset": [355, 399], "split_output": 355, "layernorm_ba_data_t": 355, "dst2": 355, "process_row": 355, "anonym": 355, "ep": 355, "1e": 355, "matmul_param_t": 355, "m_tile": 355, "n_tile": 355, "matmul_fp8_param_t": 355, "bfloat16_t": 355, "weight_bf16": 355, "int8_t": 355, "weight_int8": 355, "float8_e4m3_t": 355, "weight_f8_e4m3": 355, "float8_e5m2_t": 355, "weight_f8_e5m2": 355, "uint8_t": [355, 399, 400], "weight_8bit": 355, "weight_typ": 355, "has_scale0": 355, "has_append_sum": [355, 412], "thread_num": 355, "matmul_data_t": 355, "src0": [355, 412], "src1": [355, 386, 399, 412], "src2": [355, 399, 412], "matmul_u8_data_t": 355, "zp": [355, 399], "matmul_fp8_data_t": 355, "mata": 355, "matb": 355, "matc": 355, "matd": 355, "mate": 355, "astep": 355, "bstep": 355, "cstep": 355, "dstep": 355, "kpo": 355, "matmul_input": 355, "scale0": 355, "zp0": 355, "append_sum": 355, "matmul_io_max": 355, "matmul_io": 355, "dst0": 355, "matmul_output": 355, "mean_var_reduce_param_t": 355, "bm": 355, "bn": 355, "mean_var_reduce_data_t": 355, "mean_in": 355, "var_in": 355, "mean_out": 355, "var_out": 355, "spec_softmax_typ": 355, "lut": [355, 397, 399, 400, 412], "softmax_param_t": 355, "sepc_typ": 355, "scalar_num": 355, "vec_align_len": 355, "vec_tail_len": 355, "vec_num_per_thr": 355, "vec_num_tail_thr": 355, "get_lut_exp_attr": 355, "softmax_data_t": 355, "tmp": [355, 400, 402, 404, 407], "process_vec_num": 355, "typedef": 355, "amx_params_t": 355, "amx_bf16_params_t": 355, "amx_int8_params_t": 355, "amx_inputs_t": 355, "amx_bf16f32_inputs_t": 355, "amx_bf16bf16_inputs_t": 355, "sparse_schem": 355, "scenario": [355, 376, 404], "spmm_vnni": 355, "sparse_x_dens": 355, "dense_x_spars": 355, "sparse_x_spars": 355, "subfunc_level": [355, 412], "non_kdim": 355, "kdim": 355, "subfunc_level_max": [355, 412], "variabl": [355, 385, 388, 391, 412, 413], "constexpr": 355, "wei": [355, 412], "todo": [355, 421], "yi": 355, "conflict": 355, "dst_m1": 355, "dst_m2": 355, "work_spac": 355, "vnni_param_t": 355, "spmm_type": 355, "primit": [355, 391], "jit_domain": 355, "has_bia": 355, "output_typ": [355, 386], "tile_w": 355, "sub_func": 355, "im_start": 355, "blocksiz": 355, "indptr": 355, "welford": [355, 405], "dst_t": 355, "vnni_data_t": 355, "ptr_dens": 355, "int32_t": 355, "ptr_bia": 355, "ptr_dst": 355, "ptr_scale": 355, "ptr_dst_m1": 355, "ptr_dst_m2": 355, "num_tilem": 355, "tilem": 355, "tilen": 355, "16": [355, 365, 379, 380, 385, 394, 396, 402, 403, 404, 405, 408, 409, 410, 412, 419], "blocks_per_group": 355, "64": [355, 364, 382, 386, 393, 394, 396, 404, 406, 407, 409, 410, 412], "sizeof": 355, "nnz_group": 355, "nrowptr": 355, "colidx": 355, "group_rowptr": 355, "same_src_dtyp": 355, "src_t": 355, "wgt_t": 355, "bia_t": 355, "avx512_fp32_params_t": 355, "int64_t": 355, "bsc_data_t": 355, "sparse_ptr": 355, "im_end": 355, "in_start": 355, "in_end": 355, "avx512_data_t": 355, "dens": [355, 386, 387, 392, 397, 408, 412, 418], "transpose_copy_param": 355, "srcptr": 355, "dstptr": 355, "srcstride": 355, "dststride": 355, "seq_vnni_copy_param": 355, "transpose_mha_step1_param": 355, "expsum": 355, "cfg": 355, "batchk": [355, 407], "sumstep": 355, "cbatchstep": 355, "scaleab": 355, "transpose_mha_step2_param": 355, "sumptr": 355, "transpose_mha_step3_param": 355, "scalec": 355, "zeropointc": 355, "transpose_mha_io": 355, "src_k": 355, "src_q": 355, "src_v": 355, "tmp2m": 355, "sl_pad": 355, "head_num": [355, 406, 412], "head_siz": [355, 406, 412], "seq_len": [355, 377, 385, 386, 390, 406, 412], "scale_q": 355, "scale_k": 355, "scale_v": 355, "scale_dst": 355, "zp_dst": 355, "transpose_mha_io_max": 355, "within": [364, 374, 396, 403], "arch": 364, "proposit": 364, "propos": [364, 378, 398], "promis": [364, 403, 404], "assess": 364, "128": [364, 377, 385, 386, 390, 393, 394, 395, 396, 410, 412, 419], "advisor": 364, "ever": [364, 396], "network": [364, 378, 384, 385, 386, 388, 403, 418, 419], "student": [364, 378, 379], "minim": [364, 378, 408], "done": [364, 378, 387, 404, 412, 419], "z": [364, 378, 396], "distanc": [364, 378], "euclidean": [364, 378], "kullback": [364, 378], "leibler": [364, 378], "diverg": [364, 378, 396], "term": [364, 378, 403, 406, 408, 414, 415, 416, 419], "assign": [364, 404], "cal": 364, "sloss": 364, "mismatch": 364, "512": [364, 386, 395, 396, 403, 405, 408, 410, 412], "desir": [364, 386, 396], "unmatch": 364, "agent": 364, "train_func_builtin": 364, "flash_distil": 364, "eval_func_builtin": 364, "els": [364, 365, 384, 391], "search_loop": 364, "model_arch_para": 364, "oob": 364, "246": 364, "intra_bottleneck_s": 364, "96": [364, 394, 410], "160": [364, 394, 409], "num_attention_head": 364, "intermediate_s": 364, "640": 364, "num_feedforward_network": 364, "mobilebert": [364, 378, 379], "kl": 364, "mse": 364, "best_model_arch": 364, "automodelforpretrain": 364, "higher_is_bett": 364, "10": [364, 376, 377, 382, 385, 386, 394, 396, 402, 410, 412], "42": [364, 394, 410], "500": 364, "25000": 364, "mobilebert_distil": 364, "sgd": 364, "learning_r": 364, "001": 364, "mobilebert_na": 364, "5000": 364, "partial": 364, "pylint": [364, 375], "disabl": [364, 374, 394, 396, 410, 412], "e1101": 364, "makedir": 364, "exist_ok": 364, "120": [364, 409], "240": 364, "256": [364, 386, 395, 410, 412], "eval_loss": [364, 381], "tfautomodelforsequenceclassif": 364, "inherit": [365, 378, 384, 391, 417, 418, 419], "adjust": [365, 391, 396, 419], "physic": [365, 374, 396, 406], "model_nam": [365, 417], "dataset_nam": 365, "autotoken": [365, 377, 417], "load_dataset": [365, 376, 377], "195": 365, "intel_extension_for_transform": [365, 376, 377, 378, 381, 382, 384, 385, 387, 389, 392, 393, 397, 412, 415, 416, 417, 418, 419], "summari": 365, "003": 365, "throughput": [365, 377, 394, 404], "5071": 365, "933": [365, 394], "guid": [368, 377, 378, 384, 400, 402, 424], "formerli": [369, 377, 382, 397, 425], "known": [369, 377, 396, 397, 425], "sparselib": [369, 387, 397, 425], "high": [369, 377, 385, 393, 395, 397, 404, 405, 408, 425], "assembli": [369, 397, 401, 403, 408, 409, 425], "introduc": [371, 375, 398, 399, 400, 401, 402, 404, 406, 407, 408, 419, 427], "who": [371, 374, 396, 400, 427], "might": [371, 388, 396, 427], "profil": [371, 427, 428], "intruct": [371, 427], "met": [371, 427], "request": [371, 377, 427], "interest": 374, "foster": 374, "welcom": [374, 375], "maintain": [374, 375, 377, 388, 393, 396, 420], "particip": [374, 396, 401], "harass": 374, "free": [374, 399, 412], "everyon": 374, "regardless": 374, "ag": 374, "bodi": [374, 406], "ethnic": 374, "sex": 374, "gender": 374, "express": 374, "educ": 374, "socio": 374, "econom": [374, 393], "statu": [374, 416, 419], "nation": 374, "person": 374, "appear": [374, 396], "race": 374, "religion": 374, "sexual": 374, "orient": 374, "contribut": 374, "inclus": 374, "Being": 374, "viewpoint": 374, "gracefulli": 374, "critic": 374, "focus": [374, 396], "what": [374, 399, 400, 406, 418], "show": [374, 377, 384, 385, 388, 389, 392, 396, 402, 404, 406], "empathi": 374, "unaccept": 374, "imageri": 374, "unwelcom": 374, "troll": 374, "insult": 374, "derogatori": 374, "comment": 374, "polit": 374, "attack": 374, "electron": 374, "permiss": 374, "reason": [374, 388, 391, 405], "consid": [374, 387, 396, 398, 400, 402, 413], "inappropri": 374, "profession": 374, "clarifi": 374, "appropri": [374, 384, 399, 407], "fair": 374, "action": 374, "edit": 374, "reject": 374, "wiki": 374, "align": [374, 398, 400, 408], "ban": 374, "temporarili": 374, "perman": 374, "threaten": 374, "offens": 374, "harm": [374, 408], "offici": 374, "mail": 374, "post": [374, 386, 412], "via": [374, 399, 402, 409], "social": 374, "media": 374, "act": [374, 403], "appoint": 374, "onlin": [374, 377, 405], "offlin": [374, 402, 408, 419], "event": 374, "further": [374, 381, 387, 396, 403], "abus": 374, "report": [374, 375, 377], "contact": [374, 420], "complaint": 374, "review": [374, 375], "investig": [374, 408], "circumst": 374, "team": 374, "oblig": 374, "confidenti": 374, "regard": 374, "incid": 374, "polici": [374, 424], "good": [374, 401, 402], "faith": 374, "temporari": [374, 406], "repercuss": 374, "leadership": 374, "faq": 374, "page": [374, 375, 377, 381], "improv": [375, 377, 386, 396, 399, 401, 403, 404, 408, 419], "send": 375, "style": 375, "flake8": 375, "autopep8": 375, "clean": 375, "bug": [375, 377], "fix": [375, 387, 402], "jira": 375, "ticket": 375, "xxx": [375, 377], "risk": [375, 396], "pr": [375, 412], "reproduc": [375, 396], "submit": [375, 377, 396], "reach": [375, 377, 396], "intend": [375, 396], "safe": 375, "collabor": 375, "adher": 375, "tool": [376, 377, 379, 386, 393, 397, 412], "integr": [376, 428], "lab": 376, "pip": [376, 377, 382, 384, 390, 411], "clone": [376, 377, 382, 383, 384], "itrex": [376, 377, 382, 383, 385], "cd": [376, 377, 382, 383, 384, 385, 390, 395, 397, 409, 412], "v": [376, 377, 382, 384, 406, 407], "dev": 376, "data_fil": 376, "delimit": [376, 412], "asserttru": 376, "len": [376, 384, 385, 392, 406], "column": [376, 398, 403, 405, 408, 418], "conduct": 376, "deploy": [376, 377, 381, 387, 390], "ocraug": 376, "spellingaug": 376, "contextualwordembsforsentenceaug": 376, "xl": 376, "xlnet": [376, 379], "Not": [376, 403], "rescu": 376, "natur": [376, 377, 379, 396, 405], "sst": [376, 377, 379, 381, 417], "txt": [376, 385, 387, 390, 409, 411], "w": [376, 385, 386, 387, 398, 401, 407], "fw": 376, "clm": [376, 379], "train_fil": 376, "validation_fil": 376, "model_dir": 376, "python3": [376, 383], "run_clm": 376, "do_train": 376, "do_ev": 376, "overwrite_output_dir": 376, "secondli": 376, "training_set": 376, "line": [376, 384, 387, 396, 398, 405, 406, 408, 413], "repetit": [376, 396], "penalti": [376, 395], "platform": [377, 395, 411, 419], "particularli": [377, 396], "gen": [377, 400], "imag": [377, 379, 389, 392, 402, 408], "becom": [377, 388, 393, 396, 408], "wide": [377, 378, 400, 401, 419], "art": 377, "popular": 377, "visit": [377, 394, 410], "skylak": 377, "cascad": [377, 382], "lake": [377, 382], "ic": 377, "cooper": [377, 404], "seri": [377, 396, 399, 402, 412], "hbm": 377, "develop": [377, 391, 395], "product": [377, 394, 406, 410, 416, 419], "easi": [377, 387, 389], "rich": 377, "demonstr": [377, 379, 381, 406, 408], "extrem": [377, 381, 396], "togeth": [377, 396], "significantli": [377, 396, 405, 407], "cento": [377, 382], "ubuntu": [377, 382, 394, 410], "04": [377, 379, 382, 394, 410], "window": [377, 382, 383], "succeed": 377, "grep": 377, "matrix": [377, 381, 398, 401, 402, 403, 405, 406, 407, 408, 412, 418, 422], "load_metr": 377, "np": 377, "automodelforsequenceclassif": [377, 381], "evalpredict": 377, "english": [377, 379, 381, 417], "lambda": 377, "usag": [377, 396, 415, 416], "label2id": [377, 381], "id2label": [377, 381], "neg": [377, 381, 396, 412], "pred": 377, "argmax": [377, 381], "axi": [377, 384, 386, 406, 407], "label_id": 377, "q_config": [377, 381, 419], "eval_accuraci": [377, 378, 381, 418], "tmp_trainer": 377, "enable_executor": [377, 380], "set_log_fil": 377, "load_graph": 377, "dummydataload": 377, "compute_perform": 377, "reduc": [377, 391, 396, 398, 399, 401, 403, 404, 405, 407, 408, 419], "glog_minloglevel": [377, 385, 390], "obtain": [377, 379, 386, 396, 407], "section": [377, 396, 397, 408, 409], "input_model": [377, 386, 389, 390], "warm_up": 377, "p50": 377, "50": [377, 409], "p90": 377, "90": [377, 379, 386, 394], "p99": 377, "99": [377, 379, 410], "sec": [377, 394], "tutori": [377, 385], "resourc": [377, 378, 401], "catalog": 377, "brand": [377, 414], "claim": [377, 414], "properti": [377, 385, 414], "trademark": 377, "expens": 378, "deploi": [378, 428], "power": [378, 379, 396], "mobil": 378, "shown": [378, 387, 403, 407, 408], "produc": [378, 396, 408], "instruct": [378, 388, 395, 399, 402, 404, 407, 408, 409, 412, 419], "besid": [378, 400], "often": 378, "patient": 378, "compact": 378, "agnost": 378, "summar": [378, 379], "usual": [378, 388, 398, 408, 419], "1x1": [378, 387], "d_conf": [378, 381], "tune_metr": [378, 418], "metric_": 378, "classifi": 378, "distillation_conf": 378, "distilled_model": 378, "intermediatelayersloss": 378, "meanwhil": [379, 398, 404], "posttrainingdynam": [379, 380, 419], "wikitext": 379, "10004": [379, 380], "xsum": 379, "cnn": 379, "cnn_dailymail": 379, "dm": 379, "lambdalab": 379, "sd": 379, "pokemon": 379, "mlm": 379, "plm": 379, "eleutherai": 379, "neo": 379, "125m": 379, "sshleifer": 379, "wip": [379, 402], "star": 379, "ehdwns1516": 379, "uncased_swag": 379, "swag": 379, "squad": 379, "valhalla": 379, "longform": 379, "4096": [379, 410], "squadv1": 379, "lvwerra": 379, "pegasu": 379, "samsum": 379, "textattack": [379, 389], "mrpc": [379, 389, 390], "echarlaix": 379, "acc91": 379, "d37": 379, "hybrid": 379, "elast": 379, "conll03": 379, "conll2003": 379, "small": [379, 387, 404, 406], "translat": 379, "wmt16": 379, "helsinki": 379, "opu": 379, "mt": [379, 411], "en": 379, "ro": 379, "quantizationawaretrain": [379, 380], "maskinun": 379, "distilgpt2": 379, "rocketknight1": 379, "dslim": 379, "ner": 379, "mb": 379, "f1": [379, 415], "gflop": [379, 410, 413], "speedup": 379, "compar": [379, 395, 396, 398, 401, 412, 419], "415": [379, 394], "47": [379, 394, 410], "88": [379, 394, 409, 410], "58": [379, 410], "56": [379, 395, 409, 410], "35": [379, 394, 410], "1x": 379, "la": [379, 401], "minilmv2": 379, "115": 379, "89": [379, 410], "28": [379, 394, 402, 410], "76": [379, 409, 410], "33x": 379, "269": 379, "253": 379, "252": [379, 409], "202": 379, "104": 379, "34": [379, 410], "87": [379, 410], "11": [379, 382, 390, 402, 410], "44": [379, 386, 394, 409, 410], "49": [379, 392, 394, 410], "94x": 379, "84": [379, 410], "85": [379, 394, 410], "21x": 379, "315": 379, "251": [379, 410], "242": [379, 394, 410], "159": [379, 409], "142": [379, 410], "33": [379, 393, 410], "86": [379, 410], "68": [379, 409, 410], "41": [379, 394, 410], "55": [379, 395, 409, 410], "82x": 379, "amount": [379, 396, 401], "torchprofil": 379, "platinum": [379, 394, 410], "8280": 379, "unstructur": [379, 418], "lasso": [379, 418], "nbsp": [379, 394, 410], "qnli": 379, "qqp": 379, "mnli": 379, "v1": 379, "tinybert_general_4l_312d": 379, "distilroberta": 379, "cola": 379, "krishna2020": 379, "googl": 379, "wikipedia": 379, "prajjwal1": 379, "approch": 379, "pruneofa": 379, "patternlock": [379, 418], "bhadresh": 379, "savani": 379, "emot": 379, "fac": 379, "mini": [379, 386, 390, 394], "gchhablani": 379, "philschmid": 379, "l6": 379, "h384": 379, "moshew": [379, 390], "80": [379, 386, 394, 410], "1x4": [379, 408], "desigh": 380, "32": [380, 385, 393, 394, 395, 402, 403, 405, 406, 407, 408, 409, 410, 412], "bfloat": 380, "fetch": [380, 398, 401], "flag": 380, "enable_bf16": 380, "bfloat16": 380, "qlinear": [380, 389], "u8s8": 380, "u8u8": 380, "highli": 380, "suggest": [380, 399], "quick": [381, 384], "p_conf": [381, 418], "reduct": [381, 403, 406], "accommod": 381, "budget": 381, "tradeoff": [381, 402], "dynamic_length_config": 381, "aim": [381, 384, 386, 388, 396], "opportun": 381, "hw": 381, "sw": 381, "recommend": [382, 384, 387, 390, 392, 393, 395, 396, 405, 409], "protobuf": [382, 390], "nightli": 382, "conda": [382, 390], "satisfi": [382, 392, 404], "success": 382, "gcc": [382, 383], "linux": [382, 383], "visual": [382, 396], "studio": 382, "icelak": 382, "futur": [382, 389, 399, 400, 409], "ipex": [382, 419], "13": [382, 394, 402, 410], "cmake": [383, 385, 395, 397, 409, 412], "submodul": [383, 385], "updat": [383, 385, 396, 405, 418], "recurs": [383, 385, 392], "mkdir": [383, 385, 395, 397, 409, 412], "dpython_execut": 383, "dne_with_sparselib": [383, 412], "neural_engine_pi": 383, "cpython": 383, "37m": 383, "x86_64": 383, "gnu": 383, "libkernellib": 383, "libneural_engin": 383, "lib": [383, 385], "subdirectori": 383, "pure": [383, 400], "certain": [384, 392, 396], "simplifi": [384, 388], "attach": [384, 392], "distilbert_bas": 384, "assum": [384, 392, 401], "command": [384, 385, 389, 396, 413], "repo": [384, 412], "instal": [384, 396, 411, 424], "These": [384, 388, 392, 396, 401, 407], "roughli": [384, 404], "divid": [384, 392, 398, 403, 404, 407, 413], "categori": [384, 386], "dst_shape": [384, 385, 391], "father": 384, "keep_dim": 384, "ax": [384, 406], "come": 384, "rewrit": 384, "_attr": 384, "successfulli": [384, 392], "forget": [384, 388, 391], "reinstal": 384, "enter": 384, "you_work_dir": 384, "noth": [384, 392], "wrong": [384, 392], "anoth": [384, 388, 393, 396, 409], "correctli": 384, "distil_bert_bas": 384, "pattern_mapping_config": 384, "div": [384, 388], "becaus": [384, 399, 402, 407, 419], "even": [384, 398], "delv": 384, "recogn": [384, 428], "put": [384, 385, 388, 395], "namedtupl": 384, "__call__": 384, "retriev": 384, "actual": [384, 385, 405], "equival": [384, 408], "supported_pattern": 384, "influenc": [384, 388, 396], "pattern_dict": 384, "new_node_nam": 384, "ret_old_nod": 384, "talk": 384, "denomin": 384, "numer": [384, 419], "stabil": 384, "_set_attr": 384, "ln_node_idx": 384, "finish": [384, 388, 390], "yourself": [384, 392, 395], "seq": [385, 406], "bert_model": 385, "30522": 385, "1024": [385, 386, 387, 395, 410, 412], "125018112": 385, "slightli": 385, "activ": [385, 389, 390, 393, 396, 398, 402, 403, 404, 407, 412, 419], "throught": 385, "numactl": [385, 395], "bind": [385, 395], "omp_num_thread": [385, 395], "session": [385, 393], "glog": 385, "nerual": 385, "cc": 385, "cmakelist": 385, "reus": [385, 393, 396, 404], "engine_integr": 385, "cp": [385, 395], "nlp_executor": 385, "neural_engine_exampl": 385, "ne": [385, 395], "root": 385, "ne_root": 385, "project_source_dir": 385, "link": [385, 391, 418], "runtime_output_directori": 385, "add_execut": 385, "target_include_directori": 385, "boost_inc_dir": 385, "target_link_librari": 385, "cmake_thread_libs_init": 385, "gflag": 385, "dir": 385, "set_target_properti": 385, "analyz": 386, "readm": [386, 389, 396], "run_executor": [386, 390], "model_and_token": [386, 389, 390], "Of": [386, 392, 401], "cours": [386, 392, 401], "proflil": 386, "latanc": 386, "perf": [386, 408, 412, 413], "perfrom": 386, "chrome": 386, "inst": 386, "count": [386, 391, 393], "pref": 386, "semi": 386, "70": [386, 394], "256x256": [386, 412], "settabl": 386, "256x1024": 386, "1024x256": 386, "gelu_tanh": [386, 391], "add_37": 386, "116": [386, 410], "641": 386, "00": 386, "075": 386, "0375": 386, "comparison": [386, 408], "185": 386, "801": 386, "693": 386, "366": 386, "content": 386, "part1": [386, 391], "modif": 386, "xlsx": 386, "titl": [386, 414], "model_infer": 386, "friendli": [386, 404, 405], "000": 386, "wall": 386, "durat": 386, "17": [386, 394, 402, 410], "138": 386, "iteration4": 386, "726": 386, "phrase": 386, "0m": 386, "permut": [386, 402, 406, 412], "perm": [386, 406], "add_284": 386, "028": [386, 410], "044": 386, "reshape_tim": 386, "004m": 386, "forward_tim": 386, "044m": 386, "input_tensor_nam": 386, "matmul_357": 386, "matmul_358": 386, "matmul_346": 386, "input_typ": 386, "f32": [386, 391, 395], "output_tensor_nam": 386, "output_shap": 386, "append_op": 386, "src1_perm": 386, "pictur": [387, 398, 411], "bring": [387, 403, 407, 408], "mainli": [387, 395, 404, 405], "merg": [387, 392], "off": [387, 396], "model_path": [387, 393], "isa": [387, 397, 399, 404, 407, 408, 409], "int8_model_path": 387, "shape_0": 387, "shape_1": 387, "shape_2": 387, "enlarg": 387, "subsequ": [387, 396, 404, 407], "remark": 387, "micro": [387, 398, 403, 408], "oc": [387, 412], "mk": 387, "kn": 387, "nhwc": 387, "nxhxw": 387, "h": [387, 396], "nk": 387, "km": 387, "mmkmb": 387, "mmxmb": 387, "fulfil": 387, "along": [387, 403, 406, 408], "omp": 387, "higher": [387, 395, 396, 406, 408, 412, 419], "unrol": [387, 401, 403], "know": [387, 393, 402], "disk": [387, 389, 393], "enable_op_tun": 387, "execution_opt": [387, 393], "engine_dispatch_t": 387, "workspac": 387, "row": [387, 401, 402, 404, 408, 418], "rest": [387, 388, 392, 406, 408], "hash": [387, 399], "kernel_config": [387, 412], "kernel_nam": [387, 412], "3025159985633461085": 387, "40": [387, 394, 396], "14124194128933833351": 387, "thing": 387, "affect": [387, 396, 404, 407, 413], "simul": [387, 408, 409], "warmup_it": 387, "num_iter": 387, "dispatch_table_file_root": 387, "file_root": 387, "script": [387, 389, 395, 411], "prevent": [387, 396], "imprecis": 387, "purpos": [388, 392, 399, 404], "realiz": 388, "suppli": [388, 392, 393], "recognit": [388, 392], "embeddings_reshap": 388, "said": 388, "thought": 388, "st": 388, "nd": 388, "copi": [388, 406], "greater": [388, 415, 416], "sent": 388, "written": 388, "phenomenon": 388, "Its": 388, "situat": [388, 396, 405], "nod": 388, "leav": [388, 406, 408, 412], "old_node_index": 388, "_get_pattern_info": 388, "_create_out_pattern": 388, "_replace_pattern": 388, "emitt": 389, "netron": 389, "bash": [389, 390], "prepare_model": [389, 390], "sh": [389, 390, 413], "ptq": 389, "much": [389, 396, 401], "ir_path": 389, "focu": [390, 396, 406, 415], "home": 390, "distilbert_base_uncas": 390, "r": [390, 394, 396, 410, 411, 419], "prepare_dataset": 390, "shell": 390, "tokenizer_dir": 390, "data_dir": 390, "geluoper": 391, "destructor": 391, "operatorconfig": 391, "algorithm_": 391, "eng_": 391, "eltwise_forward": 391, "gelu_p_": 391, "src_m_": 391, "dst_m_": 391, "attrs_map": 391, "operator_conf_": 391, "becuas": 391, "src_shape": 391, "dst_tensor_ptr": 391, "set_shap": 391, "stride": [391, 398], "src_stride": 391, "getstrid": 391, "dst_stride": 391, "desc": [391, 399, 400], "src_md": 391, "dst_md": 391, "part2": 391, "gelu_algorithm": 391, "gelu_erf": 391, "eltwise_gelu_erf": 391, "eltwise_gelu_tanh": 391, "gelu_d": 391, "prop_kind": 391, "primitive_desc": 391, "gelu_pd": 391, "unrefernc": 391, "manag": [391, 393], "strictli": 391, "alia": 391, "src_data": 391, "dst_data": 391, "mutable_data": 391, "data_ptr": 391, "set_data_handl": 391, "const_cast": 391, "reinterpret_cast": 391, "memory_args_": 391, "dnnl_arg_src": 391, "dnnl_arg_dst": 391, "unref": 391, "unref_tensor": 391, "especi": [391, 408], "int8_lut_optim": 391, "int8_lut_acc_test": 391, "set_dtyp": 391, "register_operator_class": 391, "rule": 392, "recruit": 392, "ln_pattern": 392, "grow": 392, "concis": 392, "intuit": [392, 404], "choos": 392, "prefer": [392, 406], "longer": [392, 396], "ones": 392, "op_type1": 392, "op_type2": 392, "type1": 392, "type2": 392, "elig": 392, "a_node_name_1": 392, "b_node_name_1": 392, "c_node_name_1": 392, "a_node_name_2": 392, "b_node_name_2": 392, "c_node_name_2": 392, "a_node_name_n": 392, "b_node_name_n": 392, "c_node_name_n": 392, "bert_large_model_path": 392, "layer_0": 392, "layer_1": 392, "layer_2": 392, "afterward": 392, "volatil": 392, "incorrect": 392, "outcom": 392, "Or": 392, "exactli": 392, "screen": 392, "occur": [392, 398, 405], "alreadi": 392, "moment": 392, "varianc": [392, 405], "batchnorm": 392, "mul_1": 392, "mul_2": 392, "add_1": 392, "cycl": [393, 409], "pointer": 393, "life": 393, "malloc": 393, "getmemori": 393, "consum": [393, 402], "lead": [393, 396, 406, 408], "wast": [393, 404, 405], "veri": [393, 398, 400, 401, 404], "alloc": [393, 400, 401], "faster": 393, "setp": 393, "activation_mem_compress": 393, "max_input_shapes_list": 393, "warm": 393, "quit": [393, 399], "llama": [393, 395, 396], "7b": [393, 395, 396], "past_k_v_0": 393, "past_k_v_1": 393, "63": [393, 394, 410], "beam": 393, "extra": [393, 396, 404], "dag": 393, "activation_dag": 393, "dump_activation_dag": 393, "execution_mod": 393, "07": [394, 410], "8375c": [394, 410], "aw": [394, 410], "c6i": [394, 410], "12xlarg": [394, 410], "vari": [394, 410], "factor": [394, 410], "www": [394, 410], "batchsiz": 394, "2652": 394, "36": [394, 410], "513": 394, "lt": [394, 410], "50m": 394, "2181": 394, "43": [394, 410], "628": 394, "1719": 394, "91": [394, 410], "75": [394, 410], "1487": [394, 410], "255": [394, 407, 419], "1220": 394, "39": [394, 410], "143": 394, "1304": 394, "46": [394, 410], "066": 394, "1102": [394, 410], "870": 394, "487": 394, "750": 394, "82": [394, 409, 410], "690": [394, 410], "188": 394, "910": [394, 410], "921": [394, 410], "729": 394, "71": [394, 409, 410], "619": 394, "38": [394, 409, 410], "821": [394, 410], "499": 394, "429": [394, 409], "936": [394, 410], "680": 394, "318": [394, 410], "557": 394, "262": 394, "467": 394, "589": 394, "405": 394, "339": 394, "473": 394, "119": [394, 410], "389": 394, "945": [394, 410], "360": 394, "274": 394, "843": 394, "259": [394, 409, 410], "442": 394, "241": 394, "364": 394, "016": [394, 410], "303": 394, "266": 394, "45": [394, 410], "05": [394, 396, 410], "221": 394, "973": 394, "112": [394, 410], "349": 394, "938": [394, 410], "275": [394, 409], "614": 394, "217": 394, "37": [394, 410], "039": 394, "301": 394, "166": 394, "033": 394, "320": 394, "769": 394, "263": 394, "724": [394, 410], "207": 394, "819": [394, 410], "181": 394, "021": 394, "979": [394, 410], "74": [394, 410], "235": 394, "091": 394, "51": [394, 410], "914": [394, 410], "698": [394, 410], "905": [394, 410], "8972": 394, "076": [394, 410], "20m": 394, "7192": 394, "19": [394, 402, 410], "906": 394, "5482": 394, "509": 394, "4808": 394, "952": 394, "3678": 394, "409": 394, "4750": 394, "975": [394, 410], "3647": 394, "867": 394, "2921": 394, "587": [394, 410], "2576": 394, "18": [394, 402, 410], "768": [394, 410], "2131": [394, 410], "913": [394, 410], "2804": 394, "096": 394, "2263": 394, "037": 394, "1938": 394, "756": [394, 410], "1581": 394, "15": [394, 396, 402, 403, 408, 410], "1409": 394, "015": 394, "2116": 394, "113": 394, "1777": 394, "972": [394, 410], "1474": 394, "392": 394, "1278": 394, "1137": 394, "752": 394, "1594": 394, "124": 394, "1347": [394, 410], "1126": 394, "993": [394, 410], "258": 394, "890": [394, 410], "877": [394, 410], "1319": 394, "1086": 394, "931": [394, 410], "545": 394, "833": 394, "332": [394, 410], "747": [394, 410], "141": 394, "1106": [394, 410], "31": [394, 402, 403, 410], "924": 394, "446": 394, "719": 394, "633": 394, "501": 394, "816": 394, "961": 394, "549": 394, "807": 394, "868": [394, 410], "701": [394, 410], "117": 394, "613": 394, "618": 394, "515": 394, "484": 394, "75384": 394, "989": 394, "1m": 394, "55628": 394, "917": 394, "49120": 394, "957": [394, 410], "41598": 394, "39218": 394, "31211": 394, "788": [394, 410], "28399": 394, "848": 394, "24910": 394, "966": 394, "20505": 394, "18575": 394, "865": 394, "25485": 394, "987": 394, "17468": 394, "16771": 394, "971": [394, 410], "16004": 394, "996": [394, 410], "13381": 394, "894": [394, 410], "13990": 394, "863": [394, 410], "13154": 394, "12535": 394, "12102": 394, "998": 394, "8426": [394, 410], "8736": 394, "8282": 394, "967": 394, "6659": 394, "898": [394, 410], "6477": 394, "6290": 394, "974": [394, 410], "8598": 394, "6449": 394, "935": [394, 410], "6263": [394, 410], "965": [394, 410], "6080": 394, "988": 394, "3684": 394, "817": [394, 410], "6246": 394, "978": 394, "6374": 394, "947": [394, 410], "6026": 394, "3300": [394, 410], "926": 394, "3226": 394, "6221": 394, "958": 394, "6322": 394, "6081": 394, "985": [394, 410], "3368": 394, "3264": 394, "distillbert": 394, "15460": 394, "296": 394, "10m": 394, "13129": 394, "363": 394, "11323": 394, "578": [394, 410], "10072": 394, "599": 394, "8689": 394, "7901": 394, "205": [394, 410], "6737": 394, "562": 394, "5440": 394, "904": [394, 410], "4920": 394, "786": [394, 410], "4460": 394, "053": 394, "5280": 394, "179": 394, "4339": 394, "244": [394, 409], "3634": [394, 410], "928": 394, "3255": 394, "211": [394, 410], "2928": 394, "197": [394, 410], "3681": 394, "527": [394, 410], "2965": [394, 410], "106": [394, 410], "2741": 394, "862": [394, 410], "2351": 394, "2150": 394, "282": 394, "2918": 394, "316": 394, "2505": [394, 410], "602": 394, "2010": [394, 410], "995": 394, "1872": 394, "609": [394, 410], "2409": 394, "983": 394, "1993": 394, "013": 394, "1671": [394, 410], "627": 394, "1484": 394, "1342": [394, 410], "1910": 394, "456": [394, 410], "1659": 394, "687": 394, "1293": 394, "245": [394, 410], "1230": 394, "798": 394, "1091": 394, "261": 394, "1627": 394, "908": 394, "1397": 394, "684": 394, "1130": 394, "1081": 394, "353": 394, "982": [394, 410], "187": [394, 409], "manufactur": [394, 410], "amazon": [394, 410], "ec2": [394, 410], "bio": [394, 410], "1021": [394, 410], "microcod": [394, 410], "0xd000331": [394, 410], "irq": [394, 410], "balanc": [394, 396, 410], "xeonplatinum": 394, "90ghz": [394, 410], "frequenc": [394, 410, 418], "9ghz": [394, 410], "5ghz": [394, 410], "socket": [394, 410], "numa": [394, 410], "turbo": [394, 410], "frequencygovern": [394, 410], "bare": 395, "metal": 395, "llm": 395, "solut": [395, 405, 408], "borrow": 395, "cpp": [395, 396, 412], "almost": 395, "macro": 395, "difficult": 395, "hierarch": 395, "bitsfrom": 395, "avx512f": [395, 397, 406, 412, 426], "x86": 395, "gpu": [395, 401], "short": 395, "ninja": 395, "65b": 395, "30b": 395, "13b": 395, "tokenizer_checklist": 395, "chk": 395, "convert_llama": 395, "outtyp": 395, "outfil": 395, "quant_llama": 395, "model_fil": 395, "out_fil": 395, "q4_j": 395, "block_siz": 395, "gemm_isa": 395, "vnni": [395, 397, 398, 402, 406, 407, 410, 412, 419, 426], "q4_j_vnni_b128": 395, "gptneox": 395, "convert_gptneox": 395, "input_model_name_or_path": 395, "quant_gptneox": 395, "mpt": 395, "convert_mpt": 395, "quant_mpt": 395, "falcon": 395, "convert_falcon": 395, "quant_falcon": 395, "main_llama": [395, 396], "color": [395, 396, 406, 408], "she": 395, "door": 395, "main_gptneox": 395, "main_mpt": 395, "main_falcon": 395, "main_gptj": 395, "q8": 395, "gptj_bind": 395, "awai": 396, "path_to_model": 396, "upon": 396, "cover": 396, "commonli": 396, "program": [396, 398, 414], "fname": 396, "ggml": 396, "respons": [396, 398, 404, 405, 407], "ins": 396, "alpaca": 396, "n_predict": 396, "ctx_size": 396, "were": 396, "2048": [396, 412], "wait": 396, "offer": 396, "engag": 396, "convers": [396, 419], "variou": 396, "press": 396, "interject": 396, "backslash": 396, "immedi": 396, "excel": 396, "differenti": 396, "distinguish": [396, 412], "tailor": 396, "chat": 396, "paus": 396, "encount": 396, "switch": 396, "jump": 396, "back": [396, 404, 405, 406, 407], "turn": [396, 406], "speak": 396, "overcom": 396, "conjunct": [396, 415], "assist": [396, 420], "technic": 396, "reset": 396, "lose": 396, "comprehend": 396, "yield": [396, 419], "increas": [396, 401], "beyond": 396, "unpredict": 396, "retain": 396, "topic": 396, "remain": 396, "divers": 396, "creativ": 396, "qualiti": 396, "infin": 396, "caus": 396, "temp": 396, "determinist": 396, "conserv": 396, "At": [396, 404, 405, 407], "pick": [396, 408], "repeat_penalti": 396, "repeat_last_n": 396, "penal": 396, "nl": 396, "newlin": 396, "monoton": 396, "strongli": 396, "lenient": 396, "histori": 396, "recent": 396, "dialogu": 396, "poetri": 396, "plai": 396, "role": 396, "nonsens": 396, "subset": 396, "cumul": 396, "nucleu": 396, "95": [396, 409, 410], "impact": [396, 402], "suppress": 396, "promot": 396, "contextu": 396, "surround": 396, "closer": 396, "perplex": 396, "mirostat_lr": 396, "rate": [396, 405], "eta": 396, "mirostat_": 396, "tau": 396, "strike": 396, "excess": 396, "boredom": 396, "trap": 396, "incoher": 396, "confus": 396, "quickli": 396, "respond": 396, "feedback": 396, "slower": 396, "token_id": 396, "likelihood": 396, "manual": [396, 409], "decreas": 396, "15043": 396, "inf": 396, "never": 396, "practic": 396, "29905": 396, "preval": 396, "latex": 396, "across": 396, "oppos": 396, "logic": [396, 407, 409], "greatli": [396, 402, 407], "lock": [396, 418], "swap": 396, "trade": 396, "advantag": 396, "ram": 396, "slow": 396, "mmap": 396, "pageout": 396, "memory_f32": 396, "cost": [396, 408], "benefit": [396, 404, 408, 419], "bla": 396, "progress": 396, "startup": 396, "primari": 396, "displai": 396, "latest": [396, 409, 420], "frequent": [396, 398], "outdat": 396, "mtest": 396, "properli": 396, "lora": 396, "impli": 396, "workdir": 397, "dne_with_test": 397, "ON": [397, 412], "ut": [397, 400], "dne_with_sparselib_onli": [397, 412], "dne_with_sparselib_benchmark": [397, 412], "test_spmm_vnni_kernel": 397, "box": 397, "profl": [397, 409], "op_attr": [397, 399, 400, 406], "spmm_desc": 397, "spmm_kern": 397, "data0": 397, "data1": 397, "data2": 397, "data3": 397, "data4": 397, "unit": [397, 404], "amx": [397, 404, 407, 412, 426], "wise": [397, 412, 426], "residu": 397, "avx512": [397, 398, 402, 419], "mha": [397, 426], "spmm": [398, 406, 412], "deeplearn": 398, "multipli": [398, 404, 408, 419], "adopt": [398, 403, 408], "modern": 398, "spatial": [398, 404], "64byte": 398, "organ": 398, "associ": 398, "access": [398, 403, 404], "b1": 398, "b2": 398, "simd": [398, 399, 403], "width": [398, 399, 403, 405, 419], "evenli": 398, "discontinu": 398, "fulli": [398, 407, 408], "worst": 398, "miss": [398, 408], "destin": [398, 403, 406, 412], "l1": 398, "l2": [398, 404, 412], "perhap": 398, "mxk": [398, 412], "bxm": 398, "xk": 398, "bxkxm": 398, "nxm": 398, "2d": [398, 412], "frac": [398, 406], "dl": 399, "changeabl": 399, "operand": [399, 403], "horizont": 399, "overhead": [399, 405, 406, 407, 408], "move": 399, "binaryop_injector": 399, "postop": [399, 400, 412], "eltwise_injector": [399, 400], "escap": [399, 400], "compute_vector": 399, "arithmet": 399, "brows": 399, "dt": [399, 400], "vpaddb": 399, "vaddp": 399, "unlik": 399, "ptr": [399, 400, 409], "static_addr": 399, "addr": 399, "binaryop_alg": 399, "per_channel_qu": 399, "per_channel_dequ": 399, "op_alg": [399, 400], "op_dt": 399, "alg": 399, "set_scal": 399, "set_zp": 399, "binary_injector_init": 399, "set_mask": 399, "reg64": [399, 400], "zmm": [399, 400, 403, 405, 408], "get_addr": 399, "broadcast": [399, 403, 408, 409, 412], "enable_mask": 399, "vector_comput": [399, 400], "bianryop": 399, "comput_vector": 399, "wrapper": 399, "jit_binary_injector": 399, "addr_typ": 399, "jit_gener": [399, 400], "opmask": [399, 400], "reg": [399, 400], "mov": [399, 409], "addr_ptr": 399, "zmm_src1": 399, "regexp": 399, "step1": [399, 400, 407], "binary_injector": 399, "step2": [399, 400, 407], "data_param": 399, "binaryop_addr": 399, "param_": [399, 400], "front": 399, "append_loop_len": 399, "zmm_byte_s": 399, "get_data_s": 399, "offset_exp": 399, "bianryop_attr_list": 399, "append_vec": 399, "binary_add": 399, "eltwis": 400, "tradit": 400, "obvious": [400, 401, 405], "useless": 400, "idea": [400, 408, 418], "xbyak": 400, "algo": 400, "aplha": 400, "sacl": 400, "postop_alg": 400, "int8_lut": 400, "postop_typ": 400, "mathemat": 400, "satur": 400, "round": [400, 419], "unus": 400, "\u03b1x": 400, "\u03b2": 400, "le": 400, "gt": 400, "eng_kind_": 400, "omp_get_max_thread": 400, "omp_get_num_proc": 400, "eltwise_injector_init": 400, "chian": 400, "escape_reg": 400, "escape_eras": 400, "eras": 400, "prepare_t": 400, "zmm_src": 400, "postop_idx": 400, "reg_idx": 400, "step0": 400, "jit_eltwiseop_t": 400, "assign_reg": 400, "eltwiseop_kd_t": 400, "op_desc_": 400, "params_": 400, "remain_task_mask": 400, "scratch_": 400, "r10": 400, "reg_src": 400, "addr_src": 400, "r15": [400, 409], "addr_dst": 400, "r14": [400, 409], "reg_param": 400, "rdi": [400, 409], "remain_element_num": 400, "rsi": 400, "getidx": 400, "rcx": 400, "rdx": 400, "rsp": 400, "step3": [400, 407], "preambl": 400, "load_param": 400, "vmovup": [400, 409], "postambl": 400, "fp32_gelu_attr": 400, "bf16_gelu_attr": 400, "push_back": 400, "gen_cas": 400, "data0_desc": 400, "postop_list": 400, "fp32_gelu": [400, 412], "fp32_exp": 400, "mask_mock1": 400, "reg64_mock1": 400, "zmm_mock1": 400, "fp32_exp_attr": 400, "data1_desc": 400, "bf16_gelu": 400, "bf16_exp": [400, 412], "bf16_exp_attr": 400, "dt1op1": 400, "dt2op2": 400, "hase": 400, "get_true_data": 400, "rf_data": 400, "your_kernel_log": 400, "apply_postop_list": 400, "unit_test_util": 400, "articl": [401, 419], "opencl": 401, "snippet": 401, "unintellig": 401, "__kernel": 401, "naive_gemm": 401, "__global": 401, "globalrow": 401, "get_global_id": 401, "globalcol": 401, "col": [401, 402, 405, 407], "over": [401, 403, 406], "acc": [401, 412, 413], "0f": 401, "mxn": [401, 407, 412], "2xk": 401, "redund": [401, 418], "asub": 401, "bsub": 401, "tile_gemm": 401, "get_local_id": 401, "get_group_id": 401, "__local": 401, "initialis": 401, "accumul": [401, 406, 408], "numtil": 401, "tiledrow": 401, "tiledcol": 401, "synchronis": 401, "barrier": 401, "clk_local_mem_f": 401, "full": [401, 414, 419], "white": 401, "figur": [401, 404, 405, 406, 408, 411], "half": [401, 407], "correspondingli": 401, "workload": [401, 406], "localmemori": 401, "tight": 401, "ll": 401, "twice": [401, 407], "ping": 401, "pong": 401, "tidm": 401, "tidn": 401, "offsetm": 401, "offset": [401, 405, 406], "offsetn": 401, "areg": 401, "breg": 401, "wm": 401, "wn": 401, "lpta": 401, "tid": 401, "mod2": 401, "div2": 401, "tiledindex": 401, "indexa": 401, "indexb": 401, "veca": 401, "vecb": 401, "tt": 401, "pragma": 401, "tdpbf16p": 402, "16x32": 402, "32x16": 402, "FOR": [402, 403, 408], "TO": 402, "colsb": 402, "endfor": [402, 403, 408], "write_row_and_zero": 402, "zero_upper_row": 402, "zero_tileconfig_start": 402, "layout": [402, 405, 406, 407], "successor": 402, "1x16": [402, 408], "concaten": [402, 408, 412], "intrins": 402, "tileloadd": 402, "nonzero": 402, "vmovdqu32": 402, "altern": [402, 408], "lot": 402, "disast": 402, "16x1": [402, 406], "fly": 402, "__m512i": 402, "_mm512_set_epi16": 402, "29": [402, 410], "27": [402, 410], "26": [402, 409, 410], "25": [402, 410, 412], "23": [402, 410], "22": [402, 410], "21": [402, 410], "__m256i": 402, "lo": 402, "_mm256_loadu_epi": 402, "li": 402, "vec": 402, "_mm512_inserti32x8": 402, "_mm512_castsi256_si512": 402, "_mm512_permutexvar_epi16": 402, "_mm512_storeu_epi32": 402, "vfmadd": 403, "vfmadd231p": [403, 409], "degre": 403, "conting": 403, "bsc": 403, "variant": 403, "bsr": 403, "openmp": 403, "relief": 403, "bottleneck": [403, 405], "microkernel": 403, "peripher": 403, "implicit": 403, "technologi": 404, "among": [404, 407], "satisfactori": 404, "inevit": 404, "solv": [404, 405, 419], "facilit": [404, 407], "flexibl": 404, "divis": 404, "tdpbssd": 404, "tile_k": 404, "formula": 404, "max_tile_k": 404, "hope": 404, "large_wei_threshold": 404, "16xpad_n": 404, "tilestor": 404, "pseudo": 404, "tile_m": [404, 412], "16xn": 404, "dp_tile_n": 404, "k_dim_dp": 404, "write_tile_to_tmp_buf": 404, "dequantize_tile_on_tmp_buf": 404, "calculate_scale_on_tmp_buf": 404, "write_back_scal": 404, "quant_tile_n": 404, "quantize_on_tmp_buf": 404, "write_tile_to_dst": 404, "scale_reduce_quant": 404, "needn": 404, "sync": 404, "2nd": [404, 407], "s8s8bf16": 404, "desid": 404, "du": 404, "until": 404, "feel": [404, 412], "suitabl": 404, "chart": 404, "again": 405, "naiv": 405, "gap": 405, "layernrom": 405, "3d": [405, 426], "poor": 405, "fewer": 405, "inconsist": 405, "scene": 405, "quarter": 405, "depict": 405, "bandwidth": [405, 407, 419], "gain": [405, 419], "brought": [405, 419], "majotr": 405, "layternorm": 405, "encapsul": 405, "ba": [405, 409, 412], "discret": 405, "append": [405, 412, 413], "overal": 405, "p2031": [406, 412], "2013": 406, "noperm": [406, 412], "p1302": [406, 412], "p2013": [406, 412], "equat": [406, 419], "dot": [406, 419], "rm": 406, "q": [406, 407], "qk": 406, "textunderscor": 406, "nativ": 406, "sparelib": 406, "axis": 406, "conceptu": 406, "head_nun": 406, "perm2031": 406, "perm2013": 406, "perm1302": 406, "concept": [406, 408], "lh": 406, "float32": [406, 419], "illustr": 406, "inner": 406, "16x16": 406, "drawn": 406, "lighter": 406, "cell": [406, 408], "respectfulli": 406, "vnni_noperm_p2013_p1302": 406, "transpose_4b_8x8": 406, "legend": 406, "explan": 406, "contigu": 406, "ellipsi": 406, "thinner": 406, "border": 406, "bolder": 406, "16x32x16": 406, "suboptim": 406, "piec": 406, "boost": 406, "twofold": 406, "unifi": 406, "roll": 406, "worth": 407, "clear": 407, "fact": [407, 419], "spr": 407, "latter": 407, "clx": 407, "4x16": [407, 408], "launch": 407, "prior": 407, "iteraion": 407, "polynomi": 407, "essenti": 407, "incom": 407, "far": 407, "four": 408, "adjac": 408, "unsign": [408, 412], "sign": [408, 419], "tmp1": 408, "zeroextend16": 408, "signextend16": 408, "tmp2": 408, "tmp3": 408, "tmp4": 408, "dword": [408, 409], "transposit": 408, "discuss": 408, "typic": 408, "4x4": 408, "mxkxn": 408, "problem": [408, 412], "densiti": 408, "fma": 408, "bubbl": 408, "16x4": 408, "highlight": 408, "4x": 408, "talent": 408, "smart": 408, "gui": [408, 409], "swizzl": 408, "workaround": 408, "unfortun": 408, "difficulti": 408, "bad": 408, "2x1": 408, "conclus": 408, "against": 408, "brief": 409, "sparse_lib_verbos": 409, "sparselib_verbos": 409, "nthr": 409, "224": [409, 410], "exec": 409, "shape_256_256_128": 409, "4658": [409, 410], "56982": 409, "itt": 409, "dne_with_sparselib_vtun": 409, "opt": 409, "dcmake_vtune_hom": 409, "sparse_lib_vtun": 409, "ssh": 409, "analys": 409, "verifi": 409, "sparse_lib_dump": 409, "xed64": 409, "click": 409, "xdi": 409, "push": 409, "53": [409, 410], "rbx": 409, "rbp": 409, "4154": 409, "r12": 409, "4155": 409, "r13": 409, "4156": 409, "4157": 409, "dataxf": 409, "bd00040000": 409, "ebp": 409, "0x400": 409, "4c8b3f": 409, "qword": 409, "4c8b7708": 409, "0x8": 409, "4c8b6f10": 409, "0x10": 409, "1a": 409, "avx512evex": 409, "62f17d48efc0": 409, "vpxord": 409, "zmm0": 409, "62f15d48efe4": 409, "zmm4": 409, "62513d48efc0": 409, "zmm8": 409, "2c": 409, "62511d48efe4": 409, "zmm12": 409, "62f17548efc9": 409, "zmm1": 409, "62f15548efe": 409, "zmm5": 409, "3e": 409, "62513548efc9": 409, "zmm9": 409, "62511548efe": 409, "zmm13": 409, "4a": 409, "62f16d48efd2": 409, "zmm2": 409, "62f14d48eff6": 409, "zmm6": 409, "62512d48efd2": 409, "zmm10": 409, "5c": 409, "62510d48eff6": 409, "zmm14": 409, "62": [409, 410], "62c17c481006": 409, "zmm16": 409, "zmmword": 409, "62c17c48104e01": 409, "zmm17": 409, "0x40": 409, "6f": 409, "62c17c48105602": 409, "zmm18": 409, "0x80": 409, "62427d48183f": 409, "vbroadcastss": 409, "zmm31": 409, "7c": 409, "vfma": 409, "62927d40b8c7": 409, "62927540b8cf": 409, "62926d40b8d7": 409, "8e": 409, "62427d48187f04": 409, "62927d40b8e7": 409, "9b": 409, "62927540b8ef": 409, "a1": 409, "62926d40b8f7": 409, "a7": 409, "62427d48187f08": 409, "0x20": 409, "ae": 409, "62127d40b8c7": 409, "b4": 409, "62127540b8cf": 409, "62126d40b8d7": 409, "c0": 409, "62427d48187f0c": 409, "0x30": 409, "c7": 409, "62127d40b8e7": 409, "62127540b8ef": 409, "62126d40b8f7": 409, "d9": 409, "62c17c48104603": 409, "0xc0": 409, "e0": 409, "62c17c48104e04": 409, "0x100": 409, "e7": 409, "62c17c48105605": 409, "0x140": 409, "ee": 409, "62427d48187f01": 409, "0x4": 409, "f5": 409, "fb": 409, "101": 409, "107": 409, "62427d48187f05": 409, "0x14": 409, "10e": 409, "114": 409, "11a": 409, "62427d48187f09": 409, "0x24": 409, "12d": 409, "133": 409, "139": 409, "62427d48187f0d": 409, "0x34": 409, "140": 409, "146": 409, "14c": 409, "152": 409, "62c17c48104606": 409, "0x180": 409, "62c17c48104e07": 409, "0x1c0": 409, "62c17c48105608": 409, "0x200": 409, "167": [409, 410], "62427d48187f02": 409, "16e": 409, "174": 409, "17a": 409, "180": 409, "62427d48187f06": 409, "0x18": 409, "18d": 409, "193": 409, "199": 409, "62427d48187f0a": 409, "0x28": 409, "1a0": 409, "1a6": 409, "1ac": 409, "1b2": 409, "62427d48187f0e": 409, "0x38": 409, "1b9": 409, "1bf": 409, "1c5": 409, "1cb": 409, "62c17c48104609": 409, "0x240": 409, "1d2": 409, "62c17c48104e0a": 409, "0x280": 409, "1d9": 409, "62c17c4810560b": 409, "0x2c0": 409, "1e0": 409, "62427d48187f03": 409, "0xc": 409, "1e7": 409, "1ed": 409, "1f3": 409, "1f9": 409, "62427d48187f07": 409, "0x1c": 409, "200": 409, "206": 409, "20c": 409, "212": 409, "62427d48187f0b": 409, "0x2c": 409, "219": [409, 410], "21f": 409, "225": 409, "22b": 409, "62427d48187f0f": 409, "0x3c": 409, "232": [409, 410], "238": 409, "23e": 409, "62d17c48114500": 409, "24b": 409, "62d17c48116503": 409, "62517c48114506": 409, "62517c48116509": 409, "260": 409, "62d17c48114d01": 409, "267": 409, "62d17c48116d04": 409, "26e": 409, "62517c48114d07": 409, "62517c48116d0a": 409, "27c": 409, "62d17c48115502": 409, "283": 409, "62d17c48117505": 409, "28a": 409, "62517c48115508": 409, "291": 409, "62517c4811750b": 409, "298": [409, 410], "pop": 409, "415f": 409, "29a": 409, "415e": 409, "29c": 409, "415d": 409, "29e": 409, "415c": 409, "2a0": 409, "5d": 409, "2a1": 409, "5b": 409, "2a2": 409, "avx": 409, "c5f877": 409, "vzeroupp": 409, "2a5": 409, "xed3": 409, "stat": 409, "29220": 409, "236418": 409, "118": 409, "2003": 409, "54": [409, 410], "00348609": 410, "601": 410, "00310676": 410, "675": 410, "00261406": 410, "802": 410, "00216633": 410, "968": 410, "068": 410, "00164658": 410, "1273": 410, "0112255": 410, "284": 410, "00947462": 410, "885": 410, "377": 410, "00764146": 410, "1097": 410, "78": 410, "0058452": 410, "1435": 410, "00407149": 410, "2060": 410, "0127448": 410, "658": 410, "198": 410, "0111132": 410, "754": 410, "835": 410, "00940157": 410, "892": 410, "00760217": 410, "1103": 410, "0054935": 410, "1527": 410, "044202": 410, "759": 410, "0364227": 410, "0292454": 410, "1147": 410, "0223472": 410, "1501": 410, "0149058": 410, "2251": 410, "216338": 410, "620": 410, "408": 410, "179593": 410, "345": 410, "135054": 410, "806": 410, "0946983": 410, "1417": 410, "0609701": 410, "2201": 410, "190508": 410, "704": 410, "526": 410, "159566": 410, "841": 410, "130863": 410, "1025": 410, "103927": 410, "1291": 410, "0739962": 410, "1813": 410, "0250395": 410, "753": 410, "784": 410, "0210726": 410, "895": 410, "682": 410, "0170987": 410, "0130778": 410, "1443": 410, "00923343": 410, "2044": 410, "3072": 410, "112882": 410, "668": 410, "818": 410, "0879386": 410, "858": 410, "525": 410, "068835": 410, "1096": 410, "79": 410, "0487342": 410, "1549": 410, "0317559": 410, "2377": 410, "109308": 410, "679": 410, "0922471": 410, "805": 410, "638": 410, "0759107": 410, "0558945": 410, "1329": 410, "61": 410, "0358752": 410, "2071": 410, "57": 410, "00565044": 410, "742": 410, "297": 410, "00503604": 410, "832": 410, "00447544": 410, "937": 410, "182": 410, "00368479": 410, "1138": 410, "00270954": 410, "1547": 410, "0183481": 410, "386": 410, "0154121": 410, "1088": 410, "0125696": 410, "1334": 410, "00959948": 410, "1747": 410, "72": 410, "00677631": 410, "2475": 410, "0206321": 410, "813": 410, "162": 410, "0184267": 410, "483": 410, "0164699": 410, "1018": 410, "66": 410, "0135801": 410, "1235": 410, "010552": 410, "1589": 410, "0721208": 410, "930": 410, "506": 410, "059613": 410, "1125": 410, "0483781": 410, "1387": 410, "0366748": 410, "1829": 410, "83": 410, "0248571": 410, "2699": 410, "376539": 410, "712": 410, "902": 410, "31929": 410, "840": 410, "727": 410, "261265": 410, "1027": 410, "193579": 410, "1386": 410, "118429": 410, "2266": 410, "309195": 410, "177": 410, "256619": 410, "1046": 410, "213454": 410, "1257": 410, "165192": 410, "1624": 410, "118402": 410, "2267": 410, "0402931": 410, "855": 410, "0341169": 410, "0275282": 410, "1371": 410, "0211298": 410, "1786": 410, "0150693": 410, "218765": 410, "215": 410, "180921": 410, "834": 410, "592": 410, "142778": 410, "1057": 410, "097692": 410, "1545": 410, "0620034": 410, "2435": 410, "174101": 410, "853": 410, "73": 410, "148369": 410, "1001": 410, "123554": 410, "1203": 410, "0923655": 410, "1609": 410, "0591283": 410, "2513": 410, "0074474": 410, "844": 410, "00657187": 410, "00570175": 410, "00483104": 410, "1302": 410, "00367406": 410, "1712": 410, "0247063": 410, "0207462": 410, "1213": 410, "03": 410, "0169214": 410, "0129936": 410, "1936": 410, "0090376": 410, "2784": 410, "0275881": 410, "912": 410, "0240415": 410, "77": 410, "0207876": 410, "1210": 410, "0177873": 410, "1414": 410, "0140129": 410, "1795": 410, "0994565": 410, "1012": 410, "0819725": 410, "1228": 410, "0660571": 410, "1523": 410, "0497077": 410, "2025": 410, "0341912": 410, "2944": 410, "500698": 410, "804": 410, "184": 410, "420619": 410, "287": 410, "337529": 410, "1192": 410, "94": 410, "251221": 410, "1602": 410, "158668": 410, "2537": 410, "412912": 410, "155": 410, "346369": 410, "1162": 410, "2831": 410, "1422": 410, "220585": 410, "1825": 410, "156168": 410, "2578": 410, "0538395": 410, "1051": 410, "0455066": 410, "1244": 410, "036978": 410, "1531": 410, "028483": 410, "1987": 410, "0200457": 410, "2824": 410, "283445": 410, "799": 410, "069": 410, "236101": 410, "959": 410, "302": 410, "188745": 410, "1199": 410, "135532": 410, "0845544": 410, "2678": 410, "227976": 410, "977": 410, "19463": 410, "1145": 410, "161251": 410, "1382": 410, "65": 410, "123585": 410, "1804": 410, "0840322": 410, "2653": 410, "00940534": 410, "891": 410, "00821985": 410, "1020": 410, "00701343": 410, "1196": 410, "08": 410, "00579899": 410, "1446": 410, "00464705": 410, "1805": 410, "0336342": 410, "997": 410, "629": 410, "0276086": 410, "1215": 410, "0224431": 410, "1495": 410, "09": 410, "0170807": 410, "1964": 410, "0117535": 410, "2854": 410, "0358603": 410, "0310083": 410, "1082": 410, "0260486": 410, "1288": 410, "0215163": 410, "1559": 410, "0170105": 410, "1972": 410, "133295": 410, "1006": 410, "92": 410, "111186": 410, "1207": 410, "0881114": 410, "0665519": 410, "2016": 410, "0454416": 410, "2953": 410, "611718": 410, "645": 410, "533329": 410, "430288": 410, "1247": 410, "307141": 410, "198987": 410, "2698": 410, "02": [410, 415], "556249": 410, "163": 410, "462737": 410, "1160": 410, "37537": 410, "1430": 410, "28321": 410, "1895": 410, "203901": 410, "2633": 410, "0716356": 410, "1053": 410, "0603517": 410, "1250": 410, "0490096": 410, "1540": 410, "0375683": 410, "2009": 410, "0267483": 410, "2822": 410, "3572": 410, "845": 410, "437": 410, "299561": 410, "1008": 410, "228752": 410, "1320": 410, "165648": 410, "1823": 410, "105656": 410, "2858": 410, "298907": 410, "994": 410, "529": 410, "255598": 410, "1163": 410, "20824": 410, "1427": 410, "159911": 410, "1858": 410, "111211": 410, "2673": 410, "0152997": 410, "685": 410, "358": 410, "0131446": 410, "797": 410, "0109669": 410, "956": 410, "132": 410, "00921101": 410, "00755406": 410, "1388": 410, "0553082": 410, "758": 410, "351": 410, "0458481": 410, "826": 410, "0367258": 410, "1142": 410, "06": 410, "027535": 410, "018464": 410, "2271": 410, "0597882": 410, "0510217": 410, "822": 410, "062": 410, "0421644": 410, "0333436": 410, "0296385": 410, "1415": 410, "22241": 410, "337": 410, "18324": 410, "915": 410, "145322": 410, "1154": 410, "1083": 410, "0728843": 410, "2301": 410, "11793": 410, "600": 410, "929398": 410, "722": 410, "720963": 410, "823": 410, "510039": 410, "1315": 410, "336519": 410, "1994": 410, "909941": 410, "737": 410, "508": 410, "753487": 410, "644": 410, "606477": 410, "459915": 410, "1459": 410, "303455": 410, "2211": 410, "123429": 410, "764": 410, "586": 410, "103035": 410, "923": 410, "0825026": 410, "1143": 410, "0625579": 410, "1508": 410, "0426942": 410, "2210": 410, "60813": 410, "734": 410, "483053": 410, "781": 410, "462": 410, "357348": 410, "1056": 410, "256715": 410, "1470": 410, "169119": 410, "2232": 410, "503341": 410, "738": 410, "42134": 410, "881": 410, "342843": 410, "255199": 410, "1456": 410, "174091": 410, "2134": 410, "0142667": 410, "0123966": 410, "1015": 410, "0105865": 410, "1188": 410, "00860835": 410, "1461": 410, "00655363": 410, "1919": 410, "0532543": 410, "0447548": 410, "1124": 410, "0348388": 410, "1444": 410, "0266886": 410, "1885": 410, "0177431": 410, "2836": 410, "69": 410, "0549107": 410, "916": 410, "608": 410, "0475549": 410, "1058": 410, "0401657": 410, "1253": 410, "0326952": 410, "1539": 410, "025032": 410, "220947": 410, "911": 410, "178324": 410, "1128": 410, "137361": 410, "1465": 410, "103126": 410, "1952": 410, "0701429": 410, "2870": 410, "06648": 410, "755": 410, "893959": 410, "900": 410, "831": 410, "718893": 410, "1120": 410, "537405": 410, "1498": 410, "280686": 410, "2869": 410, "902588": 410, "730678": 410, "582871": 410, "1381": 410, "444133": 410, "298489": 410, "2697": 410, "581": 410, "0955952": 410, "1184": 410, "078109": 410, "1449": 410, "0596185": 410, "1899": 410, "0414047": 410, "2735": 410, "596568": 410, "497127": 410, "396634": 410, "286973": 410, "1578": 410, "167473": 410, "2704": 410, "472466": 410, "943": 410, "787": 410, "391055": 410, "1140": 410, "319865": 410, "1394": 410, "247491": 410, "1801": 410, "169874": 410, "2624": 410, "93": 410, "0213786": 410, "686": 410, "67": 410, "018228": 410, "0152068": 410, "0120525": 410, "1218": 410, "0103961": 410, "1412": 410, "0771592": 410, "761": 410, "0642402": 410, "074": 410, "0514668": 410, "0387886": 410, "1513": 410, "0256871": 410, "2285": 410, "0836219": 410, "702": 410, "0712915": 410, "664": 410, "0589148": 410, "697": 410, "0484067": 410, "0411331": 410, "311691": 410, "569": 410, "256635": 410, "204973": 410, "153086": 410, "1534": 410, "101206": 410, "2320": 410, "59625": 410, "588": 410, "583": 410, "33246": 410, "705": 410, "03849": 410, "703": 410, "738939": 410, "1271": 410, "480308": 410, "1956": 410, "26056": 410, "745": 410, "324": 410, "04874": 410, "842936": 410, "1114": 410, "59": 410, "635554": 410, "1478": 410, "42145": 410, "2229": 410, "174215": 410, "375": 410, "145836": 410, "116701": 410, "1132": 410, "0876727": 410, "1506": 410, "0595001": 410, "2220": 410, "883258": 410, "598": 410, "333": 410, "711146": 410, "743": 410, "543634": 410, "129": 410, "402406": 410, "1313": 410, "266945": 410, "1979": 410, "70404": 410, "592043": 410, "878": 410, "695": 410, "475444": 410, "1094": 410, "358932": 410, "240739": 410, "2160": 410, "0184384": 410, "909": 410, "907": 410, "0158714": 410, "013504": 410, "1242": 410, "0109927": 410, "1526": 410, "00826017": 410, "2031": 410, "061272": 410, "1095": 410, "0609618": 410, "1100": 410, "0467291": 410, "1436": 410, "0340362": 410, "1971": 410, "0231282": 410, "2901": 410, "0717247": 410, "0616923": 410, "1087": 410, "0521595": 410, "1286": 410, "0423267": 410, "1585": 410, "0321109": 410, "2089": 410, "286461": 410, "242512": 410, "181783": 410, "1476": 410, "139021": 410, "1930": 410, "0870121": 410, "3085": 410, "36322": 410, "652": 410, "08991": 410, "880185": 410, "1219": 410, "694533": 410, "366328": 410, "2931": 410, "15748": 410, "927": 410, "937824": 410, "1144": 410, "745357": 410, "1440": 410, "558061": 410, "1924": 410, "391387": 410, "2743": 410, "157349": 410, "616": 410, "129806": 410, "103083": 410, "1464": 410, "0784417": 410, "053639": 410, "2815": 410, "767569": 410, "874": 410, "641585": 410, "941": 410, "387": 410, "488558": 410, "1236": 410, "355651": 410, "1698": 410, "230945": 410, "2615": 410, "611059": 410, "514108": 410, "1156": 410, "416571": 410, "318094": 410, "1869": 410, "225023": 410, "2642": 410, "0375093": 410, "564": 410, "0317602": 410, "0261888": 410, "1281": 410, "0211151": 410, "0158951": 410, "2110": 410, "141333": 410, "949": 410, "133647": 410, "1004": 410, "0999998": 410, "0710327": 410, "1889": 410, "52": 410, "0429916": 410, "3121": 410, "147474": 410, "125344": 410, "1070": 410, "104294": 410, "0849766": 410, "1579": 410, "0624729": 410, "2148": 410, "701639": 410, "765": 410, "534615": 410, "359791": 410, "1492": 410, "2612": 410, "2055": 410, "183193": 410, "2930": 410, "92067": 410, "735": 410, "271": 410, "4402": 410, "880": 410, "046": 410, "69186": 410, "1269": 410, "17436": 410, "1828": 410, "880179": 410, "2439": 410, "62123": 410, "264": 410, "14905": 410, "999": 410, "64253": 410, "1307": 410, "1413": 410, "1881": 410, "771439": 410, "2783": 410, "369429": 410, "451": 410, "288236": 410, "1047": 410, "209526": 410, "1441": 410, "148115": 410, "2038": 410, "106089": 410, "2846": 410, "53204": 410, "465": 410, "28593": 410, "939": 410, "368": 410, "0852": 410, "1113": 410, "685382": 410, "1762": 410, "408357": 410, "2958": 410, "4521": 410, "13466": 410, "853916": 410, "1392": 410, "642672": 410, "1850": 410, "446442": 410, "2663": 410, "0574189": 410, "876": 410, "0460811": 410, "1092": 410, "0389357": 410, "1292": 410, "031279": 410, "0234498": 410, "2146": 410, "204966": 410, "17364": 410, "1159": 410, "141097": 410, "1426": 410, "105192": 410, "1913": 410, "0677766": 410, "2970": 410, "21269": 410, "946": 410, "573": 410, "191564": 410, "1050": 410, "156368": 410, "1287": 410, "1565": 410, "0933565": 410, "2156": 410, "84983": 410, "789777": 410, "1019": 410, "598168": 410, "1346": 410, "433492": 410, "1857": 410, "269504": 410, "2988": 410, "74845": 410, "859": 410, "348": 410, "96945": 410, "811": 410, "505": 410, "77082": 410, "76407": 410, "1826": 410, "09719": 410, "2935": 410, "73162": 410, "00241": 410, "1072": 410, "39024": 410, "77317": 410, "1816": 410, "19536": 410, "2694": 410, "517278": 410, "875": 410, "708": 410, "382208": 410, "1185": 410, "317837": 410, "1425": 410, "233231": 410, "1942": 410, "152925": 410, "2962": 410, "44309": 410, "741": 410, "62409": 410, "1115": 410, "64963": 410, "1098": 410, "03923": 410, "1743": 410, "625089": 410, "2898": 410, "07006": 410, "861": 410, "632": 410, "64247": 410, "1085": 410, "33386": 410, "1337": 410, "994935": 410, "1792": 410, "68383": 410, "2608": 410, "0713578": 410, "940": 410, "0612457": 410, "0516788": 410, "1298": 410, "0414834": 410, "1617": 410, "0309886": 410, "2165": 410, "282241": 410, "951": 410, "085": 410, "238855": 410, "1123": 410, "193713": 410, "1385": 410, "146781": 410, "81": 410, "0938959": 410, "286141": 410, "122": 410, "257138": 410, "1043": 410, "214208": 410, "167575": 410, "1601": 410, "124072": 410, "2163": 410, "21431": 410, "884": 410, "237": 410, "955251": 410, "775294": 410, "1384": 410, "63282": 410, "1696": 410, "37333": 410, "2876": 410, "87335": 410, "317": 410, "65059": 410, "1176": 410, "94733": 410, "1457": 410, "62241": 410, "1637": 410, "47752": 410, "2906": 410, "75786": 410, "83024": 410, "889": 410, "87429": 410, "1108": 410, "87685": 410, "75328": 410, "2449": 410, "718776": 410, "289": 410, "561317": 410, "1076": 410, "429166": 410, "1407": 410, "317204": 410, "1904": 410, "208555": 410, "2896": 410, "94057": 410, "30458": 410, "1048": 410, "6702": 410, "25799": 410, "1920": 410, "84121": 410, "2871": 410, "34423": 410, "711": 410, "77444": 410, "857": 410, "10049": 410, "52509": 410, "926038": 410, "2568": 410, "00203027": 410, "1032": 410, "00198061": 410, "00179382": 410, "1169": 410, "00163713": 410, "1280": [410, 412], "00171023": 410, "1226": 410, "00395783": 410, "2119": 410, "00340452": 410, "2463": 410, "00308582": 410, "2718": 410, "00292684": 410, "2866": 410, "00217889": 410, "3849": 410, "00437142": 410, "1918": 410, "00418212": 410, "2005": 410, "00344785": 410, "2433": 410, "00291005": 410, "2882": 410, "00293671": 410, "2856": 410, "0120946": 410, "2774": 410, "0103377": 410, "3245": 410, "00850778": 410, "3943": 410, "00659512": 410, "5087": 410, "00484669": 410, "6923": 410, "0524509": 410, "2558": 410, "0428737": 410, "3130": 410, "0323642": 410, "4147": 410, "0231199": 410, "5805": 410, "0152199": 410, "8818": 410, "0451228": 410, "2974": 410, "0373823": 410, "3590": 410, "0302746": 410, "4433": 410, "023182": 410, "5789": 410, "0161696": 410, "8300": 410, "00731429": 410, "2580": 410, "00633179": 410, "2980": 410, "00535855": 410, "3522": 410, "00449335": 410, "4200": 410, "00341811": 410, "5521": 410, "0270028": 410, "2795": 410, "02197": 410, "3436": 410, "0177477": 410, "4253": 410, "0131335": 410, "5748": 410, "00897444": 410, "8412": 410, "0257188": 410, "2889": 410, "0218969": 410, "3393": 410, "0180933": 410, "4107": 410, "013742": 410, "5408": 410, "00992419": 410, "7488": 410, "00289114": 410, "1450": 410, "00245821": 410, "00252331": 410, "1662": 410, "00226557": 410, "1851": 410, "00180316": 410, "2326": 410, "00578904": 410, "00500361": 410, "3353": 410, "0042401": 410, "3956": 410, "00350486": 410, "4786": 410, "00297233": 410, "5644": 410, "00693265": 410, "2420": 410, "00593063": 410, "2828": 410, "00526697": 410, "3185": 410, "00480098": 410, "3494": 410, "00385131": 410, "4356": 410, "0193516": 410, "3467": 410, "0166254": 410, "4036": 410, "0132869": 410, "5050": 410, "0106293": 410, "6313": 410, "00759056": 410, "8841": 410, "0977256": 410, "2746": 410, "0813271": 410, "0656322": 410, "4090": 410, "0476463": 410, "5633": 410, "0295362": 410, "9088": 410, "0736189": 410, "3646": 410, "0603789": 410, "4445": 410, "0489938": 410, "5478": 410, "036992": 410, "7256": 410, "0258802": 410, "10372": 410, "0116589": 410, "3237": 410, "00979113": 410, "3855": 410, "00811779": 410, "4650": 410, "00667871": 410, "5652": 410, "00493861": 410, "7643": 410, "0537768": 410, "2807": 410, "0459135": 410, "3288": 410, "03588": 410, "4208": 410, "0252901": 410, "5970": 410, "0167419": 410, "9018": 410, "0407051": 410, "3651": 410, "0342908": 410, "4334": 410, "028568": 410, "5202": 410, "0218703": 410, "6796": 410, "016186": 410, "9183": 410, "0031551": 410, "0029515": 410, "00265488": 410, "2369": 410, "00243581": 410, "2582": 410, "00223598": 410, "2813": 410, "00745008": 410, "3377": 410, "00656544": 410, "3833": 410, "00542595": 410, "4638": 410, "00425647": 410, "5912": 410, "0034657": 410, "7261": 410, "00835933": 410, "3010": 410, "00741956": 410, "3391": 410, "0065352": 410, "3850": 410, "00555918": 410, "4526": 410, "00488058": 410, "5156": 410, "0257262": 410, "3912": 410, "0217468": 410, "4628": 410, "0176505": 410, "5703": 410, "0137122": 410, "7341": 410, "00980134": 410, "10270": 410, "124749": 410, "3227": 410, "103385": 410, "3894": 410, "0832193": 410, "4838": 410, "0626013": 410, "6432": 410, "0397992": 410, "10117": 410, "101071": 410, "3983": 410, "0825665": 410, "4876": 410, "0668515": 410, "6023": 410, "0487727": 410, "8255": 410, "0354192": 410, "11368": 410, "0147718": 410, "0127799": 410, "4430": 410, "0105324": 410, "5376": 410, "00869796": 410, "6509": 410, "00643591": 410, "8798": 410, "0698868": 410, "3240": 410, "0588583": 410, "3848": 410, "0473412": 410, "4784": 410, "0346142": 410, "6543": 410, "0222947": 410, "10159": 410, "0538146": 410, "4142": 410, "0454583": 410, "4904": 410, "0373579": 410, "5968": 410, "0291396": 410, "7651": 410, "0208901": 410, "10672": 410, "00393589": 410, "00332212": 410, "2525": 410, "00317296": 410, "2643": 410, "00269113": 410, "3117": 410, "00235812": 410, "3557": 410, "009382": 410, "3576": 410, "00828943": 410, "4047": 410, "00672351": 410, "4990": 410, "00514768": 410, "6518": 410, "0040612": 410, "8262": 410, "0107115": 410, "3132": 410, "00920252": 410, "00794258": 410, "4224": 410, "00698123": 410, "4806": 410, "00561026": 410, "5980": 410, "0345669": 410, "3882": 410, "0289719": 410, "4632": 410, "0232584": 410, "5770": 410, "0179766": 410, "7466": 410, "0128144": 410, "10474": 410, "158162": 410, "3394": 410, "132552": 410, "4050": 410, "101844": 410, "5271": 410, "080936": 410, "6633": 410, "0530097": 410, "10127": 410, "135839": 410, "3952": 410, "11116": 410, "4829": 410, "0899513": 410, "0633017": 410, "8481": 410, "0467462": 410, "11484": 410, "0192628": 410, "3919": 410, "0164591": 410, "4586": 410, "0135348": 410, "5578": 410, "0107712": 410, "7009": 410, "00761117": 410, "9919": 410, "0854876": 410, "3532": 410, "0747271": 410, "4041": 410, "0604759": 410, "4993": 410, "0417964": 410, "7225": 410, "0275467": 410, "10962": 410, "0713821": 410, "4164": 410, "0600772": 410, "4948": 410, "0496581": 410, "5986": 410, "0381385": 410, "7794": 410, "027025": 410, "10999": 410, "00502473": 410, "2086": 410, "00451855": 410, "00396819": 410, "00338962": 410, "3093": 410, "00315343": 410, "3325": 410, "0147951": 410, "2834": 410, "0126225": 410, "3322": 410, "010269": 410, "4084": 410, "00785878": 410, "5337": 410, "00570293": 410, "7354": 410, "0161691": 410, "2594": 410, "0144483": 410, "2902": 410, "011705": 410, "3583": 410, "0101487": 410, "4132": 410, "00879332": 410, "4769": 410, "0560297": 410, "2994": 410, "0467998": 410, "3584": 410, "0374397": 410, "4481": 410, "028166": 410, "5956": 410, "0192593": 410, "8711": 410, "277815": 410, "2415": 410, "229837": 410, "2919": 410, "1787": 410, "3755": 410, "126545": 410, "5303": 410, "0835321": 410, "8033": 410, "224925": 410, "2983": 410, "184256": 410, "3642": 410, "146452": 410, "4582": 410, "108899": 410, "6162": 410, "0740655": 410, "9060": 410, "0319455": 410, "2954": 410, "0268136": 410, "3519": 410, "0217062": 410, "4347": 410, "0166666": 410, "5662": 410, "0116466": 410, "8102": 410, "150549": 410, "2507": 410, "119951": 410, "3147": 410, "0893092": 410, "4226": 410, "0637226": 410, "5923": 410, "0427839": 410, "8823": 410, "122421": 410, "3035": 410, "102244": 410, "0822007": 410, "4520": 410, "0622484": 410, "5969": 410, "0429436": 410, "8652": 410, "00481074": 410, "00443796": 410, "2835": 410, "00389863": 410, "00343822": 410, "3659": 410, "00297784": 410, "4225": 410, "0145757": 410, "3453": 410, "012078": 410, "4167": 410, "00896329": 410, "5615": 410, "00727645": 410, "6917": 410, "00548478": 410, "9176": 410, "0150624": 410, "3341": 410, "0132428": 410, "3800": 410, "011443": 410, "4398": 410, "0092883": 410, "5418": 410, "00744553": 410, "6759": 410, "0543977": 410, "3701": 410, "0445693": 410, "4517": 410, "0363329": 410, "5541": 410, "0270492": 410, "7442": 410, "0187415": 410, "10742": 410, "267367": 410, "3011": 410, "223615": 410, "3601": 410, "1797": 410, "134716": 410, "5977": 410, "0692752": 410, "11624": 410, "222661": 410, "3616": 410, "179525": 410, "4485": 410, "139298": 410, "5781": 410, "0958787": 410, "8399": 410, "176292": 410, "4568": 410, "0700283": 410, "0258341": 410, "4383": 410, "0207504": 410, "5457": 410, "0161277": 410, "7021": 410, "0116008": 410, "9761": 410, "148512": 410, "3050": 410, "124238": 410, "0995304": 410, "4551": 410, "0714324": 410, "6341": 410, "044154": 410, "10259": 410, "113174": 410, "3940": 410, "0961662": 410, "4636": 410, "0765841": 410, "5822": 410, "0592912": 410, "7520": 410, "0416614": 410, "10703": 410, "00655654": 410, "2239": 410, "00584761": 410, "2510": 410, "00502113": 410, "2923": 410, "00466269": 410, "3148": 410, "00393276": 410, "3732": 410, "0203923": 410, "2879": 410, "0171018": 410, "3433": 410, "0137027": 410, "4285": 410, "0109527": 410, "5361": 410, "00749636": 410, "7833": 410, "0221319": 410, "0193761": 410, "3030": 410, "0158773": 410, "3698": 410, "0134367": 410, "4370": 410, "0116365": 410, "5046": 410, "0780751": 410, "3008": 410, "0651551": 410, "3604": 410, "0521945": 410, "4500": 410, "0394101": 410, "5959": 410, "0262706": 410, "8940": 410, "398509": 410, "2357": 410, "332153": 410, "259051": 410, "3626": 410, "184412": 410, "5094": 410, "119678": 410, "7850": 410, "313656": 410, "2995": 410, "257989": 410, "3641": 410, "206049": 410, "4559": 410, "152848": 410, "6146": 410, "103125": 410, "9110": 410, "0444861": 410, "2969": 410, "037334": 410, "3538": 410, "0302293": 410, "0231979": 410, "5695": 410, "0158702": 410, "8325": 410, "219777": 410, "2404": 410, "17764": 410, "2975": 410, "135864": 410, "3889": 410, "100424": 410, "5262": 410, "0677547": 410, "7799": 410, "172356": 410, "3018": 410, "144231": 410, "3606": 410, "116019": 410, "4483": 410, "0873881": 410, "5953": 410, "0596004": 410, "8728": 410, "00609695": 410, "2751": 410, "00517637": 410, "3241": 410, "00448956": 410, "3736": 410, "00394876": 410, "4248": 410, "00317463": 410, "5284": 410, "0204832": 410, "3276": 410, "0137691": 410, "4873": 410, "0114194": 410, "5876": 410, "00893304": 410, "7512": 410, "00653312": 410, "10272": 410, "0192409": 410, "3487": 410, "0168348": 410, "3986": 410, "0142343": 410, "4714": 410, "0119455": 410, "5617": 410, "00910648": 410, "7369": 410, "0781101": 410, "0614806": 410, "4366": 410, "046201": 410, "5810": 410, "0357023": 410, "7518": 410, "0222103": 410, "12086": 410, "326917": 410, "3284": 410, "273363": 410, "3927": 410, "220994": 410, "4858": 410, "166153": 410, "6462": 410, "0854403": 410, "12567": 410, "311348": 410, "3448": 410, "243012": 410, "4418": 410, "187933": 410, "5713": 410, "126819": 410, "8466": 410, "0855686": 410, "12548": 410, "0404778": 410, "3730": 410, "0329699": 410, "4579": 410, "0265272": 410, "5692": 410, "0207815": 410, "7265": 410, "0139037": 410, "10860": 410, "183003": 410, "161443": 410, "3741": 410, "129767": 410, "4654": 410, "0893345": 410, "6760": 410, "0610684": 410, "9890": 410, "15525": 410, "3829": 410, "125772": 410, "4727": 410, "101434": 410, "5861": 410, "0765083": 410, "7770": 410, "0537321": 410, "11064": 410, "0104209": 410, "3219": 410, "00908195": 410, "3694": 410, "00781277": 410, "4294": 410, "00651108": 410, "5153": 410, "0051719": 410, "6487": 410, "0321377": 410, "4176": 410, "0269904": 410, "4972": 410, "0220014": 410, "6100": 410, "016901": 410, "7941": 410, "0120042": 410, "11180": 410, "0373802": 410, "0314895": 410, "4262": 410, "0266731": 410, "5031": 410, "0217822": 410, "6161": 410, "0168219": 410, "7978": 410, "176031": 410, "3049": 410, "134442": 410, "3993": 410, "0843776": 410, "6362": 410, "0640577": 410, "8381": 410, "043787": 410, "12261": 410, "697876": 410, "3077": 410, "615338": 410, "3489": 410, "350147": 410, "6133": 410, "267289": 410, "8034": 410, "179695": 410, "11950": 410, "703207": 410, "3053": 410, "561805": 410, "3822": 410, "423052": 410, "5076": 410, "254835": 410, "171434": 410, "12526": 410, "0933483": 410, "3235": 410, "0725632": 410, "4161": 410, "0539197": 410, "5600": 410, "0376119": 410, "8029": 410, "0263137": 410, "11476": 410, "407388": 410, "340939": 410, "3543": 410, "261028": 410, "4627": 410, "151649": 410, "7965": 410, "103379": 410, "11684": 410, "358769": 410, "3314": 410, "283046": 410, "4201": 410, "212152": 410, "5604": 410, "158502": 410, "7502": 410, "107514": 410, "11059": 410, "0148329": 410, "0129116": 410, "3898": 410, "0110537": 410, "4553": 410, "00925277": 410, "5439": 410, "00716987": 410, "7019": 410, "0526609": 410, "3823": 410, "0447282": 410, "4501": 410, "0365834": 410, "5503": 410, "0274874": 410, "7324": 410, "0183895": 410, "10947": 410, "0556653": 410, "0465882": 410, "4321": 410, "039411": 410, "5108": 410, "0318745": 410, "6316": 410, "024706": 410, "8148": 410, "263316": 410, "3058": 410, "198303": 410, "4061": 410, "141966": 410, "5672": 410, "105849": 410, "7608": 410, "0687866": 410, "11707": 410, "793822": 410, "4057": 410, "996979": 410, "3230": 410, "54288": 410, "5933": 410, "412174": 410, "7815": 410, "274441": 410, "11737": 410, "03474": 410, "3113": 410, "832701": 410, "3868": 410, "564787": 410, "421781": 410, "7637": 410, "271587": 410, "11860": 410, "130834": 410, "3462": 410, "0943305": 410, "4802": 410, "0760123": 410, "0580473": 410, "7803": 410, "0395342": 410, "11458": 410, "635729": 410, "2850": 410, "379899": 410, "307908": 410, "5884": 410, "233057": 410, "7774": 410, "157518": 410, "11503": 410, "518276": 410, "3441": 410, "422517": 410, "4221": 410, "323476": 410, "5513": 410, "247251": 410, "7213": 410, "163369": 410, "10917": 410, "0192313": 410, "0168147": 410, "3991": 410, "0143274": 410, "4683": 410, "011932": 410, "5624": 410, "00914975": 410, "7334": 410, "0723144": 410, "3712": 410, "0613803": 410, "4373": 410, "050021": 410, "5366": 410, "0376949": 410, "7121": 410, "0249397": 410, "10763": 410, "0796627": 410, "3369": 410, "0616695": 410, "4352": 410, "0521326": 410, "5149": 410, "042188": 410, "0325741": 410, "8240": 410, "380582": 410, "2821": 410, "24038": 410, "4466": 410, "195271": 410, "5498": 410, "146935": 410, "7307": 410, "0948318": 410, "11322": 410, "08794": 410, "3947": 410, "913626": 410, "4701": 410, "737943": 410, "5820": 410, "558473": 410, "7690": 410, "369466": 410, "51009": 410, "2844": 410, "26974": 410, "3382": 410, "778244": 410, "5518": 410, "589803": 410, "7282": 410, "375284": 410, "11444": 410, "160705": 410, "3758": 410, "135495": 410, "4457": 410, "108718": 410, "5555": 410, "0811198": 410, "7445": 410, "0533513": 410, "11320": 410, "614109": 410, "3934": 410, "518614": 410, "418491": 410, "5772": 410, "31592": 410, "7647": 410, "211893": 410, "11401": 410, "836616": 410, "2842": 410, "699579": 410, "3399": 410, "544194": 410, "379699": 410, "228043": 410, "10428": 410, "un": 411, "u": 411, "sparsity_al": 411, "hotmap": 411, "jpg": 411, "x16": 412, "environment_vari": 412, "kernel_typ": [412, 413], "perfom": 412, "introduct": 412, "benchmark_it": 412, "benchmark_no_refresh": 412, "refresh": 412, "kxn": 412, "sparse_ratio": 412, "micro_b": 412, "output_fp32": 412, "micro_oc": 412, "sub_func_level": 412, "3d_infer": 412, "automaticlli": 412, "dsparse_lib_use_amx": 412, "amx_bf16_x16": 412, "output_bf16": 412, "interv": 412, "lower_bound": 412, "upper_bound": 412, "invalid": 412, "fp32_relu": 412, "src_dt": 412, "dst_dt": 412, "tanspos": 412, "4d": 412, "bs0": 412, "bs1": 412, "scr2": 412, "avx512f_p2031_p2013": 412, "has_binary_add": 412, "tile_n": 412, "coeffici": 412, "vnni_noperm_p2031_p1302": 412, "suuport": 412, "d0xd1x": 412, "d0": 412, "dst_type": 412, "padding_mask": 412, "badd_dim": 412, "blank": 412, "large_weight_threshold": 412, "add_bia": 412, "channel_num": 412, "quantize_dim_elt_num": 412, "src_data_typ": 412, "newli": 412, "subdir": 412, "benchmark_dir": 412, "bench_": 412, "test_": 412, "entranc": 412, "get_true_data_": 412, "check_result_": 412, "gen_case_": 412, "run_bench_": 412, "calc_flop": 412, "get_refresh_data_idx": 412, "benchmark_util": 412, "labl": 413, "run_ci": 413, "overwrit": 413, "it_per_cor": 413, "discard": 413, "new_input_fil": 413, "medium_n": 413, "ci": 413, "apach": 414, "copyright": 414, "parti": 414, "accompani": 414, "research": 414, "wish": 414, "bibtex": 414, "misc": 414, "hanwen": 414, "haihao": 414, "shen": 414, "dong": 414, "hengyu": 414, "meng": 414, "wenxin": 414, "zhang": 414, "howpublish": 414, "url": 414, "year": 414, "logo": 414, "atom": 414, "phi": 414, "pentium": 414, "vtune": 414, "corpor": 414, "subsidiari": 414, "toler": 415, "rel": 415, "absolut": [415, 418, 419], "proport": [415, 416], "vision": 417, "speech": 417, "multimod": 417, "text_classifi": 417, "great": 417, "9998425245285034": 417, "believ": 417, "beauti": 417, "evoc": 417, "ve": 417, "seen": 417, "9998886585235596": 417, "bear": 418, "brain": 418, "damag": 418, "hypothesi": 418, "yann": 418, "lecun": 418, "salient": 418, "anywher": 418, "filter": 418, "magnitud": 418, "lowest": 418, "freez": 418, "grouplasso": 418, "hyper": 418, "didn": 418, "pruning_conf": 418, "littl": 419, "degrad": 419, "ex": 419, "affin": 419, "math": 419, "zeropoint": 419, "asymmetr": 419, "overflow": 419, "fp16": 419, "unseen": 419, "peopl": 419, "emul": 419, "fake": 419, "backward": 419, "mimic": 419, "made": 419, "ultim": 419, "either": 419, "pain": 419, "lossi": 419, "fx": 419, "eager": 419, "qat": 419, "site": 420, "secur": 424, "legal": 424, "injector": 426}, "objects": {"": [[352, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [352, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [352, 1, 1, "_CPPv42jd", "jd"], [352, 1, 1, "_CPPv42jd", "jd"], [353, 1, 1, "_CPPv42jd", "jd"], [354, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [355, 1, 1, "_CPPv42jd", "jd"], [355, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [355, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [355, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [355, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [355, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [355, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [355, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [355, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [355, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [355, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [355, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [353, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [353, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [353, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [353, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [353, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [353, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [353, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [353, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [353, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [355, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [355, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [355, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [355, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [355, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [355, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [355, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [355, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [355, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [355, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [355, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [355, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [355, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [352, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [352, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [352, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::cpu_engine_t::create_kernel"], [352, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [352, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [352, 4, 1, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t", "jd::cpu_engine_t::create_stream"], [352, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [352, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [352, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [352, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [353, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [353, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [353, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [353, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [353, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [353, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [353, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [353, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [353, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [353, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [353, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [353, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [353, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [353, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [353, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [353, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [353, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [353, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [353, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [353, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [353, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [353, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [353, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [353, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [353, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [353, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [353, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [352, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [352, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [352, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [352, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [352, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [352, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [352, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [352, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [352, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [352, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [352, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [352, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [352, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [352, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [353, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [353, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [353, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [353, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [353, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [353, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [353, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [353, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [353, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [353, 3, 1, "_CPPv4N2jd9groupnormE", "jd::groupnorm"], [353, 4, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm"], [353, 4, 1, "_CPPv4N2jd9groupnorm9groupnormEv", "jd::groupnorm::groupnorm"], [353, 5, 1, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy", "jd::groupnorm::groupnorm::kdp"], [353, 4, 1, "_CPPv4N2jd9groupnormD0Ev", "jd::groupnorm::~groupnorm"], [353, 3, 1, "_CPPv4N2jd14groupnorm_descE", "jd::groupnorm_desc"], [353, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc"], [353, 4, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv", "jd::groupnorm_desc::groupnorm_desc"], [353, 5, 1, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc", "jd::groupnorm_desc::groupnorm_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd14groupnorm_descD0Ev", "jd::groupnorm_desc::~groupnorm_desc"], [353, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [353, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [353, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [353, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [353, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [353, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [353, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [353, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [353, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [353, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [353, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [353, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [353, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [353, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [353, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute"], [353, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [353, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t", "jd::kernel_proxy::execute::ctx"], [353, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [353, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [353, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [353, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [353, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [353, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [353, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [353, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [353, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [353, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [353, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [353, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [353, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [353, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [353, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [353, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [353, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [353, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [353, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [353, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [353, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [353, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [353, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [353, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [353, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [353, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [353, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [353, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [353, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [353, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [353, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [353, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [353, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [353, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [353, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [353, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [353, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [353, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [353, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [353, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [353, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [353, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [353, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [354, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [354, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [354, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [354, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [354, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [354, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [354, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [354, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [354, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [354, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [354, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [354, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [354, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [354, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [354, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [354, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [354, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [354, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [354, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [354, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [354, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [354, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [354, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [354, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [354, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [354, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [354, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv", "jd::operator_desc::tensor_dtypes"], [354, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv", "jd::operator_desc::tensor_ftypes"], [354, 4, 1, "_CPPv4NK2jd13operator_desc13tensor_shapesEv", "jd::operator_desc::tensor_shapes"], [354, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [354, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [353, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [353, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [353, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [353, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [353, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [353, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [353, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [353, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [353, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [353, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [353, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [353, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [353, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [353, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [353, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [353, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [353, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [353, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [353, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [353, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [353, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [353, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [353, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [353, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [353, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [353, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [353, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [353, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [353, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [353, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [353, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [353, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [353, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [353, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [353, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [353, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [353, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [353, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [353, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [355, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [355, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [355, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [355, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [355, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [355, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [355, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [355, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [355, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [355, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [355, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [355, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [355, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [355, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [355, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [355, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [355, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [355, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [355, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [355, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [355, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [355, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [355, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [355, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [355, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [355, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [355, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [355, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [355, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [355, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [355, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [355, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [355, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [355, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [355, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [355, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [355, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [355, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [355, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [355, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [355, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [355, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [355, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [355, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [355, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [355, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [355, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [355, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [355, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [355, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [355, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [355, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [355, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [355, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [355, 3, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_tE", "jd::ssd::matmul_fp8_data_t"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE", "jd::ssd::matmul_fp8_data_t::alpha"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE", "jd::ssd::matmul_fp8_data_t::astep"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE", "jd::ssd::matmul_fp8_data_t::beta"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE", "jd::ssd::matmul_fp8_data_t::bstep"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE", "jd::ssd::matmul_fp8_data_t::cstep"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE", "jd::ssd::matmul_fp8_data_t::dstep"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE", "jd::ssd::matmul_fp8_data_t::k"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE", "jd::ssd::matmul_fp8_data_t::kpos"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE", "jd::ssd::matmul_fp8_data_t::matA"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE", "jd::ssd::matmul_fp8_data_t::matB"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE", "jd::ssd::matmul_fp8_data_t::matC"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE", "jd::ssd::matmul_fp8_data_t::matD"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE", "jd::ssd::matmul_fp8_data_t::matE"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE", "jd::ssd::matmul_fp8_data_t::n"], [355, 7, 1, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE", "jd::ssd::matmul_fp8_data_t::scale"], [355, 3, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tE", "jd::ssd::matmul_fp8_param_t"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E", "jd::ssd::matmul_fp8_param_t::[anonymous]"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE", "jd::ssd::matmul_fp8_param_t::K"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME", "jd::ssd::matmul_fp8_param_t::M"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE", "jd::ssd::matmul_fp8_param_t::N"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE", "jd::ssd::matmul_fp8_param_t::alpha"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE", "jd::ssd::matmul_fp8_param_t::beta"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE", "jd::ssd::matmul_fp8_param_t::has_append_sum"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E", "jd::ssd::matmul_fp8_param_t::has_scale0"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE", "jd::ssd::matmul_fp8_param_t::postop_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE", "jd::ssd::matmul_fp8_param_t::thread_num"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE", "jd::ssd::matmul_fp8_param_t::weight_8bit"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E", "jd::ssd::matmul_fp8_param_t::weight_bf16"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E", "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E", "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E", "jd::ssd::matmul_fp8_param_t::weight_int8"], [355, 7, 1, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE", "jd::ssd::matmul_fp8_param_t::weight_type"], [355, 1, 1, "_CPPv4N2jd3ssd12matmul_inputE", "jd::ssd::matmul_input"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::APPEND_SUM"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::SCALE0"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::SRC0"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::SRC1"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::SRC2"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::ZP0"], [355, 6, 1, "_CPPv4N2jd3ssd12matmul_input5inputE", "jd::ssd::matmul_input::input"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME", "jd::ssd::matmul_input::input::APPEND_SUM"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E", "jd::ssd::matmul_input::input::SCALE0"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E", "jd::ssd::matmul_input::input::SRC0"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E", "jd::ssd::matmul_input::input::SRC1"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E", "jd::ssd::matmul_input::input::SRC2"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E", "jd::ssd::matmul_input::input::ZP0"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::input::matmul_io_MAX"], [355, 2, 1, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE", "jd::ssd::matmul_input::matmul_io_MAX"], [355, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::APPEND_SUM"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [355, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME", "jd::ssd::matmul_io::io::APPEND_SUM"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [355, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [355, 1, 1, "_CPPv4N2jd3ssd13matmul_outputE", "jd::ssd::matmul_output"], [355, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::DST0"], [355, 6, 1, "_CPPv4N2jd3ssd13matmul_output6outputE", "jd::ssd::matmul_output::output"], [355, 2, 1, "_CPPv4N2jd3ssd13matmul_output6output4DST0E", "jd::ssd::matmul_output::output::DST0"], [355, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [355, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [355, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [355, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [355, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [355, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [355, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [355, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [355, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [355, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [355, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [355, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [355, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [355, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [355, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [355, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [355, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [355, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [355, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [355, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [355, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [355, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [355, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [355, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [355, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [355, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [355, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [355, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [355, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [355, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [355, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [355, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [355, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [355, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [355, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [355, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [355, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [355, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [355, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [355, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [355, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [355, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [355, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [355, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [355, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [355, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [355, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [355, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [355, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [355, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [355, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [355, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [355, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [355, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [355, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [355, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [355, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [355, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [355, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [355, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [355, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [355, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [355, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [355, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [355, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [355, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [355, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [355, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [355, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [355, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [355, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [355, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [355, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [355, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [355, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [355, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [355, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [355, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [355, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [353, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [353, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [353, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [353, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [353, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [353, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [353, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [353, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [353, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [353, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [353, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [353, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [353, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [353, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [353, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [353, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [353, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [353, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [353, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [0, 9, 0, "-", "clang-format"], [1, 9, 0, "-", "convert_falcon"], [2, 9, 0, "-", "convert_gptj"], [3, 9, 0, "-", "convert_gptneox"], [4, 9, 0, "-", "convert_llama"], [5, 9, 0, "-", "convert_mpt"], [6, 9, 0, "-", "gptj_binding"], [221, 9, 0, "-", "intel_extension_for_transformers"], [258, 9, 0, "-", "sparsity_all"], [259, 9, 0, "-", "test_add_cls_token"], [260, 9, 0, "-", "test_add_embeddings"], [261, 9, 0, "-", "test_add_zeros"], [262, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [263, 9, 0, "-", "test_attention_reshape"], [264, 9, 0, "-", "test_baddbmm"], [265, 9, 0, "-", "test_bert_mini_fp32"], [266, 9, 0, "-", "test_binary_op"], [267, 9, 0, "-", "test_binaryop"], [268, 9, 0, "-", "test_cast_to"], [269, 9, 0, "-", "test_concat"], [270, 9, 0, "-", "test_conv"], [271, 9, 0, "-", "test_conv_int8"], [272, 9, 0, "-", "test_conv_reshape"], [273, 9, 0, "-", "test_decoder_attn_reshape"], [274, 9, 0, "-", "test_dispatcher_tuning_acc"], [275, 9, 0, "-", "test_dispatcher_tuning_throughput"], [276, 9, 0, "-", "test_dolly_pattern"], [277, 9, 0, "-", "test_dynamic_quantization"], [278, 9, 0, "-", "test_electra"], [279, 9, 0, "-", "test_embedding"], [280, 9, 0, "-", "test_embeddingbag"], [281, 9, 0, "-", "test_execution_options"], [282, 9, 0, "-", "test_fwk"], [283, 9, 0, "-", "test_gather"], [284, 9, 0, "-", "test_gelu"], [285, 9, 0, "-", "test_gpt_int8"], [286, 9, 0, "-", "test_graph_dispatch"], [287, 9, 0, "-", "test_graph_optimizer"], [288, 9, 0, "-", "test_insert_input_output_data"], [289, 9, 0, "-", "test_is_supported_onnx_graph"], [290, 9, 0, "-", "test_last_layer_shape"], [291, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [292, 9, 0, "-", "test_layer_norm_with_transpose"], [293, 9, 0, "-", "test_layernorm"], [294, 9, 0, "-", "test_linear"], [295, 9, 0, "-", "test_linear_int8"], [296, 9, 0, "-", "test_llama_pattern"], [297, 9, 0, "-", "test_main"], [298, 9, 0, "-", "test_matmul"], [299, 9, 0, "-", "test_matmul_int8"], [300, 9, 0, "-", "test_matmul_with_bias_relu"], [301, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [302, 9, 0, "-", "test_matmul_with_bias_tanh"], [303, 9, 0, "-", "test_merged_embeddingbag"], [304, 9, 0, "-", "test_model"], [305, 9, 0, "-", "test_neox_rotary_pos_emb"], [306, 9, 0, "-", "test_onnx_utils"], [307, 9, 0, "-", "test_operator_adaptor"], [308, 9, 0, "-", "test_ops"], [309, 9, 0, "-", "test_padding_seq"], [310, 9, 0, "-", "test_padding_sequence"], [311, 9, 0, "-", "test_pattern_dispatch"], [312, 9, 0, "-", "test_permute"], [313, 9, 0, "-", "test_position_embeddings"], [314, 9, 0, "-", "test_pow"], [315, 9, 0, "-", "test_primitive_cache_acc"], [316, 9, 0, "-", "test_primitive_cache_throughput"], [317, 9, 0, "-", "test_qkv_merge"], [318, 9, 0, "-", "test_qkv_reshape"], [319, 9, 0, "-", "test_quant_onnx_execute"], [320, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [321, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [322, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [323, 9, 0, "-", "test_size"], [324, 9, 0, "-", "test_slice"], [325, 9, 0, "-", "test_softmax"], [326, 9, 0, "-", "test_start_end_logits"], [327, 9, 0, "-", "test_static_compressed_buffer"], [328, 9, 0, "-", "test_tanh"], [329, 9, 0, "-", "test_text_encoder"], [330, 9, 0, "-", "test_text_encoder_bf16"], [331, 9, 0, "-", "test_tf_utils"], [332, 9, 0, "-", "test_token_type_embeddings"], [333, 9, 0, "-", "test_transpose"], [334, 9, 0, "-", "test_transpose_batch_matmul"], [335, 9, 0, "-", "test_two_linear"], [336, 9, 0, "-", "test_unet"], [337, 9, 0, "-", "test_unet_bf16"], [338, 9, 0, "-", "test_unsqueeze"], [339, 9, 0, "-", "test_vae_decoder"], [340, 9, 0, "-", "test_vae_decoder_bf16"], [341, 9, 0, "-", "test_weight_sharing_acc"], [342, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [343, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [344, 9, 0, "-", "test_weight_sharing_throughput"]], "convert_falcon": [[1, 10, 1, "", "bytes_to_unicode"]], "convert_gptj": [[2, 10, 1, "", "bytes_to_unicode"]], "convert_gptneox": [[3, 10, 1, "", "bytes_to_unicode"]], "convert_llama": [[4, 11, 1, "", "LazyUnpickler"], [4, 11, 1, "", "NEFileType"], [4, 10, 1, "", "bounded_parallel_map"], [4, 10, 1, "", "find_multifile_paths"], [4, 10, 1, "", "handle_quantization"], [4, 10, 1, "", "load_some_model"], [4, 10, 1, "", "nth_multifile_path"]], "convert_llama.LazyUnpickler": [[4, 12, 1, "", "find_class"]], "convert_mpt": [[5, 10, 1, "", "bytes_to_unicode"]], "intel_extension_for_transformers": [[7, 9, 0, "-", "backends"], [212, 9, 0, "-", "evaluation"], [228, 9, 0, "-", "optimization"], [256, 9, 0, "-", "preprocessing"]], "intel_extension_for_transformers.backends": [[207, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[18, 9, 0, "-", "compile"], [207, 10, 1, "", "neural_engine_bin"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[8, 9, 0, "-", "compile"], [9, 9, 0, "-", "dynamic_quantize"], [11, 9, 0, "-", "extractors"], [16, 9, 0, "-", "graph"], [17, 9, 0, "-", "graph_utils"], [19, 9, 0, "-", "loaders"], [21, 9, 0, "-", "logger"], [22, 9, 0, "-", "onnx_utils"], [44, 9, 0, "-", "ops"], [90, 9, 0, "-", "optimizer"], [114, 9, 0, "-", "sub_graph"], [205, 9, 0, "-", "tf_utils"], [206, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[8, 10, 1, "", "compile"], [8, 10, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[10, 9, 0, "-", "extractor"], [12, 9, 0, "-", "onnx_extractor"], [13, 9, 0, "-", "tf_extractor"], [14, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[10, 11, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[12, 11, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[13, 11, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[14, 11, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[15, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[15, 11, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[15, 12, 1, "", "add_config_item"], [15, 12, 1, "", "change_node_input_tensors"], [15, 12, 1, "", "change_node_output_tensors"], [15, 12, 1, "", "dump_tensor"], [15, 12, 1, "", "engine_init"], [15, 12, 1, "", "get_next_node_names"], [15, 12, 1, "", "get_node_by_name"], [15, 12, 1, "", "get_node_id"], [15, 12, 1, "", "get_pre_node_names"], [15, 12, 1, "", "get_sparse_nodes_name"], [15, 12, 1, "", "get_tensor_idx"], [15, 12, 1, "", "graph_dispatch"], [15, 12, 1, "", "graph_init"], [15, 12, 1, "", "inference"], [15, 12, 1, "", "inquire_config_item"], [15, 12, 1, "", "insert_nodes"], [15, 12, 1, "", "modify_node_connections"], [15, 12, 1, "", "remove_nodes"], [15, 12, 1, "", "rename_node"], [15, 12, 1, "", "save"], [15, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[17, 11, 1, "", "LazyImport"], [17, 10, 1, "", "autocast_init"], [17, 10, 1, "", "construct_node"], [17, 10, 1, "", "del_environ_var"], [17, 10, 1, "", "del_environ_vars"], [17, 10, 1, "", "environ_info_init"], [17, 10, 1, "", "get_autocast_info"], [17, 10, 1, "", "get_data_dtype"], [17, 10, 1, "", "get_environ_info"], [17, 10, 1, "", "get_model_fwk_name"], [17, 10, 1, "", "get_quant_info"], [17, 10, 1, "", "insert_environ_info"], [17, 10, 1, "", "insert_pattern"], [17, 10, 1, "", "insert_quant_info"], [17, 10, 1, "", "list2str"], [17, 10, 1, "", "names_from_input"], [17, 10, 1, "", "pattern_mapping"], [17, 10, 1, "", "pattern_mapping_conf_validation"], [17, 10, 1, "", "quant_info_init"], [17, 10, 1, "", "remove_environ_info_item"], [17, 10, 1, "", "remove_environ_info_items"], [17, 10, 1, "", "search_pattern"], [17, 10, 1, "", "search_straight_pattern"], [17, 10, 1, "", "set_autocast"], [17, 10, 1, "", "set_environ_var"], [17, 10, 1, "", "set_environ_vars"], [17, 10, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[20, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[20, 11, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[21, 11, 1, "", "Logger"], [21, 10, 1, "", "debug"], [21, 10, 1, "", "error"], [21, 10, 1, "", "fatal"], [21, 10, 1, "", "info"], [21, 10, 1, "", "log"], [21, 10, 1, "", "warn"], [21, 10, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[21, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[22, 10, 1, "", "bias_to_int32"], [22, 10, 1, "", "change_num_name"], [22, 10, 1, "", "get_children"], [22, 10, 1, "", "get_initializer_children_names"], [22, 10, 1, "", "get_node_children_names"], [22, 10, 1, "", "graph_node_names_details"], [22, 10, 1, "", "is_supported_onnx_graph"], [22, 10, 1, "", "is_supported_onnx_node"], [22, 10, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[23, 9, 0, "-", "all"], [24, 9, 0, "-", "assert"], [25, 9, 0, "-", "baddbmm"], [26, 9, 0, "-", "batch_matmul"], [27, 9, 0, "-", "batch_matmul_v2"], [28, 9, 0, "-", "bias_add"], [29, 9, 0, "-", "binary_op"], [30, 9, 0, "-", "cast"], [31, 9, 0, "-", "concat"], [32, 9, 0, "-", "conv"], [33, 9, 0, "-", "cos"], [34, 9, 0, "-", "empty_ops"], [35, 9, 0, "-", "expand_dims"], [36, 9, 0, "-", "fused_batch_matmul_v2"], [37, 9, 0, "-", "fused_batch_norm_v3"], [38, 9, 0, "-", "fused_gemm"], [39, 9, 0, "-", "fused_matmul"], [40, 9, 0, "-", "gather"], [41, 9, 0, "-", "gather_elements"], [42, 9, 0, "-", "gelu"], [43, 9, 0, "-", "gemm"], [45, 9, 0, "-", "iterator_get_next"], [46, 9, 0, "-", "iterator_v2"], [47, 9, 0, "-", "layer_normalization"], [48, 9, 0, "-", "log_softmax"], [49, 9, 0, "-", "map_and_batch_dataset"], [50, 9, 0, "-", "matmul"], [51, 9, 0, "-", "mean"], [52, 9, 0, "-", "mkl_layer_norm"], [53, 9, 0, "-", "model_dataset"], [54, 9, 0, "-", "one_hot"], [55, 9, 0, "-", "onnx_input"], [56, 9, 0, "-", "op"], [57, 9, 0, "-", "optimize_dataset"], [58, 9, 0, "-", "pack"], [59, 9, 0, "-", "padding_sequence"], [60, 9, 0, "-", "placeholder"], [61, 9, 0, "-", "pos_embed"], [62, 9, 0, "-", "pow"], [63, 9, 0, "-", "quantize_linear"], [64, 9, 0, "-", "quantize_v2"], [65, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [66, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [67, 9, 0, "-", "reduce_mean"], [68, 9, 0, "-", "reduce_sum"], [69, 9, 0, "-", "reorder"], [70, 9, 0, "-", "reshape"], [71, 9, 0, "-", "resize"], [72, 9, 0, "-", "rsub"], [73, 9, 0, "-", "scatter_elements"], [74, 9, 0, "-", "shape"], [75, 9, 0, "-", "sin"], [76, 9, 0, "-", "size"], [77, 9, 0, "-", "slice"], [78, 9, 0, "-", "slice_position_ids"], [79, 9, 0, "-", "softmax"], [80, 9, 0, "-", "split"], [81, 9, 0, "-", "squeeze"], [82, 9, 0, "-", "strided_slice"], [83, 9, 0, "-", "tensor"], [84, 9, 0, "-", "top_k"], [85, 9, 0, "-", "transpose"], [86, 9, 0, "-", "unpack"], [87, 9, 0, "-", "unsqueeze"], [88, 9, 0, "-", "view"], [89, 9, 0, "-", "where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[23, 11, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[24, 11, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[25, 11, 1, "", "Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[26, 11, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[26, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[27, 11, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[28, 11, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[28, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[29, 11, 1, "", "BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[30, 11, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[31, 11, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[32, 11, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[33, 11, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[34, 11, 1, "", "Add"], [34, 11, 1, "", "AddV2"], [34, 11, 1, "", "Arange"], [34, 11, 1, "", "BinaryAdd"], [34, 11, 1, "", "Constant"], [34, 11, 1, "", "ConstantOfShape"], [34, 11, 1, "", "Convolution"], [34, 11, 1, "", "CumSum"], [34, 11, 1, "", "Dequantize"], [34, 11, 1, "", "DequantizeLinear"], [34, 11, 1, "", "Einsum"], [34, 11, 1, "", "EmbeddingBag"], [34, 11, 1, "", "Erf"], [34, 11, 1, "", "Expand"], [34, 11, 1, "", "ExpandIndices"], [34, 11, 1, "", "Fill"], [34, 11, 1, "", "FlatMapDataset"], [34, 11, 1, "", "Flatten"], [34, 11, 1, "", "Floor_divide"], [34, 11, 1, "", "Identity"], [34, 11, 1, "", "InnerProduct"], [34, 11, 1, "", "Input"], [34, 11, 1, "", "LatRange"], [34, 11, 1, "", "ListConstruct"], [34, 11, 1, "", "ListUnpack"], [34, 11, 1, "", "Loop"], [34, 11, 1, "", "MakeIterator"], [34, 11, 1, "", "Masked_fill"], [34, 11, 1, "", "MatMulWithBias"], [34, 11, 1, "", "MatMulWithBiasAdd"], [34, 11, 1, "", "MatMulWithBiasGelu"], [34, 11, 1, "", "MatMulWithBiasRelu"], [34, 11, 1, "", "MatMulWithBiasSigmoid"], [34, 11, 1, "", "MatMulWithBiasTanh"], [34, 11, 1, "", "Matmul"], [34, 11, 1, "", "Max"], [34, 11, 1, "", "MergedEmbeddingbag"], [34, 11, 1, "", "MultiHeadAttenion"], [34, 11, 1, "", "Onehot"], [34, 11, 1, "", "OpAny"], [34, 11, 1, "", "Output"], [34, 11, 1, "", "PositionIds"], [34, 11, 1, "", "QLinearAdd"], [34, 11, 1, "", "QLinearMatMul"], [34, 11, 1, "", "QLinearMul"], [34, 11, 1, "", "Range"], [34, 11, 1, "", "RealDiv"], [34, 11, 1, "", "Reciprocal"], [34, 11, 1, "", "Relu"], [34, 11, 1, "", "Repeat"], [34, 11, 1, "", "Rsqrt"], [34, 11, 1, "", "SequenceLength"], [34, 11, 1, "", "Sigmoid"], [34, 11, 1, "", "Silu"], [34, 11, 1, "", "Sqrt"], [34, 11, 1, "", "Square"], [34, 11, 1, "", "SquaredDifference"], [34, 11, 1, "", "Stack"], [34, 11, 1, "", "StopGradient"], [34, 11, 1, "", "Tanh"], [34, 11, 1, "", "TensorSliceDataset"], [34, 11, 1, "", "Tile"], [34, 11, 1, "", "TokenTypeIds"], [34, 11, 1, "", "TransposeBatchMatMul"], [34, 11, 1, "", "Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[35, 11, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[37, 11, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[38, 11, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[39, 11, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[40, 11, 1, "", "Gather"], [40, 11, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[41, 11, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[42, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[43, 11, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[45, 11, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[46, 11, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[47, 11, 1, "", "LayerNorm"], [47, 11, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm": [[47, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[47, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[48, 11, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[49, 11, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[50, 11, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[51, 11, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[53, 11, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[54, 11, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[55, 11, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[55, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[56, 11, 1, "", "Operator"], [56, 10, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[56, 12, 1, "", "construct"], [56, 12, 1, "", "extract"], [56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[57, 11, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[57, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[58, 11, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[59, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[60, 11, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[61, 11, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[62, 11, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[63, 11, 1, "", "Quantize"], [63, 11, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[64, 11, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[66, 11, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[67, 11, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[68, 11, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[68, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[69, 11, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[70, 11, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[71, 11, 1, "", "Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[72, 11, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[73, 11, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[73, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[74, 11, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[75, 11, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[76, 11, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[77, 11, 1, "", "Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[78, 11, 1, "", "SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[79, 11, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[79, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[80, 11, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[80, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[81, 11, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[81, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[82, 11, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[82, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[83, 11, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[84, 11, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[84, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[85, 11, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[85, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[86, 11, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[86, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[87, 11, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[87, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[88, 11, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[88, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[89, 11, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where": [[89, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[90, 11, 1, "", "Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer": [[90, 12, 1, "", "optimize"], [90, 12, 1, "", "weight_optimization"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[91, 9, 0, "-", "InnerproductReshapeFusion"], [92, 9, 0, "-", "add_cls_token"], [93, 9, 0, "-", "add_embeddings"], [94, 9, 0, "-", "arangewithreciprocal"], [95, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [96, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [97, 9, 0, "-", "attentionBlock_QKVPreReshape"], [98, 9, 0, "-", "attentionBlock_QKVReshape"], [99, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [100, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [101, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [102, 9, 0, "-", "attention_reshape"], [103, 9, 0, "-", "cast_to"], [104, 9, 0, "-", "collect_quant_info"], [105, 9, 0, "-", "conv_reshape"], [106, 9, 0, "-", "decoder_attn_reshape"], [107, 9, 0, "-", "einsumwitharange"], [108, 9, 0, "-", "embeddingbag"], [109, 9, 0, "-", "embeddings_to_2d_before_inner_product"], [110, 9, 0, "-", "gelu"], [111, 9, 0, "-", "generate_sequence"], [112, 9, 0, "-", "groupNorm"], [113, 9, 0, "-", "groupNormSwish"], [115, 9, 0, "-", "innerproductwithbiasgelu"], [116, 9, 0, "-", "innerproductwithslice"], [117, 9, 0, "-", "innerproductwithswish"], [118, 9, 0, "-", "input_data"], [119, 9, 0, "-", "input_file"], [120, 9, 0, "-", "insert_bf16_node"], [121, 9, 0, "-", "insert_quant_node"], [122, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [123, 9, 0, "-", "interact_features"], [124, 9, 0, "-", "last_layer_shape"], [125, 9, 0, "-", "layer_norm"], [126, 9, 0, "-", "layer_norm_with_reduce_mean"], [127, 9, 0, "-", "layer_norm_with_transpose"], [128, 9, 0, "-", "llama_embeding"], [129, 9, 0, "-", "llama_matmulwithtranspose"], [130, 9, 0, "-", "llama_postprocess"], [131, 9, 0, "-", "llama_rotary_pos_emb"], [132, 9, 0, "-", "lower_all_tuples"], [133, 9, 0, "-", "matmul_with_bias"], [134, 9, 0, "-", "matmul_with_bias_add"], [135, 9, 0, "-", "matmul_with_bias_gelu"], [136, 9, 0, "-", "matmul_with_bias_relu"], [137, 9, 0, "-", "matmul_with_bias_sigmoid"], [138, 9, 0, "-", "matmul_with_bias_tanh"], [139, 9, 0, "-", "matmul_with_bias_unsqueeze"], [140, 9, 0, "-", "matmul_with_transpose"], [141, 9, 0, "-", "matmul_with_transpose_scale_add"], [142, 9, 0, "-", "merged_embeddingbag"], [143, 9, 0, "-", "multi_head_attention"], [144, 9, 0, "-", "neox_reorder_change"], [145, 9, 0, "-", "neox_rotary_pos_emb"], [146, 9, 0, "-", "operator_adaptor"], [147, 9, 0, "-", "output_data"], [148, 9, 0, "-", "padding_sequence"], [149, 9, 0, "-", "pattern"], [150, 9, 0, "-", "position_embeddings"], [151, 9, 0, "-", "position_embeddings_v1"], [152, 9, 0, "-", "qkv_merge"], [153, 9, 0, "-", "qkv_reshape"], [154, 9, 0, "-", "quant_gather_to_bf16"], [155, 9, 0, "-", "quantize_fusion"], [156, 9, 0, "-", "quantized_graph_dtype_refactor"], [157, 9, 0, "-", "remove_constant_op"], [158, 9, 0, "-", "remove_last_view"], [159, 9, 0, "-", "remove_range"], [160, 9, 0, "-", "remove_unused_operator"], [161, 9, 0, "-", "remove_zeros"], [162, 9, 0, "-", "removeslice"], [163, 9, 0, "-", "reshape_after_restore_hidden_states"], [164, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [165, 9, 0, "-", "reshape_before_restore_hidden_states"], [166, 9, 0, "-", "reshape_fusion"], [167, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [168, 9, 0, "-", "rms_norm"], [169, 9, 0, "-", "rotary_pos_emb"], [170, 9, 0, "-", "slicemask"], [171, 9, 0, "-", "stableDiffusion_ExplicitNHWCTranspose"], [172, 9, 0, "-", "stableDiffusion_MHA"], [173, 9, 0, "-", "stableDiffusion_MHAReshape"], [174, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [175, 9, 0, "-", "stableDiffusion_bf16Convert"], [176, 9, 0, "-", "start_end_logits"], [177, 9, 0, "-", "subgraph_matcher"], [178, 9, 0, "-", "textEncdoer_word_embedding"], [179, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [180, 9, 0, "-", "textEncoder_AttentionReshape"], [181, 9, 0, "-", "textEncoder_KVReshape"], [182, 9, 0, "-", "textEncoder_MulReshape"], [183, 9, 0, "-", "textEncoder_QReshape"], [184, 9, 0, "-", "textEncoder_SoftmaxReshape"], [185, 9, 0, "-", "textEncoder_causal_attention_mask"], [186, 9, 0, "-", "token_type_embeddings"], [187, 9, 0, "-", "token_type_embeddings_v1"], [188, 9, 0, "-", "torch_embedding"], [189, 9, 0, "-", "torch_ip_insert_bias"], [190, 9, 0, "-", "torch_unpack_baddbmm"], [191, 9, 0, "-", "torchinsertbf16node"], [192, 9, 0, "-", "torchpaddingsquence"], [193, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [194, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [195, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [196, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [197, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [198, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [199, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [200, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [201, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [202, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [203, 9, 0, "-", "transpose_batch_matmul"], [204, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[91, 11, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[92, 11, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[93, 11, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[94, 11, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[95, 11, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[96, 11, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[97, 11, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[98, 11, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[99, 11, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[100, 11, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[101, 11, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[102, 11, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[103, 11, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[104, 11, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[105, 11, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[106, 11, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[107, 11, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[108, 11, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[109, 11, 1, "", "EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[110, 11, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[111, 11, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[112, 11, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[113, 11, 1, "", "GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[115, 11, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[116, 11, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[117, 11, 1, "", "InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[118, 11, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[119, 11, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[120, 11, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[121, 11, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[122, 11, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[123, 11, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[124, 11, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[125, 11, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[126, 11, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[127, 11, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[128, 11, 1, "", "LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[129, 11, 1, "", "LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[130, 11, 1, "", "LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[131, 11, 1, "", "LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[132, 11, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[133, 11, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[134, 11, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[135, 11, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[136, 11, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[137, 11, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[138, 11, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[139, 11, 1, "", "MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[140, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[141, 11, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[142, 11, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[143, 11, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[144, 11, 1, "", "NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[145, 11, 1, "", "NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[146, 11, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[147, 11, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[148, 11, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[149, 11, 1, "", "Pattern"], [149, 10, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[150, 11, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[151, 11, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[152, 11, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[153, 11, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[154, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[155, 11, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[156, 11, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[157, 11, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[158, 11, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[159, 11, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[160, 11, 1, "", "RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[161, 11, 1, "", "RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[162, 11, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[163, 11, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[164, 11, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[165, 11, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[166, 11, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[167, 11, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[168, 11, 1, "", "RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[169, 11, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[170, 11, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[171, 11, 1, "", "ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[172, 11, 1, "", "StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[173, 11, 1, "", "StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[174, 11, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[175, 11, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[176, 11, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[177, 11, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[178, 11, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[179, 11, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[180, 11, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[181, 11, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[182, 11, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[183, 11, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[184, 11, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[185, 11, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[186, 11, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[187, 11, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[188, 11, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[189, 11, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[190, 11, 1, "", "TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[191, 11, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[192, 11, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[193, 11, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[194, 11, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[195, 11, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[196, 11, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[197, 11, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[198, 11, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[199, 11, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[200, 11, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[201, 11, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[202, 11, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[203, 11, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[204, 11, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[205, 13, 1, "", "TF_DTYPE_ID"], [205, 10, 1, "", "create_tf_node"], [205, 10, 1, "", "get_tensor_dest_op"], [205, 10, 1, "", "graph_node_names_details"], [205, 10, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[206, 10, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[211, 9, 0, "-", "hf_eval"], [214, 9, 0, "-", "lm_code_eval"], [216, 9, 0, "-", "lm_eval"]], "intel_extension_for_transformers.evaluation.hf_eval": [[208, 9, 0, "-", "evaluator"], [210, 9, 0, "-", "hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[209, 9, 0, "-", "cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[209, 11, 1, "", "DataCollatorForSupervisedDataset"], [209, 10, 1, "", "preprocess"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[213, 9, 0, "-", "evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[213, 10, 1, "", "evaluate"], [213, 10, 1, "", "pattern_match"]], "intel_extension_for_transformers.evaluation.lm_eval": [[215, 9, 0, "-", "evaluator"], [218, 9, 0, "-", "models"], [219, 9, 0, "-", "tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[215, 10, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[217, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[217, 11, 1, "", "AutoCausalLM"], [217, 11, 1, "", "AutoSeq2SeqLM"], [217, 11, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[220, 9, 0, "-", "lambada"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[220, 11, 1, "", "LambadaOpenAI"], [220, 11, 1, "", "LambadaStandard"]], "intel_extension_for_transformers.optimization": [[222, 9, 0, "-", "benchmark"], [223, 9, 0, "-", "config"], [224, 9, 0, "-", "distillation"], [227, 9, 0, "-", "dynamic"], [230, 9, 0, "-", "mixture"], [231, 9, 0, "-", "model"], [232, 9, 0, "-", "modeling"], [236, 9, 0, "-", "nas"], [238, 9, 0, "-", "optimizer"], [239, 9, 0, "-", "optimizer_tf"], [240, 9, 0, "-", "pipeline"], [241, 9, 0, "-", "pruner"], [243, 9, 0, "-", "pruning"], [244, 9, 0, "-", "quantization"], [245, 9, 0, "-", "trainer"], [247, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[222, 10, 1, "", "benchmark"], [222, 10, 1, "", "get_example_inputs"], [222, 10, 1, "", "preprocess_model"], [222, 10, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[223, 11, 1, "", "AutoDistillationConfig"], [223, 11, 1, "", "BenchmarkConfig"], [223, 11, 1, "", "DistillationConfig"], [223, 11, 1, "", "DynamicLengthConfig"], [223, 11, 1, "", "FlashDistillationConfig"], [223, 11, 1, "", "NASConfig"], [223, 11, 1, "", "Provider"], [223, 11, 1, "", "PrunerV2"], [223, 11, 1, "", "PruningConfig"], [223, 11, 1, "", "QuantizationConfig"], [223, 11, 1, "", "TFDistillationConfig"], [223, 11, 1, "", "WeightPruningConfig"], [223, 10, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[223, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[224, 11, 1, "", "Criterion"], [224, 11, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[225, 9, 0, "-", "drop_and_restore_utils"], [226, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[225, 10, 1, "", "sample_layer_configuration"], [225, 10, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[226, 11, 1, "", "Evolution"], [226, 10, 1, "", "approx_ratio"], [226, 10, 1, "", "inverse"], [226, 10, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[226, 12, 1, "", "add_gene"], [226, 12, 1, "", "convex_hull"], [226, 12, 1, "", "crossover"], [226, 12, 1, "", "get_store"], [226, 12, 1, "", "load_store"], [226, 12, 1, "", "mutate"], [226, 12, 1, "", "pareto_frontier"], [226, 12, 1, "", "save_population"], [226, 12, 1, "", "save_store"], [226, 12, 1, "", "set_lower_constraint"], [226, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[229, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[229, 11, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[229, 12, 1, "", "create_distillers"], [229, 12, 1, "", "estimate"], [229, 12, 1, "", "init_by_cfg"], [229, 12, 1, "", "load_search_results"], [229, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[231, 11, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[231, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.modeling": [[233, 9, 0, "-", "modeling_base_seq2seq"], [234, 9, 0, "-", "modeling_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[234, 11, 1, "", "INCDecoder"], [234, 11, 1, "", "INCEncoder"]], "intel_extension_for_transformers.optimization.nas": [[235, 9, 0, "-", "basic_nas"], [237, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[235, 11, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[235, 12, 1, "", "estimate"], [235, 12, 1, "", "execute"], [235, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[237, 11, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[238, 11, 1, "", "NoTrainerOptimizer"], [238, 11, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[238, 12, 1, "", "distill"], [238, 12, 1, "", "init_distiller"], [238, 12, 1, "", "init_pruner"], [238, 12, 1, "", "init_quantizer"], [238, 12, 1, "", "prune"], [238, 12, 1, "", "quantize"], [238, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[238, 12, 1, "", "fit"], [238, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[239, 11, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[239, 12, 1, "", "autodistill"], [239, 12, 1, "", "build_train_func"], [239, 12, 1, "", "builtin_eval_func"], [239, 12, 1, "", "distill"], [239, 12, 1, "", "init_distiller"], [239, 12, 1, "", "init_pruner"], [239, 12, 1, "", "init_quantizer"], [239, 12, 1, "", "model_builder_builtin"], [239, 12, 1, "", "prune"], [239, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[240, 10, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruner": [[242, 9, 0, "-", "pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[242, 11, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pruner.pruning.Pruning": [[242, 14, 1, "", "config_file_path"], [242, 12, 1, "", "get_sparsity_ratio"], [242, 14, 1, "", "model"], [242, 12, 1, "", "on_after_eval"], [242, 12, 1, "", "on_after_optimizer_step"], [242, 12, 1, "", "on_before_eval"], [242, 12, 1, "", "on_before_optimizer_step"], [242, 12, 1, "", "on_epoch_begin"], [242, 12, 1, "", "on_epoch_end"], [242, 12, 1, "", "on_step_begin"], [242, 12, 1, "", "on_step_end"], [242, 12, 1, "", "on_train_begin"], [242, 12, 1, "", "on_train_end"], [242, 14, 1, "", "pruner_info"], [242, 14, 1, "", "pruners"], [242, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pruning": [[243, 11, 1, "", "PrunerConfig"], [243, 11, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.quantization": [[244, 11, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[245, 11, 1, "", "BaseTrainer"], [245, 11, 1, "", "NLPSeq2SeqTrainer"], [245, 11, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[245, 12, 1, "", "auto_distil_evaluation_loop"], [245, 12, 1, "", "autodistillation"], [245, 12, 1, "", "benchmark"], [245, 12, 1, "", "builtin_eval_func"], [245, 12, 1, "", "builtin_train_func"], [245, 12, 1, "", "compute_loss"], [245, 12, 1, "", "create_optimizer_builtin"], [245, 12, 1, "", "distill"], [245, 12, 1, "", "export_to_bf16_onnx"], [245, 12, 1, "", "export_to_fp32_onnx"], [245, 12, 1, "", "export_to_int8_onnx"], [245, 12, 1, "", "export_to_jit"], [245, 12, 1, "", "export_to_onnx"], [245, 12, 1, "", "init_distiller"], [245, 12, 1, "", "init_pruner"], [245, 12, 1, "", "init_quantizer"], [245, 12, 1, "", "model_builder_builtin"], [245, 12, 1, "", "nas"], [245, 12, 1, "", "orchestrate_optimizations"], [245, 12, 1, "", "prune"], [245, 12, 1, "", "quantize"], [245, 12, 1, "", "run_evolutionary_search"], [245, 12, 1, "", "set_dynamic_config"], [245, 12, 1, "", "train"], [245, 12, 1, "", "training_step"], [245, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[245, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[246, 9, 0, "-", "get_throughput"], [248, 9, 0, "-", "metrics"], [249, 9, 0, "-", "models"], [252, 9, 0, "-", "objectives"], [253, 9, 0, "-", "utility"], [254, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[248, 11, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[250, 9, 0, "-", "modeling_bert_dynamic"], [251, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[250, 11, 1, "", "BertAttention"], [250, 11, 1, "", "BertEmbeddings"], [250, 11, 1, "", "BertEncoder"], [250, 11, 1, "", "BertForMaskedLM"], [250, 11, 1, "", "BertForMultipleChoice"], [250, 11, 1, "", "BertForNextSentencePrediction"], [250, 11, 1, "", "BertForPreTraining"], [250, 11, 1, "", "BertForPreTrainingOutput"], [250, 11, 1, "", "BertForQuestionAnswering"], [250, 11, 1, "", "BertForSequenceClassification"], [250, 11, 1, "", "BertForTokenClassification"], [250, 11, 1, "", "BertIntermediate"], [250, 11, 1, "", "BertLMHeadModel"], [250, 11, 1, "", "BertLMPredictionHead"], [250, 11, 1, "", "BertLayer"], [250, 11, 1, "", "BertModel"], [250, 11, 1, "", "BertOnlyMLMHead"], [250, 11, 1, "", "BertOnlyNSPHead"], [250, 11, 1, "", "BertOutput"], [250, 11, 1, "", "BertPooler"], [250, 11, 1, "", "BertPreTrainedModel"], [250, 11, 1, "", "BertPreTrainingHeads"], [250, 11, 1, "", "BertPredictionHeadTransform"], [250, 11, 1, "", "BertSelfAttention"], [250, 11, 1, "", "BertSelfOutput"], [250, 10, 1, "", "expand_gather"], [250, 10, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_output_embeddings"], [250, 12, 1, "", "prepare_inputs_for_generation"], [250, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_output_embeddings"], [250, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_output_embeddings"], [250, 12, 1, "", "prepare_inputs_for_generation"], [250, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[250, 12, 1, "", "feed_forward_chunk"], [250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "get_input_embeddings"], [250, 12, 1, "", "set_input_embeddings"], [250, 12, 1, "", "set_length_config"], [250, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[250, 12, 1, "", "forward"], [250, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[250, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[251, 11, 1, "", "RobertaAttention"], [251, 11, 1, "", "RobertaClassificationHead"], [251, 11, 1, "", "RobertaEmbeddings"], [251, 11, 1, "", "RobertaEncoder"], [251, 11, 1, "", "RobertaForCausalLM"], [251, 11, 1, "", "RobertaForMaskedLM"], [251, 11, 1, "", "RobertaForMultipleChoice"], [251, 11, 1, "", "RobertaForQuestionAnswering"], [251, 11, 1, "", "RobertaForSequenceClassification"], [251, 11, 1, "", "RobertaForTokenClassification"], [251, 11, 1, "", "RobertaIntermediate"], [251, 11, 1, "", "RobertaLMHead"], [251, 11, 1, "", "RobertaLayer"], [251, 11, 1, "", "RobertaModel"], [251, 11, 1, "", "RobertaOutput"], [251, 11, 1, "", "RobertaPooler"], [251, 11, 1, "", "RobertaPreTrainedModel"], [251, 11, 1, "", "RobertaSelfAttention"], [251, 11, 1, "", "RobertaSelfOutput"], [251, 10, 1, "", "create_position_ids_from_input_ids"], [251, 10, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[251, 12, 1, "", "create_position_ids_from_inputs_embeds"], [251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_output_embeddings"], [251, 12, 1, "", "prepare_inputs_for_generation"], [251, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_output_embeddings"], [251, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[251, 12, 1, "", "feed_forward_chunk"], [251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "get_input_embeddings"], [251, 12, 1, "", "set_input_embeddings"], [251, 12, 1, "", "set_length_config"], [251, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[251, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[251, 12, 1, "", "forward"], [251, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[251, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[252, 11, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[252, 12, 1, "", "modelsize"], [252, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[253, 10, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[254, 11, 1, "", "TFDataloader"], [254, 10, 1, "", "distributed_init"], [254, 10, 1, "", "get_filepath"], [254, 10, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[255, 9, 0, "-", "data_augmentation"], [257, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[255, 11, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[255, 12, 1, "", "data_augment"], [255, 12, 1, "", "mit_data_augmentation"], [255, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[257, 11, 1, "", "AugmenterType"], [257, 10, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[259, 11, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[260, 11, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_add_zeros": [[261, 11, 1, "", "TestTorchOP"]], "test_add_zeros.TestTorchOP": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[262, 11, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[263, 11, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_baddbmm": [[264, 11, 1, "", "TestTorchOP"]], "test_baddbmm.TestTorchOP": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[265, 11, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_binary_op": [[266, 11, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[266, 12, 1, "", "setUpClass"], [266, 12, 1, "", "tearDownClass"]], "test_binaryop": [[267, 11, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_cast_to": [[268, 11, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_concat": [[269, 11, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_conv": [[270, 11, 1, "", "TestTorchOP"]], "test_conv.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_conv_int8": [[271, 11, 1, "", "TestTorchOP"]], "test_conv_int8.TestTorchOP": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[272, 11, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[273, 11, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[274, 11, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[275, 11, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_dolly_pattern": [[276, 11, 1, "", "TestTorchOP"]], "test_dolly_pattern.TestTorchOP": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[277, 11, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_electra": [[278, 11, 1, "", "TestElectra"]], "test_electra.TestElectra": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_embedding": [[279, 11, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[280, 11, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_execution_options": [[281, 11, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_fwk": [[282, 11, 1, "", "TestFWK"]], "test_fwk.TestFWK": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_gather": [[283, 11, 1, "", "TestTorchOP"]], "test_gather.TestTorchOP": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_gelu": [[284, 11, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[285, 11, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[286, 11, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_graph_optimizer": [[287, 11, 1, "", "TestExecutionOptions"]], "test_graph_optimizer.TestExecutionOptions": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[288, 11, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[289, 11, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"], [289, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[290, 11, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[291, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[292, 11, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_layernorm": [[293, 11, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_linear": [[294, 11, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[295, 11, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_llama_pattern": [[296, 11, 1, "", "TestTorchOP"]], "test_llama_pattern.TestTorchOP": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_main": [[297, 11, 1, "", "TestMain"]], "test_main.TestMain": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_matmul": [[298, 11, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[299, 11, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[300, 11, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[301, 11, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[302, 11, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[303, 11, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[303, 12, 1, "", "setUpClass"], [303, 12, 1, "", "tearDownClass"]], "test_neox_rotary_pos_emb": [[305, 11, 1, "", "TestTorchOP"]], "test_neox_rotary_pos_emb.TestTorchOP": [[305, 12, 1, "", "setUpClass"], [305, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[306, 11, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[306, 12, 1, "", "setUpClass"], [306, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[307, 11, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[307, 12, 1, "", "setUpClass"], [307, 12, 1, "", "tearDownClass"]], "test_ops": [[308, 11, 1, "", "TestOps"]], "test_ops.TestOps": [[308, 12, 1, "", "setUpClass"], [308, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[309, 11, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[309, 12, 1, "", "setUpClass"], [309, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[310, 11, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[310, 12, 1, "", "setUpClass"], [310, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[311, 11, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[311, 12, 1, "", "setUpClass"], [311, 12, 1, "", "tearDownClass"]], "test_permute": [[312, 11, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[312, 12, 1, "", "setUpClass"], [312, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[313, 11, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[313, 12, 1, "", "setUpClass"], [313, 12, 1, "", "tearDownClass"]], "test_pow": [[314, 11, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[314, 12, 1, "", "setUpClass"], [314, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[315, 11, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[315, 12, 1, "", "setUpClass"], [315, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[316, 11, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[316, 12, 1, "", "setUpClass"], [316, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[317, 11, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[317, 12, 1, "", "setUpClass"], [317, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[318, 11, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[318, 12, 1, "", "setUpClass"], [318, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[319, 11, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[319, 12, 1, "", "setUpClass"], [319, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[320, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[320, 12, 1, "", "setUpClass"], [320, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[321, 11, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[321, 12, 1, "", "setUpClass"], [321, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[322, 11, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[322, 12, 1, "", "setUpClass"], [322, 12, 1, "", "tearDownClass"]], "test_size": [[323, 11, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[323, 12, 1, "", "setUpClass"], [323, 12, 1, "", "tearDownClass"]], "test_slice": [[324, 11, 1, "", "TestTorchOP"]], "test_slice.TestTorchOP": [[324, 12, 1, "", "setUpClass"], [324, 12, 1, "", "tearDownClass"]], "test_softmax": [[325, 11, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[325, 12, 1, "", "setUpClass"], [325, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[326, 11, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[326, 12, 1, "", "setUpClass"], [326, 12, 1, "", "tearDownClass"]], "test_static_compressed_buffer": [[327, 11, 1, "", "TestSCBuffer"]], "test_static_compressed_buffer.TestSCBuffer": [[327, 12, 1, "", "setUpClass"], [327, 12, 1, "", "tearDownClass"]], "test_tanh": [[328, 11, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[328, 12, 1, "", "setUpClass"], [328, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[329, 11, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[329, 12, 1, "", "setUpClass"], [329, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[330, 11, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[330, 12, 1, "", "setUpClass"], [330, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[331, 11, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[331, 12, 1, "", "setUpClass"], [331, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[332, 11, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[332, 12, 1, "", "setUpClass"], [332, 12, 1, "", "tearDownClass"]], "test_transpose": [[333, 11, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[333, 12, 1, "", "setUpClass"], [333, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[334, 11, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[334, 12, 1, "", "setUpClass"], [334, 12, 1, "", "tearDownClass"]], "test_two_linear": [[335, 11, 1, "", "TestTorchLinear"]], "test_two_linear.TestTorchLinear": [[335, 12, 1, "", "setUpClass"], [335, 12, 1, "", "tearDownClass"]], "test_unet": [[336, 11, 1, "", "TestUnet"]], "test_unet.TestUnet": [[336, 12, 1, "", "setUpClass"], [336, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[337, 11, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[337, 12, 1, "", "setUpClass"], [337, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[338, 11, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[338, 12, 1, "", "setUpClass"], [338, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[339, 11, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[339, 12, 1, "", "setUpClass"], [339, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[340, 11, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[340, 12, 1, "", "setUpClass"], [340, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[341, 11, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[341, 12, 1, "", "setUpClass"], [341, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[342, 11, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[342, 12, 1, "", "setUpClass"], [342, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[343, 11, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[343, 12, 1, "", "setUpClass"], [343, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[344, 11, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[344, 12, 1, "", "setUpClass"], [344, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:function", "11": "py:class", "12": "py:method", "13": "py:data", "14": "py:attribute"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "function", "Python function"], "11": ["py", "class", "Python class"], "12": ["py", "method", "Python method"], "13": ["py", "data", "Python data"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"clang": 0, "format": [0, 389, 403, 413], "convert_falcon": 1, "modul": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 213, 215, 217, 220, 222, 223, 224, 225, 226, 229, 231, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "content": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 217, 220, 222, 223, 224, 225, 226, 229, 231, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 396, 423, 428], "function": [1, 2, 3, 4, 5, 8, 17, 21, 22, 44, 56, 114, 149, 205, 206, 207, 209, 213, 215, 222, 223, 225, 226, 240, 250, 251, 253, 254, 257], "convert_gptj": 2, "convert_gptneox": 3, "convert_llama": 4, "class": [4, 10, 12, 13, 14, 15, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 217, 220, 223, 224, 226, 229, 231, 234, 235, 237, 238, 239, 242, 243, 244, 245, 248, 250, 251, 252, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 352, 353, 354, 364, 415], "convert_mpt": 5, "gptj_bind": 6, "intel_extension_for_transform": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 383], "backend": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 380, 385, 417], "subpackag": [7, 18, 207, 228], "neural_engin": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "compil": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 349, 389, 395], "dynamic_quant": 9, "extractor": [10, 11, 12, 13, 14], "submodul": [11, 16, 18, 19, 44, 114, 219, 227, 228, 230, 236, 241, 247, 249, 256], "onnx_extractor": 12, "tf_extractor": 13, "torch_extractor": 14, "graph": [15, 16, 350, 385, 387, 388, 395], "graph_util": 17, "loader": [19, 20], "logger": 21, "onnx_util": 22, "op": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 384, 387], "all": 23, "assert": 24, "baddbmm": 25, "batch_matmul": 26, "batch_matmul_v2": 27, "bias_add": 28, "binary_op": 29, "cast": 30, "concat": 31, "conv": 32, "co": 33, "empty_op": 34, "expand_dim": 35, "fused_batch_matmul_v2": 36, "fused_batch_norm_v3": 37, "fused_gemm": 38, "fused_matmul": 39, "gather": 40, "gather_el": 41, "gelu": [42, 110], "gemm": [43, 402, 403, 405, 408], "packag": [44, 114, 207], "attribut": [44, 114, 205, 374, 384], "iterator_get_next": 45, "iterator_v2": 46, "layer_norm": [47, 125], "log_softmax": 48, "map_and_batch_dataset": 49, "matmul": [50, 404, 405, 406], "mean": [51, 400], "mkl_layer_norm": 52, "model_dataset": 53, "one_hot": 54, "onnx_input": 55, "optimize_dataset": 57, "pack": 58, "padding_sequ": [59, 148], "placehold": 60, "pos_emb": 61, "pow": 62, "quantize_linear": 63, "quantize_v2": 64, "quantized_fused_matmul_and_dequant": 65, "quantized_matmul_with_bias_and_dequant": 66, "reduce_mean": 67, "reduce_sum": 68, "reorder": [69, 402, 406, 407, 408], "reshap": 70, "resiz": 71, "rsub": 72, "scatter_el": 73, "shape": 74, "sin": 75, "size": [76, 396, 404], "slice": 77, "slice_position_id": 78, "softmax": [79, 412], "split": 80, "squeez": 81, "strided_slic": 82, "tensor": 83, "top_k": 84, "transpos": [85, 406, 407], "unpack": 86, "unsqueez": 87, "view": 88, "where": 89, "optim": [90, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 359, 360], "sub_graph": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "innerproductreshapefus": 91, "add_cls_token": 92, "add_embed": 93, "arangewithreciproc": 94, "attentionblock_attentionmaskaddreshap": 95, "attentionblock_constantofshapewithmul": 96, "attentionblock_qkvprereshap": 97, "attentionblock_qkvreshap": 98, "attentionblock_weightreshapeto4d": 99, "attention_mask_length_adaptive_keep_indic": 100, "attention_output_layer_norm_length_adaptive_keep_indic": 101, "attention_reshap": 102, "cast_to": 103, "collect_quant_info": 104, "conv_reshap": 105, "decoder_attn_reshap": 106, "einsumwitharang": 107, "embeddingbag": 108, "embeddings_to_2d_before_inner_product": 109, "generate_sequ": 111, "groupnorm": 112, "groupnormswish": 113, "innerproductwithbiasgelu": 115, "innerproductwithslic": 116, "innerproductwithswish": 117, "input_data": 118, "input_fil": 119, "insert_bf16_nod": 120, "insert_quant_nod": 121, "int8_bf16_mixed_precision_check": 122, "interact_featur": 123, "last_layer_shap": 124, "layer_norm_with_reduce_mean": 126, "layer_norm_with_transpos": 127, "llama_embed": 128, "llama_matmulwithtranspos": 129, "llama_postprocess": 130, "llama_rotary_pos_emb": 131, "lower_all_tupl": 132, "matmul_with_bia": 133, "matmul_with_bias_add": 134, "matmul_with_bias_gelu": 135, "matmul_with_bias_relu": 136, "matmul_with_bias_sigmoid": 137, "matmul_with_bias_tanh": 138, "matmul_with_bias_unsqueez": 139, "matmul_with_transpos": 140, "matmul_with_transpose_scale_add": 141, "merged_embeddingbag": 142, "multi_head_attent": 143, "neox_reorder_chang": 144, "neox_rotary_pos_emb": 145, "operator_adaptor": 146, "output_data": 147, "pattern": [149, 384, 387, 388, 392, 402, 403, 408], "position_embed": 150, "position_embeddings_v1": 151, "qkv_merg": 152, "qkv_reshap": 153, "quant_gather_to_bf16": 154, "quantize_fus": 155, "quantized_graph_dtype_refactor": 156, "remove_constant_op": 157, "remove_last_view": 158, "remove_rang": 159, "remove_unused_oper": 160, "remove_zero": 161, "removeslic": 162, "reshape_after_restore_hidden_st": 163, "reshape_before_and_after_attention_out_layer_norm_gather_el": 164, "reshape_before_restore_hidden_st": 165, "reshape_fus": 166, "restore_hidden_states_in_length_adaptive_update_indic": 167, "rms_norm": 168, "rotary_pos_emb": 169, "slicemask": 170, "stablediffusion_explicitnhwctranspos": 171, "stablediffusion_mha": 172, "stablediffusion_mhareshap": 173, "stablediffusion_reshapefus": 174, "stablediffusion_bf16convert": 175, "start_end_logit": 176, "subgraph_match": 177, "textencdoer_word_embed": 178, "textencoder_attentionmaskaddreshap": 179, "textencoder_attentionreshap": 180, "textencoder_kvreshap": 181, "textencoder_mulreshap": 182, "textencoder_qreshap": 183, "textencoder_softmaxreshap": 184, "textencoder_causal_attention_mask": 185, "token_type_embed": 186, "token_type_embeddings_v1": 187, "torch_embed": 188, "torch_ip_insert_bia": 189, "torch_unpack_baddbmm": 190, "torchinsertbf16nod": 191, "torchpaddingsqu": 192, "transformer2dmodel_attentionmaskaddreshap": 193, "transformer2dmodel_constantofshapewithmul": 194, "transformer2dmodel_ffnslic": 195, "transformer2dmodel_ffnslice_1": 196, "transformer2dmodel_qkvprereshap": 197, "transformer2dmodel_qkvreshap": 198, "transformer2dmodel_qkvreshape4d": 199, "transformer2dmodel_encoderhiddenstatesreshap": 200, "transformer2dmodel_getsamplebatch": 201, "transformer2dmodel_sampleslic": 202, "transpose_batch_matmul": 203, "word_embed": 204, "tf_util": 205, "torch_util": 206, "evalu": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "hf_eval": [208, 209, 210, 211], "hf_dataset": [209, 210], "cnn_dailymail": 209, "lm_code_ev": [213, 214], "lm_eval": [215, 216, 217, 218, 219, 220], "model": [217, 218, 231, 232, 233, 234, 249, 250, 251, 346, 358, 365, 377, 380, 385, 386, 389, 390, 395, 411, 417], "huggingfac": 217, "task": [219, 220], "lambada": 220, "benchmark": [222, 365, 390, 412], "config": [223, 357, 364, 384, 387], "distil": [224, 364, 378, 379, 381], "dynam": [225, 226, 227, 404, 419], "drop_and_restore_util": 225, "evolut": 226, "mixtur": [229, 230], "auto_distil": 229, "modeling_base_seq2seq": 233, "modeling_seq2seq": 234, "na": [235, 236, 237, 379], "basic_na": 235, "optimizer_tf": [239, 364], "pipelin": [240, 364, 417], "pruner": [241, 242], "prune": [242, 243, 379, 381, 418], "quantiz": [244, 379, 381, 390, 396, 419], "trainer": [245, 361, 364, 378, 418, 419], "util": [246, 247, 248, 249, 250, 251, 252, 253, 254, 257], "get_throughput": 246, "metric": [248, 378, 415, 418, 419], "modeling_bert_dynam": 250, "modeling_roberta_dynam": 251, "object": [252, 416, 419], "utility_tf": 254, "preprocess": [255, 256, 257, 404], "data_augment": 255, "sparsity_al": 258, "test_add_cls_token": 259, "test_add_embed": 260, "test_add_zero": 261, "test_attention_output_layer_norm_length_adaptive_keep_indic": 262, "test_attention_reshap": 263, "test_baddbmm": 264, "test_bert_mini_fp32": 265, "test_binary_op": 266, "test_binaryop": 267, "test_cast_to": 268, "test_concat": 269, "test_conv": 270, "test_conv_int8": 271, "test_conv_reshap": 272, "test_decoder_attn_reshap": 273, "test_dispatcher_tuning_acc": 274, "test_dispatcher_tuning_throughput": 275, "test_dolly_pattern": 276, "test_dynamic_quant": 277, "test_electra": 278, "test_embed": 279, "test_embeddingbag": 280, "test_execution_opt": 281, "test_fwk": 282, "test_gath": 283, "test_gelu": 284, "test_gpt_int8": 285, "test_graph_dispatch": 286, "test_graph_optim": 287, "test_insert_input_output_data": 288, "test_is_supported_onnx_graph": 289, "test_last_layer_shap": 290, "test_layer_norm_with_reduce_mean": 291, "test_layer_norm_with_transpos": 292, "test_layernorm": 293, "test_linear": 294, "test_linear_int8": 295, "test_llama_pattern": 296, "test_main": 297, "test_matmul": 298, "test_matmul_int8": 299, "test_matmul_with_bias_relu": 300, "test_matmul_with_bias_sigmoid": 301, "test_matmul_with_bias_tanh": 302, "test_merged_embeddingbag": 303, "test_model": 304, "test_neox_rotary_pos_emb": 305, "test_onnx_util": 306, "test_operator_adaptor": 307, "test_op": 308, "test_padding_seq": 309, "test_padding_sequ": 310, "test_pattern_dispatch": 311, "test_permut": 312, "test_position_embed": 313, "test_pow": 314, "test_primitive_cache_acc": 315, "test_primitive_cache_throughput": 316, "test_qkv_merg": 317, "test_qkv_reshap": 318, "test_quant_onnx_execut": 319, "test_reshape_after_restore_hidden_st": 320, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 321, "test_reshape_before_restore_hidden_st": 322, "test_siz": 323, "test_slic": 324, "test_softmax": 325, "test_start_end_logit": 326, "test_static_compressed_buff": 327, "test_tanh": 328, "test_text_encod": 329, "test_text_encoder_bf16": 330, "test_tf_util": 331, "test_token_type_embed": 332, "test_transpos": 333, "test_transpose_batch_matmul": 334, "test_two_linear": 335, "test_unet": 336, "test_unet_bf16": 337, "test_unsqueez": 338, "test_vae_decod": 339, "test_vae_decoder_bf16": 340, "test_weight_sharing_acc": 341, "test_weight_sharing_dispatcher_tuning_acc": 342, "test_weight_sharing_dispatcher_tuning_throughtput": 343, "test_weight_sharing_throughput": 344, "secur": 345, "polici": 345, "report": 345, "vulner": 345, "intel": [346, 363, 368, 376, 377, 379, 382, 424], "extens": [346, 363, 368, 376, 377, 379, 382, 424], "transform": [346, 363, 368, 376, 377, 379, 381, 382, 397, 424], "acceler": [346, 381, 397, 401], "base": [346, 379, 396], "platform": [346, 394, 410], "select": 346, "public": 346, "event": 346, "api": [347, 348, 351, 356, 362, 364, 365, 380, 386, 397], "python": [348, 386], "engin": [351, 352, 372, 379, 381, 383, 385, 387, 389, 390, 394, 428], "kernel": [353, 356, 369, 387, 397, 401, 404, 412, 425], "operator_desc": [354, 399, 400], "oper": [355, 386, 391], "specif": 355, "type": [355, 384, 418], "pytorch": [359, 364, 365, 378, 379], "tensorflow": [360, 364, 378, 379], "user": [362, 373, 397, 399, 400, 421, 429], "face": 362, "architectur": [363, 385], "autodistil": 364, "design": [364, 390], "framework": [364, 399, 400], "criterion": [364, 378], "knowledgedistillationloss": 364, "intermediatelayersknowledgedistillationloss": 364, "usag": [364, 378, 380, 399, 400, 412, 418], "flash": 364, "exampl": [364, 365, 366, 379, 380, 386, 389, 412, 416, 417, 422], "regular": 364, "introduct": [365, 376, 378, 380, 384, 386, 387, 388, 389, 392, 393, 397, 399, 400, 401, 402, 406, 411, 415, 416, 417, 418, 419], "get": [365, 376, 377, 381, 386, 390, 415, 419], "start": [365, 376, 377, 381, 396, 415, 419], "stock": [365, 379], "ipex": [365, 379], "output": [365, 377], "featur": [367, 399, 400, 419, 423], "welcom": [368, 424], "document": [368, 424], "section": [368, 424], "implement": [370, 426], "detail": [370, 404, 407, 426], "perform": [371, 394, 396, 397, 409, 410, 427], "neural": [372, 379, 381, 383, 385, 394, 428], "guid": [373, 421, 429], "contributor": [374, 375], "coven": [374, 375], "code": [374, 375], "conduct": [374, 375], "our": 374, "pledg": 374, "standard": 374, "respons": 374, "scope": 374, "enforc": 374, "contribut": 375, "guidelin": 375, "pull": 375, "request": 375, "checklist": 375, "templat": 375, "support": [375, 376, 377, 380, 389, 394, 395, 397, 415, 416, 419], "data": [376, 403, 410], "augment": 376, "instal": [376, 377, 382, 383, 390, 397], "depend": 376, "script": [376, 378, 418, 419], "paramet": 376, "text": 376, "gener": [376, 385, 396], "argument": 376, "overview": 377, "recommend": 377, "hardwar": [377, 382], "valid": [377, 382, 410], "environ": [377, 382, 390], "how": [377, 387, 393, 395, 411], "work": [377, 401], "1": [377, 385, 386, 390, 391, 411], "prerequisit": [377, 382, 383, 390, 404], "2": [377, 385, 390, 391, 411], "from": [377, 382, 383], "pypi": [377, 382], "conda": 377, "3": [377, 385, 411], "sourc": [377, 382], "To": [377, 390], "run": [377, 385, 386, 390, 395, 411], "requir": [377, 382], "prepar": [377, 389, 390, 411], "dataset": [377, 390], "compress": [377, 393], "4": [377, 385, 410], "infer": [377, 385, 398, 417], "expect": 377, "summari": [377, 415], "next": 377, "step": 377, "learn": 377, "more": [377, 387, 393, 401], "knowledg": [378, 379], "intermedi": 378, "layer": [378, 405], "creat": [378, 388, 418, 419], "an": [378, 389, 418, 419], "instanc": [378, 418, 419], "option": [378, 387, 393, 396, 418, 419], "distillationconfig": 378, "length": [379, 381], "adapt": [379, 381], "auto": 379, "orchestr": 379, "refer": [379, 397], "deploy": 379, "dens": [379, 401], "spars": [379, 386, 401, 402, 403, 405, 408, 411], "export": 380, "onnx": [380, 385, 389, 390], "matrix": [380, 394, 397, 404, 416, 419], "fp32": 380, "bf16": 380, "int8": [380, 390, 417], "For": [380, 412], "executor": [380, 391, 417], "system": [382, 396], "softwar": 382, "stabl": 383, "version": 383, "pip": 383, "binari": [383, 385, 399], "deploi": [383, 385], "bare": 383, "metal": 383, "add": [384, 391], "custom": [384, 385, 391], "regist": [384, 391], "node": [384, 388], "set": [384, 386], "map": [384, 388, 396], "fuse": 384, "new": [384, 388], "after": 384, "fusion": [384, 388], "integr": 385, "tf": [385, 396], "us": [385, 395, 404], "through": 385, "manual": 385, "yaml": 385, "weight": [385, 404, 411], "build": [385, 397, 412], "profil": [386, 409], "profl": 386, "you": 386, "can": 386, "onli": 386, "engine_profil": 386, "befor": 386, "c": 386, "part": 386, "csv": 386, "ratio": 386, "total": 386, "level": 386, "json": 386, "iter": 386, "tune": [387, 390, 396, 419], "dispatch": 387, "best": 387, "relat": 387, "runtim": 387, "turn": [387, 393], "mechan": 387, "dict": 388, "obtain": 388, "necessari": 388, "inform": [388, 414], "construct": 388, "establish": 388, "connect": 388, "remov": [388, 392], "old": 388, "insert": 388, "ir": [389, 390], "low": 390, "precis": 390, "its": 390, "accuraci": [390, 419], "h": 391, "includ": 391, "cpp": 391, "src": 391, "recogn": 392, "represent": 392, "pars": 392, "list": [392, 418], "search": 392, "each": 392, "straight": 392, "chain": 392, "splice": 392, "sub": 392, "main": 392, "duplic": 392, "result": [392, 411], "static": [393, 412, 419], "buffer": 393, "configur": [394, 410], "itrex": 395, "convert": 395, "tabl": 396, "quick": 396, "unix": 396, "linux": 396, "maco": 396, "etc": 396, "common": 396, "input": [396, 413], "prompt": 396, "interact": 396, "revers": 396, "In": 396, "prefix": 396, "suffix": 396, "instruct": [396, 403], "mode": 396, "context": 396, "manag": 396, "keep": 396, "flag": 396, "number": 396, "token": 396, "predict": 396, "temperatur": 396, "repeat": 396, "penalti": 396, "top": 396, "k": 396, "sampl": 396, "p": 396, "tail": 396, "free": 396, "local": 396, "typic": 396, "mirostat": 396, "logit": 396, "bia": 396, "rng": 396, "seed": 396, "memori": [396, 398], "thread": [396, 401, 410], "mlock": 396, "No": 396, "float": 396, "32": 396, "batch": 396, "cach": [396, 398], "addit": 396, "librari": 397, "test": 397, "sparse_matmul": [397, 412], "3d": 398, "layout": 398, "spmm_vnni": [398, 412], "issu": 398, "injector": [399, 400], "param_typ": [399, 400], "hpp": [399, 400], "jit_binaryop_injector": 399, "develop": [399, 400, 412], "": [399, 400], "perspect": [399, 400], "element": 400, "wise": 400, "alpha": 400, "beta": 400, "scale": 400, "jit_eltwise_injector": 400, "naiv": 401, "tile": 401, "effici": 401, "per": 401, "prefetch": 401, "amx": 402, "brief": 402, "isa": 402, "avx512f": 403, "kei": 403, "loop": 403, "quant": 404, "problem": [404, 405, 406, 407], "descript": [404, 405, 407], "differ": 404, "jit": 404, "path": 404, "one": 404, "stage": 404, "two": 404, "normal": 405, "layernorm": 405, "pre": 405, "comput": 405, "spmm": 405, "direct": 405, "layernorm_ba": [405, 412], "statement": 406, "matmul_p2031_2013": 406, "matmul_avx512f_p2031_p2013": [406, 412], "matmul_noperm_p2031_p1302": 406, "matmul_vnni_noperm_p2013_p1302": 406, "beforehand": 406, "mha": [407, 412], "calcul": 407, "vnni": 408, "On": 408, "fly": 408, "activ": 408, "candid": 408, "verbos": 409, "vtune": 409, "sde": 409, "singl": 410, "multi": 410, "visual": 411, "distribut": 411, "setup": 411, "below": 411, "command": 411, "analysi": 411, "spmm_avx512f": 412, "spmm_amx_bf16_x16": 412, "eltwiseop": 412, "transpose_matmul": 412, "matmul_vnni_noperm_p2031_p1302": 412, "attent": 412, "dynamic_quant_matmul": 412, "dynamic_qu": 412, "legal": 414, "licens": 414, "citat": 414, "trademark": 414, "prunerconfig": 418, "pruningconfig": 418, "fundament": 419, "approach": 419, "post": 419, "train": 419, "awar": 419, "quantizationconfig": 419, "releas": 420, "note": 420}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"clang-format": [[0, "module-clang-format"]], "convert_falcon": [[1, "module-convert_falcon"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [8, "module-contents"], [10, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [66, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [100, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [182, "module-contents"], [183, "module-contents"], [184, "module-contents"], [185, "module-contents"], [186, "module-contents"], [187, "module-contents"], [188, "module-contents"], [189, "module-contents"], [190, "module-contents"], [191, "module-contents"], [192, "module-contents"], [193, "module-contents"], [194, "module-contents"], [195, "module-contents"], [196, "module-contents"], [197, "module-contents"], [198, "module-contents"], [199, "module-contents"], [200, "module-contents"], [201, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [209, "module-contents"], [213, "module-contents"], [215, "module-contents"], [217, "module-contents"], [220, "module-contents"], [222, "module-contents"], [223, "module-contents"], [224, "module-contents"], [225, "module-contents"], [226, "module-contents"], [229, "module-contents"], [231, "module-contents"], [234, "module-contents"], [235, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [248, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [257, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [266, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [302, "module-contents"], [303, "module-contents"], [305, "module-contents"], [306, "module-contents"], [307, "module-contents"], [308, "module-contents"], [309, "module-contents"], [310, "module-contents"], [311, "module-contents"], [312, "module-contents"], [313, "module-contents"], [314, "module-contents"], [315, "module-contents"], [316, "module-contents"], [317, "module-contents"], [318, "module-contents"], [319, "module-contents"], [320, "module-contents"], [321, "module-contents"], [322, "module-contents"], [323, "module-contents"], [324, "module-contents"], [325, "module-contents"], [326, "module-contents"], [327, "module-contents"], [328, "module-contents"], [329, "module-contents"], [330, "module-contents"], [331, "module-contents"], [332, "module-contents"], [333, "module-contents"], [334, "module-contents"], [335, "module-contents"], [336, "module-contents"], [337, "module-contents"], [338, "module-contents"], [339, "module-contents"], [340, "module-contents"], [341, "module-contents"], [342, "module-contents"], [343, "module-contents"], [344, "module-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [8, "functions"], [17, "functions"], [21, "functions"], [22, "functions"], [44, "functions"], [56, "functions"], [114, "functions"], [149, "functions"], [205, "functions"], [206, "functions"], [207, "functions"], [209, "functions"], [213, "functions"], [215, "functions"], [222, "functions"], [223, "functions"], [225, "functions"], [226, "functions"], [240, "functions"], [250, "functions"], [251, "functions"], [253, "functions"], [254, "functions"], [257, "functions"]], "convert_gptj": [[2, "module-convert_gptj"]], "convert_gptneox": [[3, "module-convert_gptneox"]], "convert_llama": [[4, "module-convert_llama"]], "Classes": [[4, "classes"], [10, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [20, "classes"], [21, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [66, "classes"], [67, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [180, "classes"], [181, "classes"], [182, "classes"], [183, "classes"], [184, "classes"], [185, "classes"], [186, "classes"], [187, "classes"], [188, "classes"], [189, "classes"], [190, "classes"], [191, "classes"], [192, "classes"], [193, "classes"], [194, "classes"], [195, "classes"], [196, "classes"], [197, "classes"], [198, "classes"], [199, "classes"], [200, "classes"], [201, "classes"], [202, "classes"], [203, "classes"], [204, "classes"], [209, "classes"], [217, "classes"], [220, "classes"], [223, "classes"], [224, "classes"], [226, "classes"], [229, "classes"], [231, "classes"], [234, "classes"], [235, "classes"], [237, "classes"], [238, "classes"], [239, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [248, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [254, "classes"], [255, "classes"], [257, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [266, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"], [303, "classes"], [305, "classes"], [306, "classes"], [307, "classes"], [308, "classes"], [309, "classes"], [310, "classes"], [311, "classes"], [312, "classes"], [313, "classes"], [314, "classes"], [315, "classes"], [316, "classes"], [317, "classes"], [318, "classes"], [319, "classes"], [320, "classes"], [321, "classes"], [322, "classes"], [323, "classes"], [324, "classes"], [325, "classes"], [326, "classes"], [327, "classes"], [328, "classes"], [329, "classes"], [330, "classes"], [331, "classes"], [332, "classes"], [333, "classes"], [334, "classes"], [335, "classes"], [336, "classes"], [337, "classes"], [338, "classes"], [339, "classes"], [340, "classes"], [341, "classes"], [342, "classes"], [343, "classes"], [344, "classes"]], "convert_mpt": [[5, "module-convert_mpt"]], "gptj_binding": [[6, "module-gptj_binding"]], "intel_extension_for_transformers.backends": [[7, "module-intel_extension_for_transformers.backends"]], "Subpackages": [[7, "subpackages"], [18, "subpackages"], [207, "subpackages"], [228, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[11, "submodules"], [16, "submodules"], [18, "submodules"], [19, "submodules"], [44, "submodules"], [114, "submodules"], [219, "submodules"], [227, "submodules"], [228, "submodules"], [230, "submodules"], [236, "submodules"], [241, "submodules"], [247, "submodules"], [249, "submodules"], [256, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[44, "package-contents"], [114, "package-contents"], [207, "package-contents"]], "Attributes": [[44, "attributes"], [114, "attributes"], [205, "attributes"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[205, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[206, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[207, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[208, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[211, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[212, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[213, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[214, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[215, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[221, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[222, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[223, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[224, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[225, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[226, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[227, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[228, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[229, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[230, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[231, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[232, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[233, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[234, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[235, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[236, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[237, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[238, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[239, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[240, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[241, "module-intel_extension_for_transformers.optimization.pruner"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[242, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "intel_extension_for_transformers.optimization.pruning": [[243, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.quantization": [[244, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[245, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[246, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[247, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[248, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[249, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[252, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[253, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[254, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[255, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[256, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[257, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[258, "module-sparsity_all"]], "test_add_cls_token": [[259, "module-test_add_cls_token"]], "test_add_embeddings": [[260, "module-test_add_embeddings"]], "test_add_zeros": [[261, "module-test_add_zeros"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[262, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[263, "module-test_attention_reshape"]], "test_baddbmm": [[264, "module-test_baddbmm"]], "test_bert_mini_fp32": [[265, "module-test_bert_mini_fp32"]], "test_binary_op": [[266, "module-test_binary_op"]], "test_binaryop": [[267, "module-test_binaryop"]], "test_cast_to": [[268, "module-test_cast_to"]], "test_concat": [[269, "module-test_concat"]], "test_conv": [[270, "module-test_conv"]], "test_conv_int8": [[271, "module-test_conv_int8"]], "test_conv_reshape": [[272, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[273, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[274, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[275, "module-test_dispatcher_tuning_throughput"]], "test_dolly_pattern": [[276, "module-test_dolly_pattern"]], "test_dynamic_quantization": [[277, "module-test_dynamic_quantization"]], "test_electra": [[278, "module-test_electra"]], "test_embedding": [[279, "module-test_embedding"]], "test_embeddingbag": [[280, "module-test_embeddingbag"]], "test_execution_options": [[281, "module-test_execution_options"]], "test_fwk": [[282, "module-test_fwk"]], "test_gather": [[283, "module-test_gather"]], "test_gelu": [[284, "module-test_gelu"]], "test_gpt_int8": [[285, "module-test_gpt_int8"]], "test_graph_dispatch": [[286, "module-test_graph_dispatch"]], "test_graph_optimizer": [[287, "module-test_graph_optimizer"]], "test_insert_input_output_data": [[288, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[289, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[290, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[291, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[292, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[293, "module-test_layernorm"]], "test_linear": [[294, "module-test_linear"]], "test_linear_int8": [[295, "module-test_linear_int8"]], "test_llama_pattern": [[296, "module-test_llama_pattern"]], "test_main": [[297, "module-test_main"]], "test_matmul": [[298, "module-test_matmul"]], "test_matmul_int8": [[299, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[300, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[301, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[302, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[303, "module-test_merged_embeddingbag"]], "test_model": [[304, "module-test_model"]], "test_neox_rotary_pos_emb": [[305, "module-test_neox_rotary_pos_emb"]], "test_onnx_utils": [[306, "module-test_onnx_utils"]], "test_operator_adaptor": [[307, "module-test_operator_adaptor"]], "test_ops": [[308, "module-test_ops"]], "test_padding_seq": [[309, "module-test_padding_seq"]], "test_padding_sequence": [[310, "module-test_padding_sequence"]], "test_pattern_dispatch": [[311, "module-test_pattern_dispatch"]], "test_permute": [[312, "module-test_permute"]], "test_position_embeddings": [[313, "module-test_position_embeddings"]], "test_pow": [[314, "module-test_pow"]], "test_primitive_cache_acc": [[315, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[316, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[317, "module-test_qkv_merge"]], "test_qkv_reshape": [[318, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[319, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[320, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[321, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[322, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[323, "module-test_size"]], "test_slice": [[324, "module-test_slice"]], "test_softmax": [[325, "module-test_softmax"]], "test_start_end_logits": [[326, "module-test_start_end_logits"]], "test_static_compressed_buffer": [[327, "module-test_static_compressed_buffer"]], "test_tanh": [[328, "module-test_tanh"]], "test_text_encoder": [[329, "module-test_text_encoder"]], "test_text_encoder_bf16": [[330, "module-test_text_encoder_bf16"]], "test_tf_utils": [[331, "module-test_tf_utils"]], "test_token_type_embeddings": [[332, "module-test_token_type_embeddings"]], "test_transpose": [[333, "module-test_transpose"]], "test_transpose_batch_matmul": [[334, "module-test_transpose_batch_matmul"]], "test_two_linear": [[335, "module-test_two_linear"]], "test_unet": [[336, "module-test_unet"]], "test_unet_bf16": [[337, "module-test_unet_bf16"]], "test_unsqueeze": [[338, "module-test_unsqueeze"]], "test_vae_decoder": [[339, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[340, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[341, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[342, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[343, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[344, "module-test_weight_sharing_throughput"]], "Security Policy": [[345, "security-policy"]], "Report a Vulnerability": [[345, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[346, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[346, "selected-publications-events"]], "API": [[347, "api"]], "Python APIs": [[348, "python-apis"]], "Compile": [[349, "compile"]], "Graph": [[350, "graph"]], "Engine API": [[351, "engine-api"]], "Class engine": [[352, "class-engine"]], "Class Kernel": [[353, "class-kernel"]], "Class operator_desc": [[354, "class-operator-desc"]], "Operator Specific Types": [[355, "operator-specific-types"]], "Kernel APIs": [[356, "kernel-apis"]], "Config": [[357, "config"]], "Model": [[358, "model"]], "PyTorch Optimizer": [[359, "pytorch-optimizer"]], "TensorFlow Optimizer": [[360, "tensorflow-optimizer"]], "Trainer": [[361, "trainer"]], "User-facing API": [[362, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[363, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[364, "autodistillation-design"]], "AutoDistillation Pipeline": [[364, "autodistillation-pipeline"]], "Framework Class Design": [[364, "framework-class-design"]], "Criterion Class Design": [[364, "criterion-class-design"]], "KnowledgeDistillationLoss": [[364, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[364, "intermediatelayersknowledgedistillationloss"]], "Usage": [[364, "usage"], [399, "usage"], [400, "usage"], [412, "usage"], [418, "usage"]], "Pytorch": [[364, "pytorch"]], "AutoDistillation API in Trainer": [[364, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[364, "flash-distillation-config-example"]], "Regular distillation config example": [[364, "regular-distillation-config-example"]], "AutoDistillation config example": [[364, "autodistillation-config-example"], [364, "id1"]], "Tensorflow": [[364, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[364, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[364, "distillation-config-example"]], "Benchmark": [[365, "benchmark"]], "Introduction": [[365, "introduction"], [376, "introduction"], [378, "introduction"], [380, "introduction"], [384, "introduction"], [386, "introduction"], [387, "introduction"], [388, "introduction"], [389, "introduction"], [392, "introduction"], [393, "introduction"], [397, "introduction"], [399, "introduction"], [400, "introduction"], [401, "introduction"], [406, "introduction"], [411, "introduction"], [415, "introduction"], [416, "introduction"], [417, "introduction"], [418, "introduction"], [419, "introduction"]], "Get Started with Benchmark API": [[365, "get-started-with-benchmark-api"]], "Examples": [[365, "examples"], [379, "examples"], [380, "examples"], [412, "examples"], [412, "id1"], [412, "id2"], [412, "id3"], [412, "id4"], [412, "id5"], [412, "id6"], [412, "id7"], [412, "id8"], [412, "id9"], [412, "id10"], [412, "id11"], [417, "examples"]], "Stock Pytorch Model": [[365, "stock-pytorch-model"]], "IPEX Model": [[365, "ipex-model"]], "Benchmark Output": [[365, "benchmark-output"]], "Example": [[366, "example"], [422, "example"]], "Features": [[367, "features"], [423, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[368, "welcome-to-intel-extension-for-transformers-documentation"], [424, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[368, "sections"], [424, "sections"]], "Kernels": [[369, "kernels"], [425, "kernels"]], "Implementation Details": [[370, "implementation-details"], [426, "implementation-details"]], "Performance": [[371, "performance"], [394, "performance"], [397, "performance"], [427, "performance"]], "Neural Engine": [[372, "neural-engine"], [428, "neural-engine"]], "User Guide": [[373, "user-guide"], [421, "user-guide"], [429, "user-guide"]], "Contributor Covenant Code of Conduct": [[374, "contributor-covenant-code-of-conduct"], [375, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[374, "our-pledge"]], "Our Standards": [[374, "our-standards"]], "Our Responsibilities": [[374, "our-responsibilities"]], "Scope": [[374, "scope"]], "Enforcement": [[374, "enforcement"]], "Attribution": [[374, "attribution"]], "Contribution Guidelines": [[375, "contribution-guidelines"]], "Pull Request Checklist": [[375, "pull-request-checklist"]], "Pull Request Template": [[375, "pull-request-template"]], "Support": [[375, "support"], [377, "support"]], "Data Augmentation": [[376, "data-augmentation"], [376, "id1"]], "Getting Started": [[376, "getting-started"], [381, "getting-started"]], "Install Dependency": [[376, "install-dependency"]], "Install Intel Extension for Transformers": [[376, "install-intel-extension-for-transformers"], [382, "install-intel-extension-for-transformers"]], "Script": [[376, "script"]], "Parameters of Data Augmentation": [[376, "parameters-of-data-augmentation"]], "Supported Augmenter": [[376, "supported-augmenter"]], "Text Generation Augmenter": [[376, "text-generation-augmenter"]], "Augmenter Arguments:": [[376, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[377, "intel-extension-for-transformers"]], "Overview": [[377, "overview"]], "Recommended Hardware": [[377, "recommended-hardware"]], "Validated Hardware Environment": [[377, "validated-hardware-environment"], [382, "validated-hardware-environment"]], "How it Works": [[377, "how-it-works"]], "Get Started": [[377, "get-started"], [419, "get-started"]], "1. Prerequisites": [[377, "prerequisites"]], "2. Installation": [[377, "installation"]], "2.1 Install from PyPi": [[377, "install-from-pypi"]], "2.2 Install from Conda": [[377, "install-from-conda"]], "2.3 Install from Source": [[377, "install-from-source"]], "3. How To Run": [[377, "how-to-run"]], "3.1 Install Requirements": [[377, "install-requirements"]], "3.2 Prepare Datasets": [[377, "prepare-datasets"]], "3.3 Model Compression": [[377, "model-compression"]], "3.4 Model Inference": [[377, "model-inference"]], "Expected Output": [[377, "expected-output"]], "Summary and Next Steps": [[377, "summary-and-next-steps"]], "Learn More": [[377, "learn-more"]], "Distillation": [[378, "distillation"], [378, "id1"], [379, "distillation"], [381, "distillation"]], "Knowledge Distillation": [[378, "knowledge-distillation"], [379, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[378, "intermediate-layer-knowledge-distillation"]], "usage": [[378, "usage"]], "Pytorch Script:": [[378, "pytorch-script"]], "Tensorflow Script:": [[378, "tensorflow-script"]], "Create an Instance of Metric": [[378, "create-an-instance-of-metric"], [419, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[378, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[378, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[378, "distill-with-trainer"]], "Quantization": [[379, "quantization"], [381, "quantization"], [396, "quantization"], [419, "quantization"]], "Stock PyTorch Examples": [[379, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[379, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[379, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[379, "length-adaptive-transformers"]], "Pruning": [[379, "pruning"], [381, "pruning"], [418, "pruning"]], "Auto Distillation (NAS Based)": [[379, "auto-distillation-nas-based"]], "Orchestrate": [[379, "orchestrate"]], "Reference Deployment on Neural Engine": [[379, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[379, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[379, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[380, "export-to-onnx"]], "Supported Model Export Matrix": [[380, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[380, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[380, "export-to-bf16-onnx-model"]], "API usage": [[380, "api-usage"]], "Export to INT8 ONNX Model": [[380, "export-to-int8-onnx-model"]], "For executor backend": [[380, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[381, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[381, "transformers-accelerated-neural-engine"]], "Installation": [[382, "installation"], [383, "installation"], [397, "installation"]], "Install from Pypi": [[382, "install-from-pypi"]], "Install from Source": [[382, "install-from-source"]], "Prerequisites": [[382, "prerequisites"], [383, "prerequisites"]], "System Requirements": [[382, "system-requirements"]], "Validated Software Environment": [[382, "validated-software-environment"]], "Install": [[383, "install"]], "Install stable version intel_extension_for_transformers from pip": [[383, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[383, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[384, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[384, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[384, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[384, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[385, "deploy-and-integration"]], "1. Architecture": [[385, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[385, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[385, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[385, "run-the-inference-by-engine"], [385, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[385, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[385, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[385, "integrate-neural-engine-as-backend"]], "Profiling": [[386, "profiling"]], "Profling API": [[386, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[386, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[386, "profiling-examples"]], "Parts of CSV Profiling": [[386, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[386, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[386, "operator-profiling-part"]], "Total Profiling Part": [[386, "total-profiling-part"]], "Levels of JSON Profiling": [[386, "levels-of-json-profiling"]], "Model Level": [[386, "model-level"]], "Iteration Level": [[386, "iteration-level"]], "Operator Level": [[386, "operator-level"]], "Engine Tuning": [[387, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[387, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[387, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[387, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[387, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[387, "more-tuning-options"]], "Graph Fusion": [[388, "graph-fusion"]], "Pattern Mapping Dict": [[388, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[388, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[388, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[388, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[389, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[389, "supported-onnx-format"]], "Compile Examples": [[389, "compile-examples"]], "Prepare ONNX Model": [[389, "prepare-onnx-model"]], "Compile to IR": [[389, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[390, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[390, "design"]], "Prerequisite": [[390, "prerequisite"]], "Install environment": [[390, "install-environment"]], "Prepare Dataset": [[390, "prepare-dataset"]], "Prepare ONNX model": [[390, "prepare-onnx-model"]], "Run tuning and benchmark": [[390, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[390, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[390, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[391, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[391, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[391, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[392, "pattern-recognize"]], "Pattern Representation": [[392, "pattern-representation"]], "Parse Pattern Representation List": [[392, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[392, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[392, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Static Compressed Buffer": [[393, "static-compressed-buffer"]], "How to Turn on Static Compressed Buffer": [[393, "how-to-turn-on-static-compressed-buffer"]], "More Options": [[393, "more-options"]], "Neural Engine Support Matrix": [[394, "neural-engine-support-matrix"]], "platform configuration": [[394, "platform-configuration"]], "ITREX Graph": [[395, "itrex-graph"]], "Compile Graph": [[395, "compile-graph"]], "How to use": [[395, "how-to-use"]], "Convert model": [[395, "convert-model"]], "Run Models": [[395, "run-models"]], "Supported model": [[395, "supported-model"]], "Table of Contents": [[396, "table-of-contents"]], "Quick Start": [[396, "quick-start"]], "Unix-based systems (Linux, macOS, etc.):": [[396, "unix-based-systems-linux-macos-etc"]], "Common Options": [[396, "common-options"]], "Input Prompts": [[396, "input-prompts"]], "Interaction": [[396, "interaction"]], "Interaction Options": [[396, "interaction-options"]], "Reverse Prompts": [[396, "reverse-prompts"]], "In-Prefix": [[396, "in-prefix"]], "In-Suffix": [[396, "in-suffix"]], "Instruction Mode": [[396, "instruction-mode"]], "Context Management": [[396, "context-management"]], "Context Size": [[396, "context-size"]], "Keep Prompt": [[396, "keep-prompt"]], "Generation Flags": [[396, "generation-flags"]], "Number of Tokens to Predict": [[396, "number-of-tokens-to-predict"]], "Temperature": [[396, "temperature"]], "Repeat Penalty": [[396, "repeat-penalty"]], "Top-K Sampling": [[396, "top-k-sampling"]], "Top-P Sampling": [[396, "top-p-sampling"]], "Tail Free Sampling (TFS)": [[396, "tail-free-sampling-tfs"]], "Locally Typical Sampling": [[396, "locally-typical-sampling"]], "Mirostat Sampling": [[396, "mirostat-sampling"]], "Logit Bias": [[396, "logit-bias"]], "RNG Seed": [[396, "rng-seed"]], "Performance Tuning and Memory Options": [[396, "performance-tuning-and-memory-options"]], "Number of Threads": [[396, "number-of-threads"]], "Mlock": [[396, "mlock"]], "No Memory Mapping": [[396, "no-memory-mapping"]], "Memory Float 32": [[396, "memory-float-32"]], "Batch Size": [[396, "batch-size"]], "Prompt Caching": [[396, "prompt-caching"]], "Additional Options": [[396, "additional-options"]], "Transformers-Accelerated Libraries": [[397, "transformers-accelerated-libraries"]], "Build": [[397, "build"], [412, "build"]], "Test": [[397, "test"]], "API reference for users": [[397, "api-reference-for-users"]], "sparse_matmul kernel:": [[397, "sparse-matmul-kernel"]], "Supported Matrix": [[397, "supported-matrix"]], "3D Inference": [[398, "d-inference"]], "Memory Layout in SPMM_VNNI": [[398, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[398, "cache-issues"]], "SPMM_VNNI 3D Inference": [[398, "spmm-vnni-3d-inference"]], "Binary Injectors": [[399, "binary-injectors"]], "Framework Features": [[399, "framework-features"], [400, "framework-features"]], "param_type.hpp": [[399, "param-type-hpp"]], "operator_desc.hpp": [[399, "operator-desc-hpp"], [400, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[399, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[399, "developer-s-perspective"]], "User\u2019s Perspective": [[399, "user-s-perspective"], [400, "user-s-perspective"]], "Element-wise Injector": [[400, "element-wise-injector"]], "param_types.hpp": [[400, "param-types-hpp"]], "alpha,beta,scale meaning": [[400, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[400, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[400, "developer-s-perspective"]], "Dense and Sparse": [[401, "dense-and-sparse"]], "Naive": [[401, "naive"]], "Tile": [[401, "tile"]], "Efficient kernel": [[401, "efficient-kernel"]], "More work per thread": [[401, "more-work-per-thread"]], "Prefetch": [[401, "prefetch"]], "Sparse acceleration": [[401, "sparse-acceleration"]], "Sparse GEMM AMX": [[402, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[402, "brief-introduction-for-isas"]], "Pattern": [[402, "pattern"]], "Reorder": [[402, "reorder"]], "Sparse GEMM AVX512F": [[403, "sparse-gemm-avx512f"]], "Key Instruction": [[403, "key-instruction"]], "Sparse Pattern & Data Format": [[403, "sparse-pattern-data-format"]], "Loops": [[403, "loops"]], "Dynamic Quant Matmul": [[404, "dynamic-quant-matmul"]], "problem description": [[404, "problem-description"]], "Kernel details": [[404, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[404, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[404, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[404, "different-jit-paths-for-different-weight-size"]], "one-stage jit-path": [[404, "one-stage-jit-path"]], "two-stage jit-path": [[404, "two-stage-jit-path"]], "Sparse GEMM with Layer-Normalize": [[405, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[405, "problem-description"]], "layernormalized sparse matmul": [[405, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[405, "pre-compute-spmm"]], "Direct Layernorm_ba": [[405, "direct-layernorm-ba"]], "Transposed MatMul": [[406, "transposed-matmul"]], "Problem Statements": [[406, "problem-statements"]], "Matmul_p2031_2013": [[406, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[406, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[406, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[406, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[406, "reorder-beforehand"]], "Transposed MHA": [[407, "transposed-mha"]], "Problem description": [[407, "problem-description"]], "Details": [[407, "details"]], "Reordering": [[407, "reordering"]], "Calculation": [[407, "calculation"]], "Sparse GEMM VNNI": [[408, "sparse-gemm-vnni"]], "On the fly activation reordering": [[408, "on-the-fly-activation-reordering"]], "Candidate patterns": [[408, "candidate-patterns"]], "Performance and Profiling": [[409, "performance-and-profiling"]], "Verbose": [[409, "verbose"]], "VTune": [[409, "vtune"]], "SDE": [[409, "sde"]], "Validated Performance Data": [[410, "validated-performance-data"]], "Single Thread": [[410, "single-thread"]], "Multi Thread (Thread = 4)": [[410, "multi-thread-thread-4"]], "Platform Configuration": [[410, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[411, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[411, "setups"]], "1. Prepare the sparse model": [[411, "prepare-the-sparse-model"]], "2. Run below commands": [[411, "run-below-commands"]], "3. Analysis results": [[411, "analysis-results"]], "Benchmark for Kernels": [[412, "benchmark-for-kernels"]], "sparse_matmul": [[412, "sparse-matmul"]], "spmm_avx512f": [[412, "spmm-avx512f"]], "spmm_vnni": [[412, "spmm-vnni"]], "spmm_amx_bf16_x16": [[412, "spmm-amx-bf16-x16"]], "eltwiseop": [[412, "eltwiseop"]], "layernorm_ba": [[412, "layernorm-ba"]], "transpose_matmul": [[412, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[412, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[412, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[412, "softmax"]], "attention": [[412, "attention"]], "Static MHA": [[412, "static-mha"]], "dynamic_quant_matmul": [[412, "dynamic-quant-matmul"]], "dynamic_quant": [[412, "dynamic-quant"]], "For developers": [[412, "for-developers"]], "Inputs format": [[413, "inputs-format"]], "Legal Information": [[414, "legal-information"]], "License": [[414, "license"]], "Citation": [[414, "citation"]], "Trademarks": [[414, "trademarks"]], "Metrics": [[415, "metrics"]], "Supported Metric": [[415, "supported-metric"]], "Metric Class Summary": [[415, "metric-class-summary"]], "Get Start with Metrics": [[415, "get-start-with-metrics"]], "Objective": [[416, "objective"]], "Supported Objectives Matrix:": [[416, "supported-objectives-matrix"]], "Examples:": [[416, "examples"]], "Pipeline": [[417, "pipeline"]], "Pipeline Inference for INT8 Model": [[417, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[417, "pipeline-inference-for-executor-backend"]], "Pruning types": [[418, "pruning-types"]], "Script:": [[418, "script"], [419, "script"]], "Create an instance of Metric": [[418, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[418, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[418, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[418, "prune-with-trainer"]], "Quantization Fundamentals": [[419, "quantization-fundamentals"]], "Quantization Approach": [[419, "quantization-approach"]], "Post Training Dynamic Quantization": [[419, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[419, "post-training-static-quantization"]], "Quantization Aware Training": [[419, "quantization-aware-training"]], "Accuracy Aware Tuning": [[419, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[419, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[419, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[419, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[419, "quantization-with-trainer"]], "Release": [[420, "release"]], "Release Notes": [[420, "release-notes"]], "Contents:": [[423, null], [428, null]]}, "indexentries": {"clang-format": [[0, "module-clang-format"]], "module": [[0, "module-clang-format"], [1, "module-convert_falcon"], [2, "module-convert_gptj"], [3, "module-convert_gptneox"], [4, "module-convert_llama"], [5, "module-convert_mpt"], [6, "module-gptj_binding"], [7, "module-intel_extension_for_transformers.backends"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"], [191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [205, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [206, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [207, "module-intel_extension_for_transformers.backends.neural_engine"], [208, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"], [209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"], [210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"], [211, "module-intel_extension_for_transformers.evaluation.hf_eval"], [212, "module-intel_extension_for_transformers.evaluation"], [213, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"], [214, "module-intel_extension_for_transformers.evaluation.lm_code_eval"], [215, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"], [216, "module-intel_extension_for_transformers.evaluation.lm_eval"], [217, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"], [218, "module-intel_extension_for_transformers.evaluation.lm_eval.models"], [219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"], [220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"], [221, "module-intel_extension_for_transformers"], [222, "module-intel_extension_for_transformers.optimization.benchmark"], [223, "module-intel_extension_for_transformers.optimization.config"], [224, "module-intel_extension_for_transformers.optimization.distillation"], [225, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [226, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [227, "module-intel_extension_for_transformers.optimization.dynamic"], [228, "module-intel_extension_for_transformers.optimization"], [229, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [230, "module-intel_extension_for_transformers.optimization.mixture"], [231, "module-intel_extension_for_transformers.optimization.model"], [232, "module-intel_extension_for_transformers.optimization.modeling"], [233, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"], [234, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"], [235, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [236, "module-intel_extension_for_transformers.optimization.nas"], [237, "module-intel_extension_for_transformers.optimization.nas.nas"], [238, "module-intel_extension_for_transformers.optimization.optimizer"], [239, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [240, "module-intel_extension_for_transformers.optimization.pipeline"], [241, "module-intel_extension_for_transformers.optimization.pruner"], [242, "module-intel_extension_for_transformers.optimization.pruner.pruning"], [243, "module-intel_extension_for_transformers.optimization.pruning"], [244, "module-intel_extension_for_transformers.optimization.quantization"], [245, "module-intel_extension_for_transformers.optimization.trainer"], [246, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [247, "module-intel_extension_for_transformers.optimization.utils"], [248, "module-intel_extension_for_transformers.optimization.utils.metrics"], [249, "module-intel_extension_for_transformers.optimization.utils.models"], [250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [252, "module-intel_extension_for_transformers.optimization.utils.objectives"], [253, "module-intel_extension_for_transformers.optimization.utils.utility"], [254, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [255, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [256, "module-intel_extension_for_transformers.preprocessing"], [257, "module-intel_extension_for_transformers.preprocessing.utils"], [258, "module-sparsity_all"], [259, "module-test_add_cls_token"], [260, "module-test_add_embeddings"], [261, "module-test_add_zeros"], [262, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [263, "module-test_attention_reshape"], [264, "module-test_baddbmm"], [265, "module-test_bert_mini_fp32"], [266, "module-test_binary_op"], [267, "module-test_binaryop"], [268, "module-test_cast_to"], [269, "module-test_concat"], [270, "module-test_conv"], [271, "module-test_conv_int8"], [272, "module-test_conv_reshape"], [273, "module-test_decoder_attn_reshape"], [274, "module-test_dispatcher_tuning_acc"], [275, "module-test_dispatcher_tuning_throughput"], [276, "module-test_dolly_pattern"], [277, "module-test_dynamic_quantization"], [278, "module-test_electra"], [279, "module-test_embedding"], [280, "module-test_embeddingbag"], [281, "module-test_execution_options"], [282, "module-test_fwk"], [283, "module-test_gather"], [284, "module-test_gelu"], [285, "module-test_gpt_int8"], [286, "module-test_graph_dispatch"], [287, "module-test_graph_optimizer"], [288, "module-test_insert_input_output_data"], [289, "module-test_is_supported_onnx_graph"], [290, "module-test_last_layer_shape"], [291, "module-test_layer_norm_with_reduce_mean"], [292, "module-test_layer_norm_with_transpose"], [293, "module-test_layernorm"], [294, "module-test_linear"], [295, "module-test_linear_int8"], [296, "module-test_llama_pattern"], [297, "module-test_main"], [298, "module-test_matmul"], [299, "module-test_matmul_int8"], [300, "module-test_matmul_with_bias_relu"], [301, "module-test_matmul_with_bias_sigmoid"], [302, "module-test_matmul_with_bias_tanh"], [303, "module-test_merged_embeddingbag"], [304, "module-test_model"], [305, "module-test_neox_rotary_pos_emb"], [306, "module-test_onnx_utils"], [307, "module-test_operator_adaptor"], [308, "module-test_ops"], [309, "module-test_padding_seq"], [310, "module-test_padding_sequence"], [311, "module-test_pattern_dispatch"], [312, "module-test_permute"], [313, "module-test_position_embeddings"], [314, "module-test_pow"], [315, "module-test_primitive_cache_acc"], [316, "module-test_primitive_cache_throughput"], [317, "module-test_qkv_merge"], [318, "module-test_qkv_reshape"], [319, "module-test_quant_onnx_execute"], [320, "module-test_reshape_after_restore_hidden_states"], [321, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [322, "module-test_reshape_before_restore_hidden_states"], [323, "module-test_size"], [324, "module-test_slice"], [325, "module-test_softmax"], [326, "module-test_start_end_logits"], [327, "module-test_static_compressed_buffer"], [328, "module-test_tanh"], [329, "module-test_text_encoder"], [330, "module-test_text_encoder_bf16"], [331, "module-test_tf_utils"], [332, "module-test_token_type_embeddings"], [333, "module-test_transpose"], [334, "module-test_transpose_batch_matmul"], [335, "module-test_two_linear"], [336, "module-test_unet"], [337, "module-test_unet_bf16"], [338, "module-test_unsqueeze"], [339, "module-test_vae_decoder"], [340, "module-test_vae_decoder_bf16"], [341, "module-test_weight_sharing_acc"], [342, "module-test_weight_sharing_dispatcher_tuning_acc"], [343, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [344, "module-test_weight_sharing_throughput"]], "bytes_to_unicode() (in module convert_falcon)": [[1, "convert_falcon.bytes_to_unicode"]], "convert_falcon": [[1, "module-convert_falcon"]], "bytes_to_unicode() (in module convert_gptj)": [[2, "convert_gptj.bytes_to_unicode"]], "convert_gptj": [[2, "module-convert_gptj"]], "bytes_to_unicode() (in module convert_gptneox)": [[3, "convert_gptneox.bytes_to_unicode"]], "convert_gptneox": [[3, "module-convert_gptneox"]], "lazyunpickler (class in convert_llama)": [[4, "convert_llama.LazyUnpickler"]], "nefiletype (class in convert_llama)": [[4, "convert_llama.NEFileType"]], "bounded_parallel_map() (in module convert_llama)": [[4, "convert_llama.bounded_parallel_map"]], "convert_llama": [[4, "module-convert_llama"]], "find_class() (convert_llama.lazyunpickler method)": [[4, "convert_llama.LazyUnpickler.find_class"]], "find_multifile_paths() (in module convert_llama)": [[4, "convert_llama.find_multifile_paths"]], "handle_quantization() (in module convert_llama)": [[4, "convert_llama.handle_quantization"]], "load_some_model() (in module convert_llama)": [[4, "convert_llama.load_some_model"]], "nth_multifile_path() (in module convert_llama)": [[4, "convert_llama.nth_multifile_path"]], "bytes_to_unicode() (in module convert_mpt)": [[5, "convert_mpt.bytes_to_unicode"]], "convert_mpt": [[5, "module-convert_mpt"]], "gptj_binding": [[6, "module-gptj_binding"]], "intel_extension_for_transformers.backends": [[7, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.dynamic_quantize"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[12, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "del_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_var"]], "del_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.del_environ_vars"]], "environ_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.environ_info_init"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_environ_info"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_environ_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_environ_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "remove_environ_info_item() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_item"]], "remove_environ_info_items() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.remove_environ_info_items"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "set_environ_var() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_var"]], "set_environ_vars() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_environ_vars"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[21, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "baddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.baddbmm method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.baddbmm.Baddbmm.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[28, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "binaryop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.binaryop method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op.BinaryOp.set_attr"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "multiheadattenion (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MultiHeadAttenion"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "zeros (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Zeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernorm method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[57, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[68, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "resize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.resize)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.resize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.resize method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.resize.Resize.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "slice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.slice method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice.Slice.set_attr"]], "slicepositionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.slicepositionids method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice_position_ids.SlicePositionIds.set_attr"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.where)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.where": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.where"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.where.where method)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.ops.where.Where.set_attr"]], "optimizer (class in intel_extension_for_transformers.backends.neural_engine.compile.optimizer)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer"]], "intel_extension_for_transformers.backends.neural_engine.compile.optimizer": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.optimizer"]], "optimize() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.optimize"]], "weight_optimization() (intel_extension_for_transformers.backends.neural_engine.compile.optimizer.optimizer method)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.optimizer.Optimizer.weight_optimization"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[100, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "embeddingsto2dbeforeinnerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product.EmbeddingsTo2DBeforeInnerProduct"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddings_to_2d_before_inner_product"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnorm": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNorm"]], "groupnormswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish.GroupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupnormswish": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.groupNormSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "innerproductwithswish (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish.InnerproductWithSwish"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithswish"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "llamaembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding.LlamaEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_embeding"]], "llamamatmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose.LlamaMatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_matmulwithtranspose"]], "llamapostprocess (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess.LlamaPostprocess"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_postprocess"]], "llamaroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb.LlamaRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.llama_rotary_pos_emb"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithbiasunsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze.MatMulWithBiasUnsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_unsqueeze"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose_scale_add"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "neoxreorderchange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change.NeoxReorderChange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_reorder_change"]], "neoxroraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb.NeoxRoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.neox_rotary_pos_emb"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quant_gather_to_bf16"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeunusedoperator (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator.RemoveUnusedOperator"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_unused_operator"]], "removezeros (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros.RemoveZeros"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_zeros"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "rmsnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm.RmsNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rms_norm"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "explicitnhwctransposeforconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose.ExplicitNHWCTransposeForConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_explicitnhwctranspose": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ExplicitNHWCTranspose"]], "stablediffusion_mha (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA.StableDiffusion_MHA"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mha": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHA"]], "stablediffusion_mhareshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape.StableDiffusion_MHAReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_mhareshape": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_MHAReshape"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[182, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[182, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[183, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[183, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[184, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[184, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[185, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[185, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[186, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[186, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[187, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[187, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[188, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[188, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[189, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[189, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchunpackbaddbmm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm)": [[190, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm.TorchUnpackBaddbmm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm": [[190, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_unpack_baddbmm"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[191, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[191, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[192, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[192, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[193, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[193, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[194, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[194, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[195, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[195, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[196, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[196, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[197, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[197, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[198, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[198, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[199, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[199, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[200, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[200, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[201, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[201, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[202, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[202, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[203, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[203, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[204, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[204, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[205, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[205, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[206, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[206, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[207, "module-intel_extension_for_transformers.backends.neural_engine"]], "neural_engine_bin() (in module intel_extension_for_transformers.backends.neural_engine)": [[207, "intel_extension_for_transformers.backends.neural_engine.neural_engine_bin"]], "intel_extension_for_transformers.evaluation.hf_eval.evaluator": [[208, "module-intel_extension_for_transformers.evaluation.hf_eval.evaluator"]], "datacollatorforsuperviseddataset (class in intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[209, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.DataCollatorForSupervisedDataset"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail": [[209, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail"]], "preprocess() (in module intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail)": [[209, "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets.cnn_dailymail.preprocess"]], "intel_extension_for_transformers.evaluation.hf_eval.hf_datasets": [[210, "module-intel_extension_for_transformers.evaluation.hf_eval.hf_datasets"]], "intel_extension_for_transformers.evaluation.hf_eval": [[211, "module-intel_extension_for_transformers.evaluation.hf_eval"]], "intel_extension_for_transformers.evaluation": [[212, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[213, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator": [[213, "module-intel_extension_for_transformers.evaluation.lm_code_eval.evaluator"]], "pattern_match() (in module intel_extension_for_transformers.evaluation.lm_code_eval.evaluator)": [[213, "intel_extension_for_transformers.evaluation.lm_code_eval.evaluator.pattern_match"]], "intel_extension_for_transformers.evaluation.lm_code_eval": [[214, "module-intel_extension_for_transformers.evaluation.lm_code_eval"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_eval.evaluator)": [[215, "intel_extension_for_transformers.evaluation.lm_eval.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_eval.evaluator": [[215, "module-intel_extension_for_transformers.evaluation.lm_eval.evaluator"]], "intel_extension_for_transformers.evaluation.lm_eval": [[216, "module-intel_extension_for_transformers.evaluation.lm_eval"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[217, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[217, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_eval.models.huggingface)": [[217, "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_eval.models.huggingface": [[217, "module-intel_extension_for_transformers.evaluation.lm_eval.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_eval.models": [[218, "module-intel_extension_for_transformers.evaluation.lm_eval.models"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks": [[219, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks"]], "lambadaopenai (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[220, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaOpenAI"]], "lambadastandard (class in intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada)": [[220, "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada.LambadaStandard"]], "intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada": [[220, "module-intel_extension_for_transformers.evaluation.lm_eval.tasks.lambada"]], "intel_extension_for_transformers": [[221, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[222, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[222, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[222, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[222, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[222, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[223, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[223, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[223, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[224, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[224, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[224, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[225, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[225, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[225, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[226, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[226, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[227, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[228, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[229, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[229, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[230, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[231, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[231, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[231, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.modeling": [[232, "module-intel_extension_for_transformers.optimization.modeling"]], "intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq": [[233, "module-intel_extension_for_transformers.optimization.modeling.modeling_base_seq2seq"]], "incdecoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[234, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCDecoder"]], "incencoder (class in intel_extension_for_transformers.optimization.modeling.modeling_seq2seq)": [[234, "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq.INCEncoder"]], "intel_extension_for_transformers.optimization.modeling.modeling_seq2seq": [[234, "module-intel_extension_for_transformers.optimization.modeling.modeling_seq2seq"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[235, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[235, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[235, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[235, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[235, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[236, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[237, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[237, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[238, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[238, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[238, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[239, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[239, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[240, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[240, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruner": [[241, "module-intel_extension_for_transformers.optimization.pruner"]], "pruning (class in intel_extension_for_transformers.optimization.pruner.pruning)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pruner.pruning": [[242, "module-intel_extension_for_transformers.optimization.pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pruner.pruning.pruning attribute)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pruner.pruning.pruning method)": [[242, "intel_extension_for_transformers.optimization.pruner.pruning.Pruning.update_config"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[243, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[243, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[243, "module-intel_extension_for_transformers.optimization.pruning"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[244, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[244, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[245, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[245, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[245, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[245, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[246, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[247, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[248, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[248, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[249, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[250, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[250, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[251, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[251, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[252, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[252, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[252, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[252, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[253, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[253, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[254, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[254, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[254, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[254, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[254, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[255, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[255, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[255, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[255, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[255, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[256, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[257, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[257, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[257, "module-intel_extension_for_transformers.preprocessing.utils"]], "sparsity_all": [[258, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[259, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[259, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[259, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[259, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[260, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[260, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[260, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[260, "module-test_add_embeddings"]], "testtorchop (class in test_add_zeros)": [[261, "test_add_zeros.TestTorchOP"]], "setupclass() (test_add_zeros.testtorchop class method)": [[261, "test_add_zeros.TestTorchOP.setUpClass"]], "teardownclass() (test_add_zeros.testtorchop class method)": [[261, "test_add_zeros.TestTorchOP.tearDownClass"]], "test_add_zeros": [[261, "module-test_add_zeros"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[262, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[262, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[262, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[262, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[263, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[263, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[263, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[263, "module-test_attention_reshape"]], "testtorchop (class in test_baddbmm)": [[264, "test_baddbmm.TestTorchOP"]], "setupclass() (test_baddbmm.testtorchop class method)": [[264, "test_baddbmm.TestTorchOP.setUpClass"]], "teardownclass() (test_baddbmm.testtorchop class method)": [[264, "test_baddbmm.TestTorchOP.tearDownClass"]], "test_baddbmm": [[264, "module-test_baddbmm"]], "testtorchmodel (class in test_bert_mini_fp32)": [[265, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[265, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[265, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[265, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[266, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[266, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[266, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[266, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[267, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[267, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[267, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[267, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[268, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[268, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[268, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[268, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[269, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[269, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[269, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[269, "module-test_concat"]], "testtorchop (class in test_conv)": [[270, "test_conv.TestTorchOP"]], "setupclass() (test_conv.testtorchop class method)": [[270, "test_conv.TestTorchOP.setUpClass"]], "teardownclass() (test_conv.testtorchop class method)": [[270, "test_conv.TestTorchOP.tearDownClass"]], "test_conv": [[270, "module-test_conv"]], "testtorchop (class in test_conv_int8)": [[271, "test_conv_int8.TestTorchOP"]], "setupclass() (test_conv_int8.testtorchop class method)": [[271, "test_conv_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_conv_int8.testtorchop class method)": [[271, "test_conv_int8.TestTorchOP.tearDownClass"]], "test_conv_int8": [[271, "module-test_conv_int8"]], "testconvreshape (class in test_conv_reshape)": [[272, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[272, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[272, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[272, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[273, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[273, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[273, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[273, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[274, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[274, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[274, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[274, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[275, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[275, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[275, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[275, "module-test_dispatcher_tuning_throughput"]], "testtorchop (class in test_dolly_pattern)": [[276, "test_dolly_pattern.TestTorchOP"]], "setupclass() (test_dolly_pattern.testtorchop class method)": [[276, "test_dolly_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_dolly_pattern.testtorchop class method)": [[276, "test_dolly_pattern.TestTorchOP.tearDownClass"]], "test_dolly_pattern": [[276, "module-test_dolly_pattern"]], "testdynamicquantization (class in test_dynamic_quantization)": [[277, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[277, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[277, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[277, "module-test_dynamic_quantization"]], "testelectra (class in test_electra)": [[278, "test_electra.TestElectra"]], "setupclass() (test_electra.testelectra class method)": [[278, "test_electra.TestElectra.setUpClass"]], "teardownclass() (test_electra.testelectra class method)": [[278, "test_electra.TestElectra.tearDownClass"]], "test_electra": [[278, "module-test_electra"]], "testtorchop (class in test_embedding)": [[279, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[279, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[279, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[279, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[280, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[280, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[280, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[280, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[281, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[281, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[281, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[281, "module-test_execution_options"]], "testfwk (class in test_fwk)": [[282, "test_fwk.TestFWK"]], "setupclass() (test_fwk.testfwk class method)": [[282, "test_fwk.TestFWK.setUpClass"]], "teardownclass() (test_fwk.testfwk class method)": [[282, "test_fwk.TestFWK.tearDownClass"]], "test_fwk": [[282, "module-test_fwk"]], "testtorchop (class in test_gather)": [[283, "test_gather.TestTorchOP"]], "setupclass() (test_gather.testtorchop class method)": [[283, "test_gather.TestTorchOP.setUpClass"]], "teardownclass() (test_gather.testtorchop class method)": [[283, "test_gather.TestTorchOP.tearDownClass"]], "test_gather": [[283, "module-test_gather"]], "testtorchop (class in test_gelu)": [[284, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[284, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[284, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[284, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[285, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[285, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[285, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[285, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[286, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[286, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[286, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[286, "module-test_graph_dispatch"]], "testexecutionoptions (class in test_graph_optimizer)": [[287, "test_graph_optimizer.TestExecutionOptions"]], "setupclass() (test_graph_optimizer.testexecutionoptions class method)": [[287, "test_graph_optimizer.TestExecutionOptions.setUpClass"]], "teardownclass() (test_graph_optimizer.testexecutionoptions class method)": [[287, "test_graph_optimizer.TestExecutionOptions.tearDownClass"]], "test_graph_optimizer": [[287, "module-test_graph_optimizer"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[288, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[288, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[288, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[288, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[289, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[289, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[289, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[289, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[289, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[290, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[290, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[290, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[290, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[291, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[291, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[291, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[291, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[292, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[292, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[292, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[292, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[293, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[293, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[293, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[293, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[294, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[294, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[294, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[294, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[295, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[295, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[295, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[295, "module-test_linear_int8"]], "testtorchop (class in test_llama_pattern)": [[296, "test_llama_pattern.TestTorchOP"]], "setupclass() (test_llama_pattern.testtorchop class method)": [[296, "test_llama_pattern.TestTorchOP.setUpClass"]], "teardownclass() (test_llama_pattern.testtorchop class method)": [[296, "test_llama_pattern.TestTorchOP.tearDownClass"]], "test_llama_pattern": [[296, "module-test_llama_pattern"]], "testmain (class in test_main)": [[297, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[297, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[297, "test_main.TestMain.tearDownClass"]], "test_main": [[297, "module-test_main"]], "testtorchop (class in test_matmul)": [[298, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[298, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[298, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[298, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[299, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[299, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[299, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[299, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[300, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[300, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[300, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[300, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[301, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[301, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[301, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[301, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[302, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[302, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[302, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[302, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[303, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[303, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[303, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[303, "module-test_merged_embeddingbag"]], "test_model": [[304, "module-test_model"]], "testtorchop (class in test_neox_rotary_pos_emb)": [[305, "test_neox_rotary_pos_emb.TestTorchOP"]], "setupclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[305, "test_neox_rotary_pos_emb.TestTorchOP.setUpClass"]], "teardownclass() (test_neox_rotary_pos_emb.testtorchop class method)": [[305, "test_neox_rotary_pos_emb.TestTorchOP.tearDownClass"]], "test_neox_rotary_pos_emb": [[305, "module-test_neox_rotary_pos_emb"]], "testonnxutils (class in test_onnx_utils)": [[306, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[306, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[306, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[306, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[307, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[307, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[307, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[307, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[308, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[308, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[308, "test_ops.TestOps.tearDownClass"]], "test_ops": [[308, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[309, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[309, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[309, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[309, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[310, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[310, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[310, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[310, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[311, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[311, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[311, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[311, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[312, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[312, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[312, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[312, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[313, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[313, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[313, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[313, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[314, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[314, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[314, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[314, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[315, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[315, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[315, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[315, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[316, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[316, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[316, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[316, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[317, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[317, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[317, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[317, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[318, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[318, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[318, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[318, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[319, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[319, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[319, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[319, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[320, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[320, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[320, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[320, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[321, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[321, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[321, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[321, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[322, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[322, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[322, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[322, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[323, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[323, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[323, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[323, "module-test_size"]], "testtorchop (class in test_slice)": [[324, "test_slice.TestTorchOP"]], "setupclass() (test_slice.testtorchop class method)": [[324, "test_slice.TestTorchOP.setUpClass"]], "teardownclass() (test_slice.testtorchop class method)": [[324, "test_slice.TestTorchOP.tearDownClass"]], "test_slice": [[324, "module-test_slice"]], "testtorchop (class in test_softmax)": [[325, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[325, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[325, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[325, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[326, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[326, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[326, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[326, "module-test_start_end_logits"]], "testscbuffer (class in test_static_compressed_buffer)": [[327, "test_static_compressed_buffer.TestSCBuffer"]], "setupclass() (test_static_compressed_buffer.testscbuffer class method)": [[327, "test_static_compressed_buffer.TestSCBuffer.setUpClass"]], "teardownclass() (test_static_compressed_buffer.testscbuffer class method)": [[327, "test_static_compressed_buffer.TestSCBuffer.tearDownClass"]], "test_static_compressed_buffer": [[327, "module-test_static_compressed_buffer"]], "testtorchop (class in test_tanh)": [[328, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[328, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[328, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[328, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[329, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[329, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[329, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[329, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[330, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[330, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[330, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[330, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[331, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[331, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[331, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[331, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[332, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[332, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[332, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[332, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[333, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[333, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[333, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[333, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[334, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[334, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[334, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[334, "module-test_transpose_batch_matmul"]], "testtorchlinear (class in test_two_linear)": [[335, "test_two_linear.TestTorchLinear"]], "setupclass() (test_two_linear.testtorchlinear class method)": [[335, "test_two_linear.TestTorchLinear.setUpClass"]], "teardownclass() (test_two_linear.testtorchlinear class method)": [[335, "test_two_linear.TestTorchLinear.tearDownClass"]], "test_two_linear": [[335, "module-test_two_linear"]], "testunet (class in test_unet)": [[336, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[336, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[336, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[336, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[337, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[337, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[337, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[337, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[338, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[338, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[338, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[338, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[339, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[339, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[339, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[339, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[340, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[340, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[340, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[340, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[341, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[341, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[341, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[341, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[342, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[342, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[342, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[342, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[343, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[343, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[343, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[343, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[344, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[344, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[344, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[344, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[352, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[352, "c.NULL_INSTANCE"]], "jd (c++ type)": [[352, "_CPPv42jd"], [353, "_CPPv42jd"], [354, "_CPPv42jd"], [355, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[352, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[352, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_kernel (c++ function)": [[352, "_CPPv4NK2jd12cpu_engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[352, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::create_stream (c++ function)": [[352, "_CPPv4NK2jd12cpu_engine_t13create_streamEPP8stream_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[352, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[352, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[352, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[352, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[352, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[352, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[352, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[352, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[352, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[352, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[352, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[352, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[352, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[352, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[353, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[353, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [353, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[353, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[353, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[353, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [353, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[353, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[353, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[353, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [353, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[353, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[353, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[353, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [353, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[353, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[353, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[353, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [353, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[353, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[353, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[353, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [353, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[353, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[353, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[353, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [353, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[353, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[353, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[353, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [353, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[353, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[353, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[353, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [353, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[353, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[353, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[353, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [353, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[353, "_CPPv4N2jd11gather_descD0Ev"]], "jd::groupnorm (c++ class)": [[353, "_CPPv4N2jd9groupnormE"]], "jd::groupnorm::groupnorm (c++ function)": [[353, "_CPPv4N2jd9groupnorm9groupnormERK17kernel_desc_proxy"], [353, "_CPPv4N2jd9groupnorm9groupnormEv"]], "jd::groupnorm::~groupnorm (c++ function)": [[353, "_CPPv4N2jd9groupnormD0Ev"]], "jd::groupnorm_desc (c++ class)": [[353, "_CPPv4N2jd14groupnorm_descE"]], "jd::groupnorm_desc::groupnorm_desc (c++ function)": [[353, "_CPPv4N2jd14groupnorm_desc14groupnorm_descERK13operator_desc"], [353, "_CPPv4N2jd14groupnorm_desc14groupnorm_descEv"]], "jd::groupnorm_desc::~groupnorm_desc (c++ function)": [[353, "_CPPv4N2jd14groupnorm_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[353, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[353, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[353, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[353, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [353, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[353, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[353, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[353, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[353, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[353, "_CPPv4NK2jd12kernel_proxy7executeERK14exec_context_t"], [353, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[353, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[353, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[353, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [353, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[353, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[353, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[353, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [353, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[353, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[353, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[353, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [353, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[353, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[353, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[353, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [353, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[353, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[353, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[353, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [353, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[353, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[353, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[353, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [353, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[353, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[353, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[353, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [353, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[353, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[353, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[353, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [353, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[353, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[353, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[353, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [353, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[353, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[353, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[353, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[353, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[353, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[353, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[353, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[353, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[353, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[353, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [353, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[353, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[353, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[353, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [353, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[353, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[353, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[353, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [353, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[353, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[353, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[353, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [353, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[353, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[353, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[353, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [353, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[353, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[353, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[353, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [353, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[353, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[353, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[353, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [353, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[353, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[353, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[353, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [353, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[353, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[353, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[353, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [353, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[353, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[353, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[353, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [353, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[353, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[354, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[354, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[354, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[354, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[354, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[354, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[354, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[354, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[354, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[354, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRK12runtime_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [354, "_CPPv4N2jd13operator_desc13operator_descERK11kernel_kindRK11kernel_propRK11engine_kindRKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [354, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[354, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[354, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[354, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::tensor_dtypes (c++ function)": [[354, "_CPPv4NK2jd13operator_desc13tensor_dtypesEv"]], "jd::operator_desc::tensor_ftypes (c++ function)": [[354, "_CPPv4NK2jd13operator_desc13tensor_ftypesEv"]], "jd::operator_desc::tensor_shapes (c++ function)": [[354, "_CPPv4NK2jd13operator_desc13tensor_shapesEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[354, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[354, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[355, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[355, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[355, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[355, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[355, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[355, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[355, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[355, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[355, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[355, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[355, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[355, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[355, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[355, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[355, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[355, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[355, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[355, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[355, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[355, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[355, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[355, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[355, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[355, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[355, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[355, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[355, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[355, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[355, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[355, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[355, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[355, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[355, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[355, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_3E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[355, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[355, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[355, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[355, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[355, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[355, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[355, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_fp8_data_t (c++ struct)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_tE"]], "jd::ssd::matmul_fp8_data_t::alpha (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t5alphaE"]], "jd::ssd::matmul_fp8_data_t::astep (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t5astepE"]], "jd::ssd::matmul_fp8_data_t::beta (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t4betaE"]], "jd::ssd::matmul_fp8_data_t::bstep (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t5bstepE"]], "jd::ssd::matmul_fp8_data_t::cstep (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t5cstepE"]], "jd::ssd::matmul_fp8_data_t::dstep (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t5dstepE"]], "jd::ssd::matmul_fp8_data_t::k (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t1kE"]], "jd::ssd::matmul_fp8_data_t::kpos (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t4kposE"]], "jd::ssd::matmul_fp8_data_t::mata (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matAE"]], "jd::ssd::matmul_fp8_data_t::matb (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matBE"]], "jd::ssd::matmul_fp8_data_t::matc (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matCE"]], "jd::ssd::matmul_fp8_data_t::matd (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matDE"]], "jd::ssd::matmul_fp8_data_t::mate (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t4matEE"]], "jd::ssd::matmul_fp8_data_t::n (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t1nE"]], "jd::ssd::matmul_fp8_data_t::scale (c++ member)": [[355, "_CPPv4N2jd3ssd17matmul_fp8_data_t5scaleE"]], "jd::ssd::matmul_fp8_param_t (c++ struct)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_tE"]], "jd::ssd::matmul_fp8_param_t::k (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t1KE"]], "jd::ssd::matmul_fp8_param_t::m (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t1ME"]], "jd::ssd::matmul_fp8_param_t::n (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t1NE"]], "jd::ssd::matmul_fp8_param_t::[anonymous] (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_tUt1_5E"]], "jd::ssd::matmul_fp8_param_t::alpha (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t5alphaE"]], "jd::ssd::matmul_fp8_param_t::beta (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t4betaE"]], "jd::ssd::matmul_fp8_param_t::has_append_sum (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t14has_append_sumE"]], "jd::ssd::matmul_fp8_param_t::has_scale0 (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t10has_scale0E"]], "jd::ssd::matmul_fp8_param_t::postop_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t12postop_attrsE"]], "jd::ssd::matmul_fp8_param_t::thread_num (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t10thread_numE"]], "jd::ssd::matmul_fp8_param_t::weight_8bit (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_8bitE"]], "jd::ssd::matmul_fp8_param_t::weight_bf16 (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_bf16E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e4m3 (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e4m3E"]], "jd::ssd::matmul_fp8_param_t::weight_f8_e5m2 (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t14weight_f8_e5m2E"]], "jd::ssd::matmul_fp8_param_t::weight_int8 (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_int8E"]], "jd::ssd::matmul_fp8_param_t::weight_type (c++ member)": [[355, "_CPPv4N2jd3ssd18matmul_fp8_param_t11weight_typeE"]], "jd::ssd::matmul_input (c++ type)": [[355, "_CPPv4N2jd3ssd12matmul_inputE"]], "jd::ssd::matmul_input::input (c++ enum)": [[355, "_CPPv4N2jd3ssd12matmul_input5inputE"]], "jd::ssd::matmul_input::input::append_sum (c++ enumerator)": [[355, "_CPPv4N2jd3ssd12matmul_input5input10APPEND_SUME"]], "jd::ssd::matmul_input::input::scale0 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd12matmul_input5input6SCALE0E"]], "jd::ssd::matmul_input::input::src0 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd12matmul_input5input4SRC0E"]], "jd::ssd::matmul_input::input::src1 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd12matmul_input5input4SRC1E"]], "jd::ssd::matmul_input::input::src2 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd12matmul_input5input4SRC2E"]], "jd::ssd::matmul_input::input::zp0 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd12matmul_input5input3ZP0E"]], "jd::ssd::matmul_input::input::matmul_io_max (c++ enumerator)": [[355, "_CPPv4N2jd3ssd12matmul_input5input13matmul_io_MAXE"]], "jd::ssd::matmul_io (c++ type)": [[355, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[355, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::append_sum (c++ enumerator)": [[355, "_CPPv4N2jd3ssd9matmul_io2io10APPEND_SUME"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[355, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_output (c++ type)": [[355, "_CPPv4N2jd3ssd13matmul_outputE"]], "jd::ssd::matmul_output::output (c++ enum)": [[355, "_CPPv4N2jd3ssd13matmul_output6outputE"]], "jd::ssd::matmul_output::output::dst0 (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13matmul_output6output4DST0E"]], "jd::ssd::matmul_param_t (c++ struct)": [[355, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[355, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[355, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[355, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[355, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[355, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[355, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[355, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[355, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[355, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[355, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[355, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[355, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[355, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[355, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[355, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[355, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[355, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[355, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[355, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[355, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[355, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[355, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[355, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[355, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[355, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[355, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[355, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[355, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[355, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[355, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[355, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[355, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[355, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[355, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[355, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[355, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[355, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[355, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[355, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[355, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[355, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[355, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[355, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[355, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[355, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[355, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[355, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[355, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[355, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[355, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[355, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[355, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[355, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[355, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[355, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[355, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[355, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[355, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[355, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[355, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[355, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[355, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[355, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[355, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[355, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})