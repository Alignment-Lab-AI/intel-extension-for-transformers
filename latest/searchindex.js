Search.setIndex({"docnames": ["autoapi/intel_extension_for_transformers/api_doc_example/index", "autoapi/intel_extension_for_transformers/backends/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index", "autoapi/intel_extension_for_transformers/backends/neural_engine/index", "autoapi/intel_extension_for_transformers/evaluation/index", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/evaluator/index", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/index", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/models/huggingface/index", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/models/index", "autoapi/intel_extension_for_transformers/index", "autoapi/intel_extension_for_transformers/optimization/benchmark/index", "autoapi/intel_extension_for_transformers/optimization/config/index", "autoapi/intel_extension_for_transformers/optimization/distillation/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index", "autoapi/intel_extension_for_transformers/optimization/dynamic/index", "autoapi/intel_extension_for_transformers/optimization/index", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index", "autoapi/intel_extension_for_transformers/optimization/mixture/index", "autoapi/intel_extension_for_transformers/optimization/model/index", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/index", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index", "autoapi/intel_extension_for_transformers/optimization/optimizer/index", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index", "autoapi/intel_extension_for_transformers/optimization/pipeline/index", "autoapi/intel_extension_for_transformers/optimization/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index", "autoapi/intel_extension_for_transformers/optimization/quantization/index", "autoapi/intel_extension_for_transformers/optimization/trainer/index", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index", "autoapi/intel_extension_for_transformers/optimization/utils/index", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index", "autoapi/intel_extension_for_transformers/preprocessing/index", "autoapi/intel_extension_for_transformers/preprocessing/utils/index", "autoapi/intel_extension_for_transformers/version/index", "autoapi/sparsity_all/index", "autoapi/test_add_cls_token/index", "autoapi/test_add_embeddings/index", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index", "autoapi/test_attention_reshape/index", "autoapi/test_bert_mini_fp32/index", "autoapi/test_binary_op/index", "autoapi/test_binaryop/index", "autoapi/test_cast_to/index", "autoapi/test_concat/index", "autoapi/test_conv_reshape/index", "autoapi/test_decoder_attn_reshape/index", "autoapi/test_dispatcher_tuning_acc/index", "autoapi/test_dispatcher_tuning_throughput/index", "autoapi/test_dynamic_quantization/index", "autoapi/test_embedding/index", "autoapi/test_embeddingbag/index", "autoapi/test_execution_options/index", "autoapi/test_gelu/index", "autoapi/test_gpt_int8/index", "autoapi/test_graph_dispatch/index", "autoapi/test_insert_input_output_data/index", "autoapi/test_is_supported_onnx_graph/index", "autoapi/test_last_layer_shape/index", "autoapi/test_layer_norm_with_reduce_mean/index", "autoapi/test_layer_norm_with_transpose/index", "autoapi/test_layernorm/index", "autoapi/test_linear/index", "autoapi/test_linear_int8/index", "autoapi/test_main/index", "autoapi/test_matmul/index", "autoapi/test_matmul_int8/index", "autoapi/test_matmul_with_bias_relu/index", "autoapi/test_matmul_with_bias_sigmoid/index", "autoapi/test_matmul_with_bias_tanh/index", "autoapi/test_merged_embeddingbag/index", "autoapi/test_model/index", "autoapi/test_onnx_utils/index", "autoapi/test_operator_adaptor/index", "autoapi/test_ops/index", "autoapi/test_padding_seq/index", "autoapi/test_padding_sequence/index", "autoapi/test_pattern_dispatch/index", "autoapi/test_permute/index", "autoapi/test_position_embeddings/index", "autoapi/test_pow/index", "autoapi/test_primitive_cache_acc/index", "autoapi/test_primitive_cache_throughput/index", "autoapi/test_qkv_merge/index", "autoapi/test_qkv_reshape/index", "autoapi/test_quant_onnx_execute/index", "autoapi/test_reshape_after_restore_hidden_states/index", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index", "autoapi/test_reshape_before_restore_hidden_states/index", "autoapi/test_size/index", "autoapi/test_softmax/index", "autoapi/test_start_end_logits/index", "autoapi/test_tanh/index", "autoapi/test_text_encoder/index", "autoapi/test_text_encoder_bf16/index", "autoapi/test_tf_utils/index", "autoapi/test_token_type_embeddings/index", "autoapi/test_transpose/index", "autoapi/test_transpose_batch_matmul/index", "autoapi/test_unet/index", "autoapi/test_unet_bf16/index", "autoapi/test_unsqueeze/index", "autoapi/test_vae_decoder/index", "autoapi/test_vae_decoder_bf16/index", "autoapi/test_weight_sharing_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index", "autoapi/test_weight_sharing_throughput/index", "docs/SECURITY", "docs/Welcome", "docs/api_doc/api", "docs/api_doc/api_example", "docs/api_doc/engine/api_py_engine", "docs/api_doc/engine/compile", "docs/api_doc/engine/graph", "docs/api_doc/engine_api", "docs/api_doc/kernel/engine", "docs/api_doc/kernel/interface", "docs/api_doc/kernel/operator_desc", "docs/api_doc/kernel/types", "docs/api_doc/kernel_api", "docs/api_doc/optimization/config", "docs/api_doc/optimization/model", "docs/api_doc/optimization/optimizer", "docs/api_doc/optimization/tf_optimization", "docs/api_doc/optimization/trainer", "docs/api_doc/user_api", "docs/architecture", "docs/autodistillation", "docs/benchmark", "docs/build_docs/source/example", "docs/build_docs/source/feature", "docs/build_docs/source/index", "docs/build_docs/source/kernel", "docs/build_docs/source/kernel_desc", "docs/build_docs/source/kernel_perf", "docs/build_docs/source/neural_engine", "docs/build_docs/source/user_guide", "docs/code_of_conduct", "docs/contributions", "docs/data_augmentation", "docs/devcatalog", "docs/distillation", "docs/examples", "docs/export", "docs/get_started", "docs/installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README", "docs/legal", "docs/metrics", "docs/objectives", "docs/pipeline", "docs/pruning", "docs/quantization", "docs/release", "docs/user_guide", "example", "feature", "index", "kernel", "kernel_desc", "kernel_perf", "neural_engine", "user_guide"], "filenames": ["autoapi/intel_extension_for_transformers/api_doc_example/index.rst", "autoapi/intel_extension_for_transformers/backends/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/onnx_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/tf_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/extractors/torch_extractor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/graph_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/loaders/loader/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/logger/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/onnx_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/all/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/assert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/binary_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cast/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/concat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/conv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/cos/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/empty_ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/expand_dims/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_matmul_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_batch_norm_v3/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/fused_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/gemm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_get_next/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/iterator_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/layer_normalization/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/log_softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/map_and_batch_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/mkl_layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/model_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/one_hot/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/onnx_input/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/optimize_dataset/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/placeholder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pos_embed/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/pow/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_linear/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantize_v2/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_fused_matmul_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/quantized_matmul_with_bias_and_dequantize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reduce_sum/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reorder/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/rsub/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/scatter_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/sin/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/size/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/softmax/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/split/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/squeeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/strided_slice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/tensor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/top_k/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unpack/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/unsqueeze/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/ops/view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/InnerproductReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_cls_token/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/add_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/arangewithreciprocal/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_Resize2Gather/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attentionBlock_WeightReshapeTo4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_mask_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/attention_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/cast_to/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/collect_quant_info/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/conv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/decoder_attn_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/einsumwitharange/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/generate_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithbiasgelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/innerproductwithslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/input_file/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_bf16_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/insert_quant_node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/int8_bf16_mixed_precision_checker/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/interact_features/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/last_layer_shape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_reduce_mean/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/layer_norm_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/lower_all_tuples/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_add/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_gelu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_relu/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_sigmoid/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_bias_tanh/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/matmul_with_transpose/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/merged_embeddingbag/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/multi_head_attention/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/operator_adaptor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/output_data/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/padding_sequence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/pattern/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/position_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_merge/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/qkv_reshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantize_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/quantized_graph_dtype_refactor/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_constant_op/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_last_view/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/remove_range/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/removeslice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_after_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_before_restore_hidden_states/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/reshape_fusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromConv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/resnetBlock_instancenormReshapeFromdiv/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restnetBlock_groupNorm/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/restore_hidden_states_in_length_adaptive_update_indices/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/rotary_pos_emb/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/slicemask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_ReshapeFusion/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/stableDiffusion_bf16Convert/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/start_end_logits/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/subgraph_matcher/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncdoer_word_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_AttentionReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_KVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_MulReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_QReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_SoftmaxReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/textEncoder_causal_attention_mask/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/token_type_embeddings_v1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_embedding/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torch_ip_insert_bias/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchinsertbf16node/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/torchpaddingsquence/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_AttentionMaskAddReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_ConstantOfShapeWithMul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_FFNSlice_1/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVPreReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_QKVReshape4D/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_encoderHiddenStatesReshape/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_getSampleBatch/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromAdd/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_instancenormReshapeFromConcat/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_sampleSlice/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transformer2Dmodel_upBlockResize/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/transpose_batch_matmul/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/sub_graph/word_embeddings/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/tf_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/compile/torch_utils/index.rst", "autoapi/intel_extension_for_transformers/backends/neural_engine/index.rst", "autoapi/intel_extension_for_transformers/evaluation/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/evaluator/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/models/huggingface/index.rst", "autoapi/intel_extension_for_transformers/evaluation/lm_evaluation_harness/models/index.rst", "autoapi/intel_extension_for_transformers/index.rst", "autoapi/intel_extension_for_transformers/optimization/benchmark/index.rst", "autoapi/intel_extension_for_transformers/optimization/config/index.rst", "autoapi/intel_extension_for_transformers/optimization/distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/drop_and_restore_utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/evolution/index.rst", "autoapi/intel_extension_for_transformers/optimization/dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/auto_distillation/index.rst", "autoapi/intel_extension_for_transformers/optimization/mixture/index.rst", "autoapi/intel_extension_for_transformers/optimization/model/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/basic_nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/nas/nas/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer/index.rst", "autoapi/intel_extension_for_transformers/optimization/optimizer_tf/index.rst", "autoapi/intel_extension_for_transformers/optimization/pipeline/index.rst", "autoapi/intel_extension_for_transformers/optimization/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/criteria/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/logger/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/patterns/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruners/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/pruning/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/regs/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/schedulers/index.rst", "autoapi/intel_extension_for_transformers/optimization/pytorch_pruner/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/quantization/index.rst", "autoapi/intel_extension_for_transformers/optimization/trainer/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/get_throughput/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/metrics/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_bert_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/models/modeling_roberta_dynamic/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/objectives/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility/index.rst", "autoapi/intel_extension_for_transformers/optimization/utils/utility_tf/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/data_augmentation/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/index.rst", "autoapi/intel_extension_for_transformers/preprocessing/utils/index.rst", "autoapi/intel_extension_for_transformers/version/index.rst", "autoapi/sparsity_all/index.rst", "autoapi/test_add_cls_token/index.rst", "autoapi/test_add_embeddings/index.rst", "autoapi/test_attention_output_layer_norm_length_adaptive_keep_indices/index.rst", "autoapi/test_attention_reshape/index.rst", "autoapi/test_bert_mini_fp32/index.rst", "autoapi/test_binary_op/index.rst", "autoapi/test_binaryop/index.rst", "autoapi/test_cast_to/index.rst", "autoapi/test_concat/index.rst", "autoapi/test_conv_reshape/index.rst", "autoapi/test_decoder_attn_reshape/index.rst", "autoapi/test_dispatcher_tuning_acc/index.rst", "autoapi/test_dispatcher_tuning_throughput/index.rst", "autoapi/test_dynamic_quantization/index.rst", "autoapi/test_embedding/index.rst", "autoapi/test_embeddingbag/index.rst", "autoapi/test_execution_options/index.rst", "autoapi/test_gelu/index.rst", "autoapi/test_gpt_int8/index.rst", "autoapi/test_graph_dispatch/index.rst", "autoapi/test_insert_input_output_data/index.rst", "autoapi/test_is_supported_onnx_graph/index.rst", "autoapi/test_last_layer_shape/index.rst", "autoapi/test_layer_norm_with_reduce_mean/index.rst", "autoapi/test_layer_norm_with_transpose/index.rst", "autoapi/test_layernorm/index.rst", "autoapi/test_linear/index.rst", "autoapi/test_linear_int8/index.rst", "autoapi/test_main/index.rst", "autoapi/test_matmul/index.rst", "autoapi/test_matmul_int8/index.rst", "autoapi/test_matmul_with_bias_relu/index.rst", "autoapi/test_matmul_with_bias_sigmoid/index.rst", "autoapi/test_matmul_with_bias_tanh/index.rst", "autoapi/test_merged_embeddingbag/index.rst", "autoapi/test_model/index.rst", "autoapi/test_onnx_utils/index.rst", "autoapi/test_operator_adaptor/index.rst", "autoapi/test_ops/index.rst", "autoapi/test_padding_seq/index.rst", "autoapi/test_padding_sequence/index.rst", "autoapi/test_pattern_dispatch/index.rst", "autoapi/test_permute/index.rst", "autoapi/test_position_embeddings/index.rst", "autoapi/test_pow/index.rst", "autoapi/test_primitive_cache_acc/index.rst", "autoapi/test_primitive_cache_throughput/index.rst", "autoapi/test_qkv_merge/index.rst", "autoapi/test_qkv_reshape/index.rst", "autoapi/test_quant_onnx_execute/index.rst", "autoapi/test_reshape_after_restore_hidden_states/index.rst", "autoapi/test_reshape_before_and_after_attention_out_layer_norm_gather_elements/index.rst", "autoapi/test_reshape_before_restore_hidden_states/index.rst", "autoapi/test_size/index.rst", "autoapi/test_softmax/index.rst", "autoapi/test_start_end_logits/index.rst", "autoapi/test_tanh/index.rst", "autoapi/test_text_encoder/index.rst", "autoapi/test_text_encoder_bf16/index.rst", "autoapi/test_tf_utils/index.rst", "autoapi/test_token_type_embeddings/index.rst", "autoapi/test_transpose/index.rst", "autoapi/test_transpose_batch_matmul/index.rst", "autoapi/test_unet/index.rst", "autoapi/test_unet_bf16/index.rst", "autoapi/test_unsqueeze/index.rst", "autoapi/test_vae_decoder/index.rst", "autoapi/test_vae_decoder_bf16/index.rst", "autoapi/test_weight_sharing_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_acc/index.rst", "autoapi/test_weight_sharing_dispatcher_tuning_throughtput/index.rst", "autoapi/test_weight_sharing_throughput/index.rst", "docs/SECURITY.md", "docs/Welcome.md", "docs/api_doc/api.rst", "docs/api_doc/api_example.rst", "docs/api_doc/engine/api_py_engine.rst", "docs/api_doc/engine/compile.rst", "docs/api_doc/engine/graph.rst", "docs/api_doc/engine_api.rst", "docs/api_doc/kernel/engine.rst", "docs/api_doc/kernel/interface.rst", "docs/api_doc/kernel/operator_desc.rst", "docs/api_doc/kernel/types.rst", "docs/api_doc/kernel_api.rst", "docs/api_doc/optimization/config.rst", "docs/api_doc/optimization/model.rst", "docs/api_doc/optimization/optimizer.rst", "docs/api_doc/optimization/tf_optimization.rst", "docs/api_doc/optimization/trainer.rst", "docs/api_doc/user_api.rst", "docs/architecture.md", "docs/autodistillation.md", "docs/benchmark.md", "docs/build_docs/source/example.rst", "docs/build_docs/source/feature.rst", "docs/build_docs/source/index.rst", "docs/build_docs/source/kernel.rst", "docs/build_docs/source/kernel_desc.rst", "docs/build_docs/source/kernel_perf.rst", "docs/build_docs/source/neural_engine.rst", "docs/build_docs/source/user_guide.rst", "docs/code_of_conduct.md", "docs/contributions.md", "docs/data_augmentation.md", "docs/devcatalog.md", "docs/distillation.md", "docs/examples.md", "docs/export.md", "docs/get_started.md", "docs/installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/Installation.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/add_customized_pattern.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/deploy_and_integration.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/engine_tuning.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/graph_fusion.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_compile.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/onnx_quantize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/operator_register.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/pattern_recognize.md", "docs/intel_extension_for_transformers/backends/neural_engine/docs/validated_model.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/3D_inference.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/binaryop_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/eltwise_injector.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/gpu/sparse_gemm_gpu.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_amx.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_avx512f.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_dynamic_quant_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_layernormalized_spmm.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_matmul.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_transpose_mha.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/kernel_desc/kernel_vnni.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/profiling.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/docs/validated_data.md", "docs/intel_extension_for_transformers/backends/neural_engine/kernels/scripts/README.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/benchmark.md", "docs/intel_extension_for_transformers/backends/neural_engine/test/kernels/benchmark/ci/inputs/README.md", "docs/legal.md", "docs/metrics.md", "docs/objectives.md", "docs/pipeline.md", "docs/pruning.md", "docs/quantization.md", "docs/release.md", "docs/user_guide.md", "example.rst", "feature.rst", "index.rst", "kernel.rst", "kernel_desc.rst", "kernel_perf.rst", "neural_engine.rst", "user_guide.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.api_doc_example</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.graph_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.assert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.cos</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.sin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.split</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.ops.view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine.compile.torch_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.backends.neural_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_evaluation_harness</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.evaluation.lm_evaluation_harness.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.benchmark</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic.evolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture.auto_distillation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.mixture</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.basic_nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.nas.nas</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.optimizer_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pipeline</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.criteria</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.patterns</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruners</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.pruning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.regs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.schedulers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.pytorch_pruner.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.get_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.objectives</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.optimization.utils.utility_tf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.data_augmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.preprocessing.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">intel_extension_for_transformers.version</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sparsity_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_cls_token</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_add_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_output_layer_norm_length_adaptive_keep_indices</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_attention_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_bert_mini_fp32</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binary_op</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_binaryop</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_cast_to</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_concat</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_conv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_decoder_attn_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dispatcher_tuning_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_dynamic_quantization</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embedding</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_execution_options</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gelu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_gpt_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_graph_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_insert_input_output_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_is_supported_onnx_graph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_last_layer_shape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_reduce_mean</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layer_norm_with_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_layernorm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_linear_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_main</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_int8</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_relu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_sigmoid</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_matmul_with_bias_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_merged_embeddingbag</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_onnx_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_operator_adaptor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_ops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_seq</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_padding_sequence</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pattern_dispatch</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_permute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_position_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_pow</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_primitive_cache_throughput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_merge</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_qkv_reshape</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_quant_onnx_execute</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_after_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_and_after_attention_out_layer_norm_gather_elements</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_reshape_before_restore_hidden_states</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_size</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_softmax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_start_end_logits</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tanh</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_text_encoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_tf_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_token_type_embeddings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_transpose_batch_matmul</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unet_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_unsqueeze</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_vae_decoder_bf16</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_acc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_dispatcher_tuning_throughtput</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test_weight_sharing_throughput</span></code>", "Security Policy", "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms", "API", "API Document Example", "Python APIs", "Compile", "Graph", "Engine API", "Class engine", "Class Kernel", "Class operator_desc", "Operator Specific Types", "Kernel APIs", "Config", "Model", "PyTorch Optimizer", "TensorFlow Optimizer", "Trainer", "User-facing API", "Architecture of Intel\u00ae Extension for Transformers", "AutoDistillation Design", "Benchmark", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide", "Contributor Covenant Code of Conduct", "Contribution Guidelines", "Data Augmentation", "Intel\u00ae Extension for Transformers", "Distillation", "Examples", "Export to ONNX", "Getting Started", "Installation", "Installation", "Add Customized Pattern", "Deploy and Integration", "Profiling", "Engine Tuning", "Graph Fusion", "Compile an ONNX model to Engine IR", "Quantize a ONNX model to engine low precision/int8 IR", "Customized Operators Register", "Pattern Recognize", "Neural Engine Support Matrix", "Transformers-Accelerated Libraries", "3D Inference", "Binary Injectors", "Element-wise Injector", "Introduction", "Sparse GEMM AMX", "Sparse GEMM AVX512F", "Dynamic Quant Matmul", "Sparse GEMM with Layer-Normalize", "Transposed MatMul", "Transposed MHA", "Sparse GEMM VNNI", "Performance and Profiling", "Validated Performance Data", "How to visualize weights distribution of sparse model", "Benchmark for Kernels", "Inputs format", "Legal Information", "Metrics", "Objective", "Pipeline", "Pruning", "Quantization", "Release", "User Guide", "Example", "Features", "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!", "Kernels", "Implementation Details", "Performance", "Neural Engine", "User Guide"], "terms": {"thi": [0, 3, 10, 142, 155, 174, 175, 184, 209, 210, 211, 212, 213, 216, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 314, 323, 333, 334, 335, 336, 337, 339, 343, 344, 345, 346, 347, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 370, 371, 373, 375], "i": [0, 2, 3, 5, 6, 7, 10, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 190, 196, 203, 206, 209, 210, 211, 212, 214, 216, 221, 222, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 310, 315, 321, 323, 324, 328, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 381], "onli": [0, 10, 184, 190, 209, 210, 216, 221, 222, 226, 324, 341, 344, 346, 347, 348, 350, 353, 355, 356, 357, 360, 362, 363, 364, 368, 371, 373], "us": [0, 2, 10, 15, 48, 126, 142, 155, 174, 175, 180, 184, 189, 190, 192, 196, 198, 199, 202, 203, 206, 209, 210, 213, 216, 221, 222, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 333, 334, 335, 336, 337, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375], "refer": [0, 3, 5, 6, 206, 209, 211, 226, 228, 323, 335, 336, 337, 340, 347, 350, 358, 360, 363, 368, 370, 374, 375], "convert": [0, 2, 5, 6, 10, 15, 180, 189, 190, 339, 349, 363, 368, 375], "python": [0, 5, 6, 10, 221, 222, 310, 321, 334, 335, 336, 341, 342, 343, 344, 346, 348, 349, 367], "docstr": [0, 221, 222], "api": [0, 5, 6, 8, 226, 304, 334, 336, 344, 346, 347, 348, 350, 351, 355, 356, 373, 380], "document": [0, 186, 216, 305, 334, 335, 336, 337, 340, 360, 362, 363, 364, 374, 375], "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 192, 193, 196, 198, 199, 201, 203, 206, 209, 210, 211, 212, 213, 214, 216, 219, 221, 222, 223, 225, 226, 228, 229, 304, 307, 310, 312, 313, 315, 321, 323, 324, 333, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 368, 371, 373, 374, 375], "creat": [0, 180, 190, 196, 201, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 343, 349, 350, 359, 368, 371], "doc": [0, 143, 186, 209, 226, 343, 347, 355, 364], "usag": [0, 336, 371, 372], "py": [0, 3, 210, 335, 336, 341, 343, 345, 349, 367], "exampl": [0, 8, 10, 123, 184, 190, 211, 221, 222, 226, 304, 305, 327, 333, 335, 336, 337, 340, 343, 344, 346, 347, 349, 350, 351, 353, 355, 357, 371, 374, 375, 380], "def": [0, 190, 323, 324, 336, 343], "fun": 0, "return": [0, 5, 6, 7, 10, 15, 48, 126, 180, 181, 184, 189, 192, 196, 198, 199, 201, 203, 204, 209, 210, 211, 212, 213, 214, 216, 221, 222, 323, 324, 335, 336, 343, 347, 351, 355, 356, 371], "1": [0, 10, 186, 189, 190, 191, 205, 209, 210, 216, 221, 222, 224, 226, 314, 323, 324, 333, 335, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 351, 352, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 368, 371, 373, 374, 375], "x": [0, 143, 193, 221, 222, 346, 356, 359, 360, 362, 363, 368, 375], "2": [0, 10, 190, 192, 209, 210, 221, 314, 323, 324, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 351, 352, 357, 358, 359, 364, 365, 366, 368, 370, 371, 373], "print": [0, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 343, 351], "attribute1": 0, "sourc": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 189, 190, 191, 192, 193, 196, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 344, 355, 362, 368, 370], "level": [0, 14, 222, 333, 344, 346, 356, 359, 367], "pleas": [0, 3, 5, 6, 206, 209, 211, 226, 228, 303, 323, 324, 335, 337, 338, 340, 343, 347, 350, 353, 354, 355, 356, 360, 363, 368, 374, 375], "set": [0, 10, 48, 184, 186, 191, 192, 202, 203, 209, 210, 214, 216, 221, 222, 225, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 324, 333, 335, 336, 344, 346, 347, 348, 350, 351, 354, 355, 356, 359, 368], "100": [0, 190, 216, 221, 222, 336, 368, 375], "integ": [0, 209, 210, 213, 335, 339, 346, 347, 364, 368, 374, 375], "type": [0, 5, 6, 7, 10, 15, 48, 126, 180, 181, 184, 189, 190, 192, 198, 203, 204, 209, 210, 212, 213, 214, 216, 221, 225, 226, 228, 315, 323, 334, 335, 336, 337, 338, 339, 344, 345, 346, 348, 351, 353, 355, 356, 361, 367, 368, 371, 372, 375], "int": [0, 10, 184, 186, 189, 190, 205, 209, 216, 221, 314, 324, 343, 355, 356, 357, 360], "module_debug_level1": 0, "debug": [0, 14], "function1": 0, "param1": 0, "param2": 0, "paramet": [0, 5, 6, 7, 10, 15, 48, 126, 180, 181, 184, 189, 190, 192, 196, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 216, 221, 222, 225, 226, 314, 323, 324, 337, 345, 351, 371, 374], "str": [0, 10, 48, 126, 184, 186, 189, 190, 191, 198, 202, 204, 205, 209, 216, 219, 221, 222, 223, 226, 228, 324, 335], "parameter1": 0, "float": [0, 190, 191, 203, 205, 209, 210, 211, 212, 213, 216, 219, 223, 314, 335, 337, 339, 343, 349, 355, 356, 357, 371, 372, 374, 375], "parameter2": 0, "import": [0, 8, 10, 204, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 324, 335, 336, 337, 340, 343, 344, 346, 348, 351, 355, 356, 360, 371, 372, 373, 374, 375], "o": [0, 10, 226, 323, 335, 336, 341, 352, 356, 361, 366], "rang": [0, 26, 190, 216, 323, 336, 343, 346, 368, 374, 375], "3": [0, 10, 314, 323, 324, 335, 337, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 356, 358, 359, 364, 366, 368, 369, 371], "0": [0, 8, 10, 180, 184, 190, 191, 193, 205, 209, 213, 219, 221, 222, 224, 225, 226, 311, 312, 314, 323, 324, 335, 336, 337, 340, 341, 343, 344, 345, 346, 347, 349, 350, 351, 352, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 370, 371, 373, 374, 375], "valu": [0, 10, 15, 180, 181, 189, 190, 202, 206, 209, 211, 214, 216, 221, 222, 314, 335, 336, 337, 343, 344, 345, 346, 347, 355, 356, 357, 358, 360, 362, 363, 368, 371, 372, 374, 375], "true": [0, 8, 184, 190, 209, 216, 219, 221, 222, 223, 323, 336, 339, 340, 342, 343, 345, 346, 355, 356, 362, 365, 368, 371, 372, 375], "fals": [0, 184, 186, 190, 191, 193, 198, 209, 216, 221, 222, 314, 323, 324, 337, 340, 343, 346, 355, 356, 368, 371], "bool": [0, 184, 186, 190, 191, 198, 209, 216, 219, 221, 222, 223, 311, 312, 313, 314, 324, 337, 343, 355, 356, 371, 372], "function2": 0, "pep": 0, "484": [0, 352], "annot": 0, "style": [0, 334], "from": [0, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 180, 181, 189, 193, 196, 198, 206, 209, 210, 211, 212, 213, 214, 216, 221, 222, 226, 323, 324, 333, 335, 337, 338, 340, 343, 344, 345, 346, 347, 348, 350, 351, 355, 356, 359, 360, 361, 362, 363, 364, 371, 372, 373, 374, 375], "neural_compressor": [0, 190, 202, 216], "config": [0, 2, 8, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 189, 192, 195, 196, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 216, 221, 222, 321, 324, 335, 336, 337, 338, 340, 344, 345, 347, 350, 355, 368, 373, 374], "mixedprecisionconfig": 0, "eval_func": [0, 202, 203, 216, 323], "model": [0, 2, 5, 6, 7, 8, 10, 13, 15, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 159, 160, 161, 163, 164, 178, 179, 181, 184, 189, 190, 193, 195, 196, 199, 202, 203, 204, 209, 210, 211, 213, 214, 216, 225, 226, 321, 323, 335, 337, 338, 340, 342, 343, 346, 347, 351, 352, 355, 360, 361, 362, 363, 366, 370, 371, 372, 374, 375, 384], "accuraci": [0, 190, 196, 216, 323, 337, 338, 340, 360, 368, 371, 372, 374], "conf": [0, 8, 190, 344, 345, 346, 350, 367], "output_model": 0, "mix_precis": 0, "fit": [0, 202, 209, 357], "function3": 0, "none": [0, 2, 8, 15, 47, 48, 73, 180, 181, 184, 186, 189, 190, 191, 192, 193, 196, 199, 202, 203, 204, 205, 214, 216, 219, 221, 222, 223, 224, 225, 314, 323, 335, 337, 338, 339, 345, 371, 372, 374, 375], "arg": [0, 14, 198, 203, 211, 216, 226, 312, 323, 345, 350], "kwarg": [0, 14, 190, 198, 211, 216, 221, 222], "an": [0, 3, 15, 180, 201, 209, 210, 213, 216, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 333, 335, 336, 338, 339, 340, 343, 344, 345, 346, 347, 350, 351, 354, 355, 356, 360, 361, 364, 369, 371, 373, 384], "If": [0, 10, 192, 216, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 334, 337, 339, 343, 344, 345, 346, 347, 348, 351, 355, 361, 368, 370, 371, 374, 375], "ar": [0, 10, 143, 192, 193, 209, 210, 211, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 333, 334, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 368, 369, 370, 371, 372, 374, 375], "accept": [0, 216, 333, 373], "thei": [0, 10, 198, 209, 333, 337, 342, 351, 354, 355, 356, 358, 362, 368], "should": [0, 10, 198, 209, 210, 216, 221, 222, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 343, 344, 346, 347, 350, 351, 354, 355, 356, 361, 368, 369, 371, 372, 375], "list": [0, 5, 6, 7, 8, 10, 15, 48, 180, 181, 184, 190, 191, 202, 205, 209, 211, 216, 221, 222, 336, 337, 342, 343, 344, 347, 355, 356, 369, 375], "option": [0, 10, 184, 189, 190, 198, 202, 204, 209, 216, 221, 222, 323, 324, 345, 351, 355, 364, 368], "argument": [0, 184, 190, 211, 216, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 337, 345, 369, 371, 372, 374, 375], "kei": [0, 8, 10, 15, 180, 209, 211, 214, 216, 221, 222, 304, 336, 345, 346, 347, 355, 356, 358], "dict": [0, 10, 15, 180, 181, 184, 190, 199, 204, 205, 206, 209, 210, 211, 212, 213, 214, 216, 221, 222, 226, 335, 343, 344, 374], "section": [0, 336, 353, 364, 365], "support": [0, 10, 15, 126, 186, 190, 193, 204, 205, 209, 210, 215, 226, 314, 340, 341, 342, 343, 344, 345, 346, 350, 351, 356, 360, 361, 363, 365, 367, 368, 373, 374, 378], "ani": [0, 10, 198, 216, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 334, 343, 351, 373], "restructuredtext": 0, "format": [0, 14, 216, 323, 345, 362, 363, 366, 367, 375], "includ": [0, 206, 209, 212, 213, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 312, 313, 314, 333, 334, 336, 338, 344, 345, 346, 353, 356, 364, 368, 370, 375], "liter": 0, "block": [0, 209, 211, 221, 222, 338, 354, 357, 358, 359, 360, 361, 363, 364, 374], "rais": [0, 209, 210, 214, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "attributeerror": 0, "except": [0, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 346, 355], "valueerror": 0, "equal": [0, 10, 216, 347, 354, 355], "generator1": 0, "n": [0, 10, 193, 209, 221, 222, 314, 335, 337, 346, 347, 349, 352, 354, 357, 358, 359, 360, 363, 364, 366, 368], "gener": [0, 10, 143, 189, 190, 209, 211, 216, 221, 222, 226, 324, 336, 337, 343, 347, 351, 355, 356, 359, 360, 363, 365, 367, 368, 371, 372, 375], "have": [0, 2, 10, 180, 184, 209, 210, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 334, 336, 343, 344, 345, 346, 347, 348, 351, 356, 360, 361, 362, 363, 367, 368, 370, 371, 372, 373, 374, 375], "yield": [0, 375], "next": [0, 2, 8, 213, 221, 222, 323, 347, 348, 355, 357, 359, 361, 362, 363, 364], "number": [0, 15, 184, 190, 192, 193, 209, 210, 213, 222, 226, 324, 335, 346, 347, 351, 354, 357, 360, 363, 364, 368, 369, 375], "example_gener": 0, "4": [0, 10, 190, 205, 209, 216, 221, 222, 314, 323, 324, 333, 335, 337, 338, 341, 343, 345, 346, 347, 350, 351, 352, 358, 359, 360, 361, 364, 365, 368, 374], "exampleclass": 0, "param3": 0, "ha": [0, 5, 6, 7, 10, 209, 210, 226, 323, 334, 335, 336, 343, 346, 347, 349, 350, 351, 354, 356, 360, 368, 375], "public": [0, 311, 312, 313, 314, 333, 350, 355, 356], "mai": [0, 2, 10, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 334, 336, 343, 346, 351, 357, 358, 359, 361, 362, 363, 364, 368, 370, 375], "here": [0, 10, 199, 216, 330, 336, 342, 343, 346, 347, 348, 350, 351, 356, 364, 375, 376, 383], "attr1": 0, "descript": [0, 184, 216, 334, 335, 337, 345, 364, 371, 372, 374, 375], "attr2": 0, "attr5": 0, "after": [0, 10, 123, 142, 155, 174, 175, 206, 209, 210, 211, 212, 213, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 339, 342, 345, 346, 347, 348, 350, 351, 354, 356, 361, 363, 364, 367, 368, 369, 375], "specifi": [0, 10, 186, 190, 192, 199, 201, 203, 205, 215, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 347, 348, 356, 360, 362, 368, 374, 375], "method1": 0, "execut": [0, 199, 210, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 312, 323, 336, 346, 350, 353, 355, 356, 360, 361, 363, 365, 368, 369, 375], "It": [0, 10, 198, 209, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 337, 343, 345, 346, 347, 350, 351, 359, 360, 362, 363, 368], "": [0, 10, 15, 48, 180, 190, 209, 210, 216, 222, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 312, 323, 333, 336, 337, 343, 344, 345, 347, 348, 350, 352, 357, 361, 363, 366, 368, 369, 373, 375], "neural": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 123, 150, 180, 181, 198, 203, 209, 211, 229, 304, 323, 324, 332, 336, 337, 343, 345, 346, 347, 348, 359, 367, 372, 375, 378, 385], "engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 100, 123, 150, 180, 181, 196, 216, 229, 305, 315, 323, 332, 336, 343, 345, 347, 350, 355, 360, 363, 367, 378, 385], "start_pipelin": 2, "pipelin": [2, 195, 196, 199, 379], "graph": [2, 3, 5, 6, 7, 10, 11, 12, 15, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 307, 336, 337, 343, 348, 351, 359, 362, 364, 384], "interfac": [2, 190, 221, 222, 312, 339, 342, 353], "firstli": 2, "loader": [2, 11, 182, 346, 348, 351], "get": [2, 8, 10, 14, 15, 180, 181, 192, 193, 206, 209, 210, 212, 213, 216, 223, 225, 228, 339, 343, 346, 347, 348, 350, 351, 355, 362, 364, 369, 373, 380], "comput": [2, 10, 180, 216, 221, 222, 328, 336, 340, 351, 353, 354, 355, 356, 357, 360, 362, 363, 367, 373, 375, 381], "correspond": [2, 5, 6, 10, 210, 323, 343, 347, 351, 353, 360, 364, 367, 375], "framework": [2, 10, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 123, 190, 196, 204, 216, 224, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 328, 337, 338, 341, 343, 344, 348, 353, 373, 374, 375, 381], "contain": [2, 10, 15, 143, 180, 181, 209, 210, 211, 213, 214, 216, 221, 222, 226, 323, 328, 335, 337, 343, 344, 346, 347, 351, 353, 355, 367, 368, 369, 374, 375, 381], "node": [2, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 142, 155, 174, 175, 180, 181, 225, 339, 351, 352, 366], "edg": 2, "op": [2, 5, 6, 7, 10, 11, 15, 107, 123, 133, 180, 181, 182, 190, 216, 314, 345, 350, 351, 355, 356, 368, 369, 375], "tensor": [2, 5, 6, 7, 8, 10, 11, 15, 36, 63, 123, 180, 181, 182, 189, 206, 209, 210, 212, 213, 216, 221, 222, 314, 343, 344, 345, 347, 348, 350, 362, 367, 368, 374, 375], "Then": [2, 10, 337, 347, 348, 363, 364, 368, 374, 375], "extract": [2, 3, 5, 6, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 343, 346, 348], "pack": [2, 11, 36, 182, 364], "them": [2, 5, 6, 10, 343, 344, 347, 355, 358, 360, 363, 364, 375], "our": [2, 335, 339, 351, 355, 357, 358, 360, 362, 363, 364, 373], "form": [2, 10, 184, 216, 337, 345, 351, 354, 359, 363, 368], "exploit": [2, 351], "abov": [2, 10, 221, 222, 342, 343, 346, 347, 351, 357, 358, 360, 361, 362, 367], "consist": [2, 334], "sub": [2, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 343, 346, 347, 355, 362, 363], "which": [2, 5, 6, 7, 10, 180, 190, 192, 196, 198, 206, 209, 210, 213, 216, 221, 222, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 335, 337, 342, 343, 344, 346, 347, 351, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 367, 368, 371, 374, 375], "can": [2, 10, 107, 123, 143, 186, 198, 209, 210, 211, 213, 216, 221, 222, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 335, 336, 337, 339, 343, 344, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 368, 372, 373, 374, 375], "see": [2, 10, 143, 184, 221, 222, 303, 333, 336, 343, 345, 346, 347, 348, 351, 352, 354, 359, 363, 365, 366, 367, 368, 370], "new": [2, 5, 6, 7, 10, 15, 209, 213, 216, 334, 351, 355, 356, 369, 376], "big": [2, 346, 347], "like": [2, 5, 6, 7, 10, 143, 180, 209, 226, 335, 336, 337, 340, 343, 344, 345, 346, 347, 348, 351, 355, 356, 358, 365, 371, 372, 374, 375], "layernorm": [2, 10, 39, 110, 343, 347, 351, 353, 368], "There": [2, 337, 343, 344, 345, 361, 365, 368, 372, 374], "differ": [2, 8, 13, 79, 80, 81, 82, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 159, 160, 161, 163, 164, 178, 179, 192, 201, 209, 323, 333, 335, 336, 337, 340, 343, 344, 346, 347, 348, 351, 354, 361, 364, 371, 372, 374, 375], "flow": [2, 10, 343, 347], "one": [2, 5, 6, 10, 209, 211, 213, 221, 314, 323, 336, 337, 340, 342, 343, 345, 346, 347, 351, 355, 357, 358, 363, 367, 368, 373], "subgraph": [2, 10, 150, 346, 348], "final": [2, 209, 210, 346, 347, 348, 350, 351, 357, 360, 361, 363, 371], "yaml": [2, 8, 10, 199, 201, 214, 216, 345, 346, 348, 367], "file": [2, 3, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 126, 150, 190, 193, 196, 198, 199, 201, 211, 214, 216, 217, 226, 229, 335, 336, 343, 344, 345, 346, 348, 350, 355, 356, 367, 368, 369, 370], "bin": [2, 8, 202, 344, 345, 346, 348, 365, 367], "configur": [2, 89, 190, 192, 198, 199, 201, 203, 205, 209, 211, 214, 216, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 314, 323, 335, 338, 339, 346, 354, 355, 359, 376], "infer": [2, 8, 13, 189, 203, 216, 222, 304, 338, 340, 342, 343, 345, 346, 347, 348, 358, 360, 361, 363, 372, 375, 382], "base": [3, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 198, 204, 206, 209, 216, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 312, 323, 335, 336, 339, 340, 341, 348, 349, 350, 352, 357, 359, 360, 361, 362, 363, 365, 366, 373], "tensorflow": [3, 6, 16, 17, 18, 19, 20, 22, 27, 29, 34, 37, 38, 41, 42, 43, 45, 46, 49, 50, 52, 53, 56, 58, 59, 62, 71, 72, 76, 180, 190, 196, 203, 225, 321, 340, 341, 344, 351, 375], "onnx": [3, 5, 15, 181, 190, 216, 336, 340, 343, 345, 346, 362, 373, 379, 384], "onnx_extractor": [3, 4, 11, 182], "tf_extractor": [3, 4, 11, 182], "more": [3, 5, 6, 10, 143, 209, 303, 337, 340, 342, 343, 345, 347, 348, 350, 351, 352, 353, 354, 355, 358, 360, 361, 362, 364, 366, 367, 368], "detail": [3, 10, 323, 328, 330, 333, 334, 336, 337, 338, 340, 342, 343, 345, 346, 347, 350, 351, 352, 353, 358, 365, 366, 368, 374, 375, 381, 383], "A": [3, 10, 192, 199, 204, 206, 209, 210, 211, 212, 213, 214, 216, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 343, 344, 351, 352, 354, 357, 358, 364, 366, 367, 368], "super": [3, 343, 346], "oper": [3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 123, 180, 181, 209, 313, 315, 328, 338, 342, 343, 344, 346, 348, 353, 355, 356, 357, 359, 360, 361, 362, 363, 364, 368, 375, 381, 384], "do": [3, 190, 193, 202, 203, 211, 216, 333, 339, 343, 344, 346, 347, 351, 355, 357, 374, 375], "addit": [3, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 336, 338, 345, 357, 361, 369, 376], "attribut": [3, 5, 6, 7, 10, 48, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 311, 312, 323, 345, 347, 350, 356], "without": [3, 202, 210, 216, 333, 337, 343, 344, 361, 364, 365, 368], "modifi": [3, 8, 10, 107, 123, 211, 222, 344, 345, 348], "topologi": 3, "modul": [4, 9, 11, 12, 36, 100, 200, 208, 323, 348, 349], "torch_extractor": [4, 11, 182], "all": [5, 6, 7, 8, 10, 11, 36, 48, 123, 126, 182, 209, 210, 211, 216, 221, 222, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 323, 333, 336, 337, 342, 343, 344, 345, 347, 351, 352, 355, 356, 357, 358, 360, 363, 366, 367, 371, 374, 375], "input": [5, 6, 8, 10, 15, 26, 123, 143, 180, 181, 189, 203, 204, 209, 210, 216, 221, 222, 314, 323, 324, 335, 336, 337, 339, 340, 344, 345, 346, 347, 350, 359, 361, 362, 364, 368, 373], "compos": [5, 6, 7, 196, 216, 323, 343, 348, 363], "order": [5, 6, 8, 10, 196, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 335, 343, 345, 351, 354, 360, 361, 363, 364], "origin": [5, 6, 10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189, 209, 210, 211, 214, 226, 335, 337, 343, 348, 361, 362, 375], "calcul": [5, 6, 143, 193, 206, 209, 211, 212, 323, 345, 351, 354, 356, 357, 360, 361, 364, 368, 375], "notic": [5, 6, 348, 355, 362, 363, 370], "map": [5, 6, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 209, 212, 216, 323, 336, 337, 354, 375], "between": [5, 6, 210, 221, 222, 314, 323, 337, 361, 364, 368, 375], "For": [5, 6, 10, 15, 123, 209, 211, 303, 323, 333, 336, 340, 343, 346, 347, 351, 352, 353, 355, 358, 362, 363, 364, 365, 366, 373], "relat": [5, 6, 212, 216, 330, 337, 343, 347, 351, 358, 363, 374, 375, 383], "deatil": [5, 6], "onnxextractor": 5, "decor": [5, 6, 7, 15, 48, 126, 180, 181, 209, 210, 213], "graph_def": [5, 6, 7, 180], "input_tensor": [5, 6, 7, 10, 15, 48, 180, 181, 221, 222, 343, 347], "output_tensor": [5, 6, 7, 10, 15, 48, 180, 181, 343, 347], "record": [5, 6, 7, 323, 345, 346], "dest": [5, 6, 7, 10, 15, 180], "name": [5, 6, 7, 8, 10, 15, 48, 73, 126, 180, 184, 190, 191, 198, 204, 205, 206, 209, 210, 212, 213, 219, 223, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 335, 336, 337, 338, 340, 341, 343, 344, 345, 346, 347, 349, 351, 352, 356, 366, 367, 370, 371, 372, 373, 374, 375], "object": [5, 6, 7, 180, 184, 190, 195, 199, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 216, 218, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 324, 336, 337, 340, 343, 350, 374, 379], "onnxmodel": [5, 15], "tensorflowextractor": 6, "tensorflowmodel": [6, 180], "torch": [7, 143, 181, 186, 189, 190, 209, 216, 221, 222, 324, 336, 373], "torchextractor": 7, "torchscript": [7, 67, 181, 189, 190, 216, 324], "defint": 8, "add_config_item": 8, "val": [8, 214], "add": [8, 10, 26, 190, 193, 211, 214, 337, 344, 345, 346, 347, 351, 353, 355, 356, 363, 368, 369, 384], "pair": [8, 190, 221, 344, 356, 364], "framework_modeling_config": 8, "inquire_config_item": 8, "insert_nod": 8, "index": [8, 221, 222, 225, 314, 347, 350, 351], "insert": [8, 10, 348, 350, 351, 355, 356, 375], "ir": [8, 343, 344, 345, 346, 365, 367, 384], "remove_nod": 8, "node_nam": [8, 10, 15, 180, 343, 347], "remov": [8, 133, 222, 333, 334, 356, 374], "get_node_id": [8, 343], "id": [8, 10, 198, 222, 225, 356, 357], "accord": [8, 209, 213, 343, 346, 364], "get_node_by_nam": 8, "rename_nod": 8, "old_nam": 8, "new_nam": 8, "change_node_input_tensor": 8, "mode": [8, 189, 191, 205, 210, 215, 323, 345, 349, 361, 363, 368, 369, 375], "change_node_output_tensor": 8, "output": [8, 10, 15, 26, 180, 181, 190, 202, 209, 210, 216, 221, 222, 323, 335, 337, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 359, 360, 361, 362, 364, 368, 373], "get_pre_node_nam": 8, "previou": [8, 196, 209, 216, 336, 344, 376], "get_next_node_nam": 8, "get_tensor_idx": 8, "tensor_nam": [8, 15, 180], "from_output": 8, "modify_node_connect": 8, "dump_tensor": 8, "tensor_list": 8, "dump": [8, 375], "engine_init": 8, "net_info": 8, "weight_data": 8, "b": [8, 10, 15, 221, 314, 343, 351, 354, 357, 358, 359, 363, 364, 367, 368], "pybind": 8, "executor": [8, 343, 344, 345], "input_data": [8, 10, 11, 100, 182, 344], "graph_init": [8, 344, 346], "initi": [8, 10, 15, 48, 190, 199, 210, 216, 221, 222, 314, 323, 355, 356, 360, 373, 374], "newgraph": 8, "out": [8, 10, 209, 216, 334, 336, 343, 344, 347, 353, 362, 375], "input_0": [8, 344, 346], "input_1": [8, 344, 346], "input_2": [8, 344, 346], "save": [8, 184, 193, 202, 216, 335, 336, 343, 344, 345, 348, 358, 362, 364, 375], "output_dir": [8, 184, 202, 216, 323, 335, 348, 349], "ymal": 8, "graph_dispatch": [8, 346], "tune": [8, 190, 216, 335, 337, 370, 371, 372, 374, 384], "inputs_shap": [8, 346], "dispatch": 8, "get_sparse_nodes_nam": 8, "threshold": [8, 209, 368], "7": [8, 10, 314, 323, 336, 338, 341, 342, 343, 347, 349, 351, 352, 358, 366, 368, 371, 375], "sparsiti": [8, 190, 209, 210, 211, 213, 352, 367, 368, 374], "spars": [8, 210, 304, 314, 336, 346, 353, 354, 363, 368, 382], "transpose_mode_int8": 8, "node_name_list": 8, "transpos": [8, 11, 36, 61, 182, 209, 221, 222, 345, 346, 353, 354, 358, 360, 361, 364, 368, 382], "innerproduct": [8, 26, 107, 345, 346, 353], "reorder": [8, 11, 36, 182, 360, 361], "util": [10, 15, 180, 181, 190, 192, 195, 207, 227, 335, 343, 351, 354, 360, 361, 364, 368], "names_from_input": 10, "static": [10, 223, 311, 314, 345, 348, 355, 358, 360, 373], "method": [10, 193, 201, 205, 212, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 335, 338, 355, 358, 360, 363, 365, 374, 375], "valid": [10, 190, 203, 209, 210, 214, 216, 324, 334, 335, 337, 340, 351, 370, 376, 383], "string": [10, 15, 180, 181, 184, 193, 199, 201, 209, 210, 211, 212, 213, 214, 225, 226, 313, 335, 337, 343, 346, 347, 350, 356, 371, 372, 374, 375], "defin": [10, 184, 190, 199, 201, 202, 209, 210, 211, 212, 213, 216, 311, 323, 333, 336, 337, 343, 344, 350, 351, 364, 369, 371, 374, 375], "field": [10, 190, 335, 355, 356, 375], "tupl": [10, 192, 204, 209, 221, 222], "In": [10, 196, 209, 210, 212, 216, 221, 323, 333, 336, 343, 344, 345, 346, 347, 348, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 371, 372, 375], "nodedef": [10, 180], "end": [10, 210, 211, 221, 222, 226, 304, 336, 345, 348, 350, 351, 356, 365], "also": [10, 209, 334, 336, 343, 344, 345, 347, 348, 350, 351, 354, 355, 356, 357, 360, 363, 364, 365, 372, 375], "get_data_dtyp": 10, "data": [10, 73, 189, 209, 226, 228, 314, 323, 336, 338, 343, 344, 346, 348, 349, 350, 354, 355, 356, 357, 360, 361, 364, 368, 375, 379, 383], "const": [10, 15, 180, 311, 312, 313, 314, 350, 353, 355, 356, 357, 358], "dtype": [10, 15, 73, 180, 181, 186, 216, 336, 339, 344, 345, 346, 350], "numpi": [10, 15, 336, 344], "dtypes_dict": 10, "autocast_init": 10, "quant": [10, 107, 190, 353, 368, 375, 382], "info": [10, 14, 15, 143, 180, 181, 209, 214, 323, 336, 343, 344, 365], "set_autocast": 10, "get_autocast_info": 10, "quant_info_init": 10, "insert_quant_info": 10, "get_quant_info": 10, "search_straight_pattern": [10, 351], "input_pattern": [10, 351], "search": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 190, 193, 196, 199, 216, 323, 338, 347], "user": [10, 184, 210, 211, 214, 221, 222, 226, 304, 305, 323, 324, 327, 330, 336, 339, 343, 345, 347, 349, 360, 362, 365, 368, 372, 373, 380, 383], "pattern": [10, 11, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 190, 195, 207, 210, 212, 312, 348, 354, 357, 367, 374, 384], "intern": [10, 347, 360], "grpah": [10, 15, 180], "structur": [10, 210, 338, 343, 344, 346, 359, 363, 367, 374], "attent": [10, 221, 222, 312, 323, 333, 345, 351, 362], "chain": [10, 355, 356], "call": [10, 210, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 339, 343, 346, 347, 354, 355, 356, 360, 363, 364, 375], "must": [10, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 341, 347, 351, 354, 355, 357, 364], "straight": 10, "sequenc": [10, 186, 192, 209, 221, 222, 336, 340, 343, 347, 351, 359, 368], "mean": [10, 11, 36, 182, 190, 209, 221, 222, 226, 314, 335, 343, 344, 345, 346, 347, 351, 354, 355, 357, 361, 364, 368, 371, 374, 375], "otherwis": [10, 184, 333, 343, 346, 360, 368], "op_typ": [10, 15, 48, 180, 181, 343, 346, 347, 356], "element": [10, 209, 211, 216, 343, 351, 353, 357, 359, 362, 364, 368, 382], "could": [10, 209, 211, 312, 333, 343, 344, 345, 347, 348, 351, 358, 367, 368, 374, 375], "mandatori": 10, "while": [10, 210, 344, 347, 351, 357, 360, 363, 368, 375], "stand": [10, 343], "mybe": 10, "mul": [10, 343, 347, 351, 355], "addv2": [10, 26, 351], "below": [10, 190, 304, 323, 334, 335, 336, 337, 343, 344, 346, 348, 351, 354, 359, 361, 362, 363, 364, 372], "extractor": [10, 11, 182, 346, 348, 351], "length": [10, 190, 192, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 336, 347, 351, 355, 368, 375], "match": [10, 323, 337, 346, 347, 351, 359, 362], "result": [10, 184, 196, 203, 216, 323, 324, 333, 336, 338, 343, 346, 347, 352, 355, 356, 357, 360, 361, 362, 363, 364, 366, 370, 374, 375], "24": [10, 323, 351, 352, 358, 366], "layer": [10, 190, 192, 209, 211, 214, 221, 222, 323, 345, 351, 355, 359, 362, 374, 382], "each": [10, 143, 184, 190, 196, 209, 210, 216, 221, 222, 226, 323, 335, 345, 346, 347, 354, 357, 359, 360, 361, 362, 363, 364, 367, 368, 369, 374], "still": [10, 211, 351, 357, 375], "last": [10, 190, 206, 209, 216, 221, 222, 347, 351, 354, 359, 360, 362, 375], "former": [10, 351], "search_pattern": [10, 351], "pattern_list": 10, "complet": [10, 343, 352, 357, 360, 363, 366], "represent": [10, 333, 340, 343, 347, 348], "its": [10, 123, 196, 209, 210, 216, 323, 333, 337, 343, 347, 348, 351, 359, 360, 361, 364, 367, 368, 370], "op_idx": 10, "howev": [10, 211, 346, 347, 351, 354, 358, 361, 364], "due": [10, 221, 347, 351, 354, 375], "few": [10, 184, 359], "complic": [10, 343, 351], "therefor": [10, 339, 354, 359, 362, 364, 375], "fist": 10, "repres": [10, 209, 210, 211, 212, 213, 214, 333, 345, 347, 351, 354, 356, 357, 360, 375], "main": [10, 186, 211, 216, 221, 222, 226, 347, 361, 368], "top": [10, 304, 335, 336, 359], "down": 10, "head": [10, 221, 222, 351, 356, 362, 363], "tail": [10, 351, 365], "left": [10, 209, 221, 222, 358, 362, 364], "bert_large_squad": 10, "pb": [10, 340], "squareddiffer": [10, 26, 351], "rsqrt": [10, 26, 351], "5": [10, 83, 84, 85, 86, 87, 151, 152, 153, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 190, 191, 314, 323, 324, 335, 337, 343, 344, 345, 347, 350, 351, 352, 358, 366, 368], "8": [10, 314, 323, 336, 338, 339, 341, 343, 345, 347, 349, 351, 352, 356, 357, 358, 364, 365, 366, 368, 375], "9": [10, 190, 226, 323, 335, 336, 340, 341, 343, 351, 352, 358, 366, 368, 374], "6": [10, 314, 323, 337, 338, 342, 343, 347, 351, 352, 356, 358, 365, 366, 375], "same": [10, 209, 222, 337, 339, 343, 344, 345, 347, 348, 351, 354, 357, 360, 361, 364, 367, 368, 369], "func": [10, 323, 346], "follow": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 186, 221, 222, 307, 310, 315, 321, 324, 333, 334, 335, 336, 337, 341, 343, 345, 346, 347, 348, 350, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 368, 369, 370, 375], "frozen": [10, 344, 348], "you": [10, 186, 190, 202, 221, 222, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 334, 335, 336, 337, 339, 343, 344, 346, 347, 348, 351, 355, 356, 358, 365, 367, 368, 370, 371, 373, 374, 375, 376], "had": [10, 343], "better": [10, 196, 203, 216, 323, 343, 344, 345, 346, 354, 360, 361, 362, 363, 367, 371, 372, 375], "identifi": [10, 198, 357], "your": [10, 216, 226, 228, 334, 335, 336, 340, 343, 344, 345, 346, 347, 355, 356, 368, 370, 373], "own": [10, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 343, 347, 348, 355, 361, 372], "casual": 10, "tf": [10, 203, 221, 323], "control": [10, 189, 190, 323, 343], "start": [10, 210, 221, 222, 345, 351, 369, 380], "mostli": [10, 351], "longest": [10, 351], "path": [10, 184, 190, 196, 198, 199, 201, 202, 211, 214, 216, 225, 226, 335, 336, 340, 344, 345, 346, 348, 365, 367, 368], "sometim": [10, 347, 375], "connect": [10, 206, 374], "But": [10, 344, 354, 373], "don": [10, 190, 209, 221, 222, 350, 355], "t": [10, 190, 209, 221, 222, 312, 314, 323, 335, 337, 350, 354, 355, 357, 362, 363, 364, 368, 374], "need": [10, 107, 190, 209, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 335, 336, 337, 343, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 368, 374, 375, 376], "least": [10, 209, 211, 361], "doesn": [10, 323, 355, 364, 368], "exist": [10, 198, 226, 323, 340, 343, 373], "relationship": 10, "sever": [10, 213, 335, 343, 348, 351, 354, 368, 375], "split": [10, 11, 36, 182, 324, 335, 346, 354, 358, 361], "representtaion": 10, "two": [10, 209, 210, 213, 216, 337, 343, 346, 347, 349, 350, 355, 356, 358, 360, 361, 362, 363, 364, 372, 373, 374, 375], "idx": [10, 314, 356], "some": [10, 123, 222, 336, 343, 344, 345, 346, 347, 350, 351, 355, 356, 360, 364, 375], "outsid": [10, 221, 222, 347, 351], "give": [10, 343, 347, 354], "just": [10, 222, 336, 343, 344, 345, 346, 347, 348, 351, 356, 364, 367, 371], "empti": [10, 26, 347, 351, 356, 369], "algorithm": [10, 48, 126, 190, 199, 314, 323, 335, 346, 347, 350, 351, 354, 355, 361, 368, 374, 375], "kind": [10, 89, 313, 350, 361, 368], "beaus": 10, "make": [10, 48, 123, 209, 210, 213, 216, 324, 333, 334, 342, 343, 344, 353, 354, 355, 356, 357, 359, 360, 361, 362, 365, 368], "sure": [10, 123, 209, 210, 213, 324, 343, 357, 368], "whole": [10, 196, 323, 338, 345, 346, 349, 359, 360, 361, 363, 365], "so": [10, 198, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 337, 342, 343, 346, 347, 350, 351, 355, 357, 358, 359, 360, 361, 363, 364, 365, 368, 371, 372, 374, 375], "check": [10, 15, 107, 190, 209, 210, 214, 216, 330, 334, 336, 343, 346, 347, 351, 356, 383], "symmetr": [10, 351, 360, 368, 375], "consecut": [10, 358, 364], "y": [10, 143, 356], "shape": [10, 11, 36, 73, 182, 209, 221, 222, 314, 323, 336, 344, 345, 346, 350, 354, 360, 362, 368], "df": [10, 351], "duplic": 10, "would": [10, 209, 343, 347, 348, 351, 365], "perform": [10, 190, 196, 199, 210, 212, 216, 221, 222, 223, 323, 324, 328, 336, 337, 339, 340, 344, 345, 346, 349, 354, 357, 358, 359, 360, 361, 362, 363, 364, 368, 371, 372, 374, 375, 381], "befor": [10, 190, 206, 209, 210, 211, 212, 213, 216, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 324, 334, 337, 339, 343, 344, 346, 347, 348, 351, 355, 356, 357, 358, 360, 361, 363, 368, 375], "splice": 10, "de": 10, "total": [10, 190, 192, 209, 210, 213, 221, 323, 324, 335, 347, 351, 357, 364, 365], "step": [10, 190, 206, 209, 210, 211, 212, 213, 216, 342, 343, 345, 347, 348, 349, 350, 351, 355, 360, 362, 363, 368], "c": [10, 314, 315, 336, 341, 342, 343, 344, 346, 351, 352, 357, 359, 366, 368], "d": [10, 323, 335, 337, 354, 362], "e": [10, 143, 184, 190, 196, 209, 216, 323, 333, 336, 337, 346, 355, 356, 360, 361, 362, 368, 369], "f": [10, 314, 337, 350, 365, 375], "c1": 10, "d1": [10, 368], "c2": 10, "d2": 10, "c3": [10, 365], "d3": [10, 365], "now": [10, 226, 342, 343, 344, 346, 347, 348, 355, 356, 363, 368, 373], "part": [10, 184, 210, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 347, 350, 351, 363, 364], "As": [10, 337, 343, 345, 347, 348, 358, 362, 364], "appli": [10, 190, 209, 210, 333, 338, 340, 355, 356, 360, 361, 362, 364, 368, 374, 375], "everi": [10, 209, 210, 211, 343, 354, 368], "right": [10, 221, 222, 333, 358, 362, 364, 373], "construct_nod": 10, "attr": [10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 313, 343, 344, 355, 356], "ordereddict": [10, 48, 343], "construct": [10, 48, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 355, 356], "new_nod": 10, "insert_pattern": 10, "target_node_nam": 10, "replac": [10, 222, 336, 337, 340, 343, 347, 374, 375], "specif": [10, 198, 199, 214, 313, 315, 323, 333, 337, 341, 343, 346, 347, 354, 359, 360, 361, 367, 368, 371, 372, 373, 375], "ccontain": 10, "insid": [10, 347, 350, 359, 361], "been": [10, 209, 210, 221, 222, 334, 337, 356, 360, 373], "pattern_map": [10, 343, 347], "pattern_nam": 10, "mapping_dict": 10, "custom": [10, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 203, 216, 226, 323, 345, 347, 384], "mapping_config": 10, "first": [10, 190, 216, 335, 342, 343, 346, 347, 349, 351, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 369, 375], "second": [10, 190, 221, 222, 324, 342, 347, 349, 350, 351, 358, 359, 362, 364, 365, 368, 375], "third": [10, 347, 359, 364, 370], "requir": [10, 123, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 340, 347, 349, 351, 352, 354, 357, 358, 360, 368, 375], "old": 10, "reshap": [10, 11, 36, 53, 142, 155, 174, 175, 182, 209, 343, 344, 345, 350], "paddingsequ": [10, 51, 125, 344], "search_mod": [10, 343, 347], "embed": [10, 221, 222, 344, 347, 351, 355], "m": [10, 209, 314, 336, 337, 338, 345, 346, 352, 354, 357, 358, 359, 360, 361, 363, 364, 366, 368], "fusion": [10, 89, 123, 350, 351, 355, 356, 361, 384], "about": [10, 206, 333, 336, 343, 347, 350, 352, 356, 364, 366], "in_pattern": 10, "input_id": [10, 221, 222, 340, 344], "segment_id": [10, 340, 344], "input_mask": [10, 210, 340, 344], "out_pattern": 10, "th": [10, 347], "berfor": 10, "match_result": 10, "_n": 10, "reshape_0": [10, 347], "where": [10, 26, 209, 221, 222, 323, 337, 347, 354, 356, 359, 360, 362, 364, 368, 369], "go": [10, 357], "mayb": [10, 346, 364], "happen": [10, 345, 364], "sepcial": 10, "biasadd": [10, 20, 347, 351], "bia": [10, 15, 190, 314, 345, 368], "unfix": 10, "locat": [10, 73, 343, 344, 347, 351, 364, 368, 376], "other": [10, 63, 107, 198, 314, 333, 334, 335, 336, 343, 344, 345, 346, 347, 351, 352, 360, 363, 364, 366, 368, 370, 375], "write": [10, 335, 343, 351, 360, 361, 363], "note": [10, 209, 211, 324, 338, 341, 343, 344, 345, 346, 347, 349, 350, 351, 355, 356, 362, 363, 364, 368, 375], "That": [10, 363, 364], "too": [10, 343, 354, 355, 360], "decompos": [10, 343], "list2str": [10, 343], "src_perm": 10, "emit": [10, 347], "ret": [10, 351, 365], "str2list": 10, "src_str": 10, "pattern_mapping_conf_valid": 10, "conf_dict": 10, "lazyimport": 10, "module_nam": [10, 206, 210, 212, 213], "lazi": 10, "till": 10, "later": [10, 343, 351], "get_model_fwk_nam": 10, "detect": 10, "belong": [10, 343, 375], "avail": [10, 307, 310, 315, 321, 336, 359], "fwk": 10, "na": [10, 190, 195, 216, 335, 353], "assert": [11, 36, 182, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323], "batch_matmul": [11, 36, 182], "batch_matmul_v2": [11, 36, 182], "bias_add": [11, 15, 36, 182], "cast": [11, 36, 182], "concat": [11, 36, 182, 343], "conv": [11, 36, 182, 190, 209, 345, 346, 356], "co": [11, 36, 182, 186, 198, 336], "empty_op": [11, 36, 182, 343], "expand_dim": [11, 36, 182], "fused_batch_matmul_v2": [11, 36, 182], "fused_batch_norm_v3": [11, 36, 182], "fused_gemm": [11, 36, 182], "fused_matmul": [11, 36, 182], "gather": [11, 36, 182, 209, 216, 221, 222, 312, 343, 355], "gather_el": [11, 36, 182, 343], "gelu": [11, 36, 100, 182, 343, 350, 353, 356, 368], "gemm": [11, 36, 182, 190, 339, 354, 357, 363, 368, 382], "iterator_get_next": [11, 36, 182], "iterator_v2": [11, 36, 182, 343], "layer_norm": [11, 36, 100, 182, 343], "log_softmax": [11, 36, 182], "map_and_batch_dataset": [11, 36, 182, 343], "matmul": [11, 15, 26, 36, 107, 182, 190, 209, 339, 345, 347, 348, 351, 353, 363, 368, 382], "mkl_layer_norm": [11, 36, 182], "model_dataset": [11, 36, 182], "one_hot": [11, 36, 182], "onnx_input": [11, 36, 182], "optimize_dataset": [11, 36, 182, 343], "padding_sequ": [11, 36, 100, 182, 344], "placehold": [11, 36, 182], "pos_emb": [11, 36, 182], "pow": [11, 36, 182, 343, 347], "quantize_linear": [11, 36, 182, 343], "quantize_v2": [11, 36, 182], "quantized_fused_matmul_and_dequant": [11, 36, 182], "quantized_matmul_with_bias_and_dequant": [11, 36, 182], "reduce_mean": [11, 36, 182, 343], "reduce_sum": [11, 36, 182], "rsub": [11, 36, 182], "scatter_el": [11, 36, 182], "sin": [11, 36, 182], "size": [11, 36, 182, 184, 189, 190, 209, 216, 221, 222, 323, 333, 336, 340, 344, 346, 354, 357, 359, 361, 362, 363, 368, 375], "softmax": [11, 36, 182, 221, 312, 323, 337, 353, 362, 363], "squeez": [11, 36, 182], "strided_slic": [11, 36, 182], "top_k": [11, 36, 182, 226], "unpack": [11, 36, 182, 216, 343], "unsqueez": [11, 36, 182, 343], "view": [11, 36, 182, 334, 345, 354, 376], "sub_graph": [11, 182, 343, 346], "innerproductreshapefus": [11, 96, 100, 182], "add_cls_token": [11, 100, 182], "add_embed": [11, 100, 182], "arangewithreciproc": [11, 100, 182], "attentionblock_attentionmaskaddreshap": [11, 100, 182], "attentionblock_constantofshapewithmul": [11, 100, 182], "attentionblock_qkvprereshap": [11, 100, 182], "attentionblock_qkvreshap": [11, 100, 182], "attentionblock_resize2gath": [11, 100, 182], "attentionblock_weightreshapeto4d": [11, 100, 182], "attention_mask_length_adaptive_keep_indic": [11, 100, 182], "attention_output_layer_norm_length_adaptive_keep_indic": [11, 100, 182], "attention_reshap": [11, 100, 182], "cast_to": [11, 100, 182], "collect_quant_info": [11, 100, 182], "conv_reshap": [11, 100, 182], "decoder_attn_reshap": [11, 100, 182], "einsumwitharang": [11, 100, 182], "embeddingbag": [11, 26, 100, 182], "generate_sequ": [11, 100, 182], "innerproductwithbiasgelu": [11, 100, 182], "innerproductwithslic": [11, 100, 182], "input_fil": [11, 100, 182], "insert_bf16_nod": [11, 100, 182], "insert_quant_nod": [11, 100, 182], "int8_bf16_mixed_precision_check": [11, 100, 182], "interact_featur": [11, 100, 182], "last_layer_shap": [11, 100, 182], "layer_norm_with_reduce_mean": [11, 100, 182, 343], "layer_norm_with_transpos": [11, 100, 182], "lower_all_tupl": [11, 100, 182], "matmul_with_bia": [11, 100, 182], "matmul_with_bias_add": [11, 100, 182], "matmul_with_bias_gelu": [11, 100, 182], "matmul_with_bias_relu": [11, 100, 182], "matmul_with_bias_sigmoid": [11, 100, 182], "matmul_with_bias_tanh": [11, 100, 182], "matmul_with_transpos": [11, 100, 182], "merged_embeddingbag": [11, 100, 182], "operator_adaptor": [11, 100, 182], "output_data": [11, 100, 182, 344], "position_embed": [11, 100, 182], "position_embeddings_v1": [11, 100, 182], "qkv_merg": [11, 100, 182], "qkv_reshap": [11, 100, 182], "quantize_fus": [11, 100, 182], "quantized_graph_dtype_refactor": [11, 100, 182], "remove_constant_op": [11, 100, 182], "remove_last_view": [11, 100, 182], "remove_rang": [11, 100, 182], "removeslic": [11, 100, 182], "reshape_after_restore_hidden_st": [11, 100, 182], "reshape_before_and_after_attention_out_layer_norm_gather_el": [11, 100, 182], "reshape_before_restore_hidden_st": [11, 100, 182], "reshape_fus": [11, 100, 182], "resnetblock_instancenormreshapefromconv": [11, 100, 182], "resnetblock_instancenormreshapefromdiv": [11, 100, 182], "restore_hidden_states_in_length_adaptive_update_indic": [11, 100, 182], "rotary_pos_emb": [11, 100, 182], "slicemask": [11, 100, 182], "stablediffusion_reshapefus": [11, 100, 182], "stablediffusion_bf16convert": [11, 100, 182], "start_end_logit": [11, 100, 182], "subgraph_match": [11, 100, 182, 346], "textencdoer_word_embed": [11, 100, 182], "textencoder_attentionmaskaddreshap": [11, 100, 182], "textencoder_attentionreshap": [11, 100, 182], "textencoder_kvreshap": [11, 100, 182], "textencoder_mulreshap": [11, 100, 182], "textencoder_qreshap": [11, 100, 182], "textencoder_softmaxreshap": [11, 100, 182], "textencoder_causal_attention_mask": [11, 100, 182], "token_type_embed": [11, 100, 182, 343], "token_type_embeddings_v1": [11, 100, 182, 343], "torch_embed": [11, 100, 182], "torch_ip_insert_bia": [11, 100, 182], "torchinsertbf16nod": [11, 100, 182], "torchpaddingsqu": [11, 100, 182], "transformer2dmodel_attentionmaskaddreshap": [11, 100, 182], "transformer2dmodel_constantofshapewithmul": [11, 100, 182], "transformer2dmodel_ffnslic": [11, 100, 182], "transformer2dmodel_ffnslice_1": [11, 100, 182], "transformer2dmodel_qkvprereshap": [11, 100, 182], "transformer2dmodel_qkvreshap": [11, 100, 182], "transformer2dmodel_qkvreshape4d": [11, 100, 182], "transformer2dmodel_encoderhiddenstatesreshap": [11, 100, 182], "transformer2dmodel_getsamplebatch": [11, 100, 182], "transformer2dmodel_instancenormreshapefromadd": [11, 100, 182], "transformer2dmodel_instancenormreshapefromconcat": [11, 100, 182], "transformer2dmodel_sampleslic": [11, 100, 182], "transformer2dmodel_upblockres": [11, 100, 182], "transpose_batch_matmul": [11, 100, 182, 343], "word_embed": [11, 100, 182, 344], "graph_util": [11, 182, 343, 347, 351], "logger": [11, 182, 195, 207, 365], "onnx_util": [11, 182], "tf_util": [11, 182], "torch_util": [11, 182], "load": [13, 193, 196, 203, 204, 216, 221, 222, 336, 343, 344, 345, 346, 348, 354, 356, 357, 358, 359, 364], "frontend": [13, 359], "get_logg": 14, "log": [14, 336, 344, 350], "msg": 14, "error": [14, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 344, 350, 365], "fatal": 14, "warn": 14, "get_children": 15, "input_name_to_nod": 15, "get_node_children_nam": 15, "nodeproto": [15, 181], "get_initializer_children_nam": 15, "graph_node_names_detail": [15, 180, 181], "pars": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 180, 344, 350], "graph_nodes_dict": [15, 180], "Be": [15, 180], "class": [15, 180, 184, 204, 314, 315, 324, 335, 337, 343, 350, 355, 356], "cerat": 15, "output_nam": [15, 344], "ouput": 15, "param": [15, 180, 216, 355, 356], "node_names_detail": [15, 180], "is_supported_onnx_graph": [15, 252], "is_supported_onnx_nod": 15, "change_num_nam": 15, "bias_to_int32": 15, "bias_nod": 15, "a_scal": 15, "b_scale": 15, "int8": [15, 190, 204, 216, 336, 338, 345, 346, 348, 353, 356, 361, 362, 368, 375, 384], "int32": [15, 336, 344], "matric": [15, 357, 362, 363], "scale": [15, 216, 314, 355, 360, 363, 375], "arrai": [15, 344], "fp32_bia": 15, "int8_bia": 15, "int8_bias_zero_point": 15, "int8_bias_scal": 15, "int32_bia": 15, "onnx_extract_oper": 15, "framework_model": [15, 47, 48, 180], "nodes_dict": [15, 47, 48, 180, 181], "engine_graph": [15, 47, 48, 180, 181], "tf_dtype": [15, 180, 181], "set_attr": [16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 343], "batchmatmul": 18, "batchmatmulv2": 19, "onnxruntim": [23, 24, 25, 31, 33, 54, 55, 60, 61, 63, 64, 66, 70, 74, 75, 77, 78, 336, 339, 341, 343, 349], "regist": [26, 39, 48, 51, 54, 55, 63, 65, 78, 126, 206, 209, 210, 212, 213, 354, 355, 356, 357, 359, 360, 361, 362, 364, 384], "binaryadd": [26, 355], "constantofshap": 26, "dequantizelinear": [26, 348], "dequant": [26, 355, 356, 360, 368], "erf": [26, 350], "expand": [26, 221, 222], "fill": [26, 347, 362], "flatmapdataset": 26, "ident": [26, 209, 333, 337], "makeiter": 26, "matmulwithbiasadd": [26, 115], "matmulwithbiasgelu": [26, 116], "matmulwithbiastanh": [26, 119], "matmulwithbia": [26, 114], "qlinearmatmul": [26, 348], "qlinearadd": 26, "qlinearmul": 26, "realdiv": 26, "sqrt": [26, 343, 347, 362], "squar": [26, 221, 222], "stopgradi": 26, "tanh": [26, 350, 356, 368], "tensorslicedataset": 26, "transposebatchmatmul": [26, 178, 343], "relu": [26, 356, 368], "matmulwithbiasrelu": [26, 117], "cumsum": 26, "onehot": [26, 46], "tokentypeid": 26, "positionid": 26, "loop": [26, 216, 314, 323, 343, 355, 357, 362], "sigmoid": 26, "matmulwithbiassigmoid": [26, 118], "flatten": 26, "mergedembeddingbag": [26, 121], "convolut": [26, 337, 346], "expandindic": 26, "tile": [26, 63, 354, 358, 360, 362, 363, 364, 368], "opani": 26, "sequencelength": [26, 352], "arang": 26, "reciproc": 26, "einsum": 26, "repeat": [26, 357, 369], "stack": [26, 363], "constant": [26, 133, 216], "listconstruct": 26, "latrang": 26, "masked_fil": 26, "floor_divid": 26, "max": [26, 190, 192, 216, 336, 352, 355, 357, 359, 364, 366, 375], "listunpack": 26, "silu": 26, "expanddim": 27, "fusedbatchnormv3": 29, "fusedgemm": 30, "fusedmatmul": 31, "gatherv2": [32, 343], "gatherel": [33, 343], "iteratorgetnext": 37, "iteratorv2": [38, 343], "logsoftmax": [40, 312], "mapandbatchdataset": [41, 343], "modeldataset": 45, "onnxinput": 47, "operator_registri": [48, 343], "operator_typ": [48, 343], "subclass": [48, 126, 209, 210, 213, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 311, 312], "cl": [48, 126, 209, 210, 212, 213, 323], "registr": [48, 126, 343], "optimizedataset": [49, 343], "packagepositionembed": 53, "quantizelinear": [55, 343, 348], "quantiz": [55, 190, 195, 198, 202, 203, 216, 304, 336, 339, 355, 356, 360, 361, 363, 368, 371, 379, 384], "quantizev2": 56, "quantizedmatmulwithbiasanddequant": 58, "reducemean": [59, 343, 347], "reducesum": 60, "aten": 63, "self": [63, 190, 221, 222, 226, 323, 335, 343, 345], "scalar": [63, 355], "alpha": [63, 206, 212, 314, 361, 368], "scatterel": 64, "primconst": 67, "stridedslic": 72, "source_op": 73, "dest_op": 73, "definit": [73, 356], "topk": 74, "fuse": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 348, 355, 356], "acceler": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 328, 336, 338, 339, 348, 355, 356, 360, 362, 375, 381], "strategi": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 203, 357], "addclstoken": [80, 89], "addembed": 81, "stabl": [83, 84, 85, 86, 87, 143, 151, 152, 153, 156, 157, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 304, 336, 341, 360], "diffusionv1": [83, 84, 85, 86, 87, 152, 153, 156, 157, 158, 165, 166, 169, 170, 171, 177], "attentionmasklengthadaptiveexpandindic": 89, "attentionoutputlayernormlengthadaptiveexpandindic": 90, "attentionreshap": 91, "castto": 92, "collectquantinfo": 93, "convreshap": 94, "decoderattnreshap": 95, "generatesequ": 99, "inputdata": [103, 343], "inputfil": 104, "insertbf16nod": 105, "insertquantnod": 106, "quantizedgraphdtyperefactor": [107, 132], "int8bf16mixedprecisioncheck": 107, "inferenc": 107, "under": [107, 216, 336, 343, 344, 345, 348, 360, 361, 368, 370], "in8": 107, "bf16": [107, 190, 216, 336, 338, 348, 353, 356, 358, 360, 363, 368], "mix": [107, 346], "precis": [107, 216, 339, 348, 372, 375, 384], "And": [107, 345, 346, 347, 348, 351, 355], "u8": [107, 348, 350, 356, 363, 368], "s8": [107, 348, 355, 356, 360, 368], "fp32": [107, 190, 216, 336, 338, 344, 345, 346, 348, 350, 355, 356, 358, 359, 361, 363, 368, 373, 375], "interactfeatur": 108, "lastlayershap": 109, "layernormwithreducemean": [111, 343], "layernormwithtranspos": 112, "loweralltupl": 113, "matmulwithtranspos": 120, "multiheadattent": 122, "bass": [122, 126], "operatoradaptor": 123, "sweep": 123, "receiv": [123, 198, 347, 351], "outputdata": [124, 343], "pattern_registri": [126, 343], "pattern_typ": [126, 343], "positionembed": 127, "positionembeddingsv1": 128, "qkvmerg": 129, "qkvreshap": 130, "qunatizefus": 131, "quantizedgraphdtypecheck": 132, "removeconstantop": 133, "removelastview": 134, "removerang": 135, "reshapeafterrestorehiddenst": 137, "reshapebeforeandafterattentionoutlayernormgatherel": 138, "reshapebeforerestorehiddenst": 139, "reshapefus": 140, "qkv": [142, 155, 174, 175, 346, 348], "groupnorm": 143, "channel": [143, 209, 355, 359, 360, 364, 368, 374], "separ": [143, 333, 351, 364, 370], "num_group": 143, "group": [143, 212, 338, 343, 351, 357, 362, 364, 374], "num_channel": 143, "var": [143, 314], "epsilon": [143, 343], "gamma": 143, "beta": [143, 206, 314, 361, 368], "http": [143, 186, 206, 209, 211, 221, 226, 228, 335, 336, 341, 342, 344, 350, 370, 376], "pytorch": [143, 184, 190, 193, 196, 198, 202, 209, 211, 216, 221, 222, 224, 321, 335, 336, 339, 341, 367, 373, 374, 375], "org": [143, 206, 221, 341], "nn": [143, 189, 216, 359], "html": [143, 350], "restorehiddenstatesinlengthadapt": 144, "roraryposemb": 145, "startendlogit": 149, "matcher": [150, 323, 348], "subgraphmatch": [150, 346], "textencoder_wordembed": 151, "textencoderv1": [151, 167, 168, 172, 173, 176], "textencoder_casualattentionmask": 158, "tokentypeembed": [159, 343], "tokentypeembeddingsv1": [160, 343], "torchembed": 161, "torchinnerproductinsertbia": 162, "torchpaddingsequ": 164, "transformer2dmodel_ffninputslic": 167, "transformer2dmodel_ffninputslice_1": 168, "transformer2dmodel_qkvreshapeto4d": 171, "wordembed": 179, "create_tf_nod": 180, "when": [180, 190, 209, 210, 214, 216, 221, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 324, 333, 338, 343, 344, 346, 347, 350, 351, 354, 356, 357, 359, 360, 361, 363, 364, 368, 371, 372, 375], "tendorflow": 180, "get_tensor_dest_op": 180, "someth": 180, "store": [180, 190, 193, 196, 198, 206, 209, 210, 212, 213, 323, 343, 347, 348, 351, 354, 355, 356, 357, 358, 361, 362, 364], "dest_op_nam": 180, "tf_extract_oper": 180, "tf_dtype_id": 180, "deal": [180, 323, 345], "multipl": [180, 210, 217, 221, 222, 226, 324, 338, 343, 345, 356, 357, 359, 360, 361, 362, 363, 364, 368, 371, 372], "indetermin": 180, "torch_extract_oper": 181, "compil": [182, 307, 340, 342, 343, 344, 346, 347, 349, 351, 384], "model_arg": 184, "task": [184, 204, 222, 225, 323, 335, 336, 337, 338, 349, 356, 362, 365, 373], "new_fewshot": 184, "batch_siz": [184, 186, 189, 190, 221, 222, 225, 324, 336, 344, 345, 349, 362, 368], "devic": [184, 186, 193, 335, 337, 344, 346, 373], "cpu": [184, 190, 304, 313, 324, 335, 336, 340, 341, 344, 350, 352, 354, 356, 365, 366, 373], "no_cach": 184, "limit": [184, 190, 337, 359, 363], "bootstrap_it": 184, "100000": 184, "description_dict": 184, "check_integr": 184, "decontamination_ngrams_path": 184, "seed": [184, 190, 323], "1234": 184, "user_model": 184, "instanti": [184, 198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "union": [184, 216, 314], "lm": 184, "lm_eval": 184, "get_model": 184, "create_from_arg_str": 184, "ignor": [184, 216, 221, 222, 343], "taken": [184, 221, 222], "eval_harness_nam": 184, "__name__": 184, "num_fewshot": 184, "shot": [184, 206, 213], "context": 184, "batch": [184, 189, 216, 314, 336, 344, 359, 360, 362, 369], "g": [184, 190, 196, 209, 216, 323, 337, 355, 356, 360, 361, 369], "cuda": [184, 186, 335], "run": [184, 202, 210, 214, 216, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 335, 368, 369, 375], "whether": [184, 190, 198, 209, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 330, 343, 345, 351, 368, 383], "cach": [184, 198, 312, 350, 357, 360, 361, 362, 368], "per": [184, 209, 345, 352, 355, 358, 360, 366, 368, 369, 374], "test": [184, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 334, 336, 338, 341, 352, 366, 368, 369], "iter": [184, 190, 196, 210, 213, 216, 323, 324, 336, 344, 346, 350, 355, 359, 362, 363, 368, 369], "bootstrap": 184, "statist": 184, "dictionari": [184, 199, 216], "task_nam": [184, 348, 349], "relev": [184, 336], "suit": 184, "provid": [184, 189, 190, 193, 198, 202, 203, 216, 221, 222, 226, 228, 304, 323, 324, 336, 338, 339, 340, 343, 353, 356, 360, 361, 363, 371, 375], "autocausallm": 186, "pretrain": [186, 221, 222, 343], "token": [186, 202, 221, 222, 226, 324, 335, 336, 338, 340, 348, 373], "subfold": 186, "revis": [186, 198], "max_gen_tok": 186, "256": [186, 323, 345, 366, 368], "max_length": [186, 190, 324, 336], "add_special_token": 186, "use_acceler": 186, "device_map_opt": 186, "auto": [186, 190, 196, 203, 335, 345, 350, 356], "max_memory_per_gpu": 186, "max_cpu_memori": 186, "offload_fold": 186, "offload": 186, "causal": [186, 222, 335], "languag": [186, 221, 222, 304, 333, 335, 336, 338, 373], "find": [186, 323, 343, 346, 350, 351, 359, 374], "hf": 186, "transform": [186, 190, 203, 204, 216, 221, 222, 226, 323, 324, 328, 334, 335, 337, 341, 342, 343, 344, 355, 356, 361, 362, 363, 364, 370, 372, 373, 374, 375, 376, 381], "model_doc": 186, "automodelforcausallm": 186, "autoseq2seqlm": 186, "seq2seq": [186, 216, 221, 222], "automodelforseq2seqlm": 186, "multitokeneoscriteria": 186, "pretrainedtoken": 186, "initial_decoder_input_length": 186, "criteria": [186, 195, 207, 372], "stop": [186, 190, 226, 335, 375], "multi": [186, 344, 345, 346], "api_doc_exampl": 188, "version": [188, 198, 216, 333, 336, 341, 346, 352, 366, 370], "pytorchbenchmark": 189, "executorbenchmark": 189, "refactor_batch_s": 189, "old_batch_s": 189, "target": [189, 190, 209, 213, 214, 216, 323, 345, 364, 374], "default": [189, 190, 198, 202, 204, 214, 216, 221, 222, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 335, 336, 337, 343, 346, 352, 356, 360, 364, 365, 366, 368, 371, 372, 374, 375], "batched_valu": 189, "get_example_input": [189, 324], "dataload": [189, 202, 216, 225, 324, 336], "batched_data": 189, "preprocess_model": 189, "example_input": [189, 324], "additional_cmd": 189, "jit": [189, 190, 216, 324, 328, 353, 355, 356, 359, 363, 368, 381], "trace": [189, 190, 324, 345], "benchmarkconfig": [189, 190, 324], "process": [189, 190, 196, 199, 209, 210, 211, 213, 214, 216, 226, 323, 336, 338, 343, 344, 346, 347, 351, 354, 355, 357, 360, 361, 364, 374, 375], "raw_cmd": 189, "preprocess": [189, 190, 335, 336, 363], "scriptmodul": 189, "model_name_or_path": [189, 198, 216, 226, 324, 335], "build": [189, 199, 203, 216, 323, 336, 342, 354, 360, 361, 365, 372], "inc": [190, 198, 202, 203, 216, 349], "nncf": 190, "check_valu": 190, "src": [190, 314, 344, 356, 364, 368], "supported_typ": 190, "supported_valu": 190, "given": [190, 198, 209, 210, 221, 222, 335, 351, 356, 359, 362, 364, 374], "datatyp": [190, 338, 339], "uint8": [190, 362, 375], "_datatyp": 190, "dynamiclengthconfig": [190, 216, 340], "length_config": [190, 221, 222, 340], "const_rat": 190, "num_sandwich": 190, "length_drop_ratio_bound": [190, 192], "layer_dropout_prob": [190, 192], "layer_dropout_bound": [190, 192], "dynamic_train": 190, "load_store_fil": 190, "evo_it": 190, "30": [190, 358], "population_s": 190, "20": [190, 324, 336, 341, 344, 349, 352, 358, 365, 366], "mutation_s": 190, "mutation_prob": [190, 193], "crossover_s": 190, "num_cpu": 190, "48": [190, 352, 366], "distributed_world_s": 190, "latency_constraint": 190, "evo_eval_metr": 190, "eval_f1": [190, 193, 340, 371, 375], "dynam": [190, 195, 216, 350, 353, 355, 359, 361, 368, 382], "adapt": [190, 304, 333, 336], "maximum": [190, 209, 210, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 352, 366, 375], "drop": [190, 192, 338, 361, 364, 371], "ratio": [190, 192, 193, 209, 210, 211, 213, 337, 366, 368, 371, 372, 374], "sandwich": 190, "num": [190, 323, 335, 345, 354, 356, 362], "train": [190, 196, 199, 202, 203, 210, 211, 216, 304, 323, 335, 336, 337, 340, 367, 374], "dropout": [190, 192], "probabl": [190, 192, 323, 361], "evolut": [190, 194, 195, 338], "popul": [190, 193], "mutat": [190, 193], "crossov": [190, 193], "distribut": [190, 225, 323, 337, 361, 375, 376], "world": 190, "latenc": [190, 323, 324, 336, 338, 345, 352, 357, 375], "constraint": [190, 193, 375], "metric": [190, 195, 196, 199, 203, 216, 218, 323, 336, 340, 379], "quantizationconfig": [190, 202, 203, 216, 336, 340], "approach": [190, 199, 201, 335, 337, 338, 340, 356, 357], "posttrainingstat": [190, 338, 339, 340, 375], "timeout": [190, 375], "max_trial": [190, 323, 375], "config_fil": 190, "sampling_s": 190, "use_bf16": 190, "recip": [190, 216, 335, 346, 372], "earli": [190, 375], "combin": [190, 216, 323, 346, 351, 355, 356, 375], "decid": [190, 359, 375], "exit": [190, 375], "time": [190, 345, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 368, 369, 375], "evalu": [190, 193, 196, 199, 202, 203, 209, 210, 211, 216, 323, 337, 345, 362, 371, 372, 374, 375], "notraineroptim": [190, 202, 337, 374, 375], "guarante": [190, 375], "how": [190, 192, 206, 209, 210, 216, 303, 334, 343, 344, 345, 348, 349, 351, 356, 357, 358, 368, 371, 374], "mani": [190, 192, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 343, 345, 347, 355, 357, 358, 361, 363, 368], "sampl": [190, 192, 216, 226, 323, 324, 335, 336, 340, 352, 362, 375], "smooth_quant": 190, "smooth": 190, "smooth_quant_arg": 190, "fast_bias_correct": 190, "fast": [190, 304, 336, 340], "correct": [190, 214, 333, 347, 351, 362], "weight_correct": 190, "weight": [190, 206, 209, 210, 212, 213, 221, 222, 314, 323, 337, 339, 345, 346, 348, 354, 357, 358, 359, 363, 364, 368, 371, 372, 374, 375], "gemm_to_matmul": 190, "graph_optimization_level": 190, "disable_al": 190, "enable_bas": 190, "enable_extend": 190, "enable_al": 190, "first_conv_or_matmul_quant": 190, "last_conv_or_matmul_quant": 190, "pre_post_process_quant": 190, "postprocess": 190, "add_qdq_pair_to_weight": 190, "qdq": [190, 216, 339, 348], "vaild": 190, "onnxrt_trt_ep": 190, "optypes_to_exclude_output_qu": 190, "optyp": 190, "dedicated_qdq_pair": 190, "dedic": 190, "pruningconfig": [190, 340], "epoch": [190, 210, 211, 374], "epoch_rang": [190, 205], "initial_sparsity_ratio": [190, 205], "target_sparsity_ratio": [190, 205, 209, 210, 340, 374], "97": [190, 205, 366, 374], "pruner_config": [190, 340, 374], "pruner": [190, 195, 205, 206, 207, 211, 216, 337, 374], "prune": [190, 195, 202, 203, 206, 207, 209, 210, 212, 213, 214, 216, 221, 222, 304, 336, 379], "goal": [190, 216, 374], "behavior": [190, 216, 333, 334, 337, 354, 355, 360, 374, 375], "nlp": [190, 211, 216, 226, 228, 304, 335, 336, 338, 340, 344, 349, 374, 375], "wil": 190, "basicmagnitud": [190, 205, 338, 340, 374], "typel": 190, "init_prune_config": 190, "init": [190, 196, 202, 203, 207, 224, 225, 323, 335, 336, 341, 342, 344, 356], "distillationconfig": [190, 216, 340], "criterion": [190, 191, 203, 206, 209, 210, 219, 340, 371, 375], "distil": [190, 195, 196, 202, 203, 216, 335, 336, 349, 379], "inc_config": 190, "knowledgeloss": [190, 191, 337], "tfdistillationconfig": [190, 323], "loss_typ": [190, 191, 323, 337], "loss_weight": [190, 323], "train_step": [190, 323], "temperatur": [190, 191, 226, 323, 335, 337], "loss": [190, 216, 221, 222, 323, 335, 337, 375], "knowledgedistillationloss": [190, 337], "flashdistillationconfig": 190, "block_nam": [190, 323], "layer_mappings_for_knowledge_transf": [190, 323], "add_origin_loss": [190, 191, 323, 337], "flash": [190, 196, 216], "autodistillationconfig": [190, 323], "search_spac": [190, 199, 323], "search_algorithm": [190, 323], "bo": [190, 323, 370], "knowledge_transf": [190, 323], "regular_distil": [190, 323], "disil": 190, "space": [190, 196, 199, 210, 216, 323, 333, 334, 346, 354, 357], "bayesian": [190, 323], "architectur": [190, 196, 199, 203, 216, 221, 222, 323, 336, 341, 354, 361, 363], "candid": 190, "trial": [190, 216], "random": [190, 221, 323, 361], "knowledg": [190, 216, 323, 335], "transfer": [190, 216, 225, 337], "stage": [190, 196, 216, 323], "autodistil": [190, 196, 203, 216, 379], "regular": [190, 196, 212, 374], "nasconfig": [190, 199, 201], "basic": [190, 199, 209, 222, 225, 336, 341, 350, 360], "parser": 190, "procedur": [190, 209, 368], "backend": [190, 216, 224, 324, 336, 338, 340, 341, 342, 343, 346, 348, 351, 353, 368, 375], "warmup": [190, 324, 346], "cores_per_inst": [190, 216, 324], "num_of_inst": [190, 216, 324], "benchmark": [190, 195, 216, 217, 336, 346, 352, 353, 366, 369, 379], "skip": [190, 324, 357, 369], "collect": [190, 324, 343, 345, 375], "core": [190, 324, 344, 352, 354, 360, 361, 366, 369, 370], "instanc": [190, 196, 199, 216, 217, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 324, 333, 344, 345, 352, 366, 369, 371, 372, 373], "enabl": [190, 210, 324, 339, 340, 352, 354, 360, 361, 365, 366], "want": [190, 202, 324, 330, 343, 344, 345, 346, 348, 351, 354, 355, 356, 368, 371, 383], "prunerv2": 190, "target_spars": [190, 209], "pruning_typ": 190, "op_nam": 190, "excluded_op_nam": 190, "start_step": [190, 210], "end_step": [190, 210], "pruning_scop": 190, "pruning_frequ": [190, 210], "min_sparsity_ratio_per_op": [190, 209], "max_sparsity_ratio_per_op": [190, 209, 210], "sparsity_decay_typ": 190, "pruning_op_typ": 190, "reg_typ": [190, 356], "criterion_reduce_typ": 190, "resume_from_pruned_checkpoint": 190, "similiar": 190, "weightpruningconfig": 190, "pruning_config": [190, 202, 203, 216, 340, 374], "snip_momentum": [190, 206], "4x1": [190, 209, 345, 354, 364], "global": [190, 209, 210], "98": [190, 366], "exp": [190, 356, 363, 368], "linear": [190, 209, 323, 337, 356, 359, 362], "ce": [191, 323, 337], "loss_weight_ratio": [191, 337], "layer_map": [191, 337], "distillationcriterionmod": 191, "restor": [192, 338], "sample_length_configur": 192, "max_seq_length": [192, 193], "num_hidden_lay": 192, "layer_config": [192, 221, 222], "length_drop_prob": 192, "length_drop_ratio": 192, "min_length": 192, "hidden": [192, 209, 221, 222, 323, 357], "truncat": [192, 336], "less": [192, 324, 337, 346, 360, 364, 374], "than": [192, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 324, 345, 346, 347, 355, 360, 362, 367, 368, 375], "min": [192, 216, 375], "sample_layer_configur": 192, "layer_dropout": 192, "depend": [192, 199, 334, 336, 341, 342], "paramat": 192, "bound": 192, "kept": [192, 209], "evolust": 193, "evolustionari": 193, "approx_ratio": 193, "12": [193, 335, 341, 342, 345, 352, 358, 362, 365, 366, 368], "l": [193, 323, 337], "384": [193, 323, 346, 352, 366], "approxim": [193, 363], "invers": [193, 363], "store2str": 193, "gene": 193, "mac": 193, "score": [193, 206, 209, 210, 212, 221, 222, 373], "parent": [193, 210, 213], "parmat": 193, "lower_constraint": 193, "upper_constraint": 193, "eval_metr": 193, "evolutionari": [193, 216], "load_stor": 193, "store_fil": 193, "save_stor": 193, "get_stor": 193, "set_lower_constraint": 193, "setter": [193, 221, 222], "lower": [193, 226, 364, 372, 375], "set_upper_constraint": 193, "upper": [193, 356], "save_popul": 193, "population_fil": 193, "convex_hul": 193, "pareto_fronti": 193, "add_gen": 193, "rai": 193, "packag": [194, 197, 335, 336], "drop_and_restore_util": [194, 195], "mixtur": 195, "auto_distil": [195, 197, 323], "basic_na": [195, 200], "pytorch_prun": 195, "reg": [195, 207, 210, 355, 356], "schedul": [195, 202, 207, 210, 212, 216, 323, 328, 353, 381], "get_throughput": [195, 218], "utility_tf": [195, 218], "optimizer_tf": 195, "trainer": [195, 202, 321, 336, 338, 339, 340], "handl": [196, 216, 221, 222, 303, 312, 323, 350, 358, 359], "both": [196, 216, 221, 222, 333, 335, 340, 360, 362, 367, 368, 369, 371, 375], "model_build": [196, 199, 203, 216, 323], "conf_fname_or_obj": [196, 199, 201], "design": [196, 216, 343, 355, 356, 367, 379], "three": [196, 205, 211, 215, 216, 323, 336, 343, 347, 351, 362, 363, 374, 375], "major": [196, 216, 323, 354, 360, 361, 363, 364, 375], "explor": [196, 216, 323, 340], "compress": [196, 216, 304, 323, 337, 340, 354, 358, 360, 364, 367, 375], "discov": [196, 216, 323], "potenti": [196, 216, 314, 323, 334, 361], "measur": [196, 216, 323, 324, 337, 353, 371, 372, 374, 375], "predict": [196, 216, 221, 222, 323, 335, 336, 337], "hardwar": [196, 216, 323, 334, 337, 365, 367], "etc": [196, 216, 323, 337, 345], "select": [196, 212, 216, 221, 222, 323, 356, 368], "best": [196, 199, 216, 323, 333, 338], "res_save_path": [196, 199], "model_cl": [196, 203, 216, 323], "found": [196, 199, 336, 342, 343, 364], "estim": [196, 199, 345, 364], "load_search_result": 196, "init_by_cfg": [196, 199], "create_distil": 196, "optimizedmodel": 198, "from_pretrain": [198, 221, 222, 324, 336, 340, 373], "function": [198, 199, 202, 203, 211, 216, 311, 312, 313, 314, 323, 337, 343, 346, 347, 350, 351, 355, 356, 368, 371, 374, 375], "classmethod": [198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "intel": [198, 209, 211, 226, 303, 324, 334, 335, 340, 341, 342, 343, 344, 352, 354, 365, 366, 370, 372, 373, 374, 375, 376], "compressor": [198, 203, 209, 211, 304, 324, 336, 372, 375], "repositori": [198, 336], "hug": [198, 304, 336, 348], "face": [198, 304, 305, 333, 336, 348], "hub": [198, 373], "local": [198, 209, 210, 216, 343, 354, 357, 360], "directori": [198, 202, 348, 367], "host": 198, "cache_dir": 198, "download": [198, 221, 222, 376], "standard": 198, "force_download": 198, "forc": 198, "re": [198, 358], "overrid": [198, 216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 311, 312, 350], "resume_download": 198, "delet": [198, 374], "incomplet": 198, "attempt": 198, "resum": [198, 216], "branch": [198, 368], "tag": 198, "commit": [198, 333, 369], "sinc": [198, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 337, 360, 361, 363], "we": [198, 199, 222, 330, 333, 335, 336, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 368, 371, 372, 373, 375, 383], "git": [198, 335, 336, 341, 342, 344], "system": [198, 336, 342], "artifact": 198, "huggingfac": [198, 226, 336, 371, 373], "allow": [198, 324], "q_model": 198, "basicna": 199, "conf_fnam": 199, "obj": [199, 201, 214], "common": [201, 209, 333, 336, 375], "nasbas": 201, "orchestr": [202, 216], "orchestrate_optim": [202, 216], "compon": [202, 216, 355, 370], "experiment": [202, 216, 356], "callabl": [202, 203, 216, 323], "train_func": [202, 203, 216, 323], "saved_result": [202, 336], "aggreg": 202, "save_model": [202, 225, 336], "json": [202, 226, 335], "pytorch_model": 202, "init_quant": [202, 203, 216, 355], "quant_config": [202, 203, 216, 336, 340, 375], "calib_func": 202, "calib_dataload": [202, 216], "prepar": [202, 203, 221, 222, 335, 345, 347, 350, 355, 356, 364, 375], "invok": [202, 203], "_inc_quant": 202, "calibr": [202, 216, 375], "init_prun": [202, 203, 216], "init_distil": [202, 203, 216], "distillation_config": [202, 203, 216, 337, 340], "teacher_model": [202, 203, 216, 323, 337, 340], "teacher": [202, 203, 323, 337, 338], "tfoptim": [203, 323, 337], "pretrainedmodel": [203, 216, 323], "training_args_tf": 203, "tftrainingargu": 203, "train_dataset": [203, 323, 336, 340], "eval_dataset": [203, 323, 336, 340], "compute_metr": [203, 323, 336], "task_typ": [203, 225], "task_id": [203, 225], "entri": [203, 216, 221, 222, 370], "techniqu": [203, 336, 338, 340, 375], "builtin_eval_func": [203, 216], "dataset": [203, 216, 225, 226, 324, 335, 338, 371, 375], "saved_model": 203, "quantized_model_path": 203, "larger": [203, 209, 216], "model_builder_builtin": [203, 216, 323], "arch_para": [203, 216], "built": [203, 323, 372], "builder": [203, 323], "inform": [203, 206, 209, 210, 211, 212, 213, 303, 307, 310, 315, 321, 333, 334, 336, 337, 344, 345, 352, 356, 359, 366, 367, 368, 374, 375, 376, 380], "autodistillation_config": [203, 216, 323], "build_train_func": 203, "infer_framework_load_model": 204, "autoconfig": [204, 336, 340, 373], "model_class": 204, "model_kwarg": [204, 221, 222, 373], "pruningmod": 205, "current": [205, 206, 209, 210, 211, 213, 215, 345, 355, 356, 357, 359, 360, 362, 367, 368], "prunerconfig": [205, 340], "update_frequ": 205, "prune_typ": [205, 340, 374], "per_tensor": 205, "register_criterion": 206, "registri": [206, 209, 210, 212, 213], "get_criterion": 206, "pruningcriterion": 206, "on_step_begin": [206, 210, 211], "begin": [206, 210, 211, 222, 323, 355, 356], "on_before_optimizer_step": [206, 210, 211, 212], "on_after_optimizer_step": [206, 210, 211, 212], "magnitudecriterion": 206, "magnitud": [206, 374], "criterion_class": 206, "deriv": [206, 209, 210, 212, 213, 312, 361, 362], "determin": [206, 209, 210, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 346, 365], "magtinud": 206, "gradientcriterion": 206, "gradient": 206, "absolut": [206, 371, 374, 375], "snipcriterion": 206, "snip": 206, "product": [206, 336, 352, 362, 366, 372, 375], "singl": [206, 213, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 357, 362], "network": [206, 209, 323, 337, 343, 344, 345, 347, 359, 374, 375], "sensit": 206, "arxiv": [206, 221], "ab": [206, 221, 375], "1810": 206, "02340": 206, "snipmomentumcriterion": 206, "momentum": 206, "mechan": 206, "much": [206, 348, 357], "preserv": 206, "updat": [206, 209, 210, 213, 214, 335, 336, 341, 342, 344, 361, 374], "register_pattern": 209, "get_pattern": 209, "assertionerror": [209, 210, 214], "basepattern": [209, 212], "unit": [209, 353, 360], "dure": [209, 213, 216, 344, 360, 364, 369, 372, 374, 375], "is_glob": 209, "take": [209, 333, 337, 345, 347, 350, 355, 363, 364], "contrast": 209, "individu": [209, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333], "keep_mask_lay": 209, "whose": [209, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 351], "mask": [209, 210, 213, 221, 222, 314, 338, 355, 356, 358, 360, 363], "invalid_lay": 209, "reach": [209, 213, 334, 336], "minimum": 209, "reduce_tensor": 209, "dim": [209, 221, 222, 344, 350, 354, 360, 364, 368], "reduc": [209, 336, 350, 354, 355, 357, 359, 360, 361, 363, 364, 375], "along": [209, 346, 359, 362, 364], "dimens": [209, 221, 222, 323, 337, 346, 359, 360, 362, 364, 368], "axi": [209, 336, 343, 345, 362, 363], "get_mask": 209, "pre_mask": 209, "layer_nam": 209, "unprun": 209, "abstract": [209, 213, 221, 222], "get_masks_glob": 209, "get_masks_loc": 209, "get_single_mask_per_target_ratio": 209, "exact_sparsity_ratio": 209, "get_block_size_dict": 209, "mainli": [209, 213, 346, 360, 361], "To": [209, 213, 221, 222, 323, 334, 343, 357, 360, 362, 364, 368, 369], "implement": [209, 210, 211, 212, 213, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 328, 336, 343, 346, 347, 351, 353, 354, 355, 357, 359, 360, 361, 362, 363, 365, 368, 381], "get_sparsity_ratio": [209, 211], "return_dict": [209, 221, 222], "zero": [209, 210, 211, 356, 357, 359, 360, 364, 374], "zero_cnt": 209, "total_cnt": 209, "get_pattern_lock_mask": 209, "obtain": [209, 212, 213, 214, 336, 338, 345, 363], "posit": [209, 221, 222, 333, 336, 340, 346, 351, 368, 373], "lock": [209, 374], "check_layer_valid": 209, "block_siz": 209, "get_reduced_masks_from_data": 209, "update_residual_cnt": 209, "yet": 209, "get_sparsity_ratio_each_lay": 209, "sparsity_ratio": 209, "zero_point": 209, "cnt": 209, "sparsityinfo": 209, "adjust_ratio": 209, "key_new_spars": 209, "max_sparsity_ratio": 209, "min_sparsity_ratio": 209, "final_target_sparsity_ratio": 209, "adjust": [209, 324, 350, 375], "examin": 209, "propos": [209, 323, 337, 354], "indic": [209, 221, 222, 314, 351, 355, 356, 362, 364, 368, 371], "adjust_sparsity_ratio": 209, "patternnxm": 209, "nxm": [209, 210, 354], "height": 209, "width": [209, 354, 355, 359, 361, 375], "vertic": 209, "direct": [209, 314], "becaus": [209, 343, 355, 358, 363, 375], "calul": 209, "ration": 209, "block_size_1": 209, "block_size_2": 209, "wise": [209, 353, 368, 382], "block_wis": 209, "get_sparsity_ratio_progress": 209, "reshape_orig_to_pattern": 209, "s1": 209, "s2": 209, "reshape_reduced_to_orig": 209, "orig_shap": 209, "permut": [209, 345, 358, 362, 368], "reduce_scor": 209, "recalcul": 209, "get_mask_per_threshold": 209, "cur_target_sparsity_ratio": 209, "keep_exact_sparsity_ratio": 209, "togeth": [209, 336], "keep_pre_mask": 209, "remain": [209, 314], "unchang": 209, "count_new_masked_cnt": 209, "new_added_mask": 209, "count": [209, 345, 350], "ad": [209, 210, 221, 222, 343, 347, 351, 355, 364, 368, 373], "update_new_added_mask": 209, "cur_mask": 209, "bacaus": 209, "update_progressive_mask": 209, "progressive_step": 209, "progressive_config": 209, "progress": [209, 210, 213], "update_progressive_masks_linear": 209, "update_progressive_masks_scor": 209, "update_progressive_masks_loc": 209, "domain": [209, 328, 353, 381], "update_progressive_masks_glob": 209, "patternninm": 209, "continu": [209, 221, 354, 357, 361, 362], "github": [209, 211, 226, 228, 334, 335, 336, 341, 342, 344, 350, 370, 376], "com": [209, 211, 226, 228, 335, 336, 341, 342, 344, 352, 366, 370, 376], "blob": [209, 226], "master": [209, 211], "md": [209, 226, 345, 348], "get_least_ninm_mask_from_data": 209, "elementwis": 209, "sparisti": 209, "get_ele_mask_per_threshold": 209, "least_ninm_mask": 209, "least_m_in_m_mask": 209, "register_prun": 210, "parse_valid_pruner_typ": 210, "get_prun": 210, "cuurent": 210, "baseprun": 210, "what": [210, 333, 355, 356, 362, 374], "current_sparsity_ratio": 210, "global_step": 210, "trigger": [210, 217, 334], "frequenc": [210, 352, 366, 374], "show": [210, 333, 336, 343, 344, 347, 348, 351, 358, 360, 362], "on_epoch_begin": [210, 211], "mask_weight": 210, "formal": [210, 221], "mask_weights_gener": 210, "local_step": [210, 211], "update_mask": 210, "on_epoch_end": [210, 211], "on_step_end": [210, 211], "on_train_begin": [210, 211], "phase": [210, 211, 337, 374], "on_train_end": [210, 211], "on_before_ev": [210, 211], "on_after_ev": [210, 211], "check_is_pruned_step": 210, "boolean": 210, "basicprun": 210, "arrang": 210, "within": [210, 323, 333, 359], "chang": [210, 213, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 334, 343, 354, 355, 364, 369, 370], "proce": 210, "regul": 210, "term": [210, 212, 323, 337, 359, 362, 364, 370, 371, 372, 375], "set_global_step": 210, "patternlockprun": 210, "fix": [210, 334, 346, 358], "inherit": [210, 213, 324, 337, 343, 350, 373, 374, 375], "progressiveprun": 210, "interpol": 210, "fine": [210, 335, 374, 375], "grain": 210, "improv": [210, 334, 336, 345, 355, 357, 359, 360, 364, 375], "interv": [210, 368], "check_progressive_valid": 210, "check_is_pruned_progressive_step": 210, "update_masks_progress": 210, "print_progressive_spars": 210, "templat": [211, 312, 314], "tree": 211, "huggingface_model": 211, "text": [211, 226, 324, 336, 338, 356, 365, 370, 373], "classif": [211, 221, 222, 323, 337, 338, 373], "eager": [211, 375], "config_file_path": 211, "pruner_info": 211, "update_config": 211, "read": [211, 336, 344], "pass": [211, 221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 314, 355, 356, 373, 375], "elementwise_over_matmul_gemm_conv": 211, "elementwise_over_al": 211, "blockwise_over_matmul_gemm_conv": 211, "ensur": [211, 360], "register_reg": 212, "regulariz": 212, "get_reg_typ": 212, "get_reg": 212, "basereg": 212, "grouplasso": [212, 374], "coeff": 212, "lasso": [212, 338, 374], "variabl": [212, 314, 347, 350, 368, 369], "reg_term": 212, "coeffient": 212, "register_schedul": 213, "get_schedul": 213, "pruningschedul": 213, "dens": [213, 314, 345, 346, 351, 353, 364, 368, 374], "gradual": 213, "update_sparsity_ratio": 213, "target_ratio": 213, "current_prune_step": 213, "total_prune_step": 213, "init_ratio": 213, "oneshotschedul": 213, "onc": [213, 304, 336, 345, 363], "iterativeschedul": 213, "init_sparsity_ratio": 213, "check_config": 214, "prune_config": 214, "everyth": 214, "reset_none_to_default": 214, "undefin": 214, "item": [214, 324, 336, 340], "update_param": 214, "process_weight_config": 214, "global_config": 214, "local_config": 214, "default_config": 214, "pruners_info": 214, "process_yaml_config": 214, "check_key_valid": 214, "template_config": 214, "user_config": 214, "process_and_check_config": 214, "process_config": 214, "parse_to_prun": 214, "keep": [214, 347], "quantizationmod": 215, "easili": [216, 354, 355], "finetun": [216, 336, 338, 340, 373], "basetrain": 216, "builtin_train_func": 216, "automativ": 216, "low": [216, 336, 340, 354, 361, 363, 372, 375, 384], "achiev": [216, 336, 357, 372], "point": [216, 221, 222, 323, 347, 355, 356, 360, 363, 375], "automat": [216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 324, 335, 345, 346, 347, 355, 368], "pruningconf": 216, "smaller": [216, 337, 360, 374], "config_list": 216, "optimizt": 216, "create_optimizer_builtin": 216, "resume_from_checkpoint": 216, "optuna": 216, "ignore_keys_for_ev": 216, "tor": 216, "checkpoint": [216, 221], "present": [216, 221, 363], "state": [216, 221, 222, 336, 352, 366], "hyperparamet": [216, 323], "keyword": 216, "hide": [216, 221, 222], "deprec": [216, 221, 222], "training_step": 216, "inject": [216, 356], "being": [216, 360], "fed": 216, "most": [216, 336, 347, 351, 355, 356, 357, 362, 373], "expect": [216, 221, 222, 333, 334, 364, 372], "label": [216, 221, 222, 226, 335, 369, 373], "training_step_length_adapt": 216, "compute_loss": 216, "return_output": 216, "By": [216, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 344], "nas_config": 216, "baseic": 216, "callabel": 216, "auto_distil_evaluation_loop": 216, "prediction_loss_onli": 216, "ignore_kei": 216, "metric_key_prefix": 216, "eval": [216, 323, 371], "trainer_util": 216, "evalloopoutput": 216, "share": [216, 357], "work": [216, 303, 356, 373], "doe": [216, 343, 355, 356, 357, 358, 359, 362, 368], "avoid": [216, 221, 222, 351, 354, 356, 360, 362, 363, 368], "memori": [216, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 372, 375], "huge": 216, "prefix": [216, 368], "export_to_onnx": [216, 336, 339], "tranfer": 216, "paramert": 216, "export_to_fp32_onnx": 216, "save_path": [216, 339], "opset_vers": [216, 339], "14": [216, 339, 352, 358, 365, 366], "do_constant_fold": [216, 339], "verbos": [216, 339], "export": [216, 336, 344, 345, 348, 373, 379], "fold": [216, 368], "export_to_bf16_onnx": 216, "export_to_int8_onnx": 216, "quant_format": [216, 339], "s8s8": [216, 339], "sample_s": 216, "calibrate_method": 216, "minmax": 216, "scale_map": [216, 336], "export_to_jit": 216, "set_dynamic_config": [216, 340], "dynamic_config": [216, 340], "run_evolutionary_search": 216, "nlptrainer": [216, 336, 337, 340, 374, 375], "nlpseq2seqtrain": 216, "special": [217, 356, 362], "greater_is_bett": [219, 223, 323, 340, 371, 372, 375], "is_rel": [219, 340, 371, 375], "01": [219, 340, 366, 371, 375], "weight_ratio": [219, 223, 371, 372, 375], "modeling_bert_dynam": 220, "modeling_roberta_dynam": 220, "bert": [221, 323, 336, 337, 338, 344, 345, 346, 349, 351, 352, 355, 360, 361, 362, 363], "load_tf_weights_in_bert": 221, "tf_checkpoint_path": 221, "bertembed": [221, 222], "word": [221, 222, 338, 364], "token_typ": 221, "forward": [221, 222, 323, 345, 350, 375], "longtensor": [221, 222], "token_type_id": [221, 222], "position_id": [221, 222], "inputs_emb": [221, 222], "floattensor": [221, 222], "past_key_values_length": [221, 222], "bertselfattent": 221, "position_embedding_typ": [221, 222], "transpose_for_scor": [221, 222], "hidden_st": [221, 222], "attention_mask": [221, 222], "head_mask": [221, 222], "encoder_hidden_st": [221, 222], "encoder_attention_mask": [221, 222], "past_key_valu": [221, 222], "output_attent": [221, 222], "bertselfoutput": 221, "bertattent": 221, "prune_head": [221, 222], "bertintermedi": 221, "intermedi": [221, 323, 343, 348, 351, 364, 375], "bertoutput": 221, "bertlay": 221, "output_length": [221, 222], "always_keep_cls_token": [221, 222], "feed_forward_chunk": [221, 222], "attention_output": [221, 222], "feed": [221, 222, 337, 344], "chunk": 221, "bertencod": 221, "encod": [221, 222, 323, 345, 351], "use_cach": [221, 222], "output_hidden_st": [221, 222], "modeling_output": [221, 222], "basemodeloutputwithpastandcrossattent": [221, 222], "bertpool": 221, "pooler": [221, 222], "bertpredictionheadtransform": 221, "bertlmpredictionhead": 221, "bertonlymlmhead": 221, "sequence_output": 221, "bertonlynsphead": 221, "pooled_output": 221, "bertpretraininghead": 221, "bertpretrainedmodel": 221, "simpl": [221, 222, 336, 341, 344, 355, 363, 373], "bertforpretrainingoutput": 221, "bertforpretrain": 221, "sum": [221, 324, 337, 345, 361, 363, 364, 368], "prediction_logit": [221, 222], "sequence_length": [221, 222], "vocab_s": [221, 222], "vocabulari": 221, "seq_relationship_logit": 221, "hidden_s": [221, 222, 323], "plu": 221, "num_head": [221, 222], "averag": [221, 324, 336, 345], "bertmodel": 221, "add_pooling_lay": [221, 222], "behav": [221, 222], "well": [221, 222, 339, 375, 376], "decod": [221, 222, 365], "case": [221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 323, 337, 338, 345, 346, 354, 356, 357, 358, 368, 369], "cross": [221, 222], "describ": [221, 222, 313, 335, 357, 359, 362, 368, 371, 372], "1706": [221, 352, 366], "03762": 221, "ashish": [221, 222], "vaswani": [221, 222], "noam": [221, 222], "shazeer": [221, 222], "niki": [221, 222], "parmar": [221, 222], "jakob": [221, 222], "uszkoreit": [221, 222], "llion": [221, 222], "jone": [221, 222], "aidan": [221, 222], "gomez": [221, 222], "lukasz": [221, 222], "kaiser": [221, 222], "illia": [221, 222], "polosukhin": [221, 222], "is_decod": [221, 222], "add_cross_attent": [221, 222], "get_input_embed": [221, 222], "getter": [221, 222], "set_input_embed": [221, 222], "set_length_config": [221, 222], "set_output_attent": [221, 222], "basemodeloutputwithpoolingandcrossattent": [221, 222], "pad": [221, 222, 324, 336, 345, 360, 364, 368], "n_layer": [221, 222], "embed_size_per_head": [221, 222], "precomput": [221, 222], "speed": [221, 222, 343, 347], "up": [221, 222, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 343, 345, 347, 356, 368], "decoder_input_id": [221, 222], "those": [221, 222, 362, 374, 375], "past": [221, 222], "instead": [221, 222, 357], "get_output_embed": [221, 222], "set_output_embed": [221, 222], "new_embed": [221, 222], "next_sentence_label": 221, "legaci": [221, 222], "berttoken": 221, "uncas": [221, 323, 336, 338, 340, 348, 373], "hello": [221, 222], "my": [221, 222], "dog": [221, 222], "cute": [221, 222], "return_tensor": [221, 222, 324, 336, 340], "pt": [221, 222, 324, 336, 340, 373], "bertlmheadmodel": 221, "causallmoutputwithcrossattent": [221, 222], "prepare_inputs_for_gener": [221, 222], "bertformaskedlm": 221, "maskedlmoutput": [221, 222], "bertfornextsentencepredict": 221, "sentenc": [221, 222, 226, 324, 335, 336], "nextsentencepredictoroutput": 221, "prompt": 221, "itali": 221, "pizza": 221, "serv": 221, "restaur": 221, "unslic": 221, "next_sent": 221, "sky": 221, "blue": 221, "shorter": 221, "wavelength": 221, "light": 221, "logit": [221, 222, 323, 336, 337, 340, 344], "wa": 221, "bertforsequenceclassif": 221, "sequenceclassifieroutput": [221, 222], "regress": [221, 222, 335], "num_label": [221, 222, 336, 340], "entropi": [221, 222, 323], "bertformultiplechoic": 221, "choic": [221, 222, 338], "multiplechoicemodeloutput": [221, 222], "num_choic": [221, 222], "bertfortokenclassif": 221, "tokenclassifieroutput": [221, 222], "bertforquestionansw": 221, "question": [221, 333, 334, 336, 338, 358], "answer": [221, 222, 333, 338], "start_posit": [221, 222], "end_posit": [221, 222], "questionansweringmodeloutput": [221, 222], "span": [221, 222], "clamp": [221, 222], "account": [221, 222, 333], "expand_gath": [221, 222], "roberta": [222, 338], "robertaembed": 222, "tini": [222, 338], "tweak": 222, "create_position_ids_from_inputs_emb": 222, "directli": [222, 355, 358, 360, 361], "cannot": [222, 354, 360, 364, 369], "sequenti": [222, 347, 355, 356, 359], "robertaselfattent": 222, "robertaselfoutput": 222, "robertaattent": 222, "attenion": 222, "robertaintermedi": 222, "intermidi": 222, "robertaoutput": 222, "robertalay": 222, "robertaencod": 222, "roberata": 222, "robertapool": 222, "robertapretrainedmodel": 222, "update_keys_to_ignor": 222, "del_keys_to_ignor": 222, "robertamodel": 222, "_": [222, 323, 335, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 360, 361, 362, 363, 367, 368, 371, 372, 373, 374, 375], "robertaforcausallm": 222, "robertatoken": 222, "robertaconfig": 222, "robertaformaskedlm": 222, "robertalmhead": 222, "featur": [222, 304, 323, 332, 334, 336, 337, 348, 351, 354, 361, 365, 373, 376, 385], "robertaforsequenceclassif": 222, "robertaformultiplechoic": 222, "robertafortokenclassif": 222, "robertaclassificationhead": 222, "robertaforquestionansw": 222, "quanstion": 222, "create_position_ids_from_input_id": 222, "padding_idx": 222, "non": [222, 359, 362, 364, 368, 369], "symbol": 222, "fairseq": 222, "make_posit": 222, "models": [223, 338, 372], "distributed_init": [224, 225], "gloo": 224, "world_siz": 224, "rank": 224, "init_method": 224, "master_addr": 224, "127": [224, 345, 365, 366, 375], "master_port": 224, "12345": 224, "distibut": 224, "environ": [224, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 368, 369], "tfdataload": 225, "worker_address": 225, "worker": 225, "address": [225, 304, 333, 355, 361], "treat": [225, 343], "chief": 225, "get_filepath": 225, "base_dirpath": 225, "folder": [225, 342, 343, 344, 345, 346, 348], "keras2savedmodel": 225, "kera": 225, "augment": [226, 228, 379], "extens": [226, 334, 335, 340, 341, 342, 343, 344, 370, 372, 373, 374, 376], "dataaugment": [226, 335], "augmenter_typ": [226, 335], "wai": [226, 336, 345, 346, 347, 351, 354, 356, 360, 362, 365], "enhanc": [226, 340, 359], "textgenerationaug": [226, 335], "keyboardaug": [226, 335], "aug": [226, 304, 335], "input_dataset": [226, 335], "origin_data": 226, "output_path": [226, 335], "join": [226, 335], "result_path": [226, 335], "test1": [226, 335], "cv": [226, 335], "augmenter_argu": [226, 335], "gpt2": [226, 335], "medium": [226, 304, 335, 336, 369], "data_aug": [226, 335], "text_generation_augment": 226, "raw_dataset": [226, 335, 336, 340], "No": [226, 338], "glue": [226, 335, 336], "sst2": [226, 324, 335, 336, 338, 345, 349], "eo": [226, 335], "k": [226, 314, 335, 346, 355, 357, 358, 359, 360, 362, 363, 364, 366, 368], "p": [226, 335, 336], "top_p": 226, "effect": [226, 304, 335, 336, 343, 368], "tend": 226, "toward": [226, 333], "greedi": 226, "repetition_penalti": 226, "primarili": 226, "ctrl": [226, 335, 338], "num_return_sent": 226, "entir": [226, 345, 354, 360, 361, 374], "num_sampl": 226, "condit": [226, 335, 346, 347, 370], "stop_token": 226, "mit_data_augment": 226, "nlpaug": [226, 228, 335], "librari": [226, 228, 328, 334, 355, 356, 360, 381], "help": [226, 228, 335, 336, 351, 355, 367], "machin": [226, 228, 335, 368], "learn": [226, 228, 304, 335, 348, 356, 372, 375], "project": [226, 228, 333, 334, 335], "makcedward": [226, 228], "suffix": 226, "csv": [226, 335], "column_nam": 226, "sentence1": 226, "sentence2": 226, "data_augment": [227, 335], "augmentertyp": 228, "enumer": [228, 314], "get_augmenter_from_typ": 228, "aug_typ": 228, "augment_typ": 228, "testaddclstoken": 231, "methodnam": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "runtest": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "code": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 336, 340, 341, 343, 346, 356, 357, 358, 359, 360, 365, 368, 370], "itself": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 365], "place": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 356, 361, 374], "fixtur": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "testcas": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "constructor": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 350], "author": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 370], "deconstruct": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "setup": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 335, 336, 341, 343], "teardown": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "respect": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 347, 348], "necessari": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333, 350, 364, 368], "__init__": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 343], "alwai": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 351, 360, 369], "signatur": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "failureexcept": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "fail": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "deem": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 333], "rather": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 347, 355], "longmessag": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "long": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 351], "messag": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "repr": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "failur": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "explicit": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 312, 333, 350, 356], "maxdiff": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "diff": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "difflib": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "look": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 343, 345, 356, 357], "setupclass": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "hook": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "teardownclass": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "testaddembed": 232, "testattentionreshap": [233, 234, 279, 282], "testtorchmodel": [235, 249], "testbinaryop": 236, "testtorchop": [237, 239, 245, 248, 256, 257, 260, 261, 270, 273, 275, 284, 285, 287, 292, 296], "testcastto": 238, "testconvreshap": 240, "testdecoderattnreshap": 241, "testdispatchertuningacc": 242, "testdispatchertuningthroughput": 243, "testdynamicquant": 244, "testembeddingbag": 246, "testexecutionopt": 247, "testgraphdispatch": 250, "testinsertinputouputdata": 251, "testissupportedonnxgraph": 252, "testlastlayershap": 253, "testlayernormwithreducemean": [254, 281, 283], "testlayernormwithtranspos": 255, "testtorchlinear": 258, "testmain": 259, "testmatmulwithbiasrelu": 262, "testmatmulwithbiassigmoid": 263, "testmatmulwithbiastanh": 264, "testmergedembeddingbag": 265, "testonnxutil": 267, "testoperatoradaptor": 268, "testop": 269, "testpaddingsequ": 271, "testpatterndispatch": 272, "testpositionembed": 274, "testprimitivecacheacc": 276, "testprimitivecachethroughput": 277, "testqkvmerg": 278, "testquantonnxexecut": 280, "teststartendlogit": 286, "testtextencod": 288, "testtextencoderbf16": 289, "testtfutil": 290, "testtokentypeembed": 291, "testtransposebatchmatmul": 293, "testunet": 294, "testunetbf16": 295, "testvaedecod": 297, "testvaedecoderbf16": 298, "testweightsharingacc": 299, "testweightsharingdispatchertuningacc": 300, "testweightsharingdispatchertuningthroughput": 301, "testweightsharingthroughput": 302, "issu": [303, 323, 330, 333, 334, 336, 361, 375, 383], "center": 303, "resolv": 303, "guidelin": 303, "innov": [304, 336], "toolkit": [304, 336, 338], "particular": 304, "4th": [304, 336], "xeon": [304, 336, 338, 341, 354, 363, 366, 370, 375], "scalabl": [304, 336, 338, 341, 355], "processor": [304, 336, 338, 341, 352, 366], "sapphir": [304, 336, 341], "rapid": [304, 336, 341], "codenam": 304, "seamless": [304, 336], "experi": [304, 333, 336, 358, 363, 364], "extend": [304, 336, 357], "leverag": [304, 323, 336, 337, 340], "advanc": [304, 323, 333, 336, 353, 365], "softwar": [304, 336, 370], "optim": [304, 321, 323, 324, 336, 337, 338, 339, 340, 341, 344, 347, 348, 349, 355, 356, 357, 359, 371, 372, 373, 374, 375], "uniqu": [304, 336], "awar": [304, 336], "runtim": [304, 314, 336, 365, 368, 375], "releas": [304, 336, 380], "neurip": [304, 336], "2022": [304, 336, 352, 366], "paper": [304, 336, 340], "distilbert": [304, 323, 336, 338, 340, 348, 373], "quala": [304, 336, 338, 340], "minilm": [304, 336, 338, 340], "2021": [304, 336], "pre": [304, 336, 347, 357, 367], "applic": [304, 336], "diffus": [304, 336, 338, 360], "gpt": [304, 335, 336, 338], "j": [304, 336, 338, 342, 343, 344, 353, 359, 364, 365, 368], "6b": [304, 336, 338], "bloom": [304, 336], "176b": [304, 336], "t5": [304, 336, 338], "setfit": [304, 336], "blog": [304, 336], "publish": [304, 333, 336, 370], "mleffici": [304, 336], "effici": [304, 336, 340], "dec": [304, 336], "nov": [304, 336], "coher": [304, 361], "novemb": 304, "alibaba": 304, "deep": [304, 335, 336, 348, 356, 372, 375], "purif": 304, "kernel": [305, 314, 332, 344, 345, 350, 352, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 367, 385], "namespac": [311, 312, 313, 314], "jd": [311, 312, 313, 314, 356], "engine_t": 311, "cpu_engine_t": 311, "gpu_ocl_engine_t": 311, "inlin": [311, 312, 313, 314, 355], "engine_kind": [311, 313, 356], "runtime_kind": [311, 313], "virtual": [311, 312, 313, 350, 355, 356], "get_engine_kind": 311, "get_runtime_kind": 311, "std": [311, 312, 313, 314, 353, 355, 356], "vector": [311, 312, 313, 314, 350, 353, 355, 356, 357, 359, 362, 364], "impl_list_item_t": [311, 312], "get_implementation_list": 311, "operator_desc": [311, 312, 315, 353], "op_desc": [311, 312, 353, 356], "create_kernel": 311, "shared_ptr": [311, 312, 350], "kernel_t": [311, 312], "stream_t": 311, "create_stream": 311, "create_memory_storag": 311, "memory_storage_t": 311, "protect": [311, 312], "engine_kind_": [311, 313], "runtime_kind_": [311, 313], "cpu_inst": 311, "null_inst": 311, "storag": 311, "empty_list": 311, "typenam": [312, 314], "arg_t": 312, "void": [312, 313, 314, 350, 353, 355, 356, 357], "proxy_bas": 312, "hpp": [312, 313, 314, 346, 353, 368], "proxi": [312, 328, 353, 360, 381], "anyth": 312, "similar": [312, 347, 355, 358, 359, 361, 362, 374], "onednn": [312, 350], "struct": [312, 314, 355, 356], "oneapi": [312, 350, 365], "dnnl": [312, 346, 350], "136": 312, "reset_sp": 312, "sp": 312, "get_sp": 312, "create_proxy_object": 312, "result_ref": 312, "privat": [312, 313, 333, 344, 350, 354, 355, 356, 361], "member": [312, 313, 314, 333, 350, 355, 356], "data_handle_": 312, "kernel_desc_proxi": 312, "kernel_desc_t": 312, "real": [312, 346, 361, 362, 365], "attention_desc": 312, "dyn_quantize_mha_desc": 312, "dynamic_quant_desc": 312, "dynamic_quant_matmul_desc": 312, "eltwiseop_desc": 312, "gather_desc": 312, "layernorm_ba_desc": [312, 355], "layernormalized_spmm_desc": 312, "logsoftmax_desc": 312, "mha_dense_desc": 312, "slice_desc": 312, "softmax_desc": 312, "sparse_matmul_desc": [312, 353], "transpose_matmul_desc": 312, "transpose_mha_desc": 312, "kernel_kind": [312, 313, 356], "impl_list_": 312, "nullptr": [312, 355], "kernel_proxi": 312, "dyn_quantize_mha": 312, "dynamic_qu": 312, "dynamic_quant_matmul": 312, "eltwiseop": [312, 355, 356], "layernorm_ba": 312, "layernormalized_spmm": 312, "mha_dens": [312, 368], "slice": [312, 360], "sparse_matmul": [312, 365], "transpose_matmul": 312, "transpose_mha": 312, "kdp": 312, "rt_data": [312, 353], "size_t": [312, 314, 346, 356], "get_workspace_s": 312, "kd": [312, 323, 337], "sparse_matmul_desc_t": 312, "sparse_matmul_t": 312, "descriptor": [313, 350, 368], "ker_kind": [313, 353, 356], "kernel_prop": [313, 356], "ker_prop": [313, 353, 356], "eng_kind": [313, 353, 356], "tensor_desc": [313, 356], "ts_desc": [313, 353, 356], "unordered_map": [313, 356], "postop_attr": [313, 314, 356], "apply_postops_list": [313, 356], "rh": [313, 362], "set_binaryop_list": [313, 355], "binaryop_attr": [313, 314, 355], "binaryop_list": [313, 355], "uint64_t": 313, "impl_nthr": 313, "get_binaryop_list": [313, 355], "ker_kind_": [313, 356], "ker_prop_": [313, 356], "forward_infer": [313, 350, 356], "undef": [313, 314, 355, 356], "impl_nthr_": [313, 356], "ts_descs_": [313, 356], "attrs_": [313, 356], "apply_postops_list_": [313, 356], "binaryop_list_": [313, 355], "enum": [314, 355, 356], "attention_io": 314, "merge_src": 314, "merge_dst": 314, "q_weight": 314, "k_weight": 314, "v_weight": 314, "q_bia": 314, "k_bia": 314, "v_bia": 314, "q_scale": 314, "k_scale": 314, "v_scale": 314, "reshape_input": 314, "q_k_src2": 314, "q_k_scale": 314, "qk_v_output_zero_point": 314, "qk_v_output_scal": 314, "ssd": [314, 356, 368], "eltwiseop_param_t": [314, 356], "element_num": [314, 356], "data_typ": [314, 350, 355, 356, 368], "in_dt": 314, "out_dt": 314, "element_num_each_th": 314, "remain_el": 314, "eltwiseop_data_t": 314, "dst": [314, 350, 355, 356, 358, 359, 360, 363, 364, 368], "gather_param_t": 314, "dt": [314, 355, 356], "dt_size": 314, "int64_t": 314, "extend_mask": 314, "src_axis_s": 314, "dst_axis_s": 314, "src_size": 314, "idx_siz": 314, "outer_s": 314, "inner_s": 314, "binary_ts_s": 314, "gather_data_t": 314, "binaryop_addr": [314, 355], "16": [314, 324, 338, 339, 344, 352, 358, 359, 360, 361, 364, 365, 366, 368, 375], "spec_translnorm_typ": 314, "normal": [314, 355, 363, 382], "layernorm_ba_param_t": 314, "input_dt": [314, 355, 368], "output_dt": [314, 368], "output2_dt": 314, "spec_typ": [314, 368], "row_num": 314, "col_num": 314, "process_col": [314, 355], "direct_process_row": 314, "process_batch_per_k": 314, "ker_per_batch": 314, "batch_num": 314, "thread_elt_offset": [314, 355], "split_output": 314, "layernorm_ba_data_t": 314, "dst2": 314, "process_row": 314, "anonym": 314, "ep": 314, "1e": 314, "matmul_param_t": 314, "dim_t": 314, "m_tile": 314, "n_tile": 314, "matmul_data_t": 314, "src0": [314, 368], "src1": [314, 345, 355, 368], "src2": [314, 355, 368], "matmul_u8_data_t": 314, "uint8_t": [314, 355, 356], "int8_t": 314, "zp": [314, 355], "matmul_io": 314, "io": [314, 350], "dst0": 314, "scale0": 314, "zp0": 314, "matmul_io_max": 314, "mean_var_reduce_param_t": 314, "bm": 314, "bn": 314, "mean_var_reduce_data_t": 314, "mean_in": 314, "var_in": 314, "mean_out": 314, "var_out": 314, "spec_softmax_typ": 314, "lut": [314, 353, 355, 356, 368], "softmax_param_t": 314, "sepc_typ": 314, "scalar_num": 314, "vec_align_len": 314, "vec_tail_len": 314, "vec_num_per_thr": 314, "vec_num_tail_thr": 314, "get_lut_exp_attr": 314, "softmax_data_t": 314, "tmp": [314, 356, 358, 360, 363], "process_vec_num": 314, "bfloat16_t": 314, "typedef": 314, "amx_params_t": 314, "amx_bf16_params_t": 314, "amx_int8_params_t": 314, "amx_inputs_t": 314, "amx_bf16f32_inputs_t": 314, "amx_bf16bf16_inputs_t": 314, "sparse_schem": 314, "scenario": [314, 335, 360], "spmm_vnni": 314, "sparse_x_dens": 314, "dense_x_spars": 314, "sparse_x_spars": 314, "subfunc_level": [314, 368], "non_kdim": 314, "kdim": 314, "subfunc_level_max": [314, 368], "constexpr": 314, "wei": [314, 360, 368], "todo": [314, 377], "yi": 314, "conflict": 314, "dst_m1": 314, "dst_m2": 314, "work_spac": 314, "vnni_param_t": 314, "spmm_type": 314, "primit": [314, 350], "jit_domain": 314, "has_bia": 314, "append_sum": 314, "output_typ": [314, 345], "tile_w": 314, "sub_func": 314, "im_start": 314, "blocksiz": 314, "indptr": 314, "welford": [314, 361], "dst_t": 314, "vnni_data_t": 314, "ptr_dens": 314, "int32_t": 314, "ptr_bia": 314, "ptr_dst": 314, "ptr_scale": 314, "ptr_dst_m1": 314, "ptr_dst_m2": 314, "num_tilem": 314, "tilem": 314, "tilen": 314, "blocks_per_group": 314, "64": [314, 323, 341, 345, 352, 360, 362, 363, 365, 366, 368], "sizeof": 314, "nnz_group": 314, "nrowptr": 314, "colidx": 314, "group_rowptr": 314, "same_src_dtyp": 314, "src_t": 314, "wgt_t": 314, "bia_t": 314, "avx512_fp32_params_t": 314, "bsc_data_t": 314, "sparse_ptr": 314, "im_end": 314, "in_start": 314, "in_end": 314, "avx512_data_t": 314, "transpose_copy_param": 314, "srcptr": 314, "dstptr": 314, "srcstride": 314, "dststride": 314, "seq_vnni_copy_param": 314, "transpose_mha_step1_param": 314, "mata": 314, "matb": 314, "matc": 314, "matd": 314, "expsum": 314, "cfg": 314, "batchk": [314, 363], "astep": 314, "cstep": 314, "sumstep": 314, "cbatchstep": 314, "scaleab": 314, "transpose_mha_step2_param": 314, "sumptr": 314, "transpose_mha_step3_param": 314, "scalec": 314, "zeropointc": 314, "transpose_mha_io": 314, "src_k": 314, "src_q": 314, "src_v": 314, "tmp2m": 314, "sl_pad": 314, "head_num": [314, 362, 368], "head_siz": [314, 362, 368], "seq_len": [314, 336, 344, 345, 349, 362, 368], "scale_q": 314, "scale_k": 314, "scale_v": 314, "scale_dst": 314, "zp_dst": 314, "transpose_mha_io_max": 314, "arch": 323, "proposit": 323, "promis": [323, 359], "assess": 323, "128": [323, 336, 344, 345, 349, 352, 366, 368, 375], "advisor": 323, "ever": 323, "student": [323, 337, 338], "minim": [323, 337, 364], "done": [323, 337, 346, 360, 368, 375], "z": [323, 337], "distanc": [323, 337], "euclidean": [323, 337], "kullback": [323, 337], "leibler": [323, 337], "diverg": [323, 337], "assign": 323, "cal": 323, "sloss": 323, "mismatch": 323, "512": [323, 345, 359, 361, 364, 366, 368], "desir": [323, 345], "unmatch": 323, "agent": 323, "train_func_builtin": 323, "flash_distil": 323, "eval_func_builtin": 323, "els": [323, 324, 343, 350], "search_loop": 323, "model_arch_para": 323, "oob": 323, "246": 323, "intra_bottleneck_s": 323, "96": [323, 352, 366], "160": [323, 352, 365], "num_attention_head": 323, "intermediate_s": 323, "640": 323, "num_feedforward_network": 323, "mobilebert": [323, 337, 338], "kl": 323, "mse": 323, "best_model_arch": 323, "automodelforpretrain": 323, "higher_is_bett": 323, "10": [323, 335, 336, 341, 344, 345, 352, 358, 366, 368], "42": [323, 352, 366], "500": 323, "25000": 323, "mobilebert_distil": 323, "sgd": 323, "learning_r": 323, "001": 323, "mobilebert_na": 323, "5000": 323, "partial": 323, "pylint": [323, 334], "disabl": [323, 333, 352, 366, 368], "e1101": 323, "makedir": 323, "exist_ok": 323, "120": [323, 365], "240": 323, "eval_loss": [323, 340], "tfautomodelforsequenceclassif": 323, "capabl": [324, 361, 364], "through": [324, 336, 343, 355, 358, 359, 360, 365], "physic": [324, 333, 362], "model_nam": [324, 373], "dataset_nam": 324, "autotoken": [324, 336, 373], "load_dataset": [324, 335, 336], "lambada": 324, "195": 324, "intel_extension_for_transform": [324, 336, 337, 340, 341, 343, 344, 346, 348, 351, 353, 368, 371, 372, 373, 374, 375], "summari": 324, "003": 324, "throughput": [324, 336, 352, 360], "5071": 324, "933": [324, 352], "guid": [327, 336, 337, 343, 356, 358, 380], "formerli": [328, 336, 341, 353, 381], "known": [328, 336, 353, 381], "sparselib": [328, 346, 353, 381], "high": [328, 336, 344, 353, 360, 361, 364, 381], "assembli": [328, 353, 357, 359, 364, 365, 381], "introduc": [330, 334, 354, 355, 356, 357, 358, 360, 362, 363, 364, 375, 383], "who": [330, 333, 356, 383], "might": [330, 347, 383], "profil": [330, 383, 384], "intruct": [330, 383], "met": [330, 383], "request": [330, 336, 383], "interest": 333, "foster": 333, "open": [333, 335, 344, 348], "welcom": [333, 334], "maintain": [333, 334, 336, 347, 376], "particip": [333, 357], "commun": 333, "harass": 333, "free": [333, 355, 368], "everyon": 333, "regardless": 333, "ag": 333, "bodi": [333, 362], "ethnic": 333, "sex": 333, "characterist": 333, "gender": 333, "express": 333, "educ": 333, "socio": 333, "econom": 333, "statu": [333, 372, 375], "nation": 333, "person": 333, "appear": 333, "race": 333, "religion": 333, "sexual": 333, "orient": 333, "contribut": 333, "inclus": 333, "Being": 333, "viewpoint": 333, "gracefulli": 333, "critic": 333, "focus": 333, "empathi": 333, "unaccept": 333, "imageri": 333, "unwelcom": 333, "troll": 333, "insult": 333, "derogatori": 333, "comment": 333, "polit": 333, "attack": 333, "electron": 333, "permiss": 333, "reason": [333, 347, 350, 361], "consid": [333, 346, 354, 356, 358, 369], "inappropri": 333, "profession": 333, "clarifi": 333, "appropri": [333, 343, 355, 363], "fair": 333, "action": 333, "edit": 333, "reject": 333, "wiki": 333, "align": [333, 354, 356, 364], "ban": 333, "temporarili": 333, "perman": 333, "threaten": 333, "offens": 333, "harm": [333, 364], "offici": 333, "mail": 333, "post": [333, 345, 368], "via": [333, 355, 358, 365], "social": 333, "media": 333, "act": [333, 359], "appoint": 333, "onlin": [333, 336, 361], "offlin": [333, 358, 364, 375], "event": 333, "further": [333, 340, 346, 359], "abus": 333, "report": [333, 334, 336], "contact": [333, 376], "complaint": 333, "review": [333, 334], "investig": [333, 364], "circumst": 333, "team": 333, "oblig": 333, "confidenti": 333, "regard": 333, "incid": 333, "polici": [333, 380], "good": [333, 357, 358], "faith": 333, "temporari": [333, 362], "repercuss": 333, "leadership": 333, "faq": 333, "page": [333, 334, 336, 340], "send": 334, "flake8": 334, "autopep8": 334, "clean": 334, "bug": [334, 336], "jira": 334, "ticket": 334, "xxx": [334, 336], "risk": 334, "pr": [334, 368], "reproduc": 334, "submit": [334, 336], "intend": 334, "safe": 334, "collabor": 334, "adher": 334, "tool": [335, 336, 338, 345, 353, 368], "integr": [335, 384], "lab": 335, "pip": [335, 336, 341, 349], "clone": [335, 336, 341, 342, 343], "cd": [335, 336, 341, 342, 343, 344, 349, 353, 365, 368], "submodul": [335, 336, 341, 342, 344], "recurs": [335, 336, 341, 342, 344, 351], "dev": 335, "data_fil": 335, "delimit": [335, 368], "asserttru": 335, "len": [335, 343, 344, 351, 362], "column": [335, 354, 359, 361, 364, 374], "conduct": 335, "deploy": [335, 336, 340, 346], "ocraug": 335, "spellingaug": 335, "contextualwordembsforsentenceaug": 335, "xl": 335, "xlnet": [335, 338], "Not": [335, 359], "enough": [335, 360, 375], "rescu": 335, "natur": [335, 336, 338, 361], "sst": [335, 336, 338, 340, 373], "txt": [335, 336, 341, 344, 346, 349, 365], "w": [335, 344, 345, 346, 354, 357, 363], "fw": 335, "clm": [335, 338], "train_fil": 335, "validation_fil": 335, "model_dir": 335, "python3": [335, 342], "run_clm": 335, "do_train": 335, "do_ev": 335, "overwrite_output_dir": 335, "secondli": 335, "training_set": 335, "line": [335, 343, 346, 354, 361, 362, 364, 369], "repetit": 335, "penalti": 335, "platform": [336, 367, 375], "particularli": 336, "gen": [336, 356], "imag": [336, 338, 348, 351, 358, 364], "sentiment": 336, "analysi": 336, "becom": [336, 347, 364], "wide": [336, 337, 356, 357, 375], "art": 336, "popular": 336, "ai": 336, "visit": [336, 352, 366], "skylak": 336, "cascad": [336, 341], "lake": [336, 341], "ic": 336, "cooper": [336, 360], "seri": [336, 355, 358, 368], "hbm": 336, "develop": [336, 350], "easi": [336, 346, 348], "rich": 336, "demonstr": [336, 338, 340, 362, 364], "extrem": [336, 340], "significantli": [336, 361, 363], "cento": [336, 341], "ubuntu": [336, 341, 352, 366], "04": [336, 338, 341, 352, 366], "window": [336, 342], "r": [336, 341, 349, 352, 366, 375], "succeed": 336, "grep": 336, "matrix": [336, 340, 354, 357, 358, 359, 361, 362, 363, 364, 368, 374, 378], "23": [336, 358, 366], "load_metr": 336, "np": 336, "automodelforsequenceclassif": [336, 340], "evalpredict": 336, "english": [336, 338, 340, 373], "lambda": 336, "label2id": [336, 340], "id2label": [336, 340], "neg": [336, 340, 368], "pred": 336, "argmax": [336, 340], "label_id": 336, "q_config": [336, 340, 375], "eval_accuraci": [336, 337, 340, 374], "tmp_trainer": 336, "enable_executor": [336, 339], "neural_engin": [336, 340, 342, 343, 344, 345, 346, 348, 351, 353, 368], "set_log_fil": 336, "load_graph": 336, "dummydataload": 336, "compute_perform": 336, "glog_minloglevel": [336, 344, 349], "input_model": [336, 345, 348, 349], "warm_up": 336, "p50": 336, "50": [336, 365], "p90": 336, "90": [336, 338, 345, 352], "p99": 336, "99": [336, 338, 366], "sec": [336, 352], "workflow": [336, 337, 346, 348, 362], "tutori": [336, 344], "resourc": [336, 337, 357], "catalog": 336, "brand": [336, 370], "claim": [336, 370], "properti": [336, 344, 370], "trademark": 336, "larg": [337, 338, 351, 352, 354, 357, 360, 361, 362, 368], "signific": 337, "expens": 337, "deploi": [337, 384], "power": [337, 338], "mobil": 337, "shown": [337, 346, 359, 363, 364], "produc": [337, 364], "instruct": [337, 347, 355, 358, 360, 363, 364, 365, 368, 375], "besid": [337, 356], "often": 337, "patient": 337, "compact": 337, "agnost": 337, "summar": [337, 338], "usual": [337, 347, 354, 364, 375], "1x1": [337, 346], "d_conf": [337, 340], "tune_metr": [337, 374], "metric_": 337, "classifi": 337, "distillation_conf": 337, "distilled_model": 337, "intermediatelayersloss": 337, "meanwhil": [338, 354], "posttrainingdynam": [338, 339, 375], "wikitext": 338, "10004": [338, 339], "xsum": 338, "cnn": 338, "cnn_dailymail": 338, "dm": 338, "lambdalab": 338, "sd": 338, "pokemon": 338, "mlm": 338, "plm": 338, "eleutherai": 338, "neo": 338, "125m": 338, "sshleifer": 338, "wip": [338, 358], "star": 338, "ehdwns1516": 338, "uncased_swag": 338, "swag": 338, "squad": 338, "valhalla": 338, "longform": 338, "4096": [338, 366], "squadv1": 338, "lvwerra": 338, "pegasu": 338, "samsum": 338, "textattack": [338, 348], "mrpc": [338, 348, 349], "echarlaix": 338, "acc91": 338, "d37": 338, "hybrid": 338, "elast": 338, "conll03": 338, "conll2003": 338, "small": [338, 346, 360, 362], "translat": 338, "wmt16": 338, "helsinki": 338, "opu": 338, "mt": [338, 367], "en": 338, "ro": 338, "quantizationawaretrain": [338, 339], "maskinun": 338, "distilgpt2": 338, "rocketknight1": 338, "dslim": 338, "ner": 338, "mb": 338, "f1": [338, 371], "gflop": [338, 366, 369], "speedup": 338, "compar": [338, 354, 357, 368, 375], "415": [338, 352], "47": [338, 352, 366], "88": [338, 352, 365, 366], "58": [338, 366], "56": [338, 365, 366], "35": [338, 352, 366], "1x": 338, "la": [338, 357], "minilmv2": 338, "115": 338, "89": [338, 366], "28": [338, 352, 358, 366], "76": [338, 365, 366], "33x": 338, "269": 338, "253": 338, "252": [338, 365], "202": 338, "104": 338, "34": [338, 366], "87": [338, 366], "11": [338, 341, 349, 358, 366], "44": [338, 345, 352, 365, 366], "49": [338, 351, 352, 366], "94x": 338, "84": [338, 366], "85": [338, 352, 366], "21x": 338, "315": 338, "251": [338, 366], "242": [338, 352, 366], "159": [338, 365], "142": [338, 366], "33": [338, 366], "86": [338, 366], "68": [338, 365, 366], "41": [338, 352, 366], "55": [338, 365, 366], "82x": 338, "amount": [338, 357], "torchprofil": 338, "platinum": [338, 352, 366], "8280": 338, "unstructur": [338, 374], "nbsp": [338, 352, 366], "qnli": 338, "qqp": 338, "mnli": 338, "v1": 338, "tinybert_general_4l_312d": 338, "distilroberta": 338, "cola": 338, "krishna2020": 338, "googl": 338, "wikipedia": 338, "prajjwal1": 338, "approch": 338, "pruneofa": 338, "patternlock": [338, 374], "bhadresh": 338, "savani": 338, "emot": 338, "fac": 338, "mini": [338, 345, 349, 352], "gchhablani": 338, "philschmid": 338, "l6": 338, "h384": 338, "moshew": [338, 349], "80": [338, 345, 352, 366], "1x4": [338, 364], "desigh": 339, "32": [339, 344, 352, 358, 359, 361, 362, 363, 364, 365, 366, 368], "bit": [339, 340, 354, 355, 361, 364, 375], "bfloat": 339, "fetch": [339, 354, 357], "flag": 339, "enable_bf16": 339, "bfloat16": 339, "qlinear": [339, 348], "u8s8": 339, "u8u8": 339, "highli": 339, "suggest": [339, 355], "quick": [340, 343], "p_conf": [340, 374], "reduct": [340, 359, 362], "accommod": 340, "budget": 340, "tradeoff": [340, 358], "dynamic_length_config": 340, "aim": [340, 343, 345, 347], "opportun": 340, "hw": 340, "sw": 340, "satisfi": [341, 351, 360], "success": 341, "recommend": [341, 343, 346, 349, 351, 361, 365], "protobuf": [341, 349], "nightli": 341, "conda": [341, 349], "visual": 341, "studio": 341, "compat": 341, "icelak": 341, "futur": [341, 348, 355, 356, 365], "ipex": [341, 375], "13": [341, 352, 358, 366], "linux": 342, "gcc": 342, "cmake": [342, 344, 353, 365, 368], "repo_path": 342, "mkdir": [342, 344, 353, 365, 368], "dpython_execut": 342, "dne_with_sparselib": [342, 368], "neural_engine_bin": 342, "neural_engine_pi": [342, 346], "cpython": 342, "37m": 342, "x86_64": 342, "gnu": 342, "libkernellib": 342, "libneural_engin": 342, "pure": [342, 356], "certain": [343, 351], "simplifi": [343, 347], "attach": [343, 351], "distilbert_bas": 343, "assum": [343, 351, 357], "command": [343, 344, 348, 369], "repo": [343, 368], "instal": [343, 380], "These": [343, 347, 351, 357, 363], "roughli": [343, 360], "divid": [343, 351, 354, 359, 360, 363, 369], "categori": [343, 345], "dst_shape": [343, 344, 350], "father": 343, "keep_dim": 343, "ax": [343, 362], "come": 343, "rewrit": 343, "_attr": 343, "successfulli": [343, 351], "forget": [343, 347, 350], "reinstal": 343, "enter": 343, "you_work_dir": 343, "noth": [343, 351], "wrong": [343, 351], "anoth": [343, 347, 365], "correctli": 343, "distil_bert_bas": 343, "pattern_mapping_config": 343, "div": [343, 347], "even": [343, 354], "delv": 343, "recogn": [343, 384], "put": [343, 344, 347], "namedtupl": 343, "__call__": 343, "retriev": 343, "actual": [343, 344, 361], "equival": [343, 364], "supported_pattern": 343, "influenc": [343, 347], "arbitrari": 343, "pattern_dict": 343, "new_node_nam": 343, "ret_old_nod": 343, "talk": 343, "denomin": 343, "numer": [343, 375], "stabil": 343, "_set_attr": 343, "ln_node_idx": 343, "meet": [343, 358, 360, 364], "finish": [343, 347, 349], "yourself": [343, 351], "seq": [344, 362], "bert_model": 344, "30522": 344, "1024": [344, 345, 346, 366, 368], "125018112": 344, "slightli": 344, "activ": [344, 348, 349, 354, 358, 359, 360, 363, 368, 375], "throught": 344, "numactl": 344, "bind": 344, "omp_num_thread": 344, "session": 344, "close": 344, "again": [344, 361], "nerual": 344, "cc": 344, "cmakelist": 344, "reus": [344, 360], "engine_integr": 344, "itrex": 344, "cp": 344, "nlp_executor": 344, "neural_engine_exampl": 344, "ne": 344, "root": 344, "ne_root": 344, "project_source_dir": 344, "link": [344, 350, 374], "lib": 344, "runtime_output_directori": 344, "add_execut": 344, "target_include_directori": 344, "boost_inc_dir": 344, "target_link_librari": 344, "cmake_thread_libs_init": 344, "gflag": 344, "dir": 344, "set_target_properti": 344, "analyz": 345, "let": [345, 350, 357, 358], "readm": [345, 348], "run_executor": [345, 349], "model_and_token": [345, 348, 349], "Of": [345, 351, 357], "cours": [345, 351, 357], "proflil": 345, "latanc": 345, "perf": [345, 364, 368, 369], "perfrom": 345, "chrome": 345, "tell": [345, 347, 355, 356], "inst": 345, "pref": 345, "semi": 345, "70": [345, 352], "256x256": [345, 368], "settabl": 345, "256x1024": 345, "1024x256": 345, "gelu_tanh": [345, 350], "add_37": 345, "116": [345, 366], "641": 345, "00": 345, "075": 345, "0375": 345, "comparison": [345, 364], "185": 345, "801": 345, "693": 345, "366": 345, "content": 345, "part1": [345, 350], "modif": 345, "xlsx": 345, "titl": [345, 370], "model_infer": 345, "friendli": [345, 360, 361], "000": 345, "wall": 345, "durat": 345, "17": [345, 352, 358, 366], "138": 345, "iteration4": 345, "726": 345, "phrase": 345, "0m": 345, "perm": [345, 362], "add_284": 345, "028": [345, 366], "044": 345, "reshape_tim": 345, "004m": 345, "forward_tim": 345, "044m": 345, "input_tensor_nam": 345, "matmul_357": 345, "matmul_358": 345, "matmul_346": 345, "input_typ": 345, "f32": [345, 350], "input_shap": [345, 346, 368], "output_tensor_nam": 345, "output_shap": 345, "append_op": 345, "src1_perm": 345, "try": [346, 375], "pictur": [346, 354, 367], "bring": [346, 359, 363, 364], "merg": [346, 351], "off": 346, "model_path": 346, "isa": [346, 353, 355, 360, 363, 364, 365], "int8_model_path": 346, "shape_0": 346, "shape_1": 346, "shape_2": 346, "enlarg": 346, "subsequ": [346, 360, 363], "remark": 346, "micro": [346, 354, 359, 364], "oc": [346, 368], "mk": 346, "kn": 346, "nhwc": 346, "nxhxw": 346, "h": 346, "nk": 346, "km": 346, "mmkmb": 346, "mmxmb": 346, "fulfil": 346, "omp": 346, "higher": [346, 362, 364, 368, 375], "unrol": [346, 357, 359], "know": [346, 358], "disk": [346, 348], "dp": 346, "executionopt": 346, "enable_op_tun": 346, "execution_opt": 346, "engine_dispatch_t": 346, "workspac": 346, "tabl": [346, 356, 364], "row": [346, 357, 358, 360, 364, 374], "rest": [346, 347, 351, 362, 364], "hash": [346, 355], "kernel_config": [346, 368], "kernel_nam": [346, 368], "3025159985633461085": 346, "40": [346, 352], "14124194128933833351": 346, "thing": 346, "affect": [346, 360, 363, 369], "simul": [346, 364, 365], "warmup_it": 346, "num_iter": 346, "dispatch_table_file_root": 346, "file_root": 346, "script": [346, 348, 367], "prevent": 346, "imprecis": 346, "purpos": [347, 351, 355, 360], "realiz": 347, "suppli": [347, 351], "recognit": [347, 351], "embeddings_reshap": 347, "said": 347, "thought": 347, "st": 347, "nd": 347, "copi": [347, 362], "greater": [347, 371, 372], "sent": 347, "written": 347, "phenomenon": 347, "Its": 347, "situat": [347, 361], "nod": 347, "leav": [347, 362, 364, 368], "old_node_index": 347, "_get_pattern_info": 347, "_create_out_pattern": 347, "_replace_pattern": 347, "emitt": 348, "netron": 348, "bash": [348, 349], "prepare_model": [348, 349], "sh": [348, 349, 369], "ptq": 348, "ir_path": 348, "focu": [349, 362, 371], "nc_folder": 349, "deepengin": 349, "distilbert_base_uncased_mrpc": 349, "env": 349, "prepare_dataset": 349, "shell": 349, "tokenizer_dir": 349, "data_dir": 349, "geluoper": 350, "destructor": 350, "operatorconfig": 350, "algorithm_": 350, "eng_": 350, "eltwise_forward": 350, "gelu_p_": 350, "src_m_": 350, "dst_m_": 350, "attrs_map": 350, "operator_conf_": 350, "becuas": 350, "src_shape": 350, "dst_tensor_ptr": 350, "set_shap": 350, "stride": [350, 354], "src_stride": 350, "getstrid": 350, "dst_stride": 350, "desc": [350, 355, 356], "src_md": 350, "dst_md": 350, "part2": 350, "gelu_algorithm": 350, "gelu_erf": 350, "eltwise_gelu_erf": 350, "eltwise_gelu_tanh": 350, "gelu_d": 350, "prop_kind": 350, "primitive_desc": 350, "gelu_pd": 350, "unrefernc": 350, "manag": 350, "strictli": 350, "alia": 350, "src_data": 350, "dst_data": 350, "mutable_data": 350, "data_ptr": 350, "stream": 350, "set_data_handl": 350, "const_cast": 350, "reinterpret_cast": 350, "memory_args_": 350, "dnnl_arg_src": 350, "dnnl_arg_dst": 350, "unref": 350, "unref_tensor": 350, "especi": [350, 364], "int8_lut_optim": 350, "int8_lut_acc_test": 350, "set_dtyp": 350, "register_operator_class": 350, "rule": 351, "recruit": 351, "ln_pattern": 351, "grow": 351, "concis": 351, "intuit": [351, 360], "choos": 351, "prefer": [351, 362], "longer": 351, "ones": 351, "op_type1": 351, "op_type2": 351, "type1": 351, "type2": 351, "elig": 351, "a_node_name_1": 351, "b_node_name_1": 351, "c_node_name_1": 351, "a_node_name_2": 351, "b_node_name_2": 351, "c_node_name_2": 351, "a_node_name_n": 351, "b_node_name_n": 351, "c_node_name_n": 351, "bert_large_model_path": 351, "layer_0": 351, "layer_1": 351, "layer_2": 351, "afterward": 351, "volatil": 351, "incorrect": 351, "outcom": 351, "Or": 351, "exactli": 351, "screen": 351, "occur": [351, 354, 361], "alreadi": 351, "moment": 351, "varianc": [351, 361], "batchnorm": 351, "mul_1": 351, "mul_2": 351, "add_1": 351, "07": [352, 366], "8375c": [352, 366], "aw": [352, 366], "c6i": [352, 366], "12xlarg": [352, 366], "vari": [352, 366], "factor": [352, 366], "www": [352, 366], "batchsiz": 352, "2652": 352, "36": [352, 366], "513": 352, "lt": [352, 366], "50m": 352, "2181": 352, "43": [352, 366], "628": 352, "1719": 352, "91": [352, 366], "75": [352, 366], "1487": [352, 366], "255": [352, 363, 375], "1220": 352, "39": [352, 366], "143": 352, "1304": 352, "46": [352, 366], "066": 352, "1102": [352, 366], "870": 352, "487": 352, "750": 352, "82": [352, 365, 366], "690": [352, 366], "188": 352, "910": [352, 366], "921": [352, 366], "729": 352, "71": [352, 365, 366], "619": 352, "38": [352, 365, 366], "821": [352, 366], "499": 352, "429": [352, 365], "936": [352, 366], "680": 352, "318": [352, 366], "557": 352, "262": 352, "467": 352, "589": 352, "405": 352, "339": 352, "473": 352, "119": [352, 366], "389": 352, "945": [352, 366], "360": 352, "274": 352, "843": 352, "259": [352, 365, 366], "442": 352, "241": 352, "364": 352, "016": [352, 366], "303": 352, "266": 352, "45": [352, 366], "05": [352, 366], "221": 352, "973": 352, "112": [352, 366], "349": 352, "938": [352, 366], "275": [352, 365], "614": 352, "217": 352, "37": [352, 366], "039": 352, "301": 352, "166": 352, "033": 352, "320": 352, "769": 352, "263": 352, "724": [352, 366], "207": 352, "819": [352, 366], "181": 352, "021": 352, "979": [352, 366], "74": [352, 366], "235": 352, "63": [352, 366], "091": 352, "51": [352, 366], "914": [352, 366], "698": [352, 366], "905": [352, 366], "8972": 352, "076": [352, 366], "20m": 352, "7192": 352, "19": [352, 358, 366], "906": 352, "5482": 352, "509": 352, "4808": 352, "952": 352, "3678": 352, "409": 352, "4750": 352, "975": [352, 366], "3647": 352, "867": 352, "2921": 352, "587": [352, 366], "2576": 352, "18": [352, 358, 366], "768": [352, 366], "2131": [352, 366], "913": [352, 366], "2804": 352, "096": 352, "2263": 352, "037": 352, "1938": 352, "756": [352, 366], "1581": 352, "15": [352, 358, 359, 364, 366], "1409": 352, "015": 352, "2116": 352, "113": 352, "1777": 352, "972": [352, 366], "1474": 352, "392": 352, "1278": 352, "1137": 352, "752": 352, "1594": 352, "124": 352, "1347": [352, 366], "1126": 352, "993": [352, 366], "258": 352, "890": [352, 366], "877": [352, 366], "1319": 352, "1086": 352, "931": [352, 366], "545": 352, "833": 352, "332": [352, 366], "747": [352, 366], "141": 352, "1106": [352, 366], "31": [352, 358, 359, 366], "924": 352, "446": 352, "719": 352, "633": 352, "501": 352, "816": 352, "961": 352, "549": 352, "807": 352, "868": [352, 366], "701": [352, 366], "117": 352, "613": 352, "618": 352, "515": 352, "75384": 352, "989": 352, "1m": 352, "55628": 352, "917": 352, "49120": 352, "957": [352, 366], "41598": 352, "39218": 352, "31211": 352, "788": [352, 366], "28399": 352, "848": 352, "24910": 352, "966": 352, "20505": 352, "18575": 352, "865": 352, "25485": 352, "987": 352, "17468": 352, "16771": 352, "971": [352, 366], "16004": 352, "996": [352, 366], "13381": 352, "894": [352, 366], "13990": 352, "863": [352, 366], "13154": 352, "12535": 352, "12102": 352, "998": 352, "8426": [352, 366], "8736": 352, "8282": 352, "967": 352, "6659": 352, "898": [352, 366], "6477": 352, "6290": 352, "974": [352, 366], "8598": 352, "6449": 352, "935": [352, 366], "6263": [352, 366], "965": [352, 366], "6080": 352, "988": 352, "3684": 352, "817": [352, 366], "6246": 352, "978": 352, "6374": 352, "947": [352, 366], "6026": 352, "3300": [352, 366], "926": 352, "3226": 352, "6221": 352, "958": 352, "6322": 352, "6081": 352, "985": [352, 366], "3368": 352, "3264": 352, "distillbert": 352, "15460": 352, "296": 352, "10m": 352, "13129": 352, "363": 352, "11323": 352, "578": [352, 366], "10072": 352, "599": 352, "8689": 352, "7901": 352, "205": [352, 366], "6737": 352, "562": 352, "5440": 352, "904": [352, 366], "4920": 352, "786": [352, 366], "4460": 352, "053": 352, "5280": 352, "179": 352, "4339": 352, "244": [352, 365], "3634": [352, 366], "928": 352, "3255": 352, "211": [352, 366], "2928": 352, "197": [352, 366], "3681": 352, "527": [352, 366], "2965": [352, 366], "106": [352, 366], "2741": 352, "862": [352, 366], "2351": 352, "2150": 352, "282": 352, "2918": 352, "316": 352, "2505": [352, 366], "602": 352, "2010": [352, 366], "995": 352, "1872": 352, "609": [352, 366], "2409": 352, "983": 352, "1993": 352, "013": 352, "1671": [352, 366], "627": 352, "1484": 352, "131": 352, "1342": [352, 366], "1910": 352, "456": [352, 366], "1659": 352, "687": 352, "1293": 352, "245": [352, 366], "1230": 352, "798": 352, "1091": 352, "261": 352, "1627": 352, "908": 352, "1397": 352, "684": 352, "1130": 352, "1081": 352, "353": 352, "982": [352, 366], "187": [352, 365], "manufactur": [352, 366], "amazon": [352, 366], "ec2": [352, 366], "bio": [352, 366], "1021": [352, 366], "microcod": [352, 366], "0xd000331": [352, 366], "irq": [352, 366], "balanc": [352, 366], "xeonplatinum": 352, "90ghz": [352, 366], "9ghz": [352, 366], "5ghz": [352, 366], "thread": 352, "socket": [352, 366], "numa": [352, 366], "turbo": [352, 366], "frequencygovern": [352, 366], "workdir": 353, "dne_with_test": 353, "ON": [353, 368], "ut": [353, 356], "dne_with_sparselib_onli": [353, 368], "dne_with_sparselib_benchmark": [353, 368], "test_spmm_vnni_kernel": 353, "box": 353, "profl": [353, 365], "op_attr": [353, 355, 356, 362], "spmm_desc": 353, "spmm_kern": 353, "data0": 353, "data1": 353, "data2": 353, "data3": 353, "data4": 353, "vnni": [353, 354, 358, 362, 363, 366, 368, 375, 382], "amx": [353, 360, 363, 368, 382], "residu": 353, "avx512": [353, 354, 358, 375], "mha": [353, 382], "avx512f": [353, 362, 368, 382], "spmm": [354, 362, 368], "deeplearn": 354, "multipli": [354, 360, 364, 375], "adopt": [354, 359, 364], "modern": 354, "spatial": [354, 360], "program": [354, 370], "64byte": 354, "organ": 354, "associ": 354, "access": [354, 359, 360], "b1": 354, "b2": 354, "simd": [354, 355, 359], "evenli": 354, "discontinu": 354, "fulli": [354, 363, 364], "worst": 354, "veri": [354, 356, 357, 360], "miss": [354, 364], "frequent": 354, "destin": [354, 359, 362, 368], "l1": 354, "l2": [354, 360, 368], "perhap": 354, "mxk": [354, 368], "bxm": 354, "xk": 354, "bxkxm": 354, "2d": [354, 368], "respons": [354, 360, 361, 363], "frac": [354, 362], "binaryop": 355, "dl": 355, "changeabl": 355, "operand": [355, 359], "horizont": 355, "overhead": [355, 361, 362, 363, 364], "move": 355, "binaryop_injector": 355, "postop": [355, 356, 368], "quit": 355, "eltwise_injector": [355, 356], "escap": [355, 356], "compute_vector": 355, "expos": [355, 356], "arithmet": 355, "brows": 355, "vpaddb": 355, "vaddp": 355, "unlik": 355, "ptr": [355, 356, 365], "static_addr": 355, "addr": 355, "binaryop_alg": 355, "per_channel_qu": 355, "per_channel_dequ": 355, "op_alg": [355, 356], "op_dt": 355, "alg": 355, "set_scal": 355, "set_zp": 355, "binary_injector_init": 355, "set_mask": 355, "reg64": [355, 356], "zmm": [355, 356, 359, 361, 364], "get_addr": 355, "broadcast": [355, 359, 364, 365, 368], "enable_mask": 355, "vector_comput": [355, 356], "bianryop": 355, "comput_vector": 355, "wrapper": 355, "jit_binary_injector": 355, "addr_typ": 355, "jit_gener": [355, 356], "opmask": [355, 356], "mov": [355, 365], "addr_ptr": 355, "zmm_src1": 355, "regexp": 355, "step1": [355, 356, 363], "binary_injector": 355, "step2": [355, 356, 363], "data_param": 355, "param_": [355, 356], "front": 355, "append_loop_len": 355, "zmm_byte_s": 355, "get_data_s": 355, "offset_exp": 355, "bianryop_attr_list": 355, "append_vec": 355, "binary_add": 355, "eltwis": 356, "tradit": 356, "obvious": [356, 357, 361], "useless": 356, "idea": [356, 364, 374], "xbyak": 356, "binari": [356, 363, 368, 382], "algo": 356, "aplha": 356, "sacl": 356, "postop_alg": 356, "int8_lut": 356, "postop_typ": 356, "mathemat": 356, "satur": 356, "round": [356, 375], "unus": 356, "\u03b1x": 356, "\u03b2": 356, "le": 356, "gt": 356, "eng_kind_": 356, "omp_get_max_thread": 356, "omp_get_num_proc": 356, "eltwise_injector_init": 356, "chian": 356, "escape_reg": 356, "escape_eras": 356, "eras": 356, "prepare_t": 356, "zmm_src": 356, "postop_idx": 356, "reg_idx": 356, "step0": 356, "jit_eltwiseop_t": 356, "assign_reg": 356, "eltwiseop_kd_t": 356, "op_desc_": 356, "params_": 356, "remain_task_mask": 356, "scratch_": 356, "r10": 356, "reg_src": 356, "addr_src": 356, "r15": [356, 365], "addr_dst": 356, "r14": [356, 365], "reg_param": 356, "rdi": [356, 365], "remain_element_num": 356, "rsi": 356, "getidx": 356, "alloc": [356, 357, 360], "rcx": 356, "rdx": 356, "rsp": 356, "step3": [356, 363], "preambl": 356, "load_param": 356, "vmovup": [356, 365], "postambl": 356, "fp32_gelu_attr": 356, "bf16_gelu_attr": 356, "push_back": 356, "gen_cas": 356, "data0_desc": 356, "postop_list": 356, "fp32_gelu": [356, 368], "fp32_exp": 356, "mask_mock1": 356, "reg64_mock1": 356, "zmm_mock1": 356, "fp32_exp_attr": 356, "data1_desc": 356, "bf16_gelu": 356, "bf16_exp": [356, 368], "bf16_exp_attr": 356, "dt1op1": 356, "dt2op2": 356, "hase": 356, "get_true_data": 356, "rf_data": 356, "your_kernel_log": 356, "apply_postop_list": 356, "unit_test_util": 356, "articl": [357, 375], "gpu": 357, "opencl": 357, "snippet": 357, "unintellig": 357, "understand": [357, 360], "__kernel": 357, "naive_gemm": 357, "__global": 357, "globalrow": 357, "get_global_id": 357, "globalcol": 357, "col": [357, 358, 361, 363], "over": [357, 359, 362], "acc": [357, 368, 369], "0f": 357, "mxn": [357, 363, 368], "2xk": 357, "redund": [357, 374], "asub": 357, "bsub": 357, "tile_gemm": 357, "get_local_id": 357, "get_group_id": 357, "__local": 357, "initialis": 357, "accumul": [357, 362, 364], "numtil": 357, "tiledrow": 357, "tiledcol": 357, "synchronis": 357, "barrier": 357, "clk_local_mem_f": 357, "full": [357, 370, 375], "white": 357, "figur": [357, 360, 361, 362, 364, 367], "half": [357, 363], "correspondingli": 357, "increas": 357, "workload": [357, 362], "localmemori": 357, "tight": 357, "ll": 357, "twice": [357, 363], "ping": 357, "pong": 357, "tidm": 357, "tidn": 357, "offsetm": 357, "offset": [357, 361, 362], "offsetn": 357, "areg": 357, "breg": 357, "wm": 357, "wn": 357, "lpta": 357, "tid": 357, "mod2": 357, "div2": 357, "tiledindex": 357, "indexa": 357, "indexb": 357, "veca": 357, "vecb": 357, "tt": 357, "pragma": 357, "tdpbf16p": 358, "16x32": 358, "32x16": 358, "FOR": [358, 359, 364], "TO": 358, "colsb": 358, "byte": [358, 364], "endfor": [358, 359, 364], "write_row_and_zero": 358, "zero_upper_row": 358, "zero_tileconfig_start": 358, "layout": [358, 361, 362, 363], "successor": 358, "1x16": [358, 364], "concaten": [358, 364, 368], "intrins": 358, "tileloadd": 358, "nonzero": 358, "vmovdqu32": 358, "consum": 358, "altern": [358, 364], "lot": 358, "disast": 358, "16x1": [358, 362], "greatli": [358, 363], "impact": 358, "fly": 358, "__m512i": 358, "_mm512_set_epi16": 358, "29": [358, 366], "27": [358, 366], "26": [358, 365, 366], "25": [358, 366, 368], "22": [358, 366], "21": [358, 366], "__m256i": 358, "lo": 358, "_mm256_loadu_epi": 358, "li": 358, "vec": 358, "_mm512_inserti32x8": 358, "_mm512_castsi256_si512": 358, "_mm512_permutexvar_epi16": 358, "_mm512_storeu_epi32": 358, "vfmadd": 359, "vfmadd231p": [359, 365], "degre": 359, "parallel": [359, 360, 361, 364, 368], "conting": 359, "bsc": 359, "variant": 359, "bsr": 359, "openmp": 359, "thu": [359, 375], "relief": 359, "bottleneck": [359, 361], "microkernel": 359, "peripher": 359, "implicit": 359, "technologi": 360, "among": [360, 363], "satisfactori": 360, "inevit": 360, "solv": [360, 361, 375], "facilit": [360, 363], "At": [360, 361, 363], "flexibl": 360, "divis": 360, "tdpbssd": 360, "tile_k": 360, "formula": 360, "max_tile_k": 360, "back": [360, 361, 362, 363], "extra": 360, "hope": 360, "large_wei_threshold": 360, "16xpad_n": 360, "buffer": [360, 361, 363], "tilestor": 360, "pseudo": 360, "tile_m": [360, 368], "16xn": 360, "dp_tile_n": 360, "k_dim_dp": 360, "write_tile_to_tmp_buf": 360, "dequantize_tile_on_tmp_buf": 360, "calculate_scale_on_tmp_buf": 360, "write_back_scal": 360, "quant_tile_n": 360, "quantize_on_tmp_buf": 360, "write_tile_to_dst": 360, "per_channel_dynamic_quant": 360, "s8s8bf16": 360, "desid": 360, "du": 360, "principl": 360, "possibl": 360, "premis": 360, "rate": [360, 361], "therebi": 360, "feel": [360, 368], "benefit": [360, 364, 375], "suitabl": 360, "chart": 360, "naiv": 361, "solut": [361, 364], "gap": 361, "layernrom": 361, "3d": [361, 382], "poor": 361, "fewer": 361, "wast": 361, "inconsist": 361, "scene": 361, "quarter": 361, "depict": 361, "protocol": 361, "bandwidth": [361, 363, 375], "gain": [361, 375], "brought": [361, 375], "majotr": 361, "layternorm": 361, "encapsul": 361, "ba": [361, 365, 368], "discret": 361, "append": [361, 368, 369], "overal": 361, "p2031": [362, 368], "2013": 362, "noperm": [362, 368], "p1302": [362, 368], "p2013": [362, 368], "equat": [362, 375], "dot": [362, 375], "rm": 362, "q": [362, 363], "v": [362, 363], "qk": 362, "textunderscor": 362, "nativ": 362, "sparelib": 362, "axis": 362, "conceptu": 362, "head_nun": 362, "perm2031": 362, "perm2013": 362, "perm1302": 362, "concept": [362, 364], "lh": 362, "float32": [362, 375], "illustr": 362, "inner": 362, "16x16": 362, "drawn": 362, "lighter": 362, "cell": [362, 364], "respectfulli": 362, "vnni_noperm_p2013_p1302": 362, "transpose_4b_8x8": 362, "legend": 362, "explan": 362, "contigu": 362, "ellipsi": 362, "thinner": 362, "border": 362, "bolder": 362, "color": [362, 364], "16x32x16": 362, "lead": [362, 364], "suboptim": 362, "piec": 362, "turn": 362, "abl": [362, 375], "boost": 362, "twofold": 362, "unifi": 362, "roll": 362, "logic": [363, 365], "worth": 363, "clear": 363, "fact": [363, 375], "With": [363, 375], "spr": 363, "latter": 363, "2nd": 363, "clx": 363, "4x16": [363, 364], "launch": 363, "prior": 363, "iteraion": 363, "polynomi": 363, "essenti": 363, "incom": 363, "far": 363, "four": 364, "adjac": 364, "unsign": [364, 368], "sign": [364, 375], "tmp1": 364, "zeroextend16": 364, "signextend16": 364, "tmp2": 364, "tmp3": 364, "tmp4": 364, "dword": [364, 365], "transposit": 364, "discuss": 364, "typic": 364, "sai": 364, "4x4": 364, "pick": 364, "mxkxn": 364, "problem": [364, 368], "densiti": 364, "fma": 364, "bubbl": 364, "16x4": 364, "highlight": 364, "4x": 364, "talent": 364, "smart": 364, "gui": [364, 365], "swizzl": 364, "workaround": 364, "unfortun": 364, "difficulti": 364, "bad": 364, "cost": 364, "2x1": 364, "conclus": 364, "against": 364, "brief": 365, "sparse_lib_verbos": 365, "sparselib_verbos": 365, "nthr": 365, "224": [365, 366], "exec": 365, "shape_256_256_128": 365, "4658": [365, 366], "56982": 365, "itt": 365, "dne_with_sparselib_vtun": 365, "opt": 365, "latest": [365, 376], "manual": 365, "dcmake_vtune_hom": 365, "sparse_lib_vtun": 365, "ssh": 365, "analys": 365, "verifi": 365, "sparse_lib_dump": 365, "xed64": 365, "click": 365, "xdi": 365, "push": 365, "53": [365, 366], "rbx": 365, "rbp": 365, "4154": 365, "r12": 365, "4155": 365, "r13": 365, "4156": 365, "4157": 365, "dataxf": 365, "bd00040000": 365, "ebp": 365, "0x400": 365, "4c8b3f": 365, "qword": 365, "4c8b7708": 365, "0x8": 365, "4c8b6f10": 365, "0x10": 365, "1a": 365, "avx512evex": 365, "62f17d48efc0": 365, "vpxord": 365, "zmm0": 365, "62f15d48efe4": 365, "zmm4": 365, "62513d48efc0": 365, "zmm8": 365, "2c": 365, "62511d48efe4": 365, "zmm12": 365, "62f17548efc9": 365, "zmm1": 365, "62f15548efe": 365, "zmm5": 365, "3e": 365, "62513548efc9": 365, "zmm9": 365, "62511548efe": 365, "zmm13": 365, "4a": 365, "62f16d48efd2": 365, "zmm2": 365, "62f14d48eff6": 365, "zmm6": 365, "62512d48efd2": 365, "zmm10": 365, "5c": 365, "62510d48eff6": 365, "zmm14": 365, "62": [365, 366], "62c17c481006": 365, "zmm16": 365, "zmmword": 365, "62c17c48104e01": 365, "zmm17": 365, "0x40": 365, "6f": 365, "62c17c48105602": 365, "zmm18": 365, "0x80": 365, "62427d48183f": 365, "vbroadcastss": 365, "zmm31": 365, "7c": 365, "vfma": 365, "62927d40b8c7": 365, "62927540b8cf": 365, "62926d40b8d7": 365, "8e": 365, "62427d48187f04": 365, "95": [365, 366], "62927d40b8e7": 365, "9b": 365, "62927540b8ef": 365, "a1": 365, "62926d40b8f7": 365, "a7": 365, "62427d48187f08": 365, "0x20": 365, "ae": 365, "62127d40b8c7": 365, "b4": 365, "62127540b8cf": 365, "62126d40b8d7": 365, "c0": 365, "62427d48187f0c": 365, "0x30": 365, "c7": 365, "62127d40b8e7": 365, "62127540b8ef": 365, "62126d40b8f7": 365, "d9": 365, "62c17c48104603": 365, "0xc0": 365, "e0": 365, "62c17c48104e04": 365, "0x100": 365, "e7": 365, "62c17c48105605": 365, "0x140": 365, "ee": 365, "62427d48187f01": 365, "0x4": 365, "f5": 365, "fb": 365, "101": 365, "107": 365, "62427d48187f05": 365, "0x14": 365, "10e": 365, "114": 365, "11a": 365, "62427d48187f09": 365, "0x24": 365, "12d": 365, "133": 365, "139": 365, "62427d48187f0d": 365, "0x34": 365, "140": 365, "146": 365, "14c": 365, "152": 365, "62c17c48104606": 365, "0x180": 365, "62c17c48104e07": 365, "0x1c0": 365, "62c17c48105608": 365, "0x200": 365, "167": [365, 366], "62427d48187f02": 365, "16e": 365, "174": 365, "17a": 365, "180": 365, "62427d48187f06": 365, "0x18": 365, "18d": 365, "193": 365, "199": 365, "62427d48187f0a": 365, "0x28": 365, "1a0": 365, "1a6": 365, "1ac": 365, "1b2": 365, "62427d48187f0e": 365, "0x38": 365, "1b9": 365, "1bf": 365, "1c5": 365, "1cb": 365, "62c17c48104609": 365, "0x240": 365, "1d2": 365, "62c17c48104e0a": 365, "0x280": 365, "1d9": 365, "62c17c4810560b": 365, "0x2c0": 365, "1e0": 365, "62427d48187f03": 365, "0xc": 365, "1e7": 365, "1ed": 365, "1f3": 365, "1f9": 365, "62427d48187f07": 365, "0x1c": 365, "200": 365, "206": 365, "20c": 365, "212": 365, "62427d48187f0b": 365, "0x2c": 365, "219": [365, 366], "21f": 365, "225": 365, "22b": 365, "62427d48187f0f": 365, "0x3c": 365, "232": [365, 366], "238": 365, "23e": 365, "62d17c48114500": 365, "24b": 365, "62d17c48116503": 365, "62517c48114506": 365, "62517c48116509": 365, "260": 365, "62d17c48114d01": 365, "267": 365, "62d17c48116d04": 365, "26e": 365, "62517c48114d07": 365, "62517c48116d0a": 365, "27c": 365, "62d17c48115502": 365, "283": 365, "62d17c48117505": 365, "28a": 365, "62517c48115508": 365, "291": 365, "62517c4811750b": 365, "298": [365, 366], "pop": 365, "415f": 365, "29a": 365, "415e": 365, "29c": 365, "415d": 365, "29e": 365, "415c": 365, "2a0": 365, "5d": 365, "2a1": 365, "5b": 365, "2a2": 365, "avx": 365, "c5f877": 365, "vzeroupp": 365, "2a5": 365, "xed3": 365, "stat": 365, "cycl": 365, "29220": 365, "236418": 365, "118": 365, "2003": 365, "54": [365, 366], "00348609": 366, "601": 366, "00310676": 366, "675": 366, "00261406": 366, "802": 366, "00216633": 366, "968": 366, "068": 366, "00164658": 366, "1273": 366, "0112255": 366, "284": 366, "00947462": 366, "885": 366, "377": 366, "00764146": 366, "1097": 366, "78": 366, "0058452": 366, "1435": 366, "00407149": 366, "2060": 366, "0127448": 366, "658": 366, "198": 366, "0111132": 366, "754": 366, "835": 366, "00940157": 366, "892": 366, "00760217": 366, "1103": 366, "0054935": 366, "1527": 366, "044202": 366, "759": 366, "0364227": 366, "0292454": 366, "1147": 366, "0223472": 366, "1501": 366, "0149058": 366, "2251": 366, "216338": 366, "620": 366, "408": 366, "179593": 366, "345": 366, "135054": 366, "806": 366, "0946983": 366, "1417": 366, "0609701": 366, "2201": 366, "190508": 366, "704": 366, "526": 366, "159566": 366, "841": 366, "130863": 366, "1025": 366, "103927": 366, "1291": 366, "0739962": 366, "1813": 366, "0250395": 366, "753": 366, "784": 366, "0210726": 366, "895": 366, "682": 366, "0170987": 366, "0130778": 366, "1443": 366, "00923343": 366, "2044": 366, "3072": 366, "112882": 366, "668": 366, "818": 366, "0879386": 366, "858": 366, "525": 366, "068835": 366, "1096": 366, "79": 366, "0487342": 366, "1549": 366, "0317559": 366, "2377": 366, "109308": 366, "679": 366, "0922471": 366, "805": 366, "638": 366, "0759107": 366, "0558945": 366, "1329": 366, "61": 366, "0358752": 366, "2071": 366, "57": 366, "00565044": 366, "742": 366, "297": 366, "00503604": 366, "832": 366, "00447544": 366, "937": 366, "182": 366, "00368479": 366, "1138": 366, "00270954": 366, "1547": 366, "0183481": 366, "386": 366, "0154121": 366, "1088": 366, "0125696": 366, "1334": 366, "00959948": 366, "1747": 366, "72": 366, "00677631": 366, "2475": 366, "0206321": 366, "813": 366, "162": 366, "0184267": 366, "483": 366, "0164699": 366, "1018": 366, "66": 366, "0135801": 366, "1235": 366, "010552": 366, "1589": 366, "0721208": 366, "930": 366, "506": 366, "059613": 366, "1125": 366, "0483781": 366, "1387": 366, "0366748": 366, "1829": 366, "83": 366, "0248571": 366, "2699": 366, "376539": 366, "712": 366, "902": 366, "31929": 366, "840": 366, "727": 366, "261265": 366, "1027": 366, "193579": 366, "1386": 366, "118429": 366, "2266": 366, "309195": 366, "177": 366, "256619": 366, "1046": 366, "213454": 366, "1257": 366, "165192": 366, "1624": 366, "118402": 366, "2267": 366, "0402931": 366, "855": 366, "0341169": 366, "0275282": 366, "1371": 366, "0211298": 366, "1786": 366, "0150693": 366, "218765": 366, "215": 366, "180921": 366, "834": 366, "592": 366, "142778": 366, "1057": 366, "097692": 366, "1545": 366, "0620034": 366, "2435": 366, "174101": 366, "853": 366, "73": 366, "148369": 366, "1001": 366, "123554": 366, "1203": 366, "0923655": 366, "1609": 366, "0591283": 366, "2513": 366, "0074474": 366, "844": 366, "00657187": 366, "00570175": 366, "00483104": 366, "1302": 366, "00367406": 366, "1712": 366, "0247063": 366, "0207462": 366, "1213": 366, "03": 366, "0169214": 366, "0129936": 366, "1936": 366, "0090376": 366, "2784": 366, "0275881": 366, "912": 366, "0240415": 366, "77": 366, "0207876": 366, "1210": 366, "0177873": 366, "1414": 366, "0140129": 366, "1795": 366, "0994565": 366, "1012": 366, "0819725": 366, "1228": 366, "0660571": 366, "1523": 366, "0497077": 366, "2025": 366, "0341912": 366, "2944": 366, "500698": 366, "804": 366, "184": 366, "420619": 366, "287": 366, "337529": 366, "1192": 366, "94": 366, "251221": 366, "1602": 366, "158668": 366, "2537": 366, "412912": 366, "155": 366, "346369": 366, "1162": 366, "2831": 366, "1422": 366, "220585": 366, "1825": 366, "156168": 366, "2578": 366, "0538395": 366, "1051": 366, "0455066": 366, "1244": 366, "036978": 366, "1531": 366, "028483": 366, "1987": 366, "0200457": 366, "2824": 366, "283445": 366, "799": 366, "069": 366, "236101": 366, "959": 366, "302": 366, "188745": 366, "1199": 366, "135532": 366, "0845544": 366, "2678": 366, "227976": 366, "977": 366, "19463": 366, "1145": 366, "161251": 366, "1382": 366, "65": 366, "123585": 366, "1804": 366, "0840322": 366, "2653": 366, "00940534": 366, "891": 366, "00821985": 366, "1020": 366, "00701343": 366, "1196": 366, "08": 366, "00579899": 366, "1446": 366, "00464705": 366, "1805": 366, "0336342": 366, "997": 366, "629": 366, "0276086": 366, "1215": 366, "0224431": 366, "1495": 366, "09": 366, "0170807": 366, "1964": 366, "0117535": 366, "2854": 366, "0358603": 366, "0310083": 366, "1082": 366, "0260486": 366, "1288": 366, "0215163": 366, "1559": 366, "0170105": 366, "1972": 366, "133295": 366, "1006": 366, "92": 366, "111186": 366, "1207": 366, "0881114": 366, "0665519": 366, "2016": 366, "0454416": 366, "2953": 366, "611718": 366, "645": 366, "533329": 366, "430288": 366, "1247": 366, "307141": 366, "198987": 366, "2698": 366, "02": [366, 371], "556249": 366, "163": 366, "462737": 366, "1160": 366, "37537": 366, "1430": 366, "28321": 366, "1895": 366, "203901": 366, "2633": 366, "0716356": 366, "1053": 366, "0603517": 366, "1250": 366, "0490096": 366, "1540": 366, "0375683": 366, "2009": 366, "0267483": 366, "2822": 366, "3572": 366, "845": 366, "437": 366, "299561": 366, "1008": 366, "228752": 366, "1320": 366, "165648": 366, "1823": 366, "105656": 366, "2858": 366, "298907": 366, "994": 366, "529": 366, "255598": 366, "1163": 366, "20824": 366, "1427": 366, "159911": 366, "1858": 366, "111211": 366, "2673": 366, "0152997": 366, "685": 366, "358": 366, "0131446": 366, "797": 366, "0109669": 366, "956": 366, "132": 366, "00921101": 366, "00755406": 366, "1388": 366, "0553082": 366, "758": 366, "351": 366, "0458481": 366, "826": 366, "0367258": 366, "1142": 366, "06": 366, "027535": 366, "018464": 366, "2271": 366, "0597882": 366, "0510217": 366, "822": 366, "062": 366, "0421644": 366, "0333436": 366, "0296385": 366, "1415": 366, "22241": 366, "337": 366, "18324": 366, "915": 366, "145322": 366, "1154": 366, "1083": 366, "0728843": 366, "2301": 366, "11793": 366, "600": 366, "929398": 366, "722": 366, "720963": 366, "823": 366, "510039": 366, "1315": 366, "336519": 366, "1994": 366, "909941": 366, "737": 366, "508": 366, "753487": 366, "644": 366, "606477": 366, "459915": 366, "1459": 366, "303455": 366, "2211": 366, "123429": 366, "764": 366, "586": 366, "103035": 366, "923": 366, "0825026": 366, "1143": 366, "0625579": 366, "1508": 366, "0426942": 366, "2210": 366, "60813": 366, "734": 366, "483053": 366, "781": 366, "462": 366, "357348": 366, "1056": 366, "256715": 366, "1470": 366, "169119": 366, "2232": 366, "503341": 366, "738": 366, "42134": 366, "881": 366, "342843": 366, "255199": 366, "1456": 366, "174091": 366, "2134": 366, "0142667": 366, "0123966": 366, "1015": 366, "0105865": 366, "1188": 366, "00860835": 366, "1461": 366, "00655363": 366, "1919": 366, "0532543": 366, "0447548": 366, "1124": 366, "0348388": 366, "1444": 366, "0266886": 366, "1885": 366, "0177431": 366, "2836": 366, "69": 366, "0549107": 366, "916": 366, "608": 366, "0475549": 366, "1058": 366, "0401657": 366, "1253": 366, "0326952": 366, "1539": 366, "025032": 366, "220947": 366, "911": 366, "178324": 366, "1128": 366, "137361": 366, "1465": 366, "103126": 366, "1952": 366, "0701429": 366, "2870": 366, "06648": 366, "755": 366, "893959": 366, "900": 366, "831": 366, "718893": 366, "1120": 366, "537405": 366, "1498": 366, "280686": 366, "2869": 366, "902588": 366, "730678": 366, "582871": 366, "1381": 366, "444133": 366, "298489": 366, "2697": 366, "581": 366, "0955952": 366, "1184": 366, "078109": 366, "1449": 366, "0596185": 366, "1899": 366, "0414047": 366, "2735": 366, "596568": 366, "497127": 366, "396634": 366, "286973": 366, "1578": 366, "167473": 366, "2704": 366, "472466": 366, "943": 366, "787": 366, "391055": 366, "1140": 366, "319865": 366, "1394": 366, "247491": 366, "1801": 366, "169874": 366, "2624": 366, "93": 366, "0213786": 366, "686": 366, "67": 366, "018228": 366, "0152068": 366, "0120525": 366, "1218": 366, "0103961": 366, "1412": 366, "0771592": 366, "761": 366, "0642402": 366, "074": 366, "0514668": 366, "0387886": 366, "1513": 366, "0256871": 366, "2285": 366, "0836219": 366, "702": 366, "0712915": 366, "664": 366, "0589148": 366, "697": 366, "0484067": 366, "0411331": 366, "311691": 366, "569": 366, "256635": 366, "204973": 366, "153086": 366, "1534": 366, "101206": 366, "2320": 366, "59625": 366, "588": 366, "583": 366, "33246": 366, "705": 366, "03849": 366, "703": 366, "738939": 366, "1271": 366, "480308": 366, "1956": 366, "26056": 366, "745": 366, "324": 366, "04874": 366, "842936": 366, "1114": 366, "59": 366, "635554": 366, "1478": 366, "42145": 366, "2229": 366, "174215": 366, "375": 366, "145836": 366, "116701": 366, "1132": 366, "0876727": 366, "1506": 366, "0595001": 366, "2220": 366, "883258": 366, "598": 366, "333": 366, "711146": 366, "743": 366, "543634": 366, "129": 366, "402406": 366, "1313": 366, "266945": 366, "1979": 366, "70404": 366, "592043": 366, "878": 366, "695": 366, "475444": 366, "1094": 366, "358932": 366, "240739": 366, "2160": 366, "0184384": 366, "909": 366, "907": 366, "0158714": 366, "013504": 366, "1242": 366, "0109927": 366, "1526": 366, "00826017": 366, "2031": 366, "061272": 366, "1095": 366, "0609618": 366, "1100": 366, "0467291": 366, "1436": 366, "0340362": 366, "1971": 366, "0231282": 366, "2901": 366, "0717247": 366, "0616923": 366, "1087": 366, "0521595": 366, "1286": 366, "0423267": 366, "1585": 366, "0321109": 366, "2089": 366, "286461": 366, "242512": 366, "181783": 366, "1476": 366, "139021": 366, "1930": 366, "0870121": 366, "3085": 366, "36322": 366, "652": 366, "08991": 366, "880185": 366, "1219": 366, "694533": 366, "366328": 366, "2931": 366, "15748": 366, "927": 366, "937824": 366, "1144": 366, "745357": 366, "1440": 366, "558061": 366, "1924": 366, "391387": 366, "2743": 366, "157349": 366, "616": 366, "129806": 366, "103083": 366, "1464": 366, "0784417": 366, "053639": 366, "2815": 366, "767569": 366, "874": 366, "641585": 366, "941": 366, "387": 366, "488558": 366, "1236": 366, "355651": 366, "1698": 366, "230945": 366, "2615": 366, "611059": 366, "514108": 366, "1156": 366, "416571": 366, "318094": 366, "1869": 366, "225023": 366, "2642": 366, "0375093": 366, "564": 366, "0317602": 366, "0261888": 366, "1281": 366, "0211151": 366, "0158951": 366, "2110": 366, "141333": 366, "949": 366, "133647": 366, "1004": 366, "0999998": 366, "0710327": 366, "1889": 366, "52": 366, "0429916": 366, "3121": 366, "147474": 366, "125344": 366, "1070": 366, "104294": 366, "0849766": 366, "1579": 366, "0624729": 366, "2148": 366, "701639": 366, "765": 366, "534615": 366, "359791": 366, "1492": 366, "2612": 366, "2055": 366, "183193": 366, "2930": 366, "92067": 366, "735": 366, "271": 366, "4402": 366, "880": 366, "046": 366, "69186": 366, "1269": 366, "17436": 366, "1828": 366, "880179": 366, "2439": 366, "62123": 366, "264": 366, "14905": 366, "999": 366, "64253": 366, "1307": 366, "1413": 366, "1881": 366, "771439": 366, "2783": 366, "369429": 366, "451": 366, "288236": 366, "1047": 366, "209526": 366, "1441": 366, "148115": 366, "2038": 366, "106089": 366, "2846": 366, "53204": 366, "465": 366, "28593": 366, "939": 366, "368": 366, "0852": 366, "1113": 366, "685382": 366, "1762": 366, "408357": 366, "2958": 366, "4521": 366, "13466": 366, "853916": 366, "1392": 366, "642672": 366, "1850": 366, "446442": 366, "2663": 366, "0574189": 366, "876": 366, "0460811": 366, "1092": 366, "0389357": 366, "1292": 366, "031279": 366, "0234498": 366, "2146": 366, "204966": 366, "17364": 366, "1159": 366, "141097": 366, "1426": 366, "105192": 366, "1913": 366, "0677766": 366, "2970": 366, "21269": 366, "946": 366, "573": 366, "191564": 366, "1050": 366, "156368": 366, "1287": 366, "1565": 366, "0933565": 366, "2156": 366, "84983": 366, "789777": 366, "1019": 366, "598168": 366, "1346": 366, "433492": 366, "1857": 366, "269504": 366, "2988": 366, "74845": 366, "859": 366, "348": 366, "96945": 366, "811": 366, "505": 366, "77082": 366, "76407": 366, "1826": 366, "09719": 366, "2935": 366, "73162": 366, "00241": 366, "1072": 366, "39024": 366, "77317": 366, "1816": 366, "19536": 366, "2694": 366, "517278": 366, "875": 366, "708": 366, "382208": 366, "1185": 366, "317837": 366, "1425": 366, "233231": 366, "1942": 366, "152925": 366, "2962": 366, "44309": 366, "741": 366, "62409": 366, "1115": 366, "64963": 366, "1098": 366, "03923": 366, "1743": 366, "625089": 366, "2898": 366, "07006": 366, "861": 366, "632": 366, "64247": 366, "1085": 366, "33386": 366, "1337": 366, "994935": 366, "1792": 366, "68383": 366, "2608": 366, "0713578": 366, "940": 366, "0612457": 366, "0516788": 366, "1298": 366, "0414834": 366, "1617": 366, "0309886": 366, "2165": 366, "282241": 366, "951": 366, "085": 366, "238855": 366, "1123": 366, "193713": 366, "1385": 366, "146781": 366, "81": 366, "0938959": 366, "286141": 366, "122": 366, "257138": 366, "1043": 366, "214208": 366, "167575": 366, "1601": 366, "124072": 366, "2163": 366, "21431": 366, "884": 366, "237": 366, "955251": 366, "775294": 366, "1384": 366, "63282": 366, "1696": 366, "37333": 366, "2876": 366, "87335": 366, "317": 366, "65059": 366, "1176": 366, "94733": 366, "1457": 366, "62241": 366, "1637": 366, "47752": 366, "2906": 366, "75786": 366, "83024": 366, "889": 366, "87429": 366, "1108": 366, "87685": 366, "75328": 366, "2449": 366, "718776": 366, "289": 366, "561317": 366, "1076": 366, "429166": 366, "1407": 366, "317204": 366, "1904": 366, "208555": 366, "2896": 366, "94057": 366, "30458": 366, "1048": 366, "6702": 366, "25799": 366, "1920": 366, "84121": 366, "2871": 366, "34423": 366, "711": 366, "77444": 366, "857": 366, "10049": 366, "52509": 366, "926038": 366, "2568": 366, "00203027": 366, "1032": 366, "00198061": 366, "00179382": 366, "1169": 366, "00163713": 366, "1280": [366, 368], "00171023": 366, "1226": 366, "00395783": 366, "2119": 366, "00340452": 366, "2463": 366, "00308582": 366, "2718": 366, "00292684": 366, "2866": 366, "00217889": 366, "3849": 366, "00437142": 366, "1918": 366, "00418212": 366, "2005": 366, "00344785": 366, "2433": 366, "00291005": 366, "2882": 366, "00293671": 366, "2856": 366, "0120946": 366, "2774": 366, "0103377": 366, "3245": 366, "00850778": 366, "3943": 366, "00659512": 366, "5087": 366, "00484669": 366, "6923": 366, "0524509": 366, "2558": 366, "0428737": 366, "3130": 366, "0323642": 366, "4147": 366, "0231199": 366, "5805": 366, "0152199": 366, "8818": 366, "0451228": 366, "2974": 366, "0373823": 366, "3590": 366, "0302746": 366, "4433": 366, "023182": 366, "5789": 366, "0161696": 366, "8300": 366, "00731429": 366, "2580": 366, "00633179": 366, "2980": 366, "00535855": 366, "3522": 366, "00449335": 366, "4200": 366, "00341811": 366, "5521": 366, "0270028": 366, "2795": 366, "02197": 366, "3436": 366, "0177477": 366, "4253": 366, "0131335": 366, "5748": 366, "00897444": 366, "8412": 366, "0257188": 366, "2889": 366, "0218969": 366, "3393": 366, "0180933": 366, "4107": 366, "013742": 366, "5408": 366, "00992419": 366, "7488": 366, "00289114": 366, "1450": 366, "00245821": 366, "00252331": 366, "1662": 366, "00226557": 366, "1851": 366, "00180316": 366, "2326": 366, "00578904": 366, "00500361": 366, "3353": 366, "0042401": 366, "3956": 366, "00350486": 366, "4786": 366, "00297233": 366, "5644": 366, "00693265": 366, "2420": 366, "00593063": 366, "2828": 366, "00526697": 366, "3185": 366, "00480098": 366, "3494": 366, "00385131": 366, "4356": 366, "0193516": 366, "3467": 366, "0166254": 366, "4036": 366, "0132869": 366, "5050": 366, "0106293": 366, "6313": 366, "00759056": 366, "8841": 366, "0977256": 366, "2746": 366, "0813271": 366, "0656322": 366, "4090": 366, "0476463": 366, "5633": 366, "0295362": 366, "9088": 366, "0736189": 366, "3646": 366, "0603789": 366, "4445": 366, "0489938": 366, "5478": 366, "036992": 366, "7256": 366, "0258802": 366, "10372": 366, "0116589": 366, "3237": 366, "00979113": 366, "3855": 366, "00811779": 366, "4650": 366, "00667871": 366, "5652": 366, "00493861": 366, "7643": 366, "0537768": 366, "2807": 366, "0459135": 366, "3288": 366, "03588": 366, "4208": 366, "0252901": 366, "5970": 366, "0167419": 366, "9018": 366, "0407051": 366, "3651": 366, "0342908": 366, "4334": 366, "028568": 366, "5202": 366, "0218703": 366, "6796": 366, "016186": 366, "9183": 366, "0031551": 366, "0029515": 366, "00265488": 366, "2369": 366, "00243581": 366, "2582": 366, "00223598": 366, "2813": 366, "00745008": 366, "3377": 366, "00656544": 366, "3833": 366, "00542595": 366, "4638": 366, "00425647": 366, "5912": 366, "0034657": 366, "7261": 366, "00835933": 366, "3010": 366, "00741956": 366, "3391": 366, "0065352": 366, "3850": 366, "00555918": 366, "4526": 366, "00488058": 366, "5156": 366, "0257262": 366, "3912": 366, "0217468": 366, "4628": 366, "0176505": 366, "5703": 366, "0137122": 366, "7341": 366, "00980134": 366, "10270": 366, "124749": 366, "3227": 366, "103385": 366, "3894": 366, "0832193": 366, "4838": 366, "0626013": 366, "6432": 366, "0397992": 366, "10117": 366, "101071": 366, "3983": 366, "0825665": 366, "4876": 366, "0668515": 366, "6023": 366, "0487727": 366, "8255": 366, "0354192": 366, "11368": 366, "0147718": 366, "0127799": 366, "4430": 366, "0105324": 366, "5376": 366, "00869796": 366, "6509": 366, "00643591": 366, "8798": 366, "0698868": 366, "3240": 366, "0588583": 366, "3848": 366, "0473412": 366, "4784": 366, "0346142": 366, "6543": 366, "0222947": 366, "10159": 366, "0538146": 366, "4142": 366, "0454583": 366, "4904": 366, "0373579": 366, "5968": 366, "0291396": 366, "7651": 366, "0208901": 366, "10672": 366, "00393589": 366, "00332212": 366, "2525": 366, "00317296": 366, "2643": 366, "00269113": 366, "3117": 366, "00235812": 366, "3557": 366, "009382": 366, "3576": 366, "00828943": 366, "4047": 366, "00672351": 366, "4990": 366, "00514768": 366, "6518": 366, "0040612": 366, "8262": 366, "0107115": 366, "3132": 366, "00920252": 366, "00794258": 366, "4224": 366, "00698123": 366, "4806": 366, "00561026": 366, "5980": 366, "0345669": 366, "3882": 366, "0289719": 366, "4632": 366, "0232584": 366, "5770": 366, "0179766": 366, "7466": 366, "0128144": 366, "10474": 366, "158162": 366, "3394": 366, "132552": 366, "4050": 366, "101844": 366, "5271": 366, "080936": 366, "6633": 366, "0530097": 366, "10127": 366, "135839": 366, "3952": 366, "11116": 366, "4829": 366, "0899513": 366, "0633017": 366, "8481": 366, "0467462": 366, "11484": 366, "0192628": 366, "3919": 366, "0164591": 366, "4586": 366, "0135348": 366, "5578": 366, "0107712": 366, "7009": 366, "00761117": 366, "9919": 366, "0854876": 366, "3532": 366, "0747271": 366, "4041": 366, "0604759": 366, "4993": 366, "0417964": 366, "7225": 366, "0275467": 366, "10962": 366, "0713821": 366, "4164": 366, "0600772": 366, "4948": 366, "0496581": 366, "5986": 366, "0381385": 366, "7794": 366, "027025": 366, "10999": 366, "00502473": 366, "2086": 366, "00451855": 366, "00396819": 366, "00338962": 366, "3093": 366, "00315343": 366, "3325": 366, "0147951": 366, "2834": 366, "0126225": 366, "3322": 366, "010269": 366, "4084": 366, "00785878": 366, "5337": 366, "00570293": 366, "7354": 366, "0161691": 366, "2594": 366, "0144483": 366, "2902": 366, "011705": 366, "3583": 366, "0101487": 366, "4132": 366, "00879332": 366, "4769": 366, "0560297": 366, "2994": 366, "0467998": 366, "3584": 366, "0374397": 366, "4481": 366, "028166": 366, "5956": 366, "0192593": 366, "8711": 366, "277815": 366, "2415": 366, "229837": 366, "2919": 366, "1787": 366, "3755": 366, "126545": 366, "5303": 366, "0835321": 366, "8033": 366, "224925": 366, "2983": 366, "184256": 366, "3642": 366, "146452": 366, "4582": 366, "108899": 366, "6162": 366, "0740655": 366, "9060": 366, "0319455": 366, "2954": 366, "0268136": 366, "3519": 366, "0217062": 366, "4347": 366, "0166666": 366, "5662": 366, "0116466": 366, "8102": 366, "150549": 366, "2507": 366, "119951": 366, "3147": 366, "0893092": 366, "4226": 366, "0637226": 366, "5923": 366, "0427839": 366, "8823": 366, "122421": 366, "3035": 366, "102244": 366, "0822007": 366, "4520": 366, "0622484": 366, "5969": 366, "0429436": 366, "8652": 366, "00481074": 366, "00443796": 366, "2835": 366, "00389863": 366, "00343822": 366, "3659": 366, "00297784": 366, "4225": 366, "0145757": 366, "3453": 366, "012078": 366, "4167": 366, "00896329": 366, "5615": 366, "00727645": 366, "6917": 366, "00548478": 366, "9176": 366, "0150624": 366, "3341": 366, "0132428": 366, "3800": 366, "011443": 366, "4398": 366, "0092883": 366, "5418": 366, "00744553": 366, "6759": 366, "0543977": 366, "3701": 366, "0445693": 366, "4517": 366, "0363329": 366, "5541": 366, "0270492": 366, "7442": 366, "0187415": 366, "10742": 366, "267367": 366, "3011": 366, "223615": 366, "3601": 366, "1797": 366, "134716": 366, "5977": 366, "0692752": 366, "11624": 366, "222661": 366, "3616": 366, "179525": 366, "4485": 366, "139298": 366, "5781": 366, "0958787": 366, "8399": 366, "176292": 366, "4568": 366, "0700283": 366, "0258341": 366, "4383": 366, "0207504": 366, "5457": 366, "0161277": 366, "7021": 366, "0116008": 366, "9761": 366, "148512": 366, "3050": 366, "124238": 366, "0995304": 366, "4551": 366, "0714324": 366, "6341": 366, "044154": 366, "10259": 366, "113174": 366, "3940": 366, "0961662": 366, "4636": 366, "0765841": 366, "5822": 366, "0592912": 366, "7520": 366, "0416614": 366, "10703": 366, "00655654": 366, "2239": 366, "00584761": 366, "2510": 366, "00502113": 366, "2923": 366, "00466269": 366, "3148": 366, "00393276": 366, "3732": 366, "0203923": 366, "2879": 366, "0171018": 366, "3433": 366, "0137027": 366, "4285": 366, "0109527": 366, "5361": 366, "00749636": 366, "7833": 366, "0221319": 366, "0193761": 366, "3030": 366, "0158773": 366, "3698": 366, "0134367": 366, "4370": 366, "0116365": 366, "5046": 366, "0780751": 366, "3008": 366, "0651551": 366, "3604": 366, "0521945": 366, "4500": 366, "0394101": 366, "5959": 366, "0262706": 366, "8940": 366, "398509": 366, "2357": 366, "332153": 366, "259051": 366, "3626": 366, "184412": 366, "5094": 366, "119678": 366, "7850": 366, "313656": 366, "2995": 366, "257989": 366, "3641": 366, "206049": 366, "4559": 366, "152848": 366, "6146": 366, "103125": 366, "9110": 366, "0444861": 366, "2969": 366, "037334": 366, "3538": 366, "0302293": 366, "0231979": 366, "5695": 366, "0158702": 366, "8325": 366, "219777": 366, "2404": 366, "17764": 366, "2975": 366, "135864": 366, "3889": 366, "100424": 366, "5262": 366, "0677547": 366, "7799": 366, "172356": 366, "3018": 366, "144231": 366, "3606": 366, "116019": 366, "4483": 366, "0873881": 366, "5953": 366, "0596004": 366, "8728": 366, "00609695": 366, "2751": 366, "00517637": 366, "3241": 366, "00448956": 366, "3736": 366, "00394876": 366, "4248": 366, "00317463": 366, "5284": 366, "0204832": 366, "3276": 366, "0137691": 366, "4873": 366, "0114194": 366, "5876": 366, "00893304": 366, "7512": 366, "00653312": 366, "10272": 366, "0192409": 366, "3487": 366, "0168348": 366, "3986": 366, "0142343": 366, "4714": 366, "0119455": 366, "5617": 366, "00910648": 366, "7369": 366, "0781101": 366, "0614806": 366, "4366": 366, "046201": 366, "5810": 366, "0357023": 366, "7518": 366, "0222103": 366, "12086": 366, "326917": 366, "3284": 366, "273363": 366, "3927": 366, "220994": 366, "4858": 366, "166153": 366, "6462": 366, "0854403": 366, "12567": 366, "311348": 366, "3448": 366, "243012": 366, "4418": 366, "187933": 366, "5713": 366, "126819": 366, "8466": 366, "0855686": 366, "12548": 366, "0404778": 366, "3730": 366, "0329699": 366, "4579": 366, "0265272": 366, "5692": 366, "0207815": 366, "7265": 366, "0139037": 366, "10860": 366, "183003": 366, "161443": 366, "3741": 366, "129767": 366, "4654": 366, "0893345": 366, "6760": 366, "0610684": 366, "9890": 366, "15525": 366, "3829": 366, "125772": 366, "4727": 366, "101434": 366, "5861": 366, "0765083": 366, "7770": 366, "0537321": 366, "11064": 366, "0104209": 366, "3219": 366, "00908195": 366, "3694": 366, "00781277": 366, "4294": 366, "00651108": 366, "5153": 366, "0051719": 366, "6487": 366, "0321377": 366, "4176": 366, "0269904": 366, "4972": 366, "0220014": 366, "6100": 366, "016901": 366, "7941": 366, "0120042": 366, "11180": 366, "0373802": 366, "0314895": 366, "4262": 366, "0266731": 366, "5031": 366, "0217822": 366, "6161": 366, "0168219": 366, "7978": 366, "176031": 366, "3049": 366, "134442": 366, "3993": 366, "0843776": 366, "6362": 366, "0640577": 366, "8381": 366, "043787": 366, "12261": 366, "697876": 366, "3077": 366, "615338": 366, "3489": 366, "350147": 366, "6133": 366, "267289": 366, "8034": 366, "179695": 366, "11950": 366, "703207": 366, "3053": 366, "561805": 366, "3822": 366, "423052": 366, "5076": 366, "254835": 366, "171434": 366, "12526": 366, "0933483": 366, "3235": 366, "0725632": 366, "4161": 366, "0539197": 366, "5600": 366, "0376119": 366, "8029": 366, "0263137": 366, "11476": 366, "407388": 366, "340939": 366, "3543": 366, "261028": 366, "4627": 366, "151649": 366, "7965": 366, "103379": 366, "11684": 366, "358769": 366, "3314": 366, "283046": 366, "4201": 366, "212152": 366, "5604": 366, "158502": 366, "7502": 366, "107514": 366, "11059": 366, "0148329": 366, "0129116": 366, "3898": 366, "0110537": 366, "4553": 366, "00925277": 366, "5439": 366, "00716987": 366, "7019": 366, "0526609": 366, "3823": 366, "0447282": 366, "4501": 366, "0365834": 366, "5503": 366, "0274874": 366, "7324": 366, "0183895": 366, "10947": 366, "0556653": 366, "0465882": 366, "4321": 366, "039411": 366, "5108": 366, "0318745": 366, "6316": 366, "024706": 366, "8148": 366, "263316": 366, "3058": 366, "198303": 366, "4061": 366, "141966": 366, "5672": 366, "105849": 366, "7608": 366, "0687866": 366, "11707": 366, "793822": 366, "4057": 366, "996979": 366, "3230": 366, "54288": 366, "5933": 366, "412174": 366, "7815": 366, "274441": 366, "11737": 366, "03474": 366, "3113": 366, "832701": 366, "3868": 366, "564787": 366, "421781": 366, "7637": 366, "271587": 366, "11860": 366, "130834": 366, "3462": 366, "0943305": 366, "4802": 366, "0760123": 366, "0580473": 366, "7803": 366, "0395342": 366, "11458": 366, "635729": 366, "2850": 366, "379899": 366, "307908": 366, "5884": 366, "233057": 366, "7774": 366, "157518": 366, "11503": 366, "518276": 366, "3441": 366, "422517": 366, "4221": 366, "323476": 366, "5513": 366, "247251": 366, "7213": 366, "163369": 366, "10917": 366, "0192313": 366, "0168147": 366, "3991": 366, "0143274": 366, "4683": 366, "011932": 366, "5624": 366, "00914975": 366, "7334": 366, "0723144": 366, "3712": 366, "0613803": 366, "4373": 366, "050021": 366, "5366": 366, "0376949": 366, "7121": 366, "0249397": 366, "10763": 366, "0796627": 366, "3369": 366, "0616695": 366, "4352": 366, "0521326": 366, "5149": 366, "042188": 366, "0325741": 366, "8240": 366, "380582": 366, "2821": 366, "24038": 366, "4466": 366, "195271": 366, "5498": 366, "146935": 366, "7307": 366, "0948318": 366, "11322": 366, "08794": 366, "3947": 366, "913626": 366, "4701": 366, "737943": 366, "5820": 366, "558473": 366, "7690": 366, "369466": 366, "51009": 366, "2844": 366, "26974": 366, "3382": 366, "778244": 366, "5518": 366, "589803": 366, "7282": 366, "375284": 366, "11444": 366, "160705": 366, "3758": 366, "135495": 366, "4457": 366, "108718": 366, "5555": 366, "0811198": 366, "7445": 366, "0533513": 366, "11320": 366, "614109": 366, "3934": 366, "518614": 366, "418491": 366, "5772": 366, "31592": 366, "7647": 366, "211893": 366, "11401": 366, "836616": 366, "2842": 366, "699579": 366, "3399": 366, "544194": 366, "379699": 366, "228043": 366, "10428": 366, "un": 367, "u": 367, "hotmap": 367, "jpg": 367, "x16": 368, "environment_vari": 368, "kernel_typ": [368, 369], "perfom": 368, "introduct": 368, "benchmark_it": 368, "benchmark_no_refresh": 368, "refresh": 368, "kxn": 368, "sparse_ratio": 368, "micro_b": 368, "output_fp32": 368, "has_append_sum": 368, "micro_oc": 368, "sub_func_level": 368, "3d_infer": 368, "automaticlli": 368, "dsparse_lib_use_amx": 368, "amx_bf16_x16": 368, "output_bf16": 368, "lower_bound": 368, "upper_bound": 368, "invalid": 368, "fp32_relu": 368, "src_dt": 368, "dst_dt": 368, "tanspos": 368, "4d": 368, "distinguish": 368, "bs0": 368, "bs1": 368, "scr2": 368, "avx512f_p2031_p2013": 368, "has_binary_add": 368, "tile_n": 368, "coeffici": 368, "vnni_noperm_p2031_p1302": 368, "suuport": 368, "d0xd1x": 368, "d0": 368, "dst_type": 368, "padding_mask": 368, "badd_dim": 368, "blank": 368, "2048": 368, "large_weight_threshold": 368, "add_bia": 368, "channel_num": 368, "quantize_dim_elt_num": 368, "src_data_typ": 368, "newli": 368, "subdir": 368, "benchmark_dir": 368, "bench_": 368, "cpp": 368, "test_": 368, "entranc": 368, "get_true_data_": 368, "check_result_": 368, "gen_case_": 368, "run_bench_": 368, "calc_flop": 368, "get_refresh_data_idx": 368, "benchmark_util": 368, "whitespac": 369, "labl": 369, "run_ci": 369, "overwrit": 369, "it_per_cor": 369, "discard": 369, "new_input_fil": 369, "medium_n": 369, "ci": 369, "apach": 370, "copyright": 370, "subject": 370, "parti": 370, "accompani": 370, "research": 370, "wish": 370, "bibtex": 370, "misc": 370, "hanwen": 370, "haihao": 370, "shen": 370, "dong": 370, "hengyu": 370, "meng": 370, "wenxin": 370, "zhang": 370, "howpublish": 370, "url": 370, "year": 370, "2023": 370, "logo": 370, "atom": 370, "phi": 370, "pentium": 370, "vtune": 370, "corpor": 370, "subsidiari": 370, "toler": 371, "rel": 371, "conjunct": 371, "proport": [371, 372], "vision": 373, "speech": 373, "multimod": 373, "text_classifi": 373, "great": 373, "9998425245285034": 373, "believ": 373, "beauti": 373, "evoc": 373, "ve": 373, "seen": 373, "9998886585235596": 373, "bear": 374, "brain": 374, "damag": 374, "hypothesi": 374, "yann": 374, "lecun": 374, "salient": 374, "anywher": 374, "filter": 374, "lowest": 374, "freez": 374, "hyper": 374, "didn": 374, "pruning_conf": 374, "littl": 375, "degrad": 375, "ex": 375, "affin": 375, "convers": 375, "math": 375, "zeropoint": 375, "asymmetr": 375, "overflow": 375, "fp16": 375, "unseen": 375, "peopl": 375, "emul": 375, "fake": 375, "backward": 375, "mimic": 375, "made": 375, "ultim": 375, "either": 375, "pain": 375, "lossi": 375, "fx": 375, "qat": 375, "site": 376, "assist": 376, "secur": 380, "legal": 380, "injector": 382}, "objects": {"": [[311, 0, 1, "c.CPU_INSTANCE", "CPU_INSTANCE"], [311, 0, 1, "c.NULL_INSTANCE", "NULL_INSTANCE"], [311, 1, 1, "_CPPv42jd", "jd"], [311, 1, 1, "_CPPv42jd", "jd"], [312, 1, 1, "_CPPv42jd", "jd"], [313, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 1, 1, "_CPPv42jd", "jd"], [314, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::K_BIAS"], [314, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::K_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::K_WEIGHT"], [314, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::MERGE_DST"], [314, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::MERGE_SRC"], [314, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::QK_V_OUTPUT_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::QK_V_OUTPUT_ZERO_POINT"], [314, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::Q_BIAS"], [314, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::Q_K_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::Q_K_SRC2"], [314, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::Q_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::Q_WEIGHT"], [314, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::RESHAPE_INPUT"], [314, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::V_BIAS"], [314, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::V_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::V_WEIGHT"], [312, 3, 1, "_CPPv4N2jd9attentionE", "jd::attention"], [312, 4, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention"], [312, 4, 1, "_CPPv4N2jd9attention9attentionEv", "jd::attention::attention"], [312, 5, 1, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy", "jd::attention::attention::kdp"], [312, 4, 1, "_CPPv4N2jd9attentionD0Ev", "jd::attention::~attention"], [312, 3, 1, "_CPPv4N2jd14attention_descE", "jd::attention_desc"], [312, 4, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc"], [312, 4, 1, "_CPPv4N2jd14attention_desc14attention_descEv", "jd::attention_desc::attention_desc"], [312, 5, 1, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc", "jd::attention_desc::attention_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd14attention_descD0Ev", "jd::attention_desc::~attention_desc"], [314, 6, 1, "_CPPv4N2jd12attention_ioE", "jd::attention_io"], [314, 2, 1, "_CPPv4N2jd12attention_io6K_BIASE", "jd::attention_io::K_BIAS"], [314, 2, 1, "_CPPv4N2jd12attention_io8K_SCALESE", "jd::attention_io::K_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io8K_WEIGHTE", "jd::attention_io::K_WEIGHT"], [314, 2, 1, "_CPPv4N2jd12attention_io9MERGE_DSTE", "jd::attention_io::MERGE_DST"], [314, 2, 1, "_CPPv4N2jd12attention_io9MERGE_SRCE", "jd::attention_io::MERGE_SRC"], [314, 2, 1, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE", "jd::attention_io::QK_V_OUTPUT_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE", "jd::attention_io::QK_V_OUTPUT_ZERO_POINT"], [314, 2, 1, "_CPPv4N2jd12attention_io6Q_BIASE", "jd::attention_io::Q_BIAS"], [314, 2, 1, "_CPPv4N2jd12attention_io10Q_K_SCALESE", "jd::attention_io::Q_K_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io8Q_K_SRC2E", "jd::attention_io::Q_K_SRC2"], [314, 2, 1, "_CPPv4N2jd12attention_io8Q_SCALESE", "jd::attention_io::Q_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io8Q_WEIGHTE", "jd::attention_io::Q_WEIGHT"], [314, 2, 1, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE", "jd::attention_io::RESHAPE_INPUT"], [314, 2, 1, "_CPPv4N2jd12attention_io6V_BIASE", "jd::attention_io::V_BIAS"], [314, 2, 1, "_CPPv4N2jd12attention_io8V_SCALESE", "jd::attention_io::V_SCALES"], [314, 2, 1, "_CPPv4N2jd12attention_io8V_WEIGHTE", "jd::attention_io::V_WEIGHT"], [311, 3, 1, "_CPPv4N2jd12cpu_engine_tE", "jd::cpu_engine_t"], [311, 4, 1, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv", "jd::cpu_engine_t::cpu_engine_t"], [311, 4, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage"], [311, 5, 1, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t", "jd::cpu_engine_t::create_memory_storage::storage"], [311, 7, 1, "_CPPv4N2jd12cpu_engine_t10empty_listE", "jd::cpu_engine_t::empty_list"], [311, 4, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list"], [311, 5, 1, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc", "jd::cpu_engine_t::get_implementation_list::op_desc"], [311, 4, 1, "_CPPv4N2jd12cpu_engine_tD0Ev", "jd::cpu_engine_t::~cpu_engine_t"], [312, 3, 1, "_CPPv4N2jd16dyn_quantize_mhaE", "jd::dyn_quantize_mha"], [312, 4, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha"], [312, 4, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv", "jd::dyn_quantize_mha::dyn_quantize_mha"], [312, 5, 1, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy", "jd::dyn_quantize_mha::dyn_quantize_mha::kdp"], [312, 4, 1, "_CPPv4N2jd16dyn_quantize_mhaD0Ev", "jd::dyn_quantize_mha::~dyn_quantize_mha"], [312, 3, 1, "_CPPv4N2jd21dyn_quantize_mha_descE", "jd::dyn_quantize_mha_desc"], [312, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [312, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc"], [312, 5, 1, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc", "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev", "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc"], [312, 3, 1, "_CPPv4N2jd13dynamic_quantE", "jd::dynamic_quant"], [312, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant"], [312, 4, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv", "jd::dynamic_quant::dynamic_quant"], [312, 5, 1, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy", "jd::dynamic_quant::dynamic_quant::kdp"], [312, 4, 1, "_CPPv4N2jd13dynamic_quantD0Ev", "jd::dynamic_quant::~dynamic_quant"], [312, 3, 1, "_CPPv4N2jd18dynamic_quant_descE", "jd::dynamic_quant_desc"], [312, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc"], [312, 4, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv", "jd::dynamic_quant_desc::dynamic_quant_desc"], [312, 5, 1, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc", "jd::dynamic_quant_desc::dynamic_quant_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd18dynamic_quant_descD0Ev", "jd::dynamic_quant_desc::~dynamic_quant_desc"], [312, 3, 1, "_CPPv4N2jd20dynamic_quant_matmulE", "jd::dynamic_quant_matmul"], [312, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [312, 4, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv", "jd::dynamic_quant_matmul::dynamic_quant_matmul"], [312, 5, 1, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy", "jd::dynamic_quant_matmul::dynamic_quant_matmul::kdp"], [312, 4, 1, "_CPPv4N2jd20dynamic_quant_matmulD0Ev", "jd::dynamic_quant_matmul::~dynamic_quant_matmul"], [312, 3, 1, "_CPPv4N2jd25dynamic_quant_matmul_descE", "jd::dynamic_quant_matmul_desc"], [312, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [312, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc"], [312, 5, 1, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc", "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev", "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc"], [312, 3, 1, "_CPPv4N2jd9eltwiseopE", "jd::eltwiseop"], [312, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop"], [312, 4, 1, "_CPPv4N2jd9eltwiseop9eltwiseopEv", "jd::eltwiseop::eltwiseop"], [312, 5, 1, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy", "jd::eltwiseop::eltwiseop::kdp"], [312, 4, 1, "_CPPv4N2jd9eltwiseopD0Ev", "jd::eltwiseop::~eltwiseop"], [312, 3, 1, "_CPPv4N2jd14eltwiseop_descE", "jd::eltwiseop_desc"], [312, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc"], [312, 4, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv", "jd::eltwiseop_desc::eltwiseop_desc"], [312, 5, 1, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc", "jd::eltwiseop_desc::eltwiseop_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd14eltwiseop_descD0Ev", "jd::eltwiseop_desc::~eltwiseop_desc"], [311, 3, 1, "_CPPv4N2jd8engine_tE", "jd::engine_t"], [311, 4, 1, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t", "jd::engine_t::create_kernel"], [311, 4, 1, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t", "jd::engine_t::create_memory_storage"], [311, 4, 1, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t", "jd::engine_t::create_stream"], [311, 7, 1, "_CPPv4N2jd8engine_t12engine_kind_E", "jd::engine_t::engine_kind_"], [311, 4, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t"], [311, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::engine_kind"], [311, 5, 1, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind", "jd::engine_t::engine_t::runtime_kind"], [311, 4, 1, "_CPPv4NK2jd8engine_t15get_engine_kindEv", "jd::engine_t::get_engine_kind"], [311, 4, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list"], [311, 5, 1, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc", "jd::engine_t::get_implementation_list::op_desc"], [311, 4, 1, "_CPPv4NK2jd8engine_t16get_runtime_kindEv", "jd::engine_t::get_runtime_kind"], [311, 7, 1, "_CPPv4N2jd8engine_t13runtime_kind_E", "jd::engine_t::runtime_kind_"], [311, 4, 1, "_CPPv4N2jd8engine_tD0Ev", "jd::engine_t::~engine_t"], [312, 3, 1, "_CPPv4N2jd6gatherE", "jd::gather"], [312, 4, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather"], [312, 4, 1, "_CPPv4N2jd6gather6gatherEv", "jd::gather::gather"], [312, 5, 1, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy", "jd::gather::gather::kdp"], [312, 4, 1, "_CPPv4N2jd6gatherD0Ev", "jd::gather::~gather"], [312, 3, 1, "_CPPv4N2jd11gather_descE", "jd::gather_desc"], [312, 4, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc"], [312, 4, 1, "_CPPv4N2jd11gather_desc11gather_descEv", "jd::gather_desc::gather_desc"], [312, 5, 1, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc", "jd::gather_desc::gather_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd11gather_descD0Ev", "jd::gather_desc::~gather_desc"], [312, 3, 1, "_CPPv4N2jd17kernel_desc_proxyE", "jd::kernel_desc_proxy"], [312, 4, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object"], [312, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::op_desc"], [312, 5, 1, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc", "jd::kernel_desc_proxy::create_proxy_object::result_ref"], [312, 7, 1, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E", "jd::kernel_desc_proxy::impl_list_"], [312, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy"], [312, 4, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv", "jd::kernel_desc_proxy::kernel_desc_proxy"], [312, 5, 1, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc", "jd::kernel_desc_proxy::kernel_desc_proxy::op_desc"], [312, 4, 1, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv", "jd::kernel_desc_proxy::kernel_kind"], [312, 4, 1, "_CPPv4N2jd17kernel_desc_proxyD0Ev", "jd::kernel_desc_proxy::~kernel_desc_proxy"], [312, 3, 1, "_CPPv4N2jd12kernel_proxyE", "jd::kernel_proxy"], [312, 4, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object"], [312, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::kd"], [312, 5, 1, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE", "jd::kernel_proxy::create_proxy_object::result_ref"], [312, 4, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute"], [312, 5, 1, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE", "jd::kernel_proxy::execute::rt_data"], [312, 4, 1, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv", "jd::kernel_proxy::get_workspace_size"], [312, 4, 1, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv", "jd::kernel_proxy::kernel_kind"], [312, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy"], [312, 4, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv", "jd::kernel_proxy::kernel_proxy"], [312, 5, 1, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy", "jd::kernel_proxy::kernel_proxy::kdp"], [312, 4, 1, "_CPPv4N2jd12kernel_proxyD0Ev", "jd::kernel_proxy::~kernel_proxy"], [312, 3, 1, "_CPPv4N2jd12layernorm_baE", "jd::layernorm_ba"], [312, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba"], [312, 4, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baEv", "jd::layernorm_ba::layernorm_ba"], [312, 5, 1, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy", "jd::layernorm_ba::layernorm_ba::kdp"], [312, 4, 1, "_CPPv4N2jd12layernorm_baD0Ev", "jd::layernorm_ba::~layernorm_ba"], [312, 3, 1, "_CPPv4N2jd17layernorm_ba_descE", "jd::layernorm_ba_desc"], [312, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc"], [312, 4, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv", "jd::layernorm_ba_desc::layernorm_ba_desc"], [312, 5, 1, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc", "jd::layernorm_ba_desc::layernorm_ba_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd17layernorm_ba_descD0Ev", "jd::layernorm_ba_desc::~layernorm_ba_desc"], [312, 3, 1, "_CPPv4N2jd20layernormalized_spmmE", "jd::layernormalized_spmm"], [312, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm"], [312, 4, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv", "jd::layernormalized_spmm::layernormalized_spmm"], [312, 5, 1, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy", "jd::layernormalized_spmm::layernormalized_spmm::kdp"], [312, 4, 1, "_CPPv4N2jd20layernormalized_spmmD0Ev", "jd::layernormalized_spmm::~layernormalized_spmm"], [312, 3, 1, "_CPPv4N2jd25layernormalized_spmm_descE", "jd::layernormalized_spmm_desc"], [312, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [312, 4, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc"], [312, 5, 1, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc", "jd::layernormalized_spmm_desc::layernormalized_spmm_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd25layernormalized_spmm_descD0Ev", "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc"], [312, 3, 1, "_CPPv4N2jd10logsoftmaxE", "jd::logsoftmax"], [312, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax"], [312, 4, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxEv", "jd::logsoftmax::logsoftmax"], [312, 5, 1, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy", "jd::logsoftmax::logsoftmax::kdp"], [312, 4, 1, "_CPPv4N2jd10logsoftmaxD0Ev", "jd::logsoftmax::~logsoftmax"], [312, 3, 1, "_CPPv4N2jd15logsoftmax_descE", "jd::logsoftmax_desc"], [312, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc"], [312, 4, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv", "jd::logsoftmax_desc::logsoftmax_desc"], [312, 5, 1, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc", "jd::logsoftmax_desc::logsoftmax_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd15logsoftmax_descD0Ev", "jd::logsoftmax_desc::~logsoftmax_desc"], [312, 3, 1, "_CPPv4N2jd9mha_denseE", "jd::mha_dense"], [312, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense"], [312, 4, 1, "_CPPv4N2jd9mha_dense9mha_denseEv", "jd::mha_dense::mha_dense"], [312, 5, 1, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy", "jd::mha_dense::mha_dense::kdp"], [312, 4, 1, "_CPPv4N2jd9mha_denseD0Ev", "jd::mha_dense::~mha_dense"], [312, 3, 1, "_CPPv4N2jd14mha_dense_descE", "jd::mha_dense_desc"], [312, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc"], [312, 4, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv", "jd::mha_dense_desc::mha_dense_desc"], [312, 5, 1, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc", "jd::mha_dense_desc::mha_dense_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd14mha_dense_descD0Ev", "jd::mha_dense_desc::~mha_dense_desc"], [313, 3, 1, "_CPPv4N2jd13operator_descE", "jd::operator_desc"], [313, 4, 1, "_CPPv4NK2jd13operator_desc18apply_postops_listEv", "jd::operator_desc::apply_postops_list"], [313, 7, 1, "_CPPv4N2jd13operator_desc19apply_postops_list_E", "jd::operator_desc::apply_postops_list_"], [313, 4, 1, "_CPPv4NK2jd13operator_desc5attrsEv", "jd::operator_desc::attrs"], [313, 7, 1, "_CPPv4N2jd13operator_desc6attrs_E", "jd::operator_desc::attrs_"], [313, 7, 1, "_CPPv4N2jd13operator_desc14binaryop_list_E", "jd::operator_desc::binaryop_list_"], [313, 4, 1, "_CPPv4NK2jd13operator_desc11engine_kindEv", "jd::operator_desc::engine_kind"], [313, 7, 1, "_CPPv4N2jd13operator_desc12engine_kind_E", "jd::operator_desc::engine_kind_"], [313, 4, 1, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv", "jd::operator_desc::get_binaryop_list"], [313, 4, 1, "_CPPv4NK2jd13operator_desc9impl_nthrEv", "jd::operator_desc::impl_nthr"], [313, 7, 1, "_CPPv4N2jd13operator_desc10impl_nthr_E", "jd::operator_desc::impl_nthr_"], [313, 7, 1, "_CPPv4N2jd13operator_desc9ker_kind_E", "jd::operator_desc::ker_kind_"], [313, 7, 1, "_CPPv4N2jd13operator_desc9ker_prop_E", "jd::operator_desc::ker_prop_"], [313, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_kindEv", "jd::operator_desc::kernel_kind"], [313, 4, 1, "_CPPv4NK2jd13operator_desc11kernel_propEv", "jd::operator_desc::kernel_prop"], [313, 4, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator=="], [313, 5, 1, "_CPPv4NK2jd13operator_desceqERK13operator_desc", "jd::operator_desc::operator==::rhs"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc"], [313, 4, 1, "_CPPv4N2jd13operator_desc13operator_descEv", "jd::operator_desc::operator_desc"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::apply_postops_list"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::attrs"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::eng_kind"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_kind"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ker_prop"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::runtime_kind"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [313, 5, 1, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE", "jd::operator_desc::operator_desc::ts_descs"], [313, 4, 1, "_CPPv4NK2jd13operator_desc12runtime_kindEv", "jd::operator_desc::runtime_kind"], [313, 7, 1, "_CPPv4N2jd13operator_desc13runtime_kind_E", "jd::operator_desc::runtime_kind_"], [313, 4, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list"], [313, 5, 1, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE", "jd::operator_desc::set_binaryop_list::binaryop_list"], [313, 4, 1, "_CPPv4NK2jd13operator_desc12tensor_descsEv", "jd::operator_desc::tensor_descs"], [313, 7, 1, "_CPPv4N2jd13operator_desc9ts_descs_E", "jd::operator_desc::ts_descs_"], [313, 4, 1, "_CPPv4N2jd13operator_descD0Ev", "jd::operator_desc::~operator_desc"], [312, 3, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base"], [312, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::T"], [312, 8, 1, "_CPPv4I00EN2jd10proxy_baseE", "jd::proxy_base::arg_t"], [312, 4, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object"], [312, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::arg"], [312, 5, 1, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t", "jd::proxy_base::create_proxy_object::result_ref"], [312, 7, 1, "_CPPv4N2jd10proxy_base12data_handle_E", "jd::proxy_base::data_handle_"], [312, 4, 1, "_CPPv4NK2jd10proxy_base6get_spEv", "jd::proxy_base::get_sp"], [312, 4, 1, "_CPPv4N2jd10proxy_base10proxy_baseEv", "jd::proxy_base::proxy_base"], [312, 4, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp"], [312, 5, 1, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE", "jd::proxy_base::reset_sp::sp"], [312, 4, 1, "_CPPv4N2jd10proxy_baseD0Ev", "jd::proxy_base::~proxy_base"], [312, 3, 1, "_CPPv4N2jd5sliceE", "jd::slice"], [312, 4, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice"], [312, 4, 1, "_CPPv4N2jd5slice5sliceEv", "jd::slice::slice"], [312, 5, 1, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy", "jd::slice::slice::kdp"], [312, 4, 1, "_CPPv4N2jd5sliceD0Ev", "jd::slice::~slice"], [312, 3, 1, "_CPPv4N2jd10slice_descE", "jd::slice_desc"], [312, 4, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc"], [312, 4, 1, "_CPPv4N2jd10slice_desc10slice_descEv", "jd::slice_desc::slice_desc"], [312, 5, 1, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc", "jd::slice_desc::slice_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd10slice_descD0Ev", "jd::slice_desc::~slice_desc"], [312, 3, 1, "_CPPv4N2jd7softmaxE", "jd::softmax"], [312, 4, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax"], [312, 4, 1, "_CPPv4N2jd7softmax7softmaxEv", "jd::softmax::softmax"], [312, 5, 1, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy", "jd::softmax::softmax::kdp"], [312, 4, 1, "_CPPv4N2jd7softmaxD0Ev", "jd::softmax::~softmax"], [312, 3, 1, "_CPPv4N2jd12softmax_descE", "jd::softmax_desc"], [312, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc"], [312, 4, 1, "_CPPv4N2jd12softmax_desc12softmax_descEv", "jd::softmax_desc::softmax_desc"], [312, 5, 1, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc", "jd::softmax_desc::softmax_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd12softmax_descD0Ev", "jd::softmax_desc::~softmax_desc"], [312, 3, 1, "_CPPv4N2jd13sparse_matmulE", "jd::sparse_matmul"], [312, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul"], [312, 4, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv", "jd::sparse_matmul::sparse_matmul"], [312, 5, 1, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy", "jd::sparse_matmul::sparse_matmul::kdp"], [312, 4, 1, "_CPPv4N2jd13sparse_matmulD0Ev", "jd::sparse_matmul::~sparse_matmul"], [312, 3, 1, "_CPPv4N2jd18sparse_matmul_descE", "jd::sparse_matmul_desc"], [312, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc"], [312, 4, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv", "jd::sparse_matmul_desc::sparse_matmul_desc"], [312, 5, 1, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc", "jd::sparse_matmul_desc::sparse_matmul_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd18sparse_matmul_descD0Ev", "jd::sparse_matmul_desc::~sparse_matmul_desc"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 1, 1, "_CPPv4N2jd3ssdE", "jd::ssd"], [314, 7, 1, "_CPPv4N2jd3ssd4BIASE", "jd::ssd::BIAS"], [314, 7, 1, "_CPPv4N2jd3ssd3DSTE", "jd::ssd::DST"], [314, 7, 1, "_CPPv4N2jd3ssd6DST_M1E", "jd::ssd::DST_M1"], [314, 7, 1, "_CPPv4N2jd3ssd6DST_M2E", "jd::ssd::DST_M2"], [314, 7, 1, "_CPPv4N2jd3ssd6SCALESE", "jd::ssd::SCALES"], [314, 7, 1, "_CPPv4N2jd3ssd3SRCE", "jd::ssd::SRC"], [314, 7, 1, "_CPPv4N2jd3ssd3WEIE", "jd::ssd::WEI"], [314, 7, 1, "_CPPv4N2jd3ssd10WORK_SPACEE", "jd::ssd::WORK_SPACE"], [314, 1, 1, "_CPPv4N2jd3ssd17amx_bf16_params_tE", "jd::ssd::amx_bf16_params_t"], [314, 1, 1, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE", "jd::ssd::amx_bf16bf16_inputs_t"], [314, 1, 1, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE", "jd::ssd::amx_bf16f32_inputs_t"], [314, 3, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t"], [314, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::bia_t"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t4biasE", "jd::ssd::amx_inputs_t::bias"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3dstE", "jd::ssd::amx_inputs_t::dst"], [314, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::dst_t"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t3srcE", "jd::ssd::amx_inputs_t::src"], [314, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::src_t"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_inputs_t6weightE", "jd::ssd::amx_inputs_t::weight"], [314, 8, 1, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE", "jd::ssd::amx_inputs_t::wgt_t"], [314, 1, 1, "_CPPv4N2jd3ssd17amx_int8_params_tE", "jd::ssd::amx_int8_params_t"], [314, 3, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t"], [314, 8, 1, "_CPPv4I0EN2jd3ssd12amx_params_tE", "jd::ssd::amx_params_t::T"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE", "jd::ssd::amx_params_t::blocks_per_group"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE", "jd::ssd::amx_params_t::blocksize"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7colidxsE", "jd::ssd::amx_params_t::colidxs"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE", "jd::ssd::amx_params_t::group_rowptr"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t8has_biasE", "jd::ssd::amx_params_t::has_bias"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE", "jd::ssd::amx_params_t::nnz_group"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE", "jd::ssd::amx_params_t::nrowptr"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t9num_tileME", "jd::ssd::amx_params_t::num_tileM"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE", "jd::ssd::amx_params_t::postop_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE", "jd::ssd::amx_params_t::same_src_dtype"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5shapeE", "jd::ssd::amx_params_t::shape"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileME", "jd::ssd::amx_params_t::tileM"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t5tileNE", "jd::ssd::amx_params_t::tileN"], [314, 7, 1, "_CPPv4N2jd3ssd12amx_params_t6weightE", "jd::ssd::amx_params_t::weight"], [314, 3, 1, "_CPPv4N2jd3ssd13avx512_data_tE", "jd::ssd::avx512_data_t"], [314, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t4biasE", "jd::ssd::avx512_data_t::bias"], [314, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t5denseE", "jd::ssd::avx512_data_t::dense"], [314, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t3dstE", "jd::ssd::avx512_data_t::dst"], [314, 7, 1, "_CPPv4N2jd3ssd13avx512_data_t6sparseE", "jd::ssd::avx512_data_t::sparse"], [314, 3, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_tE", "jd::ssd::avx512_fp32_params_t"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE", "jd::ssd::avx512_fp32_params_t::K"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME", "jd::ssd::avx512_fp32_params_t::M"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE", "jd::ssd::avx512_fp32_params_t::N"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE", "jd::ssd::avx512_fp32_params_t::has_bias"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE", "jd::ssd::avx512_fp32_params_t::im_end"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE", "jd::ssd::avx512_fp32_params_t::im_start"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE", "jd::ssd::avx512_fp32_params_t::in_end"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE", "jd::ssd::avx512_fp32_params_t::in_start"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE", "jd::ssd::avx512_fp32_params_t::postop_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE", "jd::ssd::avx512_fp32_params_t::sparse_ptr"], [314, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::direct"], [314, 3, 1, "_CPPv4N2jd3ssd16eltwiseop_data_tE", "jd::ssd::eltwiseop_data_t"], [314, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE", "jd::ssd::eltwiseop_data_t::dst"], [314, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE", "jd::ssd::eltwiseop_data_t::element_num"], [314, 7, 1, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE", "jd::ssd::eltwiseop_data_t::src"], [314, 3, 1, "_CPPv4N2jd3ssd17eltwiseop_param_tE", "jd::ssd::eltwiseop_param_t"], [314, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE", "jd::ssd::eltwiseop_param_t::element_num"], [314, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE", "jd::ssd::eltwiseop_param_t::element_num_each_th"], [314, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE", "jd::ssd::eltwiseop_param_t::in_dt"], [314, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE", "jd::ssd::eltwiseop_param_t::out_dt"], [314, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE", "jd::ssd::eltwiseop_param_t::postop_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE", "jd::ssd::eltwiseop_param_t::remain_element"], [314, 3, 1, "_CPPv4N2jd3ssd13gather_data_tE", "jd::ssd::gather_data_t"], [314, 7, 1, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE", "jd::ssd::gather_data_t::binaryop_addrs"], [314, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3dstE", "jd::ssd::gather_data_t::dst"], [314, 4, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t"], [314, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::a"], [314, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::b"], [314, 5, 1, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv", "jd::ssd::gather_data_t::gather_data_t::c"], [314, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3idxE", "jd::ssd::gather_data_t::idx"], [314, 7, 1, "_CPPv4N2jd3ssd13gather_data_t3srcE", "jd::ssd::gather_data_t::src"], [314, 3, 1, "_CPPv4N2jd3ssd14gather_param_tE", "jd::ssd::gather_param_t"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE", "jd::ssd::gather_param_t::binary_ts_sizes"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE", "jd::ssd::gather_param_t::binaryop_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE", "jd::ssd::gather_param_t::dst_axis_size"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t2dtE", "jd::ssd::gather_param_t::dt"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE", "jd::ssd::gather_param_t::dt_size"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE", "jd::ssd::gather_param_t::extend_mask"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE", "jd::ssd::gather_param_t::idx_size"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE", "jd::ssd::gather_param_t::inner_size"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t5loopsE", "jd::ssd::gather_param_t::loops"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t4maskE", "jd::ssd::gather_param_t::mask"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE", "jd::ssd::gather_param_t::outer_size"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t6remainE", "jd::ssd::gather_param_t::remain"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE", "jd::ssd::gather_param_t::src_axis_size"], [314, 7, 1, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE", "jd::ssd::gather_param_t::src_size"], [314, 3, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tE", "jd::ssd::layernorm_ba_data_t"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E", "jd::ssd::layernorm_ba_data_t::[anonymous]"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE", "jd::ssd::layernorm_ba_data_t::alpha"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE", "jd::ssd::layernorm_ba_data_t::beta"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE", "jd::ssd::layernorm_ba_data_t::dst"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E", "jd::ssd::layernorm_ba_data_t::dst2"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE", "jd::ssd::layernorm_ba_data_t::eps"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE", "jd::ssd::layernorm_ba_data_t::mean"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE", "jd::ssd::layernorm_ba_data_t::n"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE", "jd::ssd::layernorm_ba_data_t::one"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE", "jd::ssd::layernorm_ba_data_t::process_row"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE", "jd::ssd::layernorm_ba_data_t::src"], [314, 7, 1, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE", "jd::ssd::layernorm_ba_data_t::var"], [314, 3, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_tE", "jd::ssd::layernorm_ba_param_t"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE", "jd::ssd::layernorm_ba_param_t::batch_num"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE", "jd::ssd::layernorm_ba_param_t::binaryop_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE", "jd::ssd::layernorm_ba_param_t::col_num"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE", "jd::ssd::layernorm_ba_param_t::direct_process_row"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE", "jd::ssd::layernorm_ba_param_t::input_dt"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE", "jd::ssd::layernorm_ba_param_t::ker_per_batch"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE", "jd::ssd::layernorm_ba_param_t::output2_dt"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE", "jd::ssd::layernorm_ba_param_t::output_dt"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE", "jd::ssd::layernorm_ba_param_t::postop_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE", "jd::ssd::layernorm_ba_param_t::process_batch_per_ker"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE", "jd::ssd::layernorm_ba_param_t::process_col"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE", "jd::ssd::layernorm_ba_param_t::row_num"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE", "jd::ssd::layernorm_ba_param_t::spec_type"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE", "jd::ssd::layernorm_ba_param_t::split_output"], [314, 7, 1, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE", "jd::ssd::layernorm_ba_param_t::thread_elt_offset"], [314, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::lut"], [314, 3, 1, "_CPPv4N2jd3ssd13matmul_data_tE", "jd::ssd::matmul_data_t"], [314, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t3dstE", "jd::ssd::matmul_data_t::dst"], [314, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src0E", "jd::ssd::matmul_data_t::src0"], [314, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src1E", "jd::ssd::matmul_data_t::src1"], [314, 7, 1, "_CPPv4N2jd3ssd13matmul_data_t4src2E", "jd::ssd::matmul_data_t::src2"], [314, 1, 1, "_CPPv4N2jd3ssd9matmul_ioE", "jd::ssd::matmul_io"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::DST0"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::SCALE0"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::SRC0"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::SRC1"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::SRC2"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::ZP0"], [314, 6, 1, "_CPPv4N2jd3ssd9matmul_io2ioE", "jd::ssd::matmul_io::io"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4DST0E", "jd::ssd::matmul_io::io::DST0"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E", "jd::ssd::matmul_io::io::SCALE0"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E", "jd::ssd::matmul_io::io::SRC0"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E", "jd::ssd::matmul_io::io::SRC1"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E", "jd::ssd::matmul_io::io::SRC2"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E", "jd::ssd::matmul_io::io::ZP0"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::io::matmul_io_MAX"], [314, 2, 1, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE", "jd::ssd::matmul_io::matmul_io_MAX"], [314, 3, 1, "_CPPv4N2jd3ssd14matmul_param_tE", "jd::ssd::matmul_param_t"], [314, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1KE", "jd::ssd::matmul_param_t::K"], [314, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1ME", "jd::ssd::matmul_param_t::M"], [314, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t1NE", "jd::ssd::matmul_param_t::N"], [314, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5alphaE", "jd::ssd::matmul_param_t::alpha"], [314, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t5batchE", "jd::ssd::matmul_param_t::batch"], [314, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t4betaE", "jd::ssd::matmul_param_t::beta"], [314, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE", "jd::ssd::matmul_param_t::m_tile"], [314, 7, 1, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE", "jd::ssd::matmul_param_t::n_tile"], [314, 3, 1, "_CPPv4N2jd3ssd16matmul_u8_data_tE", "jd::ssd::matmul_u8_data_t"], [314, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE", "jd::ssd::matmul_u8_data_t::dst"], [314, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE", "jd::ssd::matmul_u8_data_t::scale"], [314, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E", "jd::ssd::matmul_u8_data_t::src0"], [314, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E", "jd::ssd::matmul_u8_data_t::src1"], [314, 7, 1, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE", "jd::ssd::matmul_u8_data_t::zp"], [314, 3, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE", "jd::ssd::mean_var_reduce_data_t"], [314, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE", "jd::ssd::mean_var_reduce_data_t::mean_in"], [314, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE", "jd::ssd::mean_var_reduce_data_t::mean_out"], [314, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE", "jd::ssd::mean_var_reduce_data_t::var_in"], [314, 7, 1, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE", "jd::ssd::mean_var_reduce_data_t::var_out"], [314, 3, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE", "jd::ssd::mean_var_reduce_param_t"], [314, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME", "jd::ssd::mean_var_reduce_param_t::BM"], [314, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE", "jd::ssd::mean_var_reduce_param_t::BN"], [314, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME", "jd::ssd::mean_var_reduce_param_t::M"], [314, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE", "jd::ssd::mean_var_reduce_param_t::N"], [314, 7, 1, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE", "jd::ssd::mean_var_reduce_param_t::element_num"], [314, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::normal"], [314, 3, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE", "jd::ssd::seq_vnni_copy_params"], [314, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE", "jd::ssd::seq_vnni_copy_params::dstptr"], [314, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE", "jd::ssd::seq_vnni_copy_params::dststride"], [314, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE", "jd::ssd::seq_vnni_copy_params::k"], [314, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE", "jd::ssd::seq_vnni_copy_params::srcptr"], [314, 7, 1, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE", "jd::ssd::seq_vnni_copy_params::srcstride"], [314, 3, 1, "_CPPv4N2jd3ssd14softmax_data_tE", "jd::ssd::softmax_data_t"], [314, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3dstE", "jd::ssd::softmax_data_t::dst"], [314, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3oneE", "jd::ssd::softmax_data_t::one"], [314, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE", "jd::ssd::softmax_data_t::process_vec_num"], [314, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3srcE", "jd::ssd::softmax_data_t::src"], [314, 7, 1, "_CPPv4N2jd3ssd14softmax_data_t3tmpE", "jd::ssd::softmax_data_t::tmp"], [314, 3, 1, "_CPPv4N2jd3ssd15softmax_param_tE", "jd::ssd::softmax_param_t"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE", "jd::ssd::softmax_param_t::get_lut_exp_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE", "jd::ssd::softmax_param_t::input_dt"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE", "jd::ssd::softmax_param_t::output_dt"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE", "jd::ssd::softmax_param_t::postop_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE", "jd::ssd::softmax_param_t::scalar_num"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE", "jd::ssd::softmax_param_t::sepc_type"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE", "jd::ssd::softmax_param_t::vec_align_len"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE", "jd::ssd::softmax_param_t::vec_num_per_thr"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE", "jd::ssd::softmax_param_t::vec_num_tail_thr"], [314, 7, 1, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE", "jd::ssd::softmax_param_t::vec_tail_len"], [314, 6, 1, "_CPPv4N2jd3ssd13sparse_schemeE", "jd::ssd::sparse_scheme"], [314, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE", "jd::ssd::sparse_scheme::dense_x_sparse"], [314, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE", "jd::ssd::sparse_scheme::sparse_x_dense"], [314, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE", "jd::ssd::sparse_scheme::sparse_x_sparse"], [314, 2, 1, "_CPPv4N2jd3ssd13sparse_scheme5undefE", "jd::ssd::sparse_scheme::undef"], [314, 6, 1, "_CPPv4N2jd3ssd17spec_softmax_typeE", "jd::ssd::spec_softmax_type"], [314, 2, 1, "_CPPv4N2jd3ssd17spec_softmax_type3lutE", "jd::ssd::spec_softmax_type::lut"], [314, 6, 1, "_CPPv4N2jd3ssd20spec_translnorm_typeE", "jd::ssd::spec_translnorm_type"], [314, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6directE", "jd::ssd::spec_translnorm_type::direct"], [314, 2, 1, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE", "jd::ssd::spec_translnorm_type::normal"], [314, 6, 1, "_CPPv4N2jd3ssd13subfunc_levelE", "jd::ssd::subfunc_level"], [314, 2, 1, "_CPPv4N2jd3ssd13subfunc_level5kdimsE", "jd::ssd::subfunc_level::kdims"], [314, 2, 1, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE", "jd::ssd::subfunc_level::non_kdims"], [314, 2, 1, "_CPPv4N2jd3ssd13subfunc_level4noneE", "jd::ssd::subfunc_level::none"], [314, 2, 1, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE", "jd::ssd::subfunc_level::subfunc_level_MAX"], [314, 3, 1, "_CPPv4N2jd3ssd21transpose_copy_paramsE", "jd::ssd::transpose_copy_params"], [314, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE", "jd::ssd::transpose_copy_params::dstptr"], [314, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE", "jd::ssd::transpose_copy_params::dststride"], [314, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params1kE", "jd::ssd::transpose_copy_params::k"], [314, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE", "jd::ssd::transpose_copy_params::srcptr"], [314, 7, 1, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE", "jd::ssd::transpose_copy_params::srcstride"], [314, 1, 1, "_CPPv4N2jd3ssd16transpose_mha_ioE", "jd::ssd::transpose_mha_io"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::BATCH"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::DST"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::HEAD_NUM"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::HEAD_SIZE"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::MASK"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::SCALE_DST"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::SCALE_K"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::SCALE_Q"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::SCALE_V"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::SEQ_LEN"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::SL_PAD"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::SRC_K"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::SRC_Q"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::SRC_V"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::TMP2M"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::ZP_DST"], [314, 6, 1, "_CPPv4N2jd3ssd16transpose_mha_io2ioE", "jd::ssd::transpose_mha_io::io"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE", "jd::ssd::transpose_mha_io::io::BATCH"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE", "jd::ssd::transpose_mha_io::io::DST"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME", "jd::ssd::transpose_mha_io::io::HEAD_NUM"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE", "jd::ssd::transpose_mha_io::io::HEAD_SIZE"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE", "jd::ssd::transpose_mha_io::io::MASK"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE", "jd::ssd::transpose_mha_io::io::SCALE_DST"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE", "jd::ssd::transpose_mha_io::io::SCALE_K"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE", "jd::ssd::transpose_mha_io::io::SCALE_Q"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE", "jd::ssd::transpose_mha_io::io::SCALE_V"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE", "jd::ssd::transpose_mha_io::io::SEQ_LEN"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE", "jd::ssd::transpose_mha_io::io::SL_PAD"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE", "jd::ssd::transpose_mha_io::io::SRC_K"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE", "jd::ssd::transpose_mha_io::io::SRC_Q"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE", "jd::ssd::transpose_mha_io::io::SRC_V"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME", "jd::ssd::transpose_mha_io::io::TMP2M"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE", "jd::ssd::transpose_mha_io::io::ZP_DST"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::io::transpose_mha_io_MAX"], [314, 2, 1, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE", "jd::ssd::transpose_mha_io::transpose_mha_io_MAX"], [314, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE", "jd::ssd::transpose_mha_step1_params"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE", "jd::ssd::transpose_mha_step1_params::astep"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE", "jd::ssd::transpose_mha_step1_params::batchk"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE", "jd::ssd::transpose_mha_step1_params::cbatchstep"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE", "jd::ssd::transpose_mha_step1_params::cfg"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE", "jd::ssd::transpose_mha_step1_params::cstep"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE", "jd::ssd::transpose_mha_step1_params::expsum"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE", "jd::ssd::transpose_mha_step1_params::k"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE", "jd::ssd::transpose_mha_step1_params::m"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE", "jd::ssd::transpose_mha_step1_params::matA"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE", "jd::ssd::transpose_mha_step1_params::matB"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE", "jd::ssd::transpose_mha_step1_params::matC"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE", "jd::ssd::transpose_mha_step1_params::matD"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE", "jd::ssd::transpose_mha_step1_params::scaleAB"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE", "jd::ssd::transpose_mha_step1_params::sumstep"], [314, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE", "jd::ssd::transpose_mha_step2_params"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE", "jd::ssd::transpose_mha_step2_params::dstptr"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE", "jd::ssd::transpose_mha_step2_params::dststride"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE", "jd::ssd::transpose_mha_step2_params::k"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE", "jd::ssd::transpose_mha_step2_params::srcptr"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE", "jd::ssd::transpose_mha_step2_params::srcstride"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE", "jd::ssd::transpose_mha_step2_params::sumptr"], [314, 3, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE", "jd::ssd::transpose_mha_step3_params"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE", "jd::ssd::transpose_mha_step3_params::astep"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE", "jd::ssd::transpose_mha_step3_params::cfg"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE", "jd::ssd::transpose_mha_step3_params::cstep"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE", "jd::ssd::transpose_mha_step3_params::k"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE", "jd::ssd::transpose_mha_step3_params::matA"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE", "jd::ssd::transpose_mha_step3_params::matB"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE", "jd::ssd::transpose_mha_step3_params::matC"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE", "jd::ssd::transpose_mha_step3_params::scaleAB"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE", "jd::ssd::transpose_mha_step3_params::scaleC"], [314, 7, 1, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE", "jd::ssd::transpose_mha_step3_params::zeropointC"], [314, 3, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t"], [314, 8, 1, "_CPPv4I0EN2jd3ssd11vnni_data_tE", "jd::ssd::vnni_data_t::dst_t"], [314, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE", "jd::ssd::vnni_data_t::ptr_bias"], [314, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE", "jd::ssd::vnni_data_t::ptr_dense"], [314, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE", "jd::ssd::vnni_data_t::ptr_dst"], [314, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E", "jd::ssd::vnni_data_t::ptr_dst_m1"], [314, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E", "jd::ssd::vnni_data_t::ptr_dst_m2"], [314, 7, 1, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE", "jd::ssd::vnni_data_t::ptr_scales"], [314, 3, 1, "_CPPv4N2jd3ssd12vnni_param_tE", "jd::ssd::vnni_param_t"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BME", "jd::ssd::vnni_param_t::BM"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t2BNE", "jd::ssd::vnni_param_t::BN"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE", "jd::ssd::vnni_param_t::append_sum"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE", "jd::ssd::vnni_param_t::blocksize"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE", "jd::ssd::vnni_param_t::has_bias"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8im_startE", "jd::ssd::vnni_param_t::im_start"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7indicesE", "jd::ssd::vnni_param_t::indices"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6indptrE", "jd::ssd::vnni_param_t::indptr"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE", "jd::ssd::vnni_param_t::output_type"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE", "jd::ssd::vnni_param_t::postop_attrs"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE", "jd::ssd::vnni_param_t::sub_func"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE", "jd::ssd::vnni_param_t::tile_w"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t6weightE", "jd::ssd::vnni_param_t::weight"], [314, 7, 1, "_CPPv4N2jd3ssd12vnni_param_t7welfordE", "jd::ssd::vnni_param_t::welford"], [312, 3, 1, "_CPPv4N2jd16transpose_matmulE", "jd::transpose_matmul"], [312, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul"], [312, 4, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv", "jd::transpose_matmul::transpose_matmul"], [312, 5, 1, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy", "jd::transpose_matmul::transpose_matmul::kdp"], [312, 4, 1, "_CPPv4N2jd16transpose_matmulD0Ev", "jd::transpose_matmul::~transpose_matmul"], [312, 3, 1, "_CPPv4N2jd21transpose_matmul_descE", "jd::transpose_matmul_desc"], [312, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc"], [312, 4, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv", "jd::transpose_matmul_desc::transpose_matmul_desc"], [312, 5, 1, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc", "jd::transpose_matmul_desc::transpose_matmul_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd21transpose_matmul_descD0Ev", "jd::transpose_matmul_desc::~transpose_matmul_desc"], [312, 3, 1, "_CPPv4N2jd13transpose_mhaE", "jd::transpose_mha"], [312, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha"], [312, 4, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaEv", "jd::transpose_mha::transpose_mha"], [312, 5, 1, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy", "jd::transpose_mha::transpose_mha::kdp"], [312, 4, 1, "_CPPv4N2jd13transpose_mhaD0Ev", "jd::transpose_mha::~transpose_mha"], [312, 3, 1, "_CPPv4N2jd18transpose_mha_descE", "jd::transpose_mha_desc"], [312, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc"], [312, 4, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv", "jd::transpose_mha_desc::transpose_mha_desc"], [312, 5, 1, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc", "jd::transpose_mha_desc::transpose_mha_desc::op_desc"], [312, 4, 1, "_CPPv4N2jd18transpose_mha_descD0Ev", "jd::transpose_mha_desc::~transpose_mha_desc"], [188, 9, 0, "-", "intel_extension_for_transformers"], [230, 9, 0, "-", "sparsity_all"], [231, 9, 0, "-", "test_add_cls_token"], [232, 9, 0, "-", "test_add_embeddings"], [233, 9, 0, "-", "test_attention_output_layer_norm_length_adaptive_keep_indices"], [234, 9, 0, "-", "test_attention_reshape"], [235, 9, 0, "-", "test_bert_mini_fp32"], [236, 9, 0, "-", "test_binary_op"], [237, 9, 0, "-", "test_binaryop"], [238, 9, 0, "-", "test_cast_to"], [239, 9, 0, "-", "test_concat"], [240, 9, 0, "-", "test_conv_reshape"], [241, 9, 0, "-", "test_decoder_attn_reshape"], [242, 9, 0, "-", "test_dispatcher_tuning_acc"], [243, 9, 0, "-", "test_dispatcher_tuning_throughput"], [244, 9, 0, "-", "test_dynamic_quantization"], [245, 9, 0, "-", "test_embedding"], [246, 9, 0, "-", "test_embeddingbag"], [247, 9, 0, "-", "test_execution_options"], [248, 9, 0, "-", "test_gelu"], [249, 9, 0, "-", "test_gpt_int8"], [250, 9, 0, "-", "test_graph_dispatch"], [251, 9, 0, "-", "test_insert_input_output_data"], [252, 9, 0, "-", "test_is_supported_onnx_graph"], [253, 9, 0, "-", "test_last_layer_shape"], [254, 9, 0, "-", "test_layer_norm_with_reduce_mean"], [255, 9, 0, "-", "test_layer_norm_with_transpose"], [256, 9, 0, "-", "test_layernorm"], [257, 9, 0, "-", "test_linear"], [258, 9, 0, "-", "test_linear_int8"], [259, 9, 0, "-", "test_main"], [260, 9, 0, "-", "test_matmul"], [261, 9, 0, "-", "test_matmul_int8"], [262, 9, 0, "-", "test_matmul_with_bias_relu"], [263, 9, 0, "-", "test_matmul_with_bias_sigmoid"], [264, 9, 0, "-", "test_matmul_with_bias_tanh"], [265, 9, 0, "-", "test_merged_embeddingbag"], [266, 9, 0, "-", "test_model"], [267, 9, 0, "-", "test_onnx_utils"], [268, 9, 0, "-", "test_operator_adaptor"], [269, 9, 0, "-", "test_ops"], [270, 9, 0, "-", "test_padding_seq"], [271, 9, 0, "-", "test_padding_sequence"], [272, 9, 0, "-", "test_pattern_dispatch"], [273, 9, 0, "-", "test_permute"], [274, 9, 0, "-", "test_position_embeddings"], [275, 9, 0, "-", "test_pow"], [276, 9, 0, "-", "test_primitive_cache_acc"], [277, 9, 0, "-", "test_primitive_cache_throughput"], [278, 9, 0, "-", "test_qkv_merge"], [279, 9, 0, "-", "test_qkv_reshape"], [280, 9, 0, "-", "test_quant_onnx_execute"], [281, 9, 0, "-", "test_reshape_after_restore_hidden_states"], [282, 9, 0, "-", "test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [283, 9, 0, "-", "test_reshape_before_restore_hidden_states"], [284, 9, 0, "-", "test_size"], [285, 9, 0, "-", "test_softmax"], [286, 9, 0, "-", "test_start_end_logits"], [287, 9, 0, "-", "test_tanh"], [288, 9, 0, "-", "test_text_encoder"], [289, 9, 0, "-", "test_text_encoder_bf16"], [290, 9, 0, "-", "test_tf_utils"], [291, 9, 0, "-", "test_token_type_embeddings"], [292, 9, 0, "-", "test_transpose"], [293, 9, 0, "-", "test_transpose_batch_matmul"], [294, 9, 0, "-", "test_unet"], [295, 9, 0, "-", "test_unet_bf16"], [296, 9, 0, "-", "test_unsqueeze"], [297, 9, 0, "-", "test_vae_decoder"], [298, 9, 0, "-", "test_vae_decoder_bf16"], [299, 9, 0, "-", "test_weight_sharing_acc"], [300, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_acc"], [301, 9, 0, "-", "test_weight_sharing_dispatcher_tuning_throughtput"], [302, 9, 0, "-", "test_weight_sharing_throughput"]], "intel_extension_for_transformers": [[0, 9, 0, "-", "api_doc_example"], [1, 9, 0, "-", "backends"], [183, 9, 0, "-", "evaluation"], [195, 9, 0, "-", "optimization"], [227, 9, 0, "-", "preprocessing"], [229, 9, 0, "-", "version"]], "intel_extension_for_transformers.api_doc_example": [[0, 10, 1, "", "ExampleClass"], [0, 11, 1, "", "attribute1"], [0, 13, 1, "", "function1"], [0, 13, 1, "", "function2"], [0, 13, 1, "", "function3"], [0, 13, 1, "", "generator1"], [0, 14, 1, "", "module_debug_level1"]], "intel_extension_for_transformers.api_doc_example.ExampleClass": [[0, 11, 1, "", "attr1"], [0, 11, 1, "", "attr2"], [0, 11, 1, "", "attr5"], [0, 12, 1, "", "method1"]], "intel_extension_for_transformers.backends": [[182, 9, 0, "-", "neural_engine"]], "intel_extension_for_transformers.backends.neural_engine": [[11, 9, 0, "-", "compile"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[2, 9, 0, "-", "compile"], [4, 9, 0, "-", "extractors"], [9, 9, 0, "-", "graph"], [10, 9, 0, "-", "graph_utils"], [12, 9, 0, "-", "loaders"], [14, 9, 0, "-", "logger"], [15, 9, 0, "-", "onnx_utils"], [36, 9, 0, "-", "ops"], [100, 9, 0, "-", "sub_graph"], [180, 9, 0, "-", "tf_utils"], [181, 9, 0, "-", "torch_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, 13, 1, "", "compile"], [2, 13, 1, "", "start_pipeline"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[3, 9, 0, "-", "extractor"], [5, 9, 0, "-", "onnx_extractor"], [6, 9, 0, "-", "tf_extractor"], [7, 9, 0, "-", "torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, 10, 1, "", "Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, 10, 1, "", "ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, 10, 1, "", "TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, 10, 1, "", "TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[8, 9, 0, "-", "graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, 10, 1, "", "Graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph": [[8, 12, 1, "", "add_config_item"], [8, 12, 1, "", "change_node_input_tensors"], [8, 12, 1, "", "change_node_output_tensors"], [8, 12, 1, "", "dump_tensor"], [8, 12, 1, "", "engine_init"], [8, 12, 1, "", "get_next_node_names"], [8, 12, 1, "", "get_node_by_name"], [8, 12, 1, "", "get_node_id"], [8, 12, 1, "", "get_pre_node_names"], [8, 12, 1, "", "get_sparse_nodes_name"], [8, 12, 1, "", "get_tensor_idx"], [8, 12, 1, "", "graph_dispatch"], [8, 12, 1, "", "graph_init"], [8, 12, 1, "", "inference"], [8, 12, 1, "", "inquire_config_item"], [8, 12, 1, "", "insert_nodes"], [8, 12, 1, "", "modify_node_connections"], [8, 12, 1, "", "remove_nodes"], [8, 12, 1, "", "rename_node"], [8, 12, 1, "", "save"], [8, 12, 1, "", "transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, 10, 1, "", "LazyImport"], [10, 13, 1, "", "autocast_init"], [10, 13, 1, "", "construct_node"], [10, 13, 1, "", "get_autocast_info"], [10, 13, 1, "", "get_data_dtype"], [10, 13, 1, "", "get_model_fwk_name"], [10, 13, 1, "", "get_quant_info"], [10, 13, 1, "", "insert_pattern"], [10, 13, 1, "", "insert_quant_info"], [10, 13, 1, "", "list2str"], [10, 13, 1, "", "names_from_input"], [10, 13, 1, "", "pattern_mapping"], [10, 13, 1, "", "pattern_mapping_conf_validation"], [10, 13, 1, "", "quant_info_init"], [10, 13, 1, "", "search_pattern"], [10, 13, 1, "", "search_straight_pattern"], [10, 13, 1, "", "set_autocast"], [10, 13, 1, "", "str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[13, 9, 0, "-", "loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, 10, 1, "", "Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, 10, 1, "", "Logger"], [14, 13, 1, "", "debug"], [14, 13, 1, "", "error"], [14, 13, 1, "", "fatal"], [14, 13, 1, "", "info"], [14, 13, 1, "", "log"], [14, 13, 1, "", "warn"], [14, 13, 1, "", "warning"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger": [[14, 12, 1, "", "get_logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, 13, 1, "", "bias_to_int32"], [15, 13, 1, "", "change_num_name"], [15, 13, 1, "", "get_children"], [15, 13, 1, "", "get_initializer_children_names"], [15, 13, 1, "", "get_node_children_names"], [15, 13, 1, "", "graph_node_names_details"], [15, 13, 1, "", "is_supported_onnx_graph"], [15, 13, 1, "", "is_supported_onnx_node"], [15, 13, 1, "", "onnx_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[16, 9, 0, "-", "all"], [17, 9, 0, "-", "assert"], [18, 9, 0, "-", "batch_matmul"], [19, 9, 0, "-", "batch_matmul_v2"], [20, 9, 0, "-", "bias_add"], [21, 9, 0, "-", "binary_op"], [22, 9, 0, "-", "cast"], [23, 9, 0, "-", "concat"], [24, 9, 0, "-", "conv"], [25, 9, 0, "-", "cos"], [26, 9, 0, "-", "empty_ops"], [27, 9, 0, "-", "expand_dims"], [28, 9, 0, "-", "fused_batch_matmul_v2"], [29, 9, 0, "-", "fused_batch_norm_v3"], [30, 9, 0, "-", "fused_gemm"], [31, 9, 0, "-", "fused_matmul"], [32, 9, 0, "-", "gather"], [33, 9, 0, "-", "gather_elements"], [34, 9, 0, "-", "gelu"], [35, 9, 0, "-", "gemm"], [37, 9, 0, "-", "iterator_get_next"], [38, 9, 0, "-", "iterator_v2"], [39, 9, 0, "-", "layer_normalization"], [40, 9, 0, "-", "log_softmax"], [41, 9, 0, "-", "map_and_batch_dataset"], [42, 9, 0, "-", "matmul"], [43, 9, 0, "-", "mean"], [44, 9, 0, "-", "mkl_layer_norm"], [45, 9, 0, "-", "model_dataset"], [46, 9, 0, "-", "one_hot"], [47, 9, 0, "-", "onnx_input"], [48, 9, 0, "-", "op"], [49, 9, 0, "-", "optimize_dataset"], [50, 9, 0, "-", "pack"], [51, 9, 0, "-", "padding_sequence"], [52, 9, 0, "-", "placeholder"], [53, 9, 0, "-", "pos_embed"], [54, 9, 0, "-", "pow"], [55, 9, 0, "-", "quantize_linear"], [56, 9, 0, "-", "quantize_v2"], [57, 9, 0, "-", "quantized_fused_matmul_and_dequantize"], [58, 9, 0, "-", "quantized_matmul_with_bias_and_dequantize"], [59, 9, 0, "-", "reduce_mean"], [60, 9, 0, "-", "reduce_sum"], [61, 9, 0, "-", "reorder"], [62, 9, 0, "-", "reshape"], [63, 9, 0, "-", "rsub"], [64, 9, 0, "-", "scatter_elements"], [65, 9, 0, "-", "shape"], [66, 9, 0, "-", "sin"], [67, 9, 0, "-", "size"], [68, 9, 0, "-", "slice"], [69, 9, 0, "-", "softmax"], [70, 9, 0, "-", "split"], [71, 9, 0, "-", "squeeze"], [72, 9, 0, "-", "strided_slice"], [73, 9, 0, "-", "tensor"], [74, 9, 0, "-", "top_k"], [75, 9, 0, "-", "transpose"], [76, 9, 0, "-", "unpack"], [77, 9, 0, "-", "unsqueeze"], [78, 9, 0, "-", "view"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, 10, 1, "", "All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All": [[16, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, 10, 1, "", "Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert": [[17, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, 10, 1, "", "BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul": [[18, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, 10, 1, "", "BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2": [[19, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, 10, 1, "", "BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd": [[20, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, 10, 1, "", "Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast": [[22, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, 10, 1, "", "Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat": [[23, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, 10, 1, "", "Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv": [[24, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, 10, 1, "", "Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos": [[25, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, 10, 1, "", "Add"], [26, 10, 1, "", "AddV2"], [26, 10, 1, "", "Arange"], [26, 10, 1, "", "BinaryAdd"], [26, 10, 1, "", "Constant"], [26, 10, 1, "", "ConstantOfShape"], [26, 10, 1, "", "Convolution"], [26, 10, 1, "", "CumSum"], [26, 10, 1, "", "Dequantize"], [26, 10, 1, "", "DequantizeLinear"], [26, 10, 1, "", "Einsum"], [26, 10, 1, "", "EmbeddingBag"], [26, 10, 1, "", "Erf"], [26, 10, 1, "", "Expand"], [26, 10, 1, "", "ExpandIndices"], [26, 10, 1, "", "Fill"], [26, 10, 1, "", "FlatMapDataset"], [26, 10, 1, "", "Flatten"], [26, 10, 1, "", "Floor_divide"], [26, 10, 1, "", "Identity"], [26, 10, 1, "", "InnerProduct"], [26, 10, 1, "", "Input"], [26, 10, 1, "", "LatRange"], [26, 10, 1, "", "ListConstruct"], [26, 10, 1, "", "ListUnpack"], [26, 10, 1, "", "Loop"], [26, 10, 1, "", "MakeIterator"], [26, 10, 1, "", "Masked_fill"], [26, 10, 1, "", "MatMulWithBias"], [26, 10, 1, "", "MatMulWithBiasAdd"], [26, 10, 1, "", "MatMulWithBiasGelu"], [26, 10, 1, "", "MatMulWithBiasRelu"], [26, 10, 1, "", "MatMulWithBiasSigmoid"], [26, 10, 1, "", "MatMulWithBiasTanh"], [26, 10, 1, "", "Matmul"], [26, 10, 1, "", "Max"], [26, 10, 1, "", "MergedEmbeddingbag"], [26, 10, 1, "", "Onehot"], [26, 10, 1, "", "OpAny"], [26, 10, 1, "", "Output"], [26, 10, 1, "", "PositionIds"], [26, 10, 1, "", "QLinearAdd"], [26, 10, 1, "", "QLinearMatMul"], [26, 10, 1, "", "QLinearMul"], [26, 10, 1, "", "Range"], [26, 10, 1, "", "RealDiv"], [26, 10, 1, "", "Reciprocal"], [26, 10, 1, "", "Relu"], [26, 10, 1, "", "Repeat"], [26, 10, 1, "", "Rsqrt"], [26, 10, 1, "", "SequenceLength"], [26, 10, 1, "", "Sigmoid"], [26, 10, 1, "", "Silu"], [26, 10, 1, "", "Sqrt"], [26, 10, 1, "", "Square"], [26, 10, 1, "", "SquaredDifference"], [26, 10, 1, "", "Stack"], [26, 10, 1, "", "StopGradient"], [26, 10, 1, "", "Tanh"], [26, 10, 1, "", "TensorSliceDataset"], [26, 10, 1, "", "Tile"], [26, 10, 1, "", "TokenTypeIds"], [26, 10, 1, "", "TransposeBatchMatMul"], [26, 10, 1, "", "Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, 10, 1, "", "ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims": [[27, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, 10, 1, "", "FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3": [[29, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, 10, 1, "", "FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm": [[30, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, 10, 1, "", "FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul": [[31, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, 10, 1, "", "Gather"], [32, 10, 1, "", "GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2": [[32, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, 10, 1, "", "GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements": [[33, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu": [[34, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, 10, 1, "", "Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm": [[35, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, 10, 1, "", "IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext": [[37, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, 10, 1, "", "IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2": [[38, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, 10, 1, "", "LayerNorm"], [39, 10, 1, "", "LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization": [[39, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, 10, 1, "", "LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax": [[40, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, 10, 1, "", "MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset": [[41, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, 10, 1, "", "MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul": [[42, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, 10, 1, "", "Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean": [[43, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, 10, 1, "", "ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset": [[45, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, 10, 1, "", "OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot": [[46, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, 10, 1, "", "ONNXINPUT"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT": [[47, 12, 1, "", "extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, 10, 1, "", "Operator"], [48, 13, 1, "", "operator_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator": [[48, 12, 1, "", "construct"], [48, 12, 1, "", "extract"], [48, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, 10, 1, "", "OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset": [[49, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, 10, 1, "", "Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack": [[50, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence": [[51, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, 10, 1, "", "Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder": [[52, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, 10, 1, "", "PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding": [[53, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, 10, 1, "", "Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow": [[54, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, 10, 1, "", "Quantize"], [55, 10, 1, "", "QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear": [[55, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, 10, 1, "", "QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2": [[56, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, 10, 1, "", "QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize": [[58, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, 10, 1, "", "ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean": [[59, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, 10, 1, "", "ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum": [[60, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, 10, 1, "", "Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder": [[61, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, 10, 1, "", "Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape": [[62, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, 10, 1, "", "Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub": [[63, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, 10, 1, "", "ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements": [[64, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, 10, 1, "", "Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape": [[65, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, 10, 1, "", "Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin": [[66, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, 10, 1, "", "Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size": [[67, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, 10, 1, "", "Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax": [[69, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, 10, 1, "", "Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split": [[70, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, 10, 1, "", "Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze": [[71, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, 10, 1, "", "StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice": [[72, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, 10, 1, "", "Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, 10, 1, "", "TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK": [[74, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, 10, 1, "", "Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose": [[75, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, 10, 1, "", "Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack": [[76, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, 10, 1, "", "Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze": [[77, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, 10, 1, "", "View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View": [[78, 12, 1, "", "set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[79, 9, 0, "-", "InnerproductReshapeFusion"], [80, 9, 0, "-", "add_cls_token"], [81, 9, 0, "-", "add_embeddings"], [82, 9, 0, "-", "arangewithreciprocal"], [83, 9, 0, "-", "attentionBlock_AttentionMaskAddReshape"], [84, 9, 0, "-", "attentionBlock_ConstantOfShapeWithMul"], [85, 9, 0, "-", "attentionBlock_QKVPreReshape"], [86, 9, 0, "-", "attentionBlock_QKVReshape"], [87, 9, 0, "-", "attentionBlock_Resize2Gather"], [88, 9, 0, "-", "attentionBlock_WeightReshapeTo4D"], [89, 9, 0, "-", "attention_mask_length_adaptive_keep_indices"], [90, 9, 0, "-", "attention_output_layer_norm_length_adaptive_keep_indices"], [91, 9, 0, "-", "attention_reshape"], [92, 9, 0, "-", "cast_to"], [93, 9, 0, "-", "collect_quant_info"], [94, 9, 0, "-", "conv_reshape"], [95, 9, 0, "-", "decoder_attn_reshape"], [96, 9, 0, "-", "einsumwitharange"], [97, 9, 0, "-", "embeddingbag"], [98, 9, 0, "-", "gelu"], [99, 9, 0, "-", "generate_sequence"], [101, 9, 0, "-", "innerproductwithbiasgelu"], [102, 9, 0, "-", "innerproductwithslice"], [103, 9, 0, "-", "input_data"], [104, 9, 0, "-", "input_file"], [105, 9, 0, "-", "insert_bf16_node"], [106, 9, 0, "-", "insert_quant_node"], [107, 9, 0, "-", "int8_bf16_mixed_precision_checker"], [108, 9, 0, "-", "interact_features"], [109, 9, 0, "-", "last_layer_shape"], [110, 9, 0, "-", "layer_norm"], [111, 9, 0, "-", "layer_norm_with_reduce_mean"], [112, 9, 0, "-", "layer_norm_with_transpose"], [113, 9, 0, "-", "lower_all_tuples"], [114, 9, 0, "-", "matmul_with_bias"], [115, 9, 0, "-", "matmul_with_bias_add"], [116, 9, 0, "-", "matmul_with_bias_gelu"], [117, 9, 0, "-", "matmul_with_bias_relu"], [118, 9, 0, "-", "matmul_with_bias_sigmoid"], [119, 9, 0, "-", "matmul_with_bias_tanh"], [120, 9, 0, "-", "matmul_with_transpose"], [121, 9, 0, "-", "merged_embeddingbag"], [122, 9, 0, "-", "multi_head_attention"], [123, 9, 0, "-", "operator_adaptor"], [124, 9, 0, "-", "output_data"], [125, 9, 0, "-", "padding_sequence"], [126, 9, 0, "-", "pattern"], [127, 9, 0, "-", "position_embeddings"], [128, 9, 0, "-", "position_embeddings_v1"], [129, 9, 0, "-", "qkv_merge"], [130, 9, 0, "-", "qkv_reshape"], [131, 9, 0, "-", "quantize_fusion"], [132, 9, 0, "-", "quantized_graph_dtype_refactor"], [133, 9, 0, "-", "remove_constant_op"], [134, 9, 0, "-", "remove_last_view"], [135, 9, 0, "-", "remove_range"], [136, 9, 0, "-", "removeslice"], [137, 9, 0, "-", "reshape_after_restore_hidden_states"], [138, 9, 0, "-", "reshape_before_and_after_attention_out_layer_norm_gather_elements"], [139, 9, 0, "-", "reshape_before_restore_hidden_states"], [140, 9, 0, "-", "reshape_fusion"], [141, 9, 0, "-", "resnetBlock_instancenormReshapeFromConv"], [142, 9, 0, "-", "resnetBlock_instancenormReshapeFromdiv"], [143, 9, 0, "-", "restnetBlock_groupNorm"], [144, 9, 0, "-", "restore_hidden_states_in_length_adaptive_update_indices"], [145, 9, 0, "-", "rotary_pos_emb"], [146, 9, 0, "-", "slicemask"], [147, 9, 0, "-", "stableDiffusion_ReshapeFusion"], [148, 9, 0, "-", "stableDiffusion_bf16Convert"], [149, 9, 0, "-", "start_end_logits"], [150, 9, 0, "-", "subgraph_matcher"], [151, 9, 0, "-", "textEncdoer_word_embedding"], [152, 9, 0, "-", "textEncoder_AttentionMaskAddReshape"], [153, 9, 0, "-", "textEncoder_AttentionReshape"], [154, 9, 0, "-", "textEncoder_KVReshape"], [155, 9, 0, "-", "textEncoder_MulReshape"], [156, 9, 0, "-", "textEncoder_QReshape"], [157, 9, 0, "-", "textEncoder_SoftmaxReshape"], [158, 9, 0, "-", "textEncoder_causal_attention_mask"], [159, 9, 0, "-", "token_type_embeddings"], [160, 9, 0, "-", "token_type_embeddings_v1"], [161, 9, 0, "-", "torch_embedding"], [162, 9, 0, "-", "torch_ip_insert_bias"], [163, 9, 0, "-", "torchinsertbf16node"], [164, 9, 0, "-", "torchpaddingsquence"], [165, 9, 0, "-", "transformer2Dmodel_AttentionMaskAddReshape"], [166, 9, 0, "-", "transformer2Dmodel_ConstantOfShapeWithMul"], [167, 9, 0, "-", "transformer2Dmodel_FFNSlice"], [168, 9, 0, "-", "transformer2Dmodel_FFNSlice_1"], [169, 9, 0, "-", "transformer2Dmodel_QKVPreReshape"], [170, 9, 0, "-", "transformer2Dmodel_QKVReshape"], [171, 9, 0, "-", "transformer2Dmodel_QKVReshape4D"], [172, 9, 0, "-", "transformer2Dmodel_encoderHiddenStatesReshape"], [173, 9, 0, "-", "transformer2Dmodel_getSampleBatch"], [174, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromAdd"], [175, 9, 0, "-", "transformer2Dmodel_instancenormReshapeFromConcat"], [176, 9, 0, "-", "transformer2Dmodel_sampleSlice"], [177, 9, 0, "-", "transformer2Dmodel_upBlockResize"], [178, 9, 0, "-", "transpose_batch_matmul"], [179, 9, 0, "-", "word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, 10, 1, "", "InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, 10, 1, "", "AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, 10, 1, "", "AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, 10, 1, "", "ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, 10, 1, "", "AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, 10, 1, "", "AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, 10, 1, "", "AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, 10, 1, "", "AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, 10, 1, "", "AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, 10, 1, "", "AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, 10, 1, "", "AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, 10, 1, "", "AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, 10, 1, "", "AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, 10, 1, "", "CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, 10, 1, "", "CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, 10, 1, "", "ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, 10, 1, "", "DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, 10, 1, "", "EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, 10, 1, "", "EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, 10, 1, "", "Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, 10, 1, "", "GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, 10, 1, "", "InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, 10, 1, "", "InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, 10, 1, "", "InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, 10, 1, "", "InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, 10, 1, "", "InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, 10, 1, "", "InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, 10, 1, "", "Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, 10, 1, "", "InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, 10, 1, "", "LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, 10, 1, "", "LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, 10, 1, "", "LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, 10, 1, "", "LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[113, 10, 1, "", "LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[114, 10, 1, "", "MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[115, 10, 1, "", "MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[116, 10, 1, "", "MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[117, 10, 1, "", "MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[118, 10, 1, "", "MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[119, 10, 1, "", "MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[120, 10, 1, "", "MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[121, 10, 1, "", "MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[122, 10, 1, "", "MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[123, 10, 1, "", "OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[124, 10, 1, "", "OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[125, 10, 1, "", "PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[126, 10, 1, "", "Pattern"], [126, 13, 1, "", "pattern_registry"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[127, 10, 1, "", "PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[128, 10, 1, "", "PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[129, 10, 1, "", "QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[130, 10, 1, "", "QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[131, 10, 1, "", "QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[132, 10, 1, "", "QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[133, 10, 1, "", "RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[134, 10, 1, "", "RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, 10, 1, "", "RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, 10, 1, "", "RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, 10, 1, "", "ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, 10, 1, "", "ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, 10, 1, "", "ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, 10, 1, "", "ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[141, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[142, 10, 1, "", "ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[143, 10, 1, "", "GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, 10, 1, "", "RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, 10, 1, "", "RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, 10, 1, "", "SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[147, 10, 1, "", "StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[148, 10, 1, "", "StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, 10, 1, "", "StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, 10, 1, "", "SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[151, 10, 1, "", "TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[152, 10, 1, "", "TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[153, 10, 1, "", "TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[154, 10, 1, "", "TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[155, 10, 1, "", "TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[156, 10, 1, "", "TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[157, 10, 1, "", "TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[158, 10, 1, "", "TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, 10, 1, "", "TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, 10, 1, "", "TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, 10, 1, "", "TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, 10, 1, "", "TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, 10, 1, "", "TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, 10, 1, "", "TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[165, 10, 1, "", "Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[166, 10, 1, "", "Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[167, 10, 1, "", "Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[168, 10, 1, "", "Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[169, 10, 1, "", "Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[170, 10, 1, "", "Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[171, 10, 1, "", "Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[172, 10, 1, "", "Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[173, 10, 1, "", "Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[174, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[175, 10, 1, "", "Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[176, 10, 1, "", "Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[177, 10, 1, "", "Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, 10, 1, "", "TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, 10, 1, "", "WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, 14, 1, "", "TF_DTYPE_ID"], [180, 13, 1, "", "create_tf_node"], [180, 13, 1, "", "get_tensor_dest_op"], [180, 13, 1, "", "graph_node_names_details"], [180, 13, 1, "", "tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, 13, 1, "", "torch_extract_operator"]], "intel_extension_for_transformers.evaluation": [[185, 9, 0, "-", "lm_evaluation_harness"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness": [[184, 9, 0, "-", "evaluator"], [187, 9, 0, "-", "models"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator": [[184, 13, 1, "", "evaluate"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models": [[186, 9, 0, "-", "huggingface"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface": [[186, 10, 1, "", "AutoCausalLM"], [186, 10, 1, "", "AutoSeq2SeqLM"], [186, 10, 1, "", "MultiTokenEOSCriteria"]], "intel_extension_for_transformers.optimization": [[189, 9, 0, "-", "benchmark"], [190, 9, 0, "-", "config"], [191, 9, 0, "-", "distillation"], [194, 9, 0, "-", "dynamic"], [197, 9, 0, "-", "mixture"], [198, 9, 0, "-", "model"], [200, 9, 0, "-", "nas"], [202, 9, 0, "-", "optimizer"], [203, 9, 0, "-", "optimizer_tf"], [204, 9, 0, "-", "pipeline"], [205, 9, 0, "-", "pruning"], [207, 9, 0, "-", "pytorch_pruner"], [215, 9, 0, "-", "quantization"], [216, 9, 0, "-", "trainer"], [218, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.benchmark": [[189, 13, 1, "", "benchmark"], [189, 13, 1, "", "get_example_inputs"], [189, 13, 1, "", "preprocess_model"], [189, 13, 1, "", "refactor_batch_size"]], "intel_extension_for_transformers.optimization.config": [[190, 10, 1, "", "AutoDistillationConfig"], [190, 10, 1, "", "BenchmarkConfig"], [190, 10, 1, "", "DistillationConfig"], [190, 10, 1, "", "DynamicLengthConfig"], [190, 10, 1, "", "FlashDistillationConfig"], [190, 10, 1, "", "NASConfig"], [190, 10, 1, "", "Provider"], [190, 10, 1, "", "PrunerV2"], [190, 10, 1, "", "PruningConfig"], [190, 10, 1, "", "QuantizationConfig"], [190, 10, 1, "", "TFDistillationConfig"], [190, 10, 1, "", "WeightPruningConfig"], [190, 13, 1, "", "check_value"]], "intel_extension_for_transformers.optimization.config.PruningConfig": [[190, 12, 1, "", "init_prune_config"]], "intel_extension_for_transformers.optimization.distillation": [[191, 10, 1, "", "Criterion"], [191, 10, 1, "", "DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.dynamic": [[192, 9, 0, "-", "drop_and_restore_utils"], [193, 9, 0, "-", "evolution"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[192, 13, 1, "", "sample_layer_configuration"], [192, 13, 1, "", "sample_length_configuration"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[193, 10, 1, "", "Evolution"], [193, 13, 1, "", "approx_ratio"], [193, 13, 1, "", "inverse"], [193, 13, 1, "", "store2str"]], "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution": [[193, 12, 1, "", "add_gene"], [193, 12, 1, "", "convex_hull"], [193, 12, 1, "", "crossover"], [193, 12, 1, "", "get_store"], [193, 12, 1, "", "load_store"], [193, 12, 1, "", "mutate"], [193, 12, 1, "", "pareto_frontier"], [193, 12, 1, "", "save_population"], [193, 12, 1, "", "save_store"], [193, 12, 1, "", "set_lower_constraint"], [193, 12, 1, "", "set_upper_constraint"]], "intel_extension_for_transformers.optimization.mixture": [[196, 9, 0, "-", "auto_distillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[196, 10, 1, "", "AutoDistillation"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation": [[196, 12, 1, "", "create_distillers"], [196, 12, 1, "", "estimate"], [196, 12, 1, "", "init_by_cfg"], [196, 12, 1, "", "load_search_results"], [196, 12, 1, "", "search"]], "intel_extension_for_transformers.optimization.model": [[198, 10, 1, "", "OptimizedModel"]], "intel_extension_for_transformers.optimization.model.OptimizedModel": [[198, 12, 1, "", "from_pretrained"]], "intel_extension_for_transformers.optimization.nas": [[199, 9, 0, "-", "basic_nas"], [201, 9, 0, "-", "nas"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[199, 10, 1, "", "BasicNAS"]], "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS": [[199, 12, 1, "", "estimate"], [199, 12, 1, "", "execute"], [199, 12, 1, "", "init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.nas": [[201, 10, 1, "", "NAS"]], "intel_extension_for_transformers.optimization.optimizer": [[202, 10, 1, "", "NoTrainerOptimizer"], [202, 10, 1, "", "Orchestrate_optimizer"]], "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer": [[202, 12, 1, "", "distill"], [202, 12, 1, "", "init_distiller"], [202, 12, 1, "", "init_pruner"], [202, 12, 1, "", "init_quantizer"], [202, 12, 1, "", "prune"], [202, 12, 1, "", "quantize"], [202, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer": [[202, 12, 1, "", "fit"], [202, 12, 1, "", "save_model"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[203, 10, 1, "", "TFOptimization"]], "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization": [[203, 12, 1, "", "autodistill"], [203, 12, 1, "", "build_train_func"], [203, 12, 1, "", "builtin_eval_func"], [203, 12, 1, "", "distill"], [203, 12, 1, "", "init_distiller"], [203, 12, 1, "", "init_pruner"], [203, 12, 1, "", "init_quantizer"], [203, 12, 1, "", "model_builder_builtin"], [203, 12, 1, "", "prune"], [203, 12, 1, "", "quantize"]], "intel_extension_for_transformers.optimization.pipeline": [[204, 13, 1, "", "infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pruning": [[205, 10, 1, "", "PrunerConfig"], [205, 10, 1, "", "PruningMode"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[206, 9, 0, "-", "criteria"], [208, 9, 0, "-", "logger"], [209, 9, 0, "-", "patterns"], [210, 9, 0, "-", "pruners"], [211, 9, 0, "-", "pruning"], [212, 9, 0, "-", "regs"], [213, 9, 0, "-", "schedulers"], [214, 9, 0, "-", "utils"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[206, 10, 1, "", "GradientCriterion"], [206, 10, 1, "", "MagnitudeCriterion"], [206, 10, 1, "", "PruningCriterion"], [206, 10, 1, "", "SnipCriterion"], [206, 10, 1, "", "SnipMomentumCriterion"], [206, 13, 1, "", "get_criterion"], [206, 13, 1, "", "register_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion": [[206, 12, 1, "", "on_before_optimizer_step"], [206, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion": [[206, 12, 1, "", "on_step_begin"], [206, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion": [[206, 12, 1, "", "on_after_optimizer_step"], [206, 12, 1, "", "on_before_optimizer_step"], [206, 12, 1, "", "on_step_begin"], [206, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion": [[206, 12, 1, "", "on_before_optimizer_step"], [206, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion": [[206, 12, 1, "", "on_before_optimizer_step"], [206, 11, 1, "", "scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[209, 10, 1, "", "BasePattern"], [209, 10, 1, "", "PatternNInM"], [209, 10, 1, "", "PatternNxM"], [209, 13, 1, "", "get_pattern"], [209, 13, 1, "", "register_pattern"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern": [[209, 12, 1, "", "adjust_ratio"], [209, 12, 1, "", "check_layer_validity"], [209, 11, 1, "", "config"], [209, 12, 1, "", "get_block_size_dict"], [209, 12, 1, "", "get_masks"], [209, 12, 1, "", "get_masks_global"], [209, 12, 1, "", "get_masks_local"], [209, 12, 1, "", "get_pattern_lock_masks"], [209, 12, 1, "", "get_reduced_masks_from_data"], [209, 12, 1, "", "get_single_mask_per_target_ratio"], [209, 12, 1, "", "get_sparsity_ratio"], [209, 12, 1, "", "get_sparsity_ratio_each_layer"], [209, 11, 1, "", "invalid_layers"], [209, 11, 1, "", "is_global"], [209, 11, 1, "", "keep_mask_layers"], [209, 11, 1, "", "max_sparsity_ratio_per_op"], [209, 11, 1, "", "min_sparsity_ratio_per_op"], [209, 11, 1, "", "modules"], [209, 11, 1, "", "pattern"], [209, 12, 1, "", "reduce_tensor"], [209, 11, 1, "", "target_sparsity"], [209, 12, 1, "", "update_residual_cnt"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM": [[209, 11, 1, "", "M"], [209, 11, 1, "", "N"], [209, 12, 1, "", "check_layer_validity"], [209, 12, 1, "", "get_ele_mask_per_threshold"], [209, 12, 1, "", "get_least_ninm_mask_from_data"], [209, 12, 1, "", "get_masks_global"], [209, 12, 1, "", "get_pattern_lock_masks"], [209, 12, 1, "", "get_reduced_masks_from_data"], [209, 12, 1, "", "get_sparsity_ratio"], [209, 12, 1, "", "reduce_scores"], [209, 12, 1, "", "reshape_orig_to_pattern"], [209, 12, 1, "", "reshape_reduced_to_orig"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM": [[209, 11, 1, "", "block_size"], [209, 12, 1, "", "check_layer_validity"], [209, 12, 1, "", "count_new_masked_cnts"], [209, 12, 1, "", "get_block_size_dict"], [209, 12, 1, "", "get_mask_per_threshold"], [209, 12, 1, "", "get_masks_global"], [209, 12, 1, "", "get_pattern_lock_masks"], [209, 12, 1, "", "get_reduced_masks_from_data"], [209, 12, 1, "", "get_sparsity_ratio"], [209, 12, 1, "", "get_sparsity_ratio_progressive"], [209, 12, 1, "", "reduce_scores"], [209, 12, 1, "", "reshape_orig_to_pattern"], [209, 12, 1, "", "reshape_reduced_to_orig"], [209, 12, 1, "", "update_new_added_masks"], [209, 12, 1, "", "update_progressive_masks"], [209, 12, 1, "", "update_progressive_masks_global"], [209, 12, 1, "", "update_progressive_masks_linear"], [209, 12, 1, "", "update_progressive_masks_local"], [209, 12, 1, "", "update_progressive_masks_scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[210, 10, 1, "", "BasePruner"], [210, 10, 1, "", "BasicPruner"], [210, 10, 1, "", "PatternLockPruner"], [210, 10, 1, "", "ProgressivePruner"], [210, 13, 1, "", "get_pruner"], [210, 13, 1, "", "parse_valid_pruner_types"], [210, 13, 1, "", "register_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner": [[210, 12, 1, "", "check_is_pruned_step"], [210, 11, 1, "", "config"], [210, 11, 1, "", "current_sparsity_ratio"], [210, 11, 1, "", "end_step"], [210, 11, 1, "", "global_step"], [210, 12, 1, "", "mask_weights"], [210, 12, 1, "", "mask_weights_general"], [210, 11, 1, "", "masks"], [210, 11, 1, "", "max_sparsity_ratio_per_op"], [210, 11, 1, "", "modules"], [210, 12, 1, "", "on_after_eval"], [210, 12, 1, "", "on_after_optimizer_step"], [210, 12, 1, "", "on_before_eval"], [210, 12, 1, "", "on_before_optimizer_step"], [210, 12, 1, "", "on_epoch_begin"], [210, 12, 1, "", "on_epoch_end"], [210, 12, 1, "", "on_step_begin"], [210, 12, 1, "", "on_step_end"], [210, 12, 1, "", "on_train_begin"], [210, 12, 1, "", "on_train_end"], [210, 11, 1, "", "pattern"], [210, 11, 1, "", "pruning_frequency"], [210, 11, 1, "", "scheduler"], [210, 11, 1, "", "scores"], [210, 11, 1, "", "start_step"], [210, 11, 1, "", "target_sparsity_ratio"], [210, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner": [[210, 11, 1, "", "criterion"], [210, 12, 1, "", "on_after_optimizer_step"], [210, 12, 1, "", "on_before_optimizer_step"], [210, 11, 1, "", "pattern"], [210, 11, 1, "", "reg"], [210, 11, 1, "", "scheduler"], [210, 12, 1, "", "set_global_step"], [210, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner": [[210, 12, 1, "", "on_after_optimizer_step"], [210, 12, 1, "", "update_masks"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner": [[210, 12, 1, "", "check_is_pruned_progressive_step"], [210, 12, 1, "", "check_progressive_validity"], [210, 12, 1, "", "on_after_optimizer_step"], [210, 12, 1, "", "on_before_optimizer_step"], [210, 12, 1, "", "on_step_begin"], [210, 12, 1, "", "print_progressive_sparsity"], [210, 12, 1, "", "update_masks_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[211, 10, 1, "", "Pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning": [[211, 11, 1, "", "config_file_path"], [211, 12, 1, "", "get_sparsity_ratio"], [211, 11, 1, "", "model"], [211, 12, 1, "", "on_after_eval"], [211, 12, 1, "", "on_after_optimizer_step"], [211, 12, 1, "", "on_before_eval"], [211, 12, 1, "", "on_before_optimizer_step"], [211, 12, 1, "", "on_epoch_begin"], [211, 12, 1, "", "on_epoch_end"], [211, 12, 1, "", "on_step_begin"], [211, 12, 1, "", "on_step_end"], [211, 12, 1, "", "on_train_begin"], [211, 12, 1, "", "on_train_end"], [211, 11, 1, "", "pruner_info"], [211, 11, 1, "", "pruners"], [211, 12, 1, "", "update_config"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[212, 10, 1, "", "BaseReg"], [212, 10, 1, "", "GroupLasso"], [212, 13, 1, "", "get_reg"], [212, 13, 1, "", "get_reg_type"], [212, 13, 1, "", "register_reg"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg": [[212, 12, 1, "", "on_after_optimizer_step"], [212, 12, 1, "", "on_before_optimizer_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso": [[212, 11, 1, "", "alpha"], [212, 12, 1, "", "on_after_optimizer_step"], [212, 12, 1, "", "on_before_optimizer_step"], [212, 11, 1, "", "reg_terms"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[213, 10, 1, "", "IterativeScheduler"], [213, 10, 1, "", "OneshotScheduler"], [213, 10, 1, "", "PruningScheduler"], [213, 13, 1, "", "get_scheduler"], [213, 13, 1, "", "register_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler": [[213, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler": [[213, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler": [[213, 11, 1, "", "config"], [213, 12, 1, "", "update_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[214, 13, 1, "", "check_config"], [214, 13, 1, "", "check_key_validity"], [214, 13, 1, "", "parse_to_prune"], [214, 13, 1, "", "process_and_check_config"], [214, 13, 1, "", "process_config"], [214, 13, 1, "", "process_weight_config"], [214, 13, 1, "", "process_yaml_config"], [214, 13, 1, "", "reset_none_to_default"], [214, 13, 1, "", "update_params"]], "intel_extension_for_transformers.optimization.quantization": [[215, 10, 1, "", "QuantizationMode"]], "intel_extension_for_transformers.optimization.trainer": [[216, 10, 1, "", "BaseTrainer"], [216, 10, 1, "", "NLPSeq2SeqTrainer"], [216, 10, 1, "", "NLPTrainer"]], "intel_extension_for_transformers.optimization.trainer.BaseTrainer": [[216, 12, 1, "", "auto_distil_evaluation_loop"], [216, 12, 1, "", "autodistillation"], [216, 12, 1, "", "benchmark"], [216, 12, 1, "", "builtin_eval_func"], [216, 12, 1, "", "builtin_train_func"], [216, 12, 1, "", "compute_loss"], [216, 12, 1, "", "create_optimizer_builtin"], [216, 12, 1, "", "distill"], [216, 12, 1, "", "export_to_bf16_onnx"], [216, 12, 1, "", "export_to_fp32_onnx"], [216, 12, 1, "", "export_to_int8_onnx"], [216, 12, 1, "", "export_to_jit"], [216, 12, 1, "", "export_to_onnx"], [216, 12, 1, "", "init_distiller"], [216, 12, 1, "", "init_pruner"], [216, 12, 1, "", "init_quantizer"], [216, 12, 1, "", "model_builder_builtin"], [216, 12, 1, "", "nas"], [216, 12, 1, "", "orchestrate_optimizations"], [216, 12, 1, "", "prune"], [216, 12, 1, "", "quantize"], [216, 12, 1, "", "run_evolutionary_search"], [216, 12, 1, "", "set_dynamic_config"], [216, 12, 1, "", "train"], [216, 12, 1, "", "training_step"], [216, 12, 1, "", "training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer": [[216, 12, 1, "", "builtin_eval_func"]], "intel_extension_for_transformers.optimization.utils": [[217, 9, 0, "-", "get_throughput"], [219, 9, 0, "-", "metrics"], [220, 9, 0, "-", "models"], [223, 9, 0, "-", "objectives"], [224, 9, 0, "-", "utility"], [225, 9, 0, "-", "utility_tf"]], "intel_extension_for_transformers.optimization.utils.metrics": [[219, 10, 1, "", "Metric"]], "intel_extension_for_transformers.optimization.utils.models": [[221, 9, 0, "-", "modeling_bert_dynamic"], [222, 9, 0, "-", "modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[221, 10, 1, "", "BertAttention"], [221, 10, 1, "", "BertEmbeddings"], [221, 10, 1, "", "BertEncoder"], [221, 10, 1, "", "BertForMaskedLM"], [221, 10, 1, "", "BertForMultipleChoice"], [221, 10, 1, "", "BertForNextSentencePrediction"], [221, 10, 1, "", "BertForPreTraining"], [221, 10, 1, "", "BertForPreTrainingOutput"], [221, 10, 1, "", "BertForQuestionAnswering"], [221, 10, 1, "", "BertForSequenceClassification"], [221, 10, 1, "", "BertForTokenClassification"], [221, 10, 1, "", "BertIntermediate"], [221, 10, 1, "", "BertLMHeadModel"], [221, 10, 1, "", "BertLMPredictionHead"], [221, 10, 1, "", "BertLayer"], [221, 10, 1, "", "BertModel"], [221, 10, 1, "", "BertOnlyMLMHead"], [221, 10, 1, "", "BertOnlyNSPHead"], [221, 10, 1, "", "BertOutput"], [221, 10, 1, "", "BertPooler"], [221, 10, 1, "", "BertPreTrainedModel"], [221, 10, 1, "", "BertPreTrainingHeads"], [221, 10, 1, "", "BertPredictionHeadTransform"], [221, 10, 1, "", "BertSelfAttention"], [221, 10, 1, "", "BertSelfOutput"], [221, 13, 1, "", "expand_gather"], [221, 13, 1, "", "load_tf_weights_in_bert"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention": [[221, 12, 1, "", "forward"], [221, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM": [[221, 12, 1, "", "forward"], [221, 12, 1, "", "get_output_embeddings"], [221, 12, 1, "", "prepare_inputs_for_generation"], [221, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining": [[221, 12, 1, "", "forward"], [221, 12, 1, "", "get_output_embeddings"], [221, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel": [[221, 12, 1, "", "forward"], [221, 12, 1, "", "get_output_embeddings"], [221, 12, 1, "", "prepare_inputs_for_generation"], [221, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer": [[221, 12, 1, "", "feed_forward_chunk"], [221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel": [[221, 12, 1, "", "forward"], [221, 12, 1, "", "get_input_embeddings"], [221, 12, 1, "", "set_input_embeddings"], [221, 12, 1, "", "set_length_config"], [221, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention": [[221, 12, 1, "", "forward"], [221, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput": [[221, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[222, 10, 1, "", "RobertaAttention"], [222, 10, 1, "", "RobertaClassificationHead"], [222, 10, 1, "", "RobertaEmbeddings"], [222, 10, 1, "", "RobertaEncoder"], [222, 10, 1, "", "RobertaForCausalLM"], [222, 10, 1, "", "RobertaForMaskedLM"], [222, 10, 1, "", "RobertaForMultipleChoice"], [222, 10, 1, "", "RobertaForQuestionAnswering"], [222, 10, 1, "", "RobertaForSequenceClassification"], [222, 10, 1, "", "RobertaForTokenClassification"], [222, 10, 1, "", "RobertaIntermediate"], [222, 10, 1, "", "RobertaLMHead"], [222, 10, 1, "", "RobertaLayer"], [222, 10, 1, "", "RobertaModel"], [222, 10, 1, "", "RobertaOutput"], [222, 10, 1, "", "RobertaPooler"], [222, 10, 1, "", "RobertaPreTrainedModel"], [222, 10, 1, "", "RobertaSelfAttention"], [222, 10, 1, "", "RobertaSelfOutput"], [222, 13, 1, "", "create_position_ids_from_input_ids"], [222, 13, 1, "", "expand_gather"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention": [[222, 12, 1, "", "forward"], [222, 12, 1, "", "prune_heads"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings": [[222, 12, 1, "", "create_position_ids_from_inputs_embeds"], [222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM": [[222, 12, 1, "", "forward"], [222, 12, 1, "", "get_output_embeddings"], [222, 12, 1, "", "prepare_inputs_for_generation"], [222, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM": [[222, 12, 1, "", "forward"], [222, 12, 1, "", "get_output_embeddings"], [222, 12, 1, "", "set_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer": [[222, 12, 1, "", "feed_forward_chunk"], [222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel": [[222, 12, 1, "", "forward"], [222, 12, 1, "", "get_input_embeddings"], [222, 12, 1, "", "set_input_embeddings"], [222, 12, 1, "", "set_length_config"], [222, 12, 1, "", "set_output_attentions"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel": [[222, 12, 1, "", "update_keys_to_ignore"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention": [[222, 12, 1, "", "forward"], [222, 12, 1, "", "transpose_for_scores"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput": [[222, 12, 1, "", "forward"]], "intel_extension_for_transformers.optimization.utils.objectives": [[223, 10, 1, "", "Objective"]], "intel_extension_for_transformers.optimization.utils.objectives.Objective": [[223, 12, 1, "", "modelsize"], [223, 12, 1, "", "performance"]], "intel_extension_for_transformers.optimization.utils.utility": [[224, 13, 1, "", "distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[225, 10, 1, "", "TFDataloader"], [225, 13, 1, "", "distributed_init"], [225, 13, 1, "", "get_filepath"], [225, 13, 1, "", "keras2SavedModel"]], "intel_extension_for_transformers.preprocessing": [[226, 9, 0, "-", "data_augmentation"], [228, 9, 0, "-", "utils"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[226, 10, 1, "", "DataAugmentation"]], "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation": [[226, 12, 1, "", "data_augment"], [226, 12, 1, "", "mit_data_augmentation"], [226, 12, 1, "", "text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing.utils": [[228, 10, 1, "", "AugmenterType"], [228, 13, 1, "", "get_augmenter_from_type"]], "test_add_cls_token": [[231, 10, 1, "", "TestAddClsToken"]], "test_add_cls_token.TestAddClsToken": [[231, 12, 1, "", "setUpClass"], [231, 12, 1, "", "tearDownClass"]], "test_add_embeddings": [[232, 10, 1, "", "TestAddEmbeddings"]], "test_add_embeddings.TestAddEmbeddings": [[232, 12, 1, "", "setUpClass"], [232, 12, 1, "", "tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[233, 10, 1, "", "TestAttentionReshape"]], "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape": [[233, 12, 1, "", "setUpClass"], [233, 12, 1, "", "tearDownClass"]], "test_attention_reshape": [[234, 10, 1, "", "TestAttentionReshape"]], "test_attention_reshape.TestAttentionReshape": [[234, 12, 1, "", "setUpClass"], [234, 12, 1, "", "tearDownClass"]], "test_bert_mini_fp32": [[235, 10, 1, "", "TestTorchModel"]], "test_bert_mini_fp32.TestTorchModel": [[235, 12, 1, "", "setUpClass"], [235, 12, 1, "", "tearDownClass"]], "test_binary_op": [[236, 10, 1, "", "TestBinaryOp"]], "test_binary_op.TestBinaryOp": [[236, 12, 1, "", "setUpClass"], [236, 12, 1, "", "tearDownClass"]], "test_binaryop": [[237, 10, 1, "", "TestTorchOP"]], "test_binaryop.TestTorchOP": [[237, 12, 1, "", "setUpClass"], [237, 12, 1, "", "tearDownClass"]], "test_cast_to": [[238, 10, 1, "", "TestCastTo"]], "test_cast_to.TestCastTo": [[238, 12, 1, "", "setUpClass"], [238, 12, 1, "", "tearDownClass"]], "test_concat": [[239, 10, 1, "", "TestTorchOP"]], "test_concat.TestTorchOP": [[239, 12, 1, "", "setUpClass"], [239, 12, 1, "", "tearDownClass"]], "test_conv_reshape": [[240, 10, 1, "", "TestConvReshape"]], "test_conv_reshape.TestConvReshape": [[240, 12, 1, "", "setUpClass"], [240, 12, 1, "", "tearDownClass"]], "test_decoder_attn_reshape": [[241, 10, 1, "", "TestDecoderAttnReshape"]], "test_decoder_attn_reshape.TestDecoderAttnReshape": [[241, 12, 1, "", "setUpClass"], [241, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_acc": [[242, 10, 1, "", "TestDispatcherTuningAcc"]], "test_dispatcher_tuning_acc.TestDispatcherTuningAcc": [[242, 12, 1, "", "setUpClass"], [242, 12, 1, "", "tearDownClass"]], "test_dispatcher_tuning_throughput": [[243, 10, 1, "", "TestDispatcherTuningThroughput"]], "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput": [[243, 12, 1, "", "setUpClass"], [243, 12, 1, "", "tearDownClass"]], "test_dynamic_quantization": [[244, 10, 1, "", "TestDynamicQuantization"]], "test_dynamic_quantization.TestDynamicQuantization": [[244, 12, 1, "", "setUpClass"], [244, 12, 1, "", "tearDownClass"]], "test_embedding": [[245, 10, 1, "", "TestTorchOP"]], "test_embedding.TestTorchOP": [[245, 12, 1, "", "setUpClass"], [245, 12, 1, "", "tearDownClass"]], "test_embeddingbag": [[246, 10, 1, "", "TestEmbeddingBag"]], "test_embeddingbag.TestEmbeddingBag": [[246, 12, 1, "", "setUpClass"], [246, 12, 1, "", "tearDownClass"]], "test_execution_options": [[247, 10, 1, "", "TestExecutionOptions"]], "test_execution_options.TestExecutionOptions": [[247, 12, 1, "", "setUpClass"], [247, 12, 1, "", "tearDownClass"]], "test_gelu": [[248, 10, 1, "", "TestTorchOP"]], "test_gelu.TestTorchOP": [[248, 12, 1, "", "setUpClass"], [248, 12, 1, "", "tearDownClass"]], "test_gpt_int8": [[249, 10, 1, "", "TestTorchModel"]], "test_gpt_int8.TestTorchModel": [[249, 12, 1, "", "setUpClass"], [249, 12, 1, "", "tearDownClass"]], "test_graph_dispatch": [[250, 10, 1, "", "TestGraphDispatch"]], "test_graph_dispatch.TestGraphDispatch": [[250, 12, 1, "", "setUpClass"], [250, 12, 1, "", "tearDownClass"]], "test_insert_input_output_data": [[251, 10, 1, "", "TestInsertInputOuputData"]], "test_insert_input_output_data.TestInsertInputOuputData": [[251, 12, 1, "", "setUpClass"], [251, 12, 1, "", "tearDownClass"]], "test_is_supported_onnx_graph": [[252, 10, 1, "", "TestIsSupportedOnnxGraph"]], "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph": [[252, 12, 1, "", "setUpClass"], [252, 12, 1, "", "tearDownClass"], [252, 12, 1, "", "test_is_supported_onnx_graph"]], "test_last_layer_shape": [[253, 10, 1, "", "TestLastLayerShape"]], "test_last_layer_shape.TestLastLayerShape": [[253, 12, 1, "", "setUpClass"], [253, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_reduce_mean": [[254, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean": [[254, 12, 1, "", "setUpClass"], [254, 12, 1, "", "tearDownClass"]], "test_layer_norm_with_transpose": [[255, 10, 1, "", "TestLayerNormWithTranspose"]], "test_layer_norm_with_transpose.TestLayerNormWithTranspose": [[255, 12, 1, "", "setUpClass"], [255, 12, 1, "", "tearDownClass"]], "test_layernorm": [[256, 10, 1, "", "TestTorchOP"]], "test_layernorm.TestTorchOP": [[256, 12, 1, "", "setUpClass"], [256, 12, 1, "", "tearDownClass"]], "test_linear": [[257, 10, 1, "", "TestTorchOP"]], "test_linear.TestTorchOP": [[257, 12, 1, "", "setUpClass"], [257, 12, 1, "", "tearDownClass"]], "test_linear_int8": [[258, 10, 1, "", "TestTorchLinear"]], "test_linear_int8.TestTorchLinear": [[258, 12, 1, "", "setUpClass"], [258, 12, 1, "", "tearDownClass"]], "test_main": [[259, 10, 1, "", "TestMain"]], "test_main.TestMain": [[259, 12, 1, "", "setUpClass"], [259, 12, 1, "", "tearDownClass"]], "test_matmul": [[260, 10, 1, "", "TestTorchOP"]], "test_matmul.TestTorchOP": [[260, 12, 1, "", "setUpClass"], [260, 12, 1, "", "tearDownClass"]], "test_matmul_int8": [[261, 10, 1, "", "TestTorchOP"]], "test_matmul_int8.TestTorchOP": [[261, 12, 1, "", "setUpClass"], [261, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_relu": [[262, 10, 1, "", "TestMatmulWithBiasRelu"]], "test_matmul_with_bias_relu.TestMatmulWithBiasRelu": [[262, 12, 1, "", "setUpClass"], [262, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_sigmoid": [[263, 10, 1, "", "TestMatMulWithBiasSigmoid"]], "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid": [[263, 12, 1, "", "setUpClass"], [263, 12, 1, "", "tearDownClass"]], "test_matmul_with_bias_tanh": [[264, 10, 1, "", "TestMatmulWithBiasTanh"]], "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh": [[264, 12, 1, "", "setUpClass"], [264, 12, 1, "", "tearDownClass"]], "test_merged_embeddingbag": [[265, 10, 1, "", "TestMergedEmbeddingbag"]], "test_merged_embeddingbag.TestMergedEmbeddingbag": [[265, 12, 1, "", "setUpClass"], [265, 12, 1, "", "tearDownClass"]], "test_onnx_utils": [[267, 10, 1, "", "TestOnnxUtils"]], "test_onnx_utils.TestOnnxUtils": [[267, 12, 1, "", "setUpClass"], [267, 12, 1, "", "tearDownClass"]], "test_operator_adaptor": [[268, 10, 1, "", "TestOperatorAdaptor"]], "test_operator_adaptor.TestOperatorAdaptor": [[268, 12, 1, "", "setUpClass"], [268, 12, 1, "", "tearDownClass"]], "test_ops": [[269, 10, 1, "", "TestOps"]], "test_ops.TestOps": [[269, 12, 1, "", "setUpClass"], [269, 12, 1, "", "tearDownClass"]], "test_padding_seq": [[270, 10, 1, "", "TestTorchOP"]], "test_padding_seq.TestTorchOP": [[270, 12, 1, "", "setUpClass"], [270, 12, 1, "", "tearDownClass"]], "test_padding_sequence": [[271, 10, 1, "", "TestPaddingSequence"]], "test_padding_sequence.TestPaddingSequence": [[271, 12, 1, "", "setUpClass"], [271, 12, 1, "", "tearDownClass"]], "test_pattern_dispatch": [[272, 10, 1, "", "TestPatternDispatch"]], "test_pattern_dispatch.TestPatternDispatch": [[272, 12, 1, "", "setUpClass"], [272, 12, 1, "", "tearDownClass"]], "test_permute": [[273, 10, 1, "", "TestTorchOP"]], "test_permute.TestTorchOP": [[273, 12, 1, "", "setUpClass"], [273, 12, 1, "", "tearDownClass"]], "test_position_embeddings": [[274, 10, 1, "", "TestPositionEmbeddings"]], "test_position_embeddings.TestPositionEmbeddings": [[274, 12, 1, "", "setUpClass"], [274, 12, 1, "", "tearDownClass"]], "test_pow": [[275, 10, 1, "", "TestTorchOP"]], "test_pow.TestTorchOP": [[275, 12, 1, "", "setUpClass"], [275, 12, 1, "", "tearDownClass"]], "test_primitive_cache_acc": [[276, 10, 1, "", "TestPrimitiveCacheAcc"]], "test_primitive_cache_acc.TestPrimitiveCacheAcc": [[276, 12, 1, "", "setUpClass"], [276, 12, 1, "", "tearDownClass"]], "test_primitive_cache_throughput": [[277, 10, 1, "", "TestPrimitiveCacheThroughput"]], "test_primitive_cache_throughput.TestPrimitiveCacheThroughput": [[277, 12, 1, "", "setUpClass"], [277, 12, 1, "", "tearDownClass"]], "test_qkv_merge": [[278, 10, 1, "", "TestQKVMerge"]], "test_qkv_merge.TestQKVMerge": [[278, 12, 1, "", "setUpClass"], [278, 12, 1, "", "tearDownClass"]], "test_qkv_reshape": [[279, 10, 1, "", "TestAttentionReshape"]], "test_qkv_reshape.TestAttentionReshape": [[279, 12, 1, "", "setUpClass"], [279, 12, 1, "", "tearDownClass"]], "test_quant_onnx_execute": [[280, 10, 1, "", "TestQuantOnnxExecute"]], "test_quant_onnx_execute.TestQuantOnnxExecute": [[280, 12, 1, "", "setUpClass"], [280, 12, 1, "", "tearDownClass"]], "test_reshape_after_restore_hidden_states": [[281, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean": [[281, 12, 1, "", "setUpClass"], [281, 12, 1, "", "tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[282, 10, 1, "", "TestAttentionReshape"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape": [[282, 12, 1, "", "setUpClass"], [282, 12, 1, "", "tearDownClass"]], "test_reshape_before_restore_hidden_states": [[283, 10, 1, "", "TestLayerNormWithReduceMean"]], "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean": [[283, 12, 1, "", "setUpClass"], [283, 12, 1, "", "tearDownClass"]], "test_size": [[284, 10, 1, "", "TestTorchOP"]], "test_size.TestTorchOP": [[284, 12, 1, "", "setUpClass"], [284, 12, 1, "", "tearDownClass"]], "test_softmax": [[285, 10, 1, "", "TestTorchOP"]], "test_softmax.TestTorchOP": [[285, 12, 1, "", "setUpClass"], [285, 12, 1, "", "tearDownClass"]], "test_start_end_logits": [[286, 10, 1, "", "TestStartEndLogits"]], "test_start_end_logits.TestStartEndLogits": [[286, 12, 1, "", "setUpClass"], [286, 12, 1, "", "tearDownClass"]], "test_tanh": [[287, 10, 1, "", "TestTorchOP"]], "test_tanh.TestTorchOP": [[287, 12, 1, "", "setUpClass"], [287, 12, 1, "", "tearDownClass"]], "test_text_encoder": [[288, 10, 1, "", "TestTextEncoder"]], "test_text_encoder.TestTextEncoder": [[288, 12, 1, "", "setUpClass"], [288, 12, 1, "", "tearDownClass"]], "test_text_encoder_bf16": [[289, 10, 1, "", "TestTextEncoderBF16"]], "test_text_encoder_bf16.TestTextEncoderBF16": [[289, 12, 1, "", "setUpClass"], [289, 12, 1, "", "tearDownClass"]], "test_tf_utils": [[290, 10, 1, "", "TestTfUtils"]], "test_tf_utils.TestTfUtils": [[290, 12, 1, "", "setUpClass"], [290, 12, 1, "", "tearDownClass"]], "test_token_type_embeddings": [[291, 10, 1, "", "TestTokenTypeEmbeddings"]], "test_token_type_embeddings.TestTokenTypeEmbeddings": [[291, 12, 1, "", "setUpClass"], [291, 12, 1, "", "tearDownClass"]], "test_transpose": [[292, 10, 1, "", "TestTorchOP"]], "test_transpose.TestTorchOP": [[292, 12, 1, "", "setUpClass"], [292, 12, 1, "", "tearDownClass"]], "test_transpose_batch_matmul": [[293, 10, 1, "", "TestTransposeBatchMatMul"]], "test_transpose_batch_matmul.TestTransposeBatchMatMul": [[293, 12, 1, "", "setUpClass"], [293, 12, 1, "", "tearDownClass"]], "test_unet": [[294, 10, 1, "", "TestUnet"]], "test_unet.TestUnet": [[294, 12, 1, "", "setUpClass"], [294, 12, 1, "", "tearDownClass"]], "test_unet_bf16": [[295, 10, 1, "", "TestUnetBF16"]], "test_unet_bf16.TestUnetBF16": [[295, 12, 1, "", "setUpClass"], [295, 12, 1, "", "tearDownClass"]], "test_unsqueeze": [[296, 10, 1, "", "TestTorchOP"]], "test_unsqueeze.TestTorchOP": [[296, 12, 1, "", "setUpClass"], [296, 12, 1, "", "tearDownClass"]], "test_vae_decoder": [[297, 10, 1, "", "TestVaeDecoder"]], "test_vae_decoder.TestVaeDecoder": [[297, 12, 1, "", "setUpClass"], [297, 12, 1, "", "tearDownClass"]], "test_vae_decoder_bf16": [[298, 10, 1, "", "TestVaeDecoderBF16"]], "test_vae_decoder_bf16.TestVaeDecoderBF16": [[298, 12, 1, "", "setUpClass"], [298, 12, 1, "", "tearDownClass"]], "test_weight_sharing_acc": [[299, 10, 1, "", "TestWeightSharingAcc"]], "test_weight_sharing_acc.TestWeightSharingAcc": [[299, 12, 1, "", "setUpClass"], [299, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[300, 10, 1, "", "TestWeightSharingDispatcherTuningAcc"]], "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc": [[300, 12, 1, "", "setUpClass"], [300, 12, 1, "", "tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[301, 10, 1, "", "TestWeightSharingDispatcherTuningThroughput"]], "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput": [[301, 12, 1, "", "setUpClass"], [301, 12, 1, "", "tearDownClass"]], "test_weight_sharing_throughput": [[302, 10, 1, "", "TestWeightSharingThroughput"]], "test_weight_sharing_throughput.TestWeightSharingThroughput": [[302, 12, 1, "", "setUpClass"], [302, 12, 1, "", "tearDownClass"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:enum", "7": "cpp:member", "8": "cpp:templateParam", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:method", "13": "py:function", "14": "py:data"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "member", "C++ member"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "method", "Python method"], "13": ["py", "function", "Python function"], "14": ["py", "data", "Python data"]}, "titleterms": {"intel_extension_for_transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 335, 342], "api_doc_exampl": 0, "modul": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 189, 190, 191, 192, 193, 196, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "content": [0, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 189, 190, 191, 192, 193, 196, 198, 199, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 379, 384], "class": [0, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 186, 190, 191, 193, 196, 198, 199, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 215, 216, 219, 221, 222, 223, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 311, 312, 313, 323, 371], "function": [0, 2, 10, 14, 15, 36, 48, 100, 126, 180, 181, 184, 189, 190, 192, 193, 204, 206, 209, 210, 212, 213, 214, 221, 222, 224, 225, 228], "attribut": [0, 36, 100, 180, 333, 343], "backend": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 339, 344, 373], "neural_engin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "compil": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 308, 348], "extractor": [3, 4, 5, 6, 7], "submodul": [4, 9, 11, 12, 36, 100, 188, 194, 195, 197, 200, 207, 218, 220, 227], "onnx_extractor": 5, "tf_extractor": 6, "torch_extractor": 7, "graph": [8, 9, 309, 344, 346, 347], "graph_util": 10, "subpackag": [11, 182, 195], "loader": [12, 13], "logger": [14, 208], "onnx_util": 15, "op": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 343, 346], "all": 16, "assert": 17, "batch_matmul": 18, "batch_matmul_v2": 19, "bias_add": 20, "binary_op": 21, "cast": 22, "concat": 23, "conv": 24, "co": 25, "empty_op": 26, "expand_dim": 27, "fused_batch_matmul_v2": 28, "fused_batch_norm_v3": 29, "fused_gemm": 30, "fused_matmul": 31, "gather": 32, "gather_el": 33, "gelu": [34, 98], "gemm": [35, 358, 359, 361, 364], "packag": [36, 100], "iterator_get_next": 37, "iterator_v2": 38, "layer_norm": [39, 110], "log_softmax": 40, "map_and_batch_dataset": 41, "matmul": [42, 360, 361, 362], "mean": [43, 356], "mkl_layer_norm": 44, "model_dataset": 45, "one_hot": 46, "onnx_input": 47, "optimize_dataset": 49, "pack": 50, "padding_sequ": [51, 125], "placehold": 52, "pos_emb": 53, "pow": 54, "quantize_linear": 55, "quantize_v2": 56, "quantized_fused_matmul_and_dequant": 57, "quantized_matmul_with_bias_and_dequant": 58, "reduce_mean": 59, "reduce_sum": 60, "reorder": [61, 358, 362, 363, 364], "reshap": 62, "rsub": 63, "scatter_el": 64, "shape": 65, "sin": 66, "size": [67, 360], "slice": 68, "softmax": [69, 368], "split": 70, "squeez": 71, "strided_slic": 72, "tensor": 73, "top_k": 74, "transpos": [75, 362, 363], "unpack": 76, "unsqueez": 77, "view": 78, "sub_graph": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "innerproductreshapefus": 79, "add_cls_token": 80, "add_embed": 81, "arangewithreciproc": 82, "attentionblock_attentionmaskaddreshap": 83, "attentionblock_constantofshapewithmul": 84, "attentionblock_qkvprereshap": 85, "attentionblock_qkvreshap": 86, "attentionblock_resize2gath": 87, "attentionblock_weightreshapeto4d": 88, "attention_mask_length_adaptive_keep_indic": 89, "attention_output_layer_norm_length_adaptive_keep_indic": 90, "attention_reshap": 91, "cast_to": 92, "collect_quant_info": 93, "conv_reshap": 94, "decoder_attn_reshap": 95, "einsumwitharang": 96, "embeddingbag": 97, "generate_sequ": 99, "innerproductwithbiasgelu": 101, "innerproductwithslic": 102, "input_data": 103, "input_fil": 104, "insert_bf16_nod": 105, "insert_quant_nod": 106, "int8_bf16_mixed_precision_check": 107, "interact_featur": 108, "last_layer_shap": 109, "layer_norm_with_reduce_mean": 111, "layer_norm_with_transpos": 112, "lower_all_tupl": 113, "matmul_with_bia": 114, "matmul_with_bias_add": 115, "matmul_with_bias_gelu": 116, "matmul_with_bias_relu": 117, "matmul_with_bias_sigmoid": 118, "matmul_with_bias_tanh": 119, "matmul_with_transpos": 120, "merged_embeddingbag": 121, "multi_head_attent": 122, "operator_adaptor": 123, "output_data": 124, "pattern": [126, 209, 343, 346, 347, 351, 358, 359, 364], "position_embed": 127, "position_embeddings_v1": 128, "qkv_merg": 129, "qkv_reshap": 130, "quantize_fus": 131, "quantized_graph_dtype_refactor": 132, "remove_constant_op": 133, "remove_last_view": 134, "remove_rang": 135, "removeslic": 136, "reshape_after_restore_hidden_st": 137, "reshape_before_and_after_attention_out_layer_norm_gather_el": 138, "reshape_before_restore_hidden_st": 139, "reshape_fus": 140, "resnetblock_instancenormreshapefromconv": 141, "resnetblock_instancenormreshapefromdiv": 142, "restnetblock_groupnorm": 143, "restore_hidden_states_in_length_adaptive_update_indic": 144, "rotary_pos_emb": 145, "slicemask": 146, "stablediffusion_reshapefus": 147, "stablediffusion_bf16convert": 148, "start_end_logit": 149, "subgraph_match": 150, "textencdoer_word_embed": 151, "textencoder_attentionmaskaddreshap": 152, "textencoder_attentionreshap": 153, "textencoder_kvreshap": 154, "textencoder_mulreshap": 155, "textencoder_qreshap": 156, "textencoder_softmaxreshap": 157, "textencoder_causal_attention_mask": 158, "token_type_embed": 159, "token_type_embeddings_v1": 160, "torch_embed": 161, "torch_ip_insert_bia": 162, "torchinsertbf16nod": 163, "torchpaddingsqu": 164, "transformer2dmodel_attentionmaskaddreshap": 165, "transformer2dmodel_constantofshapewithmul": 166, "transformer2dmodel_ffnslic": 167, "transformer2dmodel_ffnslice_1": 168, "transformer2dmodel_qkvprereshap": 169, "transformer2dmodel_qkvreshap": 170, "transformer2dmodel_qkvreshape4d": 171, "transformer2dmodel_encoderhiddenstatesreshap": 172, "transformer2dmodel_getsamplebatch": 173, "transformer2dmodel_instancenormreshapefromadd": 174, "transformer2dmodel_instancenormreshapefromconcat": 175, "transformer2dmodel_sampleslic": 176, "transformer2dmodel_upblockres": 177, "transpose_batch_matmul": 178, "word_embed": 179, "tf_util": 180, "torch_util": 181, "evalu": [183, 184, 185, 186, 187], "lm_evaluation_har": [184, 185, 186, 187], "model": [186, 187, 198, 220, 221, 222, 304, 317, 324, 336, 339, 344, 345, 348, 349, 367, 373], "huggingfac": 186, "optim": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 318, 319], "benchmark": [189, 324, 349, 368], "config": [190, 316, 323, 343, 346], "distil": [191, 323, 337, 338, 340], "dynam": [192, 193, 194, 360, 375], "drop_and_restore_util": 192, "evolut": 193, "mixtur": [196, 197], "auto_distil": 196, "na": [199, 200, 201, 338], "basic_na": 199, "optimizer_tf": [203, 323], "pipelin": [204, 323, 373], "prune": [205, 211, 338, 340, 374], "pytorch_prun": [206, 207, 208, 209, 210, 211, 212, 213, 214], "criteria": 206, "pruner": 210, "reg": 212, "schedul": 213, "util": [214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228], "quantiz": [215, 338, 340, 349, 375], "trainer": [216, 320, 323, 337, 374, 375], "get_throughput": 217, "metric": [219, 337, 371, 374, 375], "modeling_bert_dynam": 221, "modeling_roberta_dynam": 222, "object": [223, 372, 375], "utility_tf": 225, "preprocess": [226, 227, 228, 360], "data_augment": 226, "version": [229, 342], "sparsity_al": 230, "test_add_cls_token": 231, "test_add_embed": 232, "test_attention_output_layer_norm_length_adaptive_keep_indic": 233, "test_attention_reshap": 234, "test_bert_mini_fp32": 235, "test_binary_op": 236, "test_binaryop": 237, "test_cast_to": 238, "test_concat": 239, "test_conv_reshap": 240, "test_decoder_attn_reshap": 241, "test_dispatcher_tuning_acc": 242, "test_dispatcher_tuning_throughput": 243, "test_dynamic_quant": 244, "test_embed": 245, "test_embeddingbag": 246, "test_execution_opt": 247, "test_gelu": 248, "test_gpt_int8": 249, "test_graph_dispatch": 250, "test_insert_input_output_data": 251, "test_is_supported_onnx_graph": 252, "test_last_layer_shap": 253, "test_layer_norm_with_reduce_mean": 254, "test_layer_norm_with_transpos": 255, "test_layernorm": 256, "test_linear": 257, "test_linear_int8": 258, "test_main": 259, "test_matmul": 260, "test_matmul_int8": 261, "test_matmul_with_bias_relu": 262, "test_matmul_with_bias_sigmoid": 263, "test_matmul_with_bias_tanh": 264, "test_merged_embeddingbag": 265, "test_model": 266, "test_onnx_util": 267, "test_operator_adaptor": 268, "test_op": 269, "test_padding_seq": 270, "test_padding_sequ": 271, "test_pattern_dispatch": 272, "test_permut": 273, "test_position_embed": 274, "test_pow": 275, "test_primitive_cache_acc": 276, "test_primitive_cache_throughput": 277, "test_qkv_merg": 278, "test_qkv_reshap": 279, "test_quant_onnx_execut": 280, "test_reshape_after_restore_hidden_st": 281, "test_reshape_before_and_after_attention_out_layer_norm_gather_el": 282, "test_reshape_before_restore_hidden_st": 283, "test_siz": 284, "test_softmax": 285, "test_start_end_logit": 286, "test_tanh": 287, "test_text_encod": 288, "test_text_encoder_bf16": 289, "test_tf_util": 290, "test_token_type_embed": 291, "test_transpos": 292, "test_transpose_batch_matmul": 293, "test_unet": 294, "test_unet_bf16": 295, "test_unsqueez": 296, "test_vae_decod": 297, "test_vae_decoder_bf16": 298, "test_weight_sharing_acc": 299, "test_weight_sharing_dispatcher_tuning_acc": 300, "test_weight_sharing_dispatcher_tuning_throughtput": 301, "test_weight_sharing_throughput": 302, "secur": 303, "polici": 303, "report": 303, "vulner": 303, "intel": [304, 322, 327, 336, 338, 380], "extens": [304, 322, 327, 336, 338, 380], "transform": [304, 322, 327, 336, 338, 340, 353, 380], "acceler": [304, 340, 353, 357], "base": [304, 338], "platform": [304, 352, 366], "select": 304, "public": 304, "event": 304, "api": [305, 306, 307, 310, 315, 321, 323, 324, 339, 345, 353], "document": [306, 327, 380], "exampl": [306, 323, 324, 325, 338, 339, 345, 348, 368, 372, 373, 378], "python": [307, 345], "engin": [310, 311, 331, 338, 340, 342, 344, 346, 348, 349, 352, 384], "kernel": [312, 315, 328, 346, 353, 357, 360, 368, 381], "operator_desc": [313, 355, 356], "oper": [314, 345, 350], "specif": 314, "type": [314, 343, 374], "pytorch": [318, 323, 324, 337, 338], "tensorflow": [319, 323, 337, 338], "user": [321, 332, 353, 355, 356, 377, 385], "face": 321, "architectur": [322, 344], "autodistil": 323, "design": [323, 349], "framework": [323, 355, 356], "criterion": [323, 337], "knowledgedistillationloss": 323, "intermediatelayersknowledgedistillationloss": 323, "usag": [323, 337, 339, 355, 356, 368, 374], "flash": 323, "regular": 323, "introduct": [324, 335, 337, 339, 343, 345, 346, 347, 348, 351, 353, 355, 356, 357, 358, 362, 367, 371, 372, 373, 374, 375], "get": [324, 335, 336, 340, 345, 349, 371, 375], "start": [324, 335, 336, 340, 371, 375], "stock": [324, 338], "ipex": [324, 338], "output": [324, 336], "featur": [326, 355, 356, 375, 379], "welcom": [327, 380], "section": [327, 380], "implement": [329, 382], "detail": [329, 360, 363, 382], "perform": [330, 352, 353, 365, 366, 383], "neural": [331, 338, 340, 342, 344, 352, 384], "guid": [332, 377, 385], "contributor": [333, 334], "coven": [333, 334], "code": [333, 334], "conduct": [333, 334], "our": 333, "pledg": 333, "standard": 333, "respons": 333, "scope": 333, "enforc": 333, "contribut": 334, "guidelin": 334, "pull": 334, "request": 334, "checklist": 334, "templat": 334, "support": [334, 335, 336, 339, 348, 352, 353, 371, 372, 375], "data": [335, 359, 366], "augment": 335, "instal": [335, 336, 341, 342, 349, 353], "depend": 335, "script": [335, 337, 374, 375], "paramet": 335, "text": 335, "gener": [335, 344], "argument": 335, "overview": 336, "recommend": 336, "hardwar": [336, 341], "valid": [336, 341, 366], "environ": [336, 341, 349], "how": [336, 346, 367], "work": [336, 357], "1": [336, 344, 345, 349, 350, 367], "prerequisit": [336, 341, 342, 349, 360], "2": [336, 344, 349, 350, 367], "from": [336, 341, 342], "pypi": [336, 341], "conda": 336, "3": [336, 344, 367], "sourc": [336, 341], "To": [336, 349], "run": [336, 344, 345, 349, 367], "requir": [336, 341], "prepar": [336, 348, 349, 367], "dataset": [336, 349], "compress": 336, "4": [336, 344, 366], "infer": [336, 344, 354, 373], "expect": 336, "summari": [336, 371], "next": 336, "step": 336, "learn": 336, "more": [336, 346, 357], "knowledg": [337, 338], "intermedi": 337, "layer": [337, 361], "creat": [337, 347, 374, 375], "an": [337, 348, 374, 375], "instanc": [337, 374, 375], "option": [337, 346, 374, 375], "distillationconfig": 337, "length": [338, 340], "adapt": [338, 340], "auto": 338, "orchestr": 338, "refer": [338, 353], "deploy": 338, "dens": [338, 357], "spars": [338, 345, 357, 358, 359, 361, 364, 367], "export": 339, "onnx": [339, 344, 348, 349], "matrix": [339, 352, 353, 360, 372, 375], "fp32": 339, "bf16": 339, "int8": [339, 349, 373], "For": [339, 368], "executor": [339, 350, 373], "linux": 341, "window": 341, "system": 341, "softwar": 341, "stabl": 342, "pip": 342, "binari": [342, 344, 355], "deploi": [342, 344], "bare": 342, "metal": 342, "add": [343, 350], "custom": [343, 344, 350], "regist": [343, 350], "node": [343, 347], "set": [343, 345], "map": [343, 347], "fuse": 343, "new": [343, 347], "after": 343, "fusion": [343, 347], "integr": 344, "tf": 344, "us": [344, 360], "through": 344, "manual": 344, "yaml": 344, "weight": [344, 360, 367], "build": [344, 353, 368], "profil": [345, 365], "profl": 345, "you": 345, "can": 345, "onli": 345, "engine_profil": 345, "befor": 345, "c": 345, "part": 345, "csv": 345, "ratio": 345, "total": 345, "level": 345, "json": 345, "iter": 345, "tune": [346, 349, 375], "dispatch": 346, "best": 346, "relat": 346, "runtim": 346, "turn": 346, "mechan": 346, "dict": 347, "obtain": 347, "necessari": 347, "inform": [347, 370], "construct": 347, "establish": 347, "connect": 347, "remov": [347, 351], "old": 347, "insert": 347, "ir": [348, 349], "format": [348, 359, 369], "low": 349, "precis": 349, "its": 349, "accuraci": [349, 375], "h": 350, "includ": 350, "cpp": 350, "src": 350, "recogn": 351, "represent": 351, "pars": 351, "list": [351, 374], "search": 351, "each": 351, "straight": 351, "chain": 351, "splice": 351, "sub": 351, "main": 351, "duplic": 351, "result": [351, 367], "configur": [352, 366], "librari": 353, "test": 353, "sparse_matmul": [353, 368], "3d": 354, "memori": 354, "layout": 354, "spmm_vnni": [354, 368], "cach": 354, "issu": 354, "injector": [355, 356], "param_typ": [355, 356], "hpp": [355, 356], "jit_binaryop_injector": 355, "develop": [355, 356, 368], "": [355, 356], "perspect": [355, 356], "element": 356, "wise": 356, "alpha": 356, "beta": 356, "scale": 356, "jit_eltwise_injector": 356, "naiv": 357, "tile": 357, "effici": 357, "per": 357, "thread": [357, 366], "prefetch": 357, "amx": 358, "brief": 358, "isa": 358, "avx512f": 359, "kei": 359, "instruct": 359, "loop": 359, "quant": 360, "problem": [360, 361, 362, 363], "descript": [360, 361, 363], "differ": 360, "jit": 360, "path": 360, "small_wei": 360, "large_wei": 360, "normal": 361, "layernorm": 361, "pre": 361, "comput": 361, "spmm": 361, "direct": 361, "layernorm_ba": [361, 368], "statement": 362, "matmul_p2031_2013": 362, "matmul_avx512f_p2031_p2013": [362, 368], "matmul_noperm_p2031_p1302": 362, "matmul_vnni_noperm_p2013_p1302": 362, "beforehand": 362, "mha": [363, 368], "calcul": 363, "vnni": 364, "On": 364, "fly": 364, "activ": 364, "candid": 364, "verbos": 365, "vtune": 365, "sde": 365, "singl": 366, "multi": 366, "visual": 367, "distribut": 367, "setup": 367, "below": 367, "command": 367, "analysi": 367, "spmm_avx512f": 368, "spmm_amx_bf16_x16": 368, "eltwiseop": 368, "transpose_matmul": 368, "matmul_vnni_noperm_p2031_p1302": 368, "attent": 368, "static": [368, 375], "dynamic_quant_matmul": 368, "dynamic_qu": 368, "input": 369, "legal": 370, "licens": 370, "citat": 370, "trademark": 370, "prunerconfig": 374, "pruningconfig": 374, "fundament": 375, "approach": 375, "post": 375, "train": 375, "awar": 375, "quantizationconfig": 375, "releas": 376, "note": 376}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [67, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [74, "module-contents"], [75, "module-contents"], [76, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [82, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"], [88, "module-contents"], [89, "module-contents"], [90, "module-contents"], [91, "module-contents"], [92, "module-contents"], [93, "module-contents"], [94, "module-contents"], [95, "module-contents"], [96, "module-contents"], [97, "module-contents"], [98, "module-contents"], [99, "module-contents"], [101, "module-contents"], [102, "module-contents"], [103, "module-contents"], [104, "module-contents"], [105, "module-contents"], [106, "module-contents"], [107, "module-contents"], [108, "module-contents"], [109, "module-contents"], [110, "module-contents"], [111, "module-contents"], [112, "module-contents"], [113, "module-contents"], [114, "module-contents"], [115, "module-contents"], [116, "module-contents"], [117, "module-contents"], [118, "module-contents"], [119, "module-contents"], [120, "module-contents"], [121, "module-contents"], [122, "module-contents"], [123, "module-contents"], [124, "module-contents"], [125, "module-contents"], [126, "module-contents"], [127, "module-contents"], [128, "module-contents"], [129, "module-contents"], [130, "module-contents"], [131, "module-contents"], [132, "module-contents"], [133, "module-contents"], [134, "module-contents"], [135, "module-contents"], [136, "module-contents"], [137, "module-contents"], [138, "module-contents"], [139, "module-contents"], [140, "module-contents"], [141, "module-contents"], [142, "module-contents"], [143, "module-contents"], [144, "module-contents"], [145, "module-contents"], [146, "module-contents"], [147, "module-contents"], [148, "module-contents"], [149, "module-contents"], [150, "module-contents"], [151, "module-contents"], [152, "module-contents"], [153, "module-contents"], [154, "module-contents"], [155, "module-contents"], [156, "module-contents"], [157, "module-contents"], [158, "module-contents"], [159, "module-contents"], [160, "module-contents"], [161, "module-contents"], [162, "module-contents"], [163, "module-contents"], [164, "module-contents"], [165, "module-contents"], [166, "module-contents"], [167, "module-contents"], [168, "module-contents"], [169, "module-contents"], [170, "module-contents"], [171, "module-contents"], [172, "module-contents"], [173, "module-contents"], [174, "module-contents"], [175, "module-contents"], [176, "module-contents"], [177, "module-contents"], [178, "module-contents"], [179, "module-contents"], [180, "module-contents"], [181, "module-contents"], [184, "module-contents"], [186, "module-contents"], [189, "module-contents"], [190, "module-contents"], [191, "module-contents"], [192, "module-contents"], [193, "module-contents"], [196, "module-contents"], [198, "module-contents"], [199, "module-contents"], [201, "module-contents"], [202, "module-contents"], [203, "module-contents"], [204, "module-contents"], [205, "module-contents"], [206, "module-contents"], [209, "module-contents"], [210, "module-contents"], [211, "module-contents"], [212, "module-contents"], [213, "module-contents"], [214, "module-contents"], [215, "module-contents"], [216, "module-contents"], [219, "module-contents"], [221, "module-contents"], [222, "module-contents"], [223, "module-contents"], [224, "module-contents"], [225, "module-contents"], [226, "module-contents"], [228, "module-contents"], [231, "module-contents"], [232, "module-contents"], [233, "module-contents"], [234, "module-contents"], [235, "module-contents"], [236, "module-contents"], [237, "module-contents"], [238, "module-contents"], [239, "module-contents"], [240, "module-contents"], [241, "module-contents"], [242, "module-contents"], [243, "module-contents"], [244, "module-contents"], [245, "module-contents"], [246, "module-contents"], [247, "module-contents"], [248, "module-contents"], [249, "module-contents"], [250, "module-contents"], [251, "module-contents"], [252, "module-contents"], [253, "module-contents"], [254, "module-contents"], [255, "module-contents"], [256, "module-contents"], [257, "module-contents"], [258, "module-contents"], [259, "module-contents"], [260, "module-contents"], [261, "module-contents"], [262, "module-contents"], [263, "module-contents"], [264, "module-contents"], [265, "module-contents"], [267, "module-contents"], [268, "module-contents"], [269, "module-contents"], [270, "module-contents"], [271, "module-contents"], [272, "module-contents"], [273, "module-contents"], [274, "module-contents"], [275, "module-contents"], [276, "module-contents"], [277, "module-contents"], [278, "module-contents"], [279, "module-contents"], [280, "module-contents"], [281, "module-contents"], [282, "module-contents"], [283, "module-contents"], [284, "module-contents"], [285, "module-contents"], [286, "module-contents"], [287, "module-contents"], [288, "module-contents"], [289, "module-contents"], [290, "module-contents"], [291, "module-contents"], [292, "module-contents"], [293, "module-contents"], [294, "module-contents"], [295, "module-contents"], [296, "module-contents"], [297, "module-contents"], [298, "module-contents"], [299, "module-contents"], [300, "module-contents"], [301, "module-contents"], [302, "module-contents"]], "Classes": [[0, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [67, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"], [122, "classes"], [123, "classes"], [124, "classes"], [125, "classes"], [126, "classes"], [127, "classes"], [128, "classes"], [129, "classes"], [130, "classes"], [131, "classes"], [132, "classes"], [133, "classes"], [134, "classes"], [135, "classes"], [136, "classes"], [137, "classes"], [138, "classes"], [139, "classes"], [140, "classes"], [141, "classes"], [142, "classes"], [143, "classes"], [144, "classes"], [145, "classes"], [146, "classes"], [147, "classes"], [148, "classes"], [149, "classes"], [150, "classes"], [151, "classes"], [152, "classes"], [153, "classes"], [154, "classes"], [155, "classes"], [156, "classes"], [157, "classes"], [158, "classes"], [159, "classes"], [160, "classes"], [161, "classes"], [162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [178, "classes"], [179, "classes"], [186, "classes"], [190, "classes"], [191, "classes"], [193, "classes"], [196, "classes"], [198, "classes"], [199, "classes"], [201, "classes"], [202, "classes"], [203, "classes"], [205, "classes"], [206, "classes"], [209, "classes"], [210, "classes"], [211, "classes"], [212, "classes"], [213, "classes"], [215, "classes"], [216, "classes"], [219, "classes"], [221, "classes"], [222, "classes"], [223, "classes"], [225, "classes"], [226, "classes"], [228, "classes"], [231, "classes"], [232, "classes"], [233, "classes"], [234, "classes"], [235, "classes"], [236, "classes"], [237, "classes"], [238, "classes"], [239, "classes"], [240, "classes"], [241, "classes"], [242, "classes"], [243, "classes"], [244, "classes"], [245, "classes"], [246, "classes"], [247, "classes"], [248, "classes"], [249, "classes"], [250, "classes"], [251, "classes"], [252, "classes"], [253, "classes"], [254, "classes"], [255, "classes"], [256, "classes"], [257, "classes"], [258, "classes"], [259, "classes"], [260, "classes"], [261, "classes"], [262, "classes"], [263, "classes"], [264, "classes"], [265, "classes"], [267, "classes"], [268, "classes"], [269, "classes"], [270, "classes"], [271, "classes"], [272, "classes"], [273, "classes"], [274, "classes"], [275, "classes"], [276, "classes"], [277, "classes"], [278, "classes"], [279, "classes"], [280, "classes"], [281, "classes"], [282, "classes"], [283, "classes"], [284, "classes"], [285, "classes"], [286, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"]], "Functions": [[0, "functions"], [2, "functions"], [10, "functions"], [14, "functions"], [15, "functions"], [36, "functions"], [48, "functions"], [100, "functions"], [126, "functions"], [180, "functions"], [181, "functions"], [184, "functions"], [189, "functions"], [190, "functions"], [192, "functions"], [193, "functions"], [204, "functions"], [206, "functions"], [209, "functions"], [210, "functions"], [212, "functions"], [213, "functions"], [214, "functions"], [221, "functions"], [222, "functions"], [224, "functions"], [225, "functions"], [228, "functions"]], "Attributes": [[0, "attributes"], [36, "attributes"], [100, "attributes"], [180, "attributes"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "Submodules": [[4, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [36, "submodules"], [100, "submodules"], [188, "submodules"], [194, "submodules"], [195, "submodules"], [197, "submodules"], [200, "submodules"], [207, "submodules"], [218, "submodules"], [220, "submodules"], [227, "submodules"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "Subpackages": [[11, "subpackages"], [182, "subpackages"], [195, "subpackages"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "Package Contents": [[36, "package-contents"], [100, "package-contents"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "intel_extension_for_transformers.backends.neural_engine": [[182, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[183, "module-intel_extension_for_transformers.evaluation"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator": [[184, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness": [[185, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface": [[186, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models": [[187, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models"]], "intel_extension_for_transformers": [[188, "module-intel_extension_for_transformers"]], "intel_extension_for_transformers.optimization.benchmark": [[189, "module-intel_extension_for_transformers.optimization.benchmark"]], "intel_extension_for_transformers.optimization.config": [[190, "module-intel_extension_for_transformers.optimization.config"]], "intel_extension_for_transformers.optimization.distillation": [[191, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[192, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[193, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "intel_extension_for_transformers.optimization.dynamic": [[194, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[195, "module-intel_extension_for_transformers.optimization"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[196, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "intel_extension_for_transformers.optimization.mixture": [[197, "module-intel_extension_for_transformers.optimization.mixture"]], "intel_extension_for_transformers.optimization.model": [[198, "module-intel_extension_for_transformers.optimization.model"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[199, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[200, "module-intel_extension_for_transformers.optimization.nas"]], "intel_extension_for_transformers.optimization.nas.nas": [[201, "module-intel_extension_for_transformers.optimization.nas.nas"]], "intel_extension_for_transformers.optimization.optimizer": [[202, "module-intel_extension_for_transformers.optimization.optimizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[203, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "intel_extension_for_transformers.optimization.pipeline": [[204, "module-intel_extension_for_transformers.optimization.pipeline"]], "intel_extension_for_transformers.optimization.pruning": [[205, "module-intel_extension_for_transformers.optimization.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[207, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[210, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[211, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[213, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[214, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "intel_extension_for_transformers.optimization.quantization": [[215, "module-intel_extension_for_transformers.optimization.quantization"]], "intel_extension_for_transformers.optimization.trainer": [[216, "module-intel_extension_for_transformers.optimization.trainer"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[217, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[218, "module-intel_extension_for_transformers.optimization.utils"]], "intel_extension_for_transformers.optimization.utils.metrics": [[219, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[220, "module-intel_extension_for_transformers.optimization.utils.models"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[221, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[222, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "intel_extension_for_transformers.optimization.utils.objectives": [[223, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "intel_extension_for_transformers.optimization.utils.utility": [[224, "module-intel_extension_for_transformers.optimization.utils.utility"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[225, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[226, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "intel_extension_for_transformers.preprocessing": [[227, "module-intel_extension_for_transformers.preprocessing"]], "intel_extension_for_transformers.preprocessing.utils": [[228, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[229, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[230, "module-sparsity_all"]], "test_add_cls_token": [[231, "module-test_add_cls_token"]], "test_add_embeddings": [[232, "module-test_add_embeddings"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[233, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "test_attention_reshape": [[234, "module-test_attention_reshape"]], "test_bert_mini_fp32": [[235, "module-test_bert_mini_fp32"]], "test_binary_op": [[236, "module-test_binary_op"]], "test_binaryop": [[237, "module-test_binaryop"]], "test_cast_to": [[238, "module-test_cast_to"]], "test_concat": [[239, "module-test_concat"]], "test_conv_reshape": [[240, "module-test_conv_reshape"]], "test_decoder_attn_reshape": [[241, "module-test_decoder_attn_reshape"]], "test_dispatcher_tuning_acc": [[242, "module-test_dispatcher_tuning_acc"]], "test_dispatcher_tuning_throughput": [[243, "module-test_dispatcher_tuning_throughput"]], "test_dynamic_quantization": [[244, "module-test_dynamic_quantization"]], "test_embedding": [[245, "module-test_embedding"]], "test_embeddingbag": [[246, "module-test_embeddingbag"]], "test_execution_options": [[247, "module-test_execution_options"]], "test_gelu": [[248, "module-test_gelu"]], "test_gpt_int8": [[249, "module-test_gpt_int8"]], "test_graph_dispatch": [[250, "module-test_graph_dispatch"]], "test_insert_input_output_data": [[251, "module-test_insert_input_output_data"]], "test_is_supported_onnx_graph": [[252, "module-test_is_supported_onnx_graph"]], "test_last_layer_shape": [[253, "module-test_last_layer_shape"]], "test_layer_norm_with_reduce_mean": [[254, "module-test_layer_norm_with_reduce_mean"]], "test_layer_norm_with_transpose": [[255, "module-test_layer_norm_with_transpose"]], "test_layernorm": [[256, "module-test_layernorm"]], "test_linear": [[257, "module-test_linear"]], "test_linear_int8": [[258, "module-test_linear_int8"]], "test_main": [[259, "module-test_main"]], "test_matmul": [[260, "module-test_matmul"]], "test_matmul_int8": [[261, "module-test_matmul_int8"]], "test_matmul_with_bias_relu": [[262, "module-test_matmul_with_bias_relu"]], "test_matmul_with_bias_sigmoid": [[263, "module-test_matmul_with_bias_sigmoid"]], "test_matmul_with_bias_tanh": [[264, "module-test_matmul_with_bias_tanh"]], "test_merged_embeddingbag": [[265, "module-test_merged_embeddingbag"]], "test_model": [[266, "module-test_model"]], "test_onnx_utils": [[267, "module-test_onnx_utils"]], "test_operator_adaptor": [[268, "module-test_operator_adaptor"]], "test_ops": [[269, "module-test_ops"]], "test_padding_seq": [[270, "module-test_padding_seq"]], "test_padding_sequence": [[271, "module-test_padding_sequence"]], "test_pattern_dispatch": [[272, "module-test_pattern_dispatch"]], "test_permute": [[273, "module-test_permute"]], "test_position_embeddings": [[274, "module-test_position_embeddings"]], "test_pow": [[275, "module-test_pow"]], "test_primitive_cache_acc": [[276, "module-test_primitive_cache_acc"]], "test_primitive_cache_throughput": [[277, "module-test_primitive_cache_throughput"]], "test_qkv_merge": [[278, "module-test_qkv_merge"]], "test_qkv_reshape": [[279, "module-test_qkv_reshape"]], "test_quant_onnx_execute": [[280, "module-test_quant_onnx_execute"]], "test_reshape_after_restore_hidden_states": [[281, "module-test_reshape_after_restore_hidden_states"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[282, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "test_reshape_before_restore_hidden_states": [[283, "module-test_reshape_before_restore_hidden_states"]], "test_size": [[284, "module-test_size"]], "test_softmax": [[285, "module-test_softmax"]], "test_start_end_logits": [[286, "module-test_start_end_logits"]], "test_tanh": [[287, "module-test_tanh"]], "test_text_encoder": [[288, "module-test_text_encoder"]], "test_text_encoder_bf16": [[289, "module-test_text_encoder_bf16"]], "test_tf_utils": [[290, "module-test_tf_utils"]], "test_token_type_embeddings": [[291, "module-test_token_type_embeddings"]], "test_transpose": [[292, "module-test_transpose"]], "test_transpose_batch_matmul": [[293, "module-test_transpose_batch_matmul"]], "test_unet": [[294, "module-test_unet"]], "test_unet_bf16": [[295, "module-test_unet_bf16"]], "test_unsqueeze": [[296, "module-test_unsqueeze"]], "test_vae_decoder": [[297, "module-test_vae_decoder"]], "test_vae_decoder_bf16": [[298, "module-test_vae_decoder_bf16"]], "test_weight_sharing_acc": [[299, "module-test_weight_sharing_acc"]], "test_weight_sharing_dispatcher_tuning_acc": [[300, "module-test_weight_sharing_dispatcher_tuning_acc"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[301, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "test_weight_sharing_throughput": [[302, "module-test_weight_sharing_throughput"]], "Security Policy": [[303, "security-policy"]], "Report a Vulnerability": [[303, "report-a-vulnerability"]], "Intel\u00ae Extension for Transformers: Accelerating Transformer-based Models on Intel Platforms": [[304, "intel-extension-for-transformers-accelerating-transformer-based-models-on-intel-platforms"]], "Selected Publications/Events": [[304, "selected-publications-events"]], "API": [[305, "api"]], "API Document Example": [[306, "api-document-example"]], "Python APIs": [[307, "python-apis"]], "Compile": [[308, "compile"]], "Graph": [[309, "graph"]], "Engine API": [[310, "engine-api"]], "Class engine": [[311, "class-engine"]], "Class Kernel": [[312, "class-kernel"]], "Class operator_desc": [[313, "class-operator-desc"]], "Operator Specific Types": [[314, "operator-specific-types"]], "Kernel APIs": [[315, "kernel-apis"]], "Config": [[316, "config"]], "Model": [[317, "model"]], "PyTorch Optimizer": [[318, "pytorch-optimizer"]], "TensorFlow Optimizer": [[319, "tensorflow-optimizer"]], "Trainer": [[320, "trainer"]], "User-facing API": [[321, "user-facing-api"]], "Architecture of Intel\u00ae Extension for Transformers": [[322, "architecture-of-intel-extension-for-transformers"]], "AutoDistillation Design": [[323, "autodistillation-design"]], "AutoDistillation Pipeline": [[323, "autodistillation-pipeline"]], "Framework Class Design": [[323, "framework-class-design"]], "Criterion Class Design": [[323, "criterion-class-design"]], "KnowledgeDistillationLoss": [[323, "knowledgedistillationloss"]], "IntermediateLayersKnowledgeDistillationLoss": [[323, "intermediatelayersknowledgedistillationloss"]], "Usage": [[323, "usage"], [355, "usage"], [356, "usage"], [368, "usage"], [374, "usage"]], "Pytorch": [[323, "pytorch"]], "AutoDistillation API in Trainer": [[323, "autodistillation-api-in-trainer"]], "Flash distillation config example": [[323, "flash-distillation-config-example"]], "Regular distillation config example": [[323, "regular-distillation-config-example"]], "AutoDistillation config example": [[323, "autodistillation-config-example"], [323, "id1"]], "Tensorflow": [[323, "tensorflow"]], "AutoDistillation API in optimizer_tf": [[323, "autodistillation-api-in-optimizer-tf"]], "Distillation config example": [[323, "distillation-config-example"]], "Benchmark": [[324, "benchmark"]], "Introduction": [[324, "introduction"], [335, "introduction"], [337, "introduction"], [339, "introduction"], [343, "introduction"], [345, "introduction"], [346, "introduction"], [347, "introduction"], [348, "introduction"], [351, "introduction"], [353, "introduction"], [355, "introduction"], [356, "introduction"], [357, "introduction"], [362, "introduction"], [367, "introduction"], [371, "introduction"], [372, "introduction"], [373, "introduction"], [374, "introduction"], [375, "introduction"]], "Get Started with Benchmark API": [[324, "get-started-with-benchmark-api"]], "Examples": [[324, "examples"], [338, "examples"], [339, "examples"], [368, "examples"], [368, "id1"], [368, "id2"], [368, "id3"], [368, "id4"], [368, "id5"], [368, "id6"], [368, "id7"], [368, "id8"], [368, "id9"], [368, "id10"], [368, "id11"], [373, "examples"]], "Stock Pytorch Model": [[324, "stock-pytorch-model"]], "IPEX Model": [[324, "ipex-model"]], "Benchmark Output": [[324, "benchmark-output"]], "Example": [[325, "example"], [378, "example"]], "Features": [[326, "features"], [379, "features"]], "Welcome to Intel\u00ae Extension for Transformers\u2019 documentation!": [[327, "welcome-to-intel-extension-for-transformers-documentation"], [380, "welcome-to-intel-extension-for-transformers-documentation"]], "Sections": [[327, "sections"], [380, "sections"]], "Kernels": [[328, "kernels"], [381, "kernels"]], "Implementation Details": [[329, "implementation-details"], [382, "implementation-details"]], "Performance": [[330, "performance"], [352, "performance"], [353, "performance"], [383, "performance"]], "Neural Engine": [[331, "neural-engine"], [384, "neural-engine"]], "User Guide": [[332, "user-guide"], [377, "user-guide"], [385, "user-guide"]], "Contributor Covenant Code of Conduct": [[333, "contributor-covenant-code-of-conduct"], [334, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[333, "our-pledge"]], "Our Standards": [[333, "our-standards"]], "Our Responsibilities": [[333, "our-responsibilities"]], "Scope": [[333, "scope"]], "Enforcement": [[333, "enforcement"]], "Attribution": [[333, "attribution"]], "Contribution Guidelines": [[334, "contribution-guidelines"]], "Pull Request Checklist": [[334, "pull-request-checklist"]], "Pull Request Template": [[334, "pull-request-template"]], "Support": [[334, "support"], [336, "support"]], "Data Augmentation": [[335, "data-augmentation"], [335, "id1"]], "Getting Started": [[335, "getting-started"], [340, "getting-started"]], "Install Dependency": [[335, "install-dependency"]], "Install Intel_Extension_for_Transformers": [[335, "install-intel-extension-for-transformers"]], "Script": [[335, "script"]], "Parameters of Data Augmentation": [[335, "parameters-of-data-augmentation"]], "Supported Augmenter": [[335, "supported-augmenter"]], "Text Generation Augmenter": [[335, "text-generation-augmenter"]], "Augmenter Arguments:": [[335, "augmenter-arguments"]], "Intel\u00ae Extension for Transformers": [[336, "intel-extension-for-transformers"]], "Overview": [[336, "overview"]], "Recommended Hardware": [[336, "recommended-hardware"]], "Validated Hardware Environment": [[336, "validated-hardware-environment"], [341, "validated-hardware-environment"]], "How it Works": [[336, "how-it-works"]], "Get Started": [[336, "get-started"], [375, "get-started"]], "1. Prerequisites": [[336, "prerequisites"]], "2. Installation": [[336, "installation"]], "2.1 Install from PyPi": [[336, "install-from-pypi"]], "2.2 Install from Conda": [[336, "install-from-conda"]], "2.3 Install from Source": [[336, "install-from-source"]], "3. How To Run": [[336, "how-to-run"]], "3.1 Install Requirements": [[336, "install-requirements"]], "3.2 Prepare Datasets": [[336, "prepare-datasets"]], "3.3 Model Compression": [[336, "model-compression"]], "3.4 Model Inference": [[336, "model-inference"]], "Expected Output": [[336, "expected-output"]], "Summary and Next Steps": [[336, "summary-and-next-steps"]], "Learn More": [[336, "learn-more"]], "Distillation": [[337, "distillation"], [337, "id1"], [338, "distillation"], [340, "distillation"]], "Knowledge Distillation": [[337, "knowledge-distillation"], [338, "knowledge-distillation"]], "Intermediate Layer Knowledge Distillation": [[337, "intermediate-layer-knowledge-distillation"]], "usage": [[337, "usage"]], "Pytorch Script:": [[337, "pytorch-script"]], "Tensorflow Script:": [[337, "tensorflow-script"]], "Create an Instance of Metric": [[337, "create-an-instance-of-metric"], [375, "create-an-instance-of-metric"]], "Create an Instance of Criterion(Optional)": [[337, "create-an-instance-of-criterion-optional"]], "Create an Instance of DistillationConfig": [[337, "create-an-instance-of-distillationconfig"]], "Distill with Trainer": [[337, "distill-with-trainer"]], "Quantization": [[338, "quantization"], [340, "quantization"], [375, "quantization"]], "Stock PyTorch Examples": [[338, "stock-pytorch-examples"]], "Intel Extension for Pytorch (IPEX) examples": [[338, "intel-extension-for-pytorch-ipex-examples"]], "Intel TensorFlow Examples": [[338, "intel-tensorflow-examples"]], "Length Adaptive Transformers": [[338, "length-adaptive-transformers"]], "Pruning": [[338, "pruning"], [340, "pruning"], [374, "pruning"]], "Auto Distillation (NAS Based)": [[338, "auto-distillation-nas-based"]], "Orchestrate": [[338, "orchestrate"]], "Reference Deployment on Neural Engine": [[338, "reference-deployment-on-neural-engine"]], "Dense Reference Deployment on Neural Engine": [[338, "dense-reference-deployment-on-neural-engine"]], "Sparse Reference Deployment on Neural Engine": [[338, "sparse-reference-deployment-on-neural-engine"]], "Export to ONNX": [[339, "export-to-onnx"]], "Supported Model Export Matrix": [[339, "supported-model-export-matrix"]], "Export to FP32 ONNX Model": [[339, "export-to-fp32-onnx-model"]], "Export to BF16 ONNX Model": [[339, "export-to-bf16-onnx-model"]], "API usage": [[339, "api-usage"]], "Export to INT8 ONNX Model": [[339, "export-to-int8-onnx-model"]], "For executor backend": [[339, "for-executor-backend"]], "Quantized Length Adaptive Transformer": [[340, "quantized-length-adaptive-transformer"]], "Transformers-accelerated Neural Engine": [[340, "transformers-accelerated-neural-engine"]], "Installation": [[341, "installation"], [342, "installation"], [353, "installation"]], "Linux Installation": [[341, "linux-installation"]], "Prerequisites": [[341, "prerequisites"], [341, "id1"], [342, "prerequisites"]], "Install from Pypi": [[341, "install-from-pypi"], [341, "id2"]], "Install from Source": [[341, "install-from-source"], [341, "id3"]], "Windows Installation": [[341, "windows-installation"]], "System Requirements": [[341, "system-requirements"]], "Validated Software Environment": [[341, "validated-software-environment"]], "Install": [[342, "install"]], "Install stable version intel_extension_for_transformers from pip": [[342, "install-stable-version-intel-extension-for-transformers-from-pip"]], "Install Neural Engine binary to deploy bare metal engine": [[342, "install-neural-engine-binary-to-deploy-bare-metal-engine"]], "Add Customized Pattern": [[343, "add-customized-pattern"]], "Register the Nodes\u2019 Op Types": [[343, "register-the-nodes-op-types"]], "Set the Pattern Mapping Config and Register the Pattern": [[343, "set-the-pattern-mapping-config-and-register-the-pattern"]], "Fuse Pattern and Set Attributes of New Pattern after Fusion": [[343, "fuse-pattern-and-set-attributes-of-new-pattern-after-fusion"]], "Deploy and Integration": [[344, "deploy-and-integration"]], "1. Architecture": [[344, "architecture"]], "2. Deploy a TF/ONNX model using Engine inference": [[344, "deploy-a-tf-onnx-model-using-engine-inference"]], "Generate the Engine Graph through TF/ONNX model": [[344, "generate-the-engine-graph-through-tf-onnx-model"]], "Run the inference by Engine": [[344, "run-the-inference-by-engine"], [344, "id1"]], "3. Manual customized yaml and weight binary to use Engine inference": [[344, "manual-customized-yaml-and-weight-binary-to-use-engine-inference"]], "Build the yaml and weight binary": [[344, "build-the-yaml-and-weight-binary"]], "4. Integrate Neural Engine as Backend": [[344, "integrate-neural-engine-as-backend"]], "Profiling": [[345, "profiling"]], "Profling API": [[345, "profling-api"]], "You can get profile only with ENGINE_PROFILING=1 before running model by python/c++ API.": [[345, "you-can-get-profile-only-with-engine-profiling-1-before-running-model-by-python-c-api"]], "Profiling Examples": [[345, "profiling-examples"]], "Parts of CSV Profiling": [[345, "parts-of-csv-profiling"]], "Sparse Ratio Setting Part": [[345, "sparse-ratio-setting-part"]], "Operator Profiling Part": [[345, "operator-profiling-part"]], "Total Profiling Part": [[345, "total-profiling-part"]], "Levels of JSON Profiling": [[345, "levels-of-json-profiling"]], "Model Level": [[345, "model-level"]], "Iteration Level": [[345, "iteration-level"]], "Operator Level": [[345, "operator-level"]], "Engine Tuning": [[346, "engine-tuning"]], "Pattern Tuning for Dispatching Best Pattern": [[346, "pattern-tuning-for-dispatching-best-pattern"]], "Graph Tuning for Dispatching Best Graph": [[346, "graph-tuning-for-dispatching-best-graph"]], "OP Tuning for Dispatching Best Kernel and Related Runtime Config": [[346, "op-tuning-for-dispatching-best-kernel-and-related-runtime-config"]], "How to Turn on Op Tuning Mechanism": [[346, "how-to-turn-on-op-tuning-mechanism"]], "More Tuning Options": [[346, "more-tuning-options"]], "Graph Fusion": [[347, "graph-fusion"]], "Pattern Mapping Dict": [[347, "pattern-mapping-dict"]], "Obtain the Necessary Information for New Pattern Construction": [[347, "obtain-the-necessary-information-for-new-pattern-construction"]], "Create Nodes and Establish Connections": [[347, "create-nodes-and-establish-connections"]], "Remove the Old Pattern and Insert the New Pattern": [[347, "remove-the-old-pattern-and-insert-the-new-pattern"]], "Compile an ONNX model to Engine IR": [[348, "compile-an-onnx-model-to-engine-ir"]], "Supported ONNX Format": [[348, "supported-onnx-format"]], "Compile Examples": [[348, "compile-examples"]], "Prepare ONNX Model": [[348, "prepare-onnx-model"]], "Compile to IR": [[348, "compile-to-ir"]], "Quantize a ONNX model to engine low precision/int8 IR": [[349, "quantize-a-onnx-model-to-engine-low-precision-int8-ir"]], "Design": [[349, "design"]], "Prerequisite": [[349, "prerequisite"]], "Install environment": [[349, "install-environment"]], "Prepare Dataset": [[349, "prepare-dataset"]], "Prepare ONNX model": [[349, "prepare-onnx-model"]], "Run tuning and benchmark": [[349, "run-tuning-and-benchmark"]], "1. To get the tuned model and its accuracy:": [[349, "to-get-the-tuned-model-and-its-accuracy"]], "2. To get the benchmark of tuned model:": [[349, "to-get-the-benchmark-of-tuned-model"]], "Customized Operators Register": [[350, "customized-operators-register"]], "1. Add *.h of the customized operator to executor/include/operators": [[350, "add-h-of-the-customized-operator-to-executor-include-operators"]], "2. Add *.cpp of the customized operator to executor/src/operators": [[350, "add-cpp-of-the-customized-operator-to-executor-src-operators"]], "Pattern Recognize": [[351, "pattern-recognize"]], "Pattern Representation": [[351, "pattern-representation"]], "Parse Pattern Representation List": [[351, "parse-pattern-representation-list"]], "Search Each Straight Chain Pattern": [[351, "search-each-straight-chain-pattern"]], "Splice Sub-chains with the Main Chain and Remove Duplicate Results": [[351, "splice-sub-chains-with-the-main-chain-and-remove-duplicate-results"]], "Neural Engine Support Matrix": [[352, "neural-engine-support-matrix"]], "platform configuration": [[352, "platform-configuration"]], "Transformers-Accelerated Libraries": [[353, "transformers-accelerated-libraries"]], "Build": [[353, "build"], [368, "build"]], "Test": [[353, "test"]], "API reference for users": [[353, "api-reference-for-users"]], "sparse_matmul kernel:": [[353, "sparse-matmul-kernel"]], "Supported Matrix": [[353, "supported-matrix"]], "3D Inference": [[354, "d-inference"]], "Memory Layout in SPMM_VNNI": [[354, "memory-layout-in-spmm-vnni"]], "Cache Issues": [[354, "cache-issues"]], "SPMM_VNNI 3D Inference": [[354, "spmm-vnni-3d-inference"]], "Binary Injectors": [[355, "binary-injectors"]], "Framework Features": [[355, "framework-features"], [356, "framework-features"]], "param_type.hpp": [[355, "param-type-hpp"]], "operator_desc.hpp": [[355, "operator-desc-hpp"], [356, "operator-desc-hpp"]], "jit_binaryop_injector.hpp": [[355, "jit-binaryop-injector-hpp"]], "Developer\u2019s Perspective": [[355, "developer-s-perspective"]], "User\u2019s Perspective": [[355, "user-s-perspective"], [356, "user-s-perspective"]], "Element-wise Injector": [[356, "element-wise-injector"]], "param_types.hpp": [[356, "param-types-hpp"]], "alpha,beta,scale meaning": [[356, "alpha-beta-scale-meaning"]], "jit_eltwise_injector.hpp": [[356, "jit-eltwise-injector-hpp"]], "Developer\u2019s Perspective.": [[356, "developer-s-perspective"]], "Dense and Sparse": [[357, "dense-and-sparse"]], "Naive": [[357, "naive"]], "Tile": [[357, "tile"]], "Efficient kernel": [[357, "efficient-kernel"]], "More work per thread": [[357, "more-work-per-thread"]], "Prefetch": [[357, "prefetch"]], "Sparse acceleration": [[357, "sparse-acceleration"]], "Sparse GEMM AMX": [[358, "sparse-gemm-amx"]], "Brief introduction for ISAs": [[358, "brief-introduction-for-isas"]], "Pattern": [[358, "pattern"]], "Reorder": [[358, "reorder"]], "Sparse GEMM AVX512F": [[359, "sparse-gemm-avx512f"]], "Key Instruction": [[359, "key-instruction"]], "Sparse Pattern & Data Format": [[359, "sparse-pattern-data-format"]], "Loops": [[359, "loops"]], "Dynamic Quant Matmul": [[360, "dynamic-quant-matmul"]], "problem description": [[360, "problem-description"]], "Kernel details": [[360, "kernel-details"]], "Prerequisites for using dynamic quant matmul": [[360, "prerequisites-for-using-dynamic-quant-matmul"]], "Preprocessing of weight matrix": [[360, "preprocessing-of-weight-matrix"]], "different jit-paths for different weight size": [[360, "different-jit-paths-for-different-weight-size"]], "small_wei jit-path": [[360, "small-wei-jit-path"]], "large_wei jit-path": [[360, "large-wei-jit-path"]], "Sparse GEMM with Layer-Normalize": [[361, "sparse-gemm-with-layer-normalize"]], "Problem Description": [[361, "problem-description"]], "layernormalized sparse matmul": [[361, "layernormalized-sparse-matmul"]], "Pre-compute SPMM": [[361, "pre-compute-spmm"]], "Direct Layernorm_ba": [[361, "direct-layernorm-ba"]], "Transposed MatMul": [[362, "transposed-matmul"]], "Problem Statements": [[362, "problem-statements"]], "Matmul_p2031_2013": [[362, "matmul-p2031-2013"]], "Matmul_avx512f_p2031_p2013": [[362, "matmul-avx512f-p2031-p2013"]], "Matmul_noperm_p2031_p1302": [[362, "matmul-noperm-p2031-p1302"]], "Matmul_vnni_noperm_p2013_p1302": [[362, "matmul-vnni-noperm-p2013-p1302"]], "Reorder beforehand": [[362, "reorder-beforehand"]], "Transposed MHA": [[363, "transposed-mha"]], "Problem description": [[363, "problem-description"]], "Details": [[363, "details"]], "Reordering": [[363, "reordering"]], "Calculation": [[363, "calculation"]], "Sparse GEMM VNNI": [[364, "sparse-gemm-vnni"]], "On the fly activation reordering": [[364, "on-the-fly-activation-reordering"]], "Candidate patterns": [[364, "candidate-patterns"]], "Performance and Profiling": [[365, "performance-and-profiling"]], "Verbose": [[365, "verbose"]], "VTune": [[365, "vtune"]], "SDE": [[365, "sde"]], "Validated Performance Data": [[366, "validated-performance-data"]], "Single Thread": [[366, "single-thread"]], "Multi Thread (Thread = 4)": [[366, "multi-thread-thread-4"]], "Platform Configuration": [[366, "platform-configuration"]], "How to visualize weights distribution of sparse model": [[367, "how-to-visualize-weights-distribution-of-sparse-model"]], "Setups": [[367, "setups"]], "1. Prepare the sparse model": [[367, "prepare-the-sparse-model"]], "2. Run below commands": [[367, "run-below-commands"]], "3. Analysis results": [[367, "analysis-results"]], "Benchmark for Kernels": [[368, "benchmark-for-kernels"]], "sparse_matmul": [[368, "sparse-matmul"]], "spmm_avx512f": [[368, "spmm-avx512f"]], "spmm_vnni": [[368, "spmm-vnni"]], "spmm_amx_bf16_x16": [[368, "spmm-amx-bf16-x16"]], "eltwiseop": [[368, "eltwiseop"]], "layernorm_ba": [[368, "layernorm-ba"]], "transpose_matmul": [[368, "transpose-matmul"]], "matmul_avx512f_p2031_p2013": [[368, "matmul-avx512f-p2031-p2013"]], "matmul_vnni_noperm_p2031_p1302": [[368, "matmul-vnni-noperm-p2031-p1302"]], "softmax": [[368, "softmax"]], "attention": [[368, "attention"]], "Static MHA": [[368, "static-mha"]], "dynamic_quant_matmul": [[368, "dynamic-quant-matmul"]], "dynamic_quant": [[368, "dynamic-quant"]], "For developers": [[368, "for-developers"]], "Inputs format": [[369, "inputs-format"]], "Legal Information": [[370, "legal-information"]], "License": [[370, "license"]], "Citation": [[370, "citation"]], "Trademarks": [[370, "trademarks"]], "Metrics": [[371, "metrics"]], "Supported Metric": [[371, "supported-metric"]], "Metric Class Summary": [[371, "metric-class-summary"]], "Get Start with Metrics": [[371, "get-start-with-metrics"]], "Objective": [[372, "objective"]], "Supported Objectives Matrix:": [[372, "supported-objectives-matrix"]], "Examples:": [[372, "examples"]], "Pipeline": [[373, "pipeline"]], "Pipeline Inference for INT8 Model": [[373, "pipeline-inference-for-int8-model"]], "Pipeline Inference for Executor Backend": [[373, "pipeline-inference-for-executor-backend"]], "Pruning types": [[374, "pruning-types"]], "Script:": [[374, "script"], [375, "script"]], "Create an instance of Metric": [[374, "create-an-instance-of-metric"]], "Create list of an instance of PrunerConfig(Optional)": [[374, "create-list-of-an-instance-of-prunerconfig-optional"]], "Create an instance of PruningConfig": [[374, "create-an-instance-of-pruningconfig"]], "Prune with Trainer": [[374, "prune-with-trainer"]], "Quantization Fundamentals": [[375, "quantization-fundamentals"]], "Quantization Approach": [[375, "quantization-approach"]], "Post Training Dynamic Quantization": [[375, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[375, "post-training-static-quantization"]], "Quantization Aware Training": [[375, "quantization-aware-training"]], "Accuracy Aware Tuning": [[375, "accuracy-aware-tuning"]], "Supported Feature Matrix": [[375, "supported-feature-matrix"]], "Create an Instance of Objective(Optional)": [[375, "create-an-instance-of-objective-optional"]], "Create an Instance of QuantizationConfig": [[375, "create-an-instance-of-quantizationconfig"]], "Quantization with Trainer": [[375, "quantization-with-trainer"]], "Release": [[376, "release"]], "Release Notes": [[376, "release-notes"]], "Contents:": [[379, null], [384, null]]}, "indexentries": {"exampleclass (class in intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass"]], "attr1 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr1"]], "attr2 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr2"]], "attr5 (intel_extension_for_transformers.api_doc_example.exampleclass attribute)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.attr5"]], "attribute1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.attribute1"]], "function1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function1"]], "function2() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function2"]], "function3() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.function3"]], "generator1() (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.generator1"]], "intel_extension_for_transformers.api_doc_example": [[0, "module-intel_extension_for_transformers.api_doc_example"]], "method1() (intel_extension_for_transformers.api_doc_example.exampleclass method)": [[0, "intel_extension_for_transformers.api_doc_example.ExampleClass.method1"]], "module": [[0, "module-intel_extension_for_transformers.api_doc_example"], [1, "module-intel_extension_for_transformers.backends"], [2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"], [3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"], [4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"], [5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"], [6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"], [7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"], [8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"], [9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"], [10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"], [11, "module-intel_extension_for_transformers.backends.neural_engine.compile"], [12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"], [13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"], [14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"], [15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"], [16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"], [17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"], [18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"], [19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"], [20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"], [21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"], [22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"], [23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"], [24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"], [25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"], [26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"], [27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"], [28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"], [29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"], [30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"], [31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"], [32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"], [33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"], [34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"], [35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"], [36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"], [37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"], [38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"], [39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"], [40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"], [41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"], [42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"], [43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"], [44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"], [45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"], [46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"], [47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"], [48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"], [49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"], [50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"], [51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"], [52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"], [53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"], [54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"], [55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"], [56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"], [57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"], [58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"], [59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"], [60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"], [61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"], [62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"], [63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"], [64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"], [65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"], [66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"], [67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"], [68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"], [69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"], [70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"], [71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"], [72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"], [73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"], [74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"], [75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"], [76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"], [77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"], [78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"], [79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"], [80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"], [81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"], [82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"], [83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"], [84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"], [85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"], [86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"], [87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"], [88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"], [89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"], [90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"], [91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"], [92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"], [93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"], [94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"], [95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"], [96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"], [97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"], [98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"], [99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"], [100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"], [101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"], [102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"], [103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"], [104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"], [105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"], [106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"], [107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"], [108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"], [109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"], [110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"], [111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"], [112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"], [113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"], [114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"], [115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"], [116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"], [117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"], [118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"], [119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"], [120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"], [121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"], [122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"], [123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"], [124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"], [125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"], [126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"], [127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"], [128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"], [129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"], [130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"], [131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"], [132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"], [133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"], [134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"], [135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"], [136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"], [137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"], [138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"], [139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"], [140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"], [141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"], [142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"], [143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"], [144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"], [145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"], [146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"], [147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"], [148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"], [149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"], [150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"], [151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"], [152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"], [153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"], [154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"], [155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"], [156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"], [157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"], [158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"], [159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"], [160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"], [161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"], [162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"], [163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"], [164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"], [165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"], [166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"], [167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"], [168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"], [169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"], [170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"], [171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"], [172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"], [173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"], [174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"], [175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"], [176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"], [177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"], [178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"], [179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"], [180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"], [181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"], [182, "module-intel_extension_for_transformers.backends.neural_engine"], [183, "module-intel_extension_for_transformers.evaluation"], [184, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator"], [185, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness"], [186, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface"], [187, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models"], [188, "module-intel_extension_for_transformers"], [189, "module-intel_extension_for_transformers.optimization.benchmark"], [190, "module-intel_extension_for_transformers.optimization.config"], [191, "module-intel_extension_for_transformers.optimization.distillation"], [192, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"], [193, "module-intel_extension_for_transformers.optimization.dynamic.evolution"], [194, "module-intel_extension_for_transformers.optimization.dynamic"], [195, "module-intel_extension_for_transformers.optimization"], [196, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"], [197, "module-intel_extension_for_transformers.optimization.mixture"], [198, "module-intel_extension_for_transformers.optimization.model"], [199, "module-intel_extension_for_transformers.optimization.nas.basic_nas"], [200, "module-intel_extension_for_transformers.optimization.nas"], [201, "module-intel_extension_for_transformers.optimization.nas.nas"], [202, "module-intel_extension_for_transformers.optimization.optimizer"], [203, "module-intel_extension_for_transformers.optimization.optimizer_tf"], [204, "module-intel_extension_for_transformers.optimization.pipeline"], [205, "module-intel_extension_for_transformers.optimization.pruning"], [206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"], [207, "module-intel_extension_for_transformers.optimization.pytorch_pruner"], [208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"], [209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"], [210, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"], [211, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"], [212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"], [213, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"], [214, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"], [215, "module-intel_extension_for_transformers.optimization.quantization"], [216, "module-intel_extension_for_transformers.optimization.trainer"], [217, "module-intel_extension_for_transformers.optimization.utils.get_throughput"], [218, "module-intel_extension_for_transformers.optimization.utils"], [219, "module-intel_extension_for_transformers.optimization.utils.metrics"], [220, "module-intel_extension_for_transformers.optimization.utils.models"], [221, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"], [222, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"], [223, "module-intel_extension_for_transformers.optimization.utils.objectives"], [224, "module-intel_extension_for_transformers.optimization.utils.utility"], [225, "module-intel_extension_for_transformers.optimization.utils.utility_tf"], [226, "module-intel_extension_for_transformers.preprocessing.data_augmentation"], [227, "module-intel_extension_for_transformers.preprocessing"], [228, "module-intel_extension_for_transformers.preprocessing.utils"], [229, "module-intel_extension_for_transformers.version"], [230, "module-sparsity_all"], [231, "module-test_add_cls_token"], [232, "module-test_add_embeddings"], [233, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"], [234, "module-test_attention_reshape"], [235, "module-test_bert_mini_fp32"], [236, "module-test_binary_op"], [237, "module-test_binaryop"], [238, "module-test_cast_to"], [239, "module-test_concat"], [240, "module-test_conv_reshape"], [241, "module-test_decoder_attn_reshape"], [242, "module-test_dispatcher_tuning_acc"], [243, "module-test_dispatcher_tuning_throughput"], [244, "module-test_dynamic_quantization"], [245, "module-test_embedding"], [246, "module-test_embeddingbag"], [247, "module-test_execution_options"], [248, "module-test_gelu"], [249, "module-test_gpt_int8"], [250, "module-test_graph_dispatch"], [251, "module-test_insert_input_output_data"], [252, "module-test_is_supported_onnx_graph"], [253, "module-test_last_layer_shape"], [254, "module-test_layer_norm_with_reduce_mean"], [255, "module-test_layer_norm_with_transpose"], [256, "module-test_layernorm"], [257, "module-test_linear"], [258, "module-test_linear_int8"], [259, "module-test_main"], [260, "module-test_matmul"], [261, "module-test_matmul_int8"], [262, "module-test_matmul_with_bias_relu"], [263, "module-test_matmul_with_bias_sigmoid"], [264, "module-test_matmul_with_bias_tanh"], [265, "module-test_merged_embeddingbag"], [266, "module-test_model"], [267, "module-test_onnx_utils"], [268, "module-test_operator_adaptor"], [269, "module-test_ops"], [270, "module-test_padding_seq"], [271, "module-test_padding_sequence"], [272, "module-test_pattern_dispatch"], [273, "module-test_permute"], [274, "module-test_position_embeddings"], [275, "module-test_pow"], [276, "module-test_primitive_cache_acc"], [277, "module-test_primitive_cache_throughput"], [278, "module-test_qkv_merge"], [279, "module-test_qkv_reshape"], [280, "module-test_quant_onnx_execute"], [281, "module-test_reshape_after_restore_hidden_states"], [282, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"], [283, "module-test_reshape_before_restore_hidden_states"], [284, "module-test_size"], [285, "module-test_softmax"], [286, "module-test_start_end_logits"], [287, "module-test_tanh"], [288, "module-test_text_encoder"], [289, "module-test_text_encoder_bf16"], [290, "module-test_tf_utils"], [291, "module-test_token_type_embeddings"], [292, "module-test_transpose"], [293, "module-test_transpose_batch_matmul"], [294, "module-test_unet"], [295, "module-test_unet_bf16"], [296, "module-test_unsqueeze"], [297, "module-test_vae_decoder"], [298, "module-test_vae_decoder_bf16"], [299, "module-test_weight_sharing_acc"], [300, "module-test_weight_sharing_dispatcher_tuning_acc"], [301, "module-test_weight_sharing_dispatcher_tuning_throughtput"], [302, "module-test_weight_sharing_throughput"]], "module_debug_level1 (in module intel_extension_for_transformers.api_doc_example)": [[0, "intel_extension_for_transformers.api_doc_example.module_debug_level1"]], "intel_extension_for_transformers.backends": [[1, "module-intel_extension_for_transformers.backends"]], "compile() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.compile": [[2, "module-intel_extension_for_transformers.backends.neural_engine.compile.compile"]], "start_pipeline() (in module intel_extension_for_transformers.backends.neural_engine.compile.compile)": [[2, "intel_extension_for_transformers.backends.neural_engine.compile.compile.start_pipeline"]], "extractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor)": [[3, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor.Extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor": [[3, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.extractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors": [[4, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors"]], "onnxextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor)": [[5, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor.ONNXExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor": [[5, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.onnx_extractor"]], "tensorflowextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor)": [[6, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor.TensorflowExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor": [[6, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.tf_extractor"]], "torchextractor (class in intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor)": [[7, "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor.TorchExtractor"]], "intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor": [[7, "module-intel_extension_for_transformers.backends.neural_engine.compile.extractors.torch_extractor"]], "graph (class in intel_extension_for_transformers.backends.neural_engine.compile.graph.graph)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph"]], "add_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.add_config_item"]], "change_node_input_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_input_tensors"]], "change_node_output_tensors() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.change_node_output_tensors"]], "dump_tensor() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.dump_tensor"]], "engine_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.engine_init"]], "get_next_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_next_node_names"]], "get_node_by_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_by_name"]], "get_node_id() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_node_id"]], "get_pre_node_names() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_pre_node_names"]], "get_sparse_nodes_name() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_sparse_nodes_name"]], "get_tensor_idx() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.get_tensor_idx"]], "graph_dispatch() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_dispatch"]], "graph_init() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.graph_init"]], "inference() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inference"]], "inquire_config_item() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.inquire_config_item"]], "insert_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.insert_nodes"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph": [[8, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph.graph"]], "modify_node_connections() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.modify_node_connections"]], "remove_nodes() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.remove_nodes"]], "rename_node() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.rename_node"]], "save() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.save"]], "transpose_mode_int8() (intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.graph method)": [[8, "intel_extension_for_transformers.backends.neural_engine.compile.graph.graph.Graph.transpose_mode_int8"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph": [[9, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph"]], "lazyimport (class in intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.LazyImport"]], "autocast_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.autocast_init"]], "construct_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.construct_node"]], "get_autocast_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_autocast_info"]], "get_data_dtype() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_data_dtype"]], "get_model_fwk_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_model_fwk_name"]], "get_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.get_quant_info"]], "insert_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_pattern"]], "insert_quant_info() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.insert_quant_info"]], "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils": [[10, "module-intel_extension_for_transformers.backends.neural_engine.compile.graph_utils"]], "list2str() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.list2str"]], "names_from_input() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.names_from_input"]], "pattern_mapping() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping"]], "pattern_mapping_conf_validation() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.pattern_mapping_conf_validation"]], "quant_info_init() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.quant_info_init"]], "search_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_pattern"]], "search_straight_pattern() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.search_straight_pattern"]], "set_autocast() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.set_autocast"]], "str2list() (in module intel_extension_for_transformers.backends.neural_engine.compile.graph_utils)": [[10, "intel_extension_for_transformers.backends.neural_engine.compile.graph_utils.str2list"]], "intel_extension_for_transformers.backends.neural_engine.compile": [[11, "module-intel_extension_for_transformers.backends.neural_engine.compile"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders": [[12, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders"]], "loader (class in intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader)": [[13, "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader.Loader"]], "intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader": [[13, "module-intel_extension_for_transformers.backends.neural_engine.compile.loaders.loader"]], "logger (class in intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger"]], "debug() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.debug"]], "error() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.error"]], "fatal() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.fatal"]], "get_logger() (intel_extension_for_transformers.backends.neural_engine.compile.logger.logger method)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.Logger.get_logger"]], "info() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.info"]], "intel_extension_for_transformers.backends.neural_engine.compile.logger": [[14, "module-intel_extension_for_transformers.backends.neural_engine.compile.logger"]], "log() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.log"]], "warn() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warn"]], "warning() (in module intel_extension_for_transformers.backends.neural_engine.compile.logger)": [[14, "intel_extension_for_transformers.backends.neural_engine.compile.logger.warning"]], "bias_to_int32() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.bias_to_int32"]], "change_num_name() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.change_num_name"]], "get_children() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_children"]], "get_initializer_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_initializer_children_names"]], "get_node_children_names() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.get_node_children_names"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils": [[15, "module-intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils"]], "is_supported_onnx_graph() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_graph"]], "is_supported_onnx_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.is_supported_onnx_node"]], "onnx_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils)": [[15, "intel_extension_for_transformers.backends.neural_engine.compile.onnx_utils.onnx_extract_operator"]], "all (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.all)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.all": [[16, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.all"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.all.all method)": [[16, "intel_extension_for_transformers.backends.neural_engine.compile.ops.all.All.set_attr"]], "assert (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.assert)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert": [[17, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.assert"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.assert method)": [[17, "intel_extension_for_transformers.backends.neural_engine.compile.ops.assert.Assert.set_attr"]], "batchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul": [[18, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.batchmatmul method)": [[18, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul.BatchMatMul.set_attr"]], "batchmatmulv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2": [[19, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.batchmatmulv2 method)": [[19, "intel_extension_for_transformers.backends.neural_engine.compile.ops.batch_matmul_v2.BatchMatMulV2.set_attr"]], "biasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add": [[20, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.biasadd method)": [[20, "intel_extension_for_transformers.backends.neural_engine.compile.ops.bias_add.BiasAdd.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op": [[21, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.binary_op"]], "cast (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cast)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast": [[22, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cast"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.cast method)": [[22, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cast.Cast.set_attr"]], "concat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.concat)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat": [[23, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.concat"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.concat method)": [[23, "intel_extension_for_transformers.backends.neural_engine.compile.ops.concat.Concat.set_attr"]], "conv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.conv)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv": [[24, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.conv"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.conv method)": [[24, "intel_extension_for_transformers.backends.neural_engine.compile.ops.conv.Conv.set_attr"]], "cos (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.cos)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos": [[25, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.cos"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.cos method)": [[25, "intel_extension_for_transformers.backends.neural_engine.compile.ops.cos.Cos.set_attr"]], "add (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Add"]], "addv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.AddV2"]], "arange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Arange"]], "binaryadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.BinaryAdd"]], "constant (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Constant"]], "constantofshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ConstantOfShape"]], "convolution (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Convolution"]], "cumsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.CumSum"]], "dequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Dequantize"]], "dequantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.DequantizeLinear"]], "einsum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Einsum"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.EmbeddingBag"]], "erf (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Erf"]], "expand (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Expand"]], "expandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ExpandIndices"]], "fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Fill"]], "flatmapdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.FlatMapDataset"]], "flatten (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Flatten"]], "floor_divide (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Floor_divide"]], "identity (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Identity"]], "innerproduct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.InnerProduct"]], "input (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Input"]], "latrange (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.LatRange"]], "listconstruct (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListConstruct"]], "listunpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.ListUnpack"]], "loop (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Loop"]], "makeiterator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MakeIterator"]], "masked_fill (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Masked_fill"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasAdd"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasGelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasRelu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasSigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MatMulWithBiasTanh"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Matmul"]], "max (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Max"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.MergedEmbeddingbag"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Onehot"]], "opany (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.OpAny"]], "output (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Output"]], "positionids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.PositionIds"]], "qlinearadd (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearAdd"]], "qlinearmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMatMul"]], "qlinearmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.QLinearMul"]], "range (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Range"]], "realdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.RealDiv"]], "reciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Reciprocal"]], "relu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Relu"]], "repeat (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Repeat"]], "rsqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Rsqrt"]], "sequencelength (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SequenceLength"]], "sigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sigmoid"]], "silu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Silu"]], "sqrt (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Sqrt"]], "square (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Square"]], "squareddifference (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.SquaredDifference"]], "stack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Stack"]], "stopgradient (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.StopGradient"]], "tanh (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tanh"]], "tensorslicedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TensorSliceDataset"]], "tile (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Tile"]], "tokentypeids (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TokenTypeIds"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.TransposeBatchMatMul"]], "where (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops)": [[26, "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops.Where"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops": [[26, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.empty_ops"]], "expanddims (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims": [[27, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.expanddims method)": [[27, "intel_extension_for_transformers.backends.neural_engine.compile.ops.expand_dims.ExpandDims.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2": [[28, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_matmul_v2"]], "fusedbatchnormv3 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3": [[29, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.fusedbatchnormv3 method)": [[29, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_batch_norm_v3.FusedBatchNormV3.set_attr"]], "fusedgemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm": [[30, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.fusedgemm method)": [[30, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_gemm.FusedGemm.set_attr"]], "fusedmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul": [[31, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.fusedmatmul method)": [[31, "intel_extension_for_transformers.backends.neural_engine.compile.ops.fused_matmul.FusedMatMul.set_attr"]], "gather (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather"]], "gatherv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather": [[32, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gather method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.Gather.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.gatherv2 method)": [[32, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather.GatherV2.set_attr"]], "gatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements": [[33, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.gatherelements method)": [[33, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gather_elements.GatherElements.set_attr"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu": [[34, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.gelu method)": [[34, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gelu.Gelu.set_attr"]], "gemm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm": [[35, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.gemm method)": [[35, "intel_extension_for_transformers.backends.neural_engine.compile.ops.gemm.Gemm.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops": [[36, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops"]], "iteratorgetnext (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next": [[37, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.iteratorgetnext method)": [[37, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_get_next.IteratorGetNext.set_attr"]], "iteratorv2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2": [[38, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.iteratorv2 method)": [[38, "intel_extension_for_transformers.backends.neural_engine.compile.ops.iterator_v2.IteratorV2.set_attr"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNorm"]], "layernormalization (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization": [[39, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.layernormalization method)": [[39, "intel_extension_for_transformers.backends.neural_engine.compile.ops.layer_normalization.LayerNormalization.set_attr"]], "logsoftmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax": [[40, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.logsoftmax method)": [[40, "intel_extension_for_transformers.backends.neural_engine.compile.ops.log_softmax.LogSoftmax.set_attr"]], "mapandbatchdataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset": [[41, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.mapandbatchdataset method)": [[41, "intel_extension_for_transformers.backends.neural_engine.compile.ops.map_and_batch_dataset.MapAndBatchDataset.set_attr"]], "matmul (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul": [[42, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.matmul method)": [[42, "intel_extension_for_transformers.backends.neural_engine.compile.ops.matmul.MatMul.set_attr"]], "mean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.mean)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean": [[43, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.mean method)": [[43, "intel_extension_for_transformers.backends.neural_engine.compile.ops.mean.Mean.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm": [[44, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.mkl_layer_norm"]], "modeldataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset": [[45, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.modeldataset method)": [[45, "intel_extension_for_transformers.backends.neural_engine.compile.ops.model_dataset.ModelDataset.set_attr"]], "onehot (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot": [[46, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.onehot method)": [[46, "intel_extension_for_transformers.backends.neural_engine.compile.ops.one_hot.OneHot.set_attr"]], "onnxinput (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.onnxinput method)": [[47, "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input.ONNXINPUT.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input": [[47, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.onnx_input"]], "operator (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator"]], "construct() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.construct"]], "extract() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.extract"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.op": [[48, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.op"]], "operator_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.ops.op)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator_registry"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.op.operator method)": [[48, "intel_extension_for_transformers.backends.neural_engine.compile.ops.op.Operator.set_attr"]], "optimizedataset (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset": [[49, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.optimizedataset method)": [[49, "intel_extension_for_transformers.backends.neural_engine.compile.ops.optimize_dataset.OptimizeDataset.set_attr"]], "pack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pack)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack": [[50, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.pack method)": [[50, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pack.Pack.set_attr"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence": [[51, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.paddingsequence method)": [[51, "intel_extension_for_transformers.backends.neural_engine.compile.ops.padding_sequence.PaddingSequence.set_attr"]], "placeholder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder": [[52, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.placeholder method)": [[52, "intel_extension_for_transformers.backends.neural_engine.compile.ops.placeholder.Placeholder.set_attr"]], "packagepositionembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed": [[53, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.packagepositionembedding method)": [[53, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pos_embed.PackagePositionEmbedding.set_attr"]], "pow (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.pow)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow": [[54, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.pow"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.pow method)": [[54, "intel_extension_for_transformers.backends.neural_engine.compile.ops.pow.Pow.set_attr"]], "quantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize"]], "quantizelinear (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear": [[55, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantize method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.Quantize.set_attr"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.quantizelinear method)": [[55, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_linear.QuantizeLinear.set_attr"]], "quantizev2 (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2": [[56, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.quantizev2 method)": [[56, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantize_v2.QuantizeV2.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize": [[57, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_fused_matmul_and_dequantize"]], "quantizedmatmulwithbiasanddequantize (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize": [[58, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.quantizedmatmulwithbiasanddequantize method)": [[58, "intel_extension_for_transformers.backends.neural_engine.compile.ops.quantized_matmul_with_bias_and_dequantize.QuantizedMatMulWithBiasAndDequantize.set_attr"]], "reducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean": [[59, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.reducemean method)": [[59, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_mean.ReduceMean.set_attr"]], "reducesum (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum": [[60, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.reducesum method)": [[60, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reduce_sum.ReduceSum.set_attr"]], "reorder (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder": [[61, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.reorder method)": [[61, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reorder.Reorder.set_attr"]], "reshape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape": [[62, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.reshape method)": [[62, "intel_extension_for_transformers.backends.neural_engine.compile.ops.reshape.Reshape.set_attr"]], "rsub (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub": [[63, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.rsub method)": [[63, "intel_extension_for_transformers.backends.neural_engine.compile.ops.rsub.Rsub.set_attr"]], "scatterelements (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements": [[64, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.scatterelements method)": [[64, "intel_extension_for_transformers.backends.neural_engine.compile.ops.scatter_elements.ScatterElements.set_attr"]], "shape (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.shape)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape": [[65, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.shape"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.shape method)": [[65, "intel_extension_for_transformers.backends.neural_engine.compile.ops.shape.Shape.set_attr"]], "sin (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.sin)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin": [[66, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.sin"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.sin method)": [[66, "intel_extension_for_transformers.backends.neural_engine.compile.ops.sin.Sin.set_attr"]], "size (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.size)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.size": [[67, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.size"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.size.size method)": [[67, "intel_extension_for_transformers.backends.neural_engine.compile.ops.size.Size.set_attr"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.slice": [[68, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.slice"]], "softmax (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax": [[69, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.softmax method)": [[69, "intel_extension_for_transformers.backends.neural_engine.compile.ops.softmax.Softmax.set_attr"]], "split (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.split)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.split": [[70, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.split"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.split.split method)": [[70, "intel_extension_for_transformers.backends.neural_engine.compile.ops.split.Split.set_attr"]], "squeeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze": [[71, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.squeeze method)": [[71, "intel_extension_for_transformers.backends.neural_engine.compile.ops.squeeze.Squeeze.set_attr"]], "stridedslice (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice": [[72, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.stridedslice method)": [[72, "intel_extension_for_transformers.backends.neural_engine.compile.ops.strided_slice.StridedSlice.set_attr"]], "tensor (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor)": [[73, "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor.Tensor"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor": [[73, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.tensor"]], "topk (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k": [[74, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.topk method)": [[74, "intel_extension_for_transformers.backends.neural_engine.compile.ops.top_k.TopK.set_attr"]], "transpose (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose": [[75, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.transpose method)": [[75, "intel_extension_for_transformers.backends.neural_engine.compile.ops.transpose.Transpose.set_attr"]], "unpack (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack": [[76, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.unpack method)": [[76, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unpack.Unpack.set_attr"]], "unsqueeze (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze": [[77, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.unsqueeze method)": [[77, "intel_extension_for_transformers.backends.neural_engine.compile.ops.unsqueeze.Unsqueeze.set_attr"]], "view (class in intel_extension_for_transformers.backends.neural_engine.compile.ops.view)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View"]], "intel_extension_for_transformers.backends.neural_engine.compile.ops.view": [[78, "module-intel_extension_for_transformers.backends.neural_engine.compile.ops.view"]], "set_attr() (intel_extension_for_transformers.backends.neural_engine.compile.ops.view.view method)": [[78, "intel_extension_for_transformers.backends.neural_engine.compile.ops.view.View.set_attr"]], "innerproductreshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion)": [[79, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion.InnerproductReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductreshapefusion": [[79, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.InnerproductReshapeFusion"]], "addclstoken (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token)": [[80, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token.AddClsToken"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token": [[80, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_cls_token"]], "addembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings)": [[81, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings.AddEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings": [[81, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.add_embeddings"]], "arangewithreciprocal (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal)": [[82, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal.ArangewithReciprocal"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal": [[82, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.arangewithreciprocal"]], "attentionblock_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape)": [[83, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape.AttentionBlock_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_attentionmaskaddreshape": [[83, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_AttentionMaskAddReshape"]], "attentionblock_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul)": [[84, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul.AttentionBlock_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_constantofshapewithmul": [[84, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_ConstantOfShapeWithMul"]], "attentionblock_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape)": [[85, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape.AttentionBlock_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvprereshape": [[85, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVPreReshape"]], "attentionblock_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape)": [[86, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape.AttentionBlock_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_qkvreshape": [[86, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_QKVReshape"]], "attentionblock_resize2gather (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather)": [[87, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather.AttentionBlock_Resize2Gather"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_resize2gather": [[87, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_Resize2Gather"]], "attentionblock_weightreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d)": [[88, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D.AttentionBlock_WeightReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionblock_weightreshapeto4d": [[88, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attentionBlock_WeightReshapeTo4D"]], "attentionmasklengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices)": [[89, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices.AttentionMaskLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices": [[89, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_mask_length_adaptive_keep_indices"]], "attentionoutputlayernormlengthadaptiveexpandindices (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices)": [[90, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices.AttentionOutputLayerNormLengthAdaptiveExpandIndices"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices": [[90, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_output_layer_norm_length_adaptive_keep_indices"]], "attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape)": [[91, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape.AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape": [[91, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.attention_reshape"]], "castto (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to)": [[92, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to.CastTo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to": [[92, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.cast_to"]], "collectquantinfo (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info)": [[93, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info.CollectQuantInfo"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info": [[93, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.collect_quant_info"]], "convreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape)": [[94, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape.ConvReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape": [[94, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.conv_reshape"]], "decoderattnreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape)": [[95, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape.DecoderAttnReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape": [[95, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.decoder_attn_reshape"]], "einsumwitharange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange)": [[96, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange.EinsumwithArange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange": [[96, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.einsumwitharange"]], "embeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag)": [[97, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag.EmbeddingBag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag": [[97, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.embeddingbag"]], "gelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu)": [[98, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu.Gelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu": [[98, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.gelu"]], "generatesequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence)": [[99, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence.GenerateSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence": [[99, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.generate_sequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph": [[100, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph"]], "innerproductwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu)": [[101, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu.InnerproductWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu": [[101, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithbiasgelu"]], "innerproductwithslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice)": [[102, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice.InnerproductwithSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice": [[102, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.innerproductwithslice"]], "inputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data)": [[103, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data.InputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data": [[103, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_data"]], "inputfile (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file)": [[104, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file.InputFile"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file": [[104, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.input_file"]], "insertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node)": [[105, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node.InsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node": [[105, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_bf16_node"]], "insertquantnode (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node)": [[106, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node.InsertQuantNode"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node": [[106, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.insert_quant_node"]], "int8bf16mixedprecisionchecker (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker)": [[107, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker.Int8BF16MixedPrecisionChecker"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker": [[107, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.int8_bf16_mixed_precision_checker"]], "interactfeatures (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features)": [[108, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features.InteractFeatures"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features": [[108, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.interact_features"]], "lastlayershape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape)": [[109, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape.LastLayerShape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape": [[109, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.last_layer_shape"]], "layernorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm)": [[110, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm.LayerNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm": [[110, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm"]], "layernormwithreducemean (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean)": [[111, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean.LayerNormWithReduceMean"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean": [[111, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_reduce_mean"]], "layernormwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose)": [[112, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose.LayerNormWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose": [[112, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.layer_norm_with_transpose"]], "loweralltuples (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples)": [[113, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples.LowerAllTuples"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples": [[113, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.lower_all_tuples"]], "matmulwithbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias)": [[114, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias.MatMulWithBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias": [[114, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias"]], "matmulwithbiasadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add)": [[115, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add.MatMulWithBiasAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add": [[115, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_add"]], "matmulwithbiasgelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu)": [[116, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu.MatMulWithBiasGelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu": [[116, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_gelu"]], "matmulwithbiasrelu (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu)": [[117, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu.MatMulWithBiasRelu"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu": [[117, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_relu"]], "matmulwithbiassigmoid (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid)": [[118, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid.MatMulWithBiasSigmoid"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid": [[118, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_sigmoid"]], "matmulwithbiastanh (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh)": [[119, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh.MatmulWithBiasTanh"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh": [[119, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_bias_tanh"]], "matmulwithtranspose (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose)": [[120, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose.MatMulWithTranspose"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose": [[120, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.matmul_with_transpose"]], "mergedembeddingbag (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag)": [[121, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag.MergedEmbeddingbag"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag": [[121, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.merged_embeddingbag"]], "multiheadattention (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention)": [[122, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention.MultiHeadAttention"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention": [[122, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.multi_head_attention"]], "operatoradaptor (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor)": [[123, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor.OperatorAdaptor"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor": [[123, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.operator_adaptor"]], "outputdata (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data)": [[124, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data.OutputData"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data": [[124, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.output_data"]], "paddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence)": [[125, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence.PaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence": [[125, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.padding_sequence"]], "pattern (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.Pattern"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern": [[126, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern"]], "pattern_registry() (in module intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern)": [[126, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.pattern.pattern_registry"]], "positionembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings)": [[127, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings.PositionEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings": [[127, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings"]], "positionembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1)": [[128, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1.PositionEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1": [[128, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.position_embeddings_v1"]], "qkvmerge (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge)": [[129, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge.QKVMerge"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge": [[129, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_merge"]], "qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape)": [[130, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape.QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape": [[130, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.qkv_reshape"]], "qunatizefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion)": [[131, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion.QunatizeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion": [[131, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantize_fusion"]], "quantizedgraphdtypecheck (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor)": [[132, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor.QuantizedGraphDtypeCheck"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor": [[132, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.quantized_graph_dtype_refactor"]], "removeconstantop (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op)": [[133, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op.RemoveConstantOP"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op": [[133, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_constant_op"]], "removelastview (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view)": [[134, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view.RemoveLastView"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view": [[134, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_last_view"]], "removerange (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range)": [[135, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range.RemoveRange"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range": [[135, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.remove_range"]], "removeslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice)": [[136, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice.RemoveSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice": [[136, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.removeslice"]], "reshapeafterrestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states)": [[137, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states.ReshapeAfterRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states": [[137, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_after_restore_hidden_states"]], "reshapebeforeandafterattentionoutlayernormgatherelements (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[138, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements.ReshapeBeforeAndAfterAttentionOutLayerNormGatherElements"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements": [[138, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "reshapebeforerestorehiddenstates (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states)": [[139, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states.ReshapeBeforeRestoreHiddenStates"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states": [[139, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_before_restore_hidden_states"]], "reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion)": [[140, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion.ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion": [[140, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.reshape_fusion"]], "resnetblock_instancenormreshapefromconv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv)": [[141, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv.ResnetBlock_InstanceNormReshapeFromConv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromconv": [[141, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromConv"]], "resnetblock_instancenormreshapefromdiv (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv)": [[142, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv.ResnetBlock_InstanceNormReshapeFromDiv"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetblock_instancenormreshapefromdiv": [[142, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.resnetBlock_instancenormReshapeFromdiv"]], "groupnorm (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm)": [[143, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm.GroupNorm"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetblock_groupnorm": [[143, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restnetBlock_groupNorm"]], "restorehiddenstatesinlengthadaptive (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices)": [[144, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices.RestoreHiddenStatesInLengthAdaptive"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices": [[144, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.restore_hidden_states_in_length_adaptive_update_indices"]], "roraryposemb (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb)": [[145, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb.RoraryPosEmb"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb": [[145, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.rotary_pos_emb"]], "slicemask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask)": [[146, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask.SliceMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask": [[146, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.slicemask"]], "stablediffusion_reshapefusion (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion)": [[147, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion.StableDiffusion_ReshapeFusion"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_reshapefusion": [[147, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_ReshapeFusion"]], "stablediffusion_bf16convert (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert)": [[148, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert.StableDiffusion_bf16Convert"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stablediffusion_bf16convert": [[148, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.stableDiffusion_bf16Convert"]], "startendlogits (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits)": [[149, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits.StartEndLogits"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits": [[149, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.start_end_logits"]], "subgraphmatcher (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher)": [[150, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher.SubGraphMatcher"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher": [[150, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.subgraph_matcher"]], "textencoder_wordembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding)": [[151, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding.TextEncoder_WordEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencdoer_word_embedding": [[151, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncdoer_word_embedding"]], "textencoder_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape)": [[152, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape.TextEncoder_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionmaskaddreshape": [[152, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionMaskAddReshape"]], "textencoder_attentionreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape)": [[153, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape.TextEncoder_AttentionReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_attentionreshape": [[153, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_AttentionReshape"]], "textencoder_kvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape)": [[154, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape.TextEncoder_KVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_kvreshape": [[154, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_KVReshape"]], "textencoder_mulreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape)": [[155, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape.TextEncoder_MulReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_mulreshape": [[155, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_MulReshape"]], "textencoder_qreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape)": [[156, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape.TextEncoder_QReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_qreshape": [[156, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_QReshape"]], "textencoder_softmaxreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape)": [[157, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape.TextEncoder_SoftmaxReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_softmaxreshape": [[157, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_SoftmaxReshape"]], "textencoder_casualattentionmask (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask)": [[158, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask.TextEncoder_CasualAttentionMask"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textencoder_causal_attention_mask": [[158, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.textEncoder_causal_attention_mask"]], "tokentypeembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings)": [[159, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings.TokenTypeEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings": [[159, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings"]], "tokentypeembeddingsv1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1)": [[160, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1.TokenTypeEmbeddingsV1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1": [[160, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.token_type_embeddings_v1"]], "torchembedding (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding)": [[161, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding.TorchEmbedding"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding": [[161, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_embedding"]], "torchinnerproductinsertbias (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias)": [[162, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias.TorchInnerProductInsertBias"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias": [[162, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torch_ip_insert_bias"]], "torchinsertbf16node (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node)": [[163, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node.TorchInsertBF16Node"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node": [[163, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchinsertbf16node"]], "torchpaddingsequence (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence)": [[164, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence.TorchPaddingSequence"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence": [[164, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.torchpaddingsquence"]], "transformer2dmodel_attentionmaskaddreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape)": [[165, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape.Transformer2Dmodel_AttentionMaskAddReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_attentionmaskaddreshape": [[165, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_AttentionMaskAddReshape"]], "transformer2dmodel_constantofshapewithmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul)": [[166, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul.Transformer2Dmodel_ConstantOfShapeWithMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_constantofshapewithmul": [[166, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_ConstantOfShapeWithMul"]], "transformer2dmodel_ffninputslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice)": [[167, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice.Transformer2Dmodel_FFNInputSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice": [[167, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice"]], "transformer2dmodel_ffninputslice_1 (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1)": [[168, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1.Transformer2Dmodel_FFNInputSlice_1"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_ffnslice_1": [[168, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_FFNSlice_1"]], "transformer2dmodel_qkvprereshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape)": [[169, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape.Transformer2Dmodel_QKVPreReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvprereshape": [[169, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVPreReshape"]], "transformer2dmodel_qkvreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape)": [[170, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape.Transformer2Dmodel_QKVReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape": [[170, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape"]], "transformer2dmodel_qkvreshapeto4d (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d)": [[171, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D.Transformer2Dmodel_QKVReshapeTo4D"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_qkvreshape4d": [[171, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_QKVReshape4D"]], "transformer2dmodel_encoderhiddenstatesreshape (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape)": [[172, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape.Transformer2Dmodel_EncoderHiddenStatesReshape"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_encoderhiddenstatesreshape": [[172, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_encoderHiddenStatesReshape"]], "transformer2dmodel_getsamplebatch (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch)": [[173, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch.Transformer2Dmodel_GetSampleBatch"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_getsamplebatch": [[173, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_getSampleBatch"]], "transformer2dmodel_instancenormreshapefromadd (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd)": [[174, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd.Transformer2Dmodel_InstancenormReshapeFromAdd"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromadd": [[174, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromAdd"]], "transformer2dmodel_instancenormreshapefromconcat (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat)": [[175, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat.Transformer2Dmodel_InstancenormReshapeFromConcat"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_instancenormreshapefromconcat": [[175, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_instancenormReshapeFromConcat"]], "transformer2dmodel_sampleslice (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice)": [[176, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice.Transformer2Dmodel_SampleSlice"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_sampleslice": [[176, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_sampleSlice"]], "transformer2dmodel_upblockresize (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize)": [[177, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize.Transformer2DModel_UpBlockResize"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2dmodel_upblockresize": [[177, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transformer2Dmodel_upBlockResize"]], "transposebatchmatmul (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul)": [[178, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul.TransposeBatchMatMul"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul": [[178, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.transpose_batch_matmul"]], "wordembeddings (class in intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings)": [[179, "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings.WordEmbeddings"]], "intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings": [[179, "module-intel_extension_for_transformers.backends.neural_engine.compile.sub_graph.word_embeddings"]], "tf_dtype_id (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.TF_DTYPE_ID"]], "create_tf_node() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.create_tf_node"]], "get_tensor_dest_op() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.get_tensor_dest_op"]], "graph_node_names_details() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.graph_node_names_details"]], "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils": [[180, "module-intel_extension_for_transformers.backends.neural_engine.compile.tf_utils"]], "tf_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.tf_utils)": [[180, "intel_extension_for_transformers.backends.neural_engine.compile.tf_utils.tf_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils": [[181, "module-intel_extension_for_transformers.backends.neural_engine.compile.torch_utils"]], "torch_extract_operator() (in module intel_extension_for_transformers.backends.neural_engine.compile.torch_utils)": [[181, "intel_extension_for_transformers.backends.neural_engine.compile.torch_utils.torch_extract_operator"]], "intel_extension_for_transformers.backends.neural_engine": [[182, "module-intel_extension_for_transformers.backends.neural_engine"]], "intel_extension_for_transformers.evaluation": [[183, "module-intel_extension_for_transformers.evaluation"]], "evaluate() (in module intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator)": [[184, "intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator.evaluate"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator": [[184, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.evaluator"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness": [[185, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness"]], "autocausallm (class in intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface)": [[186, "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface.AutoCausalLM"]], "autoseq2seqlm (class in intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface)": [[186, "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface.AutoSeq2SeqLM"]], "multitokeneoscriteria (class in intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface)": [[186, "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface.MultiTokenEOSCriteria"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface": [[186, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models.huggingface"]], "intel_extension_for_transformers.evaluation.lm_evaluation_harness.models": [[187, "module-intel_extension_for_transformers.evaluation.lm_evaluation_harness.models"]], "intel_extension_for_transformers": [[188, "module-intel_extension_for_transformers"]], "benchmark() (in module intel_extension_for_transformers.optimization.benchmark)": [[189, "intel_extension_for_transformers.optimization.benchmark.benchmark"]], "get_example_inputs() (in module intel_extension_for_transformers.optimization.benchmark)": [[189, "intel_extension_for_transformers.optimization.benchmark.get_example_inputs"]], "intel_extension_for_transformers.optimization.benchmark": [[189, "module-intel_extension_for_transformers.optimization.benchmark"]], "preprocess_model() (in module intel_extension_for_transformers.optimization.benchmark)": [[189, "intel_extension_for_transformers.optimization.benchmark.preprocess_model"]], "refactor_batch_size() (in module intel_extension_for_transformers.optimization.benchmark)": [[189, "intel_extension_for_transformers.optimization.benchmark.refactor_batch_size"]], "autodistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.AutoDistillationConfig"]], "benchmarkconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.BenchmarkConfig"]], "distillationconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.DistillationConfig"]], "dynamiclengthconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.DynamicLengthConfig"]], "flashdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.FlashDistillationConfig"]], "nasconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.NASConfig"]], "provider (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.Provider"]], "prunerv2 (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.PrunerV2"]], "pruningconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.PruningConfig"]], "quantizationconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.QuantizationConfig"]], "tfdistillationconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.TFDistillationConfig"]], "weightpruningconfig (class in intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.WeightPruningConfig"]], "check_value() (in module intel_extension_for_transformers.optimization.config)": [[190, "intel_extension_for_transformers.optimization.config.check_value"]], "init_prune_config() (intel_extension_for_transformers.optimization.config.pruningconfig method)": [[190, "intel_extension_for_transformers.optimization.config.PruningConfig.init_prune_config"]], "intel_extension_for_transformers.optimization.config": [[190, "module-intel_extension_for_transformers.optimization.config"]], "criterion (class in intel_extension_for_transformers.optimization.distillation)": [[191, "intel_extension_for_transformers.optimization.distillation.Criterion"]], "distillationcriterionmode (class in intel_extension_for_transformers.optimization.distillation)": [[191, "intel_extension_for_transformers.optimization.distillation.DistillationCriterionMode"]], "intel_extension_for_transformers.optimization.distillation": [[191, "module-intel_extension_for_transformers.optimization.distillation"]], "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils": [[192, "module-intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils"]], "sample_layer_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[192, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_layer_configuration"]], "sample_length_configuration() (in module intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils)": [[192, "intel_extension_for_transformers.optimization.dynamic.drop_and_restore_utils.sample_length_configuration"]], "evolution (class in intel_extension_for_transformers.optimization.dynamic.evolution)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution"]], "add_gene() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.add_gene"]], "approx_ratio() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.approx_ratio"]], "convex_hull() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.convex_hull"]], "crossover() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.crossover"]], "get_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.get_store"]], "intel_extension_for_transformers.optimization.dynamic.evolution": [[193, "module-intel_extension_for_transformers.optimization.dynamic.evolution"]], "inverse() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.inverse"]], "load_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.load_store"]], "mutate() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.mutate"]], "pareto_frontier() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.pareto_frontier"]], "save_population() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_population"]], "save_store() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.save_store"]], "set_lower_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_lower_constraint"]], "set_upper_constraint() (intel_extension_for_transformers.optimization.dynamic.evolution.evolution method)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.Evolution.set_upper_constraint"]], "store2str() (in module intel_extension_for_transformers.optimization.dynamic.evolution)": [[193, "intel_extension_for_transformers.optimization.dynamic.evolution.store2str"]], "intel_extension_for_transformers.optimization.dynamic": [[194, "module-intel_extension_for_transformers.optimization.dynamic"]], "intel_extension_for_transformers.optimization": [[195, "module-intel_extension_for_transformers.optimization"]], "autodistillation (class in intel_extension_for_transformers.optimization.mixture.auto_distillation)": [[196, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation"]], "create_distillers() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[196, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.create_distillers"]], "estimate() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[196, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.estimate"]], "init_by_cfg() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[196, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.init_by_cfg"]], "intel_extension_for_transformers.optimization.mixture.auto_distillation": [[196, "module-intel_extension_for_transformers.optimization.mixture.auto_distillation"]], "load_search_results() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[196, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.load_search_results"]], "search() (intel_extension_for_transformers.optimization.mixture.auto_distillation.autodistillation method)": [[196, "intel_extension_for_transformers.optimization.mixture.auto_distillation.AutoDistillation.search"]], "intel_extension_for_transformers.optimization.mixture": [[197, "module-intel_extension_for_transformers.optimization.mixture"]], "optimizedmodel (class in intel_extension_for_transformers.optimization.model)": [[198, "intel_extension_for_transformers.optimization.model.OptimizedModel"]], "from_pretrained() (intel_extension_for_transformers.optimization.model.optimizedmodel class method)": [[198, "intel_extension_for_transformers.optimization.model.OptimizedModel.from_pretrained"]], "intel_extension_for_transformers.optimization.model": [[198, "module-intel_extension_for_transformers.optimization.model"]], "basicnas (class in intel_extension_for_transformers.optimization.nas.basic_nas)": [[199, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS"]], "estimate() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[199, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.estimate"]], "execute() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[199, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.execute"]], "init_by_cfg() (intel_extension_for_transformers.optimization.nas.basic_nas.basicnas method)": [[199, "intel_extension_for_transformers.optimization.nas.basic_nas.BasicNAS.init_by_cfg"]], "intel_extension_for_transformers.optimization.nas.basic_nas": [[199, "module-intel_extension_for_transformers.optimization.nas.basic_nas"]], "intel_extension_for_transformers.optimization.nas": [[200, "module-intel_extension_for_transformers.optimization.nas"]], "nas (class in intel_extension_for_transformers.optimization.nas.nas)": [[201, "intel_extension_for_transformers.optimization.nas.nas.NAS"]], "intel_extension_for_transformers.optimization.nas.nas": [[201, "module-intel_extension_for_transformers.optimization.nas.nas"]], "notraineroptimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[202, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer"]], "orchestrate_optimizer (class in intel_extension_for_transformers.optimization.optimizer)": [[202, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer"]], "distill() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.distill"]], "fit() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.fit"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer": [[202, "module-intel_extension_for_transformers.optimization.optimizer"]], "prune() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.quantize"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.notraineroptimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.NoTrainerOptimizer.save_model"]], "save_model() (intel_extension_for_transformers.optimization.optimizer.orchestrate_optimizer method)": [[202, "intel_extension_for_transformers.optimization.optimizer.Orchestrate_optimizer.save_model"]], "tfoptimization (class in intel_extension_for_transformers.optimization.optimizer_tf)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization"]], "autodistill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.autodistill"]], "build_train_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.build_train_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.builtin_eval_func"]], "distill() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.distill"]], "init_distiller() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.init_quantizer"]], "intel_extension_for_transformers.optimization.optimizer_tf": [[203, "module-intel_extension_for_transformers.optimization.optimizer_tf"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.model_builder_builtin"]], "prune() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.prune"]], "quantize() (intel_extension_for_transformers.optimization.optimizer_tf.tfoptimization method)": [[203, "intel_extension_for_transformers.optimization.optimizer_tf.TFOptimization.quantize"]], "infer_framework_load_model() (in module intel_extension_for_transformers.optimization.pipeline)": [[204, "intel_extension_for_transformers.optimization.pipeline.infer_framework_load_model"]], "intel_extension_for_transformers.optimization.pipeline": [[204, "module-intel_extension_for_transformers.optimization.pipeline"]], "prunerconfig (class in intel_extension_for_transformers.optimization.pruning)": [[205, "intel_extension_for_transformers.optimization.pruning.PrunerConfig"]], "pruningmode (class in intel_extension_for_transformers.optimization.pruning)": [[205, "intel_extension_for_transformers.optimization.pruning.PruningMode"]], "intel_extension_for_transformers.optimization.pruning": [[205, "module-intel_extension_for_transformers.optimization.pruning"]], "gradientcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion"]], "magnitudecriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion"]], "pruningcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion"]], "snipcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion"]], "snipmomentumcriterion (class in intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion"]], "get_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.get_criterion"]], "intel_extension_for_transformers.optimization.pytorch_pruner.criteria": [[206, "module-intel_extension_for_transformers.optimization.pytorch_pruner.criteria"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.on_before_optimizer_step"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion method)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.on_step_begin"]], "register_criterion() (in module intel_extension_for_transformers.optimization.pytorch_pruner.criteria)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.register_criterion"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.gradientcriterion attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.GradientCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.magnitudecriterion attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.MagnitudeCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.pruningcriterion attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.PruningCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipcriterion attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipCriterion.scores"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.criteria.snipmomentumcriterion attribute)": [[206, "intel_extension_for_transformers.optimization.pytorch_pruner.criteria.SnipMomentumCriterion.scores"]], "intel_extension_for_transformers.optimization.pytorch_pruner": [[207, "module-intel_extension_for_transformers.optimization.pytorch_pruner"]], "intel_extension_for_transformers.optimization.pytorch_pruner.logger": [[208, "module-intel_extension_for_transformers.optimization.pytorch_pruner.logger"]], "basepattern (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern"]], "m (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.M"]], "n (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.N"]], "patternninm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM"]], "patternnxm (class in intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM"]], "adjust_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.adjust_ratio"]], "block_size (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.block_size"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.check_layer_validity"]], "check_layer_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.check_layer_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.config"]], "count_new_masked_cnts() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.count_new_masked_cnts"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_block_size_dict"]], "get_block_size_dict() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_block_size_dict"]], "get_ele_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_ele_mask_per_threshold"]], "get_least_ninm_mask_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_least_ninm_mask_from_data"]], "get_mask_per_threshold() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_mask_per_threshold"]], "get_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_masks_global"]], "get_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_masks_global"]], "get_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_masks_local"]], "get_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.get_pattern"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_pattern_lock_masks"]], "get_pattern_lock_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_pattern_lock_masks"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_reduced_masks_from_data"]], "get_reduced_masks_from_data() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_reduced_masks_from_data"]], "get_single_mask_per_target_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_single_mask_per_target_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.get_sparsity_ratio"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio"]], "get_sparsity_ratio_each_layer() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.get_sparsity_ratio_each_layer"]], "get_sparsity_ratio_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.get_sparsity_ratio_progressive"]], "intel_extension_for_transformers.optimization.pytorch_pruner.patterns": [[209, "module-intel_extension_for_transformers.optimization.pytorch_pruner.patterns"]], "invalid_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.invalid_layers"]], "is_global (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.is_global"]], "keep_mask_layers (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.keep_mask_layers"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.max_sparsity_ratio_per_op"]], "min_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.min_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.modules"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.pattern"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reduce_scores"]], "reduce_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reduce_scores"]], "reduce_tensor() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.reduce_tensor"]], "register_pattern() (in module intel_extension_for_transformers.optimization.pytorch_pruner.patterns)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.register_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_orig_to_pattern"]], "reshape_orig_to_pattern() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_orig_to_pattern"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternninm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNInM.reshape_reduced_to_orig"]], "reshape_reduced_to_orig() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.reshape_reduced_to_orig"]], "target_sparsity (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern attribute)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.target_sparsity"]], "update_new_added_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_new_added_masks"]], "update_progressive_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks"]], "update_progressive_masks_global() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_global"]], "update_progressive_masks_linear() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_linear"]], "update_progressive_masks_local() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_local"]], "update_progressive_masks_scores() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.patternnxm method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.PatternNxM.update_progressive_masks_scores"]], "update_residual_cnt() (intel_extension_for_transformers.optimization.pytorch_pruner.patterns.basepattern method)": [[209, "intel_extension_for_transformers.optimization.pytorch_pruner.patterns.BasePattern.update_residual_cnt"]], "basepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner"]], "basicpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner"]], "patternlockpruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner"]], "progressivepruner (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner"]], "check_is_pruned_progressive_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_is_pruned_progressive_step"]], "check_is_pruned_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.check_is_pruned_step"]], "check_progressive_validity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.check_progressive_validity"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.config"]], "criterion (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.criterion"]], "current_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.current_sparsity_ratio"]], "end_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.end_step"]], "get_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.get_pruner"]], "global_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.global_step"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruners": [[210, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruners"]], "mask_weights() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights"]], "mask_weights_general() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.mask_weights_general"]], "masks (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.masks"]], "max_sparsity_ratio_per_op (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.max_sparsity_ratio_per_op"]], "modules (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.modules"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_begin"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.on_train_end"]], "parse_valid_pruner_types() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.parse_valid_pruner_types"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pattern"]], "pattern (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.pattern"]], "print_progressive_sparsity() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.print_progressive_sparsity"]], "pruning_frequency (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.pruning_frequency"]], "reg (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.reg"]], "register_pruner() (in module intel_extension_for_transformers.optimization.pytorch_pruner.pruners)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.register_pruner"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scheduler"]], "scheduler (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.scheduler"]], "scores (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.scores"]], "set_global_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.set_global_step"]], "start_step (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.start_step"]], "target_sparsity_ratio (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner attribute)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.target_sparsity_ratio"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasePruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.basicpruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.BasicPruner.update_masks"]], "update_masks() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.patternlockpruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.PatternLockPruner.update_masks"]], "update_masks_progressive() (intel_extension_for_transformers.optimization.pytorch_pruner.pruners.progressivepruner method)": [[210, "intel_extension_for_transformers.optimization.pytorch_pruner.pruners.ProgressivePruner.update_masks_progressive"]], "pruning (class in intel_extension_for_transformers.optimization.pytorch_pruner.pruning)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning"]], "config_file_path (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.config_file_path"]], "get_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.get_sparsity_ratio"]], "intel_extension_for_transformers.optimization.pytorch_pruner.pruning": [[211, "module-intel_extension_for_transformers.optimization.pytorch_pruner.pruning"]], "model (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.model"]], "on_after_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_eval"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_after_optimizer_step"]], "on_before_eval() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_eval"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_before_optimizer_step"]], "on_epoch_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_begin"]], "on_epoch_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_epoch_end"]], "on_step_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_begin"]], "on_step_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_step_end"]], "on_train_begin() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_begin"]], "on_train_end() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.on_train_end"]], "pruner_info (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruner_info"]], "pruners (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning attribute)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.pruners"]], "update_config() (intel_extension_for_transformers.optimization.pytorch_pruner.pruning.pruning method)": [[211, "intel_extension_for_transformers.optimization.pytorch_pruner.pruning.Pruning.update_config"]], "basereg (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg"]], "grouplasso (class in intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso"]], "alpha (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.alpha"]], "get_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg"]], "get_reg_type() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.get_reg_type"]], "intel_extension_for_transformers.optimization.pytorch_pruner.regs": [[212, "module-intel_extension_for_transformers.optimization.pytorch_pruner.regs"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_after_optimizer_step"]], "on_after_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_after_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.basereg method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.BaseReg.on_before_optimizer_step"]], "on_before_optimizer_step() (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso method)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.on_before_optimizer_step"]], "reg_terms (intel_extension_for_transformers.optimization.pytorch_pruner.regs.grouplasso attribute)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.GroupLasso.reg_terms"]], "register_reg() (in module intel_extension_for_transformers.optimization.pytorch_pruner.regs)": [[212, "intel_extension_for_transformers.optimization.pytorch_pruner.regs.register_reg"]], "iterativescheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler"]], "oneshotscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler"]], "pruningscheduler (class in intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler"]], "config (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler attribute)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.config"]], "get_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.get_scheduler"]], "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers": [[213, "module-intel_extension_for_transformers.optimization.pytorch_pruner.schedulers"]], "register_scheduler() (in module intel_extension_for_transformers.optimization.pytorch_pruner.schedulers)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.register_scheduler"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.iterativescheduler method)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.IterativeScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.oneshotscheduler method)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.OneshotScheduler.update_sparsity_ratio"]], "update_sparsity_ratio() (intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.pruningscheduler method)": [[213, "intel_extension_for_transformers.optimization.pytorch_pruner.schedulers.PruningScheduler.update_sparsity_ratio"]], "check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_config"]], "check_key_validity() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.check_key_validity"]], "intel_extension_for_transformers.optimization.pytorch_pruner.utils": [[214, "module-intel_extension_for_transformers.optimization.pytorch_pruner.utils"]], "parse_to_prune() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.parse_to_prune"]], "process_and_check_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_and_check_config"]], "process_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_config"]], "process_weight_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_weight_config"]], "process_yaml_config() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.process_yaml_config"]], "reset_none_to_default() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.reset_none_to_default"]], "update_params() (in module intel_extension_for_transformers.optimization.pytorch_pruner.utils)": [[214, "intel_extension_for_transformers.optimization.pytorch_pruner.utils.update_params"]], "quantizationmode (class in intel_extension_for_transformers.optimization.quantization)": [[215, "intel_extension_for_transformers.optimization.quantization.QuantizationMode"]], "intel_extension_for_transformers.optimization.quantization": [[215, "module-intel_extension_for_transformers.optimization.quantization"]], "basetrainer (class in intel_extension_for_transformers.optimization.trainer)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer"]], "nlpseq2seqtrainer (class in intel_extension_for_transformers.optimization.trainer)": [[216, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer"]], "nlptrainer (class in intel_extension_for_transformers.optimization.trainer)": [[216, "intel_extension_for_transformers.optimization.trainer.NLPTrainer"]], "auto_distil_evaluation_loop() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.auto_distil_evaluation_loop"]], "autodistillation() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.autodistillation"]], "benchmark() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.benchmark"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_eval_func"]], "builtin_eval_func() (intel_extension_for_transformers.optimization.trainer.nlpseq2seqtrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.NLPSeq2SeqTrainer.builtin_eval_func"]], "builtin_train_func() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.builtin_train_func"]], "compute_loss() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.compute_loss"]], "create_optimizer_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.create_optimizer_builtin"]], "distill() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.distill"]], "export_to_bf16_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_bf16_onnx"]], "export_to_fp32_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_fp32_onnx"]], "export_to_int8_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_int8_onnx"]], "export_to_jit() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_jit"]], "export_to_onnx() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.export_to_onnx"]], "init_distiller() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_distiller"]], "init_pruner() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_pruner"]], "init_quantizer() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.init_quantizer"]], "intel_extension_for_transformers.optimization.trainer": [[216, "module-intel_extension_for_transformers.optimization.trainer"]], "model_builder_builtin() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.model_builder_builtin"]], "nas() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.nas"]], "orchestrate_optimizations() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.orchestrate_optimizations"]], "prune() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.prune"]], "quantize() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.quantize"]], "run_evolutionary_search() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.run_evolutionary_search"]], "set_dynamic_config() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.set_dynamic_config"]], "train() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.train"]], "training_step() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step"]], "training_step_length_adaptive() (intel_extension_for_transformers.optimization.trainer.basetrainer method)": [[216, "intel_extension_for_transformers.optimization.trainer.BaseTrainer.training_step_length_adaptive"]], "intel_extension_for_transformers.optimization.utils.get_throughput": [[217, "module-intel_extension_for_transformers.optimization.utils.get_throughput"]], "intel_extension_for_transformers.optimization.utils": [[218, "module-intel_extension_for_transformers.optimization.utils"]], "metric (class in intel_extension_for_transformers.optimization.utils.metrics)": [[219, "intel_extension_for_transformers.optimization.utils.metrics.Metric"]], "intel_extension_for_transformers.optimization.utils.metrics": [[219, "module-intel_extension_for_transformers.optimization.utils.metrics"]], "intel_extension_for_transformers.optimization.utils.models": [[220, "module-intel_extension_for_transformers.optimization.utils.models"]], "bertattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention"]], "bertembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings"]], "bertencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder"]], "bertformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM"]], "bertformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice"]], "bertfornextsentenceprediction (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction"]], "bertforpretraining (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining"]], "bertforpretrainingoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTrainingOutput"]], "bertforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering"]], "bertforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification"]], "bertfortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification"]], "bertintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate"]], "bertlmheadmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel"]], "bertlmpredictionhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead"]], "bertlayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer"]], "bertmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel"]], "bertonlymlmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead"]], "bertonlynsphead (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead"]], "bertoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput"]], "bertpooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler"]], "bertpretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainedModel"]], "bertpretrainingheads (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads"]], "bertpredictionheadtransform (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform"]], "bertselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention"]], "bertselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertembeddings method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertencoder method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformultiplechoice method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfornextsentenceprediction method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForNextSentencePrediction.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforquestionanswering method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforsequenceclassification method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertfortokenclassification method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertintermediate method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmpredictionhead method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMPredictionHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlayer method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlymlmhead method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyMLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertonlynsphead method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOnlyNSPHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertoutput method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpooler method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpretrainingheads method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPreTrainingHeads.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertpredictionheadtransform method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertPredictionHeadTransform.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfoutput method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic": [[221, "module-intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic"]], "load_tf_weights_in_bert() (in module intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.load_tf_weights_in_bert"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.prepare_inputs_for_generation"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertattention method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertformaskedlm method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForMaskedLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertforpretraining method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertForPreTraining.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertlmheadmodel method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertLMHeadModel.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.bertselfattention method)": [[221, "intel_extension_for_transformers.optimization.utils.models.modeling_bert_dynamic.BertSelfAttention.transpose_for_scores"]], "robertaattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention"]], "robertaclassificationhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead"]], "robertaembeddings (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings"]], "robertaencoder (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder"]], "robertaforcausallm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM"]], "robertaformaskedlm (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM"]], "robertaformultiplechoice (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice"]], "robertaforquestionanswering (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering"]], "robertaforsequenceclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification"]], "robertafortokenclassification (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification"]], "robertaintermediate (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate"]], "robertalmhead (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead"]], "robertalayer (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer"]], "robertamodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel"]], "robertaoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput"]], "robertapooler (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler"]], "robertapretrainedmodel (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel"]], "robertaselfattention (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention"]], "robertaselfoutput (class in intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput"]], "create_position_ids_from_input_ids() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.create_position_ids_from_input_ids"]], "create_position_ids_from_inputs_embeds() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.create_position_ids_from_inputs_embeds"]], "expand_gather() (in module intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.expand_gather"]], "feed_forward_chunk() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.feed_forward_chunk"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaclassificationhead method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaClassificationHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaembeddings method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEmbeddings.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaencoder method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaEncoder.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformultiplechoice method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMultipleChoice.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforquestionanswering method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForQuestionAnswering.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforsequenceclassification method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForSequenceClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertafortokenclassification method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForTokenClassification.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaintermediate method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaIntermediate.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalmhead method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLMHead.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertalayer method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaLayer.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaoutput method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaOutput.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapooler method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPooler.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.forward"]], "forward() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfoutput method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfOutput.forward"]], "get_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.get_input_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.get_output_embeddings"]], "get_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.get_output_embeddings"]], "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic": [[222, "module-intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic"]], "prepare_inputs_for_generation() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.prepare_inputs_for_generation"]], "prune_heads() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaattention method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaAttention.prune_heads"]], "set_input_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_input_embeddings"]], "set_length_config() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_length_config"]], "set_output_attentions() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertamodel method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaModel.set_output_attentions"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaforcausallm method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForCausalLM.set_output_embeddings"]], "set_output_embeddings() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaformaskedlm method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaForMaskedLM.set_output_embeddings"]], "transpose_for_scores() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertaselfattention method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaSelfAttention.transpose_for_scores"]], "update_keys_to_ignore() (intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.robertapretrainedmodel method)": [[222, "intel_extension_for_transformers.optimization.utils.models.modeling_roberta_dynamic.RobertaPreTrainedModel.update_keys_to_ignore"]], "objective (class in intel_extension_for_transformers.optimization.utils.objectives)": [[223, "intel_extension_for_transformers.optimization.utils.objectives.Objective"]], "intel_extension_for_transformers.optimization.utils.objectives": [[223, "module-intel_extension_for_transformers.optimization.utils.objectives"]], "modelsize() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[223, "intel_extension_for_transformers.optimization.utils.objectives.Objective.modelsize"]], "performance() (intel_extension_for_transformers.optimization.utils.objectives.objective static method)": [[223, "intel_extension_for_transformers.optimization.utils.objectives.Objective.performance"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility)": [[224, "intel_extension_for_transformers.optimization.utils.utility.distributed_init"]], "intel_extension_for_transformers.optimization.utils.utility": [[224, "module-intel_extension_for_transformers.optimization.utils.utility"]], "tfdataloader (class in intel_extension_for_transformers.optimization.utils.utility_tf)": [[225, "intel_extension_for_transformers.optimization.utils.utility_tf.TFDataloader"]], "distributed_init() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[225, "intel_extension_for_transformers.optimization.utils.utility_tf.distributed_init"]], "get_filepath() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[225, "intel_extension_for_transformers.optimization.utils.utility_tf.get_filepath"]], "intel_extension_for_transformers.optimization.utils.utility_tf": [[225, "module-intel_extension_for_transformers.optimization.utils.utility_tf"]], "keras2savedmodel() (in module intel_extension_for_transformers.optimization.utils.utility_tf)": [[225, "intel_extension_for_transformers.optimization.utils.utility_tf.keras2SavedModel"]], "dataaugmentation (class in intel_extension_for_transformers.preprocessing.data_augmentation)": [[226, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation"]], "data_augment() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[226, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.data_augment"]], "intel_extension_for_transformers.preprocessing.data_augmentation": [[226, "module-intel_extension_for_transformers.preprocessing.data_augmentation"]], "mit_data_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[226, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.mit_data_augmentation"]], "text_generation_augmentation() (intel_extension_for_transformers.preprocessing.data_augmentation.dataaugmentation method)": [[226, "intel_extension_for_transformers.preprocessing.data_augmentation.DataAugmentation.text_generation_augmentation"]], "intel_extension_for_transformers.preprocessing": [[227, "module-intel_extension_for_transformers.preprocessing"]], "augmentertype (class in intel_extension_for_transformers.preprocessing.utils)": [[228, "intel_extension_for_transformers.preprocessing.utils.AugmenterType"]], "get_augmenter_from_type() (in module intel_extension_for_transformers.preprocessing.utils)": [[228, "intel_extension_for_transformers.preprocessing.utils.get_augmenter_from_type"]], "intel_extension_for_transformers.preprocessing.utils": [[228, "module-intel_extension_for_transformers.preprocessing.utils"]], "intel_extension_for_transformers.version": [[229, "module-intel_extension_for_transformers.version"]], "sparsity_all": [[230, "module-sparsity_all"]], "testaddclstoken (class in test_add_cls_token)": [[231, "test_add_cls_token.TestAddClsToken"]], "setupclass() (test_add_cls_token.testaddclstoken class method)": [[231, "test_add_cls_token.TestAddClsToken.setUpClass"]], "teardownclass() (test_add_cls_token.testaddclstoken class method)": [[231, "test_add_cls_token.TestAddClsToken.tearDownClass"]], "test_add_cls_token": [[231, "module-test_add_cls_token"]], "testaddembeddings (class in test_add_embeddings)": [[232, "test_add_embeddings.TestAddEmbeddings"]], "setupclass() (test_add_embeddings.testaddembeddings class method)": [[232, "test_add_embeddings.TestAddEmbeddings.setUpClass"]], "teardownclass() (test_add_embeddings.testaddembeddings class method)": [[232, "test_add_embeddings.TestAddEmbeddings.tearDownClass"]], "test_add_embeddings": [[232, "module-test_add_embeddings"]], "testattentionreshape (class in test_attention_output_layer_norm_length_adaptive_keep_indices)": [[233, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape"]], "setupclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[233, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_output_layer_norm_length_adaptive_keep_indices.testattentionreshape class method)": [[233, "test_attention_output_layer_norm_length_adaptive_keep_indices.TestAttentionReshape.tearDownClass"]], "test_attention_output_layer_norm_length_adaptive_keep_indices": [[233, "module-test_attention_output_layer_norm_length_adaptive_keep_indices"]], "testattentionreshape (class in test_attention_reshape)": [[234, "test_attention_reshape.TestAttentionReshape"]], "setupclass() (test_attention_reshape.testattentionreshape class method)": [[234, "test_attention_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_attention_reshape.testattentionreshape class method)": [[234, "test_attention_reshape.TestAttentionReshape.tearDownClass"]], "test_attention_reshape": [[234, "module-test_attention_reshape"]], "testtorchmodel (class in test_bert_mini_fp32)": [[235, "test_bert_mini_fp32.TestTorchModel"]], "setupclass() (test_bert_mini_fp32.testtorchmodel class method)": [[235, "test_bert_mini_fp32.TestTorchModel.setUpClass"]], "teardownclass() (test_bert_mini_fp32.testtorchmodel class method)": [[235, "test_bert_mini_fp32.TestTorchModel.tearDownClass"]], "test_bert_mini_fp32": [[235, "module-test_bert_mini_fp32"]], "testbinaryop (class in test_binary_op)": [[236, "test_binary_op.TestBinaryOp"]], "setupclass() (test_binary_op.testbinaryop class method)": [[236, "test_binary_op.TestBinaryOp.setUpClass"]], "teardownclass() (test_binary_op.testbinaryop class method)": [[236, "test_binary_op.TestBinaryOp.tearDownClass"]], "test_binary_op": [[236, "module-test_binary_op"]], "testtorchop (class in test_binaryop)": [[237, "test_binaryop.TestTorchOP"]], "setupclass() (test_binaryop.testtorchop class method)": [[237, "test_binaryop.TestTorchOP.setUpClass"]], "teardownclass() (test_binaryop.testtorchop class method)": [[237, "test_binaryop.TestTorchOP.tearDownClass"]], "test_binaryop": [[237, "module-test_binaryop"]], "testcastto (class in test_cast_to)": [[238, "test_cast_to.TestCastTo"]], "setupclass() (test_cast_to.testcastto class method)": [[238, "test_cast_to.TestCastTo.setUpClass"]], "teardownclass() (test_cast_to.testcastto class method)": [[238, "test_cast_to.TestCastTo.tearDownClass"]], "test_cast_to": [[238, "module-test_cast_to"]], "testtorchop (class in test_concat)": [[239, "test_concat.TestTorchOP"]], "setupclass() (test_concat.testtorchop class method)": [[239, "test_concat.TestTorchOP.setUpClass"]], "teardownclass() (test_concat.testtorchop class method)": [[239, "test_concat.TestTorchOP.tearDownClass"]], "test_concat": [[239, "module-test_concat"]], "testconvreshape (class in test_conv_reshape)": [[240, "test_conv_reshape.TestConvReshape"]], "setupclass() (test_conv_reshape.testconvreshape class method)": [[240, "test_conv_reshape.TestConvReshape.setUpClass"]], "teardownclass() (test_conv_reshape.testconvreshape class method)": [[240, "test_conv_reshape.TestConvReshape.tearDownClass"]], "test_conv_reshape": [[240, "module-test_conv_reshape"]], "testdecoderattnreshape (class in test_decoder_attn_reshape)": [[241, "test_decoder_attn_reshape.TestDecoderAttnReshape"]], "setupclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[241, "test_decoder_attn_reshape.TestDecoderAttnReshape.setUpClass"]], "teardownclass() (test_decoder_attn_reshape.testdecoderattnreshape class method)": [[241, "test_decoder_attn_reshape.TestDecoderAttnReshape.tearDownClass"]], "test_decoder_attn_reshape": [[241, "module-test_decoder_attn_reshape"]], "testdispatchertuningacc (class in test_dispatcher_tuning_acc)": [[242, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc"]], "setupclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[242, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_dispatcher_tuning_acc.testdispatchertuningacc class method)": [[242, "test_dispatcher_tuning_acc.TestDispatcherTuningAcc.tearDownClass"]], "test_dispatcher_tuning_acc": [[242, "module-test_dispatcher_tuning_acc"]], "testdispatchertuningthroughput (class in test_dispatcher_tuning_throughput)": [[243, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput"]], "setupclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[243, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_dispatcher_tuning_throughput.testdispatchertuningthroughput class method)": [[243, "test_dispatcher_tuning_throughput.TestDispatcherTuningThroughput.tearDownClass"]], "test_dispatcher_tuning_throughput": [[243, "module-test_dispatcher_tuning_throughput"]], "testdynamicquantization (class in test_dynamic_quantization)": [[244, "test_dynamic_quantization.TestDynamicQuantization"]], "setupclass() (test_dynamic_quantization.testdynamicquantization class method)": [[244, "test_dynamic_quantization.TestDynamicQuantization.setUpClass"]], "teardownclass() (test_dynamic_quantization.testdynamicquantization class method)": [[244, "test_dynamic_quantization.TestDynamicQuantization.tearDownClass"]], "test_dynamic_quantization": [[244, "module-test_dynamic_quantization"]], "testtorchop (class in test_embedding)": [[245, "test_embedding.TestTorchOP"]], "setupclass() (test_embedding.testtorchop class method)": [[245, "test_embedding.TestTorchOP.setUpClass"]], "teardownclass() (test_embedding.testtorchop class method)": [[245, "test_embedding.TestTorchOP.tearDownClass"]], "test_embedding": [[245, "module-test_embedding"]], "testembeddingbag (class in test_embeddingbag)": [[246, "test_embeddingbag.TestEmbeddingBag"]], "setupclass() (test_embeddingbag.testembeddingbag class method)": [[246, "test_embeddingbag.TestEmbeddingBag.setUpClass"]], "teardownclass() (test_embeddingbag.testembeddingbag class method)": [[246, "test_embeddingbag.TestEmbeddingBag.tearDownClass"]], "test_embeddingbag": [[246, "module-test_embeddingbag"]], "testexecutionoptions (class in test_execution_options)": [[247, "test_execution_options.TestExecutionOptions"]], "setupclass() (test_execution_options.testexecutionoptions class method)": [[247, "test_execution_options.TestExecutionOptions.setUpClass"]], "teardownclass() (test_execution_options.testexecutionoptions class method)": [[247, "test_execution_options.TestExecutionOptions.tearDownClass"]], "test_execution_options": [[247, "module-test_execution_options"]], "testtorchop (class in test_gelu)": [[248, "test_gelu.TestTorchOP"]], "setupclass() (test_gelu.testtorchop class method)": [[248, "test_gelu.TestTorchOP.setUpClass"]], "teardownclass() (test_gelu.testtorchop class method)": [[248, "test_gelu.TestTorchOP.tearDownClass"]], "test_gelu": [[248, "module-test_gelu"]], "testtorchmodel (class in test_gpt_int8)": [[249, "test_gpt_int8.TestTorchModel"]], "setupclass() (test_gpt_int8.testtorchmodel class method)": [[249, "test_gpt_int8.TestTorchModel.setUpClass"]], "teardownclass() (test_gpt_int8.testtorchmodel class method)": [[249, "test_gpt_int8.TestTorchModel.tearDownClass"]], "test_gpt_int8": [[249, "module-test_gpt_int8"]], "testgraphdispatch (class in test_graph_dispatch)": [[250, "test_graph_dispatch.TestGraphDispatch"]], "setupclass() (test_graph_dispatch.testgraphdispatch class method)": [[250, "test_graph_dispatch.TestGraphDispatch.setUpClass"]], "teardownclass() (test_graph_dispatch.testgraphdispatch class method)": [[250, "test_graph_dispatch.TestGraphDispatch.tearDownClass"]], "test_graph_dispatch": [[250, "module-test_graph_dispatch"]], "testinsertinputouputdata (class in test_insert_input_output_data)": [[251, "test_insert_input_output_data.TestInsertInputOuputData"]], "setupclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[251, "test_insert_input_output_data.TestInsertInputOuputData.setUpClass"]], "teardownclass() (test_insert_input_output_data.testinsertinputouputdata class method)": [[251, "test_insert_input_output_data.TestInsertInputOuputData.tearDownClass"]], "test_insert_input_output_data": [[251, "module-test_insert_input_output_data"]], "testissupportedonnxgraph (class in test_is_supported_onnx_graph)": [[252, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph"]], "setupclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[252, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.setUpClass"]], "teardownclass() (test_is_supported_onnx_graph.testissupportedonnxgraph class method)": [[252, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.tearDownClass"]], "test_is_supported_onnx_graph": [[252, "module-test_is_supported_onnx_graph"]], "test_is_supported_onnx_graph() (test_is_supported_onnx_graph.testissupportedonnxgraph method)": [[252, "test_is_supported_onnx_graph.TestIsSupportedOnnxGraph.test_is_supported_onnx_graph"]], "testlastlayershape (class in test_last_layer_shape)": [[253, "test_last_layer_shape.TestLastLayerShape"]], "setupclass() (test_last_layer_shape.testlastlayershape class method)": [[253, "test_last_layer_shape.TestLastLayerShape.setUpClass"]], "teardownclass() (test_last_layer_shape.testlastlayershape class method)": [[253, "test_last_layer_shape.TestLastLayerShape.tearDownClass"]], "test_last_layer_shape": [[253, "module-test_last_layer_shape"]], "testlayernormwithreducemean (class in test_layer_norm_with_reduce_mean)": [[254, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean"]], "setupclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[254, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_layer_norm_with_reduce_mean.testlayernormwithreducemean class method)": [[254, "test_layer_norm_with_reduce_mean.TestLayerNormWithReduceMean.tearDownClass"]], "test_layer_norm_with_reduce_mean": [[254, "module-test_layer_norm_with_reduce_mean"]], "testlayernormwithtranspose (class in test_layer_norm_with_transpose)": [[255, "test_layer_norm_with_transpose.TestLayerNormWithTranspose"]], "setupclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[255, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.setUpClass"]], "teardownclass() (test_layer_norm_with_transpose.testlayernormwithtranspose class method)": [[255, "test_layer_norm_with_transpose.TestLayerNormWithTranspose.tearDownClass"]], "test_layer_norm_with_transpose": [[255, "module-test_layer_norm_with_transpose"]], "testtorchop (class in test_layernorm)": [[256, "test_layernorm.TestTorchOP"]], "setupclass() (test_layernorm.testtorchop class method)": [[256, "test_layernorm.TestTorchOP.setUpClass"]], "teardownclass() (test_layernorm.testtorchop class method)": [[256, "test_layernorm.TestTorchOP.tearDownClass"]], "test_layernorm": [[256, "module-test_layernorm"]], "testtorchop (class in test_linear)": [[257, "test_linear.TestTorchOP"]], "setupclass() (test_linear.testtorchop class method)": [[257, "test_linear.TestTorchOP.setUpClass"]], "teardownclass() (test_linear.testtorchop class method)": [[257, "test_linear.TestTorchOP.tearDownClass"]], "test_linear": [[257, "module-test_linear"]], "testtorchlinear (class in test_linear_int8)": [[258, "test_linear_int8.TestTorchLinear"]], "setupclass() (test_linear_int8.testtorchlinear class method)": [[258, "test_linear_int8.TestTorchLinear.setUpClass"]], "teardownclass() (test_linear_int8.testtorchlinear class method)": [[258, "test_linear_int8.TestTorchLinear.tearDownClass"]], "test_linear_int8": [[258, "module-test_linear_int8"]], "testmain (class in test_main)": [[259, "test_main.TestMain"]], "setupclass() (test_main.testmain class method)": [[259, "test_main.TestMain.setUpClass"]], "teardownclass() (test_main.testmain class method)": [[259, "test_main.TestMain.tearDownClass"]], "test_main": [[259, "module-test_main"]], "testtorchop (class in test_matmul)": [[260, "test_matmul.TestTorchOP"]], "setupclass() (test_matmul.testtorchop class method)": [[260, "test_matmul.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul.testtorchop class method)": [[260, "test_matmul.TestTorchOP.tearDownClass"]], "test_matmul": [[260, "module-test_matmul"]], "testtorchop (class in test_matmul_int8)": [[261, "test_matmul_int8.TestTorchOP"]], "setupclass() (test_matmul_int8.testtorchop class method)": [[261, "test_matmul_int8.TestTorchOP.setUpClass"]], "teardownclass() (test_matmul_int8.testtorchop class method)": [[261, "test_matmul_int8.TestTorchOP.tearDownClass"]], "test_matmul_int8": [[261, "module-test_matmul_int8"]], "testmatmulwithbiasrelu (class in test_matmul_with_bias_relu)": [[262, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu"]], "setupclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[262, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.setUpClass"]], "teardownclass() (test_matmul_with_bias_relu.testmatmulwithbiasrelu class method)": [[262, "test_matmul_with_bias_relu.TestMatmulWithBiasRelu.tearDownClass"]], "test_matmul_with_bias_relu": [[262, "module-test_matmul_with_bias_relu"]], "testmatmulwithbiassigmoid (class in test_matmul_with_bias_sigmoid)": [[263, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid"]], "setupclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[263, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.setUpClass"]], "teardownclass() (test_matmul_with_bias_sigmoid.testmatmulwithbiassigmoid class method)": [[263, "test_matmul_with_bias_sigmoid.TestMatMulWithBiasSigmoid.tearDownClass"]], "test_matmul_with_bias_sigmoid": [[263, "module-test_matmul_with_bias_sigmoid"]], "testmatmulwithbiastanh (class in test_matmul_with_bias_tanh)": [[264, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh"]], "setupclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[264, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.setUpClass"]], "teardownclass() (test_matmul_with_bias_tanh.testmatmulwithbiastanh class method)": [[264, "test_matmul_with_bias_tanh.TestMatmulWithBiasTanh.tearDownClass"]], "test_matmul_with_bias_tanh": [[264, "module-test_matmul_with_bias_tanh"]], "testmergedembeddingbag (class in test_merged_embeddingbag)": [[265, "test_merged_embeddingbag.TestMergedEmbeddingbag"]], "setupclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[265, "test_merged_embeddingbag.TestMergedEmbeddingbag.setUpClass"]], "teardownclass() (test_merged_embeddingbag.testmergedembeddingbag class method)": [[265, "test_merged_embeddingbag.TestMergedEmbeddingbag.tearDownClass"]], "test_merged_embeddingbag": [[265, "module-test_merged_embeddingbag"]], "test_model": [[266, "module-test_model"]], "testonnxutils (class in test_onnx_utils)": [[267, "test_onnx_utils.TestOnnxUtils"]], "setupclass() (test_onnx_utils.testonnxutils class method)": [[267, "test_onnx_utils.TestOnnxUtils.setUpClass"]], "teardownclass() (test_onnx_utils.testonnxutils class method)": [[267, "test_onnx_utils.TestOnnxUtils.tearDownClass"]], "test_onnx_utils": [[267, "module-test_onnx_utils"]], "testoperatoradaptor (class in test_operator_adaptor)": [[268, "test_operator_adaptor.TestOperatorAdaptor"]], "setupclass() (test_operator_adaptor.testoperatoradaptor class method)": [[268, "test_operator_adaptor.TestOperatorAdaptor.setUpClass"]], "teardownclass() (test_operator_adaptor.testoperatoradaptor class method)": [[268, "test_operator_adaptor.TestOperatorAdaptor.tearDownClass"]], "test_operator_adaptor": [[268, "module-test_operator_adaptor"]], "testops (class in test_ops)": [[269, "test_ops.TestOps"]], "setupclass() (test_ops.testops class method)": [[269, "test_ops.TestOps.setUpClass"]], "teardownclass() (test_ops.testops class method)": [[269, "test_ops.TestOps.tearDownClass"]], "test_ops": [[269, "module-test_ops"]], "testtorchop (class in test_padding_seq)": [[270, "test_padding_seq.TestTorchOP"]], "setupclass() (test_padding_seq.testtorchop class method)": [[270, "test_padding_seq.TestTorchOP.setUpClass"]], "teardownclass() (test_padding_seq.testtorchop class method)": [[270, "test_padding_seq.TestTorchOP.tearDownClass"]], "test_padding_seq": [[270, "module-test_padding_seq"]], "testpaddingsequence (class in test_padding_sequence)": [[271, "test_padding_sequence.TestPaddingSequence"]], "setupclass() (test_padding_sequence.testpaddingsequence class method)": [[271, "test_padding_sequence.TestPaddingSequence.setUpClass"]], "teardownclass() (test_padding_sequence.testpaddingsequence class method)": [[271, "test_padding_sequence.TestPaddingSequence.tearDownClass"]], "test_padding_sequence": [[271, "module-test_padding_sequence"]], "testpatterndispatch (class in test_pattern_dispatch)": [[272, "test_pattern_dispatch.TestPatternDispatch"]], "setupclass() (test_pattern_dispatch.testpatterndispatch class method)": [[272, "test_pattern_dispatch.TestPatternDispatch.setUpClass"]], "teardownclass() (test_pattern_dispatch.testpatterndispatch class method)": [[272, "test_pattern_dispatch.TestPatternDispatch.tearDownClass"]], "test_pattern_dispatch": [[272, "module-test_pattern_dispatch"]], "testtorchop (class in test_permute)": [[273, "test_permute.TestTorchOP"]], "setupclass() (test_permute.testtorchop class method)": [[273, "test_permute.TestTorchOP.setUpClass"]], "teardownclass() (test_permute.testtorchop class method)": [[273, "test_permute.TestTorchOP.tearDownClass"]], "test_permute": [[273, "module-test_permute"]], "testpositionembeddings (class in test_position_embeddings)": [[274, "test_position_embeddings.TestPositionEmbeddings"]], "setupclass() (test_position_embeddings.testpositionembeddings class method)": [[274, "test_position_embeddings.TestPositionEmbeddings.setUpClass"]], "teardownclass() (test_position_embeddings.testpositionembeddings class method)": [[274, "test_position_embeddings.TestPositionEmbeddings.tearDownClass"]], "test_position_embeddings": [[274, "module-test_position_embeddings"]], "testtorchop (class in test_pow)": [[275, "test_pow.TestTorchOP"]], "setupclass() (test_pow.testtorchop class method)": [[275, "test_pow.TestTorchOP.setUpClass"]], "teardownclass() (test_pow.testtorchop class method)": [[275, "test_pow.TestTorchOP.tearDownClass"]], "test_pow": [[275, "module-test_pow"]], "testprimitivecacheacc (class in test_primitive_cache_acc)": [[276, "test_primitive_cache_acc.TestPrimitiveCacheAcc"]], "setupclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[276, "test_primitive_cache_acc.TestPrimitiveCacheAcc.setUpClass"]], "teardownclass() (test_primitive_cache_acc.testprimitivecacheacc class method)": [[276, "test_primitive_cache_acc.TestPrimitiveCacheAcc.tearDownClass"]], "test_primitive_cache_acc": [[276, "module-test_primitive_cache_acc"]], "testprimitivecachethroughput (class in test_primitive_cache_throughput)": [[277, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput"]], "setupclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[277, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.setUpClass"]], "teardownclass() (test_primitive_cache_throughput.testprimitivecachethroughput class method)": [[277, "test_primitive_cache_throughput.TestPrimitiveCacheThroughput.tearDownClass"]], "test_primitive_cache_throughput": [[277, "module-test_primitive_cache_throughput"]], "testqkvmerge (class in test_qkv_merge)": [[278, "test_qkv_merge.TestQKVMerge"]], "setupclass() (test_qkv_merge.testqkvmerge class method)": [[278, "test_qkv_merge.TestQKVMerge.setUpClass"]], "teardownclass() (test_qkv_merge.testqkvmerge class method)": [[278, "test_qkv_merge.TestQKVMerge.tearDownClass"]], "test_qkv_merge": [[278, "module-test_qkv_merge"]], "testattentionreshape (class in test_qkv_reshape)": [[279, "test_qkv_reshape.TestAttentionReshape"]], "setupclass() (test_qkv_reshape.testattentionreshape class method)": [[279, "test_qkv_reshape.TestAttentionReshape.setUpClass"]], "teardownclass() (test_qkv_reshape.testattentionreshape class method)": [[279, "test_qkv_reshape.TestAttentionReshape.tearDownClass"]], "test_qkv_reshape": [[279, "module-test_qkv_reshape"]], "testquantonnxexecute (class in test_quant_onnx_execute)": [[280, "test_quant_onnx_execute.TestQuantOnnxExecute"]], "setupclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[280, "test_quant_onnx_execute.TestQuantOnnxExecute.setUpClass"]], "teardownclass() (test_quant_onnx_execute.testquantonnxexecute class method)": [[280, "test_quant_onnx_execute.TestQuantOnnxExecute.tearDownClass"]], "test_quant_onnx_execute": [[280, "module-test_quant_onnx_execute"]], "testlayernormwithreducemean (class in test_reshape_after_restore_hidden_states)": [[281, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[281, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_after_restore_hidden_states.testlayernormwithreducemean class method)": [[281, "test_reshape_after_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_after_restore_hidden_states": [[281, "module-test_reshape_after_restore_hidden_states"]], "testattentionreshape (class in test_reshape_before_and_after_attention_out_layer_norm_gather_elements)": [[282, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape"]], "setupclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[282, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.setUpClass"]], "teardownclass() (test_reshape_before_and_after_attention_out_layer_norm_gather_elements.testattentionreshape class method)": [[282, "test_reshape_before_and_after_attention_out_layer_norm_gather_elements.TestAttentionReshape.tearDownClass"]], "test_reshape_before_and_after_attention_out_layer_norm_gather_elements": [[282, "module-test_reshape_before_and_after_attention_out_layer_norm_gather_elements"]], "testlayernormwithreducemean (class in test_reshape_before_restore_hidden_states)": [[283, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean"]], "setupclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[283, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.setUpClass"]], "teardownclass() (test_reshape_before_restore_hidden_states.testlayernormwithreducemean class method)": [[283, "test_reshape_before_restore_hidden_states.TestLayerNormWithReduceMean.tearDownClass"]], "test_reshape_before_restore_hidden_states": [[283, "module-test_reshape_before_restore_hidden_states"]], "testtorchop (class in test_size)": [[284, "test_size.TestTorchOP"]], "setupclass() (test_size.testtorchop class method)": [[284, "test_size.TestTorchOP.setUpClass"]], "teardownclass() (test_size.testtorchop class method)": [[284, "test_size.TestTorchOP.tearDownClass"]], "test_size": [[284, "module-test_size"]], "testtorchop (class in test_softmax)": [[285, "test_softmax.TestTorchOP"]], "setupclass() (test_softmax.testtorchop class method)": [[285, "test_softmax.TestTorchOP.setUpClass"]], "teardownclass() (test_softmax.testtorchop class method)": [[285, "test_softmax.TestTorchOP.tearDownClass"]], "test_softmax": [[285, "module-test_softmax"]], "teststartendlogits (class in test_start_end_logits)": [[286, "test_start_end_logits.TestStartEndLogits"]], "setupclass() (test_start_end_logits.teststartendlogits class method)": [[286, "test_start_end_logits.TestStartEndLogits.setUpClass"]], "teardownclass() (test_start_end_logits.teststartendlogits class method)": [[286, "test_start_end_logits.TestStartEndLogits.tearDownClass"]], "test_start_end_logits": [[286, "module-test_start_end_logits"]], "testtorchop (class in test_tanh)": [[287, "test_tanh.TestTorchOP"]], "setupclass() (test_tanh.testtorchop class method)": [[287, "test_tanh.TestTorchOP.setUpClass"]], "teardownclass() (test_tanh.testtorchop class method)": [[287, "test_tanh.TestTorchOP.tearDownClass"]], "test_tanh": [[287, "module-test_tanh"]], "testtextencoder (class in test_text_encoder)": [[288, "test_text_encoder.TestTextEncoder"]], "setupclass() (test_text_encoder.testtextencoder class method)": [[288, "test_text_encoder.TestTextEncoder.setUpClass"]], "teardownclass() (test_text_encoder.testtextencoder class method)": [[288, "test_text_encoder.TestTextEncoder.tearDownClass"]], "test_text_encoder": [[288, "module-test_text_encoder"]], "testtextencoderbf16 (class in test_text_encoder_bf16)": [[289, "test_text_encoder_bf16.TestTextEncoderBF16"]], "setupclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[289, "test_text_encoder_bf16.TestTextEncoderBF16.setUpClass"]], "teardownclass() (test_text_encoder_bf16.testtextencoderbf16 class method)": [[289, "test_text_encoder_bf16.TestTextEncoderBF16.tearDownClass"]], "test_text_encoder_bf16": [[289, "module-test_text_encoder_bf16"]], "testtfutils (class in test_tf_utils)": [[290, "test_tf_utils.TestTfUtils"]], "setupclass() (test_tf_utils.testtfutils class method)": [[290, "test_tf_utils.TestTfUtils.setUpClass"]], "teardownclass() (test_tf_utils.testtfutils class method)": [[290, "test_tf_utils.TestTfUtils.tearDownClass"]], "test_tf_utils": [[290, "module-test_tf_utils"]], "testtokentypeembeddings (class in test_token_type_embeddings)": [[291, "test_token_type_embeddings.TestTokenTypeEmbeddings"]], "setupclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[291, "test_token_type_embeddings.TestTokenTypeEmbeddings.setUpClass"]], "teardownclass() (test_token_type_embeddings.testtokentypeembeddings class method)": [[291, "test_token_type_embeddings.TestTokenTypeEmbeddings.tearDownClass"]], "test_token_type_embeddings": [[291, "module-test_token_type_embeddings"]], "testtorchop (class in test_transpose)": [[292, "test_transpose.TestTorchOP"]], "setupclass() (test_transpose.testtorchop class method)": [[292, "test_transpose.TestTorchOP.setUpClass"]], "teardownclass() (test_transpose.testtorchop class method)": [[292, "test_transpose.TestTorchOP.tearDownClass"]], "test_transpose": [[292, "module-test_transpose"]], "testtransposebatchmatmul (class in test_transpose_batch_matmul)": [[293, "test_transpose_batch_matmul.TestTransposeBatchMatMul"]], "setupclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[293, "test_transpose_batch_matmul.TestTransposeBatchMatMul.setUpClass"]], "teardownclass() (test_transpose_batch_matmul.testtransposebatchmatmul class method)": [[293, "test_transpose_batch_matmul.TestTransposeBatchMatMul.tearDownClass"]], "test_transpose_batch_matmul": [[293, "module-test_transpose_batch_matmul"]], "testunet (class in test_unet)": [[294, "test_unet.TestUnet"]], "setupclass() (test_unet.testunet class method)": [[294, "test_unet.TestUnet.setUpClass"]], "teardownclass() (test_unet.testunet class method)": [[294, "test_unet.TestUnet.tearDownClass"]], "test_unet": [[294, "module-test_unet"]], "testunetbf16 (class in test_unet_bf16)": [[295, "test_unet_bf16.TestUnetBF16"]], "setupclass() (test_unet_bf16.testunetbf16 class method)": [[295, "test_unet_bf16.TestUnetBF16.setUpClass"]], "teardownclass() (test_unet_bf16.testunetbf16 class method)": [[295, "test_unet_bf16.TestUnetBF16.tearDownClass"]], "test_unet_bf16": [[295, "module-test_unet_bf16"]], "testtorchop (class in test_unsqueeze)": [[296, "test_unsqueeze.TestTorchOP"]], "setupclass() (test_unsqueeze.testtorchop class method)": [[296, "test_unsqueeze.TestTorchOP.setUpClass"]], "teardownclass() (test_unsqueeze.testtorchop class method)": [[296, "test_unsqueeze.TestTorchOP.tearDownClass"]], "test_unsqueeze": [[296, "module-test_unsqueeze"]], "testvaedecoder (class in test_vae_decoder)": [[297, "test_vae_decoder.TestVaeDecoder"]], "setupclass() (test_vae_decoder.testvaedecoder class method)": [[297, "test_vae_decoder.TestVaeDecoder.setUpClass"]], "teardownclass() (test_vae_decoder.testvaedecoder class method)": [[297, "test_vae_decoder.TestVaeDecoder.tearDownClass"]], "test_vae_decoder": [[297, "module-test_vae_decoder"]], "testvaedecoderbf16 (class in test_vae_decoder_bf16)": [[298, "test_vae_decoder_bf16.TestVaeDecoderBF16"]], "setupclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[298, "test_vae_decoder_bf16.TestVaeDecoderBF16.setUpClass"]], "teardownclass() (test_vae_decoder_bf16.testvaedecoderbf16 class method)": [[298, "test_vae_decoder_bf16.TestVaeDecoderBF16.tearDownClass"]], "test_vae_decoder_bf16": [[298, "module-test_vae_decoder_bf16"]], "testweightsharingacc (class in test_weight_sharing_acc)": [[299, "test_weight_sharing_acc.TestWeightSharingAcc"]], "setupclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[299, "test_weight_sharing_acc.TestWeightSharingAcc.setUpClass"]], "teardownclass() (test_weight_sharing_acc.testweightsharingacc class method)": [[299, "test_weight_sharing_acc.TestWeightSharingAcc.tearDownClass"]], "test_weight_sharing_acc": [[299, "module-test_weight_sharing_acc"]], "testweightsharingdispatchertuningacc (class in test_weight_sharing_dispatcher_tuning_acc)": [[300, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc"]], "setupclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[300, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_acc.testweightsharingdispatchertuningacc class method)": [[300, "test_weight_sharing_dispatcher_tuning_acc.TestWeightSharingDispatcherTuningAcc.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_acc": [[300, "module-test_weight_sharing_dispatcher_tuning_acc"]], "testweightsharingdispatchertuningthroughput (class in test_weight_sharing_dispatcher_tuning_throughtput)": [[301, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput"]], "setupclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[301, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_dispatcher_tuning_throughtput.testweightsharingdispatchertuningthroughput class method)": [[301, "test_weight_sharing_dispatcher_tuning_throughtput.TestWeightSharingDispatcherTuningThroughput.tearDownClass"]], "test_weight_sharing_dispatcher_tuning_throughtput": [[301, "module-test_weight_sharing_dispatcher_tuning_throughtput"]], "testweightsharingthroughput (class in test_weight_sharing_throughput)": [[302, "test_weight_sharing_throughput.TestWeightSharingThroughput"]], "setupclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[302, "test_weight_sharing_throughput.TestWeightSharingThroughput.setUpClass"]], "teardownclass() (test_weight_sharing_throughput.testweightsharingthroughput class method)": [[302, "test_weight_sharing_throughput.TestWeightSharingThroughput.tearDownClass"]], "test_weight_sharing_throughput": [[302, "module-test_weight_sharing_throughput"]], "cpu_instance (c macro)": [[311, "c.CPU_INSTANCE"]], "null_instance (c macro)": [[311, "c.NULL_INSTANCE"]], "jd (c++ type)": [[311, "_CPPv42jd"], [312, "_CPPv42jd"], [313, "_CPPv42jd"], [314, "_CPPv42jd"]], "jd::cpu_engine_t (c++ class)": [[311, "_CPPv4N2jd12cpu_engine_tE"]], "jd::cpu_engine_t::cpu_engine_t (c++ function)": [[311, "_CPPv4N2jd12cpu_engine_t12cpu_engine_tEv"]], "jd::cpu_engine_t::create_memory_storage (c++ function)": [[311, "_CPPv4NK2jd12cpu_engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::cpu_engine_t::empty_list (c++ member)": [[311, "_CPPv4N2jd12cpu_engine_t10empty_listE"]], "jd::cpu_engine_t::get_implementation_list (c++ function)": [[311, "_CPPv4NK2jd12cpu_engine_t23get_implementation_listERK13operator_desc"]], "jd::cpu_engine_t::~cpu_engine_t (c++ function)": [[311, "_CPPv4N2jd12cpu_engine_tD0Ev"]], "jd::engine_t (c++ class)": [[311, "_CPPv4N2jd8engine_tE"]], "jd::engine_t::create_kernel (c++ function)": [[311, "_CPPv4NK2jd8engine_t13create_kernelERK13operator_descRNSt10shared_ptrI8kernel_tEEPK8stream_t"]], "jd::engine_t::create_memory_storage (c++ function)": [[311, "_CPPv4NK2jd8engine_t21create_memory_storageEPP16memory_storage_t"]], "jd::engine_t::create_stream (c++ function)": [[311, "_CPPv4NK2jd8engine_t13create_streamEPP8stream_t"]], "jd::engine_t::engine_kind_ (c++ member)": [[311, "_CPPv4N2jd8engine_t12engine_kind_E"]], "jd::engine_t::engine_t (c++ function)": [[311, "_CPPv4N2jd8engine_t8engine_tERK11engine_kindRK12runtime_kind"]], "jd::engine_t::get_engine_kind (c++ function)": [[311, "_CPPv4NK2jd8engine_t15get_engine_kindEv"]], "jd::engine_t::get_implementation_list (c++ function)": [[311, "_CPPv4NK2jd8engine_t23get_implementation_listERK13operator_desc"]], "jd::engine_t::get_runtime_kind (c++ function)": [[311, "_CPPv4NK2jd8engine_t16get_runtime_kindEv"]], "jd::engine_t::runtime_kind_ (c++ member)": [[311, "_CPPv4N2jd8engine_t13runtime_kind_E"]], "jd::engine_t::~engine_t (c++ function)": [[311, "_CPPv4N2jd8engine_tD0Ev"]], "jd::attention (c++ class)": [[312, "_CPPv4N2jd9attentionE"]], "jd::attention::attention (c++ function)": [[312, "_CPPv4N2jd9attention9attentionERK17kernel_desc_proxy"], [312, "_CPPv4N2jd9attention9attentionEv"]], "jd::attention::~attention (c++ function)": [[312, "_CPPv4N2jd9attentionD0Ev"]], "jd::attention_desc (c++ class)": [[312, "_CPPv4N2jd14attention_descE"]], "jd::attention_desc::attention_desc (c++ function)": [[312, "_CPPv4N2jd14attention_desc14attention_descERK13operator_desc"], [312, "_CPPv4N2jd14attention_desc14attention_descEv"]], "jd::attention_desc::~attention_desc (c++ function)": [[312, "_CPPv4N2jd14attention_descD0Ev"]], "jd::dyn_quantize_mha (c++ class)": [[312, "_CPPv4N2jd16dyn_quantize_mhaE"]], "jd::dyn_quantize_mha::dyn_quantize_mha (c++ function)": [[312, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaERK17kernel_desc_proxy"], [312, "_CPPv4N2jd16dyn_quantize_mha16dyn_quantize_mhaEv"]], "jd::dyn_quantize_mha::~dyn_quantize_mha (c++ function)": [[312, "_CPPv4N2jd16dyn_quantize_mhaD0Ev"]], "jd::dyn_quantize_mha_desc (c++ class)": [[312, "_CPPv4N2jd21dyn_quantize_mha_descE"]], "jd::dyn_quantize_mha_desc::dyn_quantize_mha_desc (c++ function)": [[312, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descERK13operator_desc"], [312, "_CPPv4N2jd21dyn_quantize_mha_desc21dyn_quantize_mha_descEv"]], "jd::dyn_quantize_mha_desc::~dyn_quantize_mha_desc (c++ function)": [[312, "_CPPv4N2jd21dyn_quantize_mha_descD0Ev"]], "jd::dynamic_quant (c++ class)": [[312, "_CPPv4N2jd13dynamic_quantE"]], "jd::dynamic_quant::dynamic_quant (c++ function)": [[312, "_CPPv4N2jd13dynamic_quant13dynamic_quantERK17kernel_desc_proxy"], [312, "_CPPv4N2jd13dynamic_quant13dynamic_quantEv"]], "jd::dynamic_quant::~dynamic_quant (c++ function)": [[312, "_CPPv4N2jd13dynamic_quantD0Ev"]], "jd::dynamic_quant_desc (c++ class)": [[312, "_CPPv4N2jd18dynamic_quant_descE"]], "jd::dynamic_quant_desc::dynamic_quant_desc (c++ function)": [[312, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descERK13operator_desc"], [312, "_CPPv4N2jd18dynamic_quant_desc18dynamic_quant_descEv"]], "jd::dynamic_quant_desc::~dynamic_quant_desc (c++ function)": [[312, "_CPPv4N2jd18dynamic_quant_descD0Ev"]], "jd::dynamic_quant_matmul (c++ class)": [[312, "_CPPv4N2jd20dynamic_quant_matmulE"]], "jd::dynamic_quant_matmul::dynamic_quant_matmul (c++ function)": [[312, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulERK17kernel_desc_proxy"], [312, "_CPPv4N2jd20dynamic_quant_matmul20dynamic_quant_matmulEv"]], "jd::dynamic_quant_matmul::~dynamic_quant_matmul (c++ function)": [[312, "_CPPv4N2jd20dynamic_quant_matmulD0Ev"]], "jd::dynamic_quant_matmul_desc (c++ class)": [[312, "_CPPv4N2jd25dynamic_quant_matmul_descE"]], "jd::dynamic_quant_matmul_desc::dynamic_quant_matmul_desc (c++ function)": [[312, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descERK13operator_desc"], [312, "_CPPv4N2jd25dynamic_quant_matmul_desc25dynamic_quant_matmul_descEv"]], "jd::dynamic_quant_matmul_desc::~dynamic_quant_matmul_desc (c++ function)": [[312, "_CPPv4N2jd25dynamic_quant_matmul_descD0Ev"]], "jd::eltwiseop (c++ class)": [[312, "_CPPv4N2jd9eltwiseopE"]], "jd::eltwiseop::eltwiseop (c++ function)": [[312, "_CPPv4N2jd9eltwiseop9eltwiseopERK17kernel_desc_proxy"], [312, "_CPPv4N2jd9eltwiseop9eltwiseopEv"]], "jd::eltwiseop::~eltwiseop (c++ function)": [[312, "_CPPv4N2jd9eltwiseopD0Ev"]], "jd::eltwiseop_desc (c++ class)": [[312, "_CPPv4N2jd14eltwiseop_descE"]], "jd::eltwiseop_desc::eltwiseop_desc (c++ function)": [[312, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descERK13operator_desc"], [312, "_CPPv4N2jd14eltwiseop_desc14eltwiseop_descEv"]], "jd::eltwiseop_desc::~eltwiseop_desc (c++ function)": [[312, "_CPPv4N2jd14eltwiseop_descD0Ev"]], "jd::gather (c++ class)": [[312, "_CPPv4N2jd6gatherE"]], "jd::gather::gather (c++ function)": [[312, "_CPPv4N2jd6gather6gatherERK17kernel_desc_proxy"], [312, "_CPPv4N2jd6gather6gatherEv"]], "jd::gather::~gather (c++ function)": [[312, "_CPPv4N2jd6gatherD0Ev"]], "jd::gather_desc (c++ class)": [[312, "_CPPv4N2jd11gather_descE"]], "jd::gather_desc::gather_desc (c++ function)": [[312, "_CPPv4N2jd11gather_desc11gather_descERK13operator_desc"], [312, "_CPPv4N2jd11gather_desc11gather_descEv"]], "jd::gather_desc::~gather_desc (c++ function)": [[312, "_CPPv4N2jd11gather_descD0Ev"]], "jd::kernel_desc_proxy (c++ class)": [[312, "_CPPv4N2jd17kernel_desc_proxyE"]], "jd::kernel_desc_proxy::create_proxy_object (c++ function)": [[312, "_CPPv4N2jd17kernel_desc_proxy19create_proxy_objectERNSt10shared_ptrIK13kernel_desc_tEERK13operator_desc"]], "jd::kernel_desc_proxy::impl_list_ (c++ member)": [[312, "_CPPv4N2jd17kernel_desc_proxy10impl_list_E"]], "jd::kernel_desc_proxy::kernel_desc_proxy (c++ function)": [[312, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyERK13operator_desc"], [312, "_CPPv4N2jd17kernel_desc_proxy17kernel_desc_proxyEv"]], "jd::kernel_desc_proxy::kernel_kind (c++ function)": [[312, "_CPPv4NK2jd17kernel_desc_proxy11kernel_kindEv"]], "jd::kernel_desc_proxy::~kernel_desc_proxy (c++ function)": [[312, "_CPPv4N2jd17kernel_desc_proxyD0Ev"]], "jd::kernel_proxy (c++ class)": [[312, "_CPPv4N2jd12kernel_proxyE"]], "jd::kernel_proxy::create_proxy_object (c++ function)": [[312, "_CPPv4N2jd12kernel_proxy19create_proxy_objectERNSt10shared_ptrIK8kernel_tEERKNSt10shared_ptrIK13kernel_desc_tEE"]], "jd::kernel_proxy::execute (c++ function)": [[312, "_CPPv4NK2jd12kernel_proxy7executeERKNSt6vectorIPKvEE"]], "jd::kernel_proxy::get_workspace_size (c++ function)": [[312, "_CPPv4NK2jd12kernel_proxy18get_workspace_sizeEv"]], "jd::kernel_proxy::kernel_kind (c++ function)": [[312, "_CPPv4NK2jd12kernel_proxy11kernel_kindEv"]], "jd::kernel_proxy::kernel_proxy (c++ function)": [[312, "_CPPv4N2jd12kernel_proxy12kernel_proxyERK17kernel_desc_proxy"], [312, "_CPPv4N2jd12kernel_proxy12kernel_proxyEv"]], "jd::kernel_proxy::~kernel_proxy (c++ function)": [[312, "_CPPv4N2jd12kernel_proxyD0Ev"]], "jd::layernorm_ba (c++ class)": [[312, "_CPPv4N2jd12layernorm_baE"]], "jd::layernorm_ba::layernorm_ba (c++ function)": [[312, "_CPPv4N2jd12layernorm_ba12layernorm_baERK17kernel_desc_proxy"], [312, "_CPPv4N2jd12layernorm_ba12layernorm_baEv"]], "jd::layernorm_ba::~layernorm_ba (c++ function)": [[312, "_CPPv4N2jd12layernorm_baD0Ev"]], "jd::layernorm_ba_desc (c++ class)": [[312, "_CPPv4N2jd17layernorm_ba_descE"]], "jd::layernorm_ba_desc::layernorm_ba_desc (c++ function)": [[312, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descERK13operator_desc"], [312, "_CPPv4N2jd17layernorm_ba_desc17layernorm_ba_descEv"]], "jd::layernorm_ba_desc::~layernorm_ba_desc (c++ function)": [[312, "_CPPv4N2jd17layernorm_ba_descD0Ev"]], "jd::layernormalized_spmm (c++ class)": [[312, "_CPPv4N2jd20layernormalized_spmmE"]], "jd::layernormalized_spmm::layernormalized_spmm (c++ function)": [[312, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmERK17kernel_desc_proxy"], [312, "_CPPv4N2jd20layernormalized_spmm20layernormalized_spmmEv"]], "jd::layernormalized_spmm::~layernormalized_spmm (c++ function)": [[312, "_CPPv4N2jd20layernormalized_spmmD0Ev"]], "jd::layernormalized_spmm_desc (c++ class)": [[312, "_CPPv4N2jd25layernormalized_spmm_descE"]], "jd::layernormalized_spmm_desc::layernormalized_spmm_desc (c++ function)": [[312, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descERK13operator_desc"], [312, "_CPPv4N2jd25layernormalized_spmm_desc25layernormalized_spmm_descEv"]], "jd::layernormalized_spmm_desc::~layernormalized_spmm_desc (c++ function)": [[312, "_CPPv4N2jd25layernormalized_spmm_descD0Ev"]], "jd::logsoftmax (c++ class)": [[312, "_CPPv4N2jd10logsoftmaxE"]], "jd::logsoftmax::logsoftmax (c++ function)": [[312, "_CPPv4N2jd10logsoftmax10logsoftmaxERK17kernel_desc_proxy"], [312, "_CPPv4N2jd10logsoftmax10logsoftmaxEv"]], "jd::logsoftmax::~logsoftmax (c++ function)": [[312, "_CPPv4N2jd10logsoftmaxD0Ev"]], "jd::logsoftmax_desc (c++ class)": [[312, "_CPPv4N2jd15logsoftmax_descE"]], "jd::logsoftmax_desc::logsoftmax_desc (c++ function)": [[312, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descERK13operator_desc"], [312, "_CPPv4N2jd15logsoftmax_desc15logsoftmax_descEv"]], "jd::logsoftmax_desc::~logsoftmax_desc (c++ function)": [[312, "_CPPv4N2jd15logsoftmax_descD0Ev"]], "jd::mha_dense (c++ class)": [[312, "_CPPv4N2jd9mha_denseE"]], "jd::mha_dense::mha_dense (c++ function)": [[312, "_CPPv4N2jd9mha_dense9mha_denseERK17kernel_desc_proxy"], [312, "_CPPv4N2jd9mha_dense9mha_denseEv"]], "jd::mha_dense::~mha_dense (c++ function)": [[312, "_CPPv4N2jd9mha_denseD0Ev"]], "jd::mha_dense_desc (c++ class)": [[312, "_CPPv4N2jd14mha_dense_descE"]], "jd::mha_dense_desc::mha_dense_desc (c++ function)": [[312, "_CPPv4N2jd14mha_dense_desc14mha_dense_descERK13operator_desc"], [312, "_CPPv4N2jd14mha_dense_desc14mha_dense_descEv"]], "jd::mha_dense_desc::~mha_dense_desc (c++ function)": [[312, "_CPPv4N2jd14mha_dense_descD0Ev"]], "jd::proxy_base (c++ class)": [[312, "_CPPv4I00EN2jd10proxy_baseE"]], "jd::proxy_base::create_proxy_object (c++ function)": [[312, "_CPPv4N2jd10proxy_base19create_proxy_objectERNSt10shared_ptrIK1TEERK5arg_t"]], "jd::proxy_base::data_handle_ (c++ member)": [[312, "_CPPv4N2jd10proxy_base12data_handle_E"]], "jd::proxy_base::get_sp (c++ function)": [[312, "_CPPv4NK2jd10proxy_base6get_spEv"]], "jd::proxy_base::proxy_base (c++ function)": [[312, "_CPPv4N2jd10proxy_base10proxy_baseEv"]], "jd::proxy_base::reset_sp (c++ function)": [[312, "_CPPv4N2jd10proxy_base8reset_spERKNSt10shared_ptrIK1TEE"]], "jd::proxy_base::~proxy_base (c++ function)": [[312, "_CPPv4N2jd10proxy_baseD0Ev"]], "jd::slice (c++ class)": [[312, "_CPPv4N2jd5sliceE"]], "jd::slice::slice (c++ function)": [[312, "_CPPv4N2jd5slice5sliceERK17kernel_desc_proxy"], [312, "_CPPv4N2jd5slice5sliceEv"]], "jd::slice::~slice (c++ function)": [[312, "_CPPv4N2jd5sliceD0Ev"]], "jd::slice_desc (c++ class)": [[312, "_CPPv4N2jd10slice_descE"]], "jd::slice_desc::slice_desc (c++ function)": [[312, "_CPPv4N2jd10slice_desc10slice_descERK13operator_desc"], [312, "_CPPv4N2jd10slice_desc10slice_descEv"]], "jd::slice_desc::~slice_desc (c++ function)": [[312, "_CPPv4N2jd10slice_descD0Ev"]], "jd::softmax (c++ class)": [[312, "_CPPv4N2jd7softmaxE"]], "jd::softmax::softmax (c++ function)": [[312, "_CPPv4N2jd7softmax7softmaxERK17kernel_desc_proxy"], [312, "_CPPv4N2jd7softmax7softmaxEv"]], "jd::softmax::~softmax (c++ function)": [[312, "_CPPv4N2jd7softmaxD0Ev"]], "jd::softmax_desc (c++ class)": [[312, "_CPPv4N2jd12softmax_descE"]], "jd::softmax_desc::softmax_desc (c++ function)": [[312, "_CPPv4N2jd12softmax_desc12softmax_descERK13operator_desc"], [312, "_CPPv4N2jd12softmax_desc12softmax_descEv"]], "jd::softmax_desc::~softmax_desc (c++ function)": [[312, "_CPPv4N2jd12softmax_descD0Ev"]], "jd::sparse_matmul (c++ class)": [[312, "_CPPv4N2jd13sparse_matmulE"]], "jd::sparse_matmul::sparse_matmul (c++ function)": [[312, "_CPPv4N2jd13sparse_matmul13sparse_matmulERK17kernel_desc_proxy"], [312, "_CPPv4N2jd13sparse_matmul13sparse_matmulEv"]], "jd::sparse_matmul::~sparse_matmul (c++ function)": [[312, "_CPPv4N2jd13sparse_matmulD0Ev"]], "jd::sparse_matmul_desc (c++ class)": [[312, "_CPPv4N2jd18sparse_matmul_descE"]], "jd::sparse_matmul_desc::sparse_matmul_desc (c++ function)": [[312, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descERK13operator_desc"], [312, "_CPPv4N2jd18sparse_matmul_desc18sparse_matmul_descEv"]], "jd::sparse_matmul_desc::~sparse_matmul_desc (c++ function)": [[312, "_CPPv4N2jd18sparse_matmul_descD0Ev"]], "jd::transpose_matmul (c++ class)": [[312, "_CPPv4N2jd16transpose_matmulE"]], "jd::transpose_matmul::transpose_matmul (c++ function)": [[312, "_CPPv4N2jd16transpose_matmul16transpose_matmulERK17kernel_desc_proxy"], [312, "_CPPv4N2jd16transpose_matmul16transpose_matmulEv"]], "jd::transpose_matmul::~transpose_matmul (c++ function)": [[312, "_CPPv4N2jd16transpose_matmulD0Ev"]], "jd::transpose_matmul_desc (c++ class)": [[312, "_CPPv4N2jd21transpose_matmul_descE"]], "jd::transpose_matmul_desc::transpose_matmul_desc (c++ function)": [[312, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descERK13operator_desc"], [312, "_CPPv4N2jd21transpose_matmul_desc21transpose_matmul_descEv"]], "jd::transpose_matmul_desc::~transpose_matmul_desc (c++ function)": [[312, "_CPPv4N2jd21transpose_matmul_descD0Ev"]], "jd::transpose_mha (c++ class)": [[312, "_CPPv4N2jd13transpose_mhaE"]], "jd::transpose_mha::transpose_mha (c++ function)": [[312, "_CPPv4N2jd13transpose_mha13transpose_mhaERK17kernel_desc_proxy"], [312, "_CPPv4N2jd13transpose_mha13transpose_mhaEv"]], "jd::transpose_mha::~transpose_mha (c++ function)": [[312, "_CPPv4N2jd13transpose_mhaD0Ev"]], "jd::transpose_mha_desc (c++ class)": [[312, "_CPPv4N2jd18transpose_mha_descE"]], "jd::transpose_mha_desc::transpose_mha_desc (c++ function)": [[312, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descERK13operator_desc"], [312, "_CPPv4N2jd18transpose_mha_desc18transpose_mha_descEv"]], "jd::transpose_mha_desc::~transpose_mha_desc (c++ function)": [[312, "_CPPv4N2jd18transpose_mha_descD0Ev"]], "jd::operator_desc (c++ class)": [[313, "_CPPv4N2jd13operator_descE"]], "jd::operator_desc::apply_postops_list (c++ function)": [[313, "_CPPv4NK2jd13operator_desc18apply_postops_listEv"]], "jd::operator_desc::apply_postops_list_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc19apply_postops_list_E"]], "jd::operator_desc::attrs (c++ function)": [[313, "_CPPv4NK2jd13operator_desc5attrsEv"]], "jd::operator_desc::attrs_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc6attrs_E"]], "jd::operator_desc::binaryop_list_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc14binaryop_list_E"]], "jd::operator_desc::engine_kind (c++ function)": [[313, "_CPPv4NK2jd13operator_desc11engine_kindEv"]], "jd::operator_desc::engine_kind_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc12engine_kind_E"]], "jd::operator_desc::get_binaryop_list (c++ function)": [[313, "_CPPv4NK2jd13operator_desc17get_binaryop_listEv"]], "jd::operator_desc::impl_nthr (c++ function)": [[313, "_CPPv4NK2jd13operator_desc9impl_nthrEv"]], "jd::operator_desc::impl_nthr_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc10impl_nthr_E"]], "jd::operator_desc::ker_kind_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc9ker_kind_E"]], "jd::operator_desc::ker_prop_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc9ker_prop_E"]], "jd::operator_desc::kernel_kind (c++ function)": [[313, "_CPPv4NK2jd13operator_desc11kernel_kindEv"]], "jd::operator_desc::kernel_prop (c++ function)": [[313, "_CPPv4NK2jd13operator_desc11kernel_propEv"]], "jd::operator_desc::operator== (c++ function)": [[313, "_CPPv4NK2jd13operator_desceqERK13operator_desc"]], "jd::operator_desc::operator_desc (c++ function)": [[313, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKN2jd12runtime_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [313, "_CPPv4N2jd13operator_desc13operator_descERKN2jd11kernel_kindERKN2jd11kernel_propERKN2jd11engine_kindERKNSt6vectorI11tensor_descEERKNSt13unordered_mapINSt6stringENSt6stringEEERKNSt6vectorI11postop_attrEE"], [313, "_CPPv4N2jd13operator_desc13operator_descEv"]], "jd::operator_desc::runtime_kind (c++ function)": [[313, "_CPPv4NK2jd13operator_desc12runtime_kindEv"]], "jd::operator_desc::runtime_kind_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc13runtime_kind_E"]], "jd::operator_desc::set_binaryop_list (c++ function)": [[313, "_CPPv4N2jd13operator_desc17set_binaryop_listERKNSt6vectorI13binaryop_attrEE"]], "jd::operator_desc::tensor_descs (c++ function)": [[313, "_CPPv4NK2jd13operator_desc12tensor_descsEv"]], "jd::operator_desc::ts_descs_ (c++ member)": [[313, "_CPPv4N2jd13operator_desc9ts_descs_E"]], "jd::operator_desc::~operator_desc (c++ function)": [[313, "_CPPv4N2jd13operator_descD0Ev"]], "jd::attention_io (c++ enum)": [[314, "_CPPv4N2jd12attention_ioE"]], "jd::attention_io::k_bias (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io6K_BIASE"]], "jd::attention_io::k_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8K_SCALESE"]], "jd::attention_io::k_weight (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8K_WEIGHTE"]], "jd::attention_io::merge_dst (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io9MERGE_DSTE"]], "jd::attention_io::merge_src (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io9MERGE_SRCE"]], "jd::attention_io::qk_v_output_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io18QK_V_OUTPUT_SCALESE"]], "jd::attention_io::qk_v_output_zero_point (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io22QK_V_OUTPUT_ZERO_POINTE"]], "jd::attention_io::q_bias (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io6Q_BIASE"]], "jd::attention_io::q_k_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io10Q_K_SCALESE"]], "jd::attention_io::q_k_src2 (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8Q_K_SRC2E"]], "jd::attention_io::q_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8Q_SCALESE"]], "jd::attention_io::q_weight (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8Q_WEIGHTE"]], "jd::attention_io::reshape_input (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io13RESHAPE_INPUTE"]], "jd::attention_io::v_bias (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io6V_BIASE"]], "jd::attention_io::v_scales (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8V_SCALESE"]], "jd::attention_io::v_weight (c++ enumerator)": [[314, "_CPPv4N2jd12attention_io8V_WEIGHTE"]], "jd::ssd (c++ type)": [[314, "_CPPv4N2jd3ssdE"]], "jd::ssd::bias (c++ member)": [[314, "_CPPv4N2jd3ssd4BIASE"]], "jd::ssd::dst (c++ member)": [[314, "_CPPv4N2jd3ssd3DSTE"]], "jd::ssd::dst_m1 (c++ member)": [[314, "_CPPv4N2jd3ssd6DST_M1E"]], "jd::ssd::dst_m2 (c++ member)": [[314, "_CPPv4N2jd3ssd6DST_M2E"]], "jd::ssd::scales (c++ member)": [[314, "_CPPv4N2jd3ssd6SCALESE"]], "jd::ssd::src (c++ member)": [[314, "_CPPv4N2jd3ssd3SRCE"]], "jd::ssd::wei (c++ member)": [[314, "_CPPv4N2jd3ssd3WEIE"]], "jd::ssd::work_space (c++ member)": [[314, "_CPPv4N2jd3ssd10WORK_SPACEE"]], "jd::ssd::amx_bf16_params_t (c++ type)": [[314, "_CPPv4N2jd3ssd17amx_bf16_params_tE"]], "jd::ssd::amx_bf16bf16_inputs_t (c++ type)": [[314, "_CPPv4N2jd3ssd21amx_bf16bf16_inputs_tE"]], "jd::ssd::amx_bf16f32_inputs_t (c++ type)": [[314, "_CPPv4N2jd3ssd20amx_bf16f32_inputs_tE"]], "jd::ssd::amx_inputs_t (c++ struct)": [[314, "_CPPv4I0000EN2jd3ssd12amx_inputs_tE"]], "jd::ssd::amx_inputs_t::bias (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_inputs_t4biasE"]], "jd::ssd::amx_inputs_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_inputs_t3dstE"]], "jd::ssd::amx_inputs_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_inputs_t3srcE"]], "jd::ssd::amx_inputs_t::weight (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_inputs_t6weightE"]], "jd::ssd::amx_int8_params_t (c++ type)": [[314, "_CPPv4N2jd3ssd17amx_int8_params_tE"]], "jd::ssd::amx_params_t (c++ struct)": [[314, "_CPPv4I0EN2jd3ssd12amx_params_tE"]], "jd::ssd::amx_params_t::blocks_per_group (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t16blocks_per_groupE"]], "jd::ssd::amx_params_t::blocksize (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t9blocksizeE"]], "jd::ssd::amx_params_t::colidxs (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t7colidxsE"]], "jd::ssd::amx_params_t::group_rowptr (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t12group_rowptrE"]], "jd::ssd::amx_params_t::has_bias (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t8has_biasE"]], "jd::ssd::amx_params_t::nnz_group (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t9nnz_groupE"]], "jd::ssd::amx_params_t::nrowptr (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t7nrowptrE"]], "jd::ssd::amx_params_t::num_tilem (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t9num_tileME"]], "jd::ssd::amx_params_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t12postop_attrsE"]], "jd::ssd::amx_params_t::same_src_dtype (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t14same_src_dtypeE"]], "jd::ssd::amx_params_t::shape (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t5shapeE"]], "jd::ssd::amx_params_t::tilem (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t5tileME"]], "jd::ssd::amx_params_t::tilen (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t5tileNE"]], "jd::ssd::amx_params_t::weight (c++ member)": [[314, "_CPPv4N2jd3ssd12amx_params_t6weightE"]], "jd::ssd::avx512_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd13avx512_data_tE"]], "jd::ssd::avx512_data_t::bias (c++ member)": [[314, "_CPPv4N2jd3ssd13avx512_data_t4biasE"]], "jd::ssd::avx512_data_t::dense (c++ member)": [[314, "_CPPv4N2jd3ssd13avx512_data_t5denseE"]], "jd::ssd::avx512_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd13avx512_data_t3dstE"]], "jd::ssd::avx512_data_t::sparse (c++ member)": [[314, "_CPPv4N2jd3ssd13avx512_data_t6sparseE"]], "jd::ssd::avx512_fp32_params_t (c++ struct)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_tE"]], "jd::ssd::avx512_fp32_params_t::k (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t1KE"]], "jd::ssd::avx512_fp32_params_t::m (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t1ME"]], "jd::ssd::avx512_fp32_params_t::n (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t1NE"]], "jd::ssd::avx512_fp32_params_t::has_bias (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t8has_biasE"]], "jd::ssd::avx512_fp32_params_t::im_end (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t6im_endE"]], "jd::ssd::avx512_fp32_params_t::im_start (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t8im_startE"]], "jd::ssd::avx512_fp32_params_t::in_end (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t6in_endE"]], "jd::ssd::avx512_fp32_params_t::in_start (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t8in_startE"]], "jd::ssd::avx512_fp32_params_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t12postop_attrsE"]], "jd::ssd::avx512_fp32_params_t::sparse_ptr (c++ member)": [[314, "_CPPv4N2jd3ssd20avx512_fp32_params_t10sparse_ptrE"]], "jd::ssd::eltwiseop_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd16eltwiseop_data_tE"]], "jd::ssd::eltwiseop_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd16eltwiseop_data_t3dstE"]], "jd::ssd::eltwiseop_data_t::element_num (c++ member)": [[314, "_CPPv4N2jd3ssd16eltwiseop_data_t11element_numE"]], "jd::ssd::eltwiseop_data_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd16eltwiseop_data_t3srcE"]], "jd::ssd::eltwiseop_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_tE"]], "jd::ssd::eltwiseop_param_t::element_num (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t11element_numE"]], "jd::ssd::eltwiseop_param_t::element_num_each_th (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t19element_num_each_thE"]], "jd::ssd::eltwiseop_param_t::in_dt (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t5in_dtE"]], "jd::ssd::eltwiseop_param_t::out_dt (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t6out_dtE"]], "jd::ssd::eltwiseop_param_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t12postop_attrsE"]], "jd::ssd::eltwiseop_param_t::remain_element (c++ member)": [[314, "_CPPv4N2jd3ssd17eltwiseop_param_t14remain_elementE"]], "jd::ssd::gather_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd13gather_data_tE"]], "jd::ssd::gather_data_t::binaryop_addrs (c++ member)": [[314, "_CPPv4N2jd3ssd13gather_data_t14binaryop_addrsE"]], "jd::ssd::gather_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd13gather_data_t3dstE"]], "jd::ssd::gather_data_t::gather_data_t (c++ function)": [[314, "_CPPv4N2jd3ssd13gather_data_t13gather_data_tEPvPvPv"]], "jd::ssd::gather_data_t::idx (c++ member)": [[314, "_CPPv4N2jd3ssd13gather_data_t3idxE"]], "jd::ssd::gather_data_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd13gather_data_t3srcE"]], "jd::ssd::gather_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd14gather_param_tE"]], "jd::ssd::gather_param_t::binary_ts_sizes (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t15binary_ts_sizesE"]], "jd::ssd::gather_param_t::binaryop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t14binaryop_attrsE"]], "jd::ssd::gather_param_t::dst_axis_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t13dst_axis_sizeE"]], "jd::ssd::gather_param_t::dt (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t2dtE"]], "jd::ssd::gather_param_t::dt_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t7dt_sizeE"]], "jd::ssd::gather_param_t::extend_mask (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t11extend_maskE"]], "jd::ssd::gather_param_t::idx_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t8idx_sizeE"]], "jd::ssd::gather_param_t::inner_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t10inner_sizeE"]], "jd::ssd::gather_param_t::loops (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t5loopsE"]], "jd::ssd::gather_param_t::mask (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t4maskE"]], "jd::ssd::gather_param_t::outer_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t10outer_sizeE"]], "jd::ssd::gather_param_t::remain (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t6remainE"]], "jd::ssd::gather_param_t::src_axis_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t13src_axis_sizeE"]], "jd::ssd::gather_param_t::src_size (c++ member)": [[314, "_CPPv4N2jd3ssd14gather_param_t8src_sizeE"]], "jd::ssd::layernorm_ba_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_tE"]], "jd::ssd::layernorm_ba_data_t::[anonymous] (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_tUt1_6E"]], "jd::ssd::layernorm_ba_data_t::alpha (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t5alphaE"]], "jd::ssd::layernorm_ba_data_t::beta (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t4betaE"]], "jd::ssd::layernorm_ba_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3dstE"]], "jd::ssd::layernorm_ba_data_t::dst2 (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t4dst2E"]], "jd::ssd::layernorm_ba_data_t::eps (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3epsE"]], "jd::ssd::layernorm_ba_data_t::mean (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t4meanE"]], "jd::ssd::layernorm_ba_data_t::n (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t1nE"]], "jd::ssd::layernorm_ba_data_t::one (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3oneE"]], "jd::ssd::layernorm_ba_data_t::process_row (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t11process_rowE"]], "jd::ssd::layernorm_ba_data_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3srcE"]], "jd::ssd::layernorm_ba_data_t::var (c++ member)": [[314, "_CPPv4N2jd3ssd19layernorm_ba_data_t3varE"]], "jd::ssd::layernorm_ba_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_tE"]], "jd::ssd::layernorm_ba_param_t::batch_num (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t9batch_numE"]], "jd::ssd::layernorm_ba_param_t::binaryop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t14binaryop_attrsE"]], "jd::ssd::layernorm_ba_param_t::col_num (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t7col_numE"]], "jd::ssd::layernorm_ba_param_t::direct_process_row (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t18direct_process_rowE"]], "jd::ssd::layernorm_ba_param_t::input_dt (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t8input_dtE"]], "jd::ssd::layernorm_ba_param_t::ker_per_batch (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t13ker_per_batchE"]], "jd::ssd::layernorm_ba_param_t::output2_dt (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t10output2_dtE"]], "jd::ssd::layernorm_ba_param_t::output_dt (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t9output_dtE"]], "jd::ssd::layernorm_ba_param_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t12postop_attrsE"]], "jd::ssd::layernorm_ba_param_t::process_batch_per_ker (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t21process_batch_per_kerE"]], "jd::ssd::layernorm_ba_param_t::process_col (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t11process_colE"]], "jd::ssd::layernorm_ba_param_t::row_num (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t7row_numE"]], "jd::ssd::layernorm_ba_param_t::spec_type (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t9spec_typeE"]], "jd::ssd::layernorm_ba_param_t::split_output (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t12split_outputE"]], "jd::ssd::layernorm_ba_param_t::thread_elt_offset (c++ member)": [[314, "_CPPv4N2jd3ssd20layernorm_ba_param_t17thread_elt_offsetE"]], "jd::ssd::matmul_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd13matmul_data_tE"]], "jd::ssd::matmul_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd13matmul_data_t3dstE"]], "jd::ssd::matmul_data_t::src0 (c++ member)": [[314, "_CPPv4N2jd3ssd13matmul_data_t4src0E"]], "jd::ssd::matmul_data_t::src1 (c++ member)": [[314, "_CPPv4N2jd3ssd13matmul_data_t4src1E"]], "jd::ssd::matmul_data_t::src2 (c++ member)": [[314, "_CPPv4N2jd3ssd13matmul_data_t4src2E"]], "jd::ssd::matmul_io (c++ type)": [[314, "_CPPv4N2jd3ssd9matmul_ioE"]], "jd::ssd::matmul_io::io (c++ enum)": [[314, "_CPPv4N2jd3ssd9matmul_io2ioE"]], "jd::ssd::matmul_io::io::dst0 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io4DST0E"]], "jd::ssd::matmul_io::io::scale0 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io6SCALE0E"]], "jd::ssd::matmul_io::io::src0 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io4SRC0E"]], "jd::ssd::matmul_io::io::src1 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io4SRC1E"]], "jd::ssd::matmul_io::io::src2 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io4SRC2E"]], "jd::ssd::matmul_io::io::zp0 (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io3ZP0E"]], "jd::ssd::matmul_io::io::matmul_io_max (c++ enumerator)": [[314, "_CPPv4N2jd3ssd9matmul_io2io13matmul_io_MAXE"]], "jd::ssd::matmul_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd14matmul_param_tE"]], "jd::ssd::matmul_param_t::k (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t1KE"]], "jd::ssd::matmul_param_t::m (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t1ME"]], "jd::ssd::matmul_param_t::n (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t1NE"]], "jd::ssd::matmul_param_t::alpha (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t5alphaE"]], "jd::ssd::matmul_param_t::batch (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t5batchE"]], "jd::ssd::matmul_param_t::beta (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t4betaE"]], "jd::ssd::matmul_param_t::m_tile (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t6m_tileE"]], "jd::ssd::matmul_param_t::n_tile (c++ member)": [[314, "_CPPv4N2jd3ssd14matmul_param_t6n_tileE"]], "jd::ssd::matmul_u8_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_tE"]], "jd::ssd::matmul_u8_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t3dstE"]], "jd::ssd::matmul_u8_data_t::scale (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t5scaleE"]], "jd::ssd::matmul_u8_data_t::src0 (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t4src0E"]], "jd::ssd::matmul_u8_data_t::src1 (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t4src1E"]], "jd::ssd::matmul_u8_data_t::zp (c++ member)": [[314, "_CPPv4N2jd3ssd16matmul_u8_data_t2zpE"]], "jd::ssd::mean_var_reduce_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_tE"]], "jd::ssd::mean_var_reduce_data_t::mean_in (c++ member)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7mean_inE"]], "jd::ssd::mean_var_reduce_data_t::mean_out (c++ member)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_t8mean_outE"]], "jd::ssd::mean_var_reduce_data_t::var_in (c++ member)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_t6var_inE"]], "jd::ssd::mean_var_reduce_data_t::var_out (c++ member)": [[314, "_CPPv4N2jd3ssd22mean_var_reduce_data_t7var_outE"]], "jd::ssd::mean_var_reduce_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_tE"]], "jd::ssd::mean_var_reduce_param_t::bm (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BME"]], "jd::ssd::mean_var_reduce_param_t::bn (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t2BNE"]], "jd::ssd::mean_var_reduce_param_t::m (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1ME"]], "jd::ssd::mean_var_reduce_param_t::n (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t1NE"]], "jd::ssd::mean_var_reduce_param_t::element_num (c++ member)": [[314, "_CPPv4N2jd3ssd23mean_var_reduce_param_t11element_numE"]], "jd::ssd::seq_vnni_copy_params (c++ struct)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_paramsE"]], "jd::ssd::seq_vnni_copy_params::dstptr (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params6dstptrE"]], "jd::ssd::seq_vnni_copy_params::dststride (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params9dststrideE"]], "jd::ssd::seq_vnni_copy_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params1kE"]], "jd::ssd::seq_vnni_copy_params::srcptr (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params6srcptrE"]], "jd::ssd::seq_vnni_copy_params::srcstride (c++ member)": [[314, "_CPPv4N2jd3ssd20seq_vnni_copy_params9srcstrideE"]], "jd::ssd::softmax_data_t (c++ struct)": [[314, "_CPPv4N2jd3ssd14softmax_data_tE"]], "jd::ssd::softmax_data_t::dst (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t3dstE"]], "jd::ssd::softmax_data_t::one (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t3oneE"]], "jd::ssd::softmax_data_t::process_vec_num (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t15process_vec_numE"]], "jd::ssd::softmax_data_t::src (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t3srcE"]], "jd::ssd::softmax_data_t::tmp (c++ member)": [[314, "_CPPv4N2jd3ssd14softmax_data_t3tmpE"]], "jd::ssd::softmax_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd15softmax_param_tE"]], "jd::ssd::softmax_param_t::get_lut_exp_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t17get_lut_exp_attrsE"]], "jd::ssd::softmax_param_t::input_dt (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t8input_dtE"]], "jd::ssd::softmax_param_t::output_dt (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t9output_dtE"]], "jd::ssd::softmax_param_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t12postop_attrsE"]], "jd::ssd::softmax_param_t::scalar_num (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t10scalar_numE"]], "jd::ssd::softmax_param_t::sepc_type (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t9sepc_typeE"]], "jd::ssd::softmax_param_t::vec_align_len (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t13vec_align_lenE"]], "jd::ssd::softmax_param_t::vec_num_per_thr (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t15vec_num_per_thrE"]], "jd::ssd::softmax_param_t::vec_num_tail_thr (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t16vec_num_tail_thrE"]], "jd::ssd::softmax_param_t::vec_tail_len (c++ member)": [[314, "_CPPv4N2jd3ssd15softmax_param_t12vec_tail_lenE"]], "jd::ssd::sparse_scheme (c++ enum)": [[314, "_CPPv4N2jd3ssd13sparse_schemeE"]], "jd::ssd::sparse_scheme::dense_x_sparse (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13sparse_scheme14dense_x_sparseE"]], "jd::ssd::sparse_scheme::sparse_x_dense (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13sparse_scheme14sparse_x_denseE"]], "jd::ssd::sparse_scheme::sparse_x_sparse (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13sparse_scheme15sparse_x_sparseE"]], "jd::ssd::sparse_scheme::undef (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13sparse_scheme5undefE"]], "jd::ssd::spec_softmax_type (c++ enum)": [[314, "_CPPv4N2jd3ssd17spec_softmax_typeE"]], "jd::ssd::spec_softmax_type::lut (c++ enumerator)": [[314, "_CPPv4N2jd3ssd17spec_softmax_type3lutE"]], "jd::ssd::spec_translnorm_type (c++ enum)": [[314, "_CPPv4N2jd3ssd20spec_translnorm_typeE"]], "jd::ssd::spec_translnorm_type::direct (c++ enumerator)": [[314, "_CPPv4N2jd3ssd20spec_translnorm_type6directE"]], "jd::ssd::spec_translnorm_type::normal (c++ enumerator)": [[314, "_CPPv4N2jd3ssd20spec_translnorm_type6normalE"]], "jd::ssd::subfunc_level (c++ enum)": [[314, "_CPPv4N2jd3ssd13subfunc_levelE"]], "jd::ssd::subfunc_level::kdims (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13subfunc_level5kdimsE"]], "jd::ssd::subfunc_level::non_kdims (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13subfunc_level9non_kdimsE"]], "jd::ssd::subfunc_level::none (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13subfunc_level4noneE"]], "jd::ssd::subfunc_level::subfunc_level_max (c++ enumerator)": [[314, "_CPPv4N2jd3ssd13subfunc_level17subfunc_level_MAXE"]], "jd::ssd::transpose_copy_params (c++ struct)": [[314, "_CPPv4N2jd3ssd21transpose_copy_paramsE"]], "jd::ssd::transpose_copy_params::dstptr (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params6dstptrE"]], "jd::ssd::transpose_copy_params::dststride (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params9dststrideE"]], "jd::ssd::transpose_copy_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params1kE"]], "jd::ssd::transpose_copy_params::srcptr (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params6srcptrE"]], "jd::ssd::transpose_copy_params::srcstride (c++ member)": [[314, "_CPPv4N2jd3ssd21transpose_copy_params9srcstrideE"]], "jd::ssd::transpose_mha_io (c++ type)": [[314, "_CPPv4N2jd3ssd16transpose_mha_ioE"]], "jd::ssd::transpose_mha_io::io (c++ enum)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2ioE"]], "jd::ssd::transpose_mha_io::io::batch (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5BATCHE"]], "jd::ssd::transpose_mha_io::io::dst (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io3DSTE"]], "jd::ssd::transpose_mha_io::io::head_num (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io8HEAD_NUME"]], "jd::ssd::transpose_mha_io::io::head_size (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io9HEAD_SIZEE"]], "jd::ssd::transpose_mha_io::io::mask (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io4MASKE"]], "jd::ssd::transpose_mha_io::io::scale_dst (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io9SCALE_DSTE"]], "jd::ssd::transpose_mha_io::io::scale_k (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_KE"]], "jd::ssd::transpose_mha_io::io::scale_q (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_QE"]], "jd::ssd::transpose_mha_io::io::scale_v (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io7SCALE_VE"]], "jd::ssd::transpose_mha_io::io::seq_len (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io7SEQ_LENE"]], "jd::ssd::transpose_mha_io::io::sl_pad (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io6SL_PADE"]], "jd::ssd::transpose_mha_io::io::src_k (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_KE"]], "jd::ssd::transpose_mha_io::io::src_q (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_QE"]], "jd::ssd::transpose_mha_io::io::src_v (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5SRC_VE"]], "jd::ssd::transpose_mha_io::io::tmp2m (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io5TMP2ME"]], "jd::ssd::transpose_mha_io::io::zp_dst (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io6ZP_DSTE"]], "jd::ssd::transpose_mha_io::io::transpose_mha_io_max (c++ enumerator)": [[314, "_CPPv4N2jd3ssd16transpose_mha_io2io20transpose_mha_io_MAXE"]], "jd::ssd::transpose_mha_step1_params (c++ struct)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_paramsE"]], "jd::ssd::transpose_mha_step1_params::astep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params5astepE"]], "jd::ssd::transpose_mha_step1_params::batchk (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params6batchkE"]], "jd::ssd::transpose_mha_step1_params::cbatchstep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params10cbatchstepE"]], "jd::ssd::transpose_mha_step1_params::cfg (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params3cfgE"]], "jd::ssd::transpose_mha_step1_params::cstep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params5cstepE"]], "jd::ssd::transpose_mha_step1_params::expsum (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params6expsumE"]], "jd::ssd::transpose_mha_step1_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params1kE"]], "jd::ssd::transpose_mha_step1_params::m (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params1mE"]], "jd::ssd::transpose_mha_step1_params::mata (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matAE"]], "jd::ssd::transpose_mha_step1_params::matb (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matBE"]], "jd::ssd::transpose_mha_step1_params::matc (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matCE"]], "jd::ssd::transpose_mha_step1_params::matd (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params4matDE"]], "jd::ssd::transpose_mha_step1_params::scaleab (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params7scaleABE"]], "jd::ssd::transpose_mha_step1_params::sumstep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step1_params7sumstepE"]], "jd::ssd::transpose_mha_step2_params (c++ struct)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_paramsE"]], "jd::ssd::transpose_mha_step2_params::dstptr (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params6dstptrE"]], "jd::ssd::transpose_mha_step2_params::dststride (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params9dststrideE"]], "jd::ssd::transpose_mha_step2_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params1kE"]], "jd::ssd::transpose_mha_step2_params::srcptr (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params6srcptrE"]], "jd::ssd::transpose_mha_step2_params::srcstride (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params9srcstrideE"]], "jd::ssd::transpose_mha_step2_params::sumptr (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step2_params6sumptrE"]], "jd::ssd::transpose_mha_step3_params (c++ struct)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_paramsE"]], "jd::ssd::transpose_mha_step3_params::astep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params5astepE"]], "jd::ssd::transpose_mha_step3_params::cfg (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params3cfgE"]], "jd::ssd::transpose_mha_step3_params::cstep (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params5cstepE"]], "jd::ssd::transpose_mha_step3_params::k (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params1kE"]], "jd::ssd::transpose_mha_step3_params::mata (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matAE"]], "jd::ssd::transpose_mha_step3_params::matb (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matBE"]], "jd::ssd::transpose_mha_step3_params::matc (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params4matCE"]], "jd::ssd::transpose_mha_step3_params::scaleab (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params7scaleABE"]], "jd::ssd::transpose_mha_step3_params::scalec (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params6scaleCE"]], "jd::ssd::transpose_mha_step3_params::zeropointc (c++ member)": [[314, "_CPPv4N2jd3ssd26transpose_mha_step3_params10zeropointCE"]], "jd::ssd::vnni_data_t (c++ struct)": [[314, "_CPPv4I0EN2jd3ssd11vnni_data_tE"]], "jd::ssd::vnni_data_t::ptr_bias (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t8ptr_biasE"]], "jd::ssd::vnni_data_t::ptr_dense (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t9ptr_denseE"]], "jd::ssd::vnni_data_t::ptr_dst (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t7ptr_dstE"]], "jd::ssd::vnni_data_t::ptr_dst_m1 (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m1E"]], "jd::ssd::vnni_data_t::ptr_dst_m2 (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t10ptr_dst_m2E"]], "jd::ssd::vnni_data_t::ptr_scales (c++ member)": [[314, "_CPPv4N2jd3ssd11vnni_data_t10ptr_scalesE"]], "jd::ssd::vnni_param_t (c++ struct)": [[314, "_CPPv4N2jd3ssd12vnni_param_tE"]], "jd::ssd::vnni_param_t::bm (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t2BME"]], "jd::ssd::vnni_param_t::bn (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t2BNE"]], "jd::ssd::vnni_param_t::append_sum (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t10append_sumE"]], "jd::ssd::vnni_param_t::blocksize (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t9blocksizeE"]], "jd::ssd::vnni_param_t::has_bias (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t8has_biasE"]], "jd::ssd::vnni_param_t::im_start (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t8im_startE"]], "jd::ssd::vnni_param_t::indices (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t7indicesE"]], "jd::ssd::vnni_param_t::indptr (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t6indptrE"]], "jd::ssd::vnni_param_t::output_type (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t11output_typeE"]], "jd::ssd::vnni_param_t::postop_attrs (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t12postop_attrsE"]], "jd::ssd::vnni_param_t::sub_func (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t8sub_funcE"]], "jd::ssd::vnni_param_t::tile_w (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t6tile_wE"]], "jd::ssd::vnni_param_t::weight (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t6weightE"]], "jd::ssd::vnni_param_t::welford (c++ member)": [[314, "_CPPv4N2jd3ssd12vnni_param_t7welfordE"]]}})